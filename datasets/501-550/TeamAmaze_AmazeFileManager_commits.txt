File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1906,7 +1906,8 @@ private FabWithLabelView initFabTitle(
     SpeedDialActionItem.Builder builder =
         new SpeedDialActionItem.Builder(id, icon)
             .setLabel(fabTitle)
-            .setFabBackgroundColor(iconSkin);
+            .setFabBackgroundColor(iconSkin)
+            .setFabImageTintColor(Color.WHITE);
 
     switch (getAppTheme()) {
       case LIGHT:

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1908,7 +1908,8 @@ private FabWithLabelView initFabTitle(
     SpeedDialActionItem.Builder builder =
         new SpeedDialActionItem.Builder(id, icon)
             .setLabel(fabTitle)
-            .setFabBackgroundColor(iconSkin);
+            .setFabBackgroundColor(iconSkin)
+            .setFabImageTintColor(Color.WHITE);
 
     switch (getAppTheme()) {
       case LIGHT:

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1863,7 +1863,7 @@ public TrashBinFile toTrashBinRestoreFile(Context context) {
     TrashBin trashBin = AppConfig.getInstance().getTrashBinInstance();
     for (TrashBinFile trashBinFile : trashBin.listFilesInBin()) {
       if (trashBinFile.getDeletedPath(trashBin.getConfig()).equals(path)) {
-        // finding path to restore to
+        // finding path to restore tof
         return new TrashBinFile(
             getName(context), isDirectory(context), trashBinFile.getPath(), length(context), null);
       }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1863,7 +1863,7 @@ public TrashBinFile toTrashBinRestoreFile(Context context) {
     TrashBin trashBin = AppConfig.getInstance().getTrashBinInstance();
     for (TrashBinFile trashBinFile : trashBin.listFilesInBin()) {
       if (trashBinFile.getDeletedPath(trashBin.getConfig()).equals(path)) {
-        // finding path to restore to
+        // finding path to restore tof
         return new TrashBinFile(
             getName(context), isDirectory(context), trashBinFile.getPath(), length(context), null);
       }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -501,6 +501,7 @@ private void copyFiles(
                         file.isDirectory());
                 try {
                   copyFiles(file, destFile, progressHandler);
+                  destFile.setLastModified(file.lastModified());
                 } catch (IOException e) {
                   throw new IllegalStateException(e); // throw unchecked exception, no throws needed
                 }
@@ -522,6 +523,7 @@ private void copyFiles(
                 AppConfig.toast(c, c.getString(R.string.copy_low_memory));
               },
               ServiceWatcherUtil.UPDATE_POSITION);
+          targetFile.setLastModified(sourceFile.lastModified());
         }
       }
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -117,7 +117,7 @@ public static void decryptFile(
           (dialog, which) -> {
             AppCompatEditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
             decryptIntent.putExtra(EncryptService.TAG_PASSWORD, editText.getText().toString());
-            ServiceWatcherUtil.runService(main.getContext(), decryptIntent);
+            ServiceWatcherUtil.runService(c, decryptIntent);
             dialog.dismiss();
           },
           null);
@@ -142,7 +142,7 @@ public static void decryptFile(
           new DecryptButtonCallbackInterface() {
             @Override
             public void confirm(Intent intent) {
-              ServiceWatcherUtil.runService(main.getContext(), intent);
+              ServiceWatcherUtil.runService(c, intent);
             }
 
             @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -84,7 +84,7 @@ public List<AppDataParcelable> loadInBackground() {
     try {
       androidInfo = packageManager.getPackageInfo("android", PackageManager.GET_SIGNATURES);
     } catch (PackageManager.NameNotFoundException e) {
-      LOG.warn("faield to find android package name while loading apps list", e);
+      LOG.warn("failed to find android package name while loading apps list", e);
     }
 
     for (ApplicationInfo object : apps) {
@@ -99,7 +99,7 @@ public List<AppDataParcelable> loadInBackground() {
       try {
         info = packageManager.getPackageInfo(object.packageName, PackageManager.GET_SIGNATURES);
       } catch (PackageManager.NameNotFoundException e) {
-        LOG.warn("faield to find package name {} while loading apps list", object.packageName, e);
+        LOG.warn("failed to find package name {} while loading apps list", object.packageName, e);
         info = null;
       }
       boolean isSystemApp = isAppInSystemPartition(object) || isSignedBySystem(info, androidInfo);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -1017,9 +1017,9 @@ public static File fromContentUri(@NonNull Uri uri) {
     }
     File pathFile = new File(uri.getPath().substring(FILE_PROVIDER_PREFIX.length() + 1));
     if (!pathFile.exists()) {
-      LOG.warn("failed to navigate to path {}", pathFile.getPath());
+      LOG.warn("Failed to navigate to the initial path: {}", pathFile.getPath());
       pathFile = new File(uri.getPath());
-      LOG.warn("trying to navigate to path {}", pathFile.getPath());
+      LOG.warn("Attempting to navigate to the fallback path: {}", pathFile.getPath());
     }
     return pathFile;
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -84,7 +84,7 @@ public List<AppDataParcelable> loadInBackground() {
     try {
       androidInfo = packageManager.getPackageInfo("android", PackageManager.GET_SIGNATURES);
     } catch (PackageManager.NameNotFoundException e) {
-      LOG.warn("faield to find android package name while loading apps list", e);
+      LOG.warn("failed to find android package name while loading apps list", e);
     }
 
     for (ApplicationInfo object : apps) {
@@ -99,7 +99,7 @@ public List<AppDataParcelable> loadInBackground() {
       try {
         info = packageManager.getPackageInfo(object.packageName, PackageManager.GET_SIGNATURES);
       } catch (PackageManager.NameNotFoundException e) {
-        LOG.warn("faield to find package name {} while loading apps list", object.packageName, e);
+        LOG.warn("failed to find package name {} while loading apps list", object.packageName, e);
         info = null;
       }
       boolean isSystemApp = isAppInSystemPartition(object) || isSignedBySystem(info, androidInfo);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -1017,9 +1017,9 @@ public static File fromContentUri(@NonNull Uri uri) {
     }
     File pathFile = new File(uri.getPath().substring(FILE_PROVIDER_PREFIX.length() + 1));
     if (!pathFile.exists()) {
-      LOG.warn("failed to navigate to path {}", pathFile.getPath());
+      LOG.warn("Failed to navigate to the initial path: {}", pathFile.getPath());
       pathFile = new File(uri.getPath());
-      LOG.warn("trying to navigate to path {}", pathFile.getPath());
+      LOG.warn("Attempting to navigate to the fallback path: {}", pathFile.getPath());
     }
     return pathFile;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -117,7 +117,7 @@ public static void decryptFile(
           (dialog, which) -> {
             AppCompatEditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
             decryptIntent.putExtra(EncryptService.TAG_PASSWORD, editText.getText().toString());
-            ServiceWatcherUtil.runService(main.getContext(), decryptIntent);
+            ServiceWatcherUtil.runService(c, decryptIntent);
             dialog.dismiss();
           },
           null);
@@ -142,7 +142,7 @@ public static void decryptFile(
           new DecryptButtonCallbackInterface() {
             @Override
             public void confirm(Intent intent) {
-              ServiceWatcherUtil.runService(main.getContext(), intent);
+              ServiceWatcherUtil.runService(c, intent);
             }
 
             @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -161,6 +161,7 @@ public LoadFilesListTask(
       case SMB:
         list = listSmb(hFile, mainActivityViewModel, mainFragment);
         break;
+      case FTP:
       case SFTP:
         list = listSftp(mainActivityViewModel);
         break;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -72,8 +72,6 @@ public class GenericCopyUtil {
   private final DataUtils dataUtils = DataUtils.getInstance();
   private final ProgressHandler progressHandler;
 
-  public static final String PATH_FILE_DESCRIPTOR = "/proc/self/fd/";
-
   public static final int DEFAULT_BUFFER_SIZE = 8192;
 
   /*
@@ -82,7 +80,7 @@ public class GenericCopyUtil {
      Cannot modify DEFAULT_BUFFER_SIZE since it's used by other classes, will have undesired
      effect on other functions
   */
-  private static final int DEFAULT_TRANSFER_QUANTUM = 65536;
+  private static final int DEFAULT_TRANSFER_QUANTUM = 1024 * 1024;
 
   public GenericCopyUtil(Context context, ProgressHandler progressHandler) {
     this.mContext = context;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -72,8 +72,6 @@ public class GenericCopyUtil {
   private final DataUtils dataUtils = DataUtils.getInstance();
   private final ProgressHandler progressHandler;
 
-  public static final String PATH_FILE_DESCRIPTOR = "/proc/self/fd/";
-
   public static final int DEFAULT_BUFFER_SIZE = 8192;
 
   /*
@@ -82,7 +80,7 @@ public class GenericCopyUtil {
      Cannot modify DEFAULT_BUFFER_SIZE since it's used by other classes, will have undesired
      effect on other functions
   */
-  private static final int DEFAULT_TRANSFER_QUANTUM = 65536;
+  private static final int DEFAULT_TRANSFER_QUANTUM = 1024 * 1024;
 
   public GenericCopyUtil(Context context, ProgressHandler progressHandler) {
     this.mContext = context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -161,6 +161,7 @@ public LoadFilesListTask(
       case SMB:
         list = listSmb(hFile, mainActivityViewModel, mainFragment);
         break;
+      case FTP:
       case SFTP:
         list = listSftp(mainActivityViewModel);
         break;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -72,8 +72,6 @@ public class GenericCopyUtil {
   private final DataUtils dataUtils = DataUtils.getInstance();
   private final ProgressHandler progressHandler;
 
-  public static final String PATH_FILE_DESCRIPTOR = "/proc/self/fd/";
-
   public static final int DEFAULT_BUFFER_SIZE = 8192;
 
   /*
@@ -82,7 +80,7 @@ public class GenericCopyUtil {
      Cannot modify DEFAULT_BUFFER_SIZE since it's used by other classes, will have undesired
      effect on other functions
   */
-  private static final int DEFAULT_TRANSFER_QUANTUM = 65536;
+  private static final int DEFAULT_TRANSFER_QUANTUM = 1024 * 1024;
 
   public GenericCopyUtil(Context context, ProgressHandler progressHandler) {
     this.mContext = context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -161,6 +161,7 @@ public LoadFilesListTask(
       case SMB:
         list = listSmb(hFile, mainActivityViewModel, mainFragment);
         break;
+      case FTP:
       case SFTP:
         list = listSftp(mainActivityViewModel);
         break;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -501,6 +501,7 @@ private void copyFiles(
                         file.isDirectory());
                 try {
                   copyFiles(file, destFile, progressHandler);
+                  destFile.setLastModified(file.lastModified());
                 } catch (IOException e) {
                   throw new IllegalStateException(e); // throw unchecked exception, no throws needed
                 }
@@ -522,6 +523,7 @@ private void copyFiles(
                 AppConfig.toast(c, c.getString(R.string.copy_low_memory));
               },
               ServiceWatcherUtil.UPDATE_POSITION);
+          targetFile.setLastModified(sourceFile.lastModified());
         }
       }
     }

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -415,6 +415,7 @@ public void revealSearchView() {
     }
 
     mainActivity.showSmokeScreen();
+    mainActivity.hideFab();
 
     animator.setInterpolator(new AccelerateDecelerateInterpolator());
     animator.setDuration(600);
@@ -546,6 +547,7 @@ public void hideSearchView() {
 
     // removing background fade view
     mainActivity.hideSmokeScreen();
+    mainActivity.showFab();
     animator.setInterpolator(new AccelerateDecelerateInterpolator());
     animator.setDuration(600);
     animator.start();

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1003,7 +1003,7 @@ public void goToMain(String path) {
   }
 
   /**
-   * Sets up the main view with the {@link MainFragment}
+   * Sets up the main view with a {@link MainFragment}
    *
    * @param path The path to which to go in the {@link MainFragment}
    * @param hideFab Whether the FAB should be hidden in the new created {@link MainFragment} or not

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -391,6 +391,9 @@ public void revealSearchView() {
     } else {
       // TODO:ViewAnimationUtils.createCircularReveal
       animator = ObjectAnimator.ofFloat(searchViewLayout, "alpha", 0f, 1f);
+
+      searchViewLayout.bringToFront(); // since android:elevation won't work
+      searchViewEditText.requestFocus(); // for keyboard auto-popup
     }
 
     mainActivity.showSmokeScreen();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -391,6 +391,9 @@ public void revealSearchView() {
     } else {
       // TODO:ViewAnimationUtils.createCircularReveal
       animator = ObjectAnimator.ofFloat(searchViewLayout, "alpha", 0f, 1f);
+
+      searchViewLayout.bringToFront(); // since android:elevation won't work
+      searchViewEditText.requestFocus(); // for keyboard auto-popup
     }
 
     mainActivity.showSmokeScreen();

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -46,8 +46,8 @@
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Locale;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.Callable;
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.concurrent.atomic.AtomicReference;
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -441,7 +441,7 @@ public static void restoreFilesDialog(
         new MaterialDialog.Builder(context)
             .title(context.getString(R.string.restore_files))
             .customView(dialogView, true)
-            .theme(appTheme.getMaterialDialogTheme(context))
+            .theme(appTheme.getMaterialDialogTheme())
             .negativeText(context.getString(R.string.cancel).toUpperCase())
             .positiveText(context.getString(R.string.done).toUpperCase())
             .positiveColor(accentColor)

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -46,8 +46,8 @@
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Locale;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.Callable;
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.concurrent.atomic.AtomicReference;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -46,8 +46,8 @@
 import java.util.EnumSet;
 import java.util.List;
 import java.util.Locale;
-import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.Callable;
+import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.concurrent.atomic.AtomicReference;
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -441,7 +441,7 @@ public static void restoreFilesDialog(
         new MaterialDialog.Builder(context)
             .title(context.getString(R.string.restore_files))
             .customView(dialogView, true)
-            .theme(appTheme.getMaterialDialogTheme(context))
+            .theme(appTheme.getMaterialDialogTheme())
             .negativeText(context.getString(R.string.cancel).toUpperCase())
             .positiveText(context.getString(R.string.done).toUpperCase())
             .positiveColor(accentColor)

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -441,7 +441,7 @@ public static void restoreFilesDialog(
         new MaterialDialog.Builder(context)
             .title(context.getString(R.string.restore_files))
             .customView(dialogView, true)
-            .theme(appTheme.getMaterialDialogTheme(context))
+            .theme(appTheme.getMaterialDialogTheme())
             .negativeText(context.getString(R.string.cancel).toUpperCase())
             .positiveText(context.getString(R.string.done).toUpperCase())
             .positiveColor(accentColor)

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -441,7 +441,7 @@ public static void restoreFilesDialog(
         new MaterialDialog.Builder(context)
             .title(context.getString(R.string.restore_files))
             .customView(dialogView, true)
-            .theme(appTheme.getMaterialDialogTheme(context))
+            .theme(appTheme.getMaterialDialogTheme())
             .negativeText(context.getString(R.string.cancel).toUpperCase())
             .positiveText(context.getString(R.string.done).toUpperCase())
             .positiveColor(accentColor)

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -346,7 +346,8 @@ public void afterTextChanged(@NonNull Editable s) {
           }
           SmbFile smbFile;
           String domaind = domain.getText().toString();
-          if (chkSmbAnonymous.isChecked())
+          if (chkSmbAnonymous.isChecked()
+              || (TextUtils.isEmpty(user.getText()) && TextUtils.isEmpty(pass.getText())))
             smbFile = createSMBPath(new String[] {ipa, "", "", domaind, sShare}, true, false);
           else {
             String useraw = user.getText().toString();

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -346,7 +346,8 @@ public void afterTextChanged(@NonNull Editable s) {
           }
           SmbFile smbFile;
           String domaind = domain.getText().toString();
-          if (chkSmbAnonymous.isChecked())
+          if (chkSmbAnonymous.isChecked()
+              || (TextUtils.isEmpty(user.getText()) && TextUtils.isEmpty(pass.getText())))
             smbFile = createSMBPath(new String[] {ipa, "", "", domaind, sShare}, true, false);
           else {
             String useraw = user.getText().toString();

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -149,7 +149,8 @@ public boolean isDirectory() {
 
   @Override
   public boolean isDirectory(Context context) {
-    return isDirectory;
+    if (isSmb() || isSftp()) return isDirectory;
+    else return super.isDirectory(context);
   }
 
   public boolean isHidden() {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -424,7 +424,7 @@ private void updateViews(
    * @param positions
    * @param appTheme
    */
-  @SuppressWarnings("ConstantConditions")
+  @SuppressWarnings({"ConstantConditions", "PMD.NPathComplexity"})
   public static void restoreFilesDialog(
       @NonNull final Context context,
       @NonNull final MainActivity mainActivity,

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -113,7 +113,7 @@ protected final AsyncTaskResult<Boolean> doInBackground(
       }
 
       // delete file from media database
-      if (!file.isSmb())
+      if (!file.isSmb() && !file.isSftp())
         MediaConnectionUtils.scanFile(
             applicationContext, files.toArray(new HybridFile[files.size()]));
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -48,7 +48,7 @@ public class LayoutElementParcelable implements Parcelable {
   public final String permissions;
   public final String symlink;
   public String size;
-  public final boolean isDirectory;
+  public boolean isDirectory;
   public long date, longSize;
   public String dateModification;
   public final boolean header;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -594,6 +594,7 @@ else if (cursor.getCount() > 0 && cursor.moveToFirst()) {
         element.longSize = trashBinFile.getSizeBytes();
         element.size = Formatter.formatFileSize(context, trashBinFile.getSizeBytes());
         element.dateModification = Utils.getDate(context, trashBinFile.getDeleteTime() * 1000);
+        element.isDirectory = trashBinFile.isDirectory();
         deletedFiles.add(element);
       }
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1644,7 +1644,7 @@ public LayoutElementParcelable generateLayoutElement(@NonNull Context c, boolean
                   0,
                   true,
                   file.lastModified() + "",
-                  false,
+                  file.isDirectory(),
                   showThumbs,
                   mode);
         } else {

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -124,6 +124,7 @@ public void onCreate(Bundle savedInstanceState) {
     // downButton.setEnabled(false);
 
     if (getSupportActionBar() != null) {
+      boolean useNewStack = getBoolean(PREFERENCE_TEXTEDITOR_NEWSTACK);
       getSupportActionBar().setDisplayHomeAsUpEnabled(!useNewStack);
     }
     mainTextView = findViewById(R.id.textEditorMainEditText);

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -344,6 +344,7 @@ public synchronized CloudStorage getAccount(OpenMode serviceType) {
           if (storage instanceof OneDrive) return storage;
           break;
         default:
+          LOG.error("Unable to determine service type of storage {}", storage);
           return null;
       }
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -461,7 +462,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -105,7 +105,7 @@ public static OutputStream getOutputStream(final File target, Context context)
   /** Writes uri stream from external application to the specified path */
   public static final void writeUriToStorage(
       @NonNull final MainActivity mainActivity,
-      @NonNull final ArrayList<Uri> uris,
+      @NonNull final List<Uri> uris,
       @NonNull final ContentResolver contentResolver,
       @NonNull final String currentPath) {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -716,7 +717,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1403,7 +1404,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -104,7 +104,7 @@ private void generateActivity(Intent intent) {
         Robolectric.buildActivity(TextEditorActivity.class, intent).create().start().visible();
 
     TextEditorActivity activity = controller.get();
-    text = activity.findViewById(R.id.fname);
+    text = activity.findViewById(R.id.textEditorMainEditText);
     activity.onDestroy();
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -461,7 +462,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -105,7 +105,7 @@ public static OutputStream getOutputStream(final File target, Context context)
   /** Writes uri stream from external application to the specified path */
   public static final void writeUriToStorage(
       @NonNull final MainActivity mainActivity,
-      @NonNull final ArrayList<Uri> uris,
+      @NonNull final List<Uri> uris,
       @NonNull final ContentResolver contentResolver,
       @NonNull final String currentPath) {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -716,7 +717,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1403,7 +1404,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -104,7 +104,7 @@ private void generateActivity(Intent intent) {
         Robolectric.buildActivity(TextEditorActivity.class, intent).create().start().visible();
 
     TextEditorActivity activity = controller.get();
-    text = activity.findViewById(R.id.fname);
+    text = activity.findViewById(R.id.textEditorMainEditText);
     activity.onDestroy();
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -47,7 +47,7 @@
 /**
  * AsyncTask that moves files from source to destination by trying to rename files first, if they're
  * in the same filesystem, else starting the copy service. Be advised - do not start this AsyncTask
- * directly but use {@link PrepareCopyTask} instead
+ * directly but use {@link PreparePasteTask} instead
  */
 public class MoveFiles implements Callable<MoveFilesReturn> {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -461,7 +462,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -105,7 +105,7 @@ public static OutputStream getOutputStream(final File target, Context context)
   /** Writes uri stream from external application to the specified path */
   public static final void writeUriToStorage(
       @NonNull final MainActivity mainActivity,
-      @NonNull final ArrayList<Uri> uris,
+      @NonNull final List<Uri> uris,
       @NonNull final ContentResolver contentResolver,
       @NonNull final String currentPath) {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -716,7 +717,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1403,7 +1404,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -104,7 +104,7 @@ private void generateActivity(Intent intent) {
         Robolectric.buildActivity(TextEditorActivity.class, intent).create().start().visible();
 
     TextEditorActivity activity = controller.get();
-    text = activity.findViewById(R.id.fname);
+    text = activity.findViewById(R.id.textEditorMainEditText);
     activity.onDestroy();
   }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -566,7 +566,7 @@ public String getParent(Context context) {
           return parent;
         }
       default:
-        if (getPath().length() == getName(context).length()) {
+        if (getPath().length() <= getName(context).length()) {
           return null;
         }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -105,7 +105,7 @@ public static OutputStream getOutputStream(final File target, Context context)
   /** Writes uri stream from external application to the specified path */
   public static final void writeUriToStorage(
       @NonNull final MainActivity mainActivity,
-      @NonNull final ArrayList<Uri> uris,
+      @NonNull final List<Uri> uris,
       @NonNull final ContentResolver contentResolver,
       @NonNull final String currentPath) {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -47,7 +47,7 @@
 /**
  * AsyncTask that moves files from source to destination by trying to rename files first, if they're
  * in the same filesystem, else starting the copy service. Be advised - do not start this AsyncTask
- * directly but use {@link PrepareCopyTask} instead
+ * directly but use {@link PreparePasteTask} instead
  */
 public class MoveFiles implements Callable<MoveFilesReturn> {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -461,7 +462,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -716,7 +717,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -324,7 +324,7 @@ public class MainActivity extends PermissionsActivity
   public static final int REQUEST_CODE_CLOUD_LIST_KEY = 5472;
 
   private PasteHelper pasteHelper;
-  private MainActivityActionMode mainActivityActionMode;
+  public MainActivityActionMode mainActivityActionMode;
 
   private static final String DEFAULT_FALLBACK_STORAGE_PATH = "/storage/sdcard0";
   private static final String INTERNAL_SHARED_STORAGE = "Internal shared storage";

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1403,7 +1404,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -104,7 +104,7 @@ private void generateActivity(Intent intent) {
         Robolectric.buildActivity(TextEditorActivity.class, intent).create().start().visible();
 
     TextEditorActivity activity = controller.get();
-    text = activity.findViewById(R.id.fname);
+    text = activity.findViewById(R.id.textEditorMainEditText);
     activity.onDestroy();
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -461,7 +462,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -716,7 +717,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1403,7 +1404,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -83,7 +83,7 @@ public DeleteTask(@NonNull Context applicationContext, @NonNull boolean doDelete
             .getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
   }
 
-  public DeleteT`ask(
+  public DeleteTask(
       @NonNull Context applicationContext,
       CompressedExplorerFragment compressedExplorerFragment) {
     this.applicationContext = applicationContext.getApplicationContext();

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -344,6 +344,7 @@ public synchronized CloudStorage getAccount(OpenMode serviceType) {
           if (storage instanceof OneDrive) return storage;
           break;
         default:
+          LOG.error("Unable to determine service type of storage {}", storage);
           return null;
       }
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -47,7 +47,7 @@
 /**
  * AsyncTask that moves files from source to destination by trying to rename files first, if they're
  * in the same filesystem, else starting the copy service. Be advised - do not start this AsyncTask
- * directly but use {@link PrepareCopyTask} instead
+ * directly but use {@link PreparePasteTask} instead
  */
 public class MoveFiles implements Callable<MoveFilesReturn> {
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -324,7 +324,7 @@ public class MainActivity extends PermissionsActivity
   public static final int REQUEST_CODE_CLOUD_LIST_KEY = 5472;
 
   private PasteHelper pasteHelper;
-  private MainActivityActionMode mainActivityActionMode;
+  public MainActivityActionMode mainActivityActionMode;
 
   private static final String DEFAULT_FALLBACK_STORAGE_PATH = "/storage/sdcard0";
   private static final String INTERNAL_SHARED_STORAGE = "Internal shared storage";

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -105,7 +105,7 @@ public static OutputStream getOutputStream(final File target, Context context)
   /** Writes uri stream from external application to the specified path */
   public static final void writeUriToStorage(
       @NonNull final MainActivity mainActivity,
-      @NonNull final ArrayList<Uri> uris,
+      @NonNull final List<Uri> uris,
       @NonNull final ContentResolver contentResolver,
       @NonNull final String currentPath) {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -243,10 +243,10 @@ private void startCopy(
 
       doCopy(inChannel, outChannel, updatePosition);
     } catch (IOException e) {
-      LOG.debug("I/O Error!", e);
-      throw new IOException();
+      LOG.error("I/O Error copy {} to {}: {}", mSourceFile, mTargetFile, e);
+      throw new IOException(e);
     } catch (OutOfMemoryError e) {
-      LOG.warn("low memory while copying file", e);
+      LOG.warn("low memory while copying {} to {}: {}", mSourceFile, mTargetFile, e);
 
       onLowMemory.onLowMemory();
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2015,6 +2015,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
       if (i != -1) name = dataUtils.getServers().get(i)[0];
     }
     SftpConnectDialog sftpConnectDialog = new SftpConnectDialog();
+    sftpConnectDialog.setCancelable(false);
     String finalName = name;
     Flowable.fromCallable(() -> new NetCopyConnectionInfo(path))
         .flatMap(

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -243,10 +243,10 @@ private void startCopy(
 
       doCopy(inChannel, outChannel, updatePosition);
     } catch (IOException e) {
-      LOG.debug("I/O Error!", e);
-      throw new IOException();
+      LOG.error("I/O Error copy {} to {}: {}", mSourceFile, mTargetFile, e);
+      throw new IOException(e);
     } catch (OutOfMemoryError e) {
-      LOG.warn("low memory while copying file", e);
+      LOG.warn("low memory while copying {} to {}: {}", mSourceFile, mTargetFile, e);
 
       onLowMemory.onLowMemory();
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2015,6 +2015,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
       if (i != -1) name = dataUtils.getServers().get(i)[0];
     }
     SftpConnectDialog sftpConnectDialog = new SftpConnectDialog();
+    sftpConnectDialog.setCancelable(false);
     String finalName = name;
     Flowable.fromCallable(() -> new NetCopyConnectionInfo(path))
         .flatMap(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -46,6 +46,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatButton;
 import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 import androidx.preference.Preference.BaseSavedState;
@@ -249,9 +250,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         ((UserColorPreferences) requireArguments().getParcelable(ARG_COLOR_PREF)).getAccent();
 
     // Button views
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
         .setTextColor(accentColor);
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
         .setTextColor(accentColor);
 
     return dialog;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -47,7 +47,7 @@
 /**
  * AsyncTask that moves files from source to destination by trying to rename files first, if they're
  * in the same filesystem, else starting the copy service. Be advised - do not start this AsyncTask
- * directly but use {@link PrepareCopyTask} instead
+ * directly but use {@link PreparePasteTask} instead
  */
 public class MoveFiles implements Callable<MoveFilesReturn> {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileListSorter.java
Patch:
@@ -120,7 +120,7 @@ public int compare(LayoutElementParcelable file1, LayoutElementParcelable file2)
     return 0;
   }
 
-  private static String getExtension(String a) {
+  public static String getExtension(String a) {
     return a.substring(a.lastIndexOf(".") + 1).toLowerCase();
   }
 }

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -36,10 +36,10 @@
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.graphics.drawable.Drawable;
-import android.widget.ImageView;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
@@ -85,7 +85,7 @@ public RequestBuilder getPreloadRequestBuilder(String item) {
     }
   }
 
-  public void loadApkImage(String item, ImageView v) {
+  public void loadApkImage(String item, AppCompatImageView v) {
     if (isBottomSheet) {
       request.load(getApplicationIconFromPackageName(item)).into(v);
     } else {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -29,8 +29,8 @@
 import android.content.Context;
 import android.os.AsyncTask;
 import android.text.format.Formatter;
-import android.widget.TextView;
 
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 
 /**
@@ -39,12 +39,12 @@
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;
-  private TextView itemsText;
+  private AppCompatTextView itemsText;
   private HybridFileParcelable file;
   private boolean isStorage;
 
   public CountItemsOrAndSizeTask(
-      Context c, TextView itemsText, HybridFileParcelable f, boolean storage) {
+      Context c, AppCompatTextView itemsText, HybridFileParcelable f, boolean storage) {
     this.context = c;
     this.itemsText = itemsText;
     file = f;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/PrepareCopyTask.java
Patch:
@@ -52,10 +52,10 @@
 import android.os.AsyncTask;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.widget.CheckBox;
 import android.widget.Toast;
 
 import androidx.annotation.IntDef;
+import androidx.appcompat.widget.AppCompatCheckBox;
 
 /**
  * This AsyncTask works by creating a tree where each folder that can be fusioned together with
@@ -222,7 +222,7 @@ private void showDialog(
     copyDialogBinding.fileNameText.setText(conflictingFiles.get(counter).getName(context.get()));
 
     // checkBox
-    final CheckBox checkBox = copyDialogBinding.checkBox;
+    final AppCompatCheckBox checkBox = copyDialogBinding.checkBox;
     Utils.setTint(context.get(), checkBox, accentColor);
     dialogBuilder.theme(mainActivity.get().getAppTheme().getMaterialDialogTheme(context.get()));
     dialogBuilder.title(context.get().getResources().getString(R.string.paste));

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -24,6 +24,7 @@
 import org.greenrobot.eventbus.Subscribe;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.utils.NetworkUtil;
 
 import android.annotation.TargetApi;
 import android.content.Intent;
@@ -64,8 +65,8 @@ public void onClick() {
                 .sendBroadcast(
                     new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
           } else {
-            if (FtpService.isConnectedToWifi(getApplicationContext())
-                || FtpService.isConnectedToLocalNetwork(getApplicationContext())) {
+            if (NetworkUtil.isConnectedToWifi(getApplicationContext())
+                || NetworkUtil.isConnectedToLocalNetwork(getApplicationContext())) {
               Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
               i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
               getApplicationContext().sendBroadcast(i);

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -43,7 +43,7 @@
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.SmbUtil;
+import com.amaze.filemanager.utils.smb.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -85,8 +85,8 @@
 import com.amaze.filemanager.utils.Function;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
-import com.amaze.filemanager.utils.SmbUtil;
 import com.amaze.filemanager.utils.Utils;
+import com.amaze.filemanager.utils.smb.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.SpaceAllocation;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -50,10 +50,10 @@
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.util.Base64;
-import android.widget.EditText;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.preference.PreferenceManager;
 
 /**
@@ -114,7 +114,7 @@ public static void decryptFile(
           R.string.crypt_decrypt,
           R.string.authenticate_password,
           (dialog, which) -> {
-            EditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
+            AppCompatEditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
             decryptIntent.putExtra(EncryptService.TAG_PASSWORD, editText.getText().toString());
             ServiceWatcherUtil.runService(main.getContext(), decryptIntent);
             dialog.dismiss();

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -49,9 +49,9 @@
 import android.os.Bundle;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.TextView;
 
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.content.FileProvider;
@@ -66,7 +66,7 @@ public class AboutActivity extends ThemedActivity implements View.OnClickListene
 
   private AppBarLayout mAppBarLayout;
   private CollapsingToolbarLayout mCollapsingToolbarLayout;
-  private TextView mTitleTextView;
+  private AppCompatTextView mTitleTextView;
   private View mAuthorsDivider, mDeveloper1Divider;
   private Billing billing;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -159,7 +159,7 @@ public void onClick(View v) {
       case R.id.linear_layout_smb:
         dismiss();
         SmbSearchDialog smbDialog = new SmbSearchDialog();
-        smbDialog.show(getActivity().getFragmentManager(), "tab");
+        smbDialog.show(getActivity().getSupportFragmentManager(), "tab");
         return;
       case R.id.linear_layout_scp:
         dismiss();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/DbViewerFragment.java
Patch:
@@ -34,9 +34,9 @@
 import android.view.ViewGroup;
 import android.webkit.WebView;
 import android.widget.RelativeLayout;
-import android.widget.TextView;
 
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.fragment.app.Fragment;
 
 /** Created by Vishal on 06-02-2015. */
@@ -46,7 +46,7 @@ public class DbViewerFragment extends Fragment {
   private View rootView;
   private Cursor schemaCursor, contentCursor;
   private RelativeLayout relativeLayout;
-  public TextView loadingText;
+  public AppCompatTextView loadingText;
   private WebView webView;
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -60,10 +60,10 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.DecelerateInterpolator;
-import android.widget.ImageView;
 
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentActivity;
@@ -94,7 +94,7 @@ public class TabFragment extends Fragment {
   private Indicator indicator;
 
   /** views for circlular drawables below android lollipop */
-  private ImageView circleDrawable1, circleDrawable2;
+  private AppCompatImageView circleDrawable1, circleDrawable2;
 
   /** color drawable for action bar background */
   private final ColorDrawable colorDrawable = new ColorDrawable();
@@ -459,7 +459,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
     final MainFragment mainFragment = requireMainActivity().getCurrentMainFragment();
     View leftPlaceholder = rootView.findViewById(R.id.placeholder_drag_left);
     View rightPlaceholder = rootView.findViewById(R.id.placeholder_drag_right);
-    ImageView dragToTrash = rootView.findViewById(R.id.placeholder_trash_bottom);
+    AppCompatImageView dragToTrash = rootView.findViewById(R.id.placeholder_trash_bottom);
     DataUtils dataUtils = DataUtils.getInstance();
     if (destroy) {
       leftPlaceholder.setOnDragListener(null);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -28,6 +28,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.asynchronous.services.ftp.FtpService;
 import com.amaze.filemanager.ui.activities.MainActivity;
+import com.amaze.filemanager.utils.NetworkUtil;
 
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -104,7 +105,7 @@ public static void updateNotification(Context context, boolean noStopButton) {
     boolean secureConnection =
         sharedPreferences.getBoolean(FtpService.KEY_PREFERENCE_SECURE, FtpService.DEFAULT_SECURE);
 
-    InetAddress address = FtpService.getLocalInetAddress(context);
+    InetAddress address = NetworkUtil.getLocalInetAddress(context);
 
     String address_text = "Address not found";
 

File: app/src/main/java/com/amaze/filemanager/ui/views/FastScroller.java
Patch:
@@ -33,17 +33,17 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
-import android.widget.ImageView;
 
 import androidx.annotation.AttrRes;
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.RecyclerView.OnScrollListener;
 
 public class FastScroller extends FrameLayout {
   private View bar;
-  private ImageView handle;
+  private AppCompatImageView handle;
   private RecyclerView recyclerView;
   private final ScrollListener scrollListener;
   boolean manuallyChangingPosition = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedTextView.java
Patch:
@@ -28,7 +28,6 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.AppCompatTextView;
@@ -46,7 +45,8 @@ public ThemedTextView(Context context, AttributeSet attrs) {
     setTextViewColor(this, context);
   }
 
-  public static void setTextViewColor(@NotNull TextView textView, @NonNull Context context) {
+  public static void setTextViewColor(
+      @NotNull AppCompatTextView textView, @NonNull Context context) {
     if (((MainActivity) context).getAppTheme().equals(AppTheme.LIGHT)) {
       textView.setTextColor(Utils.getColor(context, android.R.color.black));
     } else if (((MainActivity) context).getAppTheme().equals(AppTheme.DARK)

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -27,23 +27,23 @@
 import android.text.Editable;
 import android.view.MotionEvent;
 import android.view.View;
-import android.widget.EditText;
 
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatEditText;
 
 public final class WarnableTextInputValidator extends SimpleTextWatcher
     implements View.OnFocusChangeListener, View.OnTouchListener {
   private final Context context;
-  private final EditText editText;
+  private final AppCompatEditText editText;
   private final View button;
   private final WarnableTextInputLayout textInputLayout;
   private final OnTextValidate validator;
   private @DrawableRes int warningDrawable, errorDrawable;
 
   public WarnableTextInputValidator(
       Context context,
-      EditText editText,
+      AppCompatEditText editText,
       WarnableTextInputLayout textInputLayout,
       View positiveButton,
       OnTextValidate validator) {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
Patch:
@@ -21,17 +21,17 @@
 package com.amaze.filemanager.ui.views.drawer;
 
 import android.view.MenuItem;
-import android.widget.ImageButton;
 
 import androidx.annotation.ColorInt;
+import androidx.appcompat.widget.AppCompatImageButton;
 
 /**
  * This manages to set the color of the selected ActionView and unset the ActionView that is not
  * selected anymore
  */
 public class ActionViewStateManager {
 
-  private ImageButton lastItemSelected = null;
+  private AppCompatImageButton lastItemSelected = null;
   private @ColorInt int idleIconColor;
   private @ColorInt int selectedIconColor;
 
@@ -52,7 +52,7 @@ public void selectActionView(MenuItem item) {
       lastItemSelected.setColorFilter(idleIconColor);
     }
     if (item.getActionView() != null) {
-      lastItemSelected = (ImageButton) item.getActionView();
+      lastItemSelected = (AppCompatImageButton) item.getActionView();
       lastItemSelected.setColorFilter(selectedIconColor);
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -50,8 +50,8 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Environment;
-import android.widget.TextView;
 
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.test.core.app.ApplicationProvider;
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
@@ -62,7 +62,7 @@
 public class TextEditorActivityTest {
 
   private final String fileContents = "fsdfsdfs";
-  private TextView text;
+  private AppCompatEditText text;
 
   @After
   public void tearDown() {

File: app/src/test/java/com/amaze/filemanager/utils/ComputerParcelableTest.java
Patch:
@@ -54,15 +54,15 @@ public void testObjectNotEqualsName() {
 
   /**
    * Purpose: when computerParcelable's address and object's address are not the same, confirm that
-   * the two are different. Input: computerParcelable.equals(object) only ComputerParcelable.name ==
-   * Object.name Expected: result is false
+   * the two are different. Input: computerParcelable.equals(object) only ComputerParcelable.addr ==
+   * Object.name Expected: result is true
    */
   @Test
   public void testObjectNotEqualsAddr() {
     ComputerParcelable computerParcelable = new ComputerParcelable("com1", "1");
     Object object = new ComputerParcelable("com1", "2");
 
-    assertFalse(computerParcelable.equals(object));
+    assertTrue(computerParcelable.equals(object));
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -243,10 +243,10 @@ private void startCopy(
 
       doCopy(inChannel, outChannel, updatePosition);
     } catch (IOException e) {
-      LOG.debug("I/O Error!", e);
-      throw new IOException();
+      LOG.error("I/O Error copy {} to {}: {}", mSourceFile, mTargetFile, e);
+      throw new IOException(e);
     } catch (OutOfMemoryError e) {
-      LOG.warn("low memory while copying file", e);
+      LOG.warn("low memory while copying {} to {}: {}", mSourceFile, mTargetFile, e);
 
       onLowMemory.onLowMemory();
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1988,6 +1988,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
       if (i != -1) name = dataUtils.getServers().get(i)[0];
     }
     SftpConnectDialog sftpConnectDialog = new SftpConnectDialog();
+    sftpConnectDialog.setCancelable(false);
     String finalName = name;
     Flowable.fromCallable(() -> new NetCopyConnectionInfo(path))
         .flatMap(

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/PrepareCopyTask.java
Patch:
@@ -435,8 +435,7 @@ class CopyNode {
                     new ArrayList<>(Collections.singletonList(conflictingFiles.get(i))));
             String newPath = path + "/" + newName;
 
-            HybridFile hybridFile =
-                new HybridFile(conflictingFiles.get(i).getMode(), newPath, newName, true);
+            HybridFile hybridFile = new HybridFile(conflictingFiles.get(i).getMode(), newPath);
             MakeDirectoryOperation.mkdirs(context.get(), hybridFile);
             nextNodes.add(
                 new CopyNode(newPath, conflictingFiles.get(i).listFiles(context.get(), rootMode)));

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -46,6 +46,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatButton;
 import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 import androidx.preference.Preference.BaseSavedState;
@@ -249,9 +250,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         ((UserColorPreferences) requireArguments().getParcelable(ARG_COLOR_PREF)).getAccent();
 
     // Button views
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
         .setTextColor(accentColor);
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
         .setTextColor(accentColor);
 
     return dialog;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -46,6 +46,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatButton;
 import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 import androidx.preference.Preference.BaseSavedState;
@@ -249,9 +250,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         ((UserColorPreferences) requireArguments().getParcelable(ARG_COLOR_PREF)).getAccent();
 
     // Button views
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
         .setTextColor(accentColor);
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
         .setTextColor(accentColor);
 
     return dialog;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -46,6 +46,7 @@
 
 import androidx.annotation.NonNull;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatButton;
 import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 import androidx.preference.Preference.BaseSavedState;
@@ -249,9 +250,9 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
         ((UserColorPreferences) requireArguments().getParcelable(ARG_COLOR_PREF)).getAccent();
 
     // Button views
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button1", "id", "android")))
         .setTextColor(accentColor);
-    ((AppCompatTextView) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
+    ((AppCompatButton) dialog.findViewById(res.getIdentifier("button2", "id", "android")))
         .setTextColor(accentColor);
 
     return dialog;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -36,10 +36,10 @@
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.graphics.drawable.Drawable;
-import android.widget.ImageView;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
@@ -85,7 +85,7 @@ public RequestBuilder getPreloadRequestBuilder(String item) {
     }
   }
 
-  public void loadApkImage(String item, ImageView v) {
+  public void loadApkImage(String item, AppCompatImageView v) {
     if (isBottomSheet) {
       request.load(getApplicationIconFromPackageName(item)).into(v);
     } else {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -29,8 +29,8 @@
 import android.content.Context;
 import android.os.AsyncTask;
 import android.text.format.Formatter;
-import android.widget.TextView;
 
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.core.util.Pair;
 
 /**
@@ -39,12 +39,12 @@
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;
-  private TextView itemsText;
+  private AppCompatTextView itemsText;
   private HybridFileParcelable file;
   private boolean isStorage;
 
   public CountItemsOrAndSizeTask(
-      Context c, TextView itemsText, HybridFileParcelable f, boolean storage) {
+      Context c, AppCompatTextView itemsText, HybridFileParcelable f, boolean storage) {
     this.context = c;
     this.itemsText = itemsText;
     file = f;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/PrepareCopyTask.java
Patch:
@@ -52,10 +52,10 @@
 import android.os.AsyncTask;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.widget.CheckBox;
 import android.widget.Toast;
 
 import androidx.annotation.IntDef;
+import androidx.appcompat.widget.AppCompatCheckBox;
 
 /**
  * This AsyncTask works by creating a tree where each folder that can be fusioned together with
@@ -222,7 +222,7 @@ private void showDialog(
     copyDialogBinding.fileNameText.setText(conflictingFiles.get(counter).getName(context.get()));
 
     // checkBox
-    final CheckBox checkBox = copyDialogBinding.checkBox;
+    final AppCompatCheckBox checkBox = copyDialogBinding.checkBox;
     Utils.setTint(context.get(), checkBox, accentColor);
     dialogBuilder.theme(mainActivity.get().getAppTheme().getMaterialDialogTheme(context.get()));
     dialogBuilder.title(context.get().getResources().getString(R.string.paste));

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -54,12 +54,12 @@
 import android.os.AsyncTask;
 import android.os.IBinder;
 import android.text.TextUtils;
-import android.widget.EditText;
 import android.widget.RemoteViews;
 import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.core.app.NotificationCompat;
 import androidx.core.app.NotificationManagerCompat;
 import androidx.preference.PreferenceManager;
@@ -391,7 +391,7 @@ protected void onProgressUpdate(IOException... values) {
           R.string.archive_password_prompt,
           R.string.authenticate_password,
           (dialog, which) -> {
-            EditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
+            AppCompatEditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
             ArchivePasswordCache.getInstance().put(compressedPath, editText.getText().toString());
             ExtractService.this.getDataPackages().clear();
             this.paused = false;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -50,10 +50,10 @@
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.util.Base64;
-import android.widget.EditText;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.preference.PreferenceManager;
 
 /**
@@ -114,7 +114,7 @@ public static void decryptFile(
           R.string.crypt_decrypt,
           R.string.authenticate_password,
           (dialog, which) -> {
-            EditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
+            AppCompatEditText editText = dialog.getView().findViewById(R.id.singleedittext_input);
             decryptIntent.putExtra(EncryptService.TAG_PASSWORD, editText.getText().toString());
             ServiceWatcherUtil.runService(main.getContext(), decryptIntent);
             dialog.dismiss();

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -49,9 +49,9 @@
 import android.os.Bundle;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.TextView;
 
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.content.FileProvider;
@@ -66,7 +66,7 @@ public class AboutActivity extends ThemedActivity implements View.OnClickListene
 
   private AppBarLayout mAppBarLayout;
   private CollapsingToolbarLayout mCollapsingToolbarLayout;
-  private TextView mTitleTextView;
+  private AppCompatTextView mTitleTextView;
   private View mAuthorsDivider, mDeveloper1Divider;
   private Billing billing;
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -60,14 +60,14 @@
 import android.text.Editable;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
-import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.annotation.VisibleForTesting;
 import androidx.appcompat.widget.AppCompatCheckBox;
 import androidx.appcompat.widget.AppCompatEditText;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.fragment.app.DialogFragment;
 
 import jcifs.smb.SmbFile;
@@ -225,7 +225,7 @@ public void afterTextChanged(@NonNull Editable s) {
     final AppCompatEditText pass = binding.passwordET;
     final AppCompatCheckBox chkSmbAnonymous = binding.chkSmbAnonymous;
     final AppCompatCheckBox chkSmbDisableIpcSignature = binding.chkSmbDisableIpcSignature;
-    TextView help = binding.wanthelp;
+    AppCompatTextView help = binding.wanthelp;
 
     EditTextColorStateUtil.setTint(getActivity(), conName, accentColor);
     EditTextColorStateUtil.setTint(getActivity(), user, accentColor);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/DbViewerFragment.java
Patch:
@@ -34,9 +34,9 @@
 import android.view.ViewGroup;
 import android.webkit.WebView;
 import android.widget.RelativeLayout;
-import android.widget.TextView;
 
 import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatTextView;
 import androidx.fragment.app.Fragment;
 
 /** Created by Vishal on 06-02-2015. */
@@ -46,7 +46,7 @@ public class DbViewerFragment extends Fragment {
   private View rootView;
   private Cursor schemaCursor, contentCursor;
   private RelativeLayout relativeLayout;
-  public TextView loadingText;
+  public AppCompatTextView loadingText;
   private WebView webView;
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -60,10 +60,10 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.DecelerateInterpolator;
-import android.widget.ImageView;
 
 import androidx.annotation.ColorInt;
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.constraintlayout.widget.ConstraintLayout;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentActivity;
@@ -94,7 +94,7 @@ public class TabFragment extends Fragment {
   private Indicator indicator;
 
   /** views for circlular drawables below android lollipop */
-  private ImageView circleDrawable1, circleDrawable2;
+  private AppCompatImageView circleDrawable1, circleDrawable2;
 
   /** color drawable for action bar background */
   private final ColorDrawable colorDrawable = new ColorDrawable();
@@ -459,7 +459,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
     final MainFragment mainFragment = requireMainActivity().getCurrentMainFragment();
     View leftPlaceholder = rootView.findViewById(R.id.placeholder_drag_left);
     View rightPlaceholder = rootView.findViewById(R.id.placeholder_drag_right);
-    ImageView dragToTrash = rootView.findViewById(R.id.placeholder_trash_bottom);
+    AppCompatImageView dragToTrash = rootView.findViewById(R.id.placeholder_trash_bottom);
     DataUtils dataUtils = DataUtils.getInstance();
     if (destroy) {
       leftPlaceholder.setOnDragListener(null);

File: app/src/main/java/com/amaze/filemanager/ui/views/FastScroller.java
Patch:
@@ -33,17 +33,17 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.widget.FrameLayout;
-import android.widget.ImageView;
 
 import androidx.annotation.AttrRes;
 import androidx.annotation.NonNull;
+import androidx.appcompat.widget.AppCompatImageView;
 import androidx.core.content.ContextCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.RecyclerView.OnScrollListener;
 
 public class FastScroller extends FrameLayout {
   private View bar;
-  private ImageView handle;
+  private AppCompatImageView handle;
   private RecyclerView recyclerView;
   private final ScrollListener scrollListener;
   boolean manuallyChangingPosition = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedTextView.java
Patch:
@@ -28,7 +28,6 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.widget.TextView;
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.widget.AppCompatTextView;
@@ -46,7 +45,8 @@ public ThemedTextView(Context context, AttributeSet attrs) {
     setTextViewColor(this, context);
   }
 
-  public static void setTextViewColor(@NotNull TextView textView, @NonNull Context context) {
+  public static void setTextViewColor(
+      @NotNull AppCompatTextView textView, @NonNull Context context) {
     if (((MainActivity) context).getAppTheme().equals(AppTheme.LIGHT)) {
       textView.setTextColor(Utils.getColor(context, android.R.color.black));
     } else if (((MainActivity) context).getAppTheme().equals(AppTheme.DARK)

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -27,23 +27,23 @@
 import android.text.Editable;
 import android.view.MotionEvent;
 import android.view.View;
-import android.widget.EditText;
 
 import androidx.annotation.DrawableRes;
 import androidx.annotation.StringRes;
+import androidx.appcompat.widget.AppCompatEditText;
 
 public final class WarnableTextInputValidator extends SimpleTextWatcher
     implements View.OnFocusChangeListener, View.OnTouchListener {
   private final Context context;
-  private final EditText editText;
+  private final AppCompatEditText editText;
   private final View button;
   private final WarnableTextInputLayout textInputLayout;
   private final OnTextValidate validator;
   private @DrawableRes int warningDrawable, errorDrawable;
 
   public WarnableTextInputValidator(
       Context context,
-      EditText editText,
+      AppCompatEditText editText,
       WarnableTextInputLayout textInputLayout,
       View positiveButton,
       OnTextValidate validator) {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
Patch:
@@ -21,17 +21,17 @@
 package com.amaze.filemanager.ui.views.drawer;
 
 import android.view.MenuItem;
-import android.widget.ImageButton;
 
 import androidx.annotation.ColorInt;
+import androidx.appcompat.widget.AppCompatImageButton;
 
 /**
  * This manages to set the color of the selected ActionView and unset the ActionView that is not
  * selected anymore
  */
 public class ActionViewStateManager {
 
-  private ImageButton lastItemSelected = null;
+  private AppCompatImageButton lastItemSelected = null;
   private @ColorInt int idleIconColor;
   private @ColorInt int selectedIconColor;
 
@@ -52,7 +52,7 @@ public void selectActionView(MenuItem item) {
       lastItemSelected.setColorFilter(idleIconColor);
     }
     if (item.getActionView() != null) {
-      lastItemSelected = (ImageButton) item.getActionView();
+      lastItemSelected = (AppCompatImageButton) item.getActionView();
       lastItemSelected.setColorFilter(selectedIconColor);
     }
   }

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -50,8 +50,8 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Environment;
-import android.widget.TextView;
 
+import androidx.appcompat.widget.AppCompatEditText;
 import androidx.test.core.app.ApplicationProvider;
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
@@ -62,7 +62,7 @@
 public class TextEditorActivityTest {
 
   private final String fileContents = "fsdfsdfs";
-  private TextView text;
+  private AppCompatEditText text;
 
   @After
   public void tearDown() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -43,6 +43,7 @@
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.filesystem.root.MoveFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -467,7 +468,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
               e);
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(c, new HybridFile[] {targetFile});
+        MediaConnectionUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.filesystem.ftp.FtpClientTemplate;
 import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -715,7 +716,7 @@ protected void onPostExecute(Void aVoid) {
         super.onPostExecute(aVoid);
         if (newFile != null && oldFile != null) {
           HybridFile[] hybridFiles = {newFile, oldFile};
-          FileUtils.scanFile(context, hybridFiles);
+          MediaConnectionUtils.scanFile(context, hybridFiles);
         }
       }
     }.executeOnExecutor(executor);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -271,7 +271,7 @@ private void startCopy(
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
       if (mTargetFile != null) {
-        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+        MediaConnectionUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
       }
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -63,6 +63,7 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileListSorter;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.files.MediaConnectionUtils;
 import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.MainActivityViewModel;
@@ -1401,7 +1402,7 @@ public void hide(String path) {
           LOG.warn("failure when hiding file", e);
         }
       }
-      FileUtils.scanFile(
+      MediaConnectionUtils.scanFile(
           requireMainActivity(), new HybridFile[] {new HybridFile(OpenMode.FILE, path)});
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -112,8 +112,6 @@ public SearchView(final AppBar appbar, MainActivity mainActivity, SearchListener
     searchRecyclerViewAdapter = new SearchRecyclerViewAdapter();
     recyclerView.setAdapter(searchRecyclerViewAdapter);
 
-    clearRecyclerView();
-
     clearImageView.setOnClickListener(
         v -> {
           searchViewEditText.setText("");
@@ -312,6 +310,7 @@ public void revealSearchView() {
     int endRadius = Math.max(appbar.getToolbar().getWidth(), appbar.getToolbar().getHeight());
 
     resetSearchMode();
+      clearRecyclerView();
 
     Animator animator;
     if (SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -24,6 +24,7 @@
 import org.greenrobot.eventbus.Subscribe;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.utils.NetworkUtil;
 
 import android.annotation.TargetApi;
 import android.content.Intent;
@@ -64,8 +65,8 @@ public void onClick() {
                 .sendBroadcast(
                     new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
           } else {
-            if (FtpService.isConnectedToWifi(getApplicationContext())
-                || FtpService.isConnectedToLocalNetwork(getApplicationContext())) {
+            if (NetworkUtil.isConnectedToWifi(getApplicationContext())
+                || NetworkUtil.isConnectedToLocalNetwork(getApplicationContext())) {
               Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
               i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
               getApplicationContext().sendBroadcast(i);

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -43,7 +43,7 @@
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.SmbUtil;
+import com.amaze.filemanager.utils.smb.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -85,8 +85,8 @@
 import com.amaze.filemanager.utils.Function;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
-import com.amaze.filemanager.utils.SmbUtil;
 import com.amaze.filemanager.utils.Utils;
+import com.amaze.filemanager.utils.smb.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.SpaceAllocation;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -159,7 +159,7 @@ public void onClick(View v) {
       case R.id.linear_layout_smb:
         dismiss();
         SmbSearchDialog smbDialog = new SmbSearchDialog();
-        smbDialog.show(getActivity().getFragmentManager(), "tab");
+        smbDialog.show(getActivity().getSupportFragmentManager(), "tab");
         return;
       case R.id.linear_layout_scp:
         dismiss();

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -28,6 +28,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.asynchronous.services.ftp.FtpService;
 import com.amaze.filemanager.ui.activities.MainActivity;
+import com.amaze.filemanager.utils.NetworkUtil;
 
 import android.app.Notification;
 import android.app.NotificationManager;
@@ -104,7 +105,7 @@ public static void updateNotification(Context context, boolean noStopButton) {
     boolean secureConnection =
         sharedPreferences.getBoolean(FtpService.KEY_PREFERENCE_SECURE, FtpService.DEFAULT_SECURE);
 
-    InetAddress address = FtpService.getLocalInetAddress(context);
+    InetAddress address = NetworkUtil.getLocalInetAddress(context);
 
     String address_text = "Address not found";
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -66,6 +66,7 @@
 import com.amaze.filemanager.ui.fragments.TabFragment;
 import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.views.WarnableTextInputValidator;
+import com.amaze.filemanager.utils.smb.SmbUtil;
 import com.leinardi.android.speeddial.SpeedDialView;
 
 import android.annotation.SuppressLint;

File: app/src/test/java/com/amaze/filemanager/utils/ComputerParcelableTest.java
Patch:
@@ -54,15 +54,15 @@ public void testObjectNotEqualsName() {
 
   /**
    * Purpose: when computerParcelable's address and object's address are not the same, confirm that
-   * the two are different. Input: computerParcelable.equals(object) only ComputerParcelable.name ==
-   * Object.name Expected: result is false
+   * the two are different. Input: computerParcelable.equals(object) only ComputerParcelable.addr ==
+   * Object.name Expected: result is true
    */
   @Test
   public void testObjectNotEqualsAddr() {
     ComputerParcelable computerParcelable = new ComputerParcelable("com1", "1");
     Object object = new ComputerParcelable("com1", "2");
 
-    assertFalse(computerParcelable.equals(object));
+    assertTrue(computerParcelable.equals(object));
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -479,7 +479,9 @@ private void copyFiles(
         if (progressHandler.getCancelled()) return;
         if (sourceFile.isDirectory()) {
 
-          if (!targetFile.exists()) targetFile.mkdir(c);
+          if (!targetFile.exists()) {
+            targetFile.mkdir(c);
+          }
 
           // various checks
           // 1. source file and target file doesn't end up in loop

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -479,7 +479,9 @@ private void copyFiles(
         if (progressHandler.getCancelled()) return;
         if (sourceFile.isDirectory()) {
 
-          if (!targetFile.exists()) targetFile.mkdir(c);
+          if (!targetFile.exists()) {
+            targetFile.mkdir(c);
+          }
 
           // various checks
           // 1. source file and target file doesn't end up in loop

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -796,18 +796,19 @@ public void onDrawerClosed() {
       hFile.generateMode(mainActivity);
       if (hFile.isSimpleFile()) {
         FileUtils.openFile(new File(pendingPath), mainActivity, mainActivity.getPrefs());
-        pendingPath = null;
+        resetPendingPath();
         return;
       }
 
       MainFragment mainFragment = mainActivity.getCurrentMainFragment();
       if (mainFragment != null) {
         mainFragment.loadlist(pendingPath, false, OpenMode.UNKNOWN, false);
+        resetPendingPath();
       } else {
         mainActivity.goToMain(pendingPath);
+        resetPendingPath();
         return;
       }
-      pendingPath = null;
     }
     mainActivity.supportInvalidateOptionsMenu();
   }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -796,18 +796,19 @@ public void onDrawerClosed() {
       hFile.generateMode(mainActivity);
       if (hFile.isSimpleFile()) {
         FileUtils.openFile(new File(pendingPath), mainActivity, mainActivity.getPrefs());
-        pendingPath = null;
+        resetPendingPath();
         return;
       }
 
       MainFragment mainFragment = mainActivity.getCurrentMainFragment();
       if (mainFragment != null) {
         mainFragment.loadlist(pendingPath, false, OpenMode.UNKNOWN, false);
+        resetPendingPath();
       } else {
         mainActivity.goToMain(pendingPath);
+        resetPendingPath();
         return;
       }
-      pendingPath = null;
     }
     mainActivity.supportInvalidateOptionsMenu();
   }

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -342,7 +342,7 @@ else if (cursor.getCount() > 0 && cursor.moveToFirst()) {
 
         if (path != null
             && path.contains(mainActivity.getCurrentMainFragment().getPath())
-            && path.toLowerCase().contains(query.toLowerCase())) {
+            && new File(path).getName().toLowerCase().contains(query.toLowerCase())) {
 
           boolean showHiddenFiles =
               PreferenceManager.getDefaultSharedPreferences(mainActivity)

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -450,8 +450,8 @@ public static void addShortcut(
             .setActivity(componentName)
             .setIcon(IconCompat.createWithResource(context, R.mipmap.ic_launcher))
             .setIntent(shortcutIntent)
-            .setLongLabel(path.desc)
-            .setShortLabel(new File(path.desc).getName())
+            .setLongLabel(path.title)
+            .setShortLabel(path.title)
             .build();
 
     ShortcutManagerCompat.requestPinShortcut(context, info, null);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -402,7 +402,8 @@ public static void shareFiles(
 
     if (files.size() > 1)
       for (File file : files)
-        if (!mime.equals(MimeTypes.getMimeType(file.getPath(), file.isDirectory()))) {
+        if (mime == null
+            || !mime.equals(MimeTypes.getMimeType(file.getPath(), file.isDirectory()))) {
           isGenericFileType = true;
           break;
         }

File: testShared/src/test/java/com/amaze/filemanager/shadows/jcifs/smb/ShadowSmbFile.java
Patch:
@@ -25,6 +25,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.URL;
+import java.nio.file.Files;
 
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
@@ -49,7 +50,7 @@ public void setFile(File file) {
 
   @Implementation
   public InputStream getInputStream() throws IOException {
-    return new FileInputStream(file);
+    return Files.newInputStream(file.toPath());
   }
 
   @Implementation

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2314,7 +2314,8 @@ public void onLoadFinished(Loader<Cursor> loader, final Cursor data) {
      *
      * TODO: find a fix for repeated callbacks to onLoadFinished()
      */
-    if ((cloudCursorData != null && cloudCursorData == data)
+    if (cloudCursorData == null
+        || cloudCursorData == data
         || data.isClosed()
         || cloudCursorData.isClosed()) return;
     cloudCursorData = data;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -336,7 +336,6 @@ public void onCreate(final Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.main_toolbar);
 
-
     intent = getIntent();
 
     dataUtils = DataUtils.getInstance();

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -336,6 +336,7 @@ public void onCreate(final Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.main_toolbar);
 
+
     intent = getIntent();
 
     dataUtils = DataUtils.getInstance();

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2314,7 +2314,8 @@ public void onLoadFinished(Loader<Cursor> loader, final Cursor data) {
      *
      * TODO: find a fix for repeated callbacks to onLoadFinished()
      */
-    if ((cloudCursorData != null && cloudCursorData == data)
+    if (cloudCursorData == null
+        || cloudCursorData == data
         || data.isClosed()
         || cloudCursorData.isClosed()) return;
     cloudCursorData = data;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -336,7 +336,6 @@ public void onCreate(final Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.main_toolbar);
 
-
     intent = getIntent();
 
     dataUtils = DataUtils.getInstance();

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -336,6 +336,7 @@ public void onCreate(final Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.main_toolbar);
 
+
     intent = getIntent();
 
     dataUtils = DataUtils.getInstance();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -236,5 +236,4 @@ private void initSearchViewColor(MainActivity a) {
   public interface SearchListener {
     void onSearch(String queue);
   }
-
 }

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -236,4 +236,5 @@ private void initSearchViewColor(MainActivity a) {
   public interface SearchListener {
     void onSearch(String queue);
   }
+
 }

File: app/src/test/java/com/amaze/filemanager/application/AppConfigTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.application;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static android.os.Looper.getMainLooper;
@@ -51,7 +50,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 public class AppConfigTest {
 
   @After

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTaskTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static android.os.Looper.getMainLooper;
@@ -58,7 +57,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class DbViewerTaskTest {
 
   private WebView webView;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallableTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks.texteditor.write;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -65,7 +64,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class, ShadowContentResolver.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class WriteTextFileCallableTest {
 
   private static final String contents = "This is modified data";

File: app/src/test/java/com/amaze/filemanager/filesystem/EditableFileAbstractionTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
@@ -49,7 +48,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class EditableFileAbstractionTest {
 
   @Test(expected = IllegalArgumentException.class)

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertFalse;
@@ -45,7 +44,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class OperationsTest {
 
   private File storageRoot = Environment.getExternalStorageDirectory();

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.fail;
@@ -51,7 +50,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 @Ignore("FIXME: should not ignore - please implement a shadow")
 public class RootHelperTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem.compressed;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static kotlin.io.ConstantsKt.DEFAULT_BUFFER_SIZE;
@@ -56,7 +55,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem.compressed;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -66,7 +65,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class CompressedHelperTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem.files;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.hamcrest.Matchers.greaterThan;
@@ -46,7 +45,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class FileListSorterTest {
   /**
    * Purpose: when dirsOnTop is 0, if file1 is directory && file2 is not directory, result is -1

File: app/src/test/java/com/amaze/filemanager/filesystem/smb/CifsContextsTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem.smb;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -43,7 +42,7 @@
 import jcifs.ResolverType;
 import jcifs.context.BaseContext;
 
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 @RunWith(AndroidJUnit4.class)
 public class CifsContextsTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.filesystem.ssh;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static com.amaze.filemanager.filesystem.ftp.NetCopyClientConnectionPool.SSH_URI_PREFIX;
@@ -58,7 +57,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public abstract class AbstractSftpServerTest {
 
   protected SshServer server;

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.N;
 import static android.os.Build.VERSION_CODES.P;
@@ -79,7 +78,7 @@
 
 @RunWith(AndroidJUnit4.class)
 @Config(
-    sdk = {JELLY_BEAN, KITKAT, P},
+    sdk = {KITKAT, P},
     shadows = {
       ShadowMultiDex.class,
       ShadowStorageManager.class,

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -58,7 +57,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class TextEditorActivityTest {
 
   private final String fileContents = "fsdfsdfs";

File: app/src/test/java/com/amaze/filemanager/ui/fragments/CloudSheetFragmentTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertFalse;
@@ -39,7 +38,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 public class CloudSheetFragmentTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.icons;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -41,7 +40,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class IconsTest {
 
   @Before

File: app/src/test/java/com/amaze/filemanager/ui/views/WarnableTextInputValidatorTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.views;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
@@ -46,7 +45,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 public class WarnableTextInputValidatorTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/utils/TinyDBTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.utils;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertArrayEquals;
@@ -38,7 +37,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 public class TinyDBTest {
 
   private SharedPreferences prefs;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.utils;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.N;
 import static android.os.Build.VERSION_CODES.P;
@@ -57,7 +56,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(sdk = {JELLY_BEAN, KITKAT, P})
+@Config(sdk = {KITKAT, P})
 public class UtilsTest {
 
   @Test

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertArrayEquals;
@@ -51,7 +50,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class CloudStreamSourceTest {
   private CloudStreamSource cs;
   private String testFilePath;

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertArrayEquals;
@@ -52,7 +51,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class, ShadowSmbFile.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class StreamSourceTest {
   private SmbFile file;
   private StreamSource ss;

File: testShared/src/test/java/com/amaze/filemanager/test/ShadowPasswordUtilTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.test;
 
-import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
 import static org.awaitility.Awaitility.await;
@@ -56,7 +55,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class, ShadowPasswordUtil.class},
-    sdk = {JELLY_BEAN, KITKAT, P})
+    sdk = {KITKAT, P})
 public class ShadowPasswordUtilTest {
 
   @Before

File: commons_compress_7z/src/main/java/com/amaze/filemanager/filesystem/compressed/sevenz/Archive.java
Patch:
@@ -26,17 +26,17 @@ class Archive {
   /// Offset from beginning of file + SIGNATURE_HEADER_SIZE to packed streams.
   long packPos;
   /// Size of each packed stream.
-  long[] packSizes;
+  long[] packSizes = new long[0];
   /// Whether each particular packed streams has a CRC.
   BitSet packCrcsDefined;
   /// CRCs for each packed stream, valid only if that packed stream has one.
   long[] packCrcs;
   /// Properties of solid compression blocks.
-  Folder[] folders;
+  Folder[] folders = Folder.EMPTY_FOLDER_ARRAY;
   /// Temporary properties for non-empty files (subsumed into the files array later).
   SubStreamsInfo subStreamsInfo;
   /// The files and directories in the archive.
-  SevenZArchiveEntry[] files;
+  SevenZArchiveEntry[] files = SevenZArchiveEntry.EMPTY_SEVEN_Z_ARCHIVE_ENTRY_ARRAY;
   /// Mapping between folders, files and streams.
   StreamMap streamMap;
 

File: commons_compress_7z/src/main/java/com/amaze/filemanager/filesystem/compressed/sevenz/Coder.java
Patch:
@@ -24,5 +24,5 @@ class Coder {
   byte[] decompressionMethodId;
   long numInStreams;
   long numOutStreams;
-  byte[] properties = null;
+  byte[] properties;
 }

File: commons_compress_7z/src/main/java/com/amaze/filemanager/filesystem/compressed/sevenz/DeltaDecoder.java
Patch:
@@ -39,7 +39,8 @@ InputStream decode(
       final InputStream in,
       final long uncompressedLength,
       final Coder coder,
-      final byte[] password)
+      final byte[] password,
+      final int maxMemoryLimitInKb)
       throws IOException {
     return new DeltaOptions(getOptionsFromCoder(coder)).getInputStream(in);
   }
@@ -50,7 +51,7 @@ OutputStream encode(final OutputStream out, final Object options) throws IOExcep
     final int distance = numberOptionOrDefault(options, 1);
     try {
       return new DeltaOptions(distance).getOutputStream(new FinishableWrapperOutputStream(out));
-    } catch (final UnsupportedOptionsException ex) {
+    } catch (final UnsupportedOptionsException ex) { // NOSONAR
       throw new IOException(ex.getMessage());
     }
   }

File: commons_compress_7z/src/main/java/com/amaze/filemanager/filesystem/compressed/sevenz/SevenZMethod.java
Patch:
@@ -106,8 +106,9 @@ public enum SevenZMethod {
   }
 
   byte[] getId() {
-    final byte[] copy = new byte[id.length];
-    System.arraycopy(id, 0, copy, 0, id.length);
+    final int idLength = id.length;
+    final byte[] copy = new byte[idLength];
+    System.arraycopy(id, 0, copy, 0, idLength);
     return copy;
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -594,7 +594,7 @@ private List<LayoutElementParcelable> listSmb(
       _file = new HybridFile(OpenMode.SMB, path);
     }
     if (!_file.getPath().endsWith("/")) {
-      _file.setPath(hFile.getPath() + "/");
+      _file.setPath(_file.getPath() + "/");
     }
     @NonNull List<LayoutElementParcelable> list;
     List<LayoutElementParcelable> smbCache = mainActivityViewModel.getFromListCache(path);

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2314,7 +2314,9 @@ public void onLoadFinished(Loader<Cursor> loader, final Cursor data) {
      *
      * TODO: find a fix for repeated callbacks to onLoadFinished()
      */
-    if (cloudCursorData != null && cloudCursorData == data) return;
+    if ((cloudCursorData != null && cloudCursorData == data)
+        || data.isClosed()
+        || cloudCursorData.isClosed()) return;
     cloudCursorData = data;
 
     if (cloudLoaderAsyncTask != null

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -388,7 +388,7 @@ protected void onProgressUpdate(IOException... values) {
       IOException result = values[0];
       ArchivePasswordCache.getInstance().remove(compressedPath);
       GeneralDialogCreation.showPasswordDialog(
-          getApplicationContext(),
+          AppConfig.getInstance().getMainActivityContext(),
           (MainActivity) AppConfig.getInstance().getMainActivityContext(),
           AppConfig.getInstance().getUtilsProvider().getAppTheme(),
           R.string.archive_password_prompt,

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -388,7 +388,7 @@ protected void onProgressUpdate(IOException... values) {
       IOException result = values[0];
       ArchivePasswordCache.getInstance().remove(compressedPath);
       GeneralDialogCreation.showPasswordDialog(
-          getApplicationContext(),
+          AppConfig.getInstance().getMainActivityContext(),
           (MainActivity) AppConfig.getInstance().getMainActivityContext(),
           AppConfig.getInstance().getUtilsProvider().getAppTheme(),
           R.string.archive_password_prompt,

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -400,7 +400,9 @@ public void onCreate(final Bundle savedInstanceState) {
               ExtensionsKt.updateAUAlias(
                   this,
                   !PackageUtils.Companion.appInstalledOrNot(
-                      AboutActivity.PACKAGE_AMAZE_UTILS, mainActivity.getPackageManager()));
+                          AboutActivity.PACKAGE_AMAZE_UTILS, mainActivity.getPackageManager())
+                      && !getBoolean(
+                          PreferencesConstants.PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS));
             })
         .subscribeOn(Schedulers.io())
         .observeOn(AndroidSchedulers.mainThread())

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ROOTMODE;
@@ -94,6 +95,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_TEXTEDITOR_NEWSTACK:
       case PREFERENCE_CHANGEPATHS:
       case PREFERENCE_ROOT_LEGACY_LISTING:
+      case PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS:
         defaultValue = false;
         break;
       case PREFERENCE_SHOW_FILE_SIZE:

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -45,7 +45,9 @@ public enum OpenMode {
   GDRIVE,
   DROPBOX,
   BOX,
-  ONEDRIVE;
+  ONEDRIVE,
+
+  ANDROID_DATA;
 
   /**
    * Get open mode based on the id assigned. Generally used to retrieve this type after config

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -305,7 +305,8 @@ public void refreshDrawer() {
       HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, file);
       hybridFile.generateMode(mainActivity);
 
-      long totalSpace = hybridFile.getTotal(mainActivity), freeSpace = hybridFile.getUsableSpace();
+      long totalSpace = hybridFile.getTotal(mainActivity);
+      long freeSpace = hybridFile.getUsableSpace();
 
       storageDirectoryPaths.add(file);
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -599,7 +599,6 @@ public static void openWith(
   /** Method determines if there is something to go back to */
   public static boolean canGoBack(Context context, HybridFile currentFile) {
     switch (currentFile.getMode()) {
-
         // we're on main thread and can't list the cloud files
       case DROPBOX:
       case BOX:

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -45,7 +45,9 @@ public enum OpenMode {
   GDRIVE,
   DROPBOX,
   BOX,
-  ONEDRIVE;
+  ONEDRIVE,
+
+  ANDROID_DATA;
 
   /**
    * Get open mode based on the id assigned. Generally used to retrieve this type after config

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -35,7 +35,6 @@
 import com.amaze.filemanager.utils.ProgressHandler;
 import com.amaze.filemanager.utils.Utils;
 
-import android.app.NotificationManager;
 import android.app.PendingIntent;
 import android.app.Service;
 import android.content.Context;
@@ -47,6 +46,7 @@
 import androidx.annotation.CallSuper;
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.core.app.NotificationManagerCompat;
 
 /**
  * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 28/11/2017, at 19:32.
@@ -72,7 +72,7 @@ public void onCreate() {
     wakeLock.setReferenceCounted(false);
   }
 
-  protected abstract NotificationManager getNotificationManager();
+  protected abstract NotificationManagerCompat getNotificationManager();
 
   protected abstract NotificationCompat.Builder getNotificationBuilder();
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -400,7 +400,9 @@ public void onCreate(final Bundle savedInstanceState) {
               ExtensionsKt.updateAUAlias(
                   this,
                   !PackageUtils.Companion.appInstalledOrNot(
-                      AboutActivity.PACKAGE_AMAZE_UTILS, mainActivity.getPackageManager()));
+                          AboutActivity.PACKAGE_AMAZE_UTILS, mainActivity.getPackageManager())
+                      && !getBoolean(
+                          PreferencesConstants.PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS));
             })
         .subscribeOn(Schedulers.io())
         .observeOn(AndroidSchedulers.mainThread())

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ROOTMODE;
@@ -94,6 +95,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_TEXTEDITOR_NEWSTACK:
       case PREFERENCE_CHANGEPATHS:
       case PREFERENCE_ROOT_LEGACY_LISTING:
+      case PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS:
         defaultValue = false;
         break;
       case PREFERENCE_SHOW_FILE_SIZE:

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -1079,9 +1079,7 @@ public Billing getBilling() {
 
   private SpannableString getSpannableText(String text, String freeSpace, String totalSpace) {
 
-    String s =
-        String.format(
-            "%s\n%s %s %s", text, freeSpace, mainActivity.getString(R.string.free_of), totalSpace);
+    String s = mainActivity.getString(R.string.free_of, text, freeSpace, totalSpace);
 
     SpannableString spannableString = new SpannableString(s);
 

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -304,7 +304,8 @@ public void refreshDrawer() {
       HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, file);
       hybridFile.generateMode(mainActivity);
 
-      long totalSpace = hybridFile.getTotal(mainActivity), freeSpace = hybridFile.getUsableSpace();
+      long totalSpace = hybridFile.getTotal(mainActivity);
+      long freeSpace = hybridFile.getUsableSpace();
 
       storageDirectoryPaths.add(file);
 

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -137,6 +137,6 @@ private void performEncryptUriTest(@NonNull final String origPath) {
     assertEquals(encryptedPath, result.get(0)[1]);
     assertEquals(
         "00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff",
-        utilsHandler.getSshHostKey(encryptedPath));
+        utilsHandler.getRemoteHostKey(encryptedPath));
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_ROOTMODE;
@@ -94,6 +95,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_TEXTEDITOR_NEWSTACK:
       case PREFERENCE_CHANGEPATHS:
       case PREFERENCE_ROOT_LEGACY_LISTING:
+      case PREFERENCE_DISABLE_PLAYER_INTENT_FILTERS:
         defaultValue = false;
         break;
       case PREFERENCE_SHOW_FILE_SIZE:

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -80,7 +80,6 @@
 import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.content.res.Configuration;
-import android.content.res.Resources;
 import android.graphics.Color;
 import android.os.Build;
 import android.text.SpannableString;
@@ -126,7 +125,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   };
 
   @NonNull private final MainActivity mainActivity;
-  private Resources resources;
   private DataUtils dataUtils;
 
   private ActionViewStateManager actionViewStateManager;
@@ -155,7 +153,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
 
   public Drawer(MainActivity mainActivity) {
     this.mainActivity = mainActivity;
-    resources = mainActivity.getResources();
     dataUtils = DataUtils.getInstance();
 
     drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -45,7 +45,9 @@ public enum OpenMode {
   GDRIVE,
   DROPBOX,
   BOX,
-  ONEDRIVE;
+  ONEDRIVE,
+
+  ANDROID_DATA;
 
   /**
    * Get open mode based on the id assigned. Generally used to retrieve this type after config

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -80,7 +80,6 @@
 import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.content.res.Configuration;
-import android.content.res.Resources;
 import android.graphics.Color;
 import android.os.Build;
 import android.text.TextUtils;
@@ -121,7 +120,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   };
 
   @NonNull private final MainActivity mainActivity;
-  private Resources resources;
   private DataUtils dataUtils;
 
   private ActionViewStateManager actionViewStateManager;
@@ -150,7 +148,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
 
   public Drawer(MainActivity mainActivity) {
     this.mainActivity = mainActivity;
-    resources = mainActivity.getResources();
     dataUtils = DataUtils.getInstance();
 
     drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -80,7 +80,6 @@
 import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.content.res.Configuration;
-import android.content.res.Resources;
 import android.graphics.Color;
 import android.os.Build;
 import android.text.TextUtils;
@@ -121,7 +120,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   };
 
   @NonNull private final MainActivity mainActivity;
-  private Resources resources;
   private DataUtils dataUtils;
 
   private ActionViewStateManager actionViewStateManager;
@@ -150,7 +148,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
 
   public Drawer(MainActivity mainActivity) {
     this.mainActivity = mainActivity;
-    resources = mainActivity.getResources();
     dataUtils = DataUtils.getInstance();
 
     drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -80,7 +80,6 @@
 import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.content.res.Configuration;
-import android.content.res.Resources;
 import android.graphics.Color;
 import android.os.Build;
 import android.text.TextUtils;
@@ -121,7 +120,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   };
 
   @NonNull private final MainActivity mainActivity;
-  private Resources resources;
   private DataUtils dataUtils;
 
   private ActionViewStateManager actionViewStateManager;
@@ -150,7 +148,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
 
   public Drawer(MainActivity mainActivity) {
     this.mainActivity = mainActivity;
-    resources = mainActivity.getResources();
     dataUtils = DataUtils.getInstance();
 
     drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -137,6 +137,6 @@ private void performEncryptUriTest(@NonNull final String origPath) {
     assertEquals(encryptedPath, result.get(0)[1]);
     assertEquals(
         "00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff",
-        utilsHandler.getSshHostKey(encryptedPath));
+        utilsHandler.getRemoteHostKey(encryptedPath));
   }
 }

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -137,6 +137,6 @@ private void performEncryptUriTest(@NonNull final String origPath) {
     assertEquals(encryptedPath, result.get(0)[1]);
     assertEquals(
         "00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff",
-        utilsHandler.getSshHostKey(encryptedPath));
+        utilsHandler.getRemoteHostKey(encryptedPath));
   }
 }

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -137,6 +137,6 @@ private void performEncryptUriTest(@NonNull final String origPath) {
     assertEquals(encryptedPath, result.get(0)[1]);
     assertEquals(
         "00:11:22:33:44:55:66:77:88:99:aa:bb:cc:dd:ee:ff",
-        utilsHandler.getSshHostKey(encryptedPath));
+        utilsHandler.getRemoteHostKey(encryptedPath));
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -140,6 +140,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   private View drawerHeaderLayout, drawerHeaderView;
   private ImageView donateImageView;
   private ImageView telegramImageView;
+  private ImageView instagramImageView;
   private TextView appVersion;
 
   /** Tablet is defined as 'width > 720dp' */
@@ -157,12 +158,14 @@ public Drawer(MainActivity mainActivity) {
     drawerHeaderView = drawerHeaderLayout.findViewById(R.id.drawer_header);
     donateImageView = drawerHeaderLayout.findViewById(R.id.donate);
     telegramImageView = drawerHeaderLayout.findViewById(R.id.telegram);
+    instagramImageView = drawerHeaderLayout.findViewById(R.id.instagram);
     appVersion = drawerHeaderLayout.findViewById(R.id.app_version);
     if (BuildConfig.DEBUG) {
       appVersion.setVisibility(View.VISIBLE);
     }
     donateImageView.setOnClickListener(v -> new Billing(mainActivity));
     telegramImageView.setOnClickListener(v -> Utils.openTelegramURL(mainActivity));
+    instagramImageView.setOnClickListener(v -> Utils.openInstagramURL(mainActivity));
     initDrawerFocusItems();
     /*drawerHeaderView.setOnLongClickListener(
     v -> {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -140,6 +140,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
   private View drawerHeaderLayout, drawerHeaderView;
   private ImageView donateImageView;
   private ImageView telegramImageView;
+  private ImageView instagramImageView;
   private TextView appVersion;
 
   /** Tablet is defined as 'width > 720dp' */
@@ -157,12 +158,14 @@ public Drawer(MainActivity mainActivity) {
     drawerHeaderView = drawerHeaderLayout.findViewById(R.id.drawer_header);
     donateImageView = drawerHeaderLayout.findViewById(R.id.donate);
     telegramImageView = drawerHeaderLayout.findViewById(R.id.telegram);
+    instagramImageView = drawerHeaderLayout.findViewById(R.id.instagram);
     appVersion = drawerHeaderLayout.findViewById(R.id.app_version);
     if (BuildConfig.DEBUG) {
       appVersion.setVisibility(View.VISIBLE);
     }
     donateImageView.setOnClickListener(v -> new Billing(mainActivity));
     telegramImageView.setOnClickListener(v -> Utils.openTelegramURL(mainActivity));
+    instagramImageView.setOnClickListener(v -> Utils.openInstagramURL(mainActivity));
     initDrawerFocusItems();
     /*drawerHeaderView.setOnLongClickListener(
     v -> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -334,7 +334,8 @@ private ArrayList<LayoutElementParcelable> getCachedMediaList(
     int mediaType = Integer.parseInt(path);
     if (5 == mediaType
         || 6 == mediaType
-        || mainActivityViewModel.getMediaCacheHash().get(mediaType) == null || forceReload) {
+        || mainActivityViewModel.getMediaCacheHash().get(mediaType) == null
+        || forceReload) {
       switch (Integer.parseInt(path)) {
         case 0:
           list = listImages();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1021,6 +1021,7 @@ public void goBack() {
           } else if (OpenMode.FTP.equals(mainFragmentViewModel.getOpenMode())) {
             if (mainFragmentViewModel.getCurrentPath() != null) {
               String parent = currentFile.getParent(getContext());
+              // Hack.
               if (parent != null && parent.contains("://")) {
                 loadlist(parent, true, mainFragmentViewModel.getOpenMode());
               } else {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -405,7 +405,7 @@ public void execute(
                 break;
               }
             } catch (Exception e) {
-              LOG.error("Got exception checkout: " + f1.getPath());
+              LOG.error("Got exception checkout: " + f1.getPath(), e);
 
               failedFOps.add(sourceFiles.get(i));
               for (int j = i + 1; j < sourceFiles.size(); j++) failedFOps.add(sourceFiles.get(j));

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.junit.runner.RunWith;
 
 import com.amaze.filemanager.database.models.OperationData;
-import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
+import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 
 import android.content.Context;
 import android.os.Environment;
@@ -118,7 +118,7 @@ public void testRepeatedSaveBookmarkShouldNeverThrowException() {
   }
 
   private void performEncryptUriTest(@NonNull final String origPath) {
-    String encryptedPath = SshClientUtils.encryptSshPathAsNecessary(origPath);
+    String encryptedPath = NetCopyClientUtils.INSTANCE.encryptFtpPathAsNecessary(origPath);
 
     utilsHandler.saveToDatabase(
         new OperationData(

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/hashcalculator/CalculateHashSftpCallback.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
+import com.amaze.filemanager.filesystem.ftp.NetCopyClientUtils;
 import com.amaze.filemanager.filesystem.ssh.SshClientSessionTemplate;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 
@@ -63,7 +64,7 @@ private SshClientSessionTemplate<String> getHash(String command) {
     return new SshClientSessionTemplate<String>(file.getPath()) {
       @Override
       public String execute(Session session) throws IOException {
-        String path = SshClientUtils.extractRemotePathFrom(file.getPath());
+        String path = NetCopyClientUtils.INSTANCE.extractRemotePathFrom(file.getPath());
         String fullCommand = String.format(command, path);
         Session.Command cmd = session.exec(fullCommand);
         String result = new String(IOUtils.readFully(cmd.getInputStream()).toByteArray());

File: app/src/main/java/com/amaze/filemanager/database/daos/SftpEntryDao.java
Patch:
@@ -75,7 +75,7 @@ public interface SftpEntryDao {
 
   @Query(
       "SELECT " + COLUMN_HOST_PUBKEY + " FROM " + TABLE_SFTP + " WHERE " + COLUMN_PATH + " = :uri")
-  Single<String> getSshHostKey(String uri);
+  Single<String> getRemoteHostKey(String uri);
 
   @Query(
       "SELECT "

File: app/src/main/java/com/amaze/filemanager/database/models/OperationData.java
Patch:
@@ -98,6 +98,7 @@ public OperationData(
     this.sshKey = sshKey;
   }
 
+  @NonNull
   @Override
   public String toString() {
     StringBuilder sb =

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/SftpEntry.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.text.TextUtils;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
@@ -51,6 +52,7 @@ public SftpEntry(String path, String name, String hostKey, String sshKeyName, St
     this.sshKey = sshKey;
   }
 
+  @NonNull
   @Override
   public String toString() {
     StringBuilder sb = new StringBuilder(super.toString());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -23,13 +23,11 @@
 import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.utils.SmbUtil.PARAM_DISABLE_IPC_SIGNING_CHECK;
 
-import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.MalformedURLException;
 import java.net.URL;
 import java.net.URLDecoder;
 import java.net.URLEncoder;
-import java.security.GeneralSecurityException;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -326,7 +324,7 @@ public void afterTextChanged(Editable s) {
                   conName.getText().toString(),
                   SmbUtil.getSmbEncryptedPath(getActivity(), smbFile.getPath())
                 };
-          } catch (GeneralSecurityException | IOException e) {
+          } catch (Exception e) {
             LOG.warn("failed to load smb dialog info", e);
             Toast.makeText(getActivity(), getString(R.string.error), Toast.LENGTH_LONG).show();
             return;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -24,7 +24,7 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.JELLY_BEAN_MR2;
 import static android.os.Build.VERSION_CODES.Q;
-import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.ftp.NetCopyClientConnectionPool.SSH_URI_PREFIX;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_DIVIDERS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_GOBACK_BUTTON;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -375,6 +375,7 @@ public void updatePath(
     switch (openmode) {
       case SFTP:
       case SMB:
+      case FTP:
         newPath = HybridFile.parseAndFormatUriForDisplay(news);
         break;
       case OTG:

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -372,7 +372,7 @@ public void done(HybridFile file, boolean b) {
     assertTrue(assertFlag.get());
   }
 
-  private abstract class AbstractErrorCallback implements Operations.ErrorCallBack {
+  public abstract static class AbstractErrorCallback implements Operations.ErrorCallBack {
     @Override
     public void exists(HybridFile file) {}
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -30,6 +30,8 @@ public enum OpenMode {
   FILE,
   SMB,
   SFTP,
+  FTP,
+  NFS,
 
   /** Custom file types like apk/images/downloads (which don't have a defined path) */
   CUSTOM,

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -76,7 +76,8 @@ public void clear(OpenMode serviceType) {
                     .cloudEntryDao()
                     .delete(cloudEntry)
                     .subscribeOn(Schedulers.io())
-                    .subscribe());
+                    .subscribe(),
+            throwable -> LOG.warn("failed to delete cloud connection", throwable));
   }
 
   public void updateEntry(OpenMode serviceType, CloudEntry newCloudEntry)

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -562,7 +562,9 @@ private void setItems(
 
     for (LayoutElementParcelable e : elements) {
       if (invalidate || isItemsDigestedNullOrEmpty()) {
-        listItems.add(new ListItem(e.isBack, e));
+        if (e != null) {
+          listItems.add(new ListItem(e.isBack, e));
+        }
         uris.add(e != null ? e.iconData : null);
       }
     }

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -76,7 +76,8 @@ public void clear(OpenMode serviceType) {
                     .cloudEntryDao()
                     .delete(cloudEntry)
                     .subscribeOn(Schedulers.io())
-                    .subscribe());
+                    .subscribe(),
+            throwable -> LOG.warn("failed to delete cloud connection", throwable));
   }
 
   public void updateEntry(OpenMode serviceType, CloudEntry newCloudEntry)

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -562,7 +562,9 @@ private void setItems(
 
     for (LayoutElementParcelable e : elements) {
       if (invalidate || isItemsDigestedNullOrEmpty()) {
-        listItems.add(new ListItem(e.isBack, e));
+        if (e != null) {
+          listItems.add(new ListItem(e.isBack, e));
+        }
         uris.add(e != null ? e.iconData : null);
       }
     }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2100,14 +2100,14 @@ public void onPostExecute(String query) {
   }
 
   @Override
-  public void onProgressUpdate(HybridFileParcelable val, String query) {
+  public void onProgressUpdate(@NonNull HybridFileParcelable hybridFileParcelable, String query) {
     final MainFragment mainFragment = getCurrentMainFragment();
     if (mainFragment == null) {
       // TODO cancel search
       return;
     }
 
-    mainFragment.addSearchResult(val, query);
+    mainFragment.addSearchResult(hybridFileParcelable, query);
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -56,7 +56,7 @@ public interface HelperCallbacks {
 
     void onPostExecute(String query);
 
-    void onProgressUpdate(HybridFileParcelable val, String query);
+    void onProgressUpdate(@NonNull HybridFileParcelable val, String query);
 
     void onCancelled();
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -503,7 +503,7 @@ else if (cursor.getCount() > 0 && cursor.moveToFirst()) {
             RootHelper.generateBaseFile(new File(f), showHiddenFiles);
         if (hybridFileParcelable != null) {
           hybridFileParcelable.generateMode(mainFragment.getActivity());
-          if (!hybridFileParcelable.isSmb()
+          if (hybridFileParcelable.isSimpleFile()
               && !hybridFileParcelable.isDirectory()
               && hybridFileParcelable.exists()) {
             LayoutElementParcelable parcelable = createListParcelables(hybridFileParcelable);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -503,7 +503,7 @@ else if (cursor.getCount() > 0 && cursor.moveToFirst()) {
             RootHelper.generateBaseFile(new File(f), showHiddenFiles);
         if (hybridFileParcelable != null) {
           hybridFileParcelable.generateMode(mainFragment.getActivity());
-          if (!hybridFileParcelable.isSmb()
+          if (hybridFileParcelable.isSimpleFile()
               && !hybridFileParcelable.isDirectory()
               && hybridFileParcelable.exists()) {
             LayoutElementParcelable parcelable = createListParcelables(hybridFileParcelable);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -102,7 +102,9 @@ public class FileUtils {
   private static final Logger LOG = LoggerFactory.getLogger(FileUtils.class);
 
   private static final String[] COMPRESSED_FILE_EXTENSIONS =
-      new String[] {"zip", "cab", "bz2", "ace", "bz", "gz", "7z", "jar", "apk", "xz", "lzma", "Z"};
+      new String[] {
+        "zip", "rar", "cab", "bz2", "ace", "bz", "gz", "7z", "jar", "apk", "xz", "lzma", "Z"
+      };
 
   public static final String FILE_PROVIDER_PREFIX = "storage_root";
   public static final String NOMEDIA_FILE = ".nomedia";

File: app/src/fdroid/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -34,7 +34,7 @@ public class CloudLoaderAsyncTask extends AsyncTask<Void, Void, Boolean> {
 
   private final WeakReference<MainActivity> mainActivity;
 
-  public CloudLoaderAsyncTask(MainActivity mainActivity, CloudHandler cloudHandler, Cursor data) {
+  public CloudLoaderAsyncTask(MainActivity mainActivity, CloudHandler unused1, Cursor unused2) {
     this.mainActivity = new WeakReference<>(mainActivity);
   }
 

File: app/src/fdroid/java/com/cloudrail/si/services/Box.java
Patch:
@@ -25,7 +25,7 @@
 import android.content.Context;
 
 public class Box extends CloudStorage {
-  public Box(Context c, String s, String s1) {
+  public Box(Context unused1, String unused2, String unused3) {
     super();
   }
 }

File: app/src/fdroid/java/com/cloudrail/si/services/Dropbox.java
Patch:
@@ -26,7 +26,7 @@
 
 public class Dropbox extends CloudStorage {
 
-  public Dropbox(Context c, String s, String s1, String s2, String s3) {
+  public Dropbox(Context unused1, String unused2, String unused3, String unused4, String unused5) {
     super();
   }
 }

File: app/src/fdroid/java/com/cloudrail/si/services/GoogleDrive.java
Patch:
@@ -25,7 +25,8 @@
 import android.content.Context;
 
 public class GoogleDrive extends CloudStorage {
-  public GoogleDrive(Context c, String googleDriveKey, String s, String s1, String s2) {
+  public GoogleDrive(
+      Context unused1, String unused2, String unused3, String unused4, String unused5) {
     super();
   }
 }

File: app/src/fdroid/java/com/cloudrail/si/services/OneDrive.java
Patch:
@@ -25,7 +25,7 @@
 import android.content.Context;
 
 public class OneDrive extends CloudStorage {
-  public OneDrive(Context c, String s, String s1, String s2, String s3) {
+  public OneDrive(Context unused1, String unused2, String unused3, String unused4, String unused5) {
     super();
   }
 }

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -86,7 +86,8 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present
+          && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: app/src/main/java/com/amaze/filemanager/crashreport/ErrorActivity.java
Patch:
@@ -278,7 +278,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
   }
 
   private void sendReportEmail() {
-    final Intent i = Utils.buildEmailIntent(buildMarkdown(), Utils.EMAIL_NOREPLY_REPORTS);
+    final Intent i = Utils.buildEmailIntent(this, buildMarkdown(), Utils.EMAIL_NOREPLY_REPORTS);
     if (i.resolveActivity(getPackageManager()) != null) {
       startActivity(i);
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -87,10 +87,8 @@
 import io.reactivex.android.schedulers.AndroidSchedulers;
 import io.reactivex.disposables.Disposable;
 import io.reactivex.schedulers.Schedulers;
-
 import jcifs.smb.SmbException;
 import jcifs.smb.SmbFile;
-
 import net.schmizz.sshj.SSHClient;
 import net.schmizz.sshj.common.Buffer;
 import net.schmizz.sshj.common.IOUtils;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1414,7 +1414,7 @@ public LayoutElementParcelable generateLayoutElement(@NonNull Context c, boolean
       case ROOT:
         File file = getFile();
         LayoutElementParcelable layoutElement;
-        if (isDirectory()) {
+        if (isDirectory(c)) {
 
           layoutElement =
               new LayoutElementParcelable(

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -157,7 +157,9 @@ public static void launchCloud(
                             Uri.parse(CloudStreamer.URL + Uri.fromFile(file).getEncodedPath());
                         Intent i = new Intent(Intent.ACTION_VIEW);
                         i.setDataAndType(
-                            uri, MimeTypes.getMimeType(baseFile.getPath(), baseFile.isDirectory()));
+                            uri,
+                            MimeTypes.getMimeType(
+                                baseFile.getPath(), baseFile.isDirectory(activity)));
                         PackageManager packageManager = activity.getPackageManager();
                         List<ResolveInfo> resInfos = packageManager.queryIntentActivities(i, 0);
                         if (resInfos != null && resInfos.size() > 0) activity.startActivity(i);

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -803,7 +803,8 @@ public void run() {
                                   .getEncodedPath());
                   Intent i = new Intent(Intent.ACTION_VIEW);
                   i.setDataAndType(
-                      uri, MimeTypes.getMimeType(baseFile.getPath(), baseFile.isDirectory()));
+                      uri,
+                      MimeTypes.getMimeType(baseFile.getPath(), baseFile.isDirectory(activity)));
                   PackageManager packageManager = activity.getPackageManager();
                   List<ResolveInfo> resInfos = packageManager.queryIntentActivities(i, 0);
                   if (resInfos != null && resInfos.size() > 0) activity.startActivity(i);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -279,7 +279,9 @@ public static void launchSftp(final HybridFile baseFile, final MainActivity acti
                             Uri.parse(CloudStreamer.URL + Uri.fromFile(file).getEncodedPath());
                         Intent i = new Intent(Intent.ACTION_VIEW);
                         i.setDataAndType(
-                            uri, MimeTypes.getMimeType(baseFile.getPath(), baseFile.isDirectory()));
+                            uri,
+                            MimeTypes.getMimeType(
+                                baseFile.getPath(), baseFile.isDirectory(activity)));
                         PackageManager packageManager = activity.getPackageManager();
                         List<ResolveInfo> resInfos = packageManager.queryIntentActivities(i, 0);
                         if (resInfos != null && resInfos.size() > 0) activity.startActivity(i);
@@ -294,7 +296,6 @@ public static void launchSftp(final HybridFile baseFile, final MainActivity acti
                       }
                     });
               } catch (Exception e) {
-
                 e.printStackTrace();
               }
             })

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1903,6 +1903,7 @@ public void onNewIntent(Intent i) {
       supportInvalidateOptionsMenu();
     } else if (intent.getAction() != null) {
       checkForExternalIntent(intent);
+      invalidateFragmentAndBundle(null, false);
 
       if (SDK_INT >= KITKAT) {
         if (intent.getAction().equals(UsbManager.ACTION_USB_DEVICE_DETACHED)) {

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -41,7 +41,9 @@
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38.
+ */
 public class AppsAdapterPreloadModel implements ListPreloader.PreloadModelProvider<String> {
 
   private Context mContext;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -26,8 +26,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.cloudrail.si.CloudRail;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -28,8 +28,8 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.SafRootHolder;
@@ -38,7 +38,7 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -36,8 +36,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -25,8 +25,8 @@
 import java.util.HashSet;
 import java.util.concurrent.Callable;
 
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.Operations;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.util.regex.Pattern;
 
 import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.SearchWorkerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -29,8 +29,8 @@
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.List;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.fragments.CloudSheetFragment;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.util.HashSet;
 import java.util.Set;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.exceptions.NotAllowedException;
 import com.amaze.filemanager.exceptions.OperationWouldOverwriteException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -20,9 +20,9 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.file_operations.filesystem.OpenMode.DOCUMENT_FILE;
+import static com.amaze.filemanager.fileoperations.filesystem.OpenMode.DOCUMENT_FILE;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -33,8 +33,8 @@
 import java.util.concurrent.Executor;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.BuildConfig;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -123,7 +123,7 @@ public static Extractor getExtractorInstance(
     } else if (isBzip2(type)) {
       extractor = new Bzip2Extractor(context, file.getPath(), outputPath, listener, updatePosition);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
       Log.e(TAG, "The compressed file has no way of opening it: " + file);
@@ -161,7 +161,7 @@ public static Decompressor getCompressorInstance(@NonNull Context context, @NonN
       // without the compression extension
       decompressor = new UnknownCompressedFileDecompressor(context);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -36,9 +36,9 @@
 import java.nio.channels.WritableByteChannel;
 import java.util.Objects;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
-import com.amaze.filemanager.file_operations.utils.OnLowMemory;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.utils.OnLowMemory;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.ExternalSdCardOperation;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.utils.Utils.openURL;
 
 import com.amaze.filemanager.LogHelper;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -86,7 +86,8 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present
+          && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.services.Box;
 import com.cloudrail.si.services.Dropbox;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/CloudPluginException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 18/4/17. */
 public class CloudPluginException extends Exception {}

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/ShellNotRunningException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 24/12/16. Exception thrown when root is */
 public class ShellNotRunningException extends Exception {

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/StreamNotFoundException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /**
  * Created by vishal on 21/1/17.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/StorageNaming.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 import java.io.File;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
+import com.amaze.filemanager.fileoperations.filesystem.smbstreamer.Streamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -18,12 +18,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 public class CloudStreamSource extends RandomAccessStream {
   protected long fp;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.compressed;
+package com.amaze.filemanager.fileoperations.filesystem.compressed;
 
 import java.util.Collection;
 import java.util.HashMap;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.BufferedReader;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
+import com.amaze.filemanager.fileoperations.filesystem.cloud.CloudStreamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSource.java
Patch:
@@ -18,13 +18,13 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 import android.webkit.MimeTypeMap;
 

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -41,7 +41,9 @@
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38.
+ */
 public class AppsAdapterPreloadModel implements ListPreloader.PreloadModelProvider<String> {
 
   private Context mContext;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -26,8 +26,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.cloudrail.si.CloudRail;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -28,8 +28,8 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.SafRootHolder;
@@ -38,7 +38,7 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -36,8 +36,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -25,8 +25,8 @@
 import java.util.HashSet;
 import java.util.concurrent.Callable;
 
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.Operations;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.util.regex.Pattern;
 
 import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.SearchWorkerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -29,8 +29,8 @@
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.List;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.fragments.CloudSheetFragment;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.util.HashSet;
 import java.util.Set;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.exceptions.NotAllowedException;
 import com.amaze.filemanager.exceptions.OperationWouldOverwriteException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -20,9 +20,9 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.file_operations.filesystem.OpenMode.DOCUMENT_FILE;
+import static com.amaze.filemanager.fileoperations.filesystem.OpenMode.DOCUMENT_FILE;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -33,8 +33,8 @@
 import java.util.concurrent.Executor;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.BuildConfig;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -123,7 +123,7 @@ public static Extractor getExtractorInstance(
     } else if (isBzip2(type)) {
       extractor = new Bzip2Extractor(context, file.getPath(), outputPath, listener, updatePosition);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
       Log.e(TAG, "The compressed file has no way of opening it: " + file);
@@ -161,7 +161,7 @@ public static Decompressor getCompressorInstance(@NonNull Context context, @NonN
       // without the compression extension
       decompressor = new UnknownCompressedFileDecompressor(context);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -36,9 +36,9 @@
 import java.nio.channels.WritableByteChannel;
 import java.util.Objects;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
-import com.amaze.filemanager.file_operations.utils.OnLowMemory;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.utils.OnLowMemory;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.ExternalSdCardOperation;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.utils.Utils.openURL;
 
 import com.amaze.filemanager.LogHelper;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -86,7 +86,8 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present
+          && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.services.Box;
 import com.cloudrail.si.services.Dropbox;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/CloudPluginException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 18/4/17. */
 public class CloudPluginException extends Exception {}

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/ShellNotRunningException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 24/12/16. Exception thrown when root is */
 public class ShellNotRunningException extends Exception {

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/StreamNotFoundException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /**
  * Created by vishal on 21/1/17.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/StorageNaming.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 import java.io.File;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
+import com.amaze.filemanager.fileoperations.filesystem.smbstreamer.Streamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -18,12 +18,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 public class CloudStreamSource extends RandomAccessStream {
   protected long fp;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.compressed;
+package com.amaze.filemanager.fileoperations.filesystem.compressed;
 
 import java.util.Collection;
 import java.util.HashMap;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.BufferedReader;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
+import com.amaze.filemanager.fileoperations.filesystem.cloud.CloudStreamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSource.java
Patch:
@@ -18,13 +18,13 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 import android.webkit.MimeTypeMap;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/Streamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.utils.Utils.openURL;
 
 import com.amaze.filemanager.LogHelper;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -21,7 +21,6 @@
 package com.amaze.filemanager.ui.dialogs;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -886,6 +886,7 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
                         scrollPosition -> {
                           if(scrollPosition != -1)
                             listView.scrollToPosition(Math.min(scrollPosition + 4, adapter.getItemCount() - 1));
+                            adapter.notifyItemChanged(scrollPosition);
                         });
       });
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -885,7 +885,7 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
                         getViewLifecycleOwner(),
                         scrollPosition -> {
                           if(scrollPosition != -1)
-                            listView.scrollToPosition(Math.min(scrollPosition + 4, adapter.getItemCount()));
+                            listView.scrollToPosition(Math.min(scrollPosition + 4, adapter.getItemCount() - 1));
                         });
       });
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.utils.Utils.openURL;
 
 import com.amaze.filemanager.LogHelper;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -21,7 +21,6 @@
 package com.amaze.filemanager.ui.dialogs;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.io.File;

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -26,8 +26,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.cloudrail.si.CloudRail;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -28,8 +28,8 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.SafRootHolder;
@@ -38,7 +38,7 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -29,8 +29,8 @@
 import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.exceptions.StreamNotFoundException;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.exceptions.StreamNotFoundException;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.exceptions.NotAllowedException;
 import com.amaze.filemanager.exceptions.OperationWouldOverwriteException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -86,7 +86,8 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present
+          && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.services.Box;
 import com.cloudrail.si.services.Dropbox;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/CloudPluginException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 18/4/17. */
 public class CloudPluginException extends Exception {}

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/ShellNotRunningException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 24/12/16. Exception thrown when root is */
 public class ShellNotRunningException extends Exception {

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/StreamNotFoundException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /**
  * Created by vishal on 21/1/17.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/StorageNaming.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 import java.io.File;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -45,7 +45,7 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
+import com.amaze.filemanager.fileoperations.filesystem.smbstreamer.Streamer;
 
 import android.net.Uri;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -18,12 +18,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 public class CloudStreamSource extends RandomAccessStream {
   protected long fp;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -41,7 +41,9 @@
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38.
+ */
 public class AppsAdapterPreloadModel implements ListPreloader.PreloadModelProvider<String> {
 
   private Context mContext;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -26,8 +26,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.cloudrail.si.CloudRail;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -28,8 +28,8 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.SafRootHolder;
@@ -38,7 +38,7 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -36,8 +36,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -25,8 +25,8 @@
 import java.util.HashSet;
 import java.util.concurrent.Callable;
 
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.Operations;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.util.regex.Pattern;
 
 import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.SearchWorkerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -29,8 +29,8 @@
 import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.exceptions.StreamNotFoundException;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.exceptions.StreamNotFoundException;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -29,8 +29,8 @@
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.List;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.fragments.CloudSheetFragment;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.util.HashSet;
 import java.util.Set;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.exceptions.NotAllowedException;
 import com.amaze.filemanager.exceptions.OperationWouldOverwriteException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -20,9 +20,9 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.file_operations.filesystem.OpenMode.DOCUMENT_FILE;
+import static com.amaze.filemanager.fileoperations.filesystem.OpenMode.DOCUMENT_FILE;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -33,8 +33,8 @@
 import java.util.concurrent.Executor;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.BuildConfig;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -123,7 +123,7 @@ public static Extractor getExtractorInstance(
     } else if (isBzip2(type)) {
       extractor = new Bzip2Extractor(context, file.getPath(), outputPath, listener, updatePosition);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
       Log.e(TAG, "The compressed file has no way of opening it: " + file);
@@ -161,7 +161,7 @@ public static Decompressor getCompressorInstance(@NonNull Context context, @NonN
       // without the compression extension
       decompressor = new UnknownCompressedFileDecompressor(context);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -36,9 +36,9 @@
 import java.nio.channels.WritableByteChannel;
 import java.util.Objects;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
-import com.amaze.filemanager.file_operations.utils.OnLowMemory;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.utils.OnLowMemory;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.ExternalSdCardOperation;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -86,7 +86,8 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present
+          && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.services.Box;
 import com.cloudrail.si.services.Dropbox;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/CloudPluginException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 18/4/17. */
 public class CloudPluginException extends Exception {}

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/ShellNotRunningException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 24/12/16. Exception thrown when root is */
 public class ShellNotRunningException extends Exception {

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/StreamNotFoundException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /**
  * Created by vishal on 21/1/17.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/StorageNaming.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 import java.io.File;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
+import com.amaze.filemanager.fileoperations.filesystem.smbstreamer.Streamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -18,12 +18,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 public class CloudStreamSource extends RandomAccessStream {
   protected long fp;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.compressed;
+package com.amaze.filemanager.fileoperations.filesystem.compressed;
 
 import java.util.Collection;
 import java.util.HashMap;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.BufferedReader;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
+import com.amaze.filemanager.fileoperations.filesystem.cloud.CloudStreamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSource.java
Patch:
@@ -18,13 +18,13 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 import android.webkit.MimeTypeMap;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/Streamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/streams/RandomAccessStream.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.streams;
+package com.amaze.filemanager.fileoperations.filesystem.streams;
 
 import java.io.IOException;
 import java.io.InputStream;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/usb/SingletonUsbOtg.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.usb;
+package com.amaze.filemanager.fileoperations.filesystem.usb;
 
 import android.net.Uri;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -84,13 +84,13 @@ public Unit call()
           DocumentFile documentFile =
               DocumentFile.fromSingleUri(AppConfig.getInstance(), fileAbstraction.uri);
           if (documentFile != null && documentFile.exists() && documentFile.canWrite()) {
-            outputStream = contentResolver.openOutputStream(fileAbstraction.uri);
+            outputStream = contentResolver.openOutputStream(fileAbstraction.uri, "wt");
           } else {
             destFile = FileUtils.fromContentUri(fileAbstraction.uri);
             outputStream = openFile(destFile, context.get());
           }
         } else {
-          outputStream = contentResolver.openOutputStream(fileAbstraction.uri);
+          outputStream = contentResolver.openOutputStream(fileAbstraction.uri, "wt");
         }
         break;
       case FILE:

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -21,6 +21,7 @@
 package com.amaze.filemanager.ui.dialogs;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -697,6 +697,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
         getItemsDigested().get(p).setAnimate(true);
       }
       final LayoutElementParcelable rowItem = getItemsDigested().get(p).elem;
+      if (rowItem == null) return;
       if (dragAndDropPreference != PreferencesConstants.PREFERENCE_DRAG_DEFAULT) {
         holder.rl.setOnDragListener(
             new RecyclerAdapterDragListener(this, holder, dragAndDropPreference, mainFrag));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -84,13 +84,13 @@ public Unit call()
           DocumentFile documentFile =
               DocumentFile.fromSingleUri(AppConfig.getInstance(), fileAbstraction.uri);
           if (documentFile != null && documentFile.exists() && documentFile.canWrite()) {
-            outputStream = contentResolver.openOutputStream(fileAbstraction.uri);
+            outputStream = contentResolver.openOutputStream(fileAbstraction.uri, "wt");
           } else {
             destFile = FileUtils.fromContentUri(fileAbstraction.uri);
             outputStream = openFile(destFile, context.get());
           }
         } else {
-          outputStream = contentResolver.openOutputStream(fileAbstraction.uri);
+          outputStream = contentResolver.openOutputStream(fileAbstraction.uri, "wt");
         }
         break;
       case FILE:

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -27,7 +27,9 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 20/11/2017, at 15:26.
+ */
 public class CompressedObjectParcelable implements Parcelable {
   public static final int TYPE_GOBACK = -1, TYPE_NORMAL = 0;
 

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 import java.util.Calendar;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/AppsAdapterPreloadModel.java
Patch:
@@ -41,7 +41,9 @@
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 15:38.
+ */
 public class AppsAdapterPreloadModel implements ListPreloader.PreloadModelProvider<String> {
 
   private Context mContext;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -36,7 +36,9 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 6/12/2017, at 15:15.
+ */
 public class RecyclerPreloadModelProvider
     implements ListPreloader.PreloadModelProvider<IconDataParcelable> {
 

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageDataFetcher.java
Patch:
@@ -32,7 +32,9 @@
 import androidx.annotation.NonNull;
 import androidx.core.content.ContextCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:12.
+ */
 public class ApkImageDataFetcher implements DataFetcher<Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoader.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:06.
+ */
 public class ApkImageModelLoader implements ModelLoader<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/apkimage/ApkImageModelLoaderFactory.java
Patch:
@@ -27,7 +27,9 @@
 import android.content.Context;
 import android.graphics.drawable.Drawable;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 10/12/2017, at 16:21.
+ */
 public class ApkImageModelLoaderFactory implements ModelLoaderFactory<String, Drawable> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -25,7 +25,9 @@
 
 import androidx.multidex.MultiDexApplication;
 
-/** @author Emmanuel on 22/11/2017, at 17:18. */
+/**
+ * @author Emmanuel on 22/11/2017, at 17:18.
+ */
 public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -26,8 +26,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.cloudrail.si.CloudRail;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CountItemsOrAndSizeTask.java
Patch:
@@ -33,7 +33,9 @@
 
 import androidx.core.util.Pair;
 
-/** @author Emmanuel on 12/5/2017, at 19:40. */
+/**
+ * @author Emmanuel on 12/5/2017, at 19:40.
+ */
 public class CountItemsOrAndSizeTask extends AsyncTask<Void, Pair<Integer, Long>, String> {
 
   private Context context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -28,8 +28,8 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.SafRootHolder;
@@ -38,7 +38,7 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -36,8 +36,8 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/movecopy/MoveFiles.java
Patch:
@@ -25,8 +25,8 @@
 import java.util.HashSet;
 import java.util.concurrent.Callable;
 
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.Operations;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.util.regex.Pattern;
 
 import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.SearchWorkerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -29,8 +29,8 @@
 import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.exceptions.StreamNotFoundException;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.exceptions.StreamNotFoundException;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -29,8 +29,8 @@
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -23,8 +23,8 @@
 import java.util.List;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.exceptions.CloudPluginException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.CloudPluginException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.fragments.CloudSheetFragment;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
 
 import java.util.HashSet;
 import java.util.Set;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -20,12 +20,12 @@
 
 package com.amaze.filemanager.database.models.utilities;
 
+import com.amaze.filemanager.database.UtilitiesDatabase;
+
 import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
-import com.amaze.filemanager.database.UtilitiesDatabase;
-
 /**
  * Base class {@link Entity} representation of tables in utilities.db.
  *

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.exceptions.NotAllowedException;
 import com.amaze.filemanager.exceptions.OperationWouldOverwriteException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -20,9 +20,9 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.file_operations.filesystem.OpenMode.DOCUMENT_FILE;
+import static com.amaze.filemanager.fileoperations.filesystem.OpenMode.DOCUMENT_FILE;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.ContentResolver;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -33,8 +33,8 @@
 import java.util.concurrent.Executor;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -24,7 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.BuildConfig;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -123,7 +123,7 @@ public static Extractor getExtractorInstance(
     } else if (isBzip2(type)) {
       extractor = new Bzip2Extractor(context, file.getPath(), outputPath, listener, updatePosition);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
       Log.e(TAG, "The compressed file has no way of opening it: " + file);
@@ -161,7 +161,7 @@ public static Decompressor getCompressorInstance(@NonNull Context context, @NonN
       // without the compression extension
       decompressor = new UnknownCompressedFileDecompressor(context);
     } else {
-      if(BuildConfig.DEBUG) {
+      if (BuildConfig.DEBUG) {
         throw new IllegalArgumentException("The compressed file has no way of opening it: " + file);
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -36,9 +36,9 @@
 import java.nio.channels.WritableByteChannel;
 import java.util.Objects;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
-import com.amaze.filemanager.file_operations.utils.OnLowMemory;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.utils.OnLowMemory;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.ExternalSdCardOperation;
 import com.amaze.filemanager.filesystem.FileProperties;
 import com.amaze.filemanager.filesystem.HybridFile;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -21,13 +21,13 @@
 package com.amaze.filemanager.ui.activities.superclasses;
 
 import static android.os.Build.VERSION.SDK_INT;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.readystatesoftware.systembartint.SystemBarTintManager;

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.CONTENT;
 import static com.amaze.filemanager.filesystem.EditableFileAbstraction.Scheme.FILE;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -37,7 +37,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.read.ReadTextFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -25,7 +25,7 @@
 import java.util.Random;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -29,7 +29,9 @@
 
 import androidx.annotation.ColorInt;
 
-/** @author Emmanuel on 24/5/2017, at 18:56. */
+/**
+ * @author Emmanuel on 24/5/2017, at 18:56.
+ */
 public class ColorUtils {
 
   public static void colorizeIcons(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircularColorsView;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_APPLIST_SORTBY;
 
 import java.lang.ref.WeakReference;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
 import com.amaze.filemanager.databinding.FragmentSheetCloudBinding;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -31,7 +31,9 @@
 import androidx.annotation.RequiresApi;
 import androidx.core.app.NotificationCompat;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 17/9/2017, at 13:34.
+ */
 public class NotificationConstants {
 
   public static final int COPY_ID = 0;

File: app/src/main/java/com/amaze/filemanager/ui/strings/StorageNamingHelper.java
Patch:
@@ -23,7 +23,7 @@
 import java.io.File;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.StorageNaming;
+import com.amaze.filemanager.fileoperations.filesystem.StorageNaming;
 
 import android.content.Context;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/CircularColorsView.java
Patch:
@@ -30,7 +30,9 @@
 
 import androidx.annotation.Nullable;
 
-/** @author Emmanuel on 6/10/2017, at 15:41. */
+/**
+ * @author Emmanuel on 6/10/2017, at 15:41.
+ */
 public class CircularColorsView extends View {
 
   private static final float DISTANCE_PERCENTUAL = 0.08f;

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageButton.java
Patch:
@@ -24,7 +24,9 @@
 import android.util.AttributeSet;
 import android.widget.ImageButton;
 
-/** @author Emmanuel on 8/5/2017, at 13:39. */
+/**
+ * @author Emmanuel on 8/5/2017, at 13:39.
+ */
 public class ThemedImageButton extends ThemedImageView {
 
   public ThemedImageButton(Context context) {

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -29,7 +29,9 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 31/1/2018, at 14:50.
+ */
 public class WarnableTextInputLayout extends TextInputLayout {
 
   private boolean isStyleWarning = false;

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputValidator.java
Patch:
@@ -84,7 +84,9 @@ public void afterTextChanged(Editable s) {
     doValidate(false);
   }
 
-  /** @return ReturnState.state */
+  /**
+   * @return ReturnState.state
+   */
   private int doValidate(boolean onlySetWarning) {
     ReturnState state = validator.isTextValid(editText.getText().toString());
     switch (state.state) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -24,7 +24,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
+import com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.SharedPreferences;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -20,13 +20,13 @@
 
 package com.amaze.filemanager.ui.views.appbar;
 
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
+import static com.amaze.filemanager.ui.fragments.preferencefragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 
 import java.util.ArrayList;
 import java.util.Objects;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.services.Box;
 import com.cloudrail.si.services.Dropbox;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -20,7 +20,9 @@
 
 package com.amaze.filemanager.utils;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33. */
+/**
+ * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 8/12/2017, at 16:33.
+ */
 public class GlideConstants {
 
   public static final int MAX_PRELOAD_FILES = 50;

File: app/src/main/java/com/amaze/filemanager/utils/ObtainableServiceBinder.java
Patch:
@@ -23,7 +23,9 @@
 import android.app.Service;
 import android.os.Binder;
 
-/** @author Emmanuel on 28/11/2017, at 19:04. */
+/**
+ * @author Emmanuel on 28/11/2017, at 19:04.
+ */
 public class ObtainableServiceBinder<T extends Service> extends Binder {
 
   private final T service;

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -130,7 +130,9 @@ public synchronized float getPercentProgress() {
    * for notification generation and process viewer fragment
    */
   public interface ProgressListener {
-    /** @param speed raw write speed in bytes */
+    /**
+     * @param speed raw write speed in bytes
+     */
     void onProgressed(long speed);
   }
 }

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -40,7 +40,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.asynctasks.movecopy.MoveFiles;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallableTest.java
Patch:
@@ -45,8 +45,8 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
-import com.amaze.filemanager.file_operations.exceptions.StreamNotFoundException;
+import com.amaze.filemanager.fileoperations.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.fileoperations.exceptions.StreamNotFoundException;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.root.ConcatenateFileCommand;

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -44,7 +44,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowPasswordUtil;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,7 +34,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
-import com.amaze.filemanager.file_operations.utils.UpdatePosition;
+import com.amaze.filemanager.fileoperations.utils.UpdatePosition;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.RarExtractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.SevenZipExtractor;

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -33,7 +33,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import androidx.test.core.app.ApplicationProvider;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,7 +36,7 @@
 
 import org.junit.Test;
 
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 
 import android.os.Environment;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.fileoperations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/test/ShadowNativeOperations.java
Patch:
@@ -23,7 +23,7 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.file_operations.filesystem.root.NativeOperations;
+import com.amaze.filemanager.fileoperations.filesystem.root.NativeOperations;
 
 import androidx.annotation.Nullable;
 

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.fileoperations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,7 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.fileoperations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/CloudPluginException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 18/4/17. */
 public class CloudPluginException extends Exception {}

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/ShellNotRunningException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /** Created by vishal on 24/12/16. Exception thrown when root is */
 public class ShellNotRunningException extends Exception {

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/exceptions/StreamNotFoundException.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.exceptions;
+package com.amaze.filemanager.fileoperations.exceptions;
 
 /**
  * Created by vishal on 21/1/17.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/StorageNaming.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem;
+package com.amaze.filemanager.fileoperations.filesystem;
 
 import java.io.File;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
+import com.amaze.filemanager.fileoperations.filesystem.smbstreamer.Streamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -18,12 +18,12 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 public class CloudStreamSource extends RandomAccessStream {
   protected long fp;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.compressed;
+package com.amaze.filemanager.fileoperations.filesystem.compressed;
 
 import java.util.Collection;
 import java.util.HashMap;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamServer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.BufferedReader;
@@ -42,7 +42,7 @@
 import java.util.TimeZone;
 import java.util.Vector;
 
-import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
+import com.amaze.filemanager.fileoperations.filesystem.cloud.CloudStreamer;
 
 import android.net.Uri;
 import android.util.Log;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSource.java
Patch:
@@ -18,13 +18,13 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 /** Created by Arpit on 06-07-2015. */
 import java.io.IOException;
 import java.io.InputStream;
 
-import com.amaze.filemanager.file_operations.filesystem.streams.RandomAccessStream;
+import com.amaze.filemanager.fileoperations.filesystem.streams.RandomAccessStream;
 
 import android.webkit.MimeTypeMap;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/Streamer.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 import java.io.File;
 import java.io.IOException;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/streams/RandomAccessStream.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.streams;
+package com.amaze.filemanager.fileoperations.filesystem.streams;
 
 import java.io.IOException;
 import java.io.InputStream;

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/usb/SingletonUsbOtg.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.usb;
+package com.amaze.filemanager.fileoperations.filesystem.usb;
 
 import android.net.Uri;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/filesystem/usb/UsbOtgRepresentation.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.usb;
+package com.amaze.filemanager.fileoperations.filesystem.usb;
 
 import androidx.annotation.Nullable;
 

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/utils/OnLowMemory.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.utils;
+package com.amaze.filemanager.fileoperations.utils;
 
 public interface OnLowMemory {
   public void onLowMemory();

File: file_operations/src/main/java/com/amaze/filemanager/fileoperations/utils/UpdatePosition.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.utils;
+package com.amaze.filemanager.fileoperations.utils;
 
 public interface UpdatePosition {
   public void updatePosition(long toAdd);

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.cloud;
+package com.amaze.filemanager.fileoperations.filesystem.cloud;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
@@ -41,7 +41,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.file_operations.shadows.ShadowMultiDex;
+import com.amaze.filemanager.fileoperations.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
+package com.amaze.filemanager.fileoperations.filesystem.smbstreamer;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
@@ -39,8 +39,8 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadow.api.Shadow;
 
-import com.amaze.filemanager.file_operations.shadows.ShadowMultiDex;
-import com.amaze.filemanager.file_operations.shadows.jcifs.smb.ShadowSmbFile;
+import com.amaze.filemanager.fileoperations.shadows.ShadowMultiDex;
+import com.amaze.filemanager.fileoperations.shadows.jcifs.smb.ShadowSmbFile;
 
 import android.os.Environment;
 

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/shadows/ShadowMultiDex.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.shadows;
+package com.amaze.filemanager.fileoperations.shadows;
 
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;

File: file_operations/src/test/java/com/amaze/filemanager/fileoperations/shadows/jcifs/smb/ShadowSmbFile.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.file_operations.shadows.jcifs.smb;
+package com.amaze.filemanager.fileoperations.shadows.jcifs.smb;
 
 import java.io.File;
 import java.io.FileInputStream;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -27,7 +27,6 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PackageUtils;
-import com.amaze.filemanager.utils.Utils;
 
 import android.app.Activity;
 import android.content.ComponentName;

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -39,7 +39,6 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
-import android.content.pm.PackageManager;
 import android.content.res.ColorStateList;
 import android.content.res.Configuration;
 import android.graphics.Color;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -697,6 +697,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
         getItemsDigested().get(p).setAnimate(true);
       }
       final LayoutElementParcelable rowItem = getItemsDigested().get(p).elem;
+      if (rowItem == null) return;
       if (dragAndDropPreference != PreferencesConstants.PREFERENCE_DRAG_DEFAULT) {
         holder.rl.setOnDragListener(
             new RecyclerAdapterDragListener(this, holder, dragAndDropPreference, mainFrag));

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -168,6 +168,7 @@
 import com.amaze.filemanager.utils.MainActivityActionMode;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;
+import com.amaze.filemanager.utils.PackageUtils;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;
 import com.cloudrail.si.CloudRail;
@@ -385,8 +386,8 @@ public void onCreate(final Bundle savedInstanceState) {
               servers.addAll(utilsHandler.getSftpList());
               dataUtils.setServers(servers);
 
-              ExtensionsKt.refactorAUAlias(this,
-                      !Utils.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
+              ExtensionsKt.updateAUAlias(this,
+                      !PackageUtils.Companion.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
                               mainActivity.getPackageManager()));
             })
         .subscribeOn(Schedulers.io())

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/share/ShareTask.java
Patch:
@@ -26,6 +26,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.theme.AppTheme;
+import com.amaze.filemanager.utils.PackageUtils;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.Activity;
@@ -86,7 +87,7 @@ protected Void doInBackground(String... strings) {
           targetShareIntents.add(intent);
         }
       }
-      if (!bluetooth_present && Utils.appInstalledOrNot("com.android.bluetooth", packageManager)) {
+      if (!bluetooth_present && PackageUtils.Companion.appInstalledOrNot("com.android.bluetooth", packageManager)) {
         Intent intent = new Intent();
         intent.setComponent(
             new ComponentName(

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -57,6 +57,7 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
+import com.amaze.filemanager.utils.PackageUtils;
 import com.amaze.filemanager.utils.ScreenUtils;
 import com.amaze.filemanager.utils.TinyDB;
 import com.amaze.filemanager.utils.Utils;
@@ -531,7 +532,7 @@ public void refreshDrawer() {
             R.string.wifip2p,
             new MenuMetadata(
                     () -> {
-                      boolean isAUInstalled = Utils.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
+                      boolean isAUInstalled = PackageUtils.Companion.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
                               mainActivity.getPackageManager());
                       if (isAUInstalled) {
                         try {
@@ -555,7 +556,7 @@ public void refreshDrawer() {
             R.string.analyse_storage,
             new MenuMetadata(
                     () -> {
-                      boolean isAUInstalled = Utils.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
+                      boolean isAUInstalled = PackageUtils.Companion.appInstalledOrNot(AboutActivity.PACKAGE_AMAZE_UTILS,
                               mainActivity.getPackageManager());
                       if (isAUInstalled) {
                         try {

File: app/src/main/java/com/amaze/filemanager/filesystem/PasteHelper.java
Patch:
@@ -159,8 +159,9 @@ public void onSuccess(Spanned spanned) {
                         BaseTransientBottomBar.LENGTH_INDEFINITE,
                         R.string.paste,
                         () -> {
-                          final MainFragment mainFragment =
-                              Objects.requireNonNull(mainActivity.getCurrentMainFragment());
+                          final MainFragment mainFragment = mainActivity.getCurrentMainFragment();
+                          if (mainFragment == null)
+                              return;
                           String path = mainFragment.getCurrentPath();
                           ArrayList<HybridFileParcelable> arrayList =
                               new ArrayList<>(Arrays.asList(paths));

File: app/src/main/java/com/amaze/filemanager/filesystem/PasteHelper.java
Patch:
@@ -158,8 +158,9 @@ public void onSuccess(Spanned spanned) {
                         BaseTransientBottomBar.LENGTH_INDEFINITE,
                         R.string.paste,
                         () -> {
-                          final MainFragment mainFragment =
-                              Objects.requireNonNull(mainActivity.getCurrentMainFragment());
+                          final MainFragment mainFragment = mainActivity.getCurrentMainFragment();
+                          if (mainFragment == null)
+                              return;
                           String path = mainFragment.getCurrentPath();
                           ArrayList<HybridFileParcelable> arrayList =
                               new ArrayList<>(Arrays.asList(paths));

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -807,7 +807,7 @@ public static HybridFileParcelable parseName(String line, boolean isStat) {
     StringBuilder link = new StringBuilder();
     String size = "-1";
     String date = "";
-    String[] array = line.split(" ");
+    String[] array = line.split(" +");
     if (array.length < 6) return null;
     for (String anArray : array) {
       if (anArray.contains("->") && array[0].startsWith("l")) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2304,7 +2304,7 @@ public void onFolderSelection(@NonNull FolderChooserDialog dialog, @NonNull File
         if (folder.exists() && folder.isDirectory()) {
           if (FileUtils.isRunningAboveStorage(folder.getAbsolutePath())) {
             if (!isRootExplorer()) {
-              AlertDialog.show(this, R.string.ftp_server_root_unavailable, R.string.error, android.R.string.ok, null);
+              AlertDialog.show(this, R.string.ftp_server_root_unavailable, R.string.error, android.R.string.ok, null, false);
             } else {
               MaterialDialog confirmDialog = GeneralDialogCreation.showBasicDialog(this, R.string.ftp_server_root_filesystem_warning,R.string.warning,  android.R.string.ok, android.R.string.cancel);
               confirmDialog.getActionButton(DialogAction.POSITIVE).setOnClickListener(v -> {

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -807,7 +807,7 @@ public static HybridFileParcelable parseName(String line, boolean isStat) {
     StringBuilder link = new StringBuilder();
     String size = "-1";
     String date = "";
-    String[] array = line.split(" ");
+    String[] array = line.split(" +");
     if (array.length < 6) return null;
     for (String anArray : array) {
       if (anArray.contains("->") && array[0].startsWith("l")) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2304,7 +2304,7 @@ public void onFolderSelection(@NonNull FolderChooserDialog dialog, @NonNull File
         if (folder.exists() && folder.isDirectory()) {
           if (FileUtils.isRunningAboveStorage(folder.getAbsolutePath())) {
             if (!isRootExplorer()) {
-              AlertDialog.show(this, R.string.ftp_server_root_unavailable, R.string.error, android.R.string.ok, null);
+              AlertDialog.show(this, R.string.ftp_server_root_unavailable, R.string.error, android.R.string.ok, null, false);
             } else {
               MaterialDialog confirmDialog = GeneralDialogCreation.showBasicDialog(this, R.string.ftp_server_root_filesystem_warning,R.string.warning,  android.R.string.ok, android.R.string.cancel);
               confirmDialog.getActionButton(DialogAction.POSITIVE).setOnClickListener(v -> {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -2045,14 +2045,14 @@ public void onPostExecute(String query) {
   }
 
   @Override
-  public void onProgressUpdate(HybridFileParcelable val, String query) {
+  public void onProgressUpdate(@NonNull HybridFileParcelable hybridFileParcelable, String query) {
     final MainFragment mainFragment = getCurrentMainFragment();
     if (mainFragment == null) {
       // TODO cancel search
       return;
     }
 
-    mainFragment.addSearchResult(val, query);
+    mainFragment.addSearchResult(hybridFileParcelable, query);
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -56,7 +56,7 @@ public interface HelperCallbacks {
 
     void onPostExecute(String query);
 
-    void onProgressUpdate(HybridFileParcelable val, String query);
+    void onProgressUpdate(@NonNull HybridFileParcelable val, String query);
 
     void onCancelled();
   }

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,8 +20,6 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static android.os.Build.VERSION.SDK_INT;
-import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.utils.Utils.openURL;
 
@@ -45,7 +43,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.TextView;
-import android.widget.Toast;
 
 import androidx.annotation.Nullable;
 import androidx.appcompat.widget.Toolbar;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -228,6 +228,8 @@ private void initSearchViewColor(MainActivity a ) {
                 backImageView.setColorFilter(ContextCompat.getColor(a, android.R.color.white),
                         PorterDuff.Mode.SRC_ATOP);
                 break;
+            default:
+                break;
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -697,6 +697,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
         getItemsDigested().get(p).setAnimate(true);
       }
       final LayoutElementParcelable rowItem = getItemsDigested().get(p).elem;
+      if (rowItem == null) return;
       if (dragAndDropPreference != PreferencesConstants.PREFERENCE_DRAG_DEFAULT) {
         holder.rl.setOnDragListener(
             new RecyclerAdapterDragListener(this, holder, dragAndDropPreference, mainFrag));

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/files/CryptUtilTest.java
Patch:
@@ -27,6 +27,7 @@
 import org.junit.runner.RunWith;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.utils.PasswordUtil;
 
 import android.content.Context;
 
@@ -51,7 +52,7 @@ public void testIvValueIsCorrect() {
   @Test
   public void testEncryptDecrypt() throws Exception {
     String password = "hackme";
-    String encrypted = CryptUtil.encryptPassword(context, password);
-    assertEquals(password, CryptUtil.decryptPassword(context, encrypted));
+    String encrypted = PasswordUtil.INSTANCE.encryptPassword(context, password);
+    assertEquals(password, PasswordUtil.INSTANCE.decryptPassword(context, encrypted));
   }
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -117,7 +117,7 @@ protected final AsyncTaskResult<Boolean> doInBackground(
 
       // delete file entry from encrypted database
       if (file.getName(applicationContext).endsWith(CryptUtil.CRYPT_EXTENSION)) {
-        CryptHandler handler = CryptHandler.getInstance();
+        CryptHandler handler = CryptHandler.INSTANCE;
         handler.clear(file.getPath());
       }
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -318,7 +318,7 @@ private void findAndReplaceEncryptedEntry(HybridFileParcelable sourceFile) {
         if (sourceFile.getName(c).endsWith(CryptUtil.CRYPT_EXTENSION)) {
           try {
 
-            CryptHandler cryptHandler = CryptHandler.getInstance();
+            CryptHandler cryptHandler = CryptHandler.INSTANCE;
             EncryptedEntry oldEntry = cryptHandler.findEntry(sourceFile.getPath());
             EncryptedEntry newEntry = new EncryptedEntry();
 

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -124,6 +124,7 @@ public final class MimeTypes {
     MIME_TYPES.put("mts", "video/mp2t");
 
     MIME_TYPES.put(CryptUtil.CRYPT_EXTENSION.replace(".", ""), "crypt/aze");
+    MIME_TYPES.put(CryptUtil.AESCRYPT_EXTENSION.replace(".", ""), "crypt/x-aescrypt");
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -390,7 +390,7 @@ public void done(final HybridFile hFile, final boolean b) {
                     // update the database entry to reflect rename for encrypted file
                     if (oldPath.endsWith(CryptUtil.CRYPT_EXTENSION)) {
                       try {
-                        CryptHandler cryptHandler = CryptHandler.getInstance();
+                        CryptHandler cryptHandler = CryptHandler.INSTANCE;
                         EncryptedEntry oldEntry = cryptHandler.findEntry(oldPath);
                         EncryptedEntry newEntry = new EncryptedEntry();
                         newEntry.setId(oldEntry.getId());

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -28,7 +28,6 @@
 import java.net.MalformedURLException;
 import java.security.GeneralSecurityException;
 
-import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.smb.CifsContexts;
 
 import android.content.Context;
@@ -74,7 +73,7 @@ public static String getSmbDecryptedPath(Context context, String path)
     String encryptedPassword = path.substring(path.indexOf(":", 4) + 1, path.lastIndexOf("@"));
 
     if (!TextUtils.isEmpty(encryptedPassword)) {
-      String decryptedPassword = CryptUtil.decryptPassword(context, encryptedPassword);
+      String decryptedPassword = PasswordUtil.INSTANCE.decryptPassword(context, encryptedPassword);
       buffer.append(decryptedPassword);
     }
     buffer.append(path.substring(path.lastIndexOf("@")));
@@ -95,7 +94,7 @@ public static String getSmbEncryptedPath(Context context, String path)
     String decryptedPassword = path.substring(path.indexOf(":", 4) + 1, path.lastIndexOf("@"));
 
     if (!TextUtils.isEmpty(decryptedPassword)) {
-      String encryptPassword = CryptUtil.encryptPassword(context, decryptedPassword);
+      String encryptPassword = PasswordUtil.INSTANCE.encryptPassword(context, decryptedPassword);
       buffer.append(encryptPassword);
     }
     buffer.append(path.substring(path.lastIndexOf("@")));

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -46,7 +46,7 @@
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.test.ShadowCryptUtil;
+import com.amaze.filemanager.test.ShadowPasswordUtil;
 
 import androidx.room.Room;
 import androidx.sqlite.db.SupportSQLiteDatabase;
@@ -58,7 +58,7 @@
 
 @RunWith(AndroidJUnit4.class)
 @Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
+    shadows = {ShadowMultiDex.class, ShadowPasswordUtil.class},
     sdk = {JELLY_BEAN, KITKAT, P})
 public class ExplorerDatabaseMigrationTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -50,7 +50,7 @@
 
 import com.amaze.filemanager.filesystem.ssh.test.TestUtils;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.test.ShadowCryptUtil;
+import com.amaze.filemanager.test.ShadowPasswordUtil;
 import com.amaze.filemanager.utils.Utils;
 
 import androidx.annotation.NonNull;
@@ -68,7 +68,7 @@
 
 @RunWith(AndroidJUnit4.class)
 @Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
+    shadows = {ShadowMultiDex.class, ShadowPasswordUtil.class},
     sdk = {JELLY_BEAN, KITKAT, P})
 public class SshConnectionPoolTest {
 

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -58,7 +58,7 @@
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.shadows.jcifs.smb.ShadowSmbFile;
-import com.amaze.filemanager.test.ShadowCryptUtil;
+import com.amaze.filemanager.test.ShadowPasswordUtil;
 import com.amaze.filemanager.test.TestUtils;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;
 import com.amaze.filemanager.utils.SmbUtil;
@@ -82,7 +82,7 @@
     shadows = {
       ShadowMultiDex.class,
       ShadowStorageManager.class,
-      ShadowCryptUtil.class,
+      ShadowPasswordUtil.class,
       ShadowSmbFile.class
     })
 /*

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -38,7 +38,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.shadows.ShadowSmbUtil;
-import com.amaze.filemanager.test.ShadowCryptUtil;
+import com.amaze.filemanager.test.ShadowPasswordUtil;
 
 import androidx.test.core.app.ApplicationProvider;
 import androidx.test.ext.junit.runners.AndroidJUnit4;
@@ -48,7 +48,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     sdk = {JELLY_BEAN, KITKAT, P},
-    shadows = {ShadowCryptUtil.class, ShadowSmbUtil.class})
+    shadows = {ShadowPasswordUtil.class, ShadowSmbUtil.class})
 public class SmbUtilTest {
 
   @Test

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -312,7 +312,7 @@ public boolean isCancelled() {
                 ServiceWatcherUtil.UPDATE_POSITION);
 
         if(extractor == null) {
-          Toast.makeText(context, R.string.error_cant_decompress_that_file, Toast.LENGTH_SHORT).show();
+          Toast.makeText(context, R.string.error_cant_decompress_that_file, Toast.LENGTH_LONG).show();
           return false;
         }
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -558,7 +558,7 @@ private void checkForExternalIntent(Intent intent) {
         pathInCompressedArchive = Utils.sanitizeInput(uri.toString());
         openCompressed(pathInCompressedArchive);
       } else {
-        Toast.makeText(this, getString(R.string.error_cannot_find_way_open), Toast.LENGTH_SHORT).show();
+        Toast.makeText(this, getString(R.string.error_cannot_find_way_open), Toast.LENGTH_LONG).show();
       }
 
     } else if (actionIntent.equals(Intent.ACTION_SEND)) {

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -690,7 +690,7 @@ public void extractFile(@NonNull File file) {
       case WRITABLE_OR_ON_SDCARD:
         Decompressor decompressor = CompressedHelper.getCompressorInstance(mainActivity, file);
         if (decompressor == null) {
-          Toast.makeText(mainActivity, R.string.error_cant_decompress_that_file, Toast.LENGTH_SHORT).show();
+          Toast.makeText(mainActivity, R.string.error_cant_decompress_that_file, Toast.LENGTH_LONG).show();
           return;
         }
         decompressor.decompress(file.getPath());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -1124,7 +1124,7 @@ public static void showCompressDialog(
     EditText etFilename = dialogView.findViewById(R.id.singleedittext_input);
     etFilename.setHint(R.string.enterzipname);
     etFilename.setText(".zip"); // TODO: Put the file/folder name here
-    etFilename.setInputType(InputType.TYPE_TEXT_FLAG_CAP_WORDS);
+    etFilename.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);
     etFilename.setSingleLine();
     WarnableTextInputLayout tilFilename =
         dialogView.findViewById(R.id.singleedittext_warnabletextinputlayout);

File: app/src/main/java/com/amaze/filemanager/database/CryptHandler.java
Patch:
@@ -28,6 +28,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import io.reactivex.schedulers.Schedulers;
 
@@ -61,6 +62,7 @@ public void updateEntry(EncryptedEntry oldEncryptedEntry, EncryptedEntry newEncr
     database.encryptedEntryDao().update(newEncryptedEntry).subscribeOn(Schedulers.io()).subscribe();
   }
 
+  @Nullable
   public EncryptedEntry findEntry(String path) {
     try {
       return database.encryptedEntryDao().select(path).subscribeOn(Schedulers.io()).blockingGet();

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -46,8 +46,9 @@
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.asynchronous.asynctasks.CountItemsOrAndSizeTask;
-import com.amaze.filemanager.asynchronous.asynctasks.GenerateHashesTask;
 import com.amaze.filemanager.asynchronous.asynctasks.LoadFolderSpaceDataTask;
+import com.amaze.filemanager.asynchronous.asynctasks.TaskKt;
+import com.amaze.filemanager.asynchronous.asynctasks.hashcalculator.CalculateHashTask;
 import com.amaze.filemanager.asynchronous.services.EncryptService;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.models.explorer.Sort;
@@ -539,8 +540,7 @@ private static void showPropertiesDialog(
         new CountItemsOrAndSizeTask(c, itemsText, baseFile, forStorage);
     countItemsOrAndSizeTask.executeOnExecutor(executor);
 
-    GenerateHashesTask hashGen = new GenerateHashesTask(baseFile, c, v);
-    hashGen.executeOnExecutor(executor);
+    TaskKt.fromTask(new CalculateHashTask(baseFile, c, v));
 
     /*Chart creation and data loading*/
     {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -83,9 +83,9 @@ public void onCreate(Bundle savedInstanceState) {
 
     searchAsyncTask =
         new SearchAsyncTask(
-            getActivity(), input, openMode, rootMode, isRegexEnabled, isMatchesEnabled);
+            requireContext(), input, openMode, rootMode, isRegexEnabled, isMatchesEnabled, path);
     searchAsyncTask.setCallback(callbacks);
-    searchAsyncTask.execute(path);
+    searchAsyncTask.execute();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -48,6 +48,7 @@
 import android.content.SharedPreferences;
 import android.os.Bundle;
 
+import androidx.annotation.NonNull;
 import androidx.preference.PreferenceManager;
 
 /** @author Emmanuel on 24/8/2017, at 23:13. */
@@ -64,6 +65,7 @@ public void onCreate(final Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
   }
 
+  @NonNull
   public SharedPreferences getPrefs() {
     return sharedPrefs;
   }

File: app/src/main/java/com/amaze/filemanager/database/CryptHandler.java
Patch:
@@ -28,6 +28,7 @@
 import android.util.Log;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import io.reactivex.schedulers.Schedulers;
 
@@ -61,6 +62,7 @@ public void updateEntry(EncryptedEntry oldEncryptedEntry, EncryptedEntry newEncr
     database.encryptedEntryDao().update(newEncryptedEntry).subscribeOn(Schedulers.io()).subscribe();
   }
 
+  @Nullable
   public EncryptedEntry findEntry(String path) {
     try {
       return database.encryptedEntryDao().select(path).subscribeOn(Schedulers.io()).blockingGet();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -83,9 +83,9 @@ public void onCreate(Bundle savedInstanceState) {
 
     searchAsyncTask =
         new SearchAsyncTask(
-            getActivity(), input, openMode, rootMode, isRegexEnabled, isMatchesEnabled);
+            requireContext(), input, openMode, rootMode, isRegexEnabled, isMatchesEnabled, path);
     searchAsyncTask.setCallback(callbacks);
-    searchAsyncTask.execute(path);
+    searchAsyncTask.execute();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1465,9 +1465,10 @@ public void addSearchResult(HybridFileParcelable a, String query) {
   }
 
   public void onSearchCompleted(final String query) {
-    final ArrayList<LayoutElementParcelable> elements = mainFragmentViewModel.getListElements();
+    final @Nullable ArrayList<LayoutElementParcelable> elements = mainFragmentViewModel.getListElements();
     if (elements == null) {
       Log.e(TAG, "No search results, cannot sort!");
+      return;
     }
     if (!mainFragmentViewModel.getResults()) {
       // no results were found

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1465,9 +1465,10 @@ public void addSearchResult(HybridFileParcelable a, String query) {
   }
 
   public void onSearchCompleted(final String query) {
-    final ArrayList<LayoutElementParcelable> elements = mainFragmentViewModel.getListElements();
+    final @Nullable ArrayList<LayoutElementParcelable> elements = mainFragmentViewModel.getListElements();
     if (elements == null) {
       Log.e(TAG, "No search results, cannot sort!");
+      return;
     }
     if (!mainFragmentViewModel.getResults()) {
       // no results were found

File: app/src/androidTest/java/com/amaze/filemanager/ui/activities/TextEditorActivityEspressoTest.java
Patch:
@@ -38,11 +38,14 @@
 
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.SmallTest;
+import androidx.test.filters.Suppress;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.ActivityTestRule;
 
 @SmallTest
 @RunWith(AndroidJUnit4.class)
+@Suppress
+// Have to rewrite to cope with Android 11 storage access model
 public class TextEditorActivityEspressoTest {
 
   @Rule

File: app/src/androidTest/java/com/amaze/filemanager/ui/activities/TextEditorActivityEspressoTest.java
Patch:
@@ -38,11 +38,14 @@
 
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.SmallTest;
+import androidx.test.filters.Suppress;
 import androidx.test.platform.app.InstrumentationRegistry;
 import androidx.test.rule.ActivityTestRule;
 
 @SmallTest
 @RunWith(AndroidJUnit4.class)
+@Suppress
+// Have to rewrite to cope with Android 11 storage access model
 public class TextEditorActivityEspressoTest {
 
   @Rule

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/files/GenericCopyUtilEspressoTest.java
Patch:
@@ -66,19 +66,19 @@ public void setUp() throws IOException {
   @Test
   public void testCopyFile1() throws IOException, NoSuchAlgorithmException {
     doTestCopyFile1(512);
-    doTestCopyFile1(187139366);
+    doTestCopyFile1(10 * 1024 * 1024);
   }
 
   @Test
   public void testCopyFile2() throws IOException, NoSuchAlgorithmException {
     doTestCopyFile2(512);
-    doTestCopyFile2(187139366);
+    doTestCopyFile2(10 * 1024 * 1024);
   }
 
   @Test
   public void testCopyFile3() throws IOException, NoSuchAlgorithmException {
     doTestCopyFile3(512);
-    doTestCopyFile3(187139366);
+    doTestCopyFile3(10 * 1024 * 1024);
   }
 
   // doCopy(ReadableByteChannel in, WritableByteChannel out)

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -84,7 +84,7 @@ public class AppsListFragment extends Fragment
   private RecyclerViewPreloader<String> preloader;
   private List<AppDataParcelable> appDataParcelableList;
   private FastScroller fastScroller;
-  private boolean showSystemApps = true;
+  private boolean showSystemApps = false;
 
   @Override
   public void onCreate(Bundle savedInstanceState) {
@@ -139,7 +139,7 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
   @Override
   public void onCreateOptionsMenu(@NonNull Menu menu, @NonNull MenuInflater inflater) {
     requireActivity().getMenuInflater().inflate(R.menu.app_menu, menu);
-    menu.findItem(R.id.checkbox_system_apps).setChecked(true);
+    menu.findItem(R.id.checkbox_system_apps).setChecked(false);
     super.onCreateOptionsMenu(menu, inflater);
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -18,13 +18,14 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.asynchronous.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.lang.ref.WeakReference;
 import java.util.regex.Pattern;
 
+import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import com.amaze.filemanager.asynchronous.asynctasks.SearchAsyncTask;
+import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PermissionsActivity.java
Patch:
@@ -197,7 +197,9 @@ public void requestAllFilesAccess(@NonNull final OnPermissionGranted onPermissio
                 Utils.disableScreenRotation(this);
                 permissionCallbacks[ALL_FILES_PERMISSION] = onPermissionGranted;
                 try {
-                  Intent intent = new Intent(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
+                  Intent intent =
+                      new Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION)
+                          .setData(Uri.parse("package:" + getPackageName()));
                   startActivity(intent);
                 } catch (Exception e) {
                   Log.e(TAG, "Failed to initial activity to grant all files access", e);

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PermissionsActivity.java
Patch:
@@ -197,7 +197,9 @@ public void requestAllFilesAccess(@NonNull final OnPermissionGranted onPermissio
                 Utils.disableScreenRotation(this);
                 permissionCallbacks[ALL_FILES_PERMISSION] = onPermissionGranted;
                 try {
-                  Intent intent = new Intent(Settings.ACTION_MANAGE_ALL_FILES_ACCESS_PERMISSION);
+                  Intent intent =
+                      new Intent(Settings.ACTION_MANAGE_APP_ALL_FILES_ACCESS_PERMISSION)
+                          .setData(Uri.parse("package:" + getPackageName()));
                   startActivity(intent);
                 } catch (Exception e) {
                   Log.e(TAG, "Failed to initial activity to grant all files access", e);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -144,7 +144,7 @@ public void onDestroy() {
    * @param move if the files are to be moved
    */
   public final void publishResults(long speed, boolean isComplete, boolean move) {
-    if (!getProgressHandler().getCancelled()) {
+    if (!getProgressHandler().protected synchronized void addFirstDatapoingetCancelled()) {
       String fileName = getProgressHandler().getFileName();
       long totalSize = getProgressHandler().getTotalSize();
       long writtenSize = getProgressHandler().getWrittenSize();
@@ -254,7 +254,7 @@ private void publishCompletedResult(int id1) {
     }
   }
 
-  protected synchronized void addFirstDatapoint(
+  protected void addFirstDatapoint(
       String name, int amountOfFiles, long totalBytes, boolean move) {
     if (!getDataPackages().isEmpty()) {
       Log.e(getClass().getSimpleName(), "This is not the first datapoint!");
@@ -266,7 +266,7 @@ protected synchronized void addFirstDatapoint(
     putDataPackage(intent1);
   }
 
-  protected synchronized void addDatapoint(DatapointParcelable datapoint) {
+  protected void addDatapoint(DatapointParcelable datapoint) {
     if (getDataPackages().isEmpty()) {
       Log.e(getClass().getSimpleName(), "This is the first datapoint!");
     }

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -112,6 +112,7 @@ private static void putKeys(int resId, String... mimeTypes) {
         "application/mac-binhex40",
         "application/rar",
         "application/zip",
+        "application/gzip",
         "application/java-archive",
         "application/x-apple-diskimage",
         "application/x-debian-package",

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -62,5 +62,8 @@ public void testReturnArchiveTypes() {
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.lzma", false));
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.xz", false));
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.bz2", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.bz2", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.gz", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.gz", false));
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -112,6 +112,7 @@ private static void putKeys(int resId, String... mimeTypes) {
         "application/mac-binhex40",
         "application/rar",
         "application/zip",
+        "application/gzip",
         "application/java-archive",
         "application/x-apple-diskimage",
         "application/x-debian-package",

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -62,5 +62,8 @@ public void testReturnArchiveTypes() {
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.lzma", false));
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.xz", false));
     assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.tar.bz2", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.bz2", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.gz", false));
+    assertEquals(Icons.COMPRESSED, Icons.getTypeOfFile("archive.txt.gz", false));
   }
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/searchfilesystem/SearchAsyncTask.java
Patch:
@@ -18,13 +18,14 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.asynchronous.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem;
 
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 
 import java.lang.ref.WeakReference;
 import java.util.regex.Pattern;
 
+import com.amaze.filemanager.asynchronous.asynctasks.StatefulAsyncTask;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.fragments;
 
-import com.amaze.filemanager.asynchronous.asynctasks.SearchAsyncTask;
+import com.amaze.filemanager.asynchronous.asynctasks.searchfilesystem.SearchAsyncTask;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -58,6 +58,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
   }
 
   @Override
+  @CallSuper
   public void onCreate() {
     super.onCreate();
     final PowerManager powerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -65,8 +65,7 @@ public void onClick() {
                     new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
           } else {
             if (FtpService.isConnectedToWifi(getApplicationContext())
-                || FtpService.isConnectedToLocalNetwork(getApplicationContext())
-                || FtpService.isEnabledWifiHotspot(getApplicationContext())) {
+                || FtpService.isConnectedToLocalNetwork(getApplicationContext())) {
               Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
               i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
               getApplicationContext().sendBroadcast(i);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -469,7 +469,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 1) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    requireMainActivity().getActionModeHelper().disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(0, true);
                 }
@@ -481,7 +481,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 0) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    requireMainActivity().getActionModeHelper().disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(1, true);
                 }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -469,7 +469,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 1) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainActivity.getActionModeHelper().disableActionMode();
+                    requireMainActivity().getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(0, true);
                 }
@@ -481,7 +481,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 0) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainActivity.getActionModeHelper().disableActionMode();
+                    requireMainActivity().getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(1, true);
                 }

File: app/src/test/java/com/amaze/filemanager/database/ExplorerDatabaseMigrationTest.java
Patch:
@@ -46,6 +46,7 @@
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
+import com.amaze.filemanager.test.ShadowCryptUtil;
 
 import androidx.room.Room;
 import androidx.sqlite.db.SupportSQLiteDatabase;
@@ -57,7 +58,7 @@
 
 @RunWith(AndroidJUnit4.class)
 @Config(
-    shadows = {ShadowMultiDex.class},
+    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
     sdk = {JELLY_BEAN, KITKAT, P})
 public class ExplorerDatabaseMigrationTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -31,7 +31,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.ShadowDateFormat;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
@@ -46,7 +45,7 @@
  */
 @RunWith(AndroidJUnit4.class)
 @Config(
-    shadows = {ShadowMultiDex.class, ShadowDateFormat.class},
+    shadows = {ShadowMultiDex.class},
     sdk = {JELLY_BEAN, KITKAT, P})
 public class FileListSorterTest {
   /**

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -28,17 +28,16 @@
 import static org.mockito.ArgumentMatchers.anyBoolean;
 import static org.mockito.Mockito.doCallRealMethod;
 import static org.mockito.Mockito.mock;
-import static org.robolectric.Shadows.shadowOf;
 
 import java.lang.reflect.Field;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
+import org.robolectric.shadows.ShadowLooper;
 
 import com.amaze.filemanager.ui.views.ThemedTextView;
 
-import android.os.Looper;
 import android.view.animation.Interpolator;
 
 import androidx.test.core.app.ApplicationProvider;
@@ -68,7 +67,7 @@ public void testMarqueeAfterDelay() {
     mock.setSelected(false);
 
     AnimUtils.marqueeAfterDelay(150, mock);
-    shadowOf(Looper.myLooper()).getScheduler().advanceToLastPostedRunnable();
+    ShadowLooper.runUiThreadTasksIncludingDelayedTasks();
     assertTrue(mock.isSelected());
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -469,7 +469,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 1) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainActivity.getActionModeHelper().disableActionMode();
+                    requireMainActivity().getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(0, true);
                 }
@@ -481,7 +481,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (viewPager.getCurrentItem() == 0) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainActivity.getActionModeHelper().disableActionMode();
+                    requireMainActivity().getActionModeHelper().disableActionMode();
                   }
                   viewPager.setCurrentItem(1, true);
                 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -65,8 +65,7 @@ public void onClick() {
                     new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
           } else {
             if (FtpService.isConnectedToWifi(getApplicationContext())
-                || FtpService.isConnectedToLocalNetwork(getApplicationContext())
-                || FtpService.isEnabledWifiHotspot(getApplicationContext())) {
+                || FtpService.isConnectedToLocalNetwork(getApplicationContext())) {
               Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
               i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
               getApplicationContext().sendBroadcast(i);

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1398,7 +1398,7 @@ private void closeInteractiveShell() {
 
   public void updatePaths(int pos) {
     TabFragment tabFragment = getTabFragment();
-    if (tabFragment != null) tabFragment.updatepaths(pos);
+    if (tabFragment != null) tabFragment.updatePaths(pos);
   }
 
   public void openCompressed(String path) {
@@ -1433,7 +1433,7 @@ public Fragment getFragmentAtFrame() {
   }
 
   public void setPagingEnabled(boolean b) {
-    getTabFragment().mViewPager.setPagingEnabled(b);
+    getTabFragment().setPagingEnabled(b);
   }
 
   public File getUsbDrive() {
@@ -1731,7 +1731,7 @@ public void initializeFabActionViews() {
           if (event.getAction() == KeyEvent.ACTION_DOWN) {
             if (event.getKeyCode() == KeyEvent.KEYCODE_DPAD_RIGHT) {
               if (getCurrentTab() == 0 && getFAB().isFocused()) {
-                getTabFragment().mViewPager.setCurrentItem(1);
+                getTabFragment().setCurrentItem(1);
               }
             } else if (event.getKeyCode() == KeyEvent.KEYCODE_DPAD_LEFT) {
               findViewById(R.id.content_frame).requestFocus();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -253,7 +253,7 @@ public void onPageScrolled(int position, float positionOffset, int positionOffse
     final MainFragment mainFragment = mainActivity.getCurrentMainFragment();
     if (mainFragment == null
         || mainFragment.getMainFragmentViewModel() == null
-        || mainFragment.getMainFragmentViewModel().getSelection()) {
+        || mainFragment.getMainActivity().getListItemSelected()) {
       return; // we do not want to update toolbar colors when ActionMode is activated
     }
 
@@ -476,7 +476,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (mViewPager.getCurrentItem() == 1) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainFragment.disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   mViewPager.setCurrentItem(0, true);
                 }
@@ -488,7 +488,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (mViewPager.getCurrentItem() == 0) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainFragment.disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   mViewPager.setCurrentItem(1, true);
                 }

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -197,7 +197,8 @@ private static void putKeys(int resId, String... mimeTypes) {
 
   public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
     if (path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
-    if (CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
+    if (CompressedHelper.isFileExtractable(path) && !isDirectory)
+      return R.drawable.ic_compressed_white_24dp;
 
     int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -71,6 +71,7 @@ public class DataUtils {
 
   private ArrayList<CloudStorage> accounts = new ArrayList<>(4);
 
+  /** List of checked items to persist when drag and drop from one tab to another */
   private ArrayList<LayoutElementParcelable> checkedItemsList;
 
   private DataChangeListener dataChangeListener;

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -102,7 +102,9 @@ public void testWithUtilsHandler() {
         .atMost(10, TimeUnit.SECONDS)
         .until(
             () -> {
-              assertEquals(fingerprint, utilsHandler.getSshHostKey(url));
+              assertEquals(
+                  fingerprint,
+                  utilsHandler.getSshHostKey(SshClientUtils.encryptSshPathAsNecessary(url)));
               utilitiesDatabase.close();
               return true;
             });

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -253,7 +253,7 @@ public void onPageScrolled(int position, float positionOffset, int positionOffse
     final MainFragment mainFragment = mainActivity.getCurrentMainFragment();
     if (mainFragment == null
         || mainFragment.getMainFragmentViewModel() == null
-        || mainFragment.getMainFragmentViewModel().getSelection()) {
+        || mainFragment.getMainActivity().getListItemSelected()) {
       return; // we do not want to update toolbar colors when ActionMode is activated
     }
 
@@ -476,7 +476,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (mViewPager.getCurrentItem() == 1) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainFragment.disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   mViewPager.setCurrentItem(0, true);
                 }
@@ -488,7 +488,7 @@ private void initLeftAndRightDragListeners(boolean destroy) {
                 if (mViewPager.getCurrentItem() == 0) {
                   if (mainFragment != null) {
                     dataUtils.setCheckedItemsList(mainFragment.adapter.getCheckedItems());
-                    mainFragment.disableActionMode();
+                    mainActivity.getActionModeHelper().disableActionMode();
                   }
                   mViewPager.setCurrentItem(1, true);
                 }

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -71,6 +71,7 @@ public class DataUtils {
 
   private ArrayList<CloudStorage> accounts = new ArrayList<>(4);
 
+  /** List of checked items to persist when drag and drop from one tab to another */
   private ArrayList<LayoutElementParcelable> checkedItemsList;
 
   private DataChangeListener dataChangeListener;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -249,7 +249,7 @@ public void invalidateActionMode() {
       if (mainFrag.getMainActivity().getListItemSelected()) {
         if (mainFrag.getMainActivity().getActionModeHelper().getActionMode() == null) {
           ActionMode.Callback mActionModeCallback =
-              mainFrag.getMainActivity().getActionModeHelper().getMActionModeCallback();
+              mainFrag.getMainActivity().getActionModeHelper();
           mainFrag
               .getMainActivity()
               .getActionModeHelper()

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -344,7 +344,7 @@ public void onCreate(final Bundle savedInstanceState) {
 
     initialiseFab(); // TODO: 7/12/2017 not init when actionIntent != null
     mainActivityHelper = new MainActivityHelper(this);
-    mainActivityActionMode = new MainActivityActionMode(MainActivity.this);
+    mainActivityActionMode = new MainActivityActionMode(new WeakReference<>(MainActivity.this));
 
     if (CloudSheetFragment.isCloudProviderAvailable(this)) {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -151,7 +151,7 @@ public LoadFilesListTask(
       case SFTP:
         HybridFile sftpHFile = new HybridFile(OpenMode.SFTP, path);
 
-        list = new ArrayList<LayoutElementParcelable>();
+        list = new ArrayList();
 
         sftpHFile.forEachChildrenFile(
             context,

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -102,7 +102,9 @@ public void testWithUtilsHandler() {
         .atMost(10, TimeUnit.SECONDS)
         .until(
             () -> {
-              assertEquals(fingerprint, utilsHandler.getSshHostKey(url));
+              assertEquals(
+                  fingerprint,
+                  utilsHandler.getSshHostKey(SshClientUtils.encryptSshPathAsNecessary(url)));
               utilitiesDatabase.close();
               return true;
             });

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -151,7 +151,7 @@ public LoadFilesListTask(
       case SFTP:
         HybridFile sftpHFile = new HybridFile(OpenMode.SFTP, path);
 
-        list = new ArrayList<LayoutElementParcelable>();
+        list = new ArrayList();
 
         sftpHFile.forEachChildrenFile(
             context,

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -102,7 +102,9 @@ public void testWithUtilsHandler() {
         .atMost(10, TimeUnit.SECONDS)
         .until(
             () -> {
-              assertEquals(fingerprint, utilsHandler.getSshHostKey(url));
+              assertEquals(
+                  fingerprint,
+                  utilsHandler.getSshHostKey(SshClientUtils.encryptSshPathAsNecessary(url)));
               utilitiesDatabase.close();
               return true;
             });

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -197,7 +197,8 @@ private static void putKeys(int resId, String... mimeTypes) {
 
   public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
     if (path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
-    if (CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
+    if (CompressedHelper.isFileExtractable(path) && !isDirectory)
+      return R.drawable.ic_compressed_white_24dp;
 
     int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -197,7 +197,8 @@ private static void putKeys(int resId, String... mimeTypes) {
 
   public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
     if (path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
-    if (CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
+    if (CompressedHelper.isFileExtractable(path) && !isDirectory)
+      return R.drawable.ic_compressed_white_24dp;
 
     int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/ProcessViewerFragment.java
Patch:
@@ -148,7 +148,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
     setRetainInstance(true);
     mainActivity.getAppbar().setTitle(R.string.process_viewer);
-    mainActivity.getFAB().hide();
+    mainActivity.hideFab();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -151,7 +151,7 @@ public LoadFilesListTask(
       case SFTP:
         HybridFile sftpHFile = new HybridFile(OpenMode.SFTP, path);
 
-        list = new ArrayList<LayoutElementParcelable>();
+        list = new ArrayList();
 
         sftpHFile.forEachChildrenFile(
             context,

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -102,7 +102,9 @@ public void testWithUtilsHandler() {
         .atMost(10, TimeUnit.SECONDS)
         .until(
             () -> {
-              assertEquals(fingerprint, utilsHandler.getSshHostKey(url));
+              assertEquals(
+                  fingerprint,
+                  utilsHandler.getSshHostKey(SshClientUtils.encryptSshPathAsNecessary(url)));
               utilitiesDatabase.close();
               return true;
             });

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1384,7 +1384,7 @@ private void closeInteractiveShell() {
 
   public void updatePaths(int pos) {
     TabFragment tabFragment = getTabFragment();
-    if (tabFragment != null) tabFragment.updatepaths(pos);
+    if (tabFragment != null) tabFragment.updatePaths(pos);
   }
 
   public void openCompressed(String path) {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/ProcessViewerFragment.java
Patch:
@@ -148,7 +148,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
     setRetainInstance(true);
     mainActivity.getAppbar().setTitle(R.string.process_viewer);
-    mainActivity.getFAB().hide();
+    mainActivity.hideFab();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/ProcessViewerFragment.java
Patch:
@@ -148,7 +148,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
     setRetainInstance(true);
     mainActivity.getAppbar().setTitle(R.string.process_viewer);
-    mainActivity.getFAB().hide();
+    mainActivity.hideFab();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/test/java/com/amaze/filemanager/database/MigrationTestHelper.java
Patch:
@@ -37,7 +37,6 @@
  */
 
 import java.io.File;
-import java.io.FileInputStream;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
@@ -375,7 +374,8 @@ private SchemaBundle loadSchema(int version) throws IOException {
    * - @TranceLove
    */
   private SchemaBundle loadSchema(Context context, int version) throws IOException {
-    InputStream input = new FileInputStream("./schemas/" + mAssetsFolder + "/" + version + ".json");
+    InputStream input =
+        getClass().getResourceAsStream("/schemas/" + mAssetsFolder + "/" + version + ".json");
     return SchemaBundle.deserialize(input);
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -122,7 +122,8 @@ public Unit call()
     return Unit.INSTANCE;
   }
 
-  private OutputStream openFile(@NonNull File file, @NonNull Context context) throws IOException {
+  private OutputStream openFile(@NonNull File file, @NonNull Context context)
+      throws IOException, StreamNotFoundException {
     OutputStream outputStream = FileUtil.getOutputStream(file, context);
 
     // try loading stream associated using root
@@ -131,7 +132,7 @@ private OutputStream openFile(@NonNull File file, @NonNull Context context) thro
     }
 
     if (outputStream == null) {
-      throw new IOException("Cannot read or write text file!");
+      throw new StreamNotFoundException("Cannot read or write text file!");
     }
 
     return outputStream;

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -77,7 +77,7 @@ public void testOpenFileUri() throws IOException {
     intent.setData(Uri.fromFile(file));
     generateActivity(intent);
 
-    assertEquals(fileContents + "\n", text.getText().toString());
+    assertEquals(fileContents, text.getText().toString());
   }
 
   @Test

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -122,7 +122,8 @@ public Unit call()
     return Unit.INSTANCE;
   }
 
-  private OutputStream openFile(@NonNull File file, @NonNull Context context) throws IOException {
+  private OutputStream openFile(@NonNull File file, @NonNull Context context)
+      throws IOException, StreamNotFoundException {
     OutputStream outputStream = FileUtil.getOutputStream(file, context);
 
     // try loading stream associated using root
@@ -131,7 +132,7 @@ private OutputStream openFile(@NonNull File file, @NonNull Context context) thro
     }
 
     if (outputStream == null) {
-      throw new IOException("Cannot read or write text file!");
+      throw new StreamNotFoundException("Cannot read or write text file!");
     }
 
     return outputStream;

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -77,7 +77,7 @@ public void testOpenFileUri() throws IOException {
     intent.setData(Uri.fromFile(file));
     generateActivity(intent);
 
-    assertEquals(fileContents + "\n", text.getText().toString());
+    assertEquals(fileContents, text.getText().toString());
   }
 
   @Test

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .mainActivity
+              .requireMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -112,4 +112,6 @@ protected String fixEntryName(String entryName) {
       return entryName;
     }
   }
+
+  public class EmptyArchiveNotice extends IOException {}
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -135,7 +135,7 @@ public void onBackPressed() {
   public boolean onOptionsItemSelected(MenuItem item) {
     switch (item.getItemId()) {
       case android.R.id.home:
-        if (currentFragment.onOptionsItemSelected(item)) return true;
+        if (currentFragment != null && currentFragment.onOptionsItemSelected(item)) return true;
 
         if (selectedItem != START_PREFERENCE && restartActivity) {
           restartActivity(this);
@@ -276,7 +276,7 @@ public void selectItem(int item) {
         loadPrefFragment(new ColorPref(), R.string.color_title);
         break;
       case FOLDERS_PREFERENCE:
-        loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
+        loadPrefFragment(new FoldersPref(), R.string.sidebar_bookmarks_title);
         break;
       case QUICKACCESS_PREFERENCE:
         loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
@@ -100,6 +101,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
       case PREFERENCE_VIEW:
       case PREFERENCE_SHOW_LAST_MODIFIED:
+      case PREFERENCE_ENABLE_MARQUEE_FILENAME:
         defaultValue = true;
         break;
       default:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -239,6 +239,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     if (fragments != null && fragments.size() != 0) {
       if (fragmentManager == null) return;
+      fragmentManager.executePendingTransactions();
       for (Fragment fragment : fragments) {
         fragmentManager.putFragment(outState, "tab" + i, fragment);
         i++;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -222,7 +222,7 @@ public boolean onPreferenceClick(Preference preference) {
         int currentDragPreference =
             sharedPref.getInt(
                 PreferencesConstants.PREFERENCE_DRAG_AND_DROP_PREFERENCE,
-                PreferencesConstants.PREFERENCE_DRAG_TO_SELECT);
+                PreferencesConstants.PREFERENCE_DRAG_DEFAULT);
         dragDialogBuilder
             .items(dragToMoveArray)
             .itemsCallbackSingleChoice(

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -59,9 +59,10 @@
 @RunWith(AndroidJUnit4.class)
 @Config(sdk = {JELLY_BEAN, KITKAT, P})
 public class UtilsTest {
+
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -30,10 +30,9 @@
 
 import jcifs.smb.SmbFile;
 
-/** Created by Vishal on 30-04-2017. */
 public class CloudStreamer extends CloudStreamServer {
 
-  private static final String TAG = "CloudStreamer";
+  private static final String TAG = CloudStreamer.class.getSimpleName();
 
   public static final int PORT = 7871;
   public static final String URL = "http://127.0.0.1:" + PORT;
@@ -57,7 +56,7 @@ public static CloudStreamer getInstance() {
       try {
         instance = new CloudStreamer(PORT);
       } catch (IOException e) {
-        e.printStackTrace();
+        Log.e(TAG, "Error initializing CloudStreamer", e);
       }
     return instance;
   }

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .mainActivity
+              .requireMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -112,4 +112,6 @@ protected String fixEntryName(String entryName) {
       return entryName;
     }
   }
+
+  public class EmptyArchiveNotice extends IOException {}
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -135,7 +135,7 @@ public void onBackPressed() {
   public boolean onOptionsItemSelected(MenuItem item) {
     switch (item.getItemId()) {
       case android.R.id.home:
-        if (currentFragment.onOptionsItemSelected(item)) return true;
+        if (currentFragment != null && currentFragment.onOptionsItemSelected(item)) return true;
 
         if (selectedItem != START_PREFERENCE && restartActivity) {
           restartActivity(this);
@@ -276,7 +276,7 @@ public void selectItem(int item) {
         loadPrefFragment(new ColorPref(), R.string.color_title);
         break;
       case FOLDERS_PREFERENCE:
-        loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
+        loadPrefFragment(new FoldersPref(), R.string.sidebar_bookmarks_title);
         break;
       case QUICKACCESS_PREFERENCE:
         loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
@@ -100,6 +101,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
       case PREFERENCE_VIEW:
       case PREFERENCE_SHOW_LAST_MODIFIED:
+      case PREFERENCE_ENABLE_MARQUEE_FILENAME:
         defaultValue = true;
         break;
       default:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -239,6 +239,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     if (fragments != null && fragments.size() != 0) {
       if (fragmentManager == null) return;
+      fragmentManager.executePendingTransactions();
       for (Fragment fragment : fragments) {
         fragmentManager.putFragment(outState, "tab" + i, fragment);
         i++;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -222,7 +222,7 @@ public boolean onPreferenceClick(Preference preference) {
         int currentDragPreference =
             sharedPref.getInt(
                 PreferencesConstants.PREFERENCE_DRAG_AND_DROP_PREFERENCE,
-                PreferencesConstants.PREFERENCE_DRAG_TO_SELECT);
+                PreferencesConstants.PREFERENCE_DRAG_DEFAULT);
         dragDialogBuilder
             .items(dragToMoveArray)
             .itemsCallbackSingleChoice(

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -59,9 +59,10 @@
 @RunWith(AndroidJUnit4.class)
 @Config(sdk = {JELLY_BEAN, KITKAT, P})
 public class UtilsTest {
+
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -30,10 +30,9 @@
 
 import jcifs.smb.SmbFile;
 
-/** Created by Vishal on 30-04-2017. */
 public class CloudStreamer extends CloudStreamServer {
 
-  private static final String TAG = "CloudStreamer";
+  private static final String TAG = CloudStreamer.class.getSimpleName();
 
   public static final int PORT = 7871;
   public static final String URL = "http://127.0.0.1:" + PORT;
@@ -57,7 +56,7 @@ public static CloudStreamer getInstance() {
       try {
         instance = new CloudStreamer(PORT);
       } catch (IOException e) {
-        e.printStackTrace();
+        Log.e(TAG, "Error initializing CloudStreamer", e);
       }
     return instance;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -696,7 +696,7 @@ private static int checkFolder(final File folder, Context context) {
     }
 
     // file not on external sd card
-    if (FileProperties.isWritable(new File(folder, "DummyFile"))) {
+    if (FileProperties.isWritable(new File(folder, FileUtils.DUMMY_FILE))) {
       return 1;
     } else {
       return 0;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -100,6 +100,7 @@ public class FileUtils {
 
   public static final String FILE_PROVIDER_PREFIX = "storage_root";
   public static final String NOMEDIA_FILE = ".nomedia";
+  public static final String DUMMY_FILE = ".DummyFile";
 
   public static long folderSize(File directory, OnProgressUpdate<Long> updateState) {
     long length = 0;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -45,7 +45,6 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.ui.ItemPopupMenu;
-import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.superclasses.PreferenceActivity;
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.ui.drag.RecyclerAdapterDragListener;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -545,6 +545,9 @@ private void checkForExternalIntent(Intent intent) {
         // we don't have folder resource mime type set, supposed to be zip/rar
         openzip = true;
         zippath = Utils.sanitizeInput(uri.toString());
+        if (FileUtils.isCompressedFile(zippath)) {
+          openCompressed(zippath);
+        }
       }
 
     } else if (actionIntent.equals(Intent.ACTION_SEND)) {

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .getMainActivity()
+              .requireMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -276,7 +276,7 @@ public void selectItem(int item) {
         loadPrefFragment(new ColorPref(), R.string.color_title);
         break;
       case FOLDERS_PREFERENCE:
-        loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
+        loadPrefFragment(new FoldersPref(), R.string.sidebar_bookmarks_title);
         break;
       case QUICKACCESS_PREFERENCE:
         loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
@@ -100,6 +101,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
       case PREFERENCE_VIEW:
       case PREFERENCE_SHOW_LAST_MODIFIED:
+      case PREFERENCE_ENABLE_MARQUEE_FILENAME:
         defaultValue = true;
         break;
       default:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -239,6 +239,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     if (fragments != null && fragments.size() != 0) {
       if (fragmentManager == null) return;
+      fragmentManager.executePendingTransactions();
       for (Fragment fragment : fragments) {
         fragmentManager.putFragment(outState, "tab" + i, fragment);
         i++;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -222,7 +222,7 @@ public boolean onPreferenceClick(Preference preference) {
         int currentDragPreference =
             sharedPref.getInt(
                 PreferencesConstants.PREFERENCE_DRAG_AND_DROP_PREFERENCE,
-                PreferencesConstants.PREFERENCE_DRAG_TO_SELECT);
+                PreferencesConstants.PREFERENCE_DRAG_DEFAULT);
         dragDialogBuilder
             .items(dragToMoveArray)
             .itemsCallbackSingleChoice(

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
@@ -100,6 +101,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
       case PREFERENCE_VIEW:
       case PREFERENCE_SHOW_LAST_MODIFIED:
+      case PREFERENCE_ENABLE_MARQUEE_FILENAME:
         defaultValue = true;
         break;
       default:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -222,7 +222,7 @@ public boolean onPreferenceClick(Preference preference) {
         int currentDragPreference =
             sharedPref.getInt(
                 PreferencesConstants.PREFERENCE_DRAG_AND_DROP_PREFERENCE,
-                PreferencesConstants.PREFERENCE_DRAG_TO_SELECT);
+                PreferencesConstants.PREFERENCE_DRAG_DEFAULT);
         dragDialogBuilder
             .items(dragToMoveArray)
             .itemsCallbackSingleChoice(

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -108,7 +108,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     STORAGES_GROUP, SERVERS_GROUP, CLOUDS_GROUP, FOLDERS_GROUP, QUICKACCESSES_GROUP, LASTGROUP
   };
 
-  private MainActivity mainActivity;
+  @NonNull private final MainActivity mainActivity;
   private Resources resources;
   private DataUtils dataUtils;
 

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -107,7 +107,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     STORAGES_GROUP, SERVERS_GROUP, CLOUDS_GROUP, FOLDERS_GROUP, QUICKACCESSES_GROUP, LASTGROUP
   };
 
-  private MainActivity mainActivity;
+  @NonNull private final MainActivity mainActivity;
   private Resources resources;
   private DataUtils dataUtils;
 

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1699,7 +1699,7 @@ public void onDestroy() {
   }
 
   public void hide(String path) {
-    DataUtils.getInstance().addHistoryFile(path);
+    DataUtils.getInstance().addHiddenFile(path);
     File file = new File(path);
     if (file.isDirectory()) {
       File f1 = new File(path + "/" + ".nomedia");

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -107,7 +107,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     STORAGES_GROUP, SERVERS_GROUP, CLOUDS_GROUP, FOLDERS_GROUP, QUICKACCESSES_GROUP, LASTGROUP
   };
 
-  private MainActivity mainActivity;
+  @NonNull private final MainActivity mainActivity;
   private Resources resources;
   private DataUtils dataUtils;
 

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -192,7 +192,7 @@ public static long getTotalBytes(ArrayList<HybridFileParcelable> files, Context
     return totalBytes;
   }
 
-  private static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
+  public static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
     if (baseFile.isDirectory(context)) {
       return baseFile.folderSize(context);
     } else {
@@ -908,6 +908,7 @@ public static void checkForPath(Context context, String path, boolean isRootExpl
     if (!new File(path).exists()) {
       Toast.makeText(context, context.getString(R.string.bookmark_lost), Toast.LENGTH_SHORT).show();
       Operations.mkdir(
+          new HybridFile(OpenMode.FILE, path),
           RootHelper.generateBaseFile(new File(path), true),
           context,
           isRootExplorer,

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -42,7 +42,7 @@ public class CloudHandler {
   public static final String CLOUD_PREFIX_GOOGLE_DRIVE = "gdrive:/";
   public static final String CLOUD_PREFIX_ONE_DRIVE = "onedrive:/";
 
-  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive";
+  public static final String CLOUD_NAME_GOOGLE_DRIVE = "Google Drive™";
   public static final String CLOUD_NAME_DROPBOX = "Dropbox";
   public static final String CLOUD_NAME_ONE_DRIVE = "One Drive";
   public static final String CLOUD_NAME_BOX = "Box";

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -192,7 +192,7 @@ public static long getTotalBytes(ArrayList<HybridFileParcelable> files, Context
     return totalBytes;
   }
 
-  private static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
+  public static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
     if (baseFile.isDirectory(context)) {
       return baseFile.folderSize(context);
     } else {
@@ -903,6 +903,7 @@ public static void checkForPath(Context context, String path, boolean isRootExpl
     if (!new File(path).exists()) {
       Toast.makeText(context, context.getString(R.string.bookmark_lost), Toast.LENGTH_SHORT).show();
       Operations.mkdir(
+          new HybridFile(OpenMode.FILE, path),
           RootHelper.generateBaseFile(new File(path), true),
           context,
           isRootExplorer,

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -192,7 +192,7 @@ public static long getTotalBytes(ArrayList<HybridFileParcelable> files, Context
     return totalBytes;
   }
 
-  private static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
+  public static long getBaseFileSize(HybridFileParcelable baseFile, Context context) {
     if (baseFile.isDirectory(context)) {
       return baseFile.folderSize(context);
     } else {
@@ -903,6 +903,7 @@ public static void checkForPath(Context context, String path, boolean isRootExpl
     if (!new File(path).exists()) {
       Toast.makeText(context, context.getString(R.string.bookmark_lost), Toast.LENGTH_SHORT).show();
       Operations.mkdir(
+          new HybridFile(OpenMode.FILE, path),
           RootHelper.generateBaseFile(new File(path), true),
           context,
           isRootExplorer,

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -25,6 +25,7 @@
 
 import com.amaze.filemanager.utils.Utils;
 
+import android.content.ContentResolver;
 import android.content.Context;
 import android.database.Cursor;
 import android.net.Uri;
@@ -52,7 +53,7 @@ public enum Scheme {
 
   public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
     switch (uri.getScheme()) {
-      case "content":
+      case ContentResolver.SCHEME_CONTENT:
         this.uri = uri;
         this.scheme = CONTENT;
 
@@ -85,7 +86,7 @@ public EditableFileAbstraction(@NonNull Context context, @NonNull Uri uri) {
 
         this.hybridFileParcelable = null;
         break;
-      case "file":
+      case ContentResolver.SCHEME_FILE:
         this.scheme = FILE;
 
         String path = uri.getPath();

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -36,6 +36,7 @@ public enum OpenMode {
 
   ROOT,
   OTG,
+  DOCUMENT_FILE,
   GDRIVE,
   DROPBOX,
   BOX,

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -429,9 +429,9 @@ protected Void doInBackground(Void... params) {
           return null;
         } else if (oldFile.isSftp()) {
           SshClientUtils.execute(
-              new SFtpClientTemplate(oldFile.getPath()) {
+              new SFtpClientTemplate<Void>(oldFile.getPath()) {
                 @Override
-                public <Void> Void execute(@NonNull SFTPClient client) {
+                public Void execute(@NonNull SFTPClient client) {
                   try {
                     client.rename(
                         SshClientUtils.extractRemotePathFrom(oldFile.getPath()),

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -273,7 +273,7 @@ public void adjustListViewForTv(
             .scrollToPosition(
                 Math.min(viewHolder.getAdapterPosition() + 5, adapter.getItemCount() - 1));
       }
-    } catch (Exception e) {
+    } catch (IndexOutOfBoundsException e) {
       Log.w(getClass().getSimpleName(), "Failed to adjust scrollview for tv", e);
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1911,7 +1911,7 @@ > getContext().getResources().getDisplayMetrics().heightPixels) {
         listView.scrollToPosition(
             Math.min(viewHolder.getAdapterPosition() + 5, adapter.getItemCount() - 1));
       }
-    } catch (Exception e) {
+    } catch (IndexOutOfBoundsException e) {
       Log.w(getClass().getSimpleName(), "Failed to adjust scrollview for tv", e);
     }
   }

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .getMainActivity()
+              .requireMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -276,7 +276,7 @@ public void selectItem(int item) {
         loadPrefFragment(new ColorPref(), R.string.color_title);
         break;
       case FOLDERS_PREFERENCE:
-        loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
+        loadPrefFragment(new FoldersPref(), R.string.sidebar_bookmarks_title);
         break;
       case QUICKACCESS_PREFERENCE:
         loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -239,6 +239,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     if (fragments != null && fragments.size() != 0) {
       if (fragmentManager == null) return;
+      fragmentManager.executePendingTransactions();
       for (Fragment fragment : fragments) {
         fragmentManager.putFragment(outState, "tab" + i, fragment);
         i++;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -531,7 +531,6 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType
             marginFab = (int) context.getResources().getDimension(R.dimen.fab_margin);
         view = new View(context);
         view.setMinimumHeight(totalFabHeight + marginFab);
-        view.setFocusable(true);
         return new EmptyViewHolder(view);
       default:
         throw new IllegalArgumentException("Illegal: " + viewType);

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ENABLE_MARQUEE_FILENAME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
@@ -100,6 +101,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
       case PREFERENCE_VIEW:
       case PREFERENCE_SHOW_LAST_MODIFIED:
+      case PREFERENCE_ENABLE_MARQUEE_FILENAME:
         defaultValue = true;
         break;
       default:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1045,9 +1045,7 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
                 utilsProvider,
                 sharedPref,
                 listView,
-                listElements == null
-                    ? Collections.emptyList()
-                    : listElements,
+                listElements == null ? Collections.emptyList() : listElements,
                 requireContext(),
                 grid);
       } else {

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -33,7 +33,6 @@
 import com.amaze.filemanager.filesystem.files.EncryptDecryptUtils;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
@@ -94,7 +93,8 @@ public boolean onMenuItemClick(MenuItem item) {
         GeneralDialogCreation.showPropertiesDialogWithPermissions(
             (rowItem).generateBaseFile(),
             rowItem.permissions,
-            (ThemedActivity) mainActivity,
+            mainActivity,
+            mainFragment,
             mainActivity.isRootExplorer(),
             utilitiesProvider.getAppTheme());
         return true;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -59,7 +59,6 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
-import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.drag.RecyclerAdapterDragListener;
 import com.amaze.filemanager.ui.drag.TabFragmentBottomDragListener;
@@ -556,7 +555,8 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
               GeneralDialogCreation.showPropertiesDialogWithPermissions(
                   (x).generateBaseFile(),
                   x.permissions,
-                  (ThemedActivity) requireActivity(),
+                  (MainActivity) requireActivity(),
+                  MainFragment.this,
                   getMainActivity().isRootExplorer(),
                   utilsProvider.getAppTheme());
               mode.finish();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -556,7 +556,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
               GeneralDialogCreation.showPropertiesDialogWithPermissions(
                   (x).generateBaseFile(),
                   x.permissions,
-                  (ThemedActivity) getActivity(),
+                  (ThemedActivity) requireActivity(),
                   getMainActivity().isRootExplorer(),
                   utilsProvider.getAppTheme());
               mode.finish();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -107,7 +107,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     STORAGES_GROUP, SERVERS_GROUP, CLOUDS_GROUP, FOLDERS_GROUP, QUICKACCESSES_GROUP, LASTGROUP
   };
 
-  private MainActivity mainActivity;
+  @NonNull private final MainActivity mainActivity;
   private Resources resources;
   private DataUtils dataUtils;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -429,9 +429,9 @@ protected Void doInBackground(Void... params) {
           return null;
         } else if (oldFile.isSftp()) {
           SshClientUtils.execute(
-              new SFtpClientTemplate(oldFile.getPath()) {
+              new SFtpClientTemplate<Void>(oldFile.getPath()) {
                 @Override
-                public <Void> Void execute(@NonNull SFTPClient client) {
+                public Void execute(@NonNull SFTPClient client) {
                   try {
                     client.rename(
                         SshClientUtils.extractRemotePathFrom(oldFile.getPath()),

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -57,6 +57,7 @@
 import android.os.AsyncTask;
 import android.widget.Toast;
 
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import net.schmizz.sshj.sftp.RemoteFile;
@@ -245,6 +246,7 @@ protected void onPostExecute(Boolean aBoolean) {
   }
 
   /** Get an input stream for thumbnail for a given {@link IconDataParcelable} */
+  @Nullable
   public static InputStream getThumbnailInputStreamForCloud(Context context, String path) {
     InputStream inputStream;
     HybridFile hybridFile = new HybridFile(OpenMode.UNKNOWN, path);
@@ -255,7 +257,7 @@ public static InputStream getThumbnailInputStreamForCloud(Context context, Strin
       case SFTP:
         inputStream =
             SshClientUtils.execute(
-                new SFtpClientTemplate(hybridFile.getPath(), false) {
+                new SFtpClientTemplate<InputStream>(hybridFile.getPath(), false) {
                   @Override
                   public InputStream execute(final SFTPClient client) throws IOException {
                     final RemoteFile rf =

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -239,6 +239,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     if (fragments != null && fragments.size() != 0) {
       if (fragmentManager == null) return;
+      fragmentManager.executePendingTransactions();
       for (Fragment fragment : fragments) {
         fragmentManager.putFragment(outState, "tab" + i, fragment);
         i++;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -543,6 +543,9 @@ private void checkForExternalIntent(Intent intent) {
         // we don't have folder resource mime type set, supposed to be zip/rar
         openzip = true;
         zippath = Utils.sanitizeInput(uri.toString());
+        if (FileUtils.isCompressedFile(zippath)) {
+          openCompressed(zippath);
+        }
       }
 
     } else if (actionIntent.equals(Intent.ACTION_SEND)) {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1814,6 +1814,7 @@ public void stopSmoothScrollListView() {
     }
   }
 
+  @Nullable
   public String getCurrentPath() {
     if (mainFragmentViewModel == null) {
       Log.w(getClass().getSimpleName(), "Viewmodel not available to get current path");
@@ -1823,7 +1824,7 @@ public String getCurrentPath() {
   }
 
   @Override
-  public void changePath(String path) {
+  public void changePath(@NonNull String path) {
     loadlist(path, false, mainFragmentViewModel.getOpenMode());
   }
 

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -509,7 +509,6 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType
             viewType == TYPE_HEADER_FOLDERS
                 ? SpecialViewHolder.HEADER_FOLDERS
                 : SpecialViewHolder.HEADER_FILES;
-        view.setNextFocusUpId(mainFrag.getMainActivity().getAppbar().getToolbar().getId());
         return new SpecialViewHolder(context, view, utilsProvider, type);
       case TYPE_ITEM:
       case TYPE_BACK:

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -38,6 +38,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.OpenFileDialogFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
@@ -189,7 +190,7 @@ private void startActivityForRowItem(AppDataParcelable rowItem) {
               openFileParcelable.getClassName(),
               openFileParcelable.getPackageName());
       OpenFileDialogFragment.Companion.setLastOpenedApp(rowItem, themedActivity);
-      fragment.getContext().startActivity(intent);
+      ExtensionsKt.startActivityCatchingSecurityException(fragment.requireContext(), intent);
     } else {
       Intent i1 =
           fragment.getContext().getPackageManager().getLaunchIntentForPackage(rowItem.packageName);

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .mainActivity
+              .getMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -112,4 +112,6 @@ protected String fixEntryName(String entryName) {
       return entryName;
     }
   }
+
+  public class EmptyArchiveNotice extends IOException {}
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -135,7 +135,7 @@ public void onBackPressed() {
   public boolean onOptionsItemSelected(MenuItem item) {
     switch (item.getItemId()) {
       case android.R.id.home:
-        if (currentFragment.onOptionsItemSelected(item)) return true;
+        if (currentFragment != null && currentFragment.onOptionsItemSelected(item)) return true;
 
         if (selectedItem != START_PREFERENCE && restartActivity) {
           restartActivity(this);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -641,7 +641,7 @@ private static void showPropertiesDialog(
                   Log.w(TAG, "'.nomedia' file creation in " + baseFile.getPath() + " failed!");
                 }
               } catch (IOException e) {
-                e.printStackTrace();
+                Log.e(TAG, "Error creating file", e);
               }
             } else {
               // checkbox is unchecked, delete .nomedia

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -59,9 +59,10 @@
 @RunWith(AndroidJUnit4.class)
 @Config(sdk = {JELLY_BEAN, KITKAT, P})
 public class UtilsTest {
+
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -30,10 +30,9 @@
 
 import jcifs.smb.SmbFile;
 
-/** Created by Vishal on 30-04-2017. */
 public class CloudStreamer extends CloudStreamServer {
 
-  private static final String TAG = "CloudStreamer";
+  private static final String TAG = CloudStreamer.class.getSimpleName();
 
   public static final int PORT = 7871;
   public static final String URL = "http://127.0.0.1:" + PORT;
@@ -57,7 +56,7 @@ public static CloudStreamer getInstance() {
       try {
         instance = new CloudStreamer(PORT);
       } catch (IOException e) {
-        e.printStackTrace();
+        Log.e(TAG, "Error initializing CloudStreamer", e);
       }
     return instance;
   }

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -153,7 +153,7 @@ private void toggleChecked(int position, ImageView imageView) {
       compressedExplorerFragment.mActionModeCallback);*/
       compressedExplorerFragment.mActionMode =
           compressedExplorerFragment
-              .mainActivity
+              .getMainActivity()
               .getAppbar()
               .getToolbar()
               .startActionMode(compressedExplorerFragment.mActionModeCallback);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -641,7 +641,7 @@ private static void showPropertiesDialog(
                   Log.w(TAG, "'.nomedia' file creation in " + baseFile.getPath() + " failed!");
                 }
               } catch (IOException e) {
-                e.printStackTrace();
+                Log.e(TAG, "Error creating file", e);
               }
             } else {
               // checkbox is unchecked, delete .nomedia

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -30,10 +30,9 @@
 
 import jcifs.smb.SmbFile;
 
-/** Created by Vishal on 30-04-2017. */
 public class CloudStreamer extends CloudStreamServer {
 
-  private static final String TAG = "CloudStreamer";
+  private static final String TAG = CloudStreamer.class.getSimpleName();
 
   public static final int PORT = 7871;
   public static final String URL = "http://127.0.0.1:" + PORT;
@@ -57,7 +56,7 @@ public static CloudStreamer getInstance() {
       try {
         instance = new CloudStreamer(PORT);
       } catch (IOException e) {
-        e.printStackTrace();
+        Log.e(TAG, "Error initializing CloudStreamer", e);
       }
     return instance;
   }

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallableTest.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.asynchronous.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks.texteditor.write;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
@@ -45,7 +45,6 @@
 import org.robolectric.annotation.Implementation;
 import org.robolectric.annotation.Implements;
 
-import com.amaze.filemanager.asynchronous.asynctasks.texteditor.write.WriteTextFileCallable;
 import com.amaze.filemanager.file_operations.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.file_operations.exceptions.StreamNotFoundException;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -38,6 +38,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.OpenFileDialogFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
@@ -189,7 +190,7 @@ private void startActivityForRowItem(AppDataParcelable rowItem) {
               openFileParcelable.getClassName(),
               openFileParcelable.getPackageName());
       OpenFileDialogFragment.Companion.setLastOpenedApp(rowItem, themedActivity);
-      fragment.getContext().startActivity(intent);
+      ExtensionsKt.startActivityCatchingSecurityException(fragment.requireContext(), intent);
     } else {
       Intent i1 =
           fragment.getContext().getPackageManager().getLaunchIntentForPackage(rowItem.packageName);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -32,9 +32,8 @@
 import android.os.Parcelable;
 import android.util.Log;
 
-import androidx.annotation.Nullable;
-
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import jcifs.smb.SmbException;
 import jcifs.smb.SmbFile;

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamSource.java
Patch:
@@ -57,7 +57,7 @@ public CloudStreamSource(String fileName, long length, InputStream inputStream)
    */
   public void open() throws IOException {
     if (fp > 0) {
-      inputStream.skip(fp);
+      fp = inputStream.skip(fp);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -38,6 +38,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.ui.ExtensionsKt;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.OpenFileDialogFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
@@ -189,7 +190,7 @@ private void startActivityForRowItem(AppDataParcelable rowItem) {
               openFileParcelable.getClassName(),
               openFileParcelable.getPackageName());
       OpenFileDialogFragment.Companion.setLastOpenedApp(rowItem, themedActivity);
-      fragment.getContext().startActivity(intent);
+      ExtensionsKt.startActivityCatchingSecurityException(fragment.requireContext(), intent);
     } else {
       Intent i1 =
           fragment.getContext().getPackageManager().getLaunchIntentForPackage(rowItem.packageName);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1759,6 +1759,7 @@ public MainActivity getMainActivity() {
     return (MainActivity) getActivity();
   }
 
+  @Nullable
   public ArrayList<LayoutElementParcelable> getElementsList() {
     return mainFragmentViewModel.getListElements();
   }

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamer.java
Patch:
@@ -30,10 +30,9 @@
 
 import jcifs.smb.SmbFile;
 
-/** Created by Vishal on 30-04-2017. */
 public class CloudStreamer extends CloudStreamServer {
 
-  private static final String TAG = "CloudStreamer";
+  private static final String TAG = CloudStreamer.class.getSimpleName();
 
   public static final int PORT = 7871;
   public static final String URL = "http://127.0.0.1:" + PORT;
@@ -57,7 +56,7 @@ public static CloudStreamer getInstance() {
       try {
         instance = new CloudStreamer(PORT);
       } catch (IOException e) {
-        e.printStackTrace();
+        Log.e(TAG, "Error initializing CloudStreamer", e);
       }
     return instance;
   }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -641,7 +641,7 @@ private static void showPropertiesDialog(
                   Log.w(TAG, "'.nomedia' file creation in " + baseFile.getPath() + " failed!");
                 }
               } catch (IOException e) {
-                e.printStackTrace();
+                Log.e(TAG, "Error creating file", e);
               }
             } else {
               // checkbox is unchecked, delete .nomedia

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -337,7 +337,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        if(path.isEmpty()) {
+        if (path.isEmpty()) {
           return "";
         }
 
@@ -396,7 +396,7 @@ public String getParent(Context context) {
         return getFile().getParent();
       case SFTP:
       default:
-        if(path.length() == getName(context).length()) {
+        if (path.length() == getName(context).length()) {
           return null;
         }
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1765,6 +1765,7 @@ public MainActivity getMainActivity() {
     return (MainActivity) getActivity();
   }
 
+  @Nullable
   public ArrayList<LayoutElementParcelable> getElementsList() {
     return mainFragmentViewModel.getListElements();
   }

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -135,7 +135,7 @@ public void onBackPressed() {
   public boolean onOptionsItemSelected(MenuItem item) {
     switch (item.getItemId()) {
       case android.R.id.home:
-        if (currentFragment.onOptionsItemSelected(item)) return true;
+        if (currentFragment != null && currentFragment.onOptionsItemSelected(item)) return true;
 
         if (selectedItem != START_PREFERENCE && restartActivity) {
           restartActivity(this);

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -112,4 +112,6 @@ protected String fixEntryName(String entryName) {
       return entryName;
     }
   }
+
+  public class EmptyArchiveNotice extends IOException {}
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -112,4 +112,6 @@ protected String fixEntryName(String entryName) {
       return entryName;
     }
   }
+
+  public class EmptyArchiveNotice extends IOException {}
 }

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -59,9 +59,10 @@
 @RunWith(AndroidJUnit4.class)
 @Config(sdk = {JELLY_BEAN, KITKAT, P})
 public class UtilsTest {
+
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -61,7 +61,8 @@
 public class UtilsTest {
 
   @Test
-  public void testSanitizeInput() {                 // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -59,9 +59,10 @@
 @RunWith(AndroidJUnit4.class)
 @Config(sdk = {JELLY_BEAN, KITKAT, P})
 public class UtilsTest {
+
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() {
+    // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -66,8 +66,7 @@ public void testFailTheTests() {
   }
 
   @Test
-  public void
-      testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
+  public void testSanitizeInput() { // This function is sanitize the string. It removes ";","|","&&","..."
     // from string.
     assertEquals("a", sanitizeInput("|a|")); // test the removing of pipe sign from string.
     assertEquals("a", sanitizeInput("...a...")); // test the removing of dots from string.

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -341,7 +341,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
   }
 
   @Override
-  protected void onDestroy() {
+  public void onDestroy() {
     super.onDestroy();
     final TextEditorActivityViewModel viewModel =
         new ViewModelProvider(this).get(TextEditorActivityViewModel.class);

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -74,6 +74,7 @@
 import android.os.Handler;
 import android.text.TextUtils;
 import android.util.Log;
+import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -619,6 +620,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
           if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
             holder.about.setColorFilter(grey_color);
           showPopup(holder.about, rowItem);
+          holder.about.setNextFocusRightId(mainFrag.getMainActivity().getFAB().getId());
         }
         holder.genericIcon.setOnClickListener(
             v -> {
@@ -887,6 +889,7 @@ && getBoolean(PREFERENCE_SHOW_THUMB))) {
           if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
             holder.about.setColorFilter(grey_color);
           showPopup(holder.about, rowItem);
+          holder.about.setNextFocusRightId(mainFrag.getMainActivity().getFAB().getId());
         }
 
         if (getBoolean(PREFERENCE_SHOW_LAST_MODIFIED)) {

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -35,8 +35,6 @@
 /**
  * This is a special representation of a file that is to be used so that uris can be loaded as
  * editable files.
- *
- * @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 16/1/2018, at 17:06.
  */
 public class EditableFileAbstraction {
 

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -44,6 +44,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
+import com.amaze.filemanager.ui.activities.texteditor.TextEditorActivity;
 
 import android.content.ContentResolver;
 import android.content.Intent;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/read/ReadTextFileCallable.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.asynchronous.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks.texteditor.read;
 
 import java.io.File;
 import java.io.FileInputStream;
@@ -43,7 +43,7 @@
 import androidx.annotation.WorkerThread;
 import androidx.documentfile.provider.DocumentFile;
 
-public class ReadTextFileTask implements Callable<ReturnedValueOnReadFile> {
+public class ReadTextFileCallable implements Callable<ReturnedValueOnReadFile> {
 
   public static final int MAX_FILE_SIZE_CHARS = 50 * 1024;
 
@@ -54,7 +54,7 @@ public class ReadTextFileTask implements Callable<ReturnedValueOnReadFile> {
 
   private File cachedFile = null;
 
-  public ReadTextFileTask(
+  public ReadTextFileCallable(
       ContentResolver contentResolver,
       EditableFileAbstraction file,
       File cacheDir,

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/texteditor/write/WriteTextFileCallable.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.asynchronous.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks.texteditor.write;
 
 import java.io.File;
 import java.io.FileOutputStream;
@@ -46,15 +46,15 @@
 
 import kotlin.Unit;
 
-public class WriteTextFileTask implements Callable<Unit> {
+public class WriteTextFileCallable implements Callable<Unit> {
   private final WeakReference<Context> context;
   private final ContentResolver contentResolver;
   private final EditableFileAbstraction fileAbstraction;
   private final File cachedFile;
   private final boolean isRootExplorer;
   private final String dataToSave;
 
-  public WriteTextFileTask(
+  public WriteTextFileCallable(
       Context context,
       ContentResolver contentResolver,
       EditableFileAbstraction file,

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -407,16 +407,15 @@ private static void load(final TextEditorActivity activity) {
           } else if (error instanceof OutOfMemoryError) {
             Toast.makeText(applicationContext, R.string.error_file_too_large, Toast.LENGTH_SHORT)
                 .show();
+          } else {
+            Toast.makeText(applicationContext, R.string.error, Toast.LENGTH_SHORT).show();
           }
 
           final TextEditorActivity textEditorActivity = textEditorActivityWR.get();
           if (textEditorActivity == null) {
             return;
           }
 
-          final TextEditorActivityViewModel viewModel =
-              new ViewModelProvider(activity).get(TextEditorActivityViewModel.class);
-
           textEditorActivity.loadingSnackbar.dismiss();
 
           textEditorActivity.finish();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -26,6 +26,7 @@
 import java.io.IOException;
 import java.io.OutputStream;
 import java.lang.ref.WeakReference;
+import java.util.Objects;
 import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.application.AppConfig;
@@ -75,6 +76,7 @@ public Void call()
 
     switch (fileAbstraction.scheme) {
       case CONTENT:
+        Objects.requireNonNull(fileAbstraction.uri);
         try {
           if (fileAbstraction.uri.getAuthority().equals(context.get().getPackageName())) {
             DocumentFile documentFile =
@@ -94,6 +96,7 @@ public Void call()
         break;
       case FILE:
         final HybridFileParcelable hybridFileParcelable = fileAbstraction.hybridFileParcelable;
+        Objects.requireNonNull(hybridFileParcelable);
 
         Context context = this.context.get();
         if (context == null) {

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -36,8 +36,7 @@
 public class AmazeFileManagerModule extends AppGlideModule {
   @Override
   public void registerComponents(Context context, Glide glide, Registry registry) {
-    registry.prepend(
-        String.class, Drawable.class, new ApkImageModelLoaderFactory(context.getPackageManager()));
+    registry.prepend(String.class, Drawable.class, new ApkImageModelLoaderFactory(context));
     registry.prepend(String.class, Bitmap.class, new CloudIconModelFactory(context));
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/texteditor/TextEditorActivity.java
Patch:
@@ -454,7 +454,7 @@ public void run() {
 
               final TextEditorActivityViewModel viewModel = new ViewModelProvider(textEditorActivity).get(TextEditorActivityViewModel.class);
 
-              modified = !mInput.getText().toString().equals(viewModel.getOriginal());
+              modified = !textEditorActivity.mInput.getText().toString().equals(viewModel.getOriginal());
               if (viewModel.getModified() != modified) {
                 viewModel.setModified(modified);
                 invalidateOptionsMenu();

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.colors;
 
-import static android.os.Build.VERSION_CODES.N;
 import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
@@ -41,7 +40,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = N, maxSdk = P)
+@Config(sdk = {P}) // Min sdk is N
 public class ColorUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -156,7 +156,7 @@ public void testIsNullOrEmptyString() {
   }
 
   @Test
-  @Config(minSdk = N, maxSdk = P)
+  @Config(sdk = {P}) // min sdk is N
   public void testGetVolumeDirectory() throws Exception {
     StorageVolume mock = mock(StorageVolume.class);
     Field f = StorageVolume.class.getDeclaredField("mPath");

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1050,7 +1050,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
                 sharedPref,
                 listView,
                 mainFragmentViewModel.getListElements(),
-                getActivity());
+                getActivity(),
+                grid);
       } else {
         adapter.setItems(listView, new ArrayList<>(mainFragmentViewModel.getListElements()));
       }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1050,7 +1050,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
                 sharedPref,
                 listView,
                 mainFragmentViewModel.getListElements(),
-                getActivity());
+                getActivity(),
+                    grid);
       } else {
         adapter.setItems(listView, new ArrayList<>(mainFragmentViewModel.getListElements()));
       }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1195,7 +1195,7 @@ public void rename(final HybridFileParcelable f) {
             getResources().getString(R.string.cancel),
             (dialog, which) -> {
               EditText textfield = dialog.getCustomView().findViewById(R.id.singleedittext_input);
-              String name1 = textfield.getText().toString();
+              String name1 = textfield.getText().toString().trim();
 
               getMainActivity()
                   .mainActivityHelper
@@ -1213,7 +1213,7 @@ public void rename(final HybridFileParcelable f) {
             (text) -> {
               boolean isValidFilename = FileProperties.isValidFilename(text);
 
-              if (!isValidFilename) {
+              if (!isValidFilename || text.startsWith(" ")) {
                 return new WarnableTextInputValidator.ReturnState(
                     WarnableTextInputValidator.ReturnState.STATE_ERROR, R.string.invalid_name);
               } else if (text.length() < 1) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -137,6 +137,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                     CloudUtil.stripPath(mode, baseFile.getPath()),
                     CloudUtil.stripPath(mode, destPath));
               } catch (Exception e) {
+                e.printStackTrace();
                 return false;
               }
             } else {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -260,6 +260,7 @@ public long length(Context context) {
           try {
             s = smbFile.length();
           } catch (SmbException e) {
+            e.printStackTrace();
           }
         return s;
       case FILE:
@@ -1089,6 +1090,7 @@ public Boolean execute(SFTPClient client) throws IOException {
         SmbFile smbFile = getSmbFile(2000);
         exists = smbFile != null && smbFile.exists();
       } catch (SmbException e) {
+        e.printStackTrace();
         exists = false;
       }
     } else if (isDropBoxFile()) {
@@ -1149,6 +1151,7 @@ public boolean setLastModified(final long date) {
           return false;
         }
       } catch (SmbException e) {
+        e.printStackTrace();
         return false;
       }
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/PasteHelper.java
Patch:
@@ -163,7 +163,7 @@ public void onSuccess(Spanned spanned) {
                                   move,
                                   mainActivity,
                                   mainActivity.isRootExplorer(),
-                                  mainFragment.openMode)
+                                  mainFragment.getMainFragmentViewModel().getOpenMode())
                               .executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, arrayList);
                           dismissSnackbar(true);
                         },

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -257,7 +257,7 @@ public void onButtonPressed(Intent intent, String password) {}
             context,
             mainActivity,
             mainFragment,
-            mainFragment.openMode,
+            mainFragment.getMainFragmentViewModel().getOpenMode(),
             rowItem.generateBaseFile(),
             rowItem.generateBaseFile().getParent(context),
             utilitiesProvider,

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1702,6 +1702,7 @@ public void onPostExecute(Void c) {
             .getAppbar()
             .getBottomBar()
             .setFullPathText(getString(R.string.search_results, query));
+        mainFragmentViewModel.setResults(false);
       }
     }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
   }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1026,7 +1026,6 @@ public boolean onPrepareOptionsMenu(Menu menu) {
       menu.findItem(R.id.home).setVisible(false);
       menu.findItem(R.id.history).setVisible(false);
       menu.findItem(R.id.extract).setVisible(false);
-      menu.findItem(R.id.exit).setVisible(false);
       if (fragment instanceof ProcessViewerFragment) {
         menu.findItem(R.id.sort).setVisible(false);
       } else if (fragment instanceof FtpServerFragment) {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -127,6 +127,9 @@ public boolean onOptionsItemSelected(@NonNull MenuItem item) {
       case R.id.sort:
         showSortDialog(((MainActivity) requireActivity()).getAppTheme());
         return true;
+      case R.id.exit:
+        requireActivity().finish();
+        return true;
       default:
         return super.onOptionsItemSelected(item);
     }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -453,8 +453,8 @@ private void invalidateFragmentAndBundle(Bundle savedInstanceState) {
       oppathe1 = savedInstanceState.getString(KEY_OPERATED_ON_PATH);
       oparrayList = savedInstanceState.getParcelableArrayList(KEY_OPERATIONS_PATH_LIST);
       operation = savedInstanceState.getInt(KEY_OPERATION);
-      //      int selectedStorage = savedInstanceState.getInt(KEY_DRAWER_SELECTED, 0);
-      //      getDrawer().selectCorrectDrawerItem(selectedStorage);
+      int selectedStorage = savedInstanceState.getInt(KEY_DRAWER_SELECTED, 0);
+      getDrawer().selectCorrectDrawerItem(selectedStorage);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -402,7 +402,7 @@ public void switchView() {
   private void loadViews() {
     if (CURRENT_PATH != null) {
       if ((LIST_ELEMENTS == null || LIST_ELEMENTS.size() == 0) && !results) {
-        loadlist(CURRENT_PATH, true, OpenMode.FILE);
+        loadlist(CURRENT_PATH, true, openMode);
       } else {
         reloadListElements(true, results, !IS_LIST);
       }
@@ -412,7 +412,7 @@ private void loadViews() {
         }
       }
     } else {
-      loadlist(home, true, OpenMode.FILE);
+      loadlist(home, true, openMode);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -780,7 +780,7 @@ public void home() {
    * @param isBackButton is it the back button aka '..'
    * @param position the position
    * @param layoutElementParcelable the list item
-   * @param imageView the check {@link RoundedImageView} that is to be animated
+   * @param imageView the check icon that is to be animated
    */
   public void onListItemClicked(
       boolean isBackButton,

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1025,7 +1025,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     if (drawer.onOptionsItemSelected(item)) return true;
 
     if (getFragmentAtFrame() instanceof AppsListFragment && item.getItemId() == R.id.sort) {
-      GeneralDialogCreation.showSortDialog((AppsListFragment) getFragmentAtFrame(), getAppTheme());
+      ((AppsListFragment) getFragmentAtFrame()).showSortDialog(getAppTheme());
     }
 
     // Handle action buttons

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -100,6 +100,8 @@ public class PreferencesConstants {
 
   // START sort preferences
   public static final String PREFERENCE_SORTBY_ONLY_THIS = "sortby_only_this";
+  public static final String PREFERENCE_APPLIST_SORTBY = "AppsListFragment.sortBy";
+  public static final String PREFERENCE_APPLIST_ISASCENDING = "AppsListFragment.isAscending";
   // END sort preferences
 
   // drag and drop preferences

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -91,8 +91,8 @@ public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {
 
     sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getActivity());
     isAscending =
-        sharedPreferences.getBoolean(PreferencesConstants.PREFERENCE_APPLIST_ISASCENDING, true);
-    sortby = sharedPreferences.getInt(PreferencesConstants.PREFERENCE_APPLIST_SORTBY, 0);
+        sharedPreferences.getBoolean(PREFERENCE_APPLIST_ISASCENDING, true);
+    sortby = sharedPreferences.getInt(PREFERENCE_APPLIST_SORTBY, 0);
 
     getListView().setDivider(null);
     if (utilsProvider.getAppTheme().equals(AppTheme.DARK)) {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -184,6 +184,7 @@ public View onCreateView(
 
   @Override
   public void onDestroyView() {
+    indicator = null; // Free the strong reference
     sharedPrefs
         .edit()
         .putInt(PreferencesConstants.PREFERENCE_CURRENT_TAB, MainActivity.currentTab)

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -184,6 +184,7 @@ public View onCreateView(
 
   @Override
   public void onDestroyView() {
+    indicator = null; // Free the strong reference
     sharedPrefs
         .edit()
         .putInt(PreferencesConstants.PREFERENCE_CURRENT_TAB, MainActivity.currentTab)

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/MenuMetadata.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.views.drawer;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 28/12/2017, at 18:01. */
 public final class MenuMetadata {
 
   public static final int ITEM_ENTRY = 1, ITEM_INTENT = 2;

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/MenuMetadata.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.views.drawer;
 
-/** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 28/12/2017, at 18:01. */
 public final class MenuMetadata {
 
   public static final int ITEM_ENTRY = 1, ITEM_INTENT = 2;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -76,10 +76,9 @@ public abstract class SshClientUtils {
    * @return Template execution results
    */
   public static final <T> T execute(@NonNull SshClientTemplate template) {
-    SSHClient client =
-        SshConnectionPool.getInstance().getConnection(extractBaseUriFrom(template.url));
+    SSHClient client = SshConnectionPool.INSTANCE.getConnection(extractBaseUriFrom(template.url));
     if (client == null) {
-      client = SshConnectionPool.getInstance().getConnection(template.url);
+      client = SshConnectionPool.INSTANCE.getConnection(template.url);
     }
     T retval = null;
     if (client != null) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -864,7 +864,7 @@ public void invalidatePasteSnackbar(boolean showSnackbar) {
 
   public void exit() {
     if (backPressedToExitOnce) {
-      SshConnectionPool.getInstance().shutdown();
+      SshConnectionPool.INSTANCE.shutdown();
       finish();
       if (isRootExplorer()) {
         // TODO close all shells
@@ -1318,7 +1318,7 @@ protected void onDestroy() {
     // TODO: 6/5/2017 Android may choose to not call this method before destruction
     // TODO: https://developer.android.com/reference/android/app/Activity.html#onDestroy%28%29
     closeInteractiveShell();
-    SshConnectionPool.getInstance().shutdown();
+    SshConnectionPool.INSTANCE.shutdown();
     if (drawer != null && drawer.getBilling() != null) {
       drawer.getBilling().destroyBillingInstance();
     }

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -78,16 +78,16 @@ public void setUp() throws IOException {
 
   @After
   public void tearDown() throws IOException {
-    SshConnectionPool.getInstance().shutdown();
+    SshConnectionPool.INSTANCE.shutdown();
     if (server != null && server.isOpen()) {
       server.stop(true);
     }
   }
 
   protected final void prepareSshConnection() {
     String hostFingerprint = KeyUtils.getFingerPrint(hostKeyProvider.getKeyPair().getPublic());
-    SshConnectionPool.getInstance()
-        .getConnection("127.0.0.1", serverPort, hostFingerprint, "testuser", "testpassword", null);
+    SshConnectionPool.INSTANCE.getConnection(
+        "127.0.0.1", serverPort, hostFingerprint, "testuser", "testpassword", null);
   }
 
   protected final int createSshServer(FileSystemFactory fileSystemFactory, int startPort)

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.filesystem.ssh;
 
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;
@@ -33,8 +33,8 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
+import com.amaze.filemanager.file_operations.filesystem.FolderState;
 import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
-import com.amaze.filemanager.filesystem.FolderState;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.icons.MimeTypes;

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.filesystem.ssh;
 
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;
@@ -33,8 +33,8 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
+import com.amaze.filemanager.file_operations.filesystem.FolderState;
 import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
-import com.amaze.filemanager.filesystem.FolderState;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.icons.MimeTypes;

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 
 import java.io.File;
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -23,8 +23,8 @@
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
 import static android.os.Build.VERSION_CODES.P;
-import static com.amaze.filemanager.filesystem.FolderStateKt.DOESNT_EXIST;
-import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.DOESNT_EXIST;
+import static com.amaze.filemanager.file_operations.filesystem.FolderStateKt.WRITABLE_ON_REMOTE;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertTrue;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -55,7 +55,6 @@
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;
-import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.utils.AnimUtils;
 import com.amaze.filemanager.utils.GlideConstants;
 import com.amaze.filemanager.utils.Utils;
@@ -761,8 +760,6 @@ && getBoolean(PREFERENCE_SHOW_THUMB))) {
         holder.genericIcon.setVisibility(View.VISIBLE);
         holder.checkImageViewGrid.setVisibility(View.INVISIBLE);
 
-        ((RoundedImageView) holder.genericIcon).setRelativeSize(1.25f, 1.25f);
-
         if (rowItem.filetype == Icons.IMAGE || rowItem.filetype == Icons.VIDEO) {
           if (getBoolean(PREFERENCE_SHOW_THUMB)) {
             holder.imageView1.setVisibility(View.VISIBLE);

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -46,7 +46,7 @@ public class RecyclerPreloadModelProvider
   public RecyclerPreloadModelProvider(
       @NonNull Fragment fragment, @NonNull List<IconDataParcelable> uris) {
     urisToLoad = uris;
-    request = GlideApp.with(fragment).asDrawable().centerCrop();
+    request = GlideApp.with(fragment).asDrawable().circleCrop();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -72,7 +72,6 @@
 import com.amaze.filemanager.ui.views.CustomScrollLinearLayoutManager;
 import com.amaze.filemanager.ui.views.DividerItemDecoration;
 import com.amaze.filemanager.ui.views.FastScroller;
-import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.WarnableTextInputValidator;
 import com.amaze.filemanager.utils.BottomBarButtonPath;
 import com.amaze.filemanager.utils.DataUtils;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -161,7 +161,7 @@ public RecyclerAdapter(
 
     mInflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
     accentColor = m.getMainActivity().getAccent();
-    iconSkinColor = m.getMainActivity().getCurrentColorPreference().iconSkin;
+    iconSkinColor = m.getMainActivity().getCurrentColorPreference().getIconSkin();
     goBackColor = Utils.getColor(context, R.color.goback_item);
     videoColor = Utils.getColor(context, R.color.video_item);
     audioColor = Utils.getColor(context, R.color.audio_item);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -48,12 +48,12 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.AsyncTask;
-import android.preference.PreferenceManager;
 import android.provider.MediaStore;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.documentfile.provider.DocumentFile;
+import androidx.preference.PreferenceManager;
 
 import jcifs.smb.SmbException;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -32,9 +32,10 @@
 
 import android.app.Activity;
 import android.os.AsyncTask;
-import android.preference.PreferenceManager;
 import android.util.Log;
 
+import androidx.preference.PreferenceManager;
+
 public class SearchAsyncTask extends AsyncTask<String, HybridFileParcelable, Void>
     implements StatefulAsyncTask<SearchWorkerFragment.HelperCallbacks> {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -56,13 +56,13 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.RemoteViews;
 import android.widget.Toast;
 
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.preference.PreferenceManager;
 
 public class CopyService extends AbstractProgressiveService {
 
@@ -114,7 +114,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
             .getUtilsProvider()
             .getColorPreference()
             .getCurrentUserColorPreferences(this, sharedPreferences)
-            .accent;
+            .getAccent();
 
     mNotifyManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
     b.putInt(TAG_COPY_START_ID, startId);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -46,11 +46,11 @@
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.os.IBinder;
-import android.preference.PreferenceManager;
 import android.widget.RemoteViews;
 
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.preference.PreferenceManager;
 
 /** @author Emmanuel Messulam <emmanuelbendavid@gmail.com> on 28/11/2017, at 20:59. */
 public class DecryptService extends AbstractProgressiveService {
@@ -97,7 +97,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             .getUtilsProvider()
             .getColorPreference()
             .getCurrentUserColorPreferences(this, sharedPreferences)
-            .accent;
+            .getAccent();
 
     OpenMode openMode =
         OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -45,11 +45,11 @@
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.os.IBinder;
-import android.preference.PreferenceManager;
 import android.widget.RemoteViews;
 
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.preference.PreferenceManager;
 
 /** Created by vishal on 8/4/17 edited by Emmanuel Messulam <emmanuelbendavid@gmail.com> */
 public class EncryptService extends AbstractProgressiveService {
@@ -97,7 +97,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
             .getUtilsProvider()
             .getColorPreference()
             .getCurrentUserColorPreferences(this, sharedPreferences)
-            .accent;
+            .getAccent();
 
     OpenMode openMode =
         OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -51,14 +51,14 @@
 import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.os.IBinder;
-import android.preference.PreferenceManager;
 import android.util.Log;
 import android.widget.EditText;
 import android.widget.RemoteViews;
 import android.widget.Toast;
 
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.preference.PreferenceManager;
 
 import net.lingala.zip4j.exception.ZipException;
 
@@ -105,7 +105,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
             .getUtilsProvider()
             .getColorPreference()
             .getCurrentUserColorPreferences(this, sharedPreferences)
-            .accent;
+            .getAccent();
 
     Intent notificationIntent = new Intent(this, MainActivity.class);
     notificationIntent.setAction(Intent.ACTION_MAIN);

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -30,11 +30,11 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 import android.util.Log;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
+import androidx.preference.PreferenceManager;
 
 import io.reactivex.schedulers.Schedulers;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -65,7 +65,6 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.ParcelFileDescriptor;
-import android.preference.PreferenceManager;
 import android.provider.BaseColumns;
 import android.provider.MediaStore;
 import android.util.Log;
@@ -74,6 +73,7 @@
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
+import androidx.preference.PreferenceManager;
 
 import io.reactivex.Maybe;
 import io.reactivex.MaybeObserver;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -60,12 +60,12 @@
 import android.content.Context;
 import android.net.Uri;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.util.Log;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
+import androidx.preference.PreferenceManager;
 
 import io.reactivex.Single;
 import io.reactivex.schedulers.Schedulers;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/CryptUtil.java
Patch:
@@ -55,13 +55,13 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.security.KeyPairGeneratorSpec;
 import android.security.keystore.KeyGenParameterSpec;
 import android.security.keystore.KeyProperties;
 import android.util.Base64;
 
 import androidx.annotation.RequiresApi;
+import androidx.preference.PreferenceManager;
 
 /**
  * Created by vishal on 6/4/17.

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -41,9 +41,10 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.widget.Toast;
 
+import androidx.preference.PreferenceManager;
+
 /**
  * Provides useful interfaces and methods for encryption/decryption
  *

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -76,7 +76,6 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.CountDownTimer;
-import android.preference.PreferenceManager;
 import android.util.Log;
 import android.view.View;
 import android.widget.Toast;
@@ -86,6 +85,7 @@
 import androidx.core.content.FileProvider;
 import androidx.core.util.Pair;
 import androidx.documentfile.provider.DocumentFile;
+import androidx.preference.PreferenceManager;
 
 import jcifs.smb.SmbFile;
 import net.schmizz.sshj.sftp.RemoteResourceInfo;

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -43,12 +43,13 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.PopupMenu;
 import android.widget.Toast;
 
+import androidx.preference.PreferenceManager;
+
 /**
  * This class contains the functionality of the PopupMenu for each file in the MainFragment
  *

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -39,7 +39,6 @@
 import android.graphics.BitmapFactory;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.util.Log;
 import android.view.MenuItem;
 import android.view.View;
@@ -49,6 +48,7 @@
 import androidx.appcompat.widget.Toolbar;
 import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.palette.graphics.Palette;
+import androidx.preference.PreferenceManager;
 
 /** Created by vishal on 27/7/16. */
 public class AboutActivity extends BasicActivity implements View.OnClickListener {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1626,7 +1626,7 @@ public void initializeFabActionViews() {
   }
 
   private void initFabTitle(@IdRes int id, @StringRes int fabTitle, @DrawableRes int icon) {
-    int iconSkin = getCurrentColorPreference().iconSkin;
+    int iconSkin = getCurrentColorPreference().getIconSkin();
 
     SpeedDialActionItem.Builder builder =
         new SpeedDialActionItem.Builder(id, icon)

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -46,7 +46,8 @@
 
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
+
+import androidx.preference.PreferenceManager;
 
 /** @author Emmanuel on 24/8/2017, at 23:13. */
 public class PreferenceActivity extends BasicActivity {

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -117,7 +117,7 @@ public UserColorPreferences getCurrentColorPreference() {
   }
 
   public @ColorInt int getAccent() {
-    return getColorPreference().getCurrentUserColorPreferences(this, getPrefs()).accent;
+    return getColorPreference().getCurrentUserColorPreferences(this, getPrefs()).getAccent();
   }
 
   private void setKitkatStatusBarMargin(View parentView) {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -92,7 +92,6 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Build;
-import android.preference.PreferenceManager;
 import android.text.InputType;
 import android.text.SpannableString;
 import android.text.TextUtils;
@@ -113,6 +112,7 @@
 import androidx.annotation.RequiresApi;
 import androidx.annotation.StringRes;
 import androidx.appcompat.widget.AppCompatButton;
+import androidx.preference.PreferenceManager;
 
 /**
  * Here are a lot of function that create material dialogs

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -39,11 +39,11 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.Editable;
 import android.view.View;
 
 import androidx.appcompat.widget.AppCompatEditText;
+import androidx.preference.PreferenceManager;
 
 /** Created by arpitkh996 on 21-01-2016. */
 public class RenameBookmark extends DialogFragment {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -53,7 +53,6 @@
 import android.net.UrlQuerySanitizer;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.Editable;
 import android.text.TextUtils;
 import android.view.View;
@@ -63,6 +62,7 @@
 
 import androidx.appcompat.widget.AppCompatCheckBox;
 import androidx.appcompat.widget.AppCompatEditText;
+import androidx.preference.PreferenceManager;
 
 import jcifs.smb.SmbFile;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -37,13 +37,13 @@
 
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.View;
 import android.widget.ListView;
 
 import androidx.fragment.app.ListFragment;
 import androidx.loader.app.LoaderManager;
 import androidx.loader.content.Loader;
+import androidx.preference.PreferenceManager;
 
 public class AppsListFragment extends ListFragment
     implements LoaderManager.LoaderCallbacks<AppListLoader.AppsDataPair> {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CompressedExplorerFragment.java
Patch:
@@ -60,7 +60,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.preference.PreferenceManager;
 import android.view.ActionMode;
 import android.view.LayoutInflater;
 import android.view.Menu;
@@ -76,6 +75,7 @@
 import androidx.annotation.Nullable;
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
@@ -210,7 +210,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     year = ("" + Calendar.getInstance().get(Calendar.YEAR)).substring(2, 4);
 
     accentColor = mainActivity.getAccent();
-    iconskin = mainActivity.getCurrentColorPreference().iconSkin;
+    iconskin = mainActivity.getCurrentColorPreference().getIconSkin();
 
     // mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -98,7 +98,6 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.text.TextUtils;
 import android.text.format.Formatter;
 import android.util.Log;
@@ -123,6 +122,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentActivity;
 import androidx.fragment.app.FragmentManager;
+import androidx.preference.PreferenceManager;
 import androidx.recyclerview.widget.DefaultItemAnimator;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -226,8 +226,8 @@ public void onCreate(Bundle savedInstanceState) {
     IS_LIST = dataUtils.getListOrGridForPath(CURRENT_PATH, DataUtils.LIST) == DataUtils.LIST;
 
     accentColor = getMainActivity().getAccent();
-    primaryColor = getMainActivity().getCurrentColorPreference().primaryFirstTab;
-    primaryTwoColor = getMainActivity().getCurrentColorPreference().primarySecondTab;
+    primaryColor = getMainActivity().getCurrentColorPreference().getPrimaryFirstTab();
+    primaryTwoColor = getMainActivity().getCurrentColorPreference().getPrimarySecondTab();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/ProcessViewerFragment.java
Patch:
@@ -152,8 +152,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 
-    int skin_color = mainActivity.getCurrentColorPreference().primaryFirstTab;
-    int skinTwoColor = mainActivity.getCurrentColorPreference().primarySecondTab;
+    int skin_color = mainActivity.getCurrentColorPreference().getPrimaryFirstTab();
+    int skinTwoColor = mainActivity.getCurrentColorPreference().getPrimarySecondTab();
     accentColor = mainActivity.getAccent();
 
     mainActivity.updateViews(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -45,7 +45,6 @@
 import android.graphics.drawable.ColorDrawable;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -58,6 +57,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentStatePagerAdapter;
+import androidx.preference.PreferenceManager;
 import androidx.viewpager.widget.ViewPager;
 
 /** Created by Arpit on 15-12-2014. */
@@ -169,9 +169,9 @@ public View onCreateView(
     UserColorPreferences userColorPreferences = mainActivity.getCurrentColorPreference();
 
     // color of viewpager when current tab is 0
-    startColor = userColorPreferences.primaryFirstTab;
+    startColor = userColorPreferences.getPrimaryFirstTab();
     // color of viewpager when current tab is 1
-    endColor = userColorPreferences.primarySecondTab;
+    endColor = userColorPreferences.getPrimarySecondTab();
 
     // update the views as there is any change in {@link MainActivity#currentTab}
     // probably due to config change

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -32,10 +32,10 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
 import androidx.annotation.StringRes;
 import androidx.core.app.NotificationCompat;
+import androidx.preference.PreferenceManager;
 
 /**
  * Created by yashwanthreddyg on 19-06-2016.

File: app/src/main/java/com/amaze/filemanager/ui/provider/UtilitiesProvider.java
Patch:
@@ -26,7 +26,8 @@
 
 import android.content.Context;
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
+
+import androidx.preference.PreferenceManager;
 
 /** Created by piotaixr on 16/01/17. */
 public class UtilitiesProvider {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -417,7 +417,7 @@ public void refreshDrawer() {
 
     Boolean[] quickAccessPref =
         TinyDB.getBooleanArray(
-            mainActivity.getPrefs(), QuickAccessPref.KEY, QuickAccessPref.DEFAULT);
+            mainActivity.getPrefs(), QuickAccessPref.KEY, QuickAccessPref.Companion.getDEFAULT());
 
     if (mainActivity.getBoolean(PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES)) {
       if (quickAccessPref[0]) {

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -69,7 +69,6 @@
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Bundle;
-import android.preference.PreferenceManager;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.widget.EditText;
@@ -80,6 +79,7 @@
 import androidx.annotation.StringRes;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
+import androidx.preference.PreferenceManager;
 
 /** Created by root on 11/22/15, modified by Emmanuel Messulam<emmanuelbendavid@gmail.com> */
 public class MainActivityHelper {

File: app/src/test/java/com/amaze/filemanager/utils/TinyDBTest.java
Patch:
@@ -32,8 +32,8 @@
 import org.robolectric.annotation.Config;
 
 import android.content.SharedPreferences;
-import android.preference.PreferenceManager;
 
+import androidx.preference.PreferenceManager;
 import androidx.test.core.app.ApplicationProvider;
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -511,7 +511,7 @@ private void checkForExternalIntent(Intent intent) {
         }
 
       } else if (actionIntent.equals(Intent.ACTION_SEND)) {
-        if (type.equals("text/plain")) {
+        if ("text/plain".equals(type)) {
           initFabToSave(null);
         } else {
           // save a single file to filesystem

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -511,7 +511,7 @@ private void checkForExternalIntent(Intent intent) {
         }
 
       } else if (actionIntent.equals(Intent.ACTION_SEND)) {
-        if (type.equals("text/plain")) {
+        if ("text/plain".equals(type)) {
           initFabToSave(null);
         } else {
           // save a single file to filesystem

File: app/src/main/java/com/amaze/filemanager/filesystem/files/CryptUtil.java
Patch:
@@ -43,6 +43,7 @@
 import javax.crypto.spec.SecretKeySpec;
 import javax.security.auth.x500.X500Principal;
 
+import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
@@ -96,7 +97,8 @@ public class CryptUtil {
   private static final String PREFERENCE_KEY = "aes_key";
   // TODO: Generate a random IV every time, and keep track of it (in database against encrypted
   // files)
-  private static final String IV = "LxbHiJhhUXcj"; // 12 byte long IV supported by android for GCM
+  private static final String IV =
+      BuildConfig.CRYPTO_IV; // 12 byte long IV supported by android for GCM
 
   public static final String CRYPT_EXTENSION = ".aze";
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1139,7 +1139,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
           }
           return null;
         },
-        true);
+        false);
 
     return super.onOptionsItemSelected(item);
   }
@@ -2183,8 +2183,8 @@ private void executeWithMainFragment(
     if (mainFragment != null) {
       lambda.apply(mainFragment);
     } else {
+      Log.w(TAG, "MainFragment is null");
       if (showToastIfMainFragmentIsNull) {
-        Log.e(TAG, "MainFragment is null");
         AppConfig.toast(this, R.string.operation_unsuccesful);
       }
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -72,6 +72,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.documentfile.provider.DocumentFile;
 
 import io.reactivex.Maybe;
@@ -181,6 +182,7 @@ private static boolean copyFile(final File source, final File target, Context co
     return true;
   }
 
+  @Nullable
   public static OutputStream getOutputStream(final File target, Context context)
       throws FileNotFoundException {
     OutputStream outStream = null;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1857,7 +1857,7 @@ public void modify(String oldpath, String oldname, String newPath, String newnam
   @Override
   public void onPreExecute(String query) {
     final MainFragment mainFragment = getCurrentMainFragment();
-    Objects.requireNonNull(mainFragment);
+    if (mainFragment == null) return;
 
     mainFragment.mSwipeRefreshLayout.setRefreshing(true);
     mainFragment.onSearchPreExecute(query);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1162,6 +1162,7 @@ public Void execute(SFTPClient client) {
               } catch (IOException e) {
                 e.printStackTrace();
               }
+              // FIXME: anything better than throwing a null to make Rx happy?
               return null;
             }
           });

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1857,7 +1857,7 @@ public void modify(String oldpath, String oldname, String newPath, String newnam
   @Override
   public void onPreExecute(String query) {
     final MainFragment mainFragment = getCurrentMainFragment();
-    Objects.requireNonNull(mainFragment);
+    if (mainFragment == null) return;
 
     mainFragment.mSwipeRefreshLayout.setRefreshing(true);
     mainFragment.onSearchPreExecute(query);

File: app/src/main/java/com/amaze/filemanager/ui/views/CustomLinearSmoothScroller.java
Patch:
@@ -111,7 +111,8 @@ public class CustomLinearSmoothScroller extends RecyclerView.SmoothScroller {
 
   // Temporary variables to keep track of the interim scroll target. These values do not
   // point to a real item position, rather point to an estimated location pixels.
-  protected int mInterimTargetDx = 0, mInterimTargetDy = 0;
+  protected int mInterimTargetDx = 0;
+  protected int mInterimTargetDy = 0;
 
   public CustomLinearSmoothScroller(Context context, boolean isListView) {
     mDisplayMetrics = context.getResources().getDisplayMetrics();

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -128,7 +128,7 @@ public static boolean isDirectory(String toTest, int count) throws ShellNotRunni
       for (String currentLine : resultLines) {
         if (contains(currentLine.split(" "), name)) {
           try {
-            HybridFileParcelable parsedFile = FileUtils.parseName(currentLine);
+            HybridFileParcelable parsedFile = FileUtils.parseName(currentLine, true);
             if (parsedFile.getPermission().trim().startsWith("d")) return true;
             else if (parsedFile.getPermission().trim().startsWith("l")) {
               if (count > 5) return file.isDirectory();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -677,9 +677,9 @@ public void onDrawerClosed() {
         return;
       }
 
-      MainFragment mainFrag = mainActivity.getCurrentMainFragment();
-      if (mainFrag != null) {
-        mainFrag.loadlist(pendingPath, false, OpenMode.UNKNOWN);
+      MainFragment mainFragment = mainActivity.getCurrentMainFragment();
+      if (mainFragment != null) {
+        mainFragment.loadlist(pendingPath, false, OpenMode.UNKNOWN);
       } else {
         mainActivity.goToMain(pendingPath);
         return;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -116,7 +116,6 @@ public void removeConnection(@NonNull String url, @NonNull Runnable callback) {
    * @throws IOException IOExceptions that occur during connection setup
    */
   public SSHClient getConnection(@NonNull String url) {
-    url = SshClientUtils.extractBaseUriFrom(url);
 
     SSHClient client = connections.get(url);
     if (client == null) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1746,7 +1746,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
     }
     bundle.putBoolean("edit", edit);
     sftpConnectDialog.setArguments(bundle);
-    sftpConnectDialog.show(getFragmentManager(), "sftpdialog");
+    sftpConnectDialog.show(getSupportFragmentManager(), "sftpdialog");
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -137,7 +137,7 @@ public void onClick(View v) {
         Bundle args = new Bundle();
         args.putBoolean("edit", false);
         sftpConnectDialog.setArguments(args);
-        sftpConnectDialog.show(getActivity().getFragmentManager(), "tab");
+        sftpConnectDialog.show(getFragmentManager(), "tab");
         return;
       case R.id.linear_layout_box:
         ((MainActivity) getActivity()).addConnection(OpenMode.BOX);

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -140,7 +140,7 @@ protected Void doInBackground(Void... voids) {
                     (ComputerParcelable) ((Future) this.tasks.get(i)).get(1, TimeUnit.MILLISECONDS);
                 this.tasks.remove(i);
                 size--;
-                if (computer.name != null) {
+                if (computer.getName() != null) {
                   publishProgress(computer);
                 }
                 ipAddress = size;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -116,7 +116,6 @@ public void removeConnection(@NonNull String url, @NonNull Runnable callback) {
    * @throws IOException IOExceptions that occur during connection setup
    */
   public SSHClient getConnection(@NonNull String url) {
-    url = SshClientUtils.extractBaseUriFrom(url);
 
     SSHClient client = connections.get(url);
     if (client == null) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1746,7 +1746,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
     }
     bundle.putBoolean("edit", edit);
     sftpConnectDialog.setArguments(bundle);
-    sftpConnectDialog.show(getFragmentManager(), "sftpdialog");
+    sftpConnectDialog.show(getSupportFragmentManager(), "sftpdialog");
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -137,7 +137,7 @@ public void onClick(View v) {
         Bundle args = new Bundle();
         args.putBoolean("edit", false);
         sftpConnectDialog.setArguments(args);
-        sftpConnectDialog.show(getActivity().getFragmentManager(), "tab");
+        sftpConnectDialog.show(getFragmentManager(), "tab");
         return;
       case R.id.linear_layout_box:
         ((MainActivity) getActivity()).addConnection(OpenMode.BOX);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -116,7 +116,6 @@ public void removeConnection(@NonNull String url, @NonNull Runnable callback) {
    * @throws IOException IOExceptions that occur during connection setup
    */
   public SSHClient getConnection(@NonNull String url) {
-    url = SshClientUtils.extractBaseUriFrom(url);
 
     SSHClient client = connections.get(url);
     if (client == null) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1746,7 +1746,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
     }
     bundle.putBoolean("edit", edit);
     sftpConnectDialog.setArguments(bundle);
-    sftpConnectDialog.show(getFragmentManager(), "sftpdialog");
+    sftpConnectDialog.show(getSupportFragmentManager(), "sftpdialog");
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -137,7 +137,7 @@ public void onClick(View v) {
         Bundle args = new Bundle();
         args.putBoolean("edit", false);
         sftpConnectDialog.setArguments(args);
-        sftpConnectDialog.show(getActivity().getFragmentManager(), "tab");
+        sftpConnectDialog.show(getFragmentManager(), "tab");
         return;
       case R.id.linear_layout_box:
         ((MainActivity) getActivity()).addConnection(OpenMode.BOX);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1162,6 +1162,7 @@ public Void execute(SFTPClient client) {
               } catch (IOException e) {
                 e.printStackTrace();
               }
+              // FIXME: anything better than throwing a null to make Rx happy?
               return null;
             }
           });

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -119,7 +119,8 @@ public static SmbFile create(String path) throws MalformedURLException {
    *
    * @param path SMB path
    * @return {@link com.amaze.filemanager.filesystem.FolderStateKt#DOESNT_EXIST} if specified SMB
-   *     path doesn't exist on server, else -1
+   *     path doesn't exist on server, else {@link
+   *     com.amaze.filemanager.filesystem.FolderStateKt#WRITABLE_ON_REMOTE}
    */
   public static int checkFolder(@NonNull String path) {
     return Single.fromCallable(

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -177,7 +177,7 @@ public RecyclerAdapter(
    * @param imageView the check {@link CircleGradientDrawable} that is to be animated
    */
   public void toggleChecked(int position, ImageView imageView) {
-    if (itemsDigested.size() <= position) {
+    if (itemsDigested.size() <= position || position < 0) {
       AppConfig.toast(context, R.string.operation_not_supported);
       return;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.asynchronous.asynctasks;
 
 import static com.amaze.filemanager.filesystem.FolderStateKt.CAN_CREATE_FILES;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.COPY;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.MOVE;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -39,7 +41,6 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
-import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.ProgressDialog;
@@ -333,7 +334,7 @@ private void finishCopying(
         // see MainActivity.onActivityResult()
         mainActivity.oparrayListList = filesToCopyPerFolder;
         mainActivity.oparrayList = null;
-        mainActivity.operation = move ? DataUtils.MOVE : DataUtils.COPY;
+        mainActivity.operation = move ? MOVE : COPY;
         mainActivity.oppatheList = paths;
       } else {
         if (!move) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -225,7 +225,8 @@ protected void clearDataPackages() {
   }
 
   public void onDestroy() {
-    this.unregisterReceiver(receiver3);
+    super.onDestroy();
+    unregisterReceiver(receiver3);
   }
 
   private class DoInBackground extends AsyncTask<Bundle, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -212,6 +212,7 @@ protected void clearDataPackages() {
 
   @Override
   public void onDestroy() {
+    super.onDestroy();
     unregisterReceiver(receiver1);
   }
 

File: app/src/main/java/com/amaze/filemanager/database/daos/BookmarkEntryDao.java
Patch:
@@ -30,6 +30,7 @@
 
 import androidx.room.Dao;
 import androidx.room.Insert;
+import androidx.room.OnConflictStrategy;
 import androidx.room.Query;
 import androidx.room.Update;
 
@@ -47,7 +48,7 @@
 @Dao
 public interface BookmarkEntryDao {
 
-  @Insert
+  @Insert(onConflict = OnConflictStrategy.IGNORE)
   Completable insert(Bookmark instance);
 
   @Update

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
@@ -43,7 +44,7 @@ public abstract class OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_PATH)
   public String path;
 
-  public OperationData(String path) {
+  public OperationData(@NonNull String path) {
     this.path = path;
   }
 

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
@@ -39,7 +40,7 @@ public abstract class OperationDataWithName extends OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_NAME)
   public String name;
 
-  public OperationDataWithName(String name, String path) {
+  public OperationDataWithName(@NonNull String name, @NonNull String path) {
     super(path);
     this.name = name;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -348,6 +348,7 @@ public SmbFile getSmbFile(int timeout) {
       smbFile.setConnectTimeout(timeout);
       return smbFile;
     } catch (MalformedURLException e) {
+      e.printStackTrace();
       return null;
     }
   }
@@ -356,6 +357,7 @@ public SmbFile getSmbFile() {
     try {
       return SmbUtil.create(path);
     } catch (MalformedURLException e) {
+      e.printStackTrace();
       return null;
     }
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/MediaStoreHack.java
Patch:
@@ -148,7 +148,7 @@ public static Uri getUriFromFile(final String path, Context context) {
       Uri uri =
           MediaStore.Files.getContentUri("external")
               .buildUpon()
-              .appendPath(Integer.toString(imageId))
+              .appendEncodedPath(Integer.toString(imageId))
               .build();
       filecursor.close();
       return uri;

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/database/daos/BookmarkEntryDao.java
Patch:
@@ -30,6 +30,7 @@
 
 import androidx.room.Dao;
 import androidx.room.Insert;
+import androidx.room.OnConflictStrategy;
 import androidx.room.Query;
 import androidx.room.Update;
 
@@ -47,7 +48,7 @@
 @Dao
 public interface BookmarkEntryDao {
 
-  @Insert
+  @Insert(onConflict = OnConflictStrategy.IGNORE)
   Completable insert(Bookmark instance);
 
   @Update

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
@@ -43,7 +44,7 @@ public abstract class OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_PATH)
   public String path;
 
-  public OperationData(String path) {
+  public OperationData(@NonNull String path) {
     this.path = path;
   }
 

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
@@ -39,7 +40,7 @@ public abstract class OperationDataWithName extends OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_NAME)
   public String name;
 
-  public OperationDataWithName(String name, String path) {
+  public OperationDataWithName(@NonNull String name, @NonNull String path) {
     super(path);
     this.name = name;
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.asynchronous.asynctasks;
 
 import static com.amaze.filemanager.filesystem.FolderStateKt.CAN_CREATE_FILES;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.COPY;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.MOVE;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -39,7 +41,6 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
-import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.ProgressDialog;
@@ -329,7 +330,7 @@ private void finishCopying(
         // see MainActivity.onActivityResult()
         mainActivity.oparrayListList = filesToCopyPerFolder;
         mainActivity.oparrayList = null;
-        mainActivity.operation = move ? DataUtils.MOVE : DataUtils.COPY;
+        mainActivity.operation = move ? MOVE : COPY;
         mainActivity.oppatheList = paths;
       } else {
         if (!move) {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -348,6 +348,7 @@ public SmbFile getSmbFile(int timeout) {
       smbFile.setConnectTimeout(timeout);
       return smbFile;
     } catch (MalformedURLException e) {
+      e.printStackTrace();
       return null;
     }
   }
@@ -356,6 +357,7 @@ public SmbFile getSmbFile() {
     try {
       return SmbUtil.create(path);
     } catch (MalformedURLException e) {
+      e.printStackTrace();
       return null;
     }
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/MediaStoreHack.java
Patch:
@@ -148,7 +148,7 @@ public static Uri getUriFromFile(final String path, Context context) {
       Uri uri =
           MediaStore.Files.getContentUri("external")
               .buildUpon()
-              .appendPath(Integer.toString(imageId))
+              .appendEncodedPath(Integer.toString(imageId))
               .build();
       filecursor.close();
       return uri;

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -134,7 +134,7 @@ public void onRestoreInstanceState(Parcelable state) {
    * the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
    */
   public boolean isNavigationViewSavedStateMissing() {
-    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
+    return Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP;
   }
 
   static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.asynchronous.asynctasks;
 
 import static com.amaze.filemanager.filesystem.FolderStateKt.CAN_CREATE_FILES;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.COPY;
+import static com.amaze.filemanager.filesystem.OperationTypeKt.MOVE;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -39,7 +41,6 @@
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
-import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.ProgressDialog;
@@ -329,7 +330,7 @@ private void finishCopying(
         // see MainActivity.onActivityResult()
         mainActivity.oparrayListList = filesToCopyPerFolder;
         mainActivity.oparrayList = null;
-        mainActivity.operation = move ? DataUtils.MOVE : DataUtils.COPY;
+        mainActivity.operation = move ? MOVE : COPY;
         mainActivity.oppatheList = paths;
       } else {
         if (!move) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -225,7 +225,8 @@ protected void clearDataPackages() {
   }
 
   public void onDestroy() {
-    this.unregisterReceiver(receiver3);
+    super.onDestroy();
+    unregisterReceiver(receiver3);
   }
 
   private class DoInBackground extends AsyncTask<Bundle, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -212,6 +212,7 @@ protected void clearDataPackages() {
 
   @Override
   public void onDestroy() {
+    super.onDestroy();
     unregisterReceiver(receiver1);
   }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -632,7 +632,7 @@ public static String[] getPathsInPath(String path) {
     }
     Collections.reverse(paths);
 
-    return paths.toArray(new String[paths.size()]);
+    return paths.toArray(new String[0]);
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -97,8 +97,8 @@ public LoadFilesListTask(
   protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void... p) {
     HybridFile hFile = null;
 
-    if (openmode == OpenMode.UNKNOWN) {
-      hFile = new HybridFile(OpenMode.UNKNOWN, path);
+    if (OpenMode.UNKNOWN.equals(openmode) || OpenMode.CUSTOM.equals(openmode)) {
+      hFile = new HybridFile(openmode, path);
       hFile.generateMode(nullCheckOrInterrupt(mainFragment, this).getActivity());
       openmode = hFile.getMode();
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/GzipHelperTask.java
Patch:
@@ -87,7 +87,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
           elements.add(
               new CompressedObjectParcelable(
                   entry.getName(),
-                  entry.getLastModifiedDate().getTime(),
+                  entry.getModTime().getTime(),
                   entry.getSize(),
                   entry.isDirectory()));
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/ZipHelperTask.java
Patch:
@@ -39,7 +39,7 @@
 
 import androidx.annotation.NonNull;
 
-import net.lingala.zip4j.core.ZipFile;
+import net.lingala.zip4j.ZipFile;
 import net.lingala.zip4j.exception.ZipException;
 import net.lingala.zip4j.model.FileHeader;
 
@@ -76,7 +76,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
       ZipFile zipfile = new ZipFile(fileLocation.getPath());
       for (Iterator<FileHeader> headers = zipfile.getFileHeaders().iterator();
           headers.hasNext(); ) {
-        FileHeader entry = (FileHeader) headers.next();
+        FileHeader entry = headers.next();
         if (!CompressedHelper.isEntryPathValid(entry.getFileName())) {
           AppConfig.toast(
               context.get(), context.get().getString(R.string.multiple_invalid_archive_entries));
@@ -85,7 +85,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
         wholelist.add(
             new CompressedObjectParcelable(
                 entry.getFileName(),
-                entry.getLastModFileTime(),
+                entry.getLastModifiedTimeEpoch(),
                 entry.getUncompressedSize(),
                 entry.isDirectory()));
       }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -147,7 +147,9 @@ public void generateMode(Context context) {
           mode = OpenMode.ROOT;
         }
 
-        if (mode == OpenMode.UNKNOWN) {
+        // In some cases, non-numeric path is passed into HybridFile while mode is still
+        // CUSTOM here. We are forcing OpenMode.FILE in such case too. See #2225
+        if (OpenMode.UNKNOWN.equals(mode) || OpenMode.CUSTOM.equals(mode)) {
           mode = OpenMode.FILE;
         }
       }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -42,7 +42,7 @@
  *
  * @see Map
  * @see com.amaze.filemanager.filesystem.compressed.sevenz.SevenZFile
- * @see net.lingala.zip4j.core.ZipFile
+ * @see net.lingala.zip4j.ZipFile
  * @see <a href="https://github.com/TeamAmaze/AmazeFileManager/pull/1391">DataUtils, which uses Bill
  *     Pugh's Singleton Implementation too</a>
  */

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/Bzip2Extractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -123,6 +123,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/LzmaExtractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/SevenZipExtractor.java
Patch:
@@ -122,6 +122,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getLastModifiedDate().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -121,6 +121,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/XzExtractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -21,6 +21,7 @@
 package com.amaze.filemanager.ui.activities;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.filesystem.FolderStateKt.WRITABLE_OR_ON_SDCARD;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_BOOKMARKS_ADDED;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
@@ -530,7 +531,7 @@ private void saveExternalIntent(final ArrayList<Uri> uris) {
       if (SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
         File folder = new File(getCurrentMainFragment().getCurrentPath());
         int result = mainActivityHelper.checkFolder(folder, MainActivity.this);
-        if (result == MainActivityHelper.WRITABLE_OR_ON_SDCARD) {
+        if (result == WRITABLE_OR_ON_SDCARD) {
           FileUtil.writeUriToStorage(
               MainActivity.this,
               uris,

File: app/src/main/java/com/amaze/filemanager/database/daos/BookmarkEntryDao.java
Patch:
@@ -30,6 +30,7 @@
 
 import androidx.room.Dao;
 import androidx.room.Insert;
+import androidx.room.OnConflictStrategy;
 import androidx.room.Query;
 import androidx.room.Update;
 
@@ -47,7 +48,7 @@
 @Dao
 public interface BookmarkEntryDao {
 
-  @Insert
+  @Insert(onConflict = OnConflictStrategy.IGNORE)
   Completable insert(Bookmark instance);
 
   @Update

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationData.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 import androidx.room.PrimaryKey;
@@ -43,7 +44,7 @@ public abstract class OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_PATH)
   public String path;
 
-  public OperationData(String path) {
+  public OperationData(@NonNull String path) {
     this.path = path;
   }
 

File: app/src/main/java/com/amaze/filemanager/database/models/utilities/OperationDataWithName.java
Patch:
@@ -22,6 +22,7 @@
 
 import com.amaze.filemanager.database.UtilitiesDatabase;
 
+import androidx.annotation.NonNull;
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
 
@@ -39,7 +40,7 @@ public abstract class OperationDataWithName extends OperationData {
   @ColumnInfo(name = UtilitiesDatabase.COLUMN_NAME)
   public String name;
 
-  public OperationDataWithName(String name, String path) {
+  public OperationDataWithName(@NonNull String name, @NonNull String path) {
     super(path);
     this.name = name;
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -225,7 +225,8 @@ protected void clearDataPackages() {
   }
 
   public void onDestroy() {
-    this.unregisterReceiver(receiver3);
+    super.onDestroy();
+    unregisterReceiver(receiver3);
   }
 
   private class DoInBackground extends AsyncTask<Bundle, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -212,6 +212,7 @@ protected void clearDataPackages() {
 
   @Override
   public void onDestroy() {
+    super.onDestroy();
     unregisterReceiver(receiver1);
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -958,6 +958,8 @@ public void loadlist(final String path, final boolean back, final OpenMode openM
                 boolean isPathLayoutGrid =
                     dataUtils.getListOrGridForPath(path, DataUtils.LIST) == DataUtils.GRID;
                 setListElements(data.second, back, path, data.first, false, isPathLayoutGrid);
+              } else {
+                AppConfig.toast(requireContext(), getString(R.string.unknown_error));
               }
             });
     loadFilesListTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1091,6 +1091,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
       }
 
       getMainActivity().updatePaths(no);
+      getMainActivity().getFAB().show();
+      getMainActivity().getAppbar().getAppbarLayout().setExpanded(true);
       listView.stopScroll();
       fastScroller.setRecyclerView(
           listView, IS_LIST ? 1 : (columns == 0 || columns == -1) ? 3 : columns);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1037,8 +1037,6 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
         nofilesview.setVisibility(View.VISIBLE);
         listView.setVisibility(View.GONE);
         mSwipeRefreshLayout.setEnabled(false);
-        getMainActivity().getFAB().show();
-        getMainActivity().getAppbar().getAppbarLayout().setExpanded(true);
       } else {
         mSwipeRefreshLayout.setEnabled(true);
         nofilesview.setVisibility(View.GONE);
@@ -1093,6 +1091,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
       }
 
       getMainActivity().updatePaths(no);
+      getMainActivity().getFAB().show();
+      getMainActivity().getAppbar().getAppbarLayout().setExpanded(true);
       listView.stopScroll();
       fastScroller.setRecyclerView(
           listView, IS_LIST ? 1 : (columns == 0 || columns == -1) ? 3 : columns);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -97,8 +97,8 @@ public LoadFilesListTask(
   protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void... p) {
     HybridFile hFile = null;
 
-    if (openmode == OpenMode.UNKNOWN) {
-      hFile = new HybridFile(OpenMode.UNKNOWN, path);
+    if (OpenMode.UNKNOWN.equals(openmode) || OpenMode.CUSTOM.equals(openmode)) {
+      hFile = new HybridFile(openmode, path);
       hFile.generateMode(nullCheckOrInterrupt(mainFragment, this).getActivity());
       openmode = hFile.getMode();
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -147,7 +147,9 @@ public void generateMode(Context context) {
           mode = OpenMode.ROOT;
         }
 
-        if (mode == OpenMode.UNKNOWN) {
+        // In some cases, non-numeric path is passed into HybridFile while mode is still
+        // CUSTOM here. We are forcing OpenMode.FILE in such case too. See #2225
+        if (OpenMode.UNKNOWN.equals(mode) || OpenMode.CUSTOM.equals(mode)) {
           mode = OpenMode.FILE;
         }
       }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -97,8 +97,8 @@ public LoadFilesListTask(
   protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void... p) {
     HybridFile hFile = null;
 
-    if (openmode == OpenMode.UNKNOWN) {
-      hFile = new HybridFile(OpenMode.UNKNOWN, path);
+    if (OpenMode.UNKNOWN.equals(openmode) || OpenMode.CUSTOM.equals(openmode)) {
+      hFile = new HybridFile(openmode, path);
       hFile.generateMode(nullCheckOrInterrupt(mainFragment, this).getActivity());
       openmode = hFile.getMode();
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -147,7 +147,9 @@ public void generateMode(Context context) {
           mode = OpenMode.ROOT;
         }
 
-        if (mode == OpenMode.UNKNOWN) {
+        // In some cases, non-numeric path is passed into HybridFile while mode is still
+        // CUSTOM here. We are forcing OpenMode.FILE in such case too. See #2225
+        if (OpenMode.UNKNOWN.equals(mode) || OpenMode.CUSTOM.equals(mode)) {
           mode = OpenMode.FILE;
         }
       }

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -25,7 +25,7 @@
 import org.junit.Before;
 import org.junit.Test;
 
-import com.amaze.filemanager.utils.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 
 import android.os.Parcel;
 

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager;
 
 import com.amaze.filemanager.adapters.glide.apkimage.ApkImageModelLoaderFactory;
-import com.amaze.filemanager.filesystem.glide.CloudIconModelFactory;
+import com.amaze.filemanager.adapters.glide.cloudicon.CloudIconModelFactory;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Registry;
 import com.bumptech.glide.annotation.GlideModule;

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -34,6 +34,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.asynchronous.services.CopyService;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.filesystem.files.FileUtils;
@@ -43,7 +44,6 @@
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.AnimUtils;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -27,6 +27,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -37,7 +38,6 @@
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;
 import com.amaze.filemanager.utils.AnimUtils;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.Activity;

File: app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -27,13 +27,13 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.holders.HiddenViewHolder;
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.app.Activity;
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -23,9 +23,9 @@
 import java.io.File;
 import java.util.Calendar;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/cloudicon/CloudIconDataFetcher.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.glide;
+package com.amaze.filemanager.adapters.glide.cloudicon;
 
 import java.io.IOException;
 import java.io.InputStream;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/cloudicon/CloudIconModelFactory.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.glide;
+package com.amaze.filemanager.adapters.glide.cloudicon;
 
 import com.bumptech.glide.load.model.ModelLoader;
 import com.bumptech.glide.load.model.ModelLoaderFactory;

File: app/src/main/java/com/amaze/filemanager/adapters/glide/cloudicon/CloudIconModelLoader.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.glide;
+package com.amaze.filemanager.adapters.glide.cloudicon;
 
 import com.amaze.filemanager.database.CloudHandler;
 import com.bumptech.glide.load.Options;

File: app/src/main/java/com/amaze/filemanager/application/GlideApplication.java
Patch:
@@ -23,8 +23,10 @@
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.MemoryCategory;
 
+import androidx.multidex.MultiDexApplication;
+
 /** @author Emmanuel on 22/11/2017, at 17:18. */
-public class GlideApplication extends LeakCanaryApplication {
+public class GlideApplication extends MultiDexApplication {
   @Override
   public void onCreate() {
     super.onCreate();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/CloudLoaderAsyncTask.java
Patch:
@@ -27,9 +27,9 @@
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
 import com.amaze.filemanager.exceptions.CloudPluginException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.CloudRail;
 import com.cloudrail.si.exceptions.AuthenticationException;
 import com.cloudrail.si.exceptions.ParseException;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -33,6 +33,7 @@
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
@@ -46,7 +47,6 @@
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.amaze.filemanager.utils.OnFileFound;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -32,6 +32,7 @@
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.Operations;
@@ -42,7 +43,6 @@
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -31,14 +31,14 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.asynchronous.services.CopyService;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.MainActivityHelper;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.app.ProgressDialog;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -25,10 +25,10 @@
 import java.lang.ref.WeakReference;
 import java.util.regex.Pattern;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.SearchWorkerFragment;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.app.Activity;
 import android.os.AsyncTask;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/GzipHelperTask.java
Patch:
@@ -87,7 +87,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
           elements.add(
               new CompressedObjectParcelable(
                   entry.getName(),
-                  entry.getLastModifiedDate().getTime(),
+                  entry.getModTime().getTime(),
                   entry.getSize(),
                   entry.isDirectory()));
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/ZipHelperTask.java
Patch:
@@ -39,7 +39,7 @@
 
 import androidx.annotation.NonNull;
 
-import net.lingala.zip4j.core.ZipFile;
+import net.lingala.zip4j.ZipFile;
 import net.lingala.zip4j.exception.ZipException;
 import net.lingala.zip4j.model.FileHeader;
 
@@ -76,7 +76,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
       ZipFile zipfile = new ZipFile(fileLocation.getPath());
       for (Iterator<FileHeader> headers = zipfile.getFileHeaders().iterator();
           headers.hasNext(); ) {
-        FileHeader entry = (FileHeader) headers.next();
+        FileHeader entry = headers.next();
         if (!CompressedHelper.isEntryPathValid(entry.getFileName())) {
           AppConfig.toast(
               context.get(), context.get().getString(R.string.multiple_invalid_archive_entries));
@@ -85,7 +85,7 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements)
         wholelist.add(
             new CompressedObjectParcelable(
                 entry.getFileName(),
-                entry.getLastModFileTime(),
+                entry.getLastModifiedTimeEpoch(),
                 entry.getUncompressedSize(),
                 entry.isDirectory()));
       }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -30,6 +30,7 @@
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -43,7 +44,6 @@
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DatapointParcelable;
 import com.amaze.filemanager.utils.ObtainableServiceBinder;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 
 import android.app.NotificationManager;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -25,6 +25,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -34,7 +35,6 @@
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DatapointParcelable;
 import com.amaze.filemanager.utils.ObtainableServiceBinder;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 
 import android.app.NotificationManager;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -25,6 +25,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -33,7 +34,6 @@
 import com.amaze.filemanager.ui.notifications.NotificationConstants;
 import com.amaze.filemanager.utils.DatapointParcelable;
 import com.amaze.filemanager.utils.ObtainableServiceBinder;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 
 import android.app.NotificationManager;

File: app/src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -24,8 +24,8 @@
 
 import com.amaze.filemanager.database.models.explorer.CloudEntry;
 import com.amaze.filemanager.exceptions.CloudPluginException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.fragments.CloudSheetFragment;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.content.Context;
 import android.util.Log;

File: app/src/main/java/com/amaze/filemanager/database/models/explorer/CloudEntry.java
Patch:
@@ -24,7 +24,7 @@
 import com.amaze.filemanager.database.models.StringWrapper;
 import com.amaze.filemanager.database.typeconverters.EncryptedStringTypeConverter;
 import com.amaze.filemanager.database.typeconverters.OpenModeTypeConverter;
-import com.amaze.filemanager.utils.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 
 import androidx.room.ColumnInfo;
 import androidx.room.Entity;
@@ -70,12 +70,12 @@ public StringWrapper getPersistData() {
     return this.persistData;
   }
 
-  /** Set the service type Support values from {@link com.amaze.filemanager.utils.OpenMode} */
+  /** Set the service type Support values from {@link OpenMode} */
   public void setServiceType(OpenMode openMode) {
     this.serviceType = openMode;
   }
 
-  /** Returns ordinal value of service from {@link com.amaze.filemanager.utils.OpenMode} */
+  /** Returns ordinal value of service from {@link OpenMode} */
   public OpenMode getServiceType() {
     return this.serviceType;
   }

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/OpenModeTypeConverter.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.database.typeconverters;
 
-import com.amaze.filemanager.utils.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 
 import androidx.room.TypeConverter;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -44,6 +44,7 @@
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
 import com.amaze.filemanager.filesystem.root.RenameFileCommand;
@@ -53,7 +54,6 @@
 import com.amaze.filemanager.utils.AppConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -39,6 +39,7 @@
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.DeleteFileCommand;
@@ -51,7 +52,6 @@
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.SmbUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.SpaceAllocation;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import com.amaze.filemanager.utils.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -34,6 +34,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.MakeDirectoryCommand;
@@ -43,7 +44,6 @@
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -25,9 +25,9 @@
 import java.util.List;
 
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.filesystem.root.ListFilesCommand;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import androidx.documentfile.provider.DocumentFile;

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -32,6 +32,7 @@
 import com.amaze.filemanager.adapters.data.IconDataParcelable;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamer;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -42,7 +43,6 @@
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.CloudMetaData;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/ArchivePasswordCache.java
Patch:
@@ -42,7 +42,7 @@
  *
  * @see Map
  * @see com.amaze.filemanager.filesystem.compressed.sevenz.SevenZFile
- * @see net.lingala.zip4j.core.ZipFile
+ * @see net.lingala.zip4j.ZipFile
  * @see <a href="https://github.com/TeamAmaze/AmazeFileManager/pull/1391">DataUtils, which uses Bill
  *     Pugh's Singleton Implementation too</a>
  */

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/Bzip2Extractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -123,6 +123,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/LzmaExtractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/SevenZipExtractor.java
Patch:
@@ -122,6 +122,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getLastModifiedDate().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -121,6 +121,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/XzExtractor.java
Patch:
@@ -111,6 +111,7 @@ private void extractEntry(
       }
     } finally {
       outputStream.close();
+      outputFile.setLastModified(entry.getModTime().getTime());
     }
   }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/files/CryptUtil.java
Patch:
@@ -44,11 +44,11 @@
 import javax.security.auth.x500.X500Principal;
 
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PrefFrag;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 
 import android.content.Context;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/EncryptDecryptUtils.java
Patch:
@@ -29,13 +29,13 @@
 import com.amaze.filemanager.asynchronous.services.EncryptService;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.content.Context;
 import android.content.Intent;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -34,6 +34,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -55,7 +56,6 @@
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnProgressUpdate;
-import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.CloudMetaData;
 import com.googlecode.concurrenttrees.radix.ConcurrentRadixTree;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/GenericCopyUtil.java
Patch:
@@ -38,14 +38,14 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.MediaStoreHack;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 import com.cloudrail.si.interfaces.CloudStorage;
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/TextEditorActivity.java
Patch:
@@ -35,14 +35,14 @@
 import com.amaze.filemanager.asynchronous.asynctasks.ReadFileTask;
 import com.amaze.filemanager.asynchronous.asynctasks.SearchTextTask;
 import com.amaze.filemanager.asynchronous.asynctasks.WriteFileAbstraction;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.MapEntry;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.google.android.material.snackbar.Snackbar;
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -50,6 +50,7 @@
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.models.explorer.Sort;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -69,7 +70,6 @@
 import com.amaze.filemanager.ui.views.WarnableTextInputValidator;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.FingerprintHandler;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.SimpleTextWatcher;
 import com.amaze.filemanager.utils.Utils;
 import com.github.mikephil.charting.charts.PieChart;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.filesystem.ssh.SshConnectionPool;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -49,7 +50,6 @@
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.SimpleTextWatcher;
 import com.google.android.material.snackbar.Snackbar;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CloudSheetFragment.java
Patch:
@@ -22,11 +22,11 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudContract;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.SftpConnectDialog;
 import com.amaze.filemanager.ui.dialogs.SmbSearchDialog;
 import com.amaze.filemanager.ui.theme.AppTheme;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.google.android.material.bottomsheet.BottomSheetDialogFragment;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CompressedExplorerFragment.java
Patch:
@@ -33,6 +33,7 @@
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
 import com.amaze.filemanager.asynchronous.services.ExtractService;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -46,7 +47,6 @@
 import com.amaze.filemanager.ui.views.DividerItemDecoration;
 import com.amaze.filemanager.ui.views.FastScroller;
 import com.amaze.filemanager.utils.BottomBarButtonPath;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.google.android.material.appbar.AppBarLayout;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -46,6 +46,7 @@
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.SortHandler;
 import com.amaze.filemanager.database.models.explorer.Tab;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.file_operations.filesystem.smbstreamer.Streamer;
 import com.amaze.filemanager.filesystem.CustomFileObserver;
 import com.amaze.filemanager.filesystem.FileUtil;
@@ -72,7 +73,6 @@
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.google.android.material.appbar.AppBarLayout;
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/SearchWorkerFragment.java
Patch:
@@ -21,8 +21,8 @@
 package com.amaze.filemanager.ui.fragments;
 
 import com.amaze.filemanager.asynchronous.asynctasks.SearchAsyncTask;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.content.Context;
 import android.os.Bundle;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -26,14 +26,14 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.TabHandler;
 import com.amaze.filemanager.database.models.explorer.Tab;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.ui.ColorCircleDrawable;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.views.DisablableViewPager;
 import com.amaze.filemanager.ui.views.Indicator;
 import com.amaze.filemanager.utils.MainActivityHelper;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.ArrayList;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -34,7 +35,6 @@
 import com.amaze.filemanager.ui.fragments.TabFragment;
 import com.amaze.filemanager.utils.BottomBarButtonPath;
 import com.amaze.filemanager.utils.MainActivityHelper;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 
 import android.animation.Animator;

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -35,11 +35,12 @@
 import com.amaze.filemanager.adapters.data.StorageDirectoryParcelable;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.database.CloudHandler;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
-import com.amaze.filemanager.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.activities.PreferencesActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
@@ -54,7 +55,6 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
-import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ScreenUtils;
 import com.amaze.filemanager.utils.TinyDB;
 import com.amaze.filemanager.utils.Utils;

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -31,6 +31,7 @@
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -27,10 +27,11 @@
 import java.util.HashMap;
 import java.util.List;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
+import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
+import com.amaze.filemanager.file_operations.filesystem.usb.UsbOtgRepresentation;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
-import com.amaze.filemanager.filesystem.usb.SingletonUsbOtg;
-import com.amaze.filemanager.filesystem.usb.UsbOtgRepresentation;
 
 import android.content.Context;
 import android.hardware.usb.UsbConstants;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFilesTest.java
Patch:
@@ -39,10 +39,10 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.ssh.AbstractSftpServerTest;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.os.Environment;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -34,8 +34,8 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.os.Environment;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -34,8 +34,8 @@
 import org.robolectric.shadows.ShadowDateFormat;
 
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.utils.OpenMode;
 
 import androidx.test.core.app.ApplicationProvider;
 import androidx.test.ext.junit.runners.AndroidJUnit4;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/ListFilesOnSshdTest.java
Patch:
@@ -36,8 +36,8 @@
 
 import org.junit.Test;
 
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFile;
-import com.amaze.filemanager.utils.OpenMode;
 
 import android.os.Environment;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -32,6 +32,7 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
+import com.amaze.filemanager.file_operations.filesystem.usb.SingletonUsbOtg;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -46,6 +46,7 @@
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.file_operations.filesystem.OpenMode;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 
 import android.net.Uri;

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/OpenMode.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.utils;
+package com.amaze.filemanager.file_operations.filesystem;
 
 /**
  * Created by vishal on 10/11/16.

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/usb/SingletonUsbOtg.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.usb;
+package com.amaze.filemanager.file_operations.filesystem.usb;
 
 import android.net.Uri;
 

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/usb/UsbOtgRepresentation.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.usb;
+package com.amaze.filemanager.file_operations.filesystem.usb;
 
 import androidx.annotation.Nullable;
 

File: file_operations/src/test/java/com/amaze/filemanager/file_operations/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.cloud;
+package com.amaze.filemanager.file_operations.filesystem.cloud;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
@@ -42,7 +42,7 @@
 import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.file_operations.filesystem.cloud.CloudStreamSource;
-import com.amaze.filemanager.shadows.ShadowMultiDex;
+import com.amaze.filemanager.file_operations.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 

File: file_operations/src/test/java/com/amaze/filemanager/file_operations/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -18,7 +18,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.smbstreamer;
+package com.amaze.filemanager.file_operations.filesystem.smbstreamer;
 
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
@@ -40,8 +40,8 @@
 import org.robolectric.shadow.api.Shadow;
 
 import com.amaze.filemanager.file_operations.filesystem.smbstreamer.StreamSource;
-import com.amaze.filemanager.shadows.ShadowMultiDex;
-import com.amaze.filemanager.shadows.jcifs.smb.ShadowSmbFile;
+import com.amaze.filemanager.file_operations.shadows.ShadowMultiDex;
+import com.amaze.filemanager.file_operations.shadows.jcifs.smb.ShadowSmbFile;
 
 import android.os.Environment;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -166,7 +166,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     new DoInBackground(isRootExplorer).execute(b);
 
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -146,7 +146,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new DecryptService.BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   class BackgroundTask extends AsyncTask<Void, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -142,7 +142,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -152,7 +152,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     super.progressHalted();
     new DoWork(this, progressHandler, file, extractPath, entries).execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -151,7 +151,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     asyncTask = new CompressAsyncTask(this, baseFiles, mZipPath);
     asyncTask.execute();
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -148,7 +148,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
     startForeground(NotificationConstants.FTP_ID, notification);
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.BufferedInputStream;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;
@@ -335,7 +335,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        name = path.substring(path.lastIndexOf('/'));
+        name = path.substring(path.lastIndexOf('/') + 1);
     }
     return name;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -51,6 +51,7 @@
  * {@link SSHClient} can ask for connection here with <code>getConnection(url)</code>.
  */
 public class SshConnectionPool {
+
   public static final int SSH_DEFAULT_PORT = 22;
 
   public static final String SSH_URI_PREFIX = "ssh://";

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.URL;
 import java.net.URLDecoder;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.utils.SmbUtil.PARAM_DISABLE_IPC_SIGNING_CHECK;
 import static com.amaze.filemanager.utils.Utils.makeRequired;
 
@@ -34,7 +34,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
@@ -376,7 +376,7 @@ private SmbFile createSMBPath(String[] auth, boolean anonymous, boolean disableI
       SmbFile smbFile =
           new SmbFile(
               sb.toString(),
-              CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSignCheck));
+              CifsContexts.createWithDisableIpcSigningCheck(sb.toString(), disableIpcSignCheck));
       return smbFile;
     } catch (MalformedURLException e) {
       e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.R.string.feedback;
 import static com.amaze.filemanager.ui.activities.PreferencesActivity.START_PREFERENCE;
-import static com.amaze.filemanager.utils.Utils.EMAIL_VISHAL;
+import static com.amaze.filemanager.utils.Utils.EMAIL_SUPPORT;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;
@@ -231,7 +231,7 @@ public boolean onPreferenceClick(Preference preference) {
         builder.build().show();
         return true;
       case PreferencesConstants.FRAGMENT_FEEDBACK:
-        Intent emailIntent = Utils.buildEmailIntent(null);
+        Intent emailIntent = Utils.buildEmailIntent(null, EMAIL_SUPPORT);
 
         PackageManager packageManager = getActivity().getPackageManager();
         List activities =
@@ -243,7 +243,7 @@ public boolean onPreferenceClick(Preference preference) {
         else
           Toast.makeText(
                   getActivity(),
-                  getResources().getString(R.string.send_email_to) + " " + EMAIL_VISHAL,
+                  getResources().getString(R.string.send_email_to) + " " + EMAIL_SUPPORT,
                   Toast.LENGTH_LONG)
               .show();
         return false;

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -25,7 +25,7 @@
 import java.security.GeneralSecurityException;
 
 import com.amaze.filemanager.filesystem.files.CryptUtil;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 
 import android.content.Context;
 import android.net.Uri;
@@ -93,7 +93,7 @@ public static SmbFile create(String path) throws MalformedURLException {
         Boolean.parseBoolean(uri.getQueryParameter(PARAM_DISABLE_IPC_SIGNING_CHECK));
     return new SmbFile(
         path.indexOf('?') < 0 ? path : path.substring(0, path.indexOf('?')),
-        CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSigningCheck)
+        CifsContexts.createWithDisableIpcSigningCheck(path, disableIpcSigningCheck)
             .withCredentials(
                 new NtlmPasswordAuthentication(SingletonContext.getInstance(), uri.getUserInfo())));
   }

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.UnknownHostException;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -130,6 +130,7 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
           return null;
         } catch (SmbException | NullPointerException e) {
           e.printStackTrace();
+          nullCheckOrInterrupt(mainFragment, this).reauthenticateSmb();
           return null;
         }
         break;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -166,7 +166,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     new DoInBackground(isRootExplorer).execute(b);
 
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -146,7 +146,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new DecryptService.BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   class BackgroundTask extends AsyncTask<Void, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -142,7 +142,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -151,7 +151,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     super.progressHalted();
     new DoWork(this, progressHandler, file, extractPath, entries).execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -151,7 +151,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     asyncTask = new CompressAsyncTask(this, baseFiles, mZipPath);
     asyncTask.execute();
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -147,7 +147,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
     startForeground(NotificationConstants.FTP_ID, notification);
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.BufferedInputStream;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;
@@ -335,7 +335,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        name = path.substring(path.lastIndexOf('/'));
+        name = path.substring(path.lastIndexOf('/') + 1);
     }
     return name;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -51,6 +51,7 @@
  * {@link SSHClient} can ask for connection here with <code>getConnection(url)</code>.
  */
 public class SshConnectionPool {
+
   public static final int SSH_DEFAULT_PORT = 22;
 
   public static final String SSH_URI_PREFIX = "ssh://";

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.URL;
 import java.net.URLDecoder;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.utils.SmbUtil.PARAM_DISABLE_IPC_SIGNING_CHECK;
 
 import java.io.IOException;
@@ -33,7 +33,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
@@ -353,7 +353,7 @@ private SmbFile createSMBPath(String[] auth, boolean anonymous, boolean disableI
       SmbFile smbFile =
           new SmbFile(
               sb.toString(),
-              CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSignCheck));
+              CifsContexts.createWithDisableIpcSigningCheck(sb.toString(), disableIpcSignCheck));
       return smbFile;
     } catch (MalformedURLException e) {
       e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -22,7 +22,7 @@
 
 import static com.amaze.filemanager.R.string.feedback;
 import static com.amaze.filemanager.ui.activities.PreferencesActivity.START_PREFERENCE;
-import static com.amaze.filemanager.utils.Utils.EMAIL_VISHAL;
+import static com.amaze.filemanager.utils.Utils.EMAIL_SUPPORT;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;
@@ -231,7 +231,7 @@ public boolean onPreferenceClick(Preference preference) {
         builder.build().show();
         return true;
       case PreferencesConstants.FRAGMENT_FEEDBACK:
-        Intent emailIntent = Utils.buildEmailIntent(null);
+        Intent emailIntent = Utils.buildEmailIntent(null, EMAIL_SUPPORT);
 
         PackageManager packageManager = getActivity().getPackageManager();
         List activities =
@@ -243,7 +243,7 @@ public boolean onPreferenceClick(Preference preference) {
         else
           Toast.makeText(
                   getActivity(),
-                  getResources().getString(R.string.send_email_to) + " " + EMAIL_VISHAL,
+                  getResources().getString(R.string.send_email_to) + " " + EMAIL_SUPPORT,
                   Toast.LENGTH_LONG)
               .show();
         return false;

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -25,7 +25,7 @@
 import java.security.GeneralSecurityException;
 
 import com.amaze.filemanager.filesystem.files.CryptUtil;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 
 import android.content.Context;
 import android.net.Uri;
@@ -93,7 +93,7 @@ public static SmbFile create(String path) throws MalformedURLException {
         Boolean.parseBoolean(uri.getQueryParameter(PARAM_DISABLE_IPC_SIGNING_CHECK));
     return new SmbFile(
         path.indexOf('?') < 0 ? path : path.substring(0, path.indexOf('?')),
-        CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSigningCheck)
+        CifsContexts.createWithDisableIpcSigningCheck(path, disableIpcSigningCheck)
             .withCredentials(
                 new NtlmPasswordAuthentication(SingletonContext.getInstance(), uri.getUserInfo())));
   }

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.UnknownHostException;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -130,6 +130,7 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
           return null;
         } catch (SmbException | NullPointerException e) {
           e.printStackTrace();
+          nullCheckOrInterrupt(mainFragment, this).reauthenticateSmb();
           return null;
         }
         break;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -38,6 +38,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.RecyclerAdapter;
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
+import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
 import com.amaze.filemanager.asynchronous.asynctasks.LoadFilesListTask;
 import com.amaze.filemanager.asynchronous.handlers.FileHandler;
@@ -948,11 +949,11 @@ public void loadlist(final String path, final boolean back, final OpenMode openM
             getBoolean(PREFERENCE_SHOW_THUMB),
             getBoolean(PREFERENCE_SHOW_HIDDENFILES),
             (data) -> {
+              mSwipeRefreshLayout.setRefreshing(false);
               if (data != null && data.second != null) {
                 boolean isPathLayoutGrid =
                     dataUtils.getListOrGridForPath(path, DataUtils.LIST) == DataUtils.GRID;
                 setListElements(data.second, back, path, data.first, false, isPathLayoutGrid);
-                mSwipeRefreshLayout.setRefreshing(false);
               }
             });
     loadFilesListTask.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);
@@ -1320,6 +1321,7 @@ public void reauthenticateSmb() {
             .runOnUiThread(
                 () -> {
                   int i;
+                  AppConfig.toast(requireContext(), getString(R.string.unknown_error));
                   if ((i = dataUtils.containsServer(smbPath)) != -1) {
                     getMainActivity()
                         .showSMBDialog(dataUtils.getServers().get(i)[0], smbPath, true);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -335,7 +335,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        name = path.substring(path.lastIndexOf('/'));
+        name = path.substring(path.lastIndexOf('/') + 1);
     }
     return name;
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -338,7 +338,7 @@ public int getSpanSize(int position) {
             switch (adapter.getItemViewType(position)) {
               case RecyclerAdapter.TYPE_HEADER_FILES:
               case RecyclerAdapter.TYPE_HEADER_FOLDERS:
-                return columns;
+                return (columns == 0 || columns == -1) ? 3 : columns;
               default:
                 return 1;
             }
@@ -1090,7 +1090,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
 
       getMainActivity().updatePaths(no);
       listView.stopScroll();
-      fastScroller.setRecyclerView(listView, IS_LIST ? 1 : columns);
+      fastScroller.setRecyclerView(
+          listView, IS_LIST ? 1 : (columns == 0 || columns == -1) ? 3 : columns);
       mToolbarContainer.addOnOffsetChangedListener(
           (appBarLayout, verticalOffset) -> {
             fastScroller.updateHandlePosition(verticalOffset, 112);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -337,7 +337,7 @@ public int getSpanSize(int position) {
             switch (adapter.getItemViewType(position)) {
               case RecyclerAdapter.TYPE_HEADER_FILES:
               case RecyclerAdapter.TYPE_HEADER_FOLDERS:
-                return columns;
+                return (columns == 0 || columns == -1) ? 3 : columns;
               default:
                 return 1;
             }
@@ -1087,7 +1087,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
 
       getMainActivity().updatePaths(no);
       listView.stopScroll();
-      fastScroller.setRecyclerView(listView, IS_LIST ? 1 : columns);
+      fastScroller.setRecyclerView(
+          listView, IS_LIST ? 1 : (columns == 0 || columns == -1) ? 3 : columns);
       mToolbarContainer.addOnOffsetChangedListener(
           (appBarLayout, verticalOffset) -> {
             fastScroller.updateHandlePosition(verticalOffset, 112);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -335,7 +335,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        name = path.substring(path.lastIndexOf('/'));
+        name = path.substring(path.lastIndexOf('/') + 1);
     }
     return name;
   }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -335,7 +335,7 @@ public String getName(Context context) {
       case OTG:
         return OTGUtil.getDocumentFile(path, context, false).getName();
       default:
-        name = path.substring(path.lastIndexOf('/'));
+        name = path.substring(path.lastIndexOf('/') + 1);
     }
     return name;
   }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -72,8 +72,8 @@ public class SmbConnectDialog extends DialogFragment {
 
   private static final String TAG = "SmbConnectDialog";
 
-  private static void makeRequired (TextInputLayout field) {
-      field.setHint(TextUtils.concat("* ", field.getHint()));
+  private static void makeRequired(TextInputLayout field) {
+    field.setHint(TextUtils.concat("* ", field.getHint()));
   }
 
   public interface SmbConnectionListener {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -166,7 +166,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     new DoInBackground(isRootExplorer).execute(b);
 
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -146,7 +146,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new DecryptService.BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   class BackgroundTask extends AsyncTask<Void, Void, Void> {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -142,7 +142,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     super.progressHalted();
     new BackgroundTask().execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -151,7 +151,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     super.progressHalted();
     new DoWork(this, progressHandler, file, extractPath, entries).execute();
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -151,7 +151,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
     asyncTask = new CompressAsyncTask(this, baseFiles, mZipPath);
     asyncTask.execute();
     // If we get killed, after returning from here, restart
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -147,7 +147,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
     startForeground(NotificationConstants.FTP_ID, notification);
 
-    return START_STICKY;
+    return START_NOT_STICKY;
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.BufferedInputStream;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -51,6 +51,7 @@
  * {@link SSHClient} can ask for connection here with <code>getConnection(url)</code>.
  */
 public class SshConnectionPool {
+
   public static final int SSH_DEFAULT_PORT = 22;
 
   public static final String SSH_URI_PREFIX = "ssh://";

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.URL;
 import java.net.URLDecoder;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.utils.SmbUtil.PARAM_DISABLE_IPC_SIGNING_CHECK;
 
 import java.io.IOException;
@@ -33,7 +33,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
@@ -353,7 +353,7 @@ private SmbFile createSMBPath(String[] auth, boolean anonymous, boolean disableI
       SmbFile smbFile =
           new SmbFile(
               sb.toString(),
-              CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSignCheck));
+              CifsContexts.createWithDisableIpcSigningCheck(sb.toString(), disableIpcSignCheck));
       return smbFile;
     } catch (MalformedURLException e) {
       e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -25,7 +25,7 @@
 import java.security.GeneralSecurityException;
 
 import com.amaze.filemanager.filesystem.files.CryptUtil;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 
 import android.content.Context;
 import android.net.Uri;
@@ -93,7 +93,7 @@ public static SmbFile create(String path) throws MalformedURLException {
         Boolean.parseBoolean(uri.getQueryParameter(PARAM_DISABLE_IPC_SIGNING_CHECK));
     return new SmbFile(
         path.indexOf('?') < 0 ? path : path.substring(0, path.indexOf('?')),
-        CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSigningCheck)
+        CifsContexts.createWithDisableIpcSigningCheck(path, disableIpcSigningCheck)
             .withCredentials(
                 new NtlmPasswordAuthentication(SingletonContext.getInstance(), uri.getUserInfo())));
   }

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.UnknownHostException;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -231,7 +231,7 @@ public boolean onPreferenceClick(Preference preference) {
         builder.build().show();
         return true;
       case PreferencesConstants.FRAGMENT_FEEDBACK:
-        Intent emailIntent = Utils.buildEmailIntent(null, Utils.EMAIL_SUPPORT);
+        Intent emailIntent = Utils.buildEmailIntent(null, EMAIL_SUPPORT);
 
         PackageManager packageManager = getActivity().getPackageManager();
         List activities =

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.BufferedInputStream;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -51,6 +51,7 @@
  * {@link SSHClient} can ask for connection here with <code>getConnection(url)</code>.
  */
 public class SshConnectionPool {
+
   public static final int SSH_DEFAULT_PORT = 22;
 
   public static final String SSH_URI_PREFIX = "ssh://";

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.URL;
 import java.net.URLDecoder;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.dialogs;
 
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 import static com.amaze.filemanager.utils.SmbUtil.PARAM_DISABLE_IPC_SIGNING_CHECK;
 
 import java.io.IOException;
@@ -33,7 +33,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.provider.UtilitiesProvider;
@@ -353,7 +353,7 @@ private SmbFile createSMBPath(String[] auth, boolean anonymous, boolean disableI
       SmbFile smbFile =
           new SmbFile(
               sb.toString(),
-              CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSignCheck));
+              CifsContexts.createWithDisableIpcSigningCheck(sb.toString(), disableIpcSignCheck));
       return smbFile;
     } catch (MalformedURLException e) {
       e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/utils/SmbUtil.java
Patch:
@@ -25,7 +25,7 @@
 import java.security.GeneralSecurityException;
 
 import com.amaze.filemanager.filesystem.files.CryptUtil;
-import com.amaze.filemanager.filesystem.smb.CifsContextFactory;
+import com.amaze.filemanager.filesystem.smb.CifsContexts;
 
 import android.content.Context;
 import android.net.Uri;
@@ -93,7 +93,7 @@ public static SmbFile create(String path) throws MalformedURLException {
         Boolean.parseBoolean(uri.getQueryParameter(PARAM_DISABLE_IPC_SIGNING_CHECK));
     return new SmbFile(
         path.indexOf('?') < 0 ? path : path.substring(0, path.indexOf('?')),
-        CifsContextFactory.createWithDisableIpcSigningCheck(disableIpcSigningCheck)
+        CifsContexts.createWithDisableIpcSigningCheck(path, disableIpcSigningCheck)
             .withCredentials(
                 new NtlmPasswordAuthentication(SingletonContext.getInstance(), uri.getUserInfo())));
   }

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,7 +21,7 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
-import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+import static com.amaze.filemanager.filesystem.smb.CifsContexts.SMB_URI_PREFIX;
 
 import java.net.UnknownHostException;
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -337,7 +337,7 @@ public int getSpanSize(int position) {
             switch (adapter.getItemViewType(position)) {
               case RecyclerAdapter.TYPE_HEADER_FILES:
               case RecyclerAdapter.TYPE_HEADER_FOLDERS:
-                return columns;
+                return (columns == 0 || columns == -1) ? 3 : columns;
               default:
                 return 1;
             }
@@ -1087,7 +1087,8 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
 
       getMainActivity().updatePaths(no);
       listView.stopScroll();
-      fastScroller.setRecyclerView(listView, IS_LIST ? 1 : columns);
+      fastScroller.setRecyclerView(
+          listView, IS_LIST ? 1 : (columns == 0 || columns == -1) ? 3 : columns);
       mToolbarContainer.addOnOffsetChangedListener(
           (appBarLayout, verticalOffset) -> {
             fastScroller.updateHandlePosition(verticalOffset, 112);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -313,8 +313,7 @@ public void afterTextChanged(Editable s) {
             String useraw = user.getText().toString();
             String useru = useraw.replaceAll(" ", "\\ ");
             String passp = pass.getText().toString();
-            smbFile =
-                createSMBPath(new String[] {ipa, useru, passp, domaind, sShare}, false, false);
+            smbFile = createSMBPath(new String[] {ipa, useru, passp, domaind, sShare}, false, false);
           }
 
           if (smbFile == null) return;

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CompressedExplorerFragment.java
Patch:
@@ -48,7 +48,6 @@
 import com.amaze.filemanager.utils.BottomBarButtonPath;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
-import com.github.junrar.Archive;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.ComponentName;
@@ -105,7 +104,6 @@ public class CompressedExplorerFragment extends Fragment implements BottomBarBut
   public CompressedExplorerAdapter compressedExplorerAdapter;
   public ActionMode mActionMode;
   public boolean coloriseIcons, showSize, showLastModified, gobackitem;
-  public Archive archive;
   public ArrayList<CompressedObjectParcelable> elements = new ArrayList<>();
   public MainActivity mainActivity;
   public RecyclerView listView;

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -221,8 +221,7 @@ public void onClick(View v) {
       case R.id.relative_layout_licenses:
         LibsBuilder libsBuilder =
             new LibsBuilder()
-                .withLibraries(
-                    "commonscompress", "apachemina", "volley") // Not autodetected for some reason
+                .withLibraries("apachemina") // Not auto-detected for some reason
                 .withActivityTitle(getString(R.string.libraries))
                 .withAboutIconShown(true)
                 .withAboutVersionShownName(true)

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -221,8 +221,7 @@ public void onClick(View v) {
       case R.id.relative_layout_licenses:
         LibsBuilder libsBuilder =
             new LibsBuilder()
-                .withLibraries(
-                    "commonscompress", "apachemina", "volley") // Not autodetected for some reason
+                .withLibraries("apachemina") // Not auto-detected for some reason
                 .withActivityTitle(getString(R.string.libraries))
                 .withAboutIconShown(true)
                 .withAboutVersionShownName(true)

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -221,8 +221,7 @@ public void onClick(View v) {
       case R.id.relative_layout_licenses:
         LibsBuilder libsBuilder =
             new LibsBuilder()
-                .withLibraries(
-                    "commonscompress", "apachemina", "volley") // Not autodetected for some reason
+                .withLibraries("apachemina") // Not auto-detected for some reason
                 .withActivityTitle(getString(R.string.libraries))
                 .withAboutIconShown(true)
                 .withAboutVersionShownName(true)

File: file_operations/src/main/java/com/amaze/filemanager/file_operations/filesystem/StorageNaming.java
Patch:
@@ -28,14 +28,14 @@
 
 public final class StorageNaming {
 
-  @IntDef({STORAGE_INTERNAL, STORAGE_SD_CARD, ROOT, NOT_KNOWN})
-  public @interface DeviceDescription {}
-
   public static final int STORAGE_INTERNAL = 0;
   public static final int STORAGE_SD_CARD = 1;
   public static final int ROOT = 2;
   public static final int NOT_KNOWN = 3;
 
+  @IntDef({STORAGE_INTERNAL, STORAGE_SD_CARD, ROOT, NOT_KNOWN})
+  public @interface DeviceDescription {}
+
   /** Retrofit of {@link android.os.storage.StorageVolume#getDescription(Context)} to older apis */
   public static @DeviceDescription int getDeviceDescriptionLegacy(File file) {
     String path = file.getPath();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/CompressedExplorerFragment.java
Patch:
@@ -48,7 +48,6 @@
 import com.amaze.filemanager.utils.BottomBarButtonPath;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
-import com.github.junrar.Archive;
 import com.google.android.material.appbar.AppBarLayout;
 
 import android.content.ComponentName;
@@ -105,7 +104,6 @@ public class CompressedExplorerFragment extends Fragment implements BottomBarBut
   public CompressedExplorerAdapter compressedExplorerAdapter;
   public ActionMode mActionMode;
   public boolean coloriseIcons, showSize, showLastModified, gobackitem;
-  public Archive archive;
   public ArrayList<CompressedObjectParcelable> elements = new ArrayList<>();
   public MainActivity mainActivity;
   public RecyclerView listView;

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -75,6 +75,9 @@ public AppsDataPair loadInBackground() {
     mApps = new AppsDataPair(new ArrayList<>(apps.size()), new ArrayList<>(apps.size()));
 
     for (ApplicationInfo object : apps) {
+      if (object.sourceDir == null) {
+        continue;
+      }
       File sourceDir = new File(object.sourceDir);
 
       String label = object.loadLabel(packageManager).toString();

File: app/src/main/java/com/amaze/filemanager/crashreport/ErrorActivity.java
Patch:
@@ -260,7 +260,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
       case R.id.menu_item_share_error:
         final Intent intent = new Intent();
         intent.setAction(Intent.ACTION_SEND);
-        intent.putExtra(Intent.EXTRA_TEXT, buildJson());
+        intent.putExtra(Intent.EXTRA_TEXT, buildMarkdown());
         intent.setType("text/plain");
         startActivity(Intent.createChooser(intent, getString(R.string.share)));
         break;
@@ -271,7 +271,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
   }
 
   private void sendReportEmail() {
-    final Intent i = Utils.buildEmailIntent(buildJson());
+    final Intent i = Utils.buildEmailIntent(buildMarkdown());
     if (i.resolveActivity(getPackageManager()) != null) {
       startActivity(i);
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -99,8 +99,8 @@ public HybridFile(OpenMode mode, String path) {
   public HybridFile(OpenMode mode, String path, String name, boolean isDirectory) {
     this(mode, path);
     if (path.startsWith(SMB_URI_PREFIX) || isSmb()) {
-      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendPath(name);
-      if (isDirectory) pathBuilder.appendPath("/");
+      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendEncodedPath(name);
+      if (isDirectory) pathBuilder.appendEncodedPath("/");
       this.path = pathBuilder.build().toString();
     } else if (path.startsWith(SSH_URI_PREFIX) || isSftp()) {
       this.path += "/" + name;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -387,7 +387,7 @@ protected Void doInBackground(Void... params) {
         // check whether file names for new file are valid or recursion occurs.
         // If rename is on OTG, we are skipping
         if (!(oldFile.mode.equals(newFile.mode) && oldFile.mode.equals(OpenMode.OTG))
-            && !Operations.isFileNameValid(newFile.getSimpleName())) {
+            && !Operations.isFileNameValid(newFile.getName(context))) {
           errorCallBack.invalidName(newFile);
           return null;
         }
@@ -513,7 +513,7 @@ public <Void> Void execute(@NonNull SFTPClient client) {
             errorCallBack.exists(newFile);
             return null;
           }
-          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getSimpleName()));
+          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getName(context)));
           return null;
         } else {
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -26,6 +26,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_DIVIDERS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_FILE_SIZE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_GOBACK_BUTTON;
@@ -84,6 +85,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_COLORED_NAVIGATION:
       case PREFERENCE_TEXTEDITOR_NEWSTACK:
       case PREFERENCE_CHANGEPATHS:
+      case PREFERENCE_ROOT_LEGACY_LISTING:
         defaultValue = false;
         break;
       case PREFERENCE_SHOW_FILE_SIZE:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -42,6 +42,7 @@ public class PreferencesConstants {
   public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
   public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
   public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
+  public static final String PREFERENCE_ROOT_LEGACY_LISTING = "legacyListing";
 
   public static final String PREFERENCE_CLEAR_OPEN_FILE = "clear_open_file";
   public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -146,7 +146,7 @@ public void mkdir(final OpenMode openMode, final String path, final MainFragment
                   openMode,
                   Uri.parse(path)
                       .buildUpon()
-                      .appendPath(textfield.getText().toString())
+                      .appendEncodedPath(textfield.getText().toString())
                       .build()
                       .toString()),
               ma);
@@ -184,7 +184,7 @@ public void mkfile(final OpenMode openMode, final String path, final MainFragmen
                   openMode,
                   Uri.parse(path)
                       .buildUpon()
-                      .appendPath(textfield.getText().toString())
+                      .appendEncodedPath(textfield.getText().toString())
                       .build()
                       .toString()),
               ma);

File: app/src/main/java/com/amaze/filemanager/crashreport/ErrorActivity.java
Patch:
@@ -260,7 +260,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
       case R.id.menu_item_share_error:
         final Intent intent = new Intent();
         intent.setAction(Intent.ACTION_SEND);
-        intent.putExtra(Intent.EXTRA_TEXT, buildJson());
+        intent.putExtra(Intent.EXTRA_TEXT, buildMarkdown());
         intent.setType("text/plain");
         startActivity(Intent.createChooser(intent, getString(R.string.share)));
         break;
@@ -271,7 +271,7 @@ public boolean onOptionsItemSelected(final MenuItem item) {
   }
 
   private void sendReportEmail() {
-    final Intent i = Utils.buildEmailIntent(buildJson());
+    final Intent i = Utils.buildEmailIntent(buildMarkdown());
     if (i.resolveActivity(getPackageManager()) != null) {
       startActivity(i);
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -99,8 +99,8 @@ public HybridFile(OpenMode mode, String path) {
   public HybridFile(OpenMode mode, String path, String name, boolean isDirectory) {
     this(mode, path);
     if (path.startsWith(SMB_URI_PREFIX) || isSmb()) {
-      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendPath(name);
-      if (isDirectory) pathBuilder.appendPath("/");
+      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendEncodedPath(name);
+      if (isDirectory) pathBuilder.appendEncodedPath("/");
       this.path = pathBuilder.build().toString();
     } else if (path.startsWith(SSH_URI_PREFIX) || isSftp()) {
       this.path += "/" + name;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -387,7 +387,7 @@ protected Void doInBackground(Void... params) {
         // check whether file names for new file are valid or recursion occurs.
         // If rename is on OTG, we are skipping
         if (!(oldFile.mode.equals(newFile.mode) && oldFile.mode.equals(OpenMode.OTG))
-            && !Operations.isFileNameValid(newFile.getSimpleName())) {
+            && !Operations.isFileNameValid(newFile.getName(context))) {
           errorCallBack.invalidName(newFile);
           return null;
         }
@@ -513,7 +513,7 @@ public <Void> Void execute(@NonNull SFTPClient client) {
             errorCallBack.exists(newFile);
             return null;
           }
-          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getSimpleName()));
+          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getName(context)));
           return null;
         } else {
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -146,7 +146,7 @@ public void mkdir(final OpenMode openMode, final String path, final MainFragment
                   openMode,
                   Uri.parse(path)
                       .buildUpon()
-                      .appendPath(textfield.getText().toString())
+                      .appendEncodedPath(textfield.getText().toString())
                       .build()
                       .toString()),
               ma);
@@ -184,7 +184,7 @@ public void mkfile(final OpenMode openMode, final String path, final MainFragmen
                   openMode,
                   Uri.parse(path)
                       .buildUpon()
-                      .appendPath(textfield.getText().toString())
+                      .appendEncodedPath(textfield.getText().toString())
                       .build()
                       .toString()),
               ma);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -99,8 +99,8 @@ public HybridFile(OpenMode mode, String path) {
   public HybridFile(OpenMode mode, String path, String name, boolean isDirectory) {
     this(mode, path);
     if (path.startsWith(SMB_URI_PREFIX) || isSmb()) {
-      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendPath(name);
-      if (isDirectory) pathBuilder.appendPath("/");
+      Uri.Builder pathBuilder = Uri.parse(this.path).buildUpon().appendEncodedPath(name);
+      if (isDirectory) pathBuilder.appendEncodedPath("/");
       this.path = pathBuilder.build().toString();
     } else if (path.startsWith(SSH_URI_PREFIX) || isSftp()) {
       this.path += "/" + name;

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/PreferenceActivity.java
Patch:
@@ -26,6 +26,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORIZE_ICONS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_NEED_TO_SET_HOME;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
+import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOT_LEGACY_LISTING;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_DIVIDERS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_FILE_SIZE;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_GOBACK_BUTTON;
@@ -84,6 +85,7 @@ public boolean getBoolean(String key) {
       case PREFERENCE_COLORED_NAVIGATION:
       case PREFERENCE_TEXTEDITOR_NEWSTACK:
       case PREFERENCE_CHANGEPATHS:
+      case PREFERENCE_ROOT_LEGACY_LISTING:
         defaultValue = false;
         break;
       case PREFERENCE_SHOW_FILE_SIZE:

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -42,6 +42,7 @@ public class PreferencesConstants {
   public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
   public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
   public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
+  public static final String PREFERENCE_ROOT_LEGACY_LISTING = "legacyListing";
 
   public static final String PREFERENCE_CLEAR_OPEN_FILE = "clear_open_file";
   public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -186,7 +186,8 @@ public void mkfile(final OpenMode openMode, final String path, final MainFragmen
                       .buildUpon()
                       .appendPath(textfield.getText().toString())
                       .build()
-                      .toString()),
+                      .toString()
+                      .replace("%20", " ")),
               ma);
           dialog.dismiss();
         },

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -387,7 +387,7 @@ protected Void doInBackground(Void... params) {
         // check whether file names for new file are valid or recursion occurs.
         // If rename is on OTG, we are skipping
         if (!(oldFile.mode.equals(newFile.mode) && oldFile.mode.equals(OpenMode.OTG))
-            && !Operations.isFileNameValid(newFile.getSimpleName())) {
+            && !Operations.isFileNameValid(newFile.getName(context))) {
           errorCallBack.invalidName(newFile);
           return null;
         }
@@ -513,7 +513,7 @@ public <Void> Void execute(@NonNull SFTPClient client) {
             errorCallBack.exists(newFile);
             return null;
           }
-          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getSimpleName()));
+          errorCallBack.done(newFile, oldDocumentFile.renameTo(newFile.getName(context)));
           return null;
         } else {
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1187,7 +1187,7 @@ public void rename(final HybridFileParcelable f) {
                   .rename(
                       openMode,
                       f.getPath(),
-                      Uri.parse(CURRENT_PATH).buildUpon().appendPath(name1).build().toString(),
+                          CURRENT_PATH + "/" + name1,
                       getActivity(),
                       getMainActivity().isRootExplorer());
             },

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -75,6 +75,9 @@ public AppsDataPair loadInBackground() {
     mApps = new AppsDataPair(new ArrayList<>(apps.size()), new ArrayList<>(apps.size()));
 
     for (ApplicationInfo object : apps) {
+      if (object.sourceDir == null) {
+        continue;
+      }
       File sourceDir = new File(object.sourceDir);
 
       String label = object.loadLabel(packageManager).toString();

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -75,6 +75,9 @@ public AppsDataPair loadInBackground() {
     mApps = new AppsDataPair(new ArrayList<>(apps.size()), new ArrayList<>(apps.size()));
 
     for (ApplicationInfo object : apps) {
+      if (object.sourceDir == null) {
+        continue;
+      }
       File sourceDir = new File(object.sourceDir);
 
       String label = object.loadLabel(packageManager).toString();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -130,7 +130,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
                 PreferenceManager.getDefaultSharedPreferences(activity.get())
                     .getBoolean(PREFERENCE_SHOW_HIDDENFILES, false);
 
-            if (!isCancelled() && (showHiddenFiles || !(!showHiddenFiles && file.isHidden()))) {
+            if ((!isCancelled() && (showHiddenFiles || !file.isHidden()))) {
               if (filter.searchFilter(file.getName(activity.get()))) {
                 publishProgress(file);
               }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -1,7 +1,6 @@
 /*
  * Copyright (C) 2014-2020 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>,
- * Emmanuel Messulam<emmanuelbendavid@gmail.com>, Raymond Lai <airwave209gt at gmail.com>,
- * Vishnu Sanal. T<t.v.s10123@gmail.com> and Contributors.
+ * Emmanuel Messulam<emmanuelbendavid@gmail.com>, Raymond Lai <airwave209gt at gmail.com> and Contributors.
  *
  * This file is part of Amaze File Manager.
  *
@@ -124,7 +123,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
           activity.get(),
           rootMode,
           file -> {
-            if (!isCancelled() && !(file.getName().startsWith("."))) {
+            if (!isCancelled() && !file.isHidden()) {
               if (filter.searchFilter(file.getName(activity.get()))) {
                 publishProgress(file);
               }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -1,6 +1,7 @@
 /*
  * Copyright (C) 2014-2020 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>,
- * Emmanuel Messulam<emmanuelbendavid@gmail.com>, Raymond Lai <airwave209gt at gmail.com> and Contributors.
+ * Emmanuel Messulam<emmanuelbendavid@gmail.com>, Raymond Lai <airwave209gt at gmail.com>,
+ * Vishnu Sanal. T<t.v.s10123@gmail.com> and Contributors.
  *
  * This file is part of Amaze File Manager.
  *
@@ -123,7 +124,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
           activity.get(),
           rootMode,
           file -> {
-            if (!isCancelled()) {
+            if (!isCancelled() && !(file.getName().startsWith("."))) {
               if (filter.searchFilter(file.getName(activity.get()))) {
                 publishProgress(file);
               }

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -122,6 +122,7 @@ public void saveToDatabase(OperationData operationData) {
             .smbEntryDao()
             .insert(new SmbEntry(operationData.name, operationData.path))
             .subscribeOn(Schedulers.io())
+            .doOnError(Throwable::printStackTrace)
             .subscribe();
         break;
       case SFTP:
@@ -135,6 +136,7 @@ public void saveToDatabase(OperationData operationData) {
                     operationData.sshKeyName,
                     operationData.sshKey))
             .subscribeOn(Schedulers.io())
+            .doOnError(Throwable::printStackTrace)
             .subscribe();
         break;
       default:

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -47,6 +47,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.annotation.Config;
 
+import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestUtils;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowCryptUtil;
@@ -118,6 +119,8 @@ public boolean equals(@Nullable Object obj) {
   @After
   public void tearDown() {
     SshConnectionPool.getInstance().shutdown();
+    AppConfig.getInstance().getExplorerDatabase().close();
+    AppConfig.getInstance().getUtilitiesDatabase().close();
   }
 
   @Test

File: app/src/main/java/com/amaze/filemanager/adapters/holders/AppHolder.java
Patch:
@@ -39,6 +39,7 @@ public class AppHolder extends RecyclerView.ViewHolder {
   public final RelativeLayout rl;
   public final TextView txtDesc;
   public final ImageButton about;
+  public final RelativeLayout summary;
 
   public AppHolder(View view) {
     super(view);
@@ -48,6 +49,7 @@ public AppHolder(View view) {
     rl = view.findViewById(R.id.second);
     txtDesc = view.findViewById(R.id.date);
     about = view.findViewById(R.id.properties);
+    summary = view.findViewById(R.id.summary);
 
     apkIcon.setVisibility(View.VISIBLE);
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ReadFileTask.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.os.AsyncTask;
@@ -145,7 +145,7 @@ private InputStream loadFile(File file) {
       try {
         cachedFile = new File(externalCacheDir, file.getName());
         // creating a cache file
-        RootUtils.copy(file.getAbsolutePath(), cachedFile.getPath());
+        CopyFilesCommand.INSTANCE.copyFiles(file.getAbsolutePath(), cachedFile.getPath());
 
         inputStream = new FileInputStream(cachedFile);
       } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.ConcatenateFileCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -132,7 +132,7 @@ protected Integer doInBackground(Void... voids) {
 
       if (cachedFile != null && cachedFile.exists() && destFile != null) {
         // cat cache content to original file and delete cache file
-        RootUtils.cat(cachedFile.getPath(), destFile.getPath());
+        ConcatenateFileCommand.INSTANCE.concatenateFile(cachedFile.getPath(), destFile.getPath());
         cachedFile.delete();
       }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -95,7 +95,8 @@ public AppsDataPair loadInBackground() {
               object.flags + "_" + (info != null ? info.versionName : ""),
               Formatter.formatFileSize(getContext(), sourceDir.length()),
               sourceDir.length(),
-              sourceDir.lastModified());
+              sourceDir.lastModified(),
+              null);
 
       mApps.first.add(elem);
 

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -58,7 +58,6 @@
 
 import androidx.documentfile.provider.DocumentFile;
 
-import jcifs.smb.SmbFile;
 import net.schmizz.sshj.sftp.RemoteFile;
 import net.schmizz.sshj.sftp.SFTPClient;
 
@@ -320,7 +319,7 @@ public void close() throws IOException {
         break;
       case SMB:
         try {
-          inputStream = new SmbFile(hybridFile.getPath()).getInputStream();
+          inputStream = hybridFile.getSmbFile().getInputStream();
         } catch (IOException e) {
           inputStream = null;
           e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -164,7 +164,7 @@ public boolean onMenuItemClick(MenuItem item) {
       case R.id.open_with:
         boolean useNewStack =
             sharedPrefs.getBoolean(PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK, false);
-        FileUtils.openWith(new File(rowItem.desc), mainFragment.getActivity(), useNewStack);
+        FileUtils.openWith(new File(rowItem.desc), mainActivity, useNewStack);
         return true;
       case R.id.encrypt:
         final Intent encryptIntent = new Intent(context, EncryptService.class);

File: app/src/main/java/com/amaze/filemanager/ui/activities/PreferencesActivity.java
Patch:
@@ -87,16 +87,13 @@ public class PreferencesActivity extends ThemedActivity
   public void onCreate(Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.prefsfrag);
-
     Toolbar toolbar = findViewById(R.id.toolbar);
     invalidateRecentsColorAndIcon();
     setSupportActionBar(toolbar);
     getSupportActionBar()
         .setDisplayOptions(
             androidx.appcompat.app.ActionBar.DISPLAY_HOME_AS_UP
                 | androidx.appcompat.app.ActionBar.DISPLAY_SHOW_TITLE);
-    invalidateToolbarColor();
-    invalidateNavBar();
 
     if (savedInstanceState != null) {
       selectedItem = savedInstanceState.getInt(KEY_CURRENT_FRAG_OPEN, 0);
@@ -105,6 +102,7 @@ public void onCreate(Bundle savedInstanceState) {
     } else {
       selectItem(0);
     }
+    initStatusBarResources(findViewById(R.id.preferences));
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -43,6 +43,7 @@ public class PreferencesConstants {
   public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
   public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
 
+  public static final String PREFERENCE_CLEAR_OPEN_FILE = "clear_open_file";
   public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
   public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
   public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -346,10 +346,8 @@ public void updatePath(
 
     switch (openmode) {
       case SFTP:
-        newPath = HybridFile.parseSftpPath(news);
-        break;
       case SMB:
-        newPath = HybridFile.parseSmbPath(news);
+        newPath = HybridFile.parseAndFormatUriForDisplay(news);
         break;
       case OTG:
         newPath = mainActivityHelper.parseOTGPath(news);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -106,8 +106,6 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     STORAGES_GROUP, SERVERS_GROUP, CLOUDS_GROUP, FOLDERS_GROUP, QUICKACCESSES_GROUP, LASTGROUP
   };
 
-  private static final String URL_TELEGRAM = "https://t.me/AmazeFileManager";
-
   private MainActivity mainActivity;
   private Resources resources;
   private DataUtils dataUtils;
@@ -150,7 +148,7 @@ public Drawer(MainActivity mainActivity) {
       appVersion.setVisibility(View.VISIBLE);
     }
     donateImageView.setOnClickListener(v -> new Billing(mainActivity));
-    telegramImageView.setOnClickListener(v -> Utils.openURL(URL_TELEGRAM, mainActivity));
+    telegramImageView.setOnClickListener(v -> Utils.openTelegramURL(mainActivity));
     /*drawerHeaderView.setOnLongClickListener(
     v -> {
       Intent intent1;

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
+import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+
 import java.net.UnknownHostException;
 import java.util.ArrayList;
 import java.util.List;
@@ -179,7 +181,7 @@ private void tryWithBroadcast() {
           public void run() {
             for (int i = 0; i < SubnetScanner.RETRY_COUNT; i++) {
               try {
-                SmbFile smbFile = new SmbFile("smb://");
+                SmbFile smbFile = SmbUtil.create(SMB_URI_PREFIX);
                 smbFile.setConnectTimeout(5000);
                 SmbFile[] listFiles = smbFile.listFiles();
                 for (SmbFile smbFile2 : listFiles) {

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -21,6 +21,7 @@
 package com.amaze.filemanager.ui.colors;
 
 import static android.os.Build.VERSION_CODES.N;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
@@ -40,7 +41,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = N)
+@Config(minSdk = N, maxSdk = P)
 public class ColorUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/theme/AppThemeTest.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.theme;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 import java.util.Calendar;
 

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
+import static android.os.Build.VERSION_CODES.KITKAT;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
@@ -43,7 +45,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19)
+@Config(sdk = {KITKAT, P})
 public class AnimUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/BookSorterTest.java
Patch:
@@ -22,7 +22,8 @@
 
 import static org.hamcrest.Matchers.greaterThan;
 import static org.hamcrest.Matchers.lessThan;
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertThat;
 
 import org.junit.Test;
 

File: app/src/test/java/com/amaze/filemanager/utils/ComputerParcelableTest.java
Patch:
@@ -20,7 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 
 import org.junit.Test;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -75,6 +75,9 @@ public AppsDataPair loadInBackground() {
     mApps = new AppsDataPair(new ArrayList<>(apps.size()), new ArrayList<>(apps.size()));
 
     for (ApplicationInfo object : apps) {
+      if (object.sourceDir == null) {
+        continue;
+      }
       File sourceDir = new File(object.sourceDir);
 
       String label = object.loadLabel(packageManager).toString();

File: app/src/main/java/com/amaze/filemanager/adapters/holders/AppHolder.java
Patch:
@@ -39,6 +39,7 @@ public class AppHolder extends RecyclerView.ViewHolder {
   public final RelativeLayout rl;
   public final TextView txtDesc;
   public final ImageButton about;
+  public final RelativeLayout summary;
 
   public AppHolder(View view) {
     super(view);
@@ -48,6 +49,7 @@ public AppHolder(View view) {
     rl = view.findViewById(R.id.second);
     txtDesc = view.findViewById(R.id.date);
     about = view.findViewById(R.id.properties);
+    summary = view.findViewById(R.id.summary);
 
     apkIcon.setVisibility(View.VISIBLE);
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -95,7 +95,8 @@ public AppsDataPair loadInBackground() {
               object.flags + "_" + (info != null ? info.versionName : ""),
               Formatter.formatFileSize(getContext(), sourceDir.length()),
               sourceDir.length(),
-              sourceDir.lastModified());
+              sourceDir.lastModified(),
+              null);
 
       mApps.first.add(elem);
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -164,7 +164,7 @@ public boolean onMenuItemClick(MenuItem item) {
       case R.id.open_with:
         boolean useNewStack =
             sharedPrefs.getBoolean(PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK, false);
-        FileUtils.openWith(new File(rowItem.desc), mainFragment.getActivity(), useNewStack);
+        FileUtils.openWith(new File(rowItem.desc), mainActivity, useNewStack);
         return true;
       case R.id.encrypt:
         final Intent encryptIntent = new Intent(context, EncryptService.class);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -43,6 +43,7 @@ public class PreferencesConstants {
   public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
   public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
 
+  public static final String PREFERENCE_CLEAR_OPEN_FILE = "clear_open_file";
   public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
   public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
   public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -139,9 +139,9 @@ public View getView(final int position, View convertView, ViewGroup parent) {
       holder.txtDesc.setText(rowItem.openFileParcelable.getClassName());
       holder.txtDesc.setSingleLine(true);
       holder.txtDesc.setEllipsize(TextUtils.TruncateAt.MIDDLE);
-      modelProvider.loadApkImage(rowItem.packageName, holder.apkIcon, true, themedActivity);
+      modelProvider.loadApkImage(rowItem.packageName, holder.apkIcon);
     } else {
-      modelProvider.loadApkImage(rowItem.path, holder.apkIcon, false, themedActivity);
+      modelProvider.loadApkImage(rowItem.path, holder.apkIcon);
     }
 
     if (holder.about != null && !isBottomSheet) {

File: app/src/main/java/com/amaze/filemanager/ui/fragments/AppsListFragment.java
Patch:
@@ -97,7 +97,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
           .getDecorView()
           .setBackgroundColor(Utils.getColor(getContext(), android.R.color.black));
 
-    modelProvider = new AppsAdapterPreloadModel(app);
+    modelProvider = new AppsAdapterPreloadModel(app, false);
     ViewPreloadSizeProvider<String> sizeProvider = new ViewPreloadSizeProvider<>();
     ListPreloader<String> preloader =
         new ListPreloader<>(

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -21,6 +21,7 @@
 package com.amaze.filemanager.ui.colors;
 
 import static android.os.Build.VERSION_CODES.N;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
@@ -40,7 +41,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = N)
+@Config(minSdk = N, maxSdk = P)
 public class ColorUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/theme/AppThemeTest.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.theme;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 import java.util.Calendar;
 

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
+import static android.os.Build.VERSION_CODES.KITKAT;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
@@ -43,7 +45,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19)
+@Config(sdk = {KITKAT, P})
 public class AnimUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/BookSorterTest.java
Patch:
@@ -22,7 +22,8 @@
 
 import static org.hamcrest.Matchers.greaterThan;
 import static org.hamcrest.Matchers.lessThan;
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertThat;
 
 import org.junit.Test;
 

File: app/src/test/java/com/amaze/filemanager/utils/ComputerParcelableTest.java
Patch:
@@ -20,7 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 
 import org.junit.Test;
 

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -21,6 +21,7 @@
 package com.amaze.filemanager.ui.colors;
 
 import static android.os.Build.VERSION_CODES.N;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
@@ -40,7 +41,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = N)
+@Config(minSdk = N, maxSdk = P)
 public class ColorUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/theme/AppThemeTest.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.theme;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 import java.util.Calendar;
 

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
+import static android.os.Build.VERSION_CODES.KITKAT;
+import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
@@ -43,7 +45,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19)
+@Config(sdk = {KITKAT, P})
 public class AnimUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/BookSorterTest.java
Patch:
@@ -22,7 +22,8 @@
 
 import static org.hamcrest.Matchers.greaterThan;
 import static org.hamcrest.Matchers.lessThan;
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertThat;
 
 import org.junit.Test;
 

File: app/src/test/java/com/amaze/filemanager/utils/ComputerParcelableTest.java
Patch:
@@ -20,7 +20,8 @@
 
 package com.amaze.filemanager.utils;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 
 import org.junit.Test;
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -54,6 +54,7 @@ public class ThemedActivity extends PreferenceActivity {
   @Override
   public void onCreate(Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
+    AppConfig.getInstance().setThemedActivityContext(this);
 
     // setting window background color instead of each item, in order to reduce pixel overdraw
     if (getAppTheme().equals(AppTheme.LIGHT)) {
@@ -81,7 +82,6 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     setTheme();
-    AppConfig.getInstance().setThemedActivityContext(this);
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -149,7 +149,9 @@ public View getView(final int position, View convertView, ViewGroup parent) {
 
     if (isBottomSheet) {
       holder.about.setVisibility(View.GONE);
-      holder.summary.setVisibility(View.GONE);
+      holder.txtDesc.setText(rowItem.openFileParcelable.getClassName());
+      holder.txtDesc.setSingleLine(true);
+      holder.txtDesc.setEllipsize(TextUtils.TruncateAt.MIDDLE);
     }
 
     if (holder.about != null && !isBottomSheet) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -24,6 +24,7 @@
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.colors.UserColorPreferences;
 import com.amaze.filemanager.ui.dialogs.ColorPickerDialog;
@@ -80,6 +81,7 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     setTheme();
+    AppConfig.getInstance().setThemedActivityContext(this);
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/ui/activities/superclasses/ThemedActivity.java
Patch:
@@ -22,7 +22,6 @@
 
 import static android.os.Build.VERSION.SDK_INT;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
-import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_TEXTEDITOR_NEWSTACK;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
@@ -94,8 +93,6 @@ public void initStatusBarResources(View parentView) {
       getToolbar().setBackgroundColor(getPrimary());
     }
 
-    boolean useNewStack = getBoolean(PREFERENCE_TEXTEDITOR_NEWSTACK);
-
     Window window = getWindow();
     if (SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
       if (findViewById(R.id.tab_frame) != null || findViewById(R.id.drawer_layout) == null) {

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -58,7 +58,6 @@
 
 import androidx.documentfile.provider.DocumentFile;
 
-import jcifs.smb.SmbFile;
 import net.schmizz.sshj.sftp.RemoteFile;
 import net.schmizz.sshj.sftp.SFTPClient;
 
@@ -320,7 +319,7 @@ public void close() throws IOException {
         break;
       case SMB:
         try {
-          inputStream = new SmbFile(hybridFile.getPath()).getInputStream();
+          inputStream = hybridFile.getSmbFile().getInputStream();
         } catch (IOException e) {
           inputStream = null;
           e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -338,8 +338,8 @@ public void refactorDrawerStorages(boolean addTab) {
         addNewTab(1, currentSecondTab, true);
         addNewTab(2, currentFirstTab, false);
       }
-      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab));
-      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab));
+      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab)).blockingAwait();
+      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab)).blockingAwait();
 
       if (currentFirstTab.equalsIgnoreCase("/")) {
         sharedPrefs.edit().putBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, true).apply();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -346,10 +346,8 @@ public void updatePath(
 
     switch (openmode) {
       case SFTP:
-        newPath = HybridFile.parseSftpPath(news);
-        break;
       case SMB:
-        newPath = HybridFile.parseSmbPath(news);
+        newPath = HybridFile.parseAndFormatUriForDisplay(news);
         break;
       case OTG:
         newPath = mainActivityHelper.parseOTGPath(news);

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
+import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+
 import java.net.UnknownHostException;
 import java.util.ArrayList;
 import java.util.List;
@@ -179,7 +181,7 @@ private void tryWithBroadcast() {
           public void run() {
             for (int i = 0; i < SubnetScanner.RETRY_COUNT; i++) {
               try {
-                SmbFile smbFile = new SmbFile("smb://");
+                SmbFile smbFile = SmbUtil.create(SMB_URI_PREFIX);
                 smbFile.setConnectTimeout(5000);
                 SmbFile[] listFiles = smbFile.listFiles();
                 for (SmbFile smbFile2 : listFiles) {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestUtils.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.filesystem.ssh.test;
 
+import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
+
 import java.io.IOException;
 import java.io.StringWriter;
 import java.security.KeyPair;
@@ -77,7 +79,7 @@ public static void saveSshConnectionSettings(
       privateKeyContents = writer.toString();
     }
 
-    StringBuilder fullUri = new StringBuilder().append("ssh://").append(validUsername);
+    StringBuilder fullUri = new StringBuilder().append(SSH_URI_PREFIX).append(validUsername);
 
     if (validPassword != null) fullUri.append(':').append(validPassword);
 

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestUtils.java
Patch:
@@ -21,7 +21,6 @@
 package com.amaze.filemanager.filesystem.ssh.test;
 
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
-
 import static org.robolectric.Shadows.shadowOf;
 
 import java.io.IOException;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestUtils.java
Patch:
@@ -26,6 +26,8 @@
 
 import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
 
+import static org.robolectric.Shadows.shadowOf;
+
 import java.io.IOException;
 import java.io.StringWriter;
 import java.security.KeyPair;

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -58,7 +58,6 @@
 
 import androidx.documentfile.provider.DocumentFile;
 
-import jcifs.smb.SmbFile;
 import net.schmizz.sshj.sftp.RemoteFile;
 import net.schmizz.sshj.sftp.SFTPClient;
 
@@ -320,7 +319,7 @@ public void close() throws IOException {
         break;
       case SMB:
         try {
-          inputStream = new SmbFile(hybridFile.getPath()).getInputStream();
+          inputStream = hybridFile.getSmbFile().getInputStream();
         } catch (IOException e) {
           inputStream = null;
           e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -346,10 +346,8 @@ public void updatePath(
 
     switch (openmode) {
       case SFTP:
-        newPath = HybridFile.parseSftpPath(news);
-        break;
       case SMB:
-        newPath = HybridFile.parseSmbPath(news);
+        newPath = HybridFile.parseAndFormatUriForDisplay(news);
         break;
       case OTG:
         newPath = mainActivityHelper.parseOTGPath(news);

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -21,6 +21,8 @@
 package com.amaze.filemanager.utils;
 
 /** Created by arpitkh996 on 16-01-2016. */
+import static com.amaze.filemanager.filesystem.smb.CifsContextFactory.SMB_URI_PREFIX;
+
 import java.net.UnknownHostException;
 import java.util.ArrayList;
 import java.util.List;
@@ -179,7 +181,7 @@ private void tryWithBroadcast() {
           public void run() {
             for (int i = 0; i < SubnetScanner.RETRY_COUNT; i++) {
               try {
-                SmbFile smbFile = new SmbFile("smb://");
+                SmbFile smbFile = SmbUtil.create(SMB_URI_PREFIX);
                 smbFile.setConnectTimeout(5000);
                 SmbFile[] listFiles = smbFile.listFiles();
                 for (SmbFile smbFile2 : listFiles) {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestUtils.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.filesystem.ssh.test;
 
+import static com.amaze.filemanager.filesystem.ssh.SshConnectionPool.SSH_URI_PREFIX;
+
 import java.io.IOException;
 import java.io.StringWriter;
 import java.security.KeyPair;
@@ -77,7 +79,7 @@ public static void saveSshConnectionSettings(
       privateKeyContents = writer.toString();
     }
 
-    StringBuilder fullUri = new StringBuilder().append("ssh://").append(validUsername);
+    StringBuilder fullUri = new StringBuilder().append(SSH_URI_PREFIX).append(validUsername);
 
     if (validPassword != null) fullUri.append(':').append(validPassword);
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -338,8 +338,8 @@ public void refactorDrawerStorages(boolean addTab) {
         addNewTab(1, currentSecondTab, true);
         addNewTab(2, currentFirstTab, false);
       }
-      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab));
-      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab));
+      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab)).blockingAwait();
+      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab)).blockingAwait();
 
       if (currentFirstTab.equalsIgnoreCase("/")) {
         sharedPrefs.edit().putBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, true).apply();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -338,8 +338,8 @@ public void refactorDrawerStorages(boolean addTab) {
         addNewTab(1, currentSecondTab, true);
         addNewTab(2, currentFirstTab, false);
       }
-      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab));
-      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab));
+      tabHandler.addTab(new Tab(1, currentSecondTab, currentSecondTab)).blockingAwait();
+      tabHandler.addTab(new Tab(2, currentFirstTab, currentFirstTab)).blockingAwait();
 
       if (currentFirstTab.equalsIgnoreCase("/")) {
         sharedPrefs.edit().putBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, true).apply();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -39,11 +39,11 @@
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.RenameFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OpenMode;
-import com.amaze.filemanager.utils.RootUtils;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.Context;
@@ -126,7 +126,8 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
               // check if we have root
               if (mainFrag != null && mainFrag.getMainActivity().isRootExplorer()) {
                 try {
-                  if (!RootUtils.rename(baseFile.getPath(), destPath)) return false;
+                  if (!RenameFileCommand.INSTANCE.renameFile(baseFile.getPath(), destPath))
+                    return false;
                 } catch (ShellNotRunningException e) {
                   e.printStackTrace();
                   return false;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ReadFileTask.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.os.AsyncTask;
@@ -145,7 +145,7 @@ private InputStream loadFile(File file) {
       try {
         cachedFile = new File(externalCacheDir, file.getName());
         // creating a cache file
-        RootUtils.copy(file.getAbsolutePath(), cachedFile.getPath());
+        CopyFilesCommand.INSTANCE.copyFiles(file.getAbsolutePath(), cachedFile.getPath());
 
         inputStream = new FileInputStream(cachedFile);
       } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.ConcatenateFileCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -132,7 +132,7 @@ protected Integer doInBackground(Void... voids) {
 
       if (cachedFile != null && cachedFile.exists() && destFile != null) {
         // cat cache content to original file and delete cache file
-        RootUtils.cat(cachedFile.getPath(), destFile.getPath());
+        ConcatenateFileCommand.INSTANCE.concatenateFile(cachedFile.getPath(), destFile.getPath());
         cachedFile.delete();
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -44,14 +44,14 @@
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.root.RenameFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.icons.MimeTypes;
 import com.amaze.filemanager.utils.AppConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;
-import com.amaze.filemanager.utils.RootUtils;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.annotation.TargetApi;
@@ -458,7 +458,7 @@ private static boolean rename(File f, String name, boolean root) throws ShellNot
     if (f.getParentFile().canWrite()) {
       return f.renameTo(new File(newPath));
     } else if (root) {
-      RootUtils.rename(f.getPath(), newPath);
+      RenameFileCommand.INSTANCE.renameFile(f.getPath(), newPath);
       return true;
     }
     return false;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -691,7 +691,7 @@ public static ArrayList<HybridFile> toHybridFileArrayList(LinkedList<String> a)
   /**
    * We're parsing a line returned from a stdout of shell.
    *
-   * @param line must be the line returned from a 'ls' command
+   * @param line must be the line returned from 'ls' or 'stat' command
    */
   public static HybridFileParcelable parseName(String line) {
     boolean linked = false;
@@ -725,6 +725,7 @@ public static HybridFileParcelable parseName(String line) {
       for (int i = q + 1; i < array.length; i++) {
         link.append(" ").append(array[i]);
       }
+      link = new StringBuilder(link.toString().trim());
     }
     long Size = (size == null || size.trim().length() == 0) ? -1 : Long.parseLong(size);
     if (date.trim().length() > 0) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/DatabaseViewerActivity.java
Patch:
@@ -28,13 +28,13 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.fragments.DbViewerFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
-import com.amaze.filemanager.utils.RootUtils;
 import com.amaze.filemanager.utils.Utils;
 import com.readystatesoftware.systembartint.SystemBarTintManager;
 
@@ -170,7 +170,7 @@ private void load(final File file) {
               if (!file.canRead() && isRootExplorer()) {
 
                 try {
-                  RootUtils.copy(
+                  CopyFilesCommand.INSTANCE.copyFiles(
                       pathFile.getPath(), new File(file1.getPath(), file.getName()).getPath());
                   pathFile = new File(file1.getPath(), file.getName());
                 } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/application/AppConfig.java
Patch:
@@ -247,8 +247,7 @@ protected void initACRA() {
       ErrorActivity.reportError(
           this,
           ace,
-          null,
-          null,
+              null,
           ErrorActivity.ErrorInfo.make(
               ErrorActivity.ERROR_UNKNOWN,
               "Could not initialize ACRA crash report",

File: app/src/main/java/com/amaze/filemanager/filesystem/cloud/CloudUtil.java
Patch:
@@ -58,7 +58,6 @@
 
 import androidx.documentfile.provider.DocumentFile;
 
-import jcifs.smb.SmbFile;
 import net.schmizz.sshj.sftp.RemoteFile;
 import net.schmizz.sshj.sftp.SFTPClient;
 
@@ -320,7 +319,7 @@ public void close() throws IOException {
         break;
       case SMB:
         try {
-          inputStream = new SmbFile(hybridFile.getPath()).getInputStream();
+          inputStream = hybridFile.getSmbFile().getInputStream();
         } catch (IOException e) {
           inputStream = null;
           e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -179,7 +179,7 @@ private void tryWithBroadcast() {
           public void run() {
             for (int i = 0; i < SubnetScanner.RETRY_COUNT; i++) {
               try {
-                SmbFile smbFile = new SmbFile("smb://");
+                SmbFile smbFile = SmbUtil.create("smb://");
                 smbFile.setConnectTimeout(5000);
                 SmbFile[] listFiles = smbFile.listFiles();
                 for (SmbFile smbFile2 : listFiles) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -39,11 +39,11 @@
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.CryptUtil;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.RenameFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.MainFragment;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OpenMode;
-import com.amaze.filemanager.utils.RootUtils;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.content.Context;
@@ -126,7 +126,8 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
               // check if we have root
               if (mainFrag != null && mainFrag.getMainActivity().isRootExplorer()) {
                 try {
-                  if (!RootUtils.rename(baseFile.getPath(), destPath)) return false;
+                  if (!RenameFileCommand.INSTANCE.renameFile(baseFile.getPath(), destPath))
+                    return false;
                 } catch (ShellNotRunningException e) {
                   e.printStackTrace();
                   return false;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ReadFileTask.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.EditableFileAbstraction;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.os.AsyncTask;
@@ -145,7 +145,7 @@ private InputStream loadFile(File file) {
       try {
         cachedFile = new File(externalCacheDir, file.getName());
         // creating a cache file
-        RootUtils.copy(file.getAbsolutePath(), cachedFile.getPath());
+        CopyFilesCommand.INSTANCE.copyFiles(file.getAbsolutePath(), cachedFile.getPath());
 
         inputStream = new FileInputStream(cachedFile);
       } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -34,8 +34,8 @@
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.files.FileUtils;
+import com.amaze.filemanager.filesystem.root.ConcatenateFileCommand;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
-import com.amaze.filemanager.utils.RootUtils;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -132,7 +132,7 @@ protected Integer doInBackground(Void... voids) {
 
       if (cachedFile != null && cachedFile.exists() && destFile != null) {
         // cat cache content to original file and delete cache file
-        RootUtils.cat(cachedFile.getPath(), destFile.getPath());
+        ConcatenateFileCommand.INSTANCE.concatenateFile(cachedFile.getPath(), destFile.getPath());
         cachedFile.delete();
       }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -44,14 +44,14 @@
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.cloud.CloudUtil;
 import com.amaze.filemanager.filesystem.files.GenericCopyUtil;
+import com.amaze.filemanager.filesystem.root.RenameFileCommand;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.icons.MimeTypes;
 import com.amaze.filemanager.utils.AppConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;
-import com.amaze.filemanager.utils.RootUtils;
 import com.cloudrail.si.interfaces.CloudStorage;
 
 import android.annotation.TargetApi;
@@ -458,7 +458,7 @@ private static boolean rename(File f, String name, boolean root) throws ShellNot
     if (f.getParentFile().canWrite()) {
       return f.renameTo(new File(newPath));
     } else if (root) {
-      RootUtils.rename(f.getPath(), newPath);
+      RenameFileCommand.INSTANCE.renameFile(f.getPath(), newPath);
       return true;
     }
     return false;

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -691,7 +691,7 @@ public static ArrayList<HybridFile> toHybridFileArrayList(LinkedList<String> a)
   /**
    * We're parsing a line returned from a stdout of shell.
    *
-   * @param line must be the line returned from a 'ls' command
+   * @param line must be the line returned from 'ls' or 'stat' command
    */
   public static HybridFileParcelable parseName(String line) {
     boolean linked = false;
@@ -725,6 +725,7 @@ public static HybridFileParcelable parseName(String line) {
       for (int i = q + 1; i < array.length; i++) {
         link.append(" ").append(array[i]);
       }
+      link = new StringBuilder(link.toString().trim());
     }
     long Size = (size == null || size.trim().length() == 0) ? -1 : Long.parseLong(size);
     if (date.trim().length() > 0) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/DatabaseViewerActivity.java
Patch:
@@ -28,13 +28,13 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.filesystem.root.CopyFilesCommand;
 import com.amaze.filemanager.ui.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.ui.fragments.DbViewerFragment;
 import com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.theme.AppTheme;
 import com.amaze.filemanager.utils.PreferenceUtils;
-import com.amaze.filemanager.utils.RootUtils;
 import com.amaze.filemanager.utils.Utils;
 import com.readystatesoftware.systembartint.SystemBarTintManager;
 
@@ -170,7 +170,7 @@ private void load(final File file) {
               if (!file.canRead() && isRootExplorer()) {
 
                 try {
-                  RootUtils.copy(
+                  CopyFilesCommand.INSTANCE.copyFiles(
                       pathFile.getPath(), new File(file1.getPath(), file.getName()).getPath());
                   pathFile = new File(file1.getPath(), file.getName());
                 } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -725,6 +725,7 @@ public static HybridFileParcelable parseName(String line) {
       for (int i = q + 1; i < array.length; i++) {
         link.append(" ").append(array[i]);
       }
+      link = new StringBuilder(link.toString().trim());
     }
     long Size = (size == null || size.trim().length() == 0) ? -1 : Long.parseLong(size);
     if (date.trim().length() > 0) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -22,6 +22,7 @@
 
 import static com.amaze.filemanager.utils.Utils.openURL;
 
+import com.amaze.filemanager.LogHelper;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.theme.AppTheme;
@@ -237,6 +238,8 @@ public void onClick(View v) {
           case BLACK:
             libsBuilder.withActivityTheme(R.style.AboutLibrariesTheme_Black);
             break;
+          default:
+            LogHelper.logOnProductionOrCrash(TAG, "Incorrect value for switch");
         }
 
         libsBuilder.start(this);

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -22,6 +22,7 @@
 
 import static com.amaze.filemanager.utils.Utils.openURL;
 
+import com.amaze.filemanager.LogHelper;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.ui.theme.AppTheme;
@@ -237,6 +238,8 @@ public void onClick(View v) {
           case BLACK:
             libsBuilder.withActivityTheme(R.style.AboutLibrariesTheme_Black);
             break;
+          default:
+            LogHelper.logOnProductionOrCrash(TAG, "Incorrect value for switch");
         }
 
         libsBuilder.start(this);

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -566,7 +566,7 @@ private void initFabToSave(final ArrayList<Uri> uris) {
 
   private void saveExternalIntent(final ArrayList<Uri> uris) {
     if (uris != null && uris.size() > 0) {
-      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+      if (SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
         File folder = new File(getCurrentMainFragment().getCurrentPath());
         int result = mainActivityHelper.checkFolder(folder, MainActivity.this);
         if (result == MainActivityHelper.WRITABLE_OR_ON_SDCARD) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1333,6 +1333,9 @@ protected void onDestroy() {
     // TODO: https://developer.android.com/reference/android/app/Activity.html#onDestroy%28%29
     closeInteractiveShell();
     SshConnectionPool.getInstance().shutdown();
+    if (drawer != null && drawer.getBilling() != null) {
+      drawer.getBilling().destroyBillingInstance();
+    }
   }
 
   /** Closes the interactive shell and threads associated */

File: app/src/main/java/com/amaze/filemanager/ui/views/FastScroller.java
Patch:
@@ -176,7 +176,7 @@ private void setRecyclerViewPosition(float relativePos) {
     if (recyclerView != null) {
       int itemCount = recyclerView.getAdapter().getItemCount();
       int targetPos = (int) Utils.clamp(0, itemCount - 1, (int) (relativePos * (float) itemCount));
-      recyclerView.smoothScrollToPosition(targetPos);
+      recyclerView.scrollToPosition(targetPos);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/AboutActivity.java
Patch:
@@ -20,7 +20,7 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static com.amaze.filemanager.utils.Utils.*;
+import static com.amaze.filemanager.utils.Utils.openURL;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.activities.superclasses.BasicActivity;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1333,6 +1333,9 @@ protected void onDestroy() {
     // TODO: https://developer.android.com/reference/android/app/Activity.html#onDestroy%28%29
     closeInteractiveShell();
     SshConnectionPool.getInstance().shutdown();
+    if (drawer != null && drawer.getBilling() != null) {
+      drawer.getBilling().destroyBillingInstance();
+    }
   }
 
   /** Closes the interactive shell and threads associated */

File: app/src/main/java/com/amaze/filemanager/ui/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -413,9 +413,9 @@ private Intent buildEmailIntent() {
     Intent emailIntent = new Intent(Intent.ACTION_SEND);
     String aEmailList[] = {EMAIL_VISHAL};
     String aEmailCCList[] = {EMAIL_EMMANUEL, EMAIL_RAYMOND};
-    emailIntent.putExtra(android.content.Intent.EXTRA_EMAIL, aEmailList);
-    emailIntent.putExtra(android.content.Intent.EXTRA_CC, aEmailCCList);
-    emailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, "Feedback : Amaze File Manager");
+    emailIntent.putExtra(Intent.EXTRA_EMAIL, aEmailList);
+    emailIntent.putExtra(Intent.EXTRA_CC, aEmailCCList);
+    emailIntent.putExtra(Intent.EXTRA_SUBJECT, "Feedback : Amaze File Manager");
     emailIntent.setType("message/rfc822");
     return emailIntent;
   }

File: app/src/main/java/com/amaze/filemanager/ui/views/FastScroller.java
Patch:
@@ -176,7 +176,7 @@ private void setRecyclerViewPosition(float relativePos) {
     if (recyclerView != null) {
       int itemCount = recyclerView.getAdapter().getItemCount();
       int targetPos = (int) Utils.clamp(0, itemCount - 1, (int) (relativePos * (float) itemCount));
-      recyclerView.smoothScrollToPosition(targetPos);
+      recyclerView.scrollToPosition(targetPos);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
Patch:
@@ -97,7 +97,7 @@ public void stopWatching() {
     if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
       stopPollingSystem();
     } else {
-      super.startWatching();
+      super.stopWatching();
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -590,7 +590,7 @@ private static void showPropertiesDialog(
     }
 
     if (!forStorage && showPermissions) {
-      final MainFragment main = ((MainActivity) base).mainFragment;
+      final MainFragment main = ((MainActivity) base).getCurrentMainFragment();
       AppCompatButton appCompatButton = v.findViewById(R.id.permissionsButton);
       appCompatButton.setAllCaps(true);
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -671,8 +671,6 @@ public void search(SharedPreferences sharedPrefs, String query) {
     task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fpath);*/
     // ma.searchTask = task;
     SEARCH_TEXT = query;
-    mainActivity.mainFragment =
-        (MainFragment) mainActivity.getTabFragment().getCurrentTabFragment();
     FragmentManager fm = mainActivity.getSupportFragmentManager();
     SearchWorkerFragment fragment =
         (SearchWorkerFragment) fm.findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);

File: app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
Patch:
@@ -97,7 +97,7 @@ public void stopWatching() {
     if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
       stopPollingSystem();
     } else {
-      super.startWatching();
+      super.stopWatching();
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -590,7 +590,7 @@ private static void showPropertiesDialog(
     }
 
     if (!forStorage && showPermissions) {
-      final MainFragment main = ((MainActivity) base).mainFragment;
+      final MainFragment main = ((MainActivity) base).getCurrentMainFragment();
       AppCompatButton appCompatButton = v.findViewById(R.id.permissionsButton);
       appCompatButton.setAllCaps(true);
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -671,8 +671,6 @@ public void search(SharedPreferences sharedPrefs, String query) {
     task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fpath);*/
     // ma.searchTask = task;
     SEARCH_TEXT = query;
-    mainActivity.mainFragment =
-        (MainFragment) mainActivity.getTabFragment().getCurrentTabFragment();
     FragmentManager fm = mainActivity.getSupportFragmentManager();
     SearchWorkerFragment fragment =
         (SearchWorkerFragment) fm.findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -477,11 +477,13 @@ private boolean authenticateAndSaveSetup(
         return false;
       }
     } else {
+      String originalDefaultPath = getArguments().getString("defaultPath");
+      if(originalDefaultPath == null) originalDefaultPath = "";
       String originalPath =
           deriveSftpPathFrom(
               getArguments().getString("address"),
               getArguments().getInt("port"),
-              getArguments().getString("defaultPath"),
+              originalDefaultPath,
               getArguments().getString("username"),
               getArguments().getString("password"),
               selectedParsedKeyPair);

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -382,7 +382,7 @@ public void switchView() {
     reloadListElements(false, results, isPathLayoutGrid);
   }
 
-  void loadViews() {
+  private void loadViews() {
     if (CURRENT_PATH != null) {
       getMainActivity()
           .getAppbar()

File: app/src/main/java/com/amaze/filemanager/filesystem/CustomFileObserver.java
Patch:
@@ -97,7 +97,7 @@ public void stopWatching() {
     if (Build.VERSION.SDK_INT == Build.VERSION_CODES.M) {
       stopPollingSystem();
     } else {
-      super.startWatching();
+      super.stopWatching();
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -590,7 +590,7 @@ private static void showPropertiesDialog(
     }
 
     if (!forStorage && showPermissions) {
-      final MainFragment main = ((MainActivity) base).mainFragment;
+      final MainFragment main = ((MainActivity) base).getCurrentMainFragment();
       AppCompatButton appCompatButton = v.findViewById(R.id.permissionsButton);
       appCompatButton.setAllCaps(true);
 

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -173,8 +173,6 @@ public View onCreateView(
             ThemedActivity.skinTwo : ThemedActivity.skin));
     mainActivity.updateViews(colorDrawable);*/
 
-    mainActivity.mainFragment = (MainFragment) getCurrentTabFragment();
-
     return rootView;
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -671,8 +671,6 @@ public void search(SharedPreferences sharedPrefs, String query) {
     task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fpath);*/
     // ma.searchTask = task;
     SEARCH_TEXT = query;
-    mainActivity.mainFragment =
-        (MainFragment) mainActivity.getTabFragment().getCurrentTabFragment();
     FragmentManager fm = mainActivity.getSupportFragmentManager();
     SearchWorkerFragment fragment =
         (SearchWorkerFragment) fm.findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -87,10 +87,9 @@ public HybridFileParcelable(String path, boolean isDirectory, RemoteResourceInfo
         Integer.toString(FilePermission.toMask(sshFile.getAttributes().getPermissions()), 8));
   }
 
-  @Override
   public String getName() {
     if (!Utils.isNullOrEmpty(name)) return name;
-    else return super.getName();
+    else return super.getSimpleName();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -124,7 +124,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
             if (!source.renameTo(dest)) {
 
               // check if we have root
-              if (mainFrag.getMainActivity().isRootExplorer()) {
+              if (mainFrag != null && mainFrag.getMainActivity().isRootExplorer()) {
                 try {
                   if (!RootUtils.rename(baseFile.getPath(), destPath)) return false;
                 } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -124,7 +124,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
             if (!source.renameTo(dest)) {
 
               // check if we have root
-              if (mainFrag.getMainActivity().isRootExplorer()) {
+              if (mainFrag != null && mainFrag.getMainActivity().isRootExplorer()) {
                 try {
                   if (!RootUtils.rename(baseFile.getPath(), destPath)) return false;
                 } catch (ShellNotRunningException e) {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -87,10 +87,9 @@ public HybridFileParcelable(String path, boolean isDirectory, RemoteResourceInfo
         Integer.toString(FilePermission.toMask(sshFile.getAttributes().getPermissions()), 8));
   }
 
-  @Override
   public String getName() {
     if (!Utils.isNullOrEmpty(name)) return name;
-    else return super.getName();
+    else return super.getSimpleName();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -114,7 +114,6 @@ public void afterTextChanged(Editable s) {
       if (studiomode != 0) {
         if (path.startsWith("smb:/")) {
           try {
-            jcifs.Config.registerSmbURLHandler();
             URL a = new URL(path);
             String userinfo = a.getUserInfo();
             if (userinfo != null) {

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -395,7 +395,7 @@ public int getListOrGridForPath(String path, int defaultValue) {
   public void clearHistory() {
     history.clear();
     if (dataChangeListener != null) {
-      AppConfig.runInBackground(() -> dataChangeListener.onHistoryCleared());
+      AppConfig.getInstance().runInBackground(() -> dataChangeListener.onHistoryCleared());
     }
   }
 

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -72,7 +72,7 @@ public void setUp() throws IOException {
 
   @After
   public void tearDown() throws IOException {
-    SshConnectionPool.getInstance().expungeAllConnections();
+    SshConnectionPool.getInstance().shutdown();
     if (server != null && server.isOpen()) {
       server.stop(true);
     }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1468,7 +1468,6 @@ public void onResume() {
     (getActivity())
         .registerReceiver(receiver2, new IntentFilter(MainActivity.KEY_INTENT_LOAD_LIST));
 
-    getMainActivity().getDrawer().selectCorrectDrawerItemForPath(getPath());
     resumeDecryptOperations();
     startFileObserver();
   }

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -108,7 +108,7 @@ public static void setTint(Context context, CheckBox box, int color) {
   public static String getDate(@NonNull Context c, long f) {
     return String.format(
         DATE_TIME_FORMAT,
-        DateUtils.formatDateTime(c, f, DateUtils.FORMAT_SHOW_DATE),
+        DateUtils.formatDateTime(c, f, DateUtils.FORMAT_ABBREV_MONTH),
         DateUtils.formatDateTime(c, f, DateUtils.FORMAT_SHOW_TIME));
   }
 

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1219,7 +1219,7 @@ protected void onPause() {
     unregisterReceiver(mainActivityHelper.mNotificationReceiver);
     unregisterReceiver(receiver2);
 
-    if (SDK_INT >= Build.VERSION_CODES.KITKAT && SDK_INT < Build.VERSION_CODES.N) {
+    if (SDK_INT >= Build.VERSION_CODES.KITKAT) {
       unregisterReceiver(mOtgReceiver);
     }
     killToast();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -571,7 +571,6 @@ private void addNewItem(
       if (!mainActivity.getAppTheme().equals(AppTheme.LIGHT)) {
         imageView.setColorFilter(Color.WHITE);
       }
-
       item.getActionView().setOnClickListener((view) -> onNavigationItemActionClick(item));
     }
   }
@@ -586,7 +585,6 @@ private void addNewItem(
       @DrawableRes Integer actionViewIcon) {
     if (BuildConfig.DEBUG && menu.findItem(order) != null)
       throw new IllegalStateException("Item already id exists: " + order);
-
     MenuItem item = menu.add(group, order, order, text).setIcon(icon);
     dataUtils.putDrawerMetadata(item, meta);
 
@@ -598,7 +596,6 @@ private void addNewItem(
       if (!mainActivity.getAppTheme().equals(AppTheme.LIGHT)) {
         imageView.setColorFilter(Color.WHITE);
       }
-
       item.getActionView().setOnClickListener((view) -> onNavigationItemActionClick(item));
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/MainFragment.java
Patch:
@@ -1468,7 +1468,6 @@ public void onResume() {
     (getActivity())
         .registerReceiver(receiver2, new IntentFilter(MainActivity.KEY_INTENT_LOAD_LIST));
 
-    getMainActivity().getDrawer().selectCorrectDrawerItemForPath(getPath());
     resumeDecryptOperations();
     startFileObserver();
   }

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -307,7 +307,7 @@ public void onCreate(final Bundle savedInstanceState) {
 
     if (CloudSheetFragment.isCloudProviderAvailable(this)) {
 
-      //      LoaderManager.getInstance(this).initLoader(REQUEST_CODE_CLOUD_LIST_KEYS, null, this);
+      LoaderManager.getInstance(this).initLoader(REQUEST_CODE_CLOUD_LIST_KEYS, null, this);
     }
 
     path = getIntent().getStringExtra("path");

File: app/src/main/java/com/amaze/filemanager/database/daos/ListEntryDao.java
Patch:
@@ -30,8 +30,9 @@
 import androidx.room.OnConflictStrategy;
 import androidx.room.Query;
 import androidx.room.Update;
+
 import io.reactivex.Completable;
-import io.reactivex.Observable;
+import io.reactivex.Single;
 
 /**
  * {@link Dao} interface definition for {@link List}. Concrete class is generated by Room during
@@ -51,7 +52,7 @@ public interface ListEntryDao {
   Completable update(List instance);
 
   @Query("SELECT " + COLUMN_PATH + " FROM " + TABLE_LIST)
-  Observable<String> listPaths();
+  Single<java.util.List<String>> listPaths();
 
   @Query("DELETE FROM " + TABLE_LIST + " WHERE " + COLUMN_PATH + " = :path")
   Completable deleteByPath(String path);

File: app/src/main/java/com/amaze/filemanager/database/daos/SortDao.java
Patch:
@@ -30,6 +30,7 @@
 import androidx.room.Query;
 import androidx.room.Transaction;
 import androidx.room.Update;
+
 import io.reactivex.Completable;
 import io.reactivex.Single;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -27,7 +27,6 @@
 import java.security.GeneralSecurityException;
 import java.security.KeyPair;
 import java.util.List;
-import java.util.concurrent.Callable;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
@@ -76,7 +75,8 @@ public static final <T> T execute(@NonNull SshClientTemplate template) {
     T retval = null;
     if (client != null) {
       try {
-        retval = (T) Single.just(template.execute(client)).subscribeOn(Schedulers.io()).blockingGet();
+        retval =
+            (T) Single.just(template.execute(client)).subscribeOn(Schedulers.io()).blockingGet();
       } catch (Exception e) {
         Log.e(TAG, "Error executing template method", e);
       } finally {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -27,7 +27,6 @@
 import java.net.URLDecoder;
 import java.net.URLEncoder;
 import java.security.GeneralSecurityException;
-import java.util.concurrent.Callable;
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;

File: app/src/test/java/com/amaze/filemanager/test/TestUtils.java
Patch:
@@ -20,8 +20,8 @@
 
 package com.amaze.filemanager.test;
 
-import static org.awaitility.Awaitility.await;
 import static android.os.Build.VERSION_CODES.P;
+import static org.awaitility.Awaitility.await;
 import static org.robolectric.Shadows.shadowOf;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1219,7 +1219,7 @@ protected void onPause() {
     unregisterReceiver(mainActivityHelper.mNotificationReceiver);
     unregisterReceiver(receiver2);
 
-    if (SDK_INT >= Build.VERSION_CODES.KITKAT && SDK_INT < Build.VERSION_CODES.N) {
+    if (SDK_INT >= Build.VERSION_CODES.KITKAT) {
       unregisterReceiver(mOtgReceiver);
     }
     killToast();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -571,7 +571,6 @@ private void addNewItem(
       if (!mainActivity.getAppTheme().equals(AppTheme.LIGHT)) {
         imageView.setColorFilter(Color.WHITE);
       }
-
       item.getActionView().setOnClickListener((view) -> onNavigationItemActionClick(item));
     }
   }
@@ -586,7 +585,6 @@ private void addNewItem(
       @DrawableRes Integer actionViewIcon) {
     if (BuildConfig.DEBUG && menu.findItem(order) != null)
       throw new IllegalStateException("Item already id exists: " + order);
-
     MenuItem item = menu.add(group, order, order, text).setIcon(icon);
     dataUtils.putDrawerMetadata(item, meta);
 
@@ -598,7 +596,6 @@ private void addNewItem(
       if (!mainActivity.getAppTheme().equals(AppTheme.LIGHT)) {
         imageView.setColorFilter(Color.WHITE);
       }
-
       item.getActionView().setOnClickListener((view) -> onNavigationItemActionClick(item));
     }
   }

File: app/src/main/java/com/amaze/filemanager/ui/fragments/FtpServerFragment.java
Patch:
@@ -130,6 +130,8 @@ public View onCreateView(
         statusDividerView.setBackgroundColor(
             Utils.getColor(getContext(), R.color.divider_dark_card));
         break;
+      default:
+        break;
     }
 
     ftpBtn.setOnClickListener(

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -87,16 +87,13 @@ public class TabFragment extends Fragment implements ViewPager.OnPageChangeListe
   // colors relative to current visible tab
   private @ColorInt int startColor, endColor;
 
-  private TabHandler tabHandler;
-
   private ArgbEvaluator evaluator = new ArgbEvaluator();
 
   @Override
   public View onCreateView(
       LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
     ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.tabfragment, container, false);
 
-    tabHandler = TabHandler.getInstance();
     fragmentManager = getActivity().getSupportFragmentManager();
 
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
@@ -193,6 +190,7 @@ public void onDestroyView() {
   public void updatepaths(int pos) {
 
     // Getting old path from database before clearing
+    TabHandler tabHandler = TabHandler.getInstance();
     tabHandler.clear();
 
     int i = 1;
@@ -346,6 +344,7 @@ private void addNewTab(int num, String path) {
    * @param addTab whether new tabs should be added to ui or just change values in database
    */
   public void refactorDrawerStorages(boolean addTab) {
+    TabHandler tabHandler = TabHandler.getInstance();
     Tab tab1 = tabHandler.findTab(1);
     Tab tab2 = tabHandler.findTab(2);
     Tab[] tabs = tabHandler.getAllTabs();

File: app/src/main/java/com/amaze/filemanager/ui/fragments/TabFragment.java
Patch:
@@ -87,16 +87,13 @@ public class TabFragment extends Fragment implements ViewPager.OnPageChangeListe
   // colors relative to current visible tab
   private @ColorInt int startColor, endColor;
 
-  private TabHandler tabHandler;
-
   private ArgbEvaluator evaluator = new ArgbEvaluator();
 
   @Override
   public View onCreateView(
       LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
     ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.tabfragment, container, false);
 
-    tabHandler = TabHandler.getInstance();
     fragmentManager = getActivity().getSupportFragmentManager();
 
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
@@ -193,6 +190,7 @@ public void onDestroyView() {
   public void updatepaths(int pos) {
 
     // Getting old path from database before clearing
+    TabHandler tabHandler = TabHandler.getInstance();
     tabHandler.clear();
 
     int i = 1;
@@ -346,6 +344,7 @@ private void addNewTab(int num, String path) {
    * @param addTab whether new tabs should be added to ui or just change values in database
    */
   public void refactorDrawerStorages(boolean addTab) {
+    TabHandler tabHandler = TabHandler.getInstance();
     Tab tab1 = tabHandler.findTab(1);
     Tab tab2 = tabHandler.findTab(2);
     Tab[] tabs = tabHandler.getAllTabs();

File: app/src/test/java/com/amaze/filemanager/application/AppConfigTest.java
Patch:
@@ -32,7 +32,6 @@
 import org.junit.After;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
@@ -46,7 +45,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = 28)
 public class AppConfigTest {
 
   @After

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTaskTest.java
Patch:
@@ -51,9 +51,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class DbViewerTaskTest {
 
   private WebView webView;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstractionTest.java
Patch:
@@ -59,9 +59,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class WriteFileAbstractionTest {
 
   private static final String contents = "This is modified data";

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -51,9 +51,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class ExtractServiceTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/EditableFileAbstractionTest.java
Patch:
@@ -44,9 +44,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class EditableFileAbstractionTest {
 
   @Test(expected = IllegalArgumentException.class)

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -40,9 +40,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class OperationsTest {
 
   private File storageRoot = Environment.getExternalStorageDirectory();

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -48,9 +48,7 @@
 import eu.chainfire.libsuperuser.Shell;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowShellInteractive.class})
 public class RootHelperTest {
 
   private static final File sysroot =

File: app/src/test/java/com/amaze/filemanager/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -46,9 +46,7 @@
 
 /** Created by Rustam Khadipash on 31/3/2018. */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class CloudStreamSourceTest {
   private CloudStreamSource cs;
   private String testFilePath;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -47,9 +47,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -57,9 +57,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class CompressedHelperTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -53,8 +53,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 14,
-    maxSdk = 28)
+    minSdk = 14)
 public abstract class AbstractExtractorTest {
 
   protected abstract Class<? extends Extractor> extractorClass();

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -42,9 +42,7 @@
  * "*{slash}*"
  */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowDateFormat.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowDateFormat.class})
 public class FileListSorterTest {
   /**
    * Purpose: when dirsOnTop is 0, if file1 is directory && file2 is not directory, result is -1

File: app/src/test/java/com/amaze/filemanager/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -47,9 +47,7 @@
 
 /** Created by Rustam Khadipash on 30/3/2018. */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowSmbFile.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowSmbFile.class})
 public class StreamSourceTest {
   private SmbFile file;
   private StreamSource ss;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -46,9 +46,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public abstract class AbstractSftpServerTest {
 
   protected SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -52,9 +52,7 @@
 import net.schmizz.sshj.common.SecurityUtils;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
 public class SshConnectionPoolTest {
 
   private SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -41,8 +41,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 24,
-    maxSdk = 28)
+    minSdk = 24)
 public class SingletonUsbOtgTest {
   @Test
   public void usbConnectionTest() {

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -45,8 +45,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 24,
-    maxSdk = 28)
+    minSdk = 24)
 public class UsbOtgTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -40,9 +40,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
 public class ShadowCryptUtilTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -21,7 +21,6 @@
 package com.amaze.filemanager.ui.activities;
 
 import static android.os.Build.VERSION_CODES.N;
-import static android.os.Build.VERSION_CODES.P;
 import static androidx.test.core.app.ActivityScenario.launch;
 import static org.awaitility.Awaitility.await;
 import static org.junit.Assert.assertEquals;
@@ -64,8 +63,7 @@
       ShadowStorageManager.class,
       ShadowCryptUtil.class,
       ShadowSmbFile.class
-    },
-    maxSdk = P)
+    })
 /*
  * Need to make LooperMode PAUSED and flush the main looper before activity can show up.
  * @see {@link LooperMode.Mode.PAUSED}
@@ -131,6 +129,7 @@ public void testUpdateSmbExceptionShouldNotThrowNPE() {
                             .get(0)[0]
                             .equals(newName));
             List<String[]> verify = AppConfig.getInstance().getUtilsHandler().getSmbList();
+            assertEquals(1, verify.size());
             String[] entry = verify.get(0);
             assertEquals(path, entry[1]);
 

File: app/src/test/java/com/amaze/filemanager/ui/activities/PreferencesActivityTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static android.os.Build.VERSION_CODES.P;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_BOOKMARKS_ADDED;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
@@ -48,7 +47,6 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
 
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
@@ -59,7 +57,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = P)
 public class PreferencesActivityTest {
 
   private static final String[] DEFAULT_FALSE_PREFS =

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -52,9 +52,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class TextEditorActivityTest {
 
   private final String fileContents = "fsdfsdfs";

File: app/src/test/java/com/amaze/filemanager/ui/fragments/CloudSheetFragmentTest.java
Patch:
@@ -36,7 +36,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class CloudSheetFragmentTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -36,9 +36,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class IconsTest {
 
   @Before

File: app/src/test/java/com/amaze/filemanager/ui/notifications/NotificationConstantsTest.java
Patch:
@@ -54,7 +54,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class NotificationConstantsTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/ui/views/WarnableTextInputValidatorTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.views;
 
-import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNull;
@@ -30,7 +29,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
-import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.R;
 
@@ -44,7 +42,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = P)
 public class WarnableTextInputValidatorTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -43,7 +43,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class AnimUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -40,7 +40,6 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     minSdk = 19,
-    maxSdk = 28,
     shadows = {ShadowCryptUtil.class})
 public class SmbUtilTest {
 

File: app/src/test/java/com/amaze/filemanager/utils/TinyDBTest.java
Patch:
@@ -35,7 +35,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class TinyDBTest {
 
   private SharedPreferences prefs;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -53,7 +53,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class UtilsTest {
   @Test
   public void

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -52,7 +52,7 @@ public DbViewerTask(
     this.dbViewerFragment = dbViewerFragment;
     stringBuilder = new StringBuilder();
 
-    webView.getSettings().setDefaultTextEncodingName("utf-8");
+    this.webView.getSettings().setDefaultTextEncodingName("utf-8");
   }
 
   @Override
@@ -62,10 +62,10 @@ protected void onPreExecute() {
     if (dbViewerFragment.databaseViewerActivity.getAppTheme().equals(AppTheme.DARK)
         || dbViewerFragment.databaseViewerActivity.getAppTheme().equals(AppTheme.BLACK)) {
 
-      htmlInit = "<html><body>" + "<table border='1' style='width:100%;color:#ffffff'>";
+      htmlInit = "<html><body><table border='1' style='width:100%;color:#ffffff'>";
     } else {
 
-      htmlInit = "<html><body>" + "<table border='1' style='width:100%;color:#000000'>";
+      htmlInit = "<html><body><table border='1' style='width:100%;color:#000000'>";
     }
     stringBuilder.append(htmlInit);
     dbViewerFragment.loadingText.setVisibility(View.VISIBLE);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ReadFileTask.java
Patch:
@@ -74,13 +74,13 @@ protected ReturnedValues doInBackground(Void... params) {
       InputStream inputStream = null;
 
       switch (fileAbstraction.scheme) {
-        case EditableFileAbstraction.SCHEME_CONTENT:
+        case CONTENT:
           if (fileAbstraction.uri == null)
             throw new NullPointerException("Something went really wrong!");
 
           inputStream = contentResolver.openInputStream(fileAbstraction.uri);
           break;
-        case EditableFileAbstraction.SCHEME_FILE:
+        case FILE:
           final HybridFileParcelable hybridFileParcelable = fileAbstraction.hybridFileParcelable;
           if (hybridFileParcelable == null)
             throw new NullPointerException("Something went really wrong!");

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -79,7 +79,7 @@ protected Integer doInBackground(Void... voids) {
       OutputStream outputStream;
 
       switch (fileAbstraction.scheme) {
-        case EditableFileAbstraction.SCHEME_CONTENT:
+        case CONTENT:
           if (fileAbstraction.uri == null)
             throw new NullPointerException("Something went really wrong!");
 
@@ -90,7 +90,7 @@ protected Integer doInBackground(Void... voids) {
           }
 
           break;
-        case EditableFileAbstraction.SCHEME_FILE:
+        case FILE:
           final HybridFileParcelable hybridFileParcelable = fileAbstraction.hybridFileParcelable;
           if (hybridFileParcelable == null)
             throw new NullPointerException("Something went really wrong!");

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -54,7 +54,7 @@ public void testSetColorizeIcons() {
     doTest(R.color.archive_item, Icons.COMPRESSED);
     doTest(R.color.apk_item, Icons.APK);
     doTest(R.color.generic_item, Icons.NOT_KNOWN);
-    assertNotNull(ApplicationProvider.getApplicationContext()); //idiotic codacy compliance...
+    assertNotNull(ApplicationProvider.getApplicationContext()); // idiotic codacy compliance...
   }
 
   @Test
@@ -68,7 +68,7 @@ public void testSetColorizeIconsGeneric() {
     doTestGeneric(R.color.primary_indigo, Icons.DOCUMENTS);
     doTestGeneric(R.color.primary_indigo, Icons.ENCRYPTED);
     doTestGeneric(R.color.primary_indigo, Icons.GIF);
-    assertNotNull(ApplicationProvider.getApplicationContext()); //idiotic codacy compliance...
+    assertNotNull(ApplicationProvider.getApplicationContext()); // idiotic codacy compliance...
   }
 
   private void doTest(@ColorInt int expected, int icon) {

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -59,6 +59,7 @@ public static void colorizeIcons(
         break;
       case Icons.NOT_KNOWN:
         background.setColor(Utils.getColor(context, R.color.generic_item));
+        break;
       default:
         background.setColor(defaultColor);
         break;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -77,7 +77,7 @@ public static void setMetadata(
         case TYPE_FTP:
           if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             notification.setCategory(Notification.CATEGORY_SERVICE);
-            notification.setVisibility(Notification.VISIBILITY_PUBLIC);
+            notification.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);
           }
           if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             notification.setPriority(Notification.PRIORITY_MAX);

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/AbstractCompressedHelperTaskTest.java
Patch:
@@ -36,7 +36,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
@@ -45,7 +44,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 27,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -42,7 +42,6 @@
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
@@ -53,7 +52,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class ExtractServiceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OpenMode;
 
@@ -42,7 +41,6 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     maxSdk = 27,
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class})
 public class OperationsTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -38,7 +38,6 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -49,7 +48,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
     maxSdk = 27)
 public class RootHelperTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -39,15 +39,13 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 
 /** Created by Rustam Khadipash on 31/3/2018. */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class CloudStreamSourceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -36,7 +36,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
@@ -48,7 +47,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class B0rkenZipTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -58,7 +57,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class CompressedHelperTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -43,7 +43,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
@@ -52,7 +51,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 14,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -32,7 +32,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowDateFormat;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OpenMode;
@@ -43,7 +42,6 @@
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowDateFormat.class},
     maxSdk = 27)
 public class FileListSorterTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -37,7 +37,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadow.api.Shadow;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.shadows.jcifs.smb.ShadowSmbFile;
 
@@ -48,7 +47,6 @@
 /** Created by Rustam Khadipash on 30/3/2018. */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowSmbFile.class},
     maxSdk = 27)
 public class StreamSourceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -39,15 +39,13 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public abstract class AbstractSftpServerTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -38,7 +38,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilitiesDatabase;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
@@ -54,7 +53,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
     maxSdk = 27)
 public class SshConnectionPoolTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -31,7 +31,6 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 
@@ -40,7 +39,6 @@
 @Ignore("Test skipped due to Robolectric unable to inflate SpeedDialView")
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.StorageDirectoryParcelable;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -44,7 +43,6 @@
 @Ignore("Test skipped due to Robolectric unable to inflate SpeedDialView")
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -31,7 +31,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilitiesDatabase;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
@@ -41,7 +40,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
     maxSdk = 27)
 public class ShadowCryptUtilTest {

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -28,12 +28,10 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class MainActivityTest {

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -42,7 +42,6 @@
 import org.robolectric.shadows.ShadowContentResolver;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
@@ -56,7 +55,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -30,14 +30,12 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.webkit.MimeTypeMap;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class IconsTest {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -239,7 +239,7 @@ private void showDialog(
 
     final MaterialDialog dialog = dialogBuilder.build();
     dialog.show();
-    if (filesToCopy.get(0).getParent().equals(path)) {
+    if (filesToCopy.get(0).getParent(context).equals(path)) {
       View negative = dialog.getActionButton(DialogAction.NEGATIVE);
       negative.setEnabled(false);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -535,7 +535,7 @@ boolean checkFiles(HybridFile hFile1, HybridFile hFile2) throws ShellNotRunningE
       return RootHelper.fileExists(hFile2.getPath());
     } else {
       ArrayList<HybridFileParcelable> baseFiles =
-          RootHelper.getFilesList(hFile1.getParent(), true, true, null);
+          RootHelper.getFilesList(hFile1.getParent(c), true, true, null);
       int i = -1;
       int index = -1;
       for (HybridFileParcelable b : baseFiles) {
@@ -546,7 +546,7 @@ boolean checkFiles(HybridFile hFile1, HybridFile hFile2) throws ShellNotRunningE
         }
       }
       ArrayList<HybridFileParcelable> baseFiles1 =
-          RootHelper.getFilesList(hFile1.getParent(), true, true, null);
+          RootHelper.getFilesList(hFile1.getParent(c), true, true, null);
       int i1 = -1;
       int index1 = -1;
       for (HybridFileParcelable b : baseFiles1) {

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -279,8 +279,7 @@ public List<String> doInBackground() {
                     } else {
                       OutputStream outputStream = targetSmbFile.getOutputStream();
                       bufferedOutputStream = new BufferedOutputStream(outputStream);
-                      retval.add(
-                          mainActivity.mainActivityHelper.parseSmbPath(targetSmbFile.getPath()));
+                      retval.add(HybridFile.parseSmbPath(targetSmbFile.getPath()));
                     }
                     break;
                   case SFTP:
@@ -1196,7 +1195,7 @@ private int getTemporaryAlbumId() {
     }
 
     private File installTemporaryTrack() throws IOException {
-      File externalFilesDir = getExternalFilesDir(context);
+      File externalFilesDir = context.getExternalFilesDir(null);
       if (externalFilesDir == null) {
         return null;
       }

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -800,7 +800,9 @@ public static boolean isPathAccessible(String dir, SharedPreferences pref) {
 
   public static boolean isRoot(
       String dir) { // TODO: 5/5/2017 hardcoding root might lead to problems down the line
-    return !dir.contains(OTGUtil.PREFIX_OTG) && !dir.startsWith("/storage");
+    return !dir.contains(OTGUtil.PREFIX_OTG)
+        && !dir.startsWith(OTGUtil.PREFIX_MEDIA_REMOVABLE)
+        && !dir.startsWith("/storage");
   }
 
   /** Converts ArrayList of HybridFileParcelable to ArrayList of File */

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1237,7 +1237,7 @@ public void onResume() {
     registerReceiver(mainActivityHelper.mNotificationReceiver, newFilter);
     registerReceiver(receiver2, new IntentFilter(TAG_INTENT_FILTER_GENERAL));
 
-    if (SDK_INT >= Build.VERSION_CODES.KITKAT && SDK_INT < Build.VERSION_CODES.N) {
+    if (SDK_INT >= Build.VERSION_CODES.KITKAT) {
       updateUsbInformation();
     }
   }
@@ -1508,10 +1508,9 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
     } else if (requestCode == REQUEST_CODE_SAF) {
       if (responseCode == Activity.RESULT_OK && intent.getData() != null) {
         // otg access
-        Uri usbOtgRoot = Uri.parse(intent.getData().toString());
+        Uri usbOtgRoot = intent.getData();
         SingletonUsbOtg.getInstance().setUsbOtgRoot(usbOtgRoot);
         getCurrentMainFragment().loadlist(OTGUtil.PREFIX_OTG, false, OpenMode.OTG);
-
         drawer.closeIfNotLocked();
         if (drawer.isLocked()) drawer.onDrawerClosed();
       } else {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -25,6 +25,7 @@
 import java.util.ArrayList;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.files.FileUtils;
 import com.amaze.filemanager.ui.activities.MainActivity;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
@@ -341,10 +342,10 @@ public void updatePath(
 
     switch (openmode) {
       case SFTP:
-        newPath = mainActivityHelper.parseSftpPath(news);
+        newPath = HybridFile.parseSftpPath(news);
         break;
       case SMB:
-        newPath = mainActivityHelper.parseSmbPath(news);
+        newPath = HybridFile.parseSmbPath(news);
         break;
       case OTG:
         newPath = mainActivityHelper.parseOTGPath(news);

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -51,6 +51,8 @@ public class OTGUtil {
 
   public static final String PREFIX_OTG = "otg:/";
 
+  public static final String PREFIX_MEDIA_REMOVABLE = "/mnt/media_rw";
+
   /**
    * Returns an array of list of files at a specific path in OTG
    *

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -628,7 +628,6 @@ public static boolean mktextfile(String data, String path, String fileName) {
     try {
       f.createNewFile();
       out = new FileOutputStream(f, false);
-
       outputWriter = new OutputStreamWriter(out);
       outputWriter.write(data);
       return true;

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -591,7 +591,7 @@ private void initFabToSave(final ArrayList<Uri> uris) {
                         + "\nURL: "
                         + extras.getString(Intent.EXTRA_TEXT);
                 String fileName = Long.toString(System.currentTimeMillis());
-                FileUtil.mktextfile(data, getCurrentMainFragment().getCurrentPath(), fileName);
+                AppConfig.runInBackground(() -> FileUtil.mktextfile(data, getCurrentMainFragment().getCurrentPath(), fileName));
 
                 Toast.makeText(
                         MainActivity.this,

File: app/src/main/java/com/amaze/filemanager/application/AppConfig.java
Patch:
@@ -87,12 +87,11 @@ public void onCreate() {
     utilsProvider = new UtilitiesProvider(this);
     utilsHandler = new UtilsHandler(this, utilitiesDatabase);
 
-    // FIXME: in unit tests when AppConfig is rapidly created/destroyed this call will cause
-    // IllegalThreadStateException.
-    // Until this gets fixed only one test case can be run in a time. - Raymond, 24/4/2018
     backgroundHandlerThread.start();
     backgroundHandler = new Handler(backgroundHandlerThread.getLooper());
 
+    runInBackground(jcifs.Config::registerSmbURLHandler);
+
     // disabling file exposure method check for api n+
     StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
     StrictMode.setVmPolicy(builder.build());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -207,7 +207,6 @@ public void afterTextChanged(Editable s) {
       String userp = "", passp = "", ipp = "", domainp = "";
       conName.setText(name);
       try {
-        jcifs.Config.registerSmbURLHandler();
         URL a = new URL(path);
         String userinfo = a.getUserInfo();
         if (userinfo != null) {

File: app/src/main/java/com/amaze/filemanager/application/AppConfig.java
Patch:
@@ -87,12 +87,11 @@ public void onCreate() {
     utilsProvider = new UtilitiesProvider(this);
     utilsHandler = new UtilsHandler(this, utilitiesDatabase);
 
-    // FIXME: in unit tests when AppConfig is rapidly created/destroyed this call will cause
-    // IllegalThreadStateException.
-    // Until this gets fixed only one test case can be run in a time. - Raymond, 24/4/2018
     backgroundHandlerThread.start();
     backgroundHandler = new Handler(backgroundHandlerThread.getLooper());
 
+    runInBackground(jcifs.Config::registerSmbURLHandler);
+
     // disabling file exposure method check for api n+
     StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
     StrictMode.setVmPolicy(builder.build());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -207,7 +207,6 @@ public void afterTextChanged(Editable s) {
       String userp = "", passp = "", ipp = "", domainp = "";
       conName.setText(name);
       try {
-        jcifs.Config.registerSmbURLHandler();
         URL a = new URL(path);
         String userinfo = a.getUserInfo();
         if (userinfo != null) {

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -287,14 +287,16 @@ public static String deriveSftpPathFrom(
         : String.format("ssh://%s:%s@%s:%d", username, password, hostname, port);
   }
 
-  public static boolean isDirectory(@NonNull SFTPClient client, @NonNull RemoteResourceInfo info) {
+  public static boolean isDirectory(@NonNull SFTPClient client, @NonNull RemoteResourceInfo info)
+      throws IOException {
     boolean isDirectory = info.isDirectory();
     if (info.getAttributes().getType().equals(FileMode.Type.SYMLINK)) {
       try {
         FileAttributes symlinkAttrs = client.stat(info.getPath());
         isDirectory = symlinkAttrs.getType().equals(FileMode.Type.DIRECTORY);
       } catch (IOException ifSymlinkIsBroken) {
         Log.w(TAG, String.format("Symbolic link %s is broken, skipping", info.getPath()));
+        throw ifSymlinkIsBroken;
       }
     }
     return isDirectory;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -239,7 +239,7 @@ private void showDialog(
 
     final MaterialDialog dialog = dialogBuilder.build();
     dialog.show();
-    if (filesToCopy.get(0).getParent().equals(path)) {
+    if (filesToCopy.get(0).getParent(context).equals(path)) {
       View negative = dialog.getActionButton(DialogAction.NEGATIVE);
       negative.setEnabled(false);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -535,7 +535,7 @@ boolean checkFiles(HybridFile hFile1, HybridFile hFile2) throws ShellNotRunningE
       return RootHelper.fileExists(hFile2.getPath());
     } else {
       ArrayList<HybridFileParcelable> baseFiles =
-          RootHelper.getFilesList(hFile1.getParent(), true, true, null);
+          RootHelper.getFilesList(hFile1.getParent(c), true, true, null);
       int i = -1;
       int index = -1;
       for (HybridFileParcelable b : baseFiles) {
@@ -546,7 +546,7 @@ boolean checkFiles(HybridFile hFile1, HybridFile hFile2) throws ShellNotRunningE
         }
       }
       ArrayList<HybridFileParcelable> baseFiles1 =
-          RootHelper.getFilesList(hFile1.getParent(), true, true, null);
+          RootHelper.getFilesList(hFile1.getParent(c), true, true, null);
       int i1 = -1;
       int index1 = -1;
       for (HybridFileParcelable b : baseFiles1) {

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -1170,7 +1170,7 @@ private int getTemporaryAlbumId() {
     }
 
     private File installTemporaryTrack() throws IOException {
-      File externalFilesDir = getExternalFilesDir(context);
+      File externalFilesDir = context.getExternalFilesDir(null);
       if (externalFilesDir == null) {
         return null;
       }

File: app/src/main/java/com/amaze/filemanager/filesystem/files/FileUtils.java
Patch:
@@ -800,7 +800,9 @@ public static boolean isPathAccessible(String dir, SharedPreferences pref) {
 
   public static boolean isRoot(
       String dir) { // TODO: 5/5/2017 hardcoding root might lead to problems down the line
-    return !dir.contains(OTGUtil.PREFIX_OTG) && !dir.startsWith("/storage");
+    return !dir.contains(OTGUtil.PREFIX_OTG)
+        && !dir.startsWith(OTGUtil.PREFIX_MEDIA_REMOVABLE)
+        && !dir.startsWith("/storage");
   }
 
   /** Converts ArrayList of HybridFileParcelable to ArrayList of File */

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -1213,7 +1213,7 @@ public void onResume() {
     registerReceiver(mainActivityHelper.mNotificationReceiver, newFilter);
     registerReceiver(receiver2, new IntentFilter(TAG_INTENT_FILTER_GENERAL));
 
-    if (SDK_INT >= Build.VERSION_CODES.KITKAT && SDK_INT < Build.VERSION_CODES.N) {
+    if (SDK_INT >= Build.VERSION_CODES.KITKAT) {
       updateUsbInformation();
     }
   }
@@ -1484,10 +1484,9 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
     } else if (requestCode == REQUEST_CODE_SAF) {
       if (responseCode == Activity.RESULT_OK && intent.getData() != null) {
         // otg access
-        Uri usbOtgRoot = Uri.parse(intent.getData().toString());
+        Uri usbOtgRoot = intent.getData();
         SingletonUsbOtg.getInstance().setUsbOtgRoot(usbOtgRoot);
         getCurrentMainFragment().loadlist(OTGUtil.PREFIX_OTG, false, OpenMode.OTG);
-
         drawer.closeIfNotLocked();
         if (drawer.isLocked()) drawer.onDrawerClosed();
       } else {

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -51,6 +51,8 @@ public class OTGUtil {
 
   public static final String PREFIX_OTG = "otg:/";
 
+  public static final String PREFIX_MEDIA_REMOVABLE = "/mnt/media_rw";
+
   /**
    * Returns an array of list of files at a specific path in OTG
    *

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -529,9 +529,9 @@ private void checkForExternalIntent(Intent intent) {
           uris.add(uri);
           initFabToSave(uris);
         }
-          // disable screen rotation just for convenience purpose
-          // TODO: Support screen rotation when saving a file
-          Utils.disableScreenRotation(this);
+        // disable screen rotation just for convenience purpose
+        // TODO: Support screen rotation when saving a file
+        Utils.disableScreenRotation(this);
 
       } else if (actionIntent.equals(Intent.ACTION_SEND_MULTIPLE) && type != null) {
         // save multiple files to filesystem

File: app/src/test/java/com/amaze/filemanager/application/AppConfigTest.java
Patch:
@@ -32,7 +32,6 @@
 import org.junit.After;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
 
 import com.amaze.filemanager.R;
@@ -46,7 +45,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = 28)
 public class AppConfigTest {
 
   @After

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTaskTest.java
Patch:
@@ -51,9 +51,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class DbViewerTaskTest {
 
   private WebView webView;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstractionTest.java
Patch:
@@ -59,9 +59,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class WriteFileAbstractionTest {
 
   private static final String contents = "This is modified data";

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -51,9 +51,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class ExtractServiceTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/EditableFileAbstractionTest.java
Patch:
@@ -44,9 +44,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class EditableFileAbstractionTest {
 
   @Test(expected = IllegalArgumentException.class)

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -40,9 +40,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    maxSdk = 28,
-    shadows = {ShadowMultiDex.class})
+@Config(shadows = {ShadowMultiDex.class})
 public class OperationsTest {
 
   private File storageRoot = Environment.getExternalStorageDirectory();

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -48,9 +48,7 @@
 import eu.chainfire.libsuperuser.Shell;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowShellInteractive.class})
 public class RootHelperTest {
 
   private static final File sysroot =

File: app/src/test/java/com/amaze/filemanager/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -46,9 +46,7 @@
 
 /** Created by Rustam Khadipash on 31/3/2018. */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class CloudStreamSourceTest {
   private CloudStreamSource cs;
   private String testFilePath;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -47,9 +47,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -57,9 +57,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class CompressedHelperTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -53,8 +53,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 14,
-    maxSdk = 28)
+    minSdk = 14)
 public abstract class AbstractExtractorTest {
 
   protected abstract Class<? extends Extractor> extractorClass();

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -42,9 +42,7 @@
  * "*{slash}*"
  */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowDateFormat.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowDateFormat.class})
 public class FileListSorterTest {
   /**
    * Purpose: when dirsOnTop is 0, if file1 is directory && file2 is not directory, result is -1

File: app/src/test/java/com/amaze/filemanager/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -47,9 +47,7 @@
 
 /** Created by Rustam Khadipash on 30/3/2018. */
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowSmbFile.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowSmbFile.class})
 public class StreamSourceTest {
   private SmbFile file;
   private StreamSource ss;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -46,9 +46,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public abstract class AbstractSftpServerTest {
 
   protected SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -52,9 +52,7 @@
 import net.schmizz.sshj.common.SecurityUtils;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
 public class SshConnectionPoolTest {
 
   private SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -41,8 +41,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 24,
-    maxSdk = 28)
+    minSdk = 24)
 public class SingletonUsbOtgTest {
   @Test
   public void usbConnectionTest() {

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -45,8 +45,7 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     shadows = {ShadowMultiDex.class},
-    minSdk = 24,
-    maxSdk = 28)
+    minSdk = 24)
 public class UsbOtgTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -40,9 +40,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
 public class ShadowCryptUtilTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -21,7 +21,6 @@
 package com.amaze.filemanager.ui.activities;
 
 import static android.os.Build.VERSION_CODES.N;
-import static android.os.Build.VERSION_CODES.P;
 import static androidx.test.core.app.ActivityScenario.launch;
 import static org.awaitility.Awaitility.await;
 import static org.junit.Assert.assertEquals;
@@ -64,8 +63,7 @@
       ShadowStorageManager.class,
       ShadowCryptUtil.class,
       ShadowSmbFile.class
-    },
-    maxSdk = P)
+    })
 /*
  * Need to make LooperMode PAUSED and flush the main looper before activity can show up.
  * @see {@link LooperMode.Mode.PAUSED}
@@ -131,6 +129,7 @@ public void testUpdateSmbExceptionShouldNotThrowNPE() {
                             .get(0)[0]
                             .equals(newName));
             List<String[]> verify = AppConfig.getInstance().getUtilsHandler().getSmbList();
+            assertEquals(1, verify.size());
             String[] entry = verify.get(0);
             assertEquals(path, entry[1]);
 

File: app/src/test/java/com/amaze/filemanager/ui/activities/PreferencesActivityTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.activities;
 
-import static android.os.Build.VERSION_CODES.P;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_BOOKMARKS_ADDED;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_CHANGEPATHS;
 import static com.amaze.filemanager.ui.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
@@ -48,7 +47,6 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.annotation.Config;
 
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
@@ -59,7 +57,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = P)
 public class PreferencesActivityTest {
 
   private static final String[] DEFAULT_FALSE_PREFS =

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -52,9 +52,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class TextEditorActivityTest {
 
   private final String fileContents = "fsdfsdfs";

File: app/src/test/java/com/amaze/filemanager/ui/fragments/CloudSheetFragmentTest.java
Patch:
@@ -36,7 +36,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class CloudSheetFragmentTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -36,9 +36,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(
-    shadows = {ShadowMultiDex.class},
-    maxSdk = 28)
+@Config(shadows = {ShadowMultiDex.class})
 public class IconsTest {
 
   @Before

File: app/src/test/java/com/amaze/filemanager/ui/notifications/NotificationConstantsTest.java
Patch:
@@ -54,7 +54,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class NotificationConstantsTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/ui/views/WarnableTextInputValidatorTest.java
Patch:
@@ -20,7 +20,6 @@
 
 package com.amaze.filemanager.ui.views;
 
-import static android.os.Build.VERSION_CODES.P;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNull;
@@ -30,7 +29,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
-import org.robolectric.annotation.Config;
 
 import com.amaze.filemanager.R;
 
@@ -44,7 +42,6 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(maxSdk = P)
 public class WarnableTextInputValidatorTest {
 
   private Context context;

File: app/src/test/java/com/amaze/filemanager/utils/AnimUtilsTest.java
Patch:
@@ -43,7 +43,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class AnimUtilsTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/utils/SmbUtilTest.java
Patch:
@@ -40,7 +40,6 @@
 @RunWith(AndroidJUnit4.class)
 @Config(
     minSdk = 19,
-    maxSdk = 28,
     shadows = {ShadowCryptUtil.class})
 public class SmbUtilTest {
 

File: app/src/test/java/com/amaze/filemanager/utils/TinyDBTest.java
Patch:
@@ -35,7 +35,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class TinyDBTest {
 
   private SharedPreferences prefs;

File: app/src/test/java/com/amaze/filemanager/utils/UtilsTest.java
Patch:
@@ -53,7 +53,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
-@Config(minSdk = 19, maxSdk = 28)
+@Config(minSdk = 19)
 public class UtilsTest {
   @Test
   public void

File: app/src/main/java/com/amaze/filemanager/application/AppConfig.java
Patch:
@@ -87,12 +87,11 @@ public void onCreate() {
     utilsProvider = new UtilitiesProvider(this);
     utilsHandler = new UtilsHandler(this, utilitiesDatabase);
 
-    // FIXME: in unit tests when AppConfig is rapidly created/destroyed this call will cause
-    // IllegalThreadStateException.
-    // Until this gets fixed only one test case can be run in a time. - Raymond, 24/4/2018
     backgroundHandlerThread.start();
     backgroundHandler = new Handler(backgroundHandlerThread.getLooper());
 
+    runInBackground(jcifs.Config::registerSmbURLHandler);
+
     // disabling file exposure method check for api n+
     StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
     StrictMode.setVmPolicy(builder.build());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -207,7 +207,6 @@ public void afterTextChanged(Editable s) {
       String userp = "", passp = "", ipp = "", domainp = "";
       conName.setText(name);
       try {
-        jcifs.Config.registerSmbURLHandler();
         URL a = new URL(path);
         String userinfo = a.getUserInfo();
         if (userinfo != null) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -52,7 +52,7 @@ public DbViewerTask(
     this.dbViewerFragment = dbViewerFragment;
     stringBuilder = new StringBuilder();
 
-    webView.getSettings().setDefaultTextEncodingName("utf-8");
+    this.webView.getSettings().setDefaultTextEncodingName("utf-8");
   }
 
   @Override
@@ -62,10 +62,10 @@ protected void onPreExecute() {
     if (dbViewerFragment.databaseViewerActivity.getAppTheme().equals(AppTheme.DARK)
         || dbViewerFragment.databaseViewerActivity.getAppTheme().equals(AppTheme.BLACK)) {
 
-      htmlInit = "<html><body>" + "<table border='1' style='width:100%;color:#ffffff'>";
+      htmlInit = "<html><body><table border='1' style='width:100%;color:#ffffff'>";
     } else {
 
-      htmlInit = "<html><body>" + "<table border='1' style='width:100%;color:#000000'>";
+      htmlInit = "<html><body><table border='1' style='width:100%;color:#000000'>";
     }
     stringBuilder.append(htmlInit);
     dbViewerFragment.loadingText.setVisibility(View.VISIBLE);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ReadFileTask.java
Patch:
@@ -74,13 +74,13 @@ protected ReturnedValues doInBackground(Void... params) {
       InputStream inputStream = null;
 
       switch (fileAbstraction.scheme) {
-        case EditableFileAbstraction.SCHEME_CONTENT:
+        case CONTENT:
           if (fileAbstraction.uri == null)
             throw new NullPointerException("Something went really wrong!");
 
           inputStream = contentResolver.openInputStream(fileAbstraction.uri);
           break;
-        case EditableFileAbstraction.SCHEME_FILE:
+        case FILE:
           final HybridFileParcelable hybridFileParcelable = fileAbstraction.hybridFileParcelable;
           if (hybridFileParcelable == null)
             throw new NullPointerException("Something went really wrong!");

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/WriteFileAbstraction.java
Patch:
@@ -79,7 +79,7 @@ protected Integer doInBackground(Void... voids) {
       OutputStream outputStream;
 
       switch (fileAbstraction.scheme) {
-        case EditableFileAbstraction.SCHEME_CONTENT:
+        case CONTENT:
           if (fileAbstraction.uri == null)
             throw new NullPointerException("Something went really wrong!");
 
@@ -90,7 +90,7 @@ protected Integer doInBackground(Void... voids) {
           }
 
           break;
-        case EditableFileAbstraction.SCHEME_FILE:
+        case FILE:
           final HybridFileParcelable hybridFileParcelable = fileAbstraction.hybridFileParcelable;
           if (hybridFileParcelable == null)
             throw new NullPointerException("Something went really wrong!");

File: app/src/test/java/com/amaze/filemanager/ui/colors/ColorUtilsTest.java
Patch:
@@ -54,7 +54,7 @@ public void testSetColorizeIcons() {
     doTest(R.color.archive_item, Icons.COMPRESSED);
     doTest(R.color.apk_item, Icons.APK);
     doTest(R.color.generic_item, Icons.NOT_KNOWN);
-    assertNotNull(ApplicationProvider.getApplicationContext()); //idiotic codacy compliance...
+    assertNotNull(ApplicationProvider.getApplicationContext()); // idiotic codacy compliance...
   }
 
   @Test
@@ -68,7 +68,7 @@ public void testSetColorizeIconsGeneric() {
     doTestGeneric(R.color.primary_indigo, Icons.DOCUMENTS);
     doTestGeneric(R.color.primary_indigo, Icons.ENCRYPTED);
     doTestGeneric(R.color.primary_indigo, Icons.GIF);
-    assertNotNull(ApplicationProvider.getApplicationContext()); //idiotic codacy compliance...
+    assertNotNull(ApplicationProvider.getApplicationContext()); // idiotic codacy compliance...
   }
 
   private void doTest(@ColorInt int expected, int icon) {

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -59,6 +59,7 @@ public static void colorizeIcons(
         break;
       case Icons.NOT_KNOWN:
         background.setColor(Utils.getColor(context, R.color.generic_item));
+        break;
       default:
         background.setColor(defaultColor);
         break;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -77,7 +77,7 @@ public static void setMetadata(
         case TYPE_FTP:
           if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             notification.setCategory(Notification.CATEGORY_SERVICE);
-            notification.setVisibility(Notification.VISIBILITY_PUBLIC);
+            notification.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);
           }
           if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             notification.setPriority(Notification.PRIORITY_MAX);

File: app/src/main/java/com/amaze/filemanager/application/AppConfig.java
Patch:
@@ -87,12 +87,11 @@ public void onCreate() {
     utilsProvider = new UtilitiesProvider(this);
     utilsHandler = new UtilsHandler(this, utilitiesDatabase);
 
-    // FIXME: in unit tests when AppConfig is rapidly created/destroyed this call will cause
-    // IllegalThreadStateException.
-    // Until this gets fixed only one test case can be run in a time. - Raymond, 24/4/2018
     backgroundHandlerThread.start();
     backgroundHandler = new Handler(backgroundHandlerThread.getLooper());
 
+    runInBackground(jcifs.Config::registerSmbURLHandler);
+
     // disabling file exposure method check for api n+
     StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
     StrictMode.setVmPolicy(builder.build());

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -207,7 +207,6 @@ public void afterTextChanged(Editable s) {
       String userp = "", passp = "", ipp = "", domainp = "";
       conName.setText(name);
       try {
-        jcifs.Config.registerSmbURLHandler();
         URL a = new URL(path);
         String userinfo = a.getUserInfo();
         if (userinfo != null) {

File: app/src/main/java/com/amaze/filemanager/ui/activities/MainActivity.java
Patch:
@@ -838,7 +838,7 @@ public void invalidatePasteSnackbar(boolean showSnackbar) {
 
   public void exit() {
     if (backPressedToExitOnce) {
-      SshConnectionPool.getInstance().expungeAllConnections();
+      SshConnectionPool.getInstance().shutdown();
       finish();
       if (isRootExplorer()) {
         // TODO close all shells
@@ -1298,7 +1298,7 @@ protected void onDestroy() {
     // TODO: 6/5/2017 Android may choose to not call this method before destruction
     // TODO: https://developer.android.com/reference/android/app/Activity.html#onDestroy%28%29
     closeInteractiveShell();
-    SshConnectionPool.getInstance().expungeAllConnections();
+    SshConnectionPool.getInstance().shutdown();
   }
 
   /** Closes the interactive shell and threads associated */

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -75,7 +75,7 @@ public void setUp() throws IOException {
 
   @After
   public void tearDown() throws IOException {
-    SshConnectionPool.getInstance().expungeAllConnections();
+    SshConnectionPool.getInstance().shutdown();
     if (server != null && server.isOpen()) {
       server.stop(true);
     }

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/AbstractCompressedHelperTaskTest.java
Patch:
@@ -36,7 +36,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
@@ -45,7 +44,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 27,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -42,7 +42,6 @@
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
@@ -53,7 +52,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class ExtractServiceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OpenMode;
 
@@ -42,7 +41,6 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     maxSdk = 27,
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class})
 public class OperationsTest {
 

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -38,7 +38,6 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -49,7 +48,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
     maxSdk = 27)
 public class RootHelperTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/cloud/CloudStreamSourceTest.java
Patch:
@@ -39,15 +39,13 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 
 /** Created by Rustam Khadipash on 31/3/2018. */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class CloudStreamSourceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -36,7 +36,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
@@ -48,7 +47,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class B0rkenZipTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.Bzip2Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.GzipExtractor;
@@ -58,7 +57,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class CompressedHelperTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -43,7 +43,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
@@ -52,7 +51,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 14,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/filesystem/files/FileListSorterTest.java
Patch:
@@ -32,7 +32,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowDateFormat;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OpenMode;
@@ -43,7 +42,6 @@
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowDateFormat.class},
     maxSdk = 27)
 public class FileListSorterTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/smbstreamer/StreamSourceTest.java
Patch:
@@ -37,7 +37,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadow.api.Shadow;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.shadows.jcifs.smb.ShadowSmbFile;
 
@@ -48,7 +47,6 @@
 /** Created by Rustam Khadipash on 30/3/2018. */
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowSmbFile.class},
     maxSdk = 27)
 public class StreamSourceTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -39,15 +39,13 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.os.Environment;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public abstract class AbstractSftpServerTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -38,7 +38,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilitiesDatabase;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
@@ -54,7 +53,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
     maxSdk = 27)
 public class SshConnectionPoolTest {

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -31,7 +31,6 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
 
@@ -40,7 +39,6 @@
 @Ignore("Test skipped due to Robolectric unable to inflate SpeedDialView")
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -33,7 +33,6 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.StorageDirectoryParcelable;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.ui.activities.MainActivity;
@@ -44,7 +43,6 @@
 @Ignore("Test skipped due to Robolectric unable to inflate SpeedDialView")
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -31,7 +31,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilitiesDatabase;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
@@ -41,7 +40,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class, ShadowCryptUtil.class},
     maxSdk = 27)
 public class ShadowCryptUtilTest {

File: app/src/test/java/com/amaze/filemanager/ui/activities/MainActivityTest.java
Patch:
@@ -28,12 +28,10 @@
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class MainActivityTest {

File: app/src/test/java/com/amaze/filemanager/ui/activities/TextEditorActivityTest.java
Patch:
@@ -42,7 +42,6 @@
 import org.robolectric.shadows.ShadowContentResolver;
 import org.robolectric.shadows.ShadowEnvironment;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.application.AppConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
@@ -56,7 +55,6 @@
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     minSdk = 24,
     maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -30,14 +30,12 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
 
-import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.webkit.MimeTypeMap;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(
-    constants = BuildConfig.class,
     shadows = {ShadowMultiDex.class},
     maxSdk = 27)
 public class IconsTest {

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -81,7 +81,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     setRetainInstance(true);
     MainActivity mainActivity = (MainActivity) getActivity();
     mainActivity.getAppbar().setTitle(R.string.apps);
-    mainActivity.floatingActionButton.hide();
+    mainActivity.getFAB().hide();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
     vl = getListView();

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -374,7 +374,7 @@ public void onDestroyView() {
   public void onResume() {
     super.onResume();
 
-    mainActivity.floatingActionButton.hide();
+    mainActivity.getFAB().hide();
     Intent intent = new Intent(getActivity(), ExtractService.class);
     getActivity().bindService(intent, mServiceConnection, 0);
   }

File: app/src/main/java/com/amaze/filemanager/fragments/FtpServerFragment.java
Patch:
@@ -163,7 +163,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     super.onActivityCreated(savedInstanceState);
     setRetainInstance(true);
     mainActivity.getAppbar().setTitle(R.string.ftp);
-    mainActivity.floatingActionButton.hide();
+    mainActivity.getFAB().hide();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -148,7 +148,7 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
 
     setRetainInstance(true);
     mainActivity.getAppbar().setTitle(R.string.process_viewer);
-    mainActivity.floatingActionButton.hide();
+    mainActivity.getFAB().hide();
     mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
     mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1677,7 +1677,6 @@ public PasteHelper getPaste() {
 
   public void setPaste(PasteHelper p) {
     pasteHelper = p;
-    supportInvalidateOptionsMenu();
   }
 
   @Override

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -744,7 +744,6 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 
                 PasteHelper pasteHelper = new PasteHelper(getMainActivity(), op, copies);
                 getMainActivity().setPaste(pasteHelper);
-
                 mode.finish();
                 return true;
               }

File: app/src/main/java/com/amaze/filemanager/filesystem/PasteHelper.java
Patch:
@@ -165,7 +165,8 @@ private Spanned getSnackbarContent() {
                 ? mainActivity.getString(R.string.copy)
                 : mainActivity.getString(R.string.move));
     operationText = operationText.concat(": ");
-    int foldersCount = 0, filesCount = 0;
+    int foldersCount = 0;
+    int filesCount = 0;
     for (HybridFileParcelable fileParcelable : paths) {
       if (fileParcelable.isDirectory(mainActivity.getApplicationContext())) {
         foldersCount++;

File: app/src/main/java/com/amaze/filemanager/asynchronous/AbstractRepeatingRunnable.java
Patch:
@@ -42,7 +42,7 @@ public AbstractRepeatingRunnable(
   }
 
   public boolean isAlive() {
-    return handle.isDone();
+    return !handle.isDone();
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/asynchronous/management/ServiceWatcherUtil.java
Patch:
@@ -164,7 +164,7 @@ public void run() {
    * avoids posting any callback after service has stopped.
    */
   public void stopWatch() {
-    if (watcherRepeatingRunnable.isAlive()) {
+    if (watcherRepeatingRunnable != null && watcherRepeatingRunnable.isAlive()) {
       watcherRepeatingRunnable.cancel(true);
     }
   }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -165,7 +165,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
     // delete file entry from encrypted database
     for (HybridFileParcelable file : files) {
       if (file.getName(cd).endsWith(CryptUtil.CRYPT_EXTENSION)) {
-        CryptHandler handler = new CryptHandler(cd);
+        CryptHandler handler = CryptHandler.getInstance();
         handler.clear(file.getPath());
       }
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -450,7 +450,7 @@ else if (cursor.getCount() > 0 && cursor.moveToFirst()) {
   }
 
   private ArrayList<LayoutElementParcelable> listRecent() {
-    UtilsHandler utilsHandler = new UtilsHandler(context);
+    UtilsHandler utilsHandler = AppConfig.getInstance().getUtilsHandler();
     final LinkedList<String> paths = utilsHandler.getHistoryLinkedList();
     ArrayList<LayoutElementParcelable> songs = new ArrayList<>();
     for (String f : paths) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -31,7 +31,7 @@
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.asynchronous.services.CopyService;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.database.models.EncryptedEntry;
+import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -195,8 +195,7 @@ public void onPostExecute(Boolean movedCorrectly) {
               for (HybridFileParcelable file : files.get(i)) {
                 if (file.getName(context).endsWith(CryptUtil.CRYPT_EXTENSION)) {
                   try {
-
-                    CryptHandler cryptHandler = new CryptHandler(context);
+                    CryptHandler cryptHandler = CryptHandler.getInstance();
                     EncryptedEntry oldEntry = cryptHandler.findEntry(file.getPath());
                     EncryptedEntry newEntry = new EncryptedEntry();
                     newEntry.setId(oldEntry.getId());

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -28,7 +28,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
 import com.amaze.filemanager.asynchronous.management.ServiceWatcherUtil;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.database.models.EncryptedEntry;
+import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
@@ -319,7 +319,7 @@ private void findAndReplaceEncryptedEntry(HybridFileParcelable sourceFile) {
         if (sourceFile.getName(c).endsWith(CryptUtil.CRYPT_EXTENSION)) {
           try {
 
-            CryptHandler cryptHandler = new CryptHandler(getApplicationContext());
+            CryptHandler cryptHandler = CryptHandler.getInstance();
             EncryptedEntry oldEntry = cryptHandler.findEntry(sourceFile.getPath());
             EncryptedEntry newEntry = new EncryptedEntry();
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -63,7 +63,7 @@ public void onCreate(Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     activity = (PreferencesActivity) getActivity();
 
-    utilsHandler = new UtilsHandler(getActivity());
+    utilsHandler = AppConfig.getInstance().getUtilsHandler();
     dataUtils = DataUtils.getInstance();
 
     // Load the preferences from an XML resource

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -49,7 +49,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.LoadFolderSpaceDataTask;
 import com.amaze.filemanager.asynchronous.services.EncryptService;
 import com.amaze.filemanager.database.SortHandler;
-import com.amaze.filemanager.database.models.Sort;
+import com.amaze.filemanager.database.models.explorer.Sort;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
@@ -1209,7 +1209,7 @@ private static void onSortTypeSelected(
       MaterialDialog dialog,
       boolean desc) {
     final int sortType = desc ? dialog.getSelectedIndex() + 4 : dialog.getSelectedIndex();
-    SortHandler sortHandler = new SortHandler(m.getContext());
+    SortHandler sortHandler = SortHandler.getInstance();
     if (onlyThisFloders.contains(m.getCurrentPath())) {
       Sort oldSort = sortHandler.findEntry(m.getCurrentPath());
       Sort newSort = new Sort(m.getCurrentPath(), sortType);

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -31,7 +31,7 @@
 import com.amaze.filemanager.asynchronous.services.ZipService;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.database.models.EncryptedEntry;
+import com.amaze.filemanager.database.models.explorer.EncryptedEntry;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
@@ -339,8 +339,7 @@ public void done(final HybridFile hFile, final boolean b) {
                     // update the database entry to reflect rename for encrypted file
                     if (oldPath.endsWith(CryptUtil.CRYPT_EXTENSION)) {
                       try {
-
-                        CryptHandler cryptHandler = new CryptHandler(context);
+                        CryptHandler cryptHandler = CryptHandler.getInstance();
                         EncryptedEntry oldEntry = cryptHandler.findEntry(oldPath);
                         EncryptedEntry newEntry = new EncryptedEntry();
                         newEntry.setId(oldEntry.getId());

File: app/src/main/java/com/amaze/filemanager/asynchronous/AbstractRepeatingRunnable.java
Patch:
@@ -42,7 +42,7 @@ public AbstractRepeatingRunnable(
   }
 
   public boolean isAlive() {
-    return handle.isDone();
+    return !handle.isDone();
   }
 
   /**

File: app/src/main/java/com/amaze/filemanager/asynchronous/management/ServiceWatcherUtil.java
Patch:
@@ -164,7 +164,7 @@ public void run() {
    * avoids posting any callback after service has stopped.
    */
   public void stopWatch() {
-    if (watcherRepeatingRunnable.isAlive()) {
+    if (watcherRepeatingRunnable != null && watcherRepeatingRunnable.isAlive()) {
       watcherRepeatingRunnable.cancel(true);
     }
   }

File: app/src/main/java/com/amaze/filemanager/database/daos/TabDao.java
Patch:
@@ -42,7 +42,7 @@ public interface TabDao {
   public void insertTab(Tab tab);
 
   @Transaction
-  @Query("DELETE FROM tab WHERE tab_no IN (1,2);")
+  @Query("DELETE FROM tab;")
   public void clear();
 
   @Query("SELECT * FROM tab WHERE tab_no = :tabNo")

File: app/src/main/java/com/amaze/filemanager/database/typeconverters/EncryptedStringTypeConverter.java
Patch:
@@ -46,7 +46,7 @@ public static StringWrapper toPassword(String encryptedStringEntryInDb) {
           CryptUtil.decryptPassword(AppConfig.getInstance(), encryptedStringEntryInDb));
     } catch (Exception e) {
       android.util.Log.e(TAG, "Error decrypting password", e);
-      return null;
+      return new StringWrapper(encryptedStringEntryInDb);
     }
   }
 
@@ -56,7 +56,7 @@ public static String fromPassword(StringWrapper unencryptedPasswordString) {
       return CryptUtil.encryptPassword(AppConfig.getInstance(), unencryptedPasswordString.value);
     } catch (Exception e) {
       android.util.Log.e(TAG, "Error encrypting password", e);
-      return null;
+      return unencryptedPasswordString.value;
     }
   }
 }

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -43,9 +43,9 @@
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.database.models.OperationData;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
-import com.amaze.filemanager.test.TestUtils;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowCryptUtil;
+import com.amaze.filemanager.test.TestUtils;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -331,7 +331,7 @@ private void saveSshConnectionSettings(
       utilsHandler.saveToDatabase(
           new OperationData(
               UtilsHandler.Operation.SFTP,
-              fullUri.toString(),
+              SshClientUtils.encryptSshPathAsNecessary(fullUri.toString()),
               "Test",
               SecurityUtils.getFingerprint(hostKeyProvider.getKeyPair().getPublic()),
               null,
@@ -340,7 +340,7 @@ private void saveSshConnectionSettings(
       utilsHandler.saveToDatabase(
           new OperationData(
               UtilsHandler.Operation.SFTP,
-              fullUri.toString(),
+              SshClientUtils.encryptSshPathAsNecessary(fullUri.toString()),
               "Test",
               SecurityUtils.getFingerprint(hostKeyProvider.getKeyPair().getPublic()),
               "id_rsa",

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -74,7 +74,7 @@ public void testWithUtilsHandler() {
 
     TestUtils.flushAppConfigHandlerThread();
 
-    fingerprint.equals(utilsHandler.getSshHostKey(url));
+    assertEquals(fingerprint, utilsHandler.getSshHostKey(url));
     utilitiesDatabase.close();
   }
 }

File: app/src/test/java/com/amaze/filemanager/test/TestUtils.java
Patch:
@@ -58,7 +58,7 @@ public static void flushAppConfigHandlerThread() {
       f.setAccessible(true);
       Handler h = (Handler) f.get(null);
       Scheduler scheduler = shadowOf(h.getLooper()).getScheduler();
-      scheduler.advanceToNextPostedRunnable();
+      scheduler.advanceToLastPostedRunnable();
     } catch (NoSuchFieldException | IllegalAccessException e) {
       throw new AssertionError("Unable to access backgroundHandler within AppConfig");
     }

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTaskTest.java
Patch:
@@ -28,7 +28,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import net.schmizz.sshj.userauth.password.PasswordFinder;
 import net.schmizz.sshj.userauth.password.Resource;

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTaskTest2.java
Patch:
@@ -28,7 +28,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import net.schmizz.sshj.userauth.password.PasswordFinder;
 import net.schmizz.sshj.userauth.password.Resource;

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -20,9 +20,10 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
-import org.junit.*;
+import org.junit.Before;
+import org.junit.Test;
 
 import com.amaze.filemanager.utils.OpenMode;
 

File: app/src/androidTest/java/com/amaze/filemanager/ssh/SshClientUtilTest.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
 public class SshClientUtilTest {

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/CryptUtilTest.java
Patch:
@@ -20,8 +20,9 @@
 
 package com.amaze.filemanager.utils.files;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -35,6 +36,7 @@ public class CryptUtilTest {
 
   private Context context;
 
+  @Before
   public void setUp() {
     context = InstrumentationRegistry.getInstrumentation().getTargetContext();
   }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -485,7 +485,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -26,6 +26,7 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.fragments.CompressedExplorerFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
@@ -157,9 +158,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
           delete(cd, f.getPath());
         }
       } catch (Exception e) {
-        for (HybridFileParcelable f : files) {
-          FileUtils.scanFile(f.getFile(), cd);
-        }
+        FileUtils.scanFile(cd, files.toArray(new HybridFile[files.size()]));
       }
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -457,7 +457,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
           e.printStackTrace();
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(targetFile.getFile(), c);
+        FileUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/utils/files/GenericCopyUtil.java
Patch:
@@ -343,7 +343,9 @@ else if (outChannel != null) {
 
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
-      if (mTargetFile != null) FileUtils.scanFile(mTargetFile, mContext);
+      if (mTargetFile != null) {
+        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+      }
     }
   }
 

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTaskTest2.java
Patch:
@@ -33,6 +33,7 @@
 
 import android.os.Environment;
 
+@Ignore("Test skipped due to problem at upstream library.")
 public class SevenZipHelperTaskTest2 extends AbstractCompressedHelperTaskTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -50,7 +50,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class})
+    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
+    maxSdk = 27)
 public class RootHelperTest {
 
   private static final File sysroot =

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -49,7 +49,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+    shadows = {ShadowMultiDex.class},
+    maxSdk = 27)
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -38,7 +38,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+    shadows = {ShadowMultiDex.class},
+    maxSdk = 27)
 public class IconsTest {
 
   @Before

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -26,6 +26,7 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.fragments.CompressedExplorerFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
@@ -157,9 +158,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
           delete(cd, f.getPath());
         }
       } catch (Exception e) {
-        for (HybridFileParcelable f : files) {
-          FileUtils.scanFile(f.getFile(), cd);
-        }
+        FileUtils.scanFile(cd, files.toArray(new HybridFile[files.size()]));
       }
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -457,7 +457,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
           e.printStackTrace();
           failedFOps.add(sourceFile);
         }
-        FileUtils.scanFile(targetFile.getFile(), c);
+        FileUtils.scanFile(c, new HybridFile[] {targetFile});
       }
 
       private void copyFiles(

File: app/src/main/java/com/amaze/filemanager/utils/files/GenericCopyUtil.java
Patch:
@@ -343,7 +343,9 @@ else if (outChannel != null) {
 
       // If target file is copied onto the device and copy was successful, trigger media store
       // rescan
-      if (mTargetFile != null) FileUtils.scanFile(mTargetFile, mContext);
+      if (mTargetFile != null) {
+        FileUtils.scanFile(mContext, new HybridFile[] {mTargetFile});
+      }
     }
   }
 

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTaskTest.java
Patch:
@@ -28,7 +28,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import net.schmizz.sshj.userauth.password.PasswordFinder;
 import net.schmizz.sshj.userauth.password.Resource;

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTaskTest2.java
Patch:
@@ -28,7 +28,7 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import net.schmizz.sshj.userauth.password.PasswordFinder;
 import net.schmizz.sshj.userauth.password.Resource;

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -20,9 +20,10 @@
 
 package com.amaze.filemanager.filesystem;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
-import org.junit.*;
+import org.junit.Before;
+import org.junit.Test;
 
 import com.amaze.filemanager.utils.OpenMode;
 

File: app/src/androidTest/java/com/amaze/filemanager/ssh/SshClientUtilTest.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
 public class SshClientUtilTest {

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/CryptUtilTest.java
Patch:
@@ -20,8 +20,9 @@
 
 package com.amaze.filemanager.utils.files;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -35,6 +36,7 @@ public class CryptUtilTest {
 
   private Context context;
 
+  @Before
   public void setUp() {
     context = InstrumentationRegistry.getInstrumentation().getTargetContext();
   }

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTaskTest2.java
Patch:
@@ -33,6 +33,7 @@
 
 import android.os.Environment;
 
+@Ignore("Test skipped due to problem at upstream library.")
 public class SevenZipHelperTaskTest2 extends AbstractCompressedHelperTaskTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -50,7 +50,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class})
+    shadows = {ShadowMultiDex.class, ShadowShellInteractive.class},
+    maxSdk = 27)
 public class RootHelperTest {
 
   private static final File sysroot =

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -49,7 +49,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+    shadows = {ShadowMultiDex.class},
+    maxSdk = 27)
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -38,7 +38,8 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+    shadows = {ShadowMultiDex.class},
+    maxSdk = 27)
 public class IconsTest {
 
   @Before

File: app/src/androidTest/java/com/amaze/filemanager/database/UtilsHandlerTest.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.database;
 
+import static org.junit.Assert.assertEquals;
+
 import java.util.List;
 
 import org.junit.Before;

File: app/src/androidTest/java/com/amaze/filemanager/filesystem/HybridFileParcelableTest.java
Patch:
@@ -22,7 +22,6 @@
 
 import static org.junit.Assert.assertEquals;
 
-import org.junit.*;
 import org.junit.Before;
 import org.junit.Test;
 

File: app/src/androidTest/java/com/amaze/filemanager/ssh/SshClientUtilTest.java
Patch:
@@ -29,7 +29,6 @@
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 
 import androidx.test.ext.junit.runners.AndroidJUnit4;
-import androidx.test.runner.AndroidJUnit4;
 
 @RunWith(AndroidJUnit4.class)
 public class SshClientUtilTest {

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/CryptUtilTest.java
Patch:
@@ -20,6 +20,8 @@
 
 package com.amaze.filemanager.utils.files;
 
+import static org.junit.Assert.assertEquals;
+
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/GenericCopyUtilEspressoTest.java
Patch:
@@ -20,6 +20,9 @@
 
 package com.amaze.filemanager.utils.files;
 
+import static org.junit.Assert.assertArrayEquals;
+import static org.junit.Assert.assertEquals;
+
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.File;

File: app/src/test/java/com/amaze/filemanager/utils/SmbStreamer/StreamSourceTest.java
Patch:
@@ -29,7 +29,7 @@
 import java.io.OutputStream;
 import java.util.Arrays;
 
-import org.junit.*;
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: app/src/test/java/com/amaze/filemanager/utils/cloud/CloudStreamSourceTest.java
Patch:
@@ -32,7 +32,7 @@
 import java.nio.file.Paths;
 import java.util.Arrays;
 
-import org.junit.*;
+import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -151,7 +151,7 @@ public void requestPermission(
       ActivityCompat.requestPermissions(this, new String[] {permission}, code);
     } else {
       Snackbar.make(
-              getWindow().getDecorView(),
+              findViewById(R.id.content_frame),
               R.string.grantfailed,
               BaseTransientBottomBar.LENGTH_INDEFINITE)
           .setAction(

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -490,7 +490,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -374,7 +374,8 @@ public static void installApk(
       final @NonNull File f, final @NonNull PermissionsActivity permissionsActivity) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O
         && !permissionsActivity.getPackageManager().canRequestPackageInstalls()) {
-      permissionsActivity.requestInstallApkPermission(() -> installApk(f, permissionsActivity));
+      permissionsActivity.requestInstallApkPermission(
+          () -> installApk(f, permissionsActivity), true);
     }
 
     Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -490,7 +490,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -375,7 +375,8 @@ public static void installApk(
       final @NonNull File f, final @NonNull PermissionsActivity permissionsActivity) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O
         && !permissionsActivity.getPackageManager().canRequestPackageInstalls()) {
-      permissionsActivity.requestInstallApkPermission(() -> installApk(f, permissionsActivity));
+      permissionsActivity.requestInstallApkPermission(
+          () -> installApk(f, permissionsActivity), true);
     }
 
     Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -490,7 +490,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -375,7 +375,8 @@ public static void installApk(
       final @NonNull File f, final @NonNull PermissionsActivity permissionsActivity) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O
         && !permissionsActivity.getPackageManager().canRequestPackageInstalls()) {
-      permissionsActivity.requestInstallApkPermission(() -> installApk(f, permissionsActivity));
+      permissionsActivity.requestInstallApkPermission(
+          () -> installApk(f, permissionsActivity), true);
     }
 
     Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/CryptUtilTest.java
Patch:
@@ -25,6 +25,7 @@
 import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.platform.app.InstrumentationRegistry;
 
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -38,6 +39,7 @@ public class CryptUtilTest {
 
   private Context context;
 
+    @Before
     public void setUp(){
         context = InstrumentationRegistry.getInstrumentation().getTargetContext();
     }

File: app/src/test/java/com/amaze/filemanager/activities/MainActivityTest.java
Patch:
@@ -29,7 +29,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/AbstractCompressedHelperTaskTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -41,7 +41,7 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -24,14 +24,14 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -35,7 +35,7 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/CompressedHelperTest.java
Patch:
@@ -59,7 +59,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import android.content.Context;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -42,7 +42,7 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -37,7 +37,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import java.io.IOException;
 import java.net.BindException;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -37,7 +37,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import java.io.IOException;
 import java.io.StringWriter;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -30,7 +30,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -32,7 +32,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -30,7 +30,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -29,7 +29,7 @@
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/utils/SmbStreamer/StreamSourceTest.java
Patch:
@@ -30,7 +30,7 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadow.api.Shadow;
 import org.robolectric.shadows.ShadowUsbManager;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import java.io.BufferedReader;
 import java.io.File;

File: app/src/test/java/com/amaze/filemanager/utils/cloud/CloudStreamSourceTest.java
Patch:
@@ -28,7 +28,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 

File: app/src/test/java/com/amaze/filemanager/utils/files/FileListSorterTest.java
Patch:
@@ -22,7 +22,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
-import com.amaze.filemanager.test.ShadowMultiDex;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OpenMode;
 
 import org.junit.Test;

File: app/src/test/java/com/amaze/filemanager/activities/MainActivityTest.java
Patch:
@@ -32,9 +32,7 @@
 import com.amaze.filemanager.test.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class MainActivityTest {
 
     @Test @Ignore

File: app/src/test/java/com/amaze/filemanager/activities/TextEditorActivityTest.java
Patch:
@@ -56,7 +56,7 @@
 import android.widget.TextView;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(qualifiers = "en", constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 24, maxSdk = 27)
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 24, maxSdk = 27)
 /*
   Restrict minSdk to 24 since it'd fail at SDK 21-23.
   This may only be fixed by upgrading to Robolectric 4.

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -51,9 +51,7 @@
 import net.schmizz.sshj.common.SecurityUtils;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class, ShadowCryptUtil.class}, maxSdk = 27)
 public class SshConnectionPoolTest {
 
   private SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -39,7 +39,7 @@
 import android.net.Uri;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk=24, maxSdk = 27)
 public class SingletonUsbOtgTest {
   @Test
   @Config(minSdk = KITKAT)

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -43,7 +43,7 @@
 import android.text.TextUtils;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 24, maxSdk = 27)
 public class UsbOtgTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -39,9 +39,7 @@
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class, ShadowCryptUtil.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class, ShadowCryptUtil.class}, maxSdk = 27)
 public class ShadowCryptUtilTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/AbstractCompressedHelperTaskTest.java
Patch:
@@ -35,6 +35,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -41,6 +41,7 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
@@ -52,9 +53,7 @@
 import androidx.annotation.NonNull;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class ExtractServiceTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/OperationsTest.java
Patch:
@@ -32,6 +32,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -35,6 +35,7 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
@@ -47,9 +48,7 @@
 import android.os.Environment;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class B0rkenZipTest {
 
   private File zipfile1 = new File(Environment.getExternalStorageDirectory(), "zip-slip.zip");

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -42,6 +42,7 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -37,6 +37,7 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
@@ -45,9 +46,7 @@
 import android.os.Environment;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public abstract class AbstractSftpServerTest {
 
   protected SshServer server;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -37,6 +37,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/SingletonUsbOtgTest.java
Patch:
@@ -30,6 +30,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
@@ -38,9 +39,7 @@
 import android.net.Uri;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class SingletonUsbOtgTest {
   @Test
   @Config(minSdk = KITKAT)

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -32,6 +32,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
@@ -42,9 +43,7 @@
 import android.text.TextUtils;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(
-    constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class UsbOtgTest {
 
   @Test

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -30,6 +30,7 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -29,6 +29,7 @@
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
+import com.amaze.filemanager.test.ShadowMultiDex;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
@@ -38,7 +39,7 @@
 @RunWith(RobolectricTestRunner.class)
 @Config(
     constants = BuildConfig.class,
-    shadows = {ShadowMultiDex.class})
+    shadows = {ShadowMultiDex.class}, maxSdk = 27)
 public class IconsTest {
 
   @Before

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -490,7 +490,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -374,7 +374,8 @@ public static void installApk(
       final @NonNull File f, final @NonNull PermissionsActivity permissionsActivity) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O
         && !permissionsActivity.getPackageManager().canRequestPackageInstalls()) {
-      permissionsActivity.requestInstallApkPermission(() -> installApk(f, permissionsActivity));
+      permissionsActivity.requestInstallApkPermission(
+          () -> installApk(f, permissionsActivity), true);
     }
 
     Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -151,7 +151,7 @@ public void requestPermission(
       ActivityCompat.requestPermissions(this, new String[] {permission}, code);
     } else {
       Snackbar.make(
-              getWindow().getDecorView(),
+              findViewById(R.id.content_frame),
               R.string.grantfailed,
               BaseTransientBottomBar.LENGTH_INDEFINITE)
           .setAction(

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -160,7 +160,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
         // delete file entry from encrypted database
         for (HybridFileParcelable file : files) {
             if (file.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
-                CryptHandler handler = new CryptHandler();
+                CryptHandler handler = CryptHandler.getInstance();
                 handler.clear(file.getPath());
             }
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -181,8 +181,7 @@ public void onPostExecute(Boolean movedCorrectly) {
                     for (HybridFileParcelable file : files.get(i)) {
                         if (file.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
                             try {
-
-                                CryptHandler cryptHandler = new CryptHandler();
+                                CryptHandler cryptHandler = CryptHandler.getInstance();
                                 EncryptedEntry oldEntry = cryptHandler.findEntry(file.getPath());
                                 EncryptedEntry newEntry = new EncryptedEntry();
                                 newEntry.setId(oldEntry.getId());

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -306,7 +306,7 @@ private void findAndReplaceEncryptedEntry(HybridFileParcelable sourceFile) {
                 if (sourceFile.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
                     try {
 
-                        CryptHandler cryptHandler = new CryptHandler();
+                        CryptHandler cryptHandler = CryptHandler.getInstance();
                         EncryptedEntry oldEntry = cryptHandler.findEntry(sourceFile.getPath());
                         EncryptedEntry newEntry = new EncryptedEntry();
 

File: app/src/main/java/com/amaze/filemanager/database/ExplorerDatabase.java
Patch:
@@ -120,7 +120,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
 
     public synchronized static void initialize(@NonNull Context context){
         android.util.Log.d("ROOM", "Initialize explorer.db");
-        if(INSTANCE == null) {
+        if(INSTANCE == null || !INSTANCE.isOpen()) {
             INSTANCE = Room.databaseBuilder(context, ExplorerDatabase.class, DATABASE_NAME)
                     .addMigrations(MIGRATION_6_7)
                     .allowMainThreadQueries()

File: app/src/main/java/com/amaze/filemanager/database/UtilitiesDatabase.java
Patch:
@@ -240,7 +240,7 @@ public void migrate(@NonNull SupportSQLiteDatabase database) {
 
     public synchronized static void initialize(@NonNull Context context){
         android.util.Log.d("ROOM", "Initialize utilities.db");
-        if(INSTANCE == null) {
+        if(INSTANCE == null || !INSTANCE.isOpen()) {
             INSTANCE = Room.databaseBuilder(context, UtilitiesDatabase.class, DATABASE_NAME)
                     .allowMainThreadQueries()
                     .addMigrations(MIGRATION_1_2, MIGRATION_2_3, MIGRATION_3_4)
@@ -251,4 +251,5 @@ public synchronized static void initialize(@NonNull Context context){
     public static final UtilitiesDatabase getInstance(){
         return INSTANCE;
     }
+
 }

File: app/src/main/java/com/amaze/filemanager/database/daos/TabDao.java
Patch:
@@ -25,6 +25,7 @@
 import androidx.room.Insert;
 import androidx.room.OnConflictStrategy;
 import androidx.room.Query;
+import androidx.room.Transaction;
 
 import com.amaze.filemanager.database.models.explorer.Tab;
 
@@ -41,6 +42,7 @@ public interface TabDao {
     @Insert(onConflict = OnConflictStrategy.REPLACE)
     public void insertTab(Tab tab);
 
+    @Transaction
     @Query("DELETE FROM tab WHERE tab_no IN (1,2);")
     public void clear();
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -949,7 +949,7 @@ public void onListItemClicked(boolean isBackButton, int position, LayoutElementP
      */
     private static EncryptedEntry findEncryptedEntry(Context context, String path) throws Exception {
 
-        CryptHandler handler = new CryptHandler();
+        CryptHandler handler = CryptHandler.getInstance();
 
         EncryptedEntry matchedEntry = null;
         // find closest path which matches with database entry

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -1035,7 +1035,7 @@ public static void showSortDialog(final MainFragment m, AppTheme appTheme, final
 
     private static void onSortTypeSelected(MainFragment m, SharedPreferences sharedPref, Set<String> onlyThisFloders, MaterialDialog dialog, boolean desc) {
         final int sortType = desc ? dialog.getSelectedIndex() + 4 : dialog.getSelectedIndex();
-        SortHandler sortHandler = new SortHandler();
+        SortHandler sortHandler = SortHandler.getInstance();
         if (onlyThisFloders.contains(m.getCurrentPath())) {
             Sort oldSort = sortHandler.findEntry(m.getCurrentPath());
             Sort newSort = new Sort(m.getCurrentPath(), sortType);

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -301,8 +301,7 @@ public void done(final HybridFile hFile, final boolean b) {
                         // update the database entry to reflect rename for encrypted file
                         if (oldPath.endsWith(CryptUtil.CRYPT_EXTENSION)) {
                             try {
-
-                                CryptHandler cryptHandler = new CryptHandler();
+                                CryptHandler cryptHandler = CryptHandler.getInstance();
                                 EncryptedEntry oldEntry = cryptHandler.findEntry(oldPath);
                                 EncryptedEntry newEntry = new EncryptedEntry();
                                 newEntry.setId(oldEntry.getId());

File: app/src/main/java/com/amaze/filemanager/utils/files/EncryptDecryptUtils.java
Patch:
@@ -45,7 +45,7 @@ public class EncryptDecryptUtils {
      */
     public static void startEncryption(Context c, final String path, final String password,
                                        Intent intent) throws GeneralSecurityException, IOException {
-        CryptHandler cryptHandler = new CryptHandler();
+        CryptHandler cryptHandler = CryptHandler.getInstance();
         String destPath = path.substring(0, path.lastIndexOf('/')+1)
                 .concat(intent.getStringExtra(EncryptService.TAG_ENCRYPT_TARGET));
 
@@ -142,7 +142,7 @@ public void failed() {
      */
     private static EncryptedEntry findEncryptedEntry(Context context, String path) throws GeneralSecurityException, IOException {
 
-        CryptHandler handler = new CryptHandler();
+        CryptHandler handler = CryptHandler.getInstance();
 
         EncryptedEntry matchedEntry = null;
         // find closest path which matches with database entry

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -490,7 +490,8 @@ private void checkForExternalPermission() {
                 if (main1 != null) ((MainFragment) main1).updateList();
               }
             }
-          });
+          },
+          true);
     }
   }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -374,7 +374,8 @@ public static void installApk(
       final @NonNull File f, final @NonNull PermissionsActivity permissionsActivity) {
     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O
         && !permissionsActivity.getPackageManager().canRequestPackageInstalls()) {
-      permissionsActivity.requestInstallApkPermission(() -> installApk(f, permissionsActivity));
+      permissionsActivity.requestInstallApkPermission(
+          () -> installApk(f, permissionsActivity), true);
     }
 
     Intent intent = new Intent(Intent.ACTION_VIEW);

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -14,6 +14,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
+import com.amaze.filemanager.utils.Utils;
 
 public class PermissionsActivity extends ThemedActivity
         implements ActivityCompat.OnRequestPermissionsResultCallback {
@@ -28,7 +29,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                                            @NonNull int[] grantResults) {
         if (requestCode == STORAGE_PERMISSION) {
             if (isGranted(grantResults)) {
-                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
+                Utils.enableScreenRotation(this);
                 permissionCallbacks[STORAGE_PERMISSION].onPermissionGranted();
                 permissionCallbacks[STORAGE_PERMISSION] = null;
             } else {
@@ -53,7 +54,7 @@ public boolean checkStoragePermission() {
     }
 
     public void requestStoragePermission(@NonNull final OnPermissionGranted onPermissionGranted) {
-        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
+        Utils.disableScreenRotation(this);
         final MaterialDialog materialDialog = GeneralDialogCreation.showBasicDialog(this,
                 R.string.grant_storage_permission, R.string.grantper, R.string.grant, R.string.cancel);
         materialDialog.getActionButton(DialogAction.NEGATIVE).setOnClickListener(v -> finish());

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.activities.superclasses;
 
 import android.Manifest;
+import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
 import android.os.Build;
 
@@ -27,6 +28,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                                            @NonNull int[] grantResults) {
         if (requestCode == STORAGE_PERMISSION) {
             if (isGranted(grantResults)) {
+                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
                 permissionCallbacks[STORAGE_PERMISSION].onPermissionGranted();
                 permissionCallbacks[STORAGE_PERMISSION] = null;
             } else {
@@ -51,6 +53,7 @@ public boolean checkStoragePermission() {
     }
 
     public void requestStoragePermission(@NonNull final OnPermissionGranted onPermissionGranted) {
+        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
         final MaterialDialog materialDialog = GeneralDialogCreation.showBasicDialog(this,
                 R.string.grant_storage_permission, R.string.grantper, R.string.grant, R.string.cancel);
         materialDialog.getActionButton(DialogAction.NEGATIVE).setOnClickListener(v -> finish());

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -18,7 +18,6 @@
 import android.widget.ImageView;
 import android.widget.Toast;
 
-import com.amaze.filemanager.GlideApp;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
@@ -34,6 +33,7 @@
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
+import com.bumptech.glide.Glide;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -208,13 +208,13 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     utilsProvider.getAppTheme(), compressedExplorerFragment.getResources().getDisplayMetrics()));
 
         if (rowItem.type == CompressedObjectParcelable.TYPE_GOBACK) {
-            GlideApp.with(compressedExplorerFragment).load(R.drawable.ic_arrow_left_white_24dp).into(holder.genericIcon);
+            Glide.with(compressedExplorerFragment).load(R.drawable.ic_arrow_left_white_24dp).into(holder.genericIcon);
             gradientDrawable.setColor(Utils.getColor(context, R.color.goback_item));
             holder.txtTitle.setText("..");
             holder.txtDesc.setText("");
             holder.date.setText(R.string.goback);
         } else {
-            GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
+            Glide.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
                 holder.date.setText(Utils.getDate(context, rowItem.date));

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.ListView;
 import android.widget.Toast;
 
-import com.amaze.filemanager.GlideApp;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.activities.superclasses.BasicActivity;
@@ -44,6 +43,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
+import com.bumptech.glide.Glide;
 import com.bumptech.glide.ListPreloader;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
@@ -95,7 +95,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
 
         modelProvider = new AppsAdapterPreloadModel(app);
         ViewPreloadSizeProvider<String> sizeProvider = new ViewPreloadSizeProvider<>();
-        ListPreloader<String> preloader = new ListPreloader<>(GlideApp.with(app), modelProvider,
+        ListPreloader<String> preloader = new ListPreloader<>(Glide.with(app), modelProvider,
                 sizeProvider, GlideConstants.MAX_PRELOAD_APPSADAPTER);
 
         adapter = new AppsAdapter(getContext(), (ThemedActivity) getActivity(), utilsProvider, modelProvider, sizeProvider,

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -47,6 +47,9 @@ public class PreferencesConstants {
     public static final String PREFERENCE_CRYPT_MASTER_PASSWORD_DEFAULT = "";
     public static final boolean PREFERENCE_CRYPT_FINGERPRINT_DEFAULT = false;
     public static final boolean PREFERENCE_CRYPT_WARNING_REMEMBER_DEFAULT = false;
+
+    public static final String PREFERENCE_ZIP_EXTRACT_PATH = "extractpath";
+    public static final String PREFERENCE_ZIP_CREATE_PATH = "zippath";
     //END preferences.xml constants
 
     //START color_prefs.xml constants

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.activities.superclasses;
 
 import android.Manifest;
+import android.content.pm.ActivityInfo;
 import android.content.pm.PackageManager;
 import android.os.Build;
 
@@ -27,6 +28,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                                            @NonNull int[] grantResults) {
         if (requestCode == STORAGE_PERMISSION) {
             if (isGranted(grantResults)) {
+                setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_SENSOR);
                 permissionCallbacks[STORAGE_PERMISSION].onPermissionGranted();
                 permissionCallbacks[STORAGE_PERMISSION] = null;
             } else {
@@ -51,6 +53,7 @@ public boolean checkStoragePermission() {
     }
 
     public void requestStoragePermission(@NonNull final OnPermissionGranted onPermissionGranted) {
+        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_NOSENSOR);
         final MaterialDialog materialDialog = GeneralDialogCreation.showBasicDialog(this,
                 R.string.grant_storage_permission, R.string.grantper, R.string.grant, R.string.cancel);
         materialDialog.getActionButton(DialogAction.NEGATIVE).setOnClickListener(v -> finish());

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -18,7 +18,6 @@
 import android.widget.ImageView;
 import android.widget.Toast;
 
-import com.amaze.filemanager.GlideApp;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.adapters.holders.CompressedItemViewHolder;
@@ -34,6 +33,7 @@
 import com.amaze.filemanager.ui.colors.ColorUtils;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
+import com.bumptech.glide.Glide;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -208,13 +208,13 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     utilsProvider.getAppTheme(), compressedExplorerFragment.getResources().getDisplayMetrics()));
 
         if (rowItem.type == CompressedObjectParcelable.TYPE_GOBACK) {
-            GlideApp.with(compressedExplorerFragment).load(R.drawable.ic_arrow_left_white_24dp).into(holder.genericIcon);
+            Glide.with(compressedExplorerFragment).load(R.drawable.ic_arrow_left_white_24dp).into(holder.genericIcon);
             gradientDrawable.setColor(Utils.getColor(context, R.color.goback_item));
             holder.txtTitle.setText("..");
             holder.txtDesc.setText("");
             holder.date.setText(R.string.goback);
         } else {
-            GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
+            Glide.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
                 holder.date.setText(Utils.getDate(context, rowItem.date));

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -32,7 +32,6 @@
 import android.widget.ListView;
 import android.widget.Toast;
 
-import com.amaze.filemanager.GlideApp;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.activities.superclasses.BasicActivity;
@@ -44,6 +43,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
+import com.bumptech.glide.Glide;
 import com.bumptech.glide.ListPreloader;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
@@ -95,7 +95,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
 
         modelProvider = new AppsAdapterPreloadModel(app);
         ViewPreloadSizeProvider<String> sizeProvider = new ViewPreloadSizeProvider<>();
-        ListPreloader<String> preloader = new ListPreloader<>(GlideApp.with(app), modelProvider,
+        ListPreloader<String> preloader = new ListPreloader<>(Glide.with(app), modelProvider,
                 sizeProvider, GlideConstants.MAX_PRELOAD_APPSADAPTER);
 
         adapter = new AppsAdapter(getContext(), (ThemedActivity) getActivity(), utilsProvider, modelProvider, sizeProvider,

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -47,6 +47,9 @@ public class PreferencesConstants {
     public static final String PREFERENCE_CRYPT_MASTER_PASSWORD_DEFAULT = "";
     public static final boolean PREFERENCE_CRYPT_FINGERPRINT_DEFAULT = false;
     public static final boolean PREFERENCE_CRYPT_WARNING_REMEMBER_DEFAULT = false;
+
+    public static final String PREFERENCE_ZIP_EXTRACT_PATH = "extractpath";
+    public static final String PREFERENCE_ZIP_CREATE_PATH = "zippath";
     //END preferences.xml constants
 
     //START color_prefs.xml constants

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/services/ftp/FtpServiceEspressoTest.java
Patch:
@@ -7,8 +7,8 @@
 import android.os.Environment;
 import android.os.IBinder;
 import android.preference.PreferenceManager;
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import android.util.Base64;
 
 import org.apache.commons.compress.utils.IOUtils;
@@ -192,7 +192,7 @@ private FtpService create() throws ReflectiveOperationException {
         Class activityThreadClazz = Class.forName("android.app.ActivityThread");
         Method attach = Service.class.getDeclaredMethod("attach", Context.class,
                 activityThreadClazz, String.class, IBinder.class, Application.class, Object.class);
-        attach.invoke(service, InstrumentationRegistry.getTargetContext(),
+        attach.invoke(service, InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 null, service.getClass().getSimpleName(), null, null, null);
         return service;
     }

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/GenericCopyUtilEspressoTest.java
Patch:
@@ -1,7 +1,7 @@
 package com.amaze.filemanager.utils.files;
 
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import com.amaze.filemanager.utils.test.DummyFileGenerator;
 import com.amaze.filemanager.utils.ProgressHandler;
@@ -33,7 +33,7 @@ public class GenericCopyUtilEspressoTest {
 
     @Before
     public void setUp() throws IOException {
-        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getTargetContext(), new ProgressHandler());
+        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getInstrumentation().getTargetContext(), new ProgressHandler());
         file1 = File.createTempFile("test", "bin");
         file2 = File.createTempFile("test", "bin");
         file1.deleteOnExit();

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -33,7 +33,7 @@ public RecyclerPreloadModelProvider(@NonNull Fragment fragment, @NonNull List<Ic
     @Override
     @NonNull
     public List<IconDataParcelable> getPreloadItems(int position) {
-        IconDataParcelable iconData = urisToLoad.get(position);
+        IconDataParcelable iconData = position < urisToLoad.size() ? urisToLoad.get(position) : null;
         if (iconData == null) return Collections.emptyList();
         return Collections.singletonList(iconData);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -159,7 +159,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
 
         // delete file entry from encrypted database
         for (HybridFileParcelable file : files) {
-            if (file.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
+            if (file.getName(cd).endsWith(CryptUtil.CRYPT_EXTENSION)) {
                 CryptHandler handler = new CryptHandler(cd);
                 handler.clear(file.getPath());
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -244,7 +244,7 @@ private LayoutElementParcelable createListParcelables(HybridFileParcelable baseF
                 ma.file_count++;
             }
 
-            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(),
+            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(c),
                     baseFile.getPath(), baseFile.getPermission(), baseFile.getLink(), size,
                     longSize, false, baseFile.getDate() + "", baseFile.isDirectory(),
                     showThumbs, baseFile.getMode());

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -130,7 +130,7 @@ private ArrayList<HybridFileParcelable> checkConflicts(final ArrayList<HybridFil
         final ArrayList<HybridFileParcelable> conflictingFiles = new ArrayList<>();
         destination.forEachChildrenFile(context, rootMode, file -> {
             for (HybridFileParcelable j : filesToCopy) {
-                if (file.getName().equals((j).getName())) {
+                if (file.getName(context).equals((j).getName(context))) {
                     conflictingFiles.add(j);
                 }
             }
@@ -185,7 +185,7 @@ private void showDialog(final String path, final ArrayList<HybridFileParcelable>
 
         // textView
         TextView textView = view.findViewById(R.id.fileNameText);
-        textView.setText(conflictingFiles.get(counter).getName());
+        textView.setText(conflictingFiles.get(counter).getName(context));
 
         // checkBox
         final CheckBox checkBox = view.findViewById(R.id.checkBox);
@@ -329,7 +329,7 @@ class CopyNode {
                     deleteCopiedFolder.add(new File(conflictingFiles.get(i).getPath()));
 
                     nextNodes.add(new CopyNode(path + "/"
-                            + conflictingFiles.get(i).getName(),
+                            + conflictingFiles.get(i).getName(context),
                             conflictingFiles.get(i).listFiles(context, rootMode)));
 
                     filesToCopy.remove(filesToCopy.indexOf(conflictingFiles.get(i)));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -97,7 +97,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
         if (directory.isDirectory(activity.get())) {// do you have permission to read this directory?
             directory.forEachChildrenFile(activity.get(), rootMode, file -> {
                 if (!isCancelled()) {
-                    if (filter.searchFilter(file.getName())) {
+                    if (filter.searchFilter(file.getName(activity.get()))) {
                         publishProgress(file);
                     }
                     if (file.isDirectory() && !isCancelled()) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -137,7 +137,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, false);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, false);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFileFolder, context) == 1) {
                 serviceWatcherUtil.watch(DecryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -186,7 +186,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, true);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, true);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFile.getPath(), context) == 1) {
                 serviceWatcherUtil.watch(EncryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -229,7 +229,7 @@ protected Void doInBackground(Void... p1) {
                 publishResults(speed, false, false));
 
 
-            zipService.addFirstDatapoint(baseFiles.get(0).getName(), baseFiles.size(), totalBytes, false);
+            zipService.addFirstDatapoint(baseFiles.get(0).getName(getApplicationContext()), baseFiles.size(), totalBytes, false);
 
             execute(zipService.getApplicationContext(), FileUtils.hybridListToFileArrayList(baseFiles), zipPath);
             return null;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -239,7 +239,7 @@ public static void launchSftp(final HybridFileParcelable baseFile, final MainAct
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(SshClientUtils.extractRemotePathFrom(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -377,7 +377,7 @@ private static void showPropertiesDialog(final HybridFileParcelable baseFile, fi
         long last = baseFile.getDate();
         final String date = Utils.getDate(base, last),
                 items = c.getString(R.string.calculating),
-                name = baseFile.getName(),
+                name = baseFile.getName(c),
                 parent = baseFile.getReadablePath(baseFile.getParent(c));
 
         File nomediaFile = baseFile.isDirectory()? new File(baseFile.getPath() + "/" + FileUtils.NOMEDIA_FILE) : null;
@@ -683,7 +683,7 @@ public static void showEncryptWithPresetPasswordSaveAsDialog(@NonNull final Cont
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
         MaterialDialog saveAsDialog = showNameDialog(main,
                 "",
-                intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION),
+                intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION),
                 c.getString(intentParcelable.isDirectory() ? R.string.encrypt_folder_save_as : R.string.encrypt_file_save_as),
                 c.getString(R.string.ok),
                 null,
@@ -731,7 +731,7 @@ public static void showEncryptAuthenticateDialog(final Context c, final Intent i
         WarnableTextInputLayout textInputLayoutEncryptSaveAs = rootView.findViewById(R.id.til_encrypt_save_as);
 
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
-        encryptSaveAsEditText.setText(intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION));
+        encryptSaveAsEditText.setText(intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION));
         textInputLayoutEncryptSaveAs.setHint(intentParcelable.isDirectory() ?
                 c.getString(R.string.encrypt_folder_save_as) :
                 c.getString(R.string.encrypt_file_save_as));

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -136,7 +136,7 @@ public static void launchCloud(final HybridFileParcelable baseFile, final OpenMo
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(Uri.parse(CloudUtil.stripPath(serviceType, baseFile.getPath())).getPath());

File: app/src/test/java/com/amaze/filemanager/activities/MainActivityTest.java
Patch:
@@ -1,14 +1,14 @@
 package com.amaze.filemanager.activities;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/activities/TextEditorActivityTest.java
Patch:
@@ -9,6 +9,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import org.junit.After;
@@ -22,7 +23,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowContentResolver;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.ByteArrayInputStream;
 import java.io.File;

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -2,10 +2,12 @@
 
 import android.content.Intent;
 import android.os.Environment;
+
 import androidx.annotation.NonNull;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -19,7 +21,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -4,14 +4,14 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -8,6 +8,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.ZipExtractor;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.Before;
@@ -17,13 +18,13 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;
 import java.util.List;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -15,7 +16,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileInputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.sshd.common.config.keys.KeyUtils;
 import org.apache.sshd.common.file.FileSystemFactory;
@@ -18,7 +19,6 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.nio.file.Paths;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowCryptUtil;
 
 import net.schmizz.sshj.common.SecurityUtils;
@@ -20,7 +21,6 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.io.StringWriter;

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -3,14 +3,14 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -3,18 +3,17 @@
 import android.webkit.MimeTypeMap;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Before;
-import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -47,6 +47,9 @@ public class PreferencesConstants {
     public static final String PREFERENCE_CRYPT_MASTER_PASSWORD_DEFAULT = "";
     public static final boolean PREFERENCE_CRYPT_FINGERPRINT_DEFAULT = false;
     public static final boolean PREFERENCE_CRYPT_WARNING_REMEMBER_DEFAULT = false;
+
+    public static final String PREFERENCE_ZIP_EXTRACT_PATH = "extractpath";
+    public static final String PREFERENCE_ZIP_CREATE_PATH = "zippath";
     //END preferences.xml constants
 
     //START color_prefs.xml constants

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/services/ftp/FtpServiceEspressoTest.java
Patch:
@@ -7,8 +7,8 @@
 import android.os.Environment;
 import android.os.IBinder;
 import android.preference.PreferenceManager;
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import android.util.Base64;
 
 import org.apache.commons.compress.utils.IOUtils;
@@ -192,7 +192,7 @@ private FtpService create() throws ReflectiveOperationException {
         Class activityThreadClazz = Class.forName("android.app.ActivityThread");
         Method attach = Service.class.getDeclaredMethod("attach", Context.class,
                 activityThreadClazz, String.class, IBinder.class, Application.class, Object.class);
-        attach.invoke(service, InstrumentationRegistry.getTargetContext(),
+        attach.invoke(service, InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 null, service.getClass().getSimpleName(), null, null, null);
         return service;
     }

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/GenericCopyUtilEspressoTest.java
Patch:
@@ -1,7 +1,7 @@
 package com.amaze.filemanager.utils.files;
 
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import com.amaze.filemanager.utils.test.DummyFileGenerator;
 import com.amaze.filemanager.utils.ProgressHandler;
@@ -33,7 +33,7 @@ public class GenericCopyUtilEspressoTest {
 
     @Before
     public void setUp() throws IOException {
-        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getTargetContext(), new ProgressHandler());
+        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getInstrumentation().getTargetContext(), new ProgressHandler());
         file1 = File.createTempFile("test", "bin");
         file2 = File.createTempFile("test", "bin");
         file1.deleteOnExit();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -159,7 +159,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
 
         // delete file entry from encrypted database
         for (HybridFileParcelable file : files) {
-            if (file.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
+            if (file.getName(cd).endsWith(CryptUtil.CRYPT_EXTENSION)) {
                 CryptHandler handler = new CryptHandler(cd);
                 handler.clear(file.getPath());
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -244,7 +244,7 @@ private LayoutElementParcelable createListParcelables(HybridFileParcelable baseF
                 ma.file_count++;
             }
 
-            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(),
+            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(c),
                     baseFile.getPath(), baseFile.getPermission(), baseFile.getLink(), size,
                     longSize, false, baseFile.getDate() + "", baseFile.isDirectory(),
                     showThumbs, baseFile.getMode());

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -130,7 +130,7 @@ private ArrayList<HybridFileParcelable> checkConflicts(final ArrayList<HybridFil
         final ArrayList<HybridFileParcelable> conflictingFiles = new ArrayList<>();
         destination.forEachChildrenFile(context, rootMode, file -> {
             for (HybridFileParcelable j : filesToCopy) {
-                if (file.getName().equals((j).getName())) {
+                if (file.getName(context).equals((j).getName(context))) {
                     conflictingFiles.add(j);
                 }
             }
@@ -185,7 +185,7 @@ private void showDialog(final String path, final ArrayList<HybridFileParcelable>
 
         // textView
         TextView textView = view.findViewById(R.id.fileNameText);
-        textView.setText(conflictingFiles.get(counter).getName());
+        textView.setText(conflictingFiles.get(counter).getName(context));
 
         // checkBox
         final CheckBox checkBox = view.findViewById(R.id.checkBox);
@@ -329,7 +329,7 @@ class CopyNode {
                     deleteCopiedFolder.add(new File(conflictingFiles.get(i).getPath()));
 
                     nextNodes.add(new CopyNode(path + "/"
-                            + conflictingFiles.get(i).getName(),
+                            + conflictingFiles.get(i).getName(context),
                             conflictingFiles.get(i).listFiles(context, rootMode)));
 
                     filesToCopy.remove(filesToCopy.indexOf(conflictingFiles.get(i)));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -97,7 +97,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
         if (directory.isDirectory(activity.get())) {// do you have permission to read this directory?
             directory.forEachChildrenFile(activity.get(), rootMode, file -> {
                 if (!isCancelled()) {
-                    if (filter.searchFilter(file.getName())) {
+                    if (filter.searchFilter(file.getName(activity.get()))) {
                         publishProgress(file);
                     }
                     if (file.isDirectory() && !isCancelled()) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -137,7 +137,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, false);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, false);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFileFolder, context) == 1) {
                 serviceWatcherUtil.watch(DecryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -186,7 +186,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, true);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, true);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFile.getPath(), context) == 1) {
                 serviceWatcherUtil.watch(EncryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -229,7 +229,7 @@ protected Void doInBackground(Void... p1) {
                 publishResults(speed, false, false));
 
 
-            zipService.addFirstDatapoint(baseFiles.get(0).getName(), baseFiles.size(), totalBytes, false);
+            zipService.addFirstDatapoint(baseFiles.get(0).getName(getApplicationContext()), baseFiles.size(), totalBytes, false);
 
             execute(zipService.getApplicationContext(), FileUtils.hybridListToFileArrayList(baseFiles), zipPath);
             return null;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -239,7 +239,7 @@ public static void launchSftp(final HybridFileParcelable baseFile, final MainAct
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(SshClientUtils.extractRemotePathFrom(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -898,7 +898,7 @@ public void onListItemClicked(boolean isBackButton, int position, LayoutElementP
 
                     encryptBaseFile = new HybridFileParcelable(getActivity().getExternalCacheDir().getPath()
                             + "/"
-                            + e.generateBaseFile().getName().replace(CryptUtil.CRYPT_EXTENSION, ""));
+                            + e.generateBaseFile().getName(getMainActivity()).replace(CryptUtil.CRYPT_EXTENSION, ""));
                     encryptBaseFiles.add(encryptBaseFile);
 
                     EncryptDecryptUtils.decryptFile(getContext(), getMainActivity(), ma, openMode,
@@ -1208,7 +1208,7 @@ private void startFileObserver() {
     public void rename(final HybridFileParcelable f) {
         MaterialDialog renameDialog = GeneralDialogCreation.showNameDialog(getMainActivity(),
             "",
-            f.getName(),
+            f.getName(getMainActivity()),
             getResources().getString(R.string.rename),
             getResources().getString(R.string.save),
             null,

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -377,7 +377,7 @@ private static void showPropertiesDialog(final HybridFileParcelable baseFile, fi
         long last = baseFile.getDate();
         final String date = Utils.getDate(base, last),
                 items = c.getString(R.string.calculating),
-                name = baseFile.getName(),
+                name = baseFile.getName(c),
                 parent = baseFile.getReadablePath(baseFile.getParent(c));
 
         File nomediaFile = baseFile.isDirectory()? new File(baseFile.getPath() + "/" + FileUtils.NOMEDIA_FILE) : null;
@@ -683,7 +683,7 @@ public static void showEncryptWithPresetPasswordSaveAsDialog(@NonNull final Cont
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
         MaterialDialog saveAsDialog = showNameDialog(main,
                 "",
-                intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION),
+                intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION),
                 c.getString(intentParcelable.isDirectory() ? R.string.encrypt_folder_save_as : R.string.encrypt_file_save_as),
                 c.getString(R.string.ok),
                 null,
@@ -731,7 +731,7 @@ public static void showEncryptAuthenticateDialog(final Context c, final Intent i
         WarnableTextInputLayout textInputLayoutEncryptSaveAs = rootView.findViewById(R.id.til_encrypt_save_as);
 
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
-        encryptSaveAsEditText.setText(intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION));
+        encryptSaveAsEditText.setText(intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION));
         textInputLayoutEncryptSaveAs.setHint(intentParcelable.isDirectory() ?
                 c.getString(R.string.encrypt_folder_save_as) :
                 c.getString(R.string.encrypt_file_save_as));

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -136,7 +136,7 @@ public static void launchCloud(final HybridFileParcelable baseFile, final OpenMo
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(Uri.parse(CloudUtil.stripPath(serviceType, baseFile.getPath())).getPath());

File: app/src/test/java/com/amaze/filemanager/activities/MainActivityTest.java
Patch:
@@ -1,14 +1,14 @@
 package com.amaze.filemanager.activities;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/activities/TextEditorActivityTest.java
Patch:
@@ -9,6 +9,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import org.junit.After;
@@ -22,7 +23,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowContentResolver;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.ByteArrayInputStream;
 import java.io.File;

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -2,10 +2,12 @@
 
 import android.content.Intent;
 import android.os.Environment;
+
 import androidx.annotation.NonNull;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -19,7 +21,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -4,14 +4,14 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -8,6 +8,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.ZipExtractor;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.Before;
@@ -17,13 +18,13 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;
 import java.util.List;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -15,7 +16,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileInputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.sshd.common.config.keys.KeyUtils;
 import org.apache.sshd.common.file.FileSystemFactory;
@@ -18,7 +19,6 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.nio.file.Paths;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowCryptUtil;
 
 import net.schmizz.sshj.common.SecurityUtils;
@@ -20,7 +21,6 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.io.StringWriter;

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -3,14 +3,14 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -3,18 +3,17 @@
 import android.webkit.MimeTypeMap;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Before;
-import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -193,6 +193,7 @@ else if (getAppTheme().equals(AppTheme.BLACK))
         } else {
             Toast.makeText(this, R.string.no_file_error, Toast.LENGTH_LONG).show();
             finish();
+            return;
         }
 
         getSupportActionBar().setTitle(mFile.name);
@@ -376,7 +377,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     File currentFile = mFile.hybridFileParcelable.getFile();
                     if (currentFile.exists()) {
                         boolean useNewStack = getBoolean(PREFERENCE_TEXTEDITOR_NEWSTACK);
-                        FileUtils.openunknown(currentFile, this, false, useNewStack);
+                        FileUtils.openWith(currentFile, this, useNewStack);
                     } else {
                         Toast.makeText(this, R.string.not_allowed, Toast.LENGTH_SHORT).show();
                     }

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -33,7 +33,7 @@ public RecyclerPreloadModelProvider(@NonNull Fragment fragment, @NonNull List<Ic
     @Override
     @NonNull
     public List<IconDataParcelable> getPreloadItems(int position) {
-        IconDataParcelable iconData = urisToLoad.get(position);
+        IconDataParcelable iconData = position < urisToLoad.size() ? urisToLoad.get(position) : null;
         if (iconData == null) return Collections.emptyList();
         return Collections.singletonList(iconData);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -199,7 +199,7 @@ public void run() {
         if (preferences.getBoolean(KEY_PREFERENCE_SECURE, DEFAULT_SECURE)) {
 
             try {
-                KeyStore keyStore = KeyStore.getInstance("BKS", "BC");
+                KeyStore keyStore = KeyStore.getInstance("BKS");
                 keyStore.load(getResources().openRawResource(R.raw.key), KEYSTORE_PASSWORD);
 
                 KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -113,8 +113,7 @@ public void onRestoreInstanceState(Parcelable state) {
      * For the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
      */
     public boolean isNavigationViewSavedStateMissing() {
-        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
-                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.P;
+        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
     }
 
     static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -22,6 +22,7 @@
  */
 package com.amaze.filemanager.utils;
 
+import android.text.TextUtils;
 import android.view.MenuItem;
 import androidx.annotation.Nullable;
 import com.amaze.filemanager.ui.views.drawer.MenuMetadata;
@@ -426,7 +427,8 @@ public MenuMetadata getDrawerMetadata(MenuItem item) {
 
     public void putDrawerMetadata(MenuItem item, MenuMetadata metadata) {
         menuMetadataMap.put(item, metadata);
-        if(metadata.path != null) tree.put(metadata.path, item.getItemId());
+        if(!TextUtils.isEmpty(metadata.path))
+            tree.put(metadata.path, item.getItemId());
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -599,8 +599,8 @@ public void search(SharedPreferences sharedPrefs, String query) {
                 (SearchWorkerFragment) fm.findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);
 
         if (fragment != null) {
-            if (fragment.mSearchAsyncTask.getStatus() == AsyncTask.Status.RUNNING) {
-                fragment.mSearchAsyncTask.cancel(true);
+            if (fragment.searchAsyncTask.getStatus() == AsyncTask.Status.RUNNING) {
+                fragment.searchAsyncTask.cancel(true);
             }
             fm.beginTransaction().remove(fragment).commit();
         }

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestKeyProvider.java
Patch:
@@ -12,7 +12,7 @@ public class TestKeyProvider implements KeyPairProvider {
     private KeyPair keyPair;
 
     public TestKeyProvider() throws Exception {
-        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", "BC");
+        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
         keyPairGenerator.initialize(1024, new SecureRandom());
         keyPair = keyPairGenerator.generateKeyPair();
     }

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtil.java
Patch:
@@ -26,7 +26,7 @@ public class ShadowCryptUtil {
 
     static {
         try {
-            KeyGenerator keyGen = KeyGenerator.getInstance("AES", "BC");
+            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
             keyGen.init(128);
             secretKey = keyGen.generateKey();
         } catch (GeneralSecurityException e) {
@@ -56,7 +56,7 @@ public static String decryptPassword(Context context, String cipherText) throws
     private static String aesEncryptPassword(String plainTextPassword)
             throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.ENCRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] encodedBytes = cipher.doFinal(plainTextPassword.getBytes());
@@ -69,7 +69,7 @@ private static String aesEncryptPassword(String plainTextPassword)
      */
     private static String aesDecryptPassword(String cipherPassword) throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.DECRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] decryptedBytes = cipher.doFinal(Base64.decode(cipherPassword, Base64.DEFAULT));

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -6,7 +6,6 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.adapters.data.StorageDirectoryParcelable;
-import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OTGUtil;
 
 import org.junit.Test;

File: app/src/test/java/com/amaze/filemanager/filesystem/usb/UsbOtgTest.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.adapters.data.StorageDirectoryParcelable;
 import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.OTGUtil;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -199,7 +199,7 @@ public void run() {
         if (preferences.getBoolean(KEY_PREFERENCE_SECURE, DEFAULT_SECURE)) {
 
             try {
-                KeyStore keyStore = KeyStore.getInstance("BKS", "BC");
+                KeyStore keyStore = KeyStore.getInstance("BKS");
                 keyStore.load(getResources().openRawResource(R.raw.key), KEYSTORE_PASSWORD);
 
                 KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/CustomSshJConfig.java
Patch:
@@ -43,10 +43,8 @@ public class CustomSshJConfig extends DefaultConfig
     // BouncyCastle before registering SpongyCastle's provider
     public static void init() {
         Security.removeProvider("BC");
-        Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(),
-                Security.getProviders().length+1);
         Security.insertProviderAt(new org.bouncycastle.jce.provider.BouncyCastleProvider(),
-                Security.getProviders().length+1);
+                0);
     }
 
     // don't add ECDSA

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestKeyProvider.java
Patch:
@@ -12,7 +12,7 @@ public class TestKeyProvider implements KeyPairProvider {
     private KeyPair keyPair;
 
     public TestKeyProvider() throws Exception {
-        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", "BC");
+        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
         keyPairGenerator.initialize(1024, new SecureRandom());
         keyPair = keyPairGenerator.generateKeyPair();
     }

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtil.java
Patch:
@@ -26,7 +26,7 @@ public class ShadowCryptUtil {
 
     static {
         try {
-            KeyGenerator keyGen = KeyGenerator.getInstance("AES", "BC");
+            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
             keyGen.init(128);
             secretKey = keyGen.generateKey();
         } catch (GeneralSecurityException e) {
@@ -56,7 +56,7 @@ public static String decryptPassword(Context context, String cipherText) throws
     private static String aesEncryptPassword(String plainTextPassword)
             throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.ENCRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] encodedBytes = cipher.doFinal(plainTextPassword.getBytes());
@@ -69,7 +69,7 @@ private static String aesEncryptPassword(String plainTextPassword)
      */
     private static String aesDecryptPassword(String cipherPassword) throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.DECRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] decryptedBytes = cipher.doFinal(Base64.decode(cipherPassword, Base64.DEFAULT));

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1503,7 +1503,7 @@ private LayoutElementParcelable addTo(HybridFileParcelable mFile) {
                 size = "";
                 LayoutElementParcelable layoutElement = new LayoutElementParcelable(getContext(), f.getPath(), mFile.getPermission(),
                         mFile.getLink(), size, 0, true,
-                        mFile.getDate() + "", false,
+                        mFile.getDate() + "", true,
                         getBoolean(PREFERENCE_SHOW_THUMB), mFile.getMode());
 
                 LIST_ELEMENTS.add(layoutElement);

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -33,7 +33,7 @@ public RecyclerPreloadModelProvider(@NonNull Fragment fragment, @NonNull List<Ic
     @Override
     @NonNull
     public List<IconDataParcelable> getPreloadItems(int position) {
-        IconDataParcelable iconData = urisToLoad.get(position);
+        IconDataParcelable iconData = position < urisToLoad.size() ? urisToLoad.get(position) : null;
         if (iconData == null) return Collections.emptyList();
         return Collections.singletonList(iconData);
     }

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -217,7 +217,7 @@ public static Uri getUriForBaseFile(Context context, HybridFileParcelable baseFi
             case ROOT:
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
 
-                    return FileProvider.getUriForFile(context, FileUtils.FILE_PROVIDER_AUTHORITY,
+                    return FileProvider.getUriForFile(context, context.getPackageName(),
                             new File(baseFile.getPath()));
                 } else {
                     return Uri.fromFile(new File(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1503,7 +1503,7 @@ private LayoutElementParcelable addTo(HybridFileParcelable mFile) {
                 size = "";
                 LayoutElementParcelable layoutElement = new LayoutElementParcelable(getContext(), f.getPath(), mFile.getPermission(),
                         mFile.getLink(), size, 0, true,
-                        mFile.getDate() + "", false,
+                        mFile.getDate() + "", true,
                         getBoolean(PREFERENCE_SHOW_THUMB), mFile.getMode());
 
                 LIST_ELEMENTS.add(layoutElement);

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -33,7 +33,7 @@ public RecyclerPreloadModelProvider(@NonNull Fragment fragment, @NonNull List<Ic
     @Override
     @NonNull
     public List<IconDataParcelable> getPreloadItems(int position) {
-        IconDataParcelable iconData = urisToLoad.get(position);
+        IconDataParcelable iconData = position < urisToLoad.size() ? urisToLoad.get(position) : null;
         if (iconData == null) return Collections.emptyList();
         return Collections.singletonList(iconData);
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/CustomSshJConfig.java
Patch:
@@ -32,15 +32,15 @@
 /**
  * sshj {@link net.schmizz.sshj.Config} for our own use.
  *
- * Borrowed from original AndroidConfig, but also use SpongyCastle from the start altogether.
+ * Borrowed from original AndroidConfig, but also use vanilla BouncyCastle from the start altogether.
  *
  * @see net.schmizz.sshj.Config
  * @see net.schmizz.sshj.AndroidConfig
  */
 public class CustomSshJConfig extends DefaultConfig
 {
     // This is where we different from the original AndroidConfig. Found it only work if we remove
-    // BouncyCastle before registering SpongyCastle's provider
+    // BouncyCastle bundled with Android before registering our BouncyCastle provider
     public static void init() {
         Security.removeProvider("BC");
         Security.insertProviderAt(new org.bouncycastle.jce.provider.BouncyCastleProvider(),

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -199,7 +199,7 @@ public void run() {
         if (preferences.getBoolean(KEY_PREFERENCE_SECURE, DEFAULT_SECURE)) {
 
             try {
-                KeyStore keyStore = KeyStore.getInstance("BKS", "BC");
+                KeyStore keyStore = KeyStore.getInstance("BKS");
                 keyStore.load(getResources().openRawResource(R.raw.key), KEYSTORE_PASSWORD);
 
                 KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/CustomSshJConfig.java
Patch:
@@ -43,10 +43,8 @@ public class CustomSshJConfig extends DefaultConfig
     // BouncyCastle before registering SpongyCastle's provider
     public static void init() {
         Security.removeProvider("BC");
-        Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(),
-                Security.getProviders().length+1);
         Security.insertProviderAt(new org.bouncycastle.jce.provider.BouncyCastleProvider(),
-                Security.getProviders().length+1);
+                0);
     }
 
     // don't add ECDSA

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/test/TestKeyProvider.java
Patch:
@@ -12,7 +12,7 @@ public class TestKeyProvider implements KeyPairProvider {
     private KeyPair keyPair;
 
     public TestKeyProvider() throws Exception {
-        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA", "BC");
+        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
         keyPairGenerator.initialize(1024, new SecureRandom());
         keyPair = keyPairGenerator.generateKeyPair();
     }

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtil.java
Patch:
@@ -26,7 +26,7 @@ public class ShadowCryptUtil {
 
     static {
         try {
-            KeyGenerator keyGen = KeyGenerator.getInstance("AES", "BC");
+            KeyGenerator keyGen = KeyGenerator.getInstance("AES");
             keyGen.init(128);
             secretKey = keyGen.generateKey();
         } catch (GeneralSecurityException e) {
@@ -56,7 +56,7 @@ public static String decryptPassword(Context context, String cipherText) throws
     private static String aesEncryptPassword(String plainTextPassword)
             throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.ENCRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] encodedBytes = cipher.doFinal(plainTextPassword.getBytes());
@@ -69,7 +69,7 @@ private static String aesEncryptPassword(String plainTextPassword)
      */
     private static String aesDecryptPassword(String cipherPassword) throws GeneralSecurityException {
 
-        Cipher cipher = Cipher.getInstance(ALGO_AES, "BC");
+        Cipher cipher = Cipher.getInstance(ALGO_AES);
         GCMParameterSpec gcmParameterSpec = new GCMParameterSpec(128, IV.getBytes());
         cipher.init(Cipher.DECRYPT_MODE, secretKey, gcmParameterSpec);
         byte[] decryptedBytes = cipher.doFinal(Base64.decode(cipherPassword, Base64.DEFAULT));

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -377,7 +377,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     File currentFile = mFile.hybridFileParcelable.getFile();
                     if (currentFile.exists()) {
                         boolean useNewStack = getBoolean(PREFERENCE_TEXTEDITOR_NEWSTACK);
-                        FileUtils.openunknown(currentFile, this, false, useNewStack);
+                        FileUtils.openWith(currentFile, this, useNewStack);
                     } else {
                         Toast.makeText(this, R.string.not_allowed, Toast.LENGTH_SHORT).show();
                     }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -739,8 +739,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     mode.finish();
                     return true;
                 case R.id.openwith:
-                    boolean useNewStack = sharedPref.getBoolean(PREFERENCE_TEXTEDITOR_NEWSTACK, false);
-                    FileUtils.openunknown(new File(checkedItems.get(0).desc), getActivity(), true, useNewStack);
+                    FileUtils.openFile(new File(checkedItems.get(0).desc), getMainActivity(), sharedPref);
                     return true;
                 case R.id.addshortcut:
                     addShortcut(checkedItems.get(0));

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1504,7 +1504,7 @@ private LayoutElementParcelable addTo(HybridFileParcelable mFile) {
                 size = "";
                 LayoutElementParcelable layoutElement = new LayoutElementParcelable(getContext(), f.getPath(), mFile.getPermission(),
                         mFile.getLink(), size, 0, true,
-                        mFile.getDate() + "", false,
+                        mFile.getDate() + "", true,
                         getBoolean(PREFERENCE_SHOW_THUMB), mFile.getMode());
 
                 LIST_ELEMENTS.add(layoutElement);

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -599,8 +599,8 @@ public void search(SharedPreferences sharedPrefs, String query) {
                 (SearchWorkerFragment) fm.findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);
 
         if (fragment != null) {
-            if (fragment.mSearchAsyncTask.getStatus() == AsyncTask.Status.RUNNING) {
-                fragment.mSearchAsyncTask.cancel(true);
+            if (fragment.searchAsyncTask.getStatus() == AsyncTask.Status.RUNNING) {
+                fragment.searchAsyncTask.cancel(true);
             }
             fm.beginTransaction().remove(fragment).commit();
         }

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -217,7 +217,7 @@ public static Uri getUriForBaseFile(Context context, HybridFileParcelable baseFi
             case ROOT:
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
 
-                    return FileProvider.getUriForFile(context, FileUtils.FILE_PROVIDER_AUTHORITY,
+                    return FileProvider.getUriForFile(context, context.getPackageName(),
                             new File(baseFile.getPath()));
                 } else {
                     return Uri.fromFile(new File(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/adapters/glide/RecyclerPreloadModelProvider.java
Patch:
@@ -33,7 +33,7 @@ public RecyclerPreloadModelProvider(@NonNull Fragment fragment, @NonNull List<Ic
     @Override
     @NonNull
     public List<IconDataParcelable> getPreloadItems(int position) {
-        IconDataParcelable iconData = urisToLoad.get(position);
+        IconDataParcelable iconData = position < urisToLoad.size() ? urisToLoad.get(position) : null;
         if (iconData == null) return Collections.emptyList();
         return Collections.singletonList(iconData);
     }

File: app/src/androidTest/java/com/amaze/filemanager/asynchronous/services/ftp/FtpServiceEspressoTest.java
Patch:
@@ -7,8 +7,8 @@
 import android.os.Environment;
 import android.os.IBinder;
 import android.preference.PreferenceManager;
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import android.util.Base64;
 
 import org.apache.commons.compress.utils.IOUtils;
@@ -192,7 +192,7 @@ private FtpService create() throws ReflectiveOperationException {
         Class activityThreadClazz = Class.forName("android.app.ActivityThread");
         Method attach = Service.class.getDeclaredMethod("attach", Context.class,
                 activityThreadClazz, String.class, IBinder.class, Application.class, Object.class);
-        attach.invoke(service, InstrumentationRegistry.getTargetContext(),
+        attach.invoke(service, InstrumentationRegistry.getInstrumentation().getTargetContext(),
                 null, service.getClass().getSimpleName(), null, null, null);
         return service;
     }

File: app/src/androidTest/java/com/amaze/filemanager/utils/files/GenericCopyUtilEspressoTest.java
Patch:
@@ -1,7 +1,7 @@
 package com.amaze.filemanager.utils.files;
 
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import com.amaze.filemanager.utils.test.DummyFileGenerator;
 import com.amaze.filemanager.utils.ProgressHandler;
@@ -33,7 +33,7 @@ public class GenericCopyUtilEspressoTest {
 
     @Before
     public void setUp() throws IOException {
-        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getTargetContext(), new ProgressHandler());
+        copyUtil = new GenericCopyUtil(InstrumentationRegistry.getInstrumentation().getTargetContext(), new ProgressHandler());
         file1 = File.createTempFile("test", "bin");
         file2 = File.createTempFile("test", "bin");
         file1.deleteOnExit();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -159,7 +159,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
 
         // delete file entry from encrypted database
         for (HybridFileParcelable file : files) {
-            if (file.getName().endsWith(CryptUtil.CRYPT_EXTENSION)) {
+            if (file.getName(cd).endsWith(CryptUtil.CRYPT_EXTENSION)) {
                 CryptHandler handler = new CryptHandler(cd);
                 handler.clear(file.getPath());
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -244,7 +244,7 @@ private LayoutElementParcelable createListParcelables(HybridFileParcelable baseF
                 ma.file_count++;
             }
 
-            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(),
+            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(c),
                     baseFile.getPath(), baseFile.getPermission(), baseFile.getLink(), size,
                     longSize, false, baseFile.getDate() + "", baseFile.isDirectory(),
                     showThumbs, baseFile.getMode());

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -130,7 +130,7 @@ private ArrayList<HybridFileParcelable> checkConflicts(final ArrayList<HybridFil
         final ArrayList<HybridFileParcelable> conflictingFiles = new ArrayList<>();
         destination.forEachChildrenFile(context, rootMode, file -> {
             for (HybridFileParcelable j : filesToCopy) {
-                if (file.getName().equals((j).getName())) {
+                if (file.getName(context).equals((j).getName(context))) {
                     conflictingFiles.add(j);
                 }
             }
@@ -185,7 +185,7 @@ private void showDialog(final String path, final ArrayList<HybridFileParcelable>
 
         // textView
         TextView textView = view.findViewById(R.id.fileNameText);
-        textView.setText(conflictingFiles.get(counter).getName());
+        textView.setText(conflictingFiles.get(counter).getName(context));
 
         // checkBox
         final CheckBox checkBox = view.findViewById(R.id.checkBox);
@@ -329,7 +329,7 @@ class CopyNode {
                     deleteCopiedFolder.add(new File(conflictingFiles.get(i).getPath()));
 
                     nextNodes.add(new CopyNode(path + "/"
-                            + conflictingFiles.get(i).getName(),
+                            + conflictingFiles.get(i).getName(context),
                             conflictingFiles.get(i).listFiles(context, rootMode)));
 
                     filesToCopy.remove(filesToCopy.indexOf(conflictingFiles.get(i)));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -104,7 +104,7 @@ private void search(HybridFile directory, final SearchFilter filter) {
         if (directory.isDirectory(activity.get())) {// do you have permission to read this directory?
             directory.forEachChildrenFile(activity.get(), mRootMode, file -> {
                 if (!isCancelled()) {
-                    if (filter.searchFilter(file.getName())) {
+                    if (filter.searchFilter(file.getName(activity.get()))) {
                         publishProgress(file);
                     }
                     if (file.isDirectory() && !isCancelled()) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -137,7 +137,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, false);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, false);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFileFolder, context) == 1) {
                 serviceWatcherUtil.watch(DecryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -186,7 +186,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(speed, false, false));
             serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
-            addFirstDatapoint(baseFile.getName(), 1, totalSize, true);// we're using encrypt as move flag false
+            addFirstDatapoint(baseFile.getName(context), 1, totalSize, true);// we're using encrypt as move flag false
 
             if (FileUtil.checkFolder(baseFile.getPath(), context) == 1) {
                 serviceWatcherUtil.watch(EncryptService.this);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -229,7 +229,7 @@ protected Void doInBackground(Void... p1) {
                 publishResults(speed, false, false));
 
 
-            zipService.addFirstDatapoint(baseFiles.get(0).getName(), baseFiles.size(), totalBytes, false);
+            zipService.addFirstDatapoint(baseFiles.get(0).getName(getApplicationContext()), baseFiles.size(), totalBytes, false);
 
             execute(zipService.getApplicationContext(), FileUtils.hybridListToFileArrayList(baseFiles), zipPath);
             return null;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -239,7 +239,7 @@ public static void launchSftp(final HybridFileParcelable baseFile, final MainAct
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(SshClientUtils.extractRemotePathFrom(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -899,7 +899,7 @@ public void onListItemClicked(boolean isBackButton, int position, LayoutElementP
 
                     encryptBaseFile = new HybridFileParcelable(getActivity().getExternalCacheDir().getPath()
                             + "/"
-                            + e.generateBaseFile().getName().replace(CryptUtil.CRYPT_EXTENSION, ""));
+                            + e.generateBaseFile().getName(getMainActivity()).replace(CryptUtil.CRYPT_EXTENSION, ""));
                     encryptBaseFiles.add(encryptBaseFile);
 
                     EncryptDecryptUtils.decryptFile(getContext(), getMainActivity(), ma, openMode,
@@ -1209,7 +1209,7 @@ private void startFileObserver() {
     public void rename(final HybridFileParcelable f) {
         MaterialDialog renameDialog = GeneralDialogCreation.showNameDialog(getMainActivity(),
             "",
-            f.getName(),
+            f.getName(getMainActivity()),
             getResources().getString(R.string.rename),
             getResources().getString(R.string.save),
             null,

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -377,7 +377,7 @@ private static void showPropertiesDialog(final HybridFileParcelable baseFile, fi
         long last = baseFile.getDate();
         final String date = Utils.getDate(base, last),
                 items = c.getString(R.string.calculating),
-                name = baseFile.getName(),
+                name = baseFile.getName(c),
                 parent = baseFile.getReadablePath(baseFile.getParent(c));
 
         File nomediaFile = baseFile.isDirectory()? new File(baseFile.getPath() + "/" + FileUtils.NOMEDIA_FILE) : null;
@@ -683,7 +683,7 @@ public static void showEncryptWithPresetPasswordSaveAsDialog(@NonNull final Cont
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
         MaterialDialog saveAsDialog = showNameDialog(main,
                 "",
-                intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION),
+                intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION),
                 c.getString(intentParcelable.isDirectory() ? R.string.encrypt_folder_save_as : R.string.encrypt_file_save_as),
                 c.getString(R.string.ok),
                 null,
@@ -731,7 +731,7 @@ public static void showEncryptAuthenticateDialog(final Context c, final Intent i
         WarnableTextInputLayout textInputLayoutEncryptSaveAs = rootView.findViewById(R.id.til_encrypt_save_as);
 
         HybridFileParcelable intentParcelable = intent.getParcelableExtra(EncryptService.TAG_SOURCE);
-        encryptSaveAsEditText.setText(intentParcelable.getName().concat(CryptUtil.CRYPT_EXTENSION));
+        encryptSaveAsEditText.setText(intentParcelable.getName(c).concat(CryptUtil.CRYPT_EXTENSION));
         textInputLayoutEncryptSaveAs.setHint(intentParcelable.isDirectory() ?
                 c.getString(R.string.encrypt_folder_save_as) :
                 c.getString(R.string.encrypt_file_save_as));

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -136,7 +136,7 @@ public static void launchCloud(final HybridFileParcelable baseFile, final OpenMo
 
         new Thread(() -> {
             try {
-                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(), baseFile.length(activity));
+                streamer.setStreamSrc(baseFile.getInputStream(activity), baseFile.getName(activity), baseFile.length(activity));
                 activity.runOnUiThread(() -> {
                     try {
                         File file = new File(Uri.parse(CloudUtil.stripPath(serviceType, baseFile.getPath())).getPath());

File: app/src/test/java/com/amaze/filemanager/activities/MainActivityTest.java
Patch:
@@ -1,14 +1,14 @@
 package com.amaze.filemanager.activities;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/activities/TextEditorActivityTest.java
Patch:
@@ -9,6 +9,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import org.junit.After;
@@ -22,7 +23,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowContentResolver;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.ByteArrayInputStream;
 import java.io.File;

File: app/src/test/java/com/amaze/filemanager/asynchronous/services/ExtractServiceTest.java
Patch:
@@ -2,10 +2,12 @@
 
 import android.content.Intent;
 import android.os.Environment;
+
 import androidx.annotation.NonNull;
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -19,7 +21,6 @@
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/RootHelperTest.java
Patch:
@@ -4,14 +4,14 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowShellInteractive;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -8,6 +8,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.Extractor;
 import com.amaze.filemanager.filesystem.compressed.extractcontents.helpers.ZipExtractor;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.Before;
@@ -17,13 +18,13 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowToast;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileOutputStream;
 import java.util.List;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.commons.compress.utils.IOUtils;
 import org.junit.After;
@@ -15,7 +16,6 @@
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowEnvironment;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.File;
 import java.io.FileInputStream;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/AbstractSftpServerTest.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.apache.sshd.common.config.keys.KeyUtils;
 import org.apache.sshd.common.file.FileSystemFactory;
@@ -18,7 +19,6 @@
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.nio.file.Paths;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPoolTest.java
Patch:
@@ -6,6 +6,7 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.test.TestKeyProvider;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.test.ShadowCryptUtil;
 
 import net.schmizz.sshj.common.SecurityUtils;
@@ -20,7 +21,6 @@
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.io.StringWriter;

File: app/src/test/java/com/amaze/filemanager/test/ShadowCryptUtilTest.java
Patch:
@@ -3,14 +3,14 @@
 import com.amaze.filemanager.BuildConfig;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;

File: app/src/test/java/com/amaze/filemanager/ui/icons/IconsTest.java
Patch:
@@ -3,18 +3,17 @@
 import android.webkit.MimeTypeMap;
 
 import com.amaze.filemanager.BuildConfig;
+import com.amaze.filemanager.shadows.ShadowMultiDex;
 
 import org.junit.Before;
-import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.Shadows;
 import org.robolectric.annotation.Config;
 import org.robolectric.shadows.ShadowMimeTypeMap;
-import org.robolectric.shadows.multidex.ShadowMultiDex;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -22,6 +22,7 @@
  */
 package com.amaze.filemanager.utils;
 
+import android.text.TextUtils;
 import android.view.MenuItem;
 import androidx.annotation.Nullable;
 import com.amaze.filemanager.ui.views.drawer.MenuMetadata;
@@ -426,7 +427,8 @@ public MenuMetadata getDrawerMetadata(MenuItem item) {
 
     public void putDrawerMetadata(MenuItem item, MenuMetadata metadata) {
         menuMetadataMap.put(item, metadata);
-        if(metadata.path != null) tree.put(metadata.path, item.getItemId());
+        if(!TextUtils.isEmpty(metadata.path))
+            tree.put(metadata.path, item.getItemId());
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/utils/DataUtils.java
Patch:
@@ -22,6 +22,7 @@
  */
 package com.amaze.filemanager.utils;
 
+import android.text.TextUtils;
 import android.view.MenuItem;
 import androidx.annotation.Nullable;
 import com.amaze.filemanager.ui.views.drawer.MenuMetadata;
@@ -426,7 +427,8 @@ public MenuMetadata getDrawerMetadata(MenuItem item) {
 
     public void putDrawerMetadata(MenuItem item, MenuMetadata metadata) {
         menuMetadataMap.put(item, metadata);
-        if(metadata.path != null) tree.put(metadata.path, item.getItemId());
+        if(!TextUtils.isEmpty(metadata.path))
+            tree.put(metadata.path, item.getItemId());
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -217,7 +217,7 @@ public static Uri getUriForBaseFile(Context context, HybridFileParcelable baseFi
             case ROOT:
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
 
-                    return FileProvider.getUriForFile(context, FileUtils.FILE_PROVIDER_AUTHORITY,
+                    return FileProvider.getUriForFile(context, context.getPackageName(),
                             new File(baseFile.getPath()));
                 } else {
                     return Uri.fromFile(new File(baseFile.getPath()));

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -113,8 +113,7 @@ public void onRestoreInstanceState(Parcelable state) {
      * For the crash see https://github.com/TeamAmaze/AmazeFileManager/issues/1101.
      */
     public boolean isNavigationViewSavedStateMissing() {
-        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
-                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.P;
+        return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M;
     }
 
     static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1156,7 +1156,6 @@ private void updateUsbInformation() {
         if(!isInformationUpdated) {
             SingletonUsbOtg.getInstance().resetUsbOtgRoot();
             drawer.refreshDrawer();
-            goToMain(null);
         }
 
         // Registering intent filter for OTG

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -193,6 +193,7 @@ else if (getAppTheme().equals(AppTheme.BLACK))
         } else {
             Toast.makeText(this, R.string.no_file_error, Toast.LENGTH_LONG).show();
             finish();
+            return;
         }
 
         getSupportActionBar().setTitle(mFile.name);

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -138,6 +138,7 @@ public final class MimeTypes {
         MIME_TYPES.put("ogv", "video/ogg");
         MIME_TYPES.put("flv", "video/x-flv");
         MIME_TYPES.put("mkv", "video/x-matroska");
+        MIME_TYPES.put("mts", "video/mp2t");
 
         MIME_TYPES.put(CryptUtil.CRYPT_EXTENSION.replace(".", ""), "crypt/aze");
     }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1153,7 +1153,6 @@ private void updateUsbInformation() {
         if(!isInformationUpdated) {
             SingletonUsbOtg.getInstance().resetUsbOtgRoot();
             drawer.refreshDrawer();
-            goToMain(null);
         }
 
         // Registering intent filter for OTG

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -1,5 +1,6 @@
 /*
- * Copyright (C) 2014 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>
+ * Copyright (C) 2014-2019 Arpit Khurana <arpitkh96@gmail.com>,
+ * Vishal Nehra <vishalmeham2@gmail.com>, Raymond Lai <airwave209gt at gmail.com> and contributors.
  *
  * This file is part of Amaze File Manager.
  *
@@ -79,7 +80,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
-        mainActivity.floatingActionButton.getMenuButton().hide();
+        mainActivity.floatingActionButton.hide();
         mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();

File: app/src/main/java/com/amaze/filemanager/fragments/FtpServerFragment.java
Patch:
@@ -153,7 +153,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
-        mainActivity.floatingActionButton.getMenuButton().hide();
+        mainActivity.floatingActionButton.hide();
         mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/management/ServiceWatcherUtil.java
Patch:
@@ -211,7 +211,7 @@ private WaitNotificationThread(Context context, boolean startImmediately) {
         public void run() {
             if (watcherRepeatingRunnable == null || !watcherRepeatingRunnable.isAlive()) {
                 if (pendingIntents.size() == 0) {
-                    handle.cancel(false);
+                    cancel(false);
                     return;
                 } else {
                     if (pendingIntents.size() == 1) {
@@ -221,6 +221,8 @@ public void run() {
                     final Context context = this.context.get();
                     if (context != null) {
                         context.startService(pendingIntents.element());
+                        cancel(true);
+                        return;
                     }
                 }
             }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1659,7 +1659,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
         Bundle bundle = new Bundle();
         bundle.putString("name", name);
         bundle.putString("address", uri.getHost());
-        bundle.putString("port", Integer.toString(uri.getPort()));
+        bundle.putInt("port", uri.getPort());
         bundle.putString("path", path);
         bundle.putString("username", userinfo.indexOf(':') > 0 ?
                 userinfo.substring(0, userinfo.indexOf(':')) : userinfo);

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -254,13 +254,14 @@ public void addSsh(String name, String path, String hostKey, String sshKeyName,
     }
 
     public void updateSsh(String connectionName, String oldConnectionName, String path,
-                          String sshKeyName, String sshKey) {
+                          String hostKey, String sshKeyName, String sshKey) {
 
         SQLiteDatabase database = getWritableDatabase();
 
         ContentValues values = new ContentValues();
         values.put(COLUMN_NAME, connectionName);
         values.put(COLUMN_PATH, path);
+        values.put(COLUMN_HOST_PUBKEY, hostKey);
         if(sshKeyName != null && sshKey != null) {
             values.put(COLUMN_PRIVATE_KEY_NAME, sshKeyName);
             values.put(COLUMN_PRIVATE_KEY, sshKey);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -767,7 +767,7 @@ public void exit() {
             }
         } else {
             this.backPressedToExitOnce = true;
-            showToast(getString(R.string.pressagain));
+            showToast(getString(R.string.press_again));
             new Handler().postDelayed(() -> {
                 backPressedToExitOnce = false;
             }, 2000);
@@ -947,7 +947,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     break;
                 }
                 final MaterialDialog dialog = GeneralDialogCreation.showBasicDialog(mainActivity,
-                       R.string.questionset, R.string.setashome, R.string.yes, R.string.no);
+                       R.string.question_set_path_as_home, R.string.set_as_home, R.string.yes, R.string.no);
                 dialog.getActionButton(DialogAction.POSITIVE).setOnClickListener((v) -> {
                     main.home = main.getCurrentPath();
                     updatePaths(main.no);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -258,10 +258,10 @@ public void selectItem(int item) {
                 loadPrefFragment(new ColorPref(), R.string.color_title);
                 break;
             case FOLDERS_PREFERENCE:
-                loadPrefFragment(new FoldersPref(), R.string.sidebarfolders_title);
+                loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
                 break;
             case QUICKACCESS_PREFERENCE:
-                loadPrefFragment(new QuickAccessPref(), R.string.sidebarquickaccess_title);
+                loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);
                 break;
             case ADVANCEDSEARCH_PREFERENCE:
                 loadPrefFragment(new AdvancedSearchPref(), R.string.advanced_search);

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -232,8 +232,8 @@ protected void onSaveInstanceState(Bundle outState) {
     private void checkUnsavedChanges() {
         if (mOriginal != null && mInput.isShown() && !mOriginal.equals(mInput.getText().toString())) {
             new MaterialDialog.Builder(this)
-                    .title(R.string.unsavedchanges)
-                    .content(R.string.unsavedchangesdesc)
+                    .title(R.string.unsaved_changes)
+                    .content(R.string.unsaved_changes_description)
                     .positiveText(R.string.yes)
                     .negativeText(R.string.no)
                     .positiveColor(getAccent())
@@ -274,7 +274,7 @@ private void saveFile(final String editTextString) {
                             Toast.makeText(getApplicationContext(), R.string.error_io, Toast.LENGTH_SHORT).show();
                             break;
                         case WriteFileAbstraction.EXCEPTION_SHELL_NOT_RUNNING:
-                            Toast.makeText(getApplicationContext(), R.string.rootfailure, Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getApplicationContext(), R.string.root_failure, Toast.LENGTH_SHORT).show();
                             break;
                     }
         }).execute();

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -506,7 +506,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (p == getItemCount() - 1) {
                     holder.rl.setMinimumHeight((int) minRowHeight);
                     if (itemsDigested.size() == (getBoolean(PREFERENCE_SHOW_GOBACK_BUTTON)? 1:0))
-                        holder.txtTitle.setText(R.string.nofiles);
+                        holder.txtTitle.setText(R.string.no_files);
                     else {
                         holder.txtTitle.setText("");
                     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -234,7 +234,7 @@ void finalizeNotification(ArrayList<HybridFile> failedOps, boolean move) {
 
         if(failedOps.size()==0)return;
         NotificationCompat.Builder mBuilder=new NotificationCompat.Builder(getApplicationContext(), NotificationConstants.CHANNEL_NORMAL_ID);
-        mBuilder.setContentTitle(getString(R.string.operationunsuccesful));
+        mBuilder.setContentTitle(getString(R.string.operation_unsuccesful));
 
         mBuilder.setContentText(getString(R.string.copy_error, getString(getTitle(move)).toLowerCase()));
         mBuilder.setAutoCancel(true);

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -30,6 +30,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.annotation.Nullable;
+
 /**
  * Created by Vishal on 9/17/2014.
  */
@@ -117,6 +119,7 @@ public void clear() {
         }
     }
 
+    @Nullable
     public Tab findTab(int tabNo) {
         String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + "= \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * Created by Vishal on 29-05-2017.
  * Class handles database with tables having list of various utilities like
- * history, hidden files, list paths, grid paths, bookmarks, smb entry
+ * history, hidden files, list paths, grid paths, bookmarks, SMB entry
  *
  * Try to use these functions from a background thread
  */

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -296,7 +296,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             ArrayList<Integer> positions = compressedExplorerAdapter.getCheckedItemPositions();
             ((TextView) v.findViewById(R.id.item_count)).setText(positions.size() + "");
             menu.findItem(R.id.all).setTitle(positions.size() == folder + file ?
-                    R.string.deselect_all : R.string.selectall);
+                    R.string.deselect_all : R.string.select_all);
 
             return false; // Return false if nothing is done
         }
@@ -309,7 +309,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     boolean shouldDeselectAll = positions.size() != folder + file;
                     compressedExplorerAdapter.toggleChecked(shouldDeselectAll);
                     mode.invalidate();
-                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.selectall);
+                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.select_all);
                     if(!shouldDeselectAll)
                     {
                         selection = false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -175,7 +175,7 @@ private void colorChangeDialog(String colorPrefKey) {
                     .autoDismiss(true)
                     .positiveColor(fab_skin)
                     .neutralColor(fab_skin)
-                    .neutralText(R.string.defualt)
+                    .neutralText(R.string.default_string)
                     .callback(new MaterialDialog.ButtonCallback() {
                         @Override
                         public void onNeutral(MaterialDialog dialog) {
@@ -228,7 +228,7 @@ private void loadSection1() {
 
             int colorPickerPref = sharedPref.getInt(PreferencesConstants.PREFERENCE_COLOR_CONFIG, ColorPickerDialog.NO_DATA);
             if(colorPickerPref == ColorPickerDialog.RANDOM_INDEX) {
-                Toast.makeText(getActivity(), R.string.setRandom, Toast.LENGTH_LONG).show();
+                Toast.makeText(getActivity(), R.string.set_random, Toast.LENGTH_LONG).show();
             }
         });
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -208,7 +208,7 @@ private void loadDeleteDialog(final PathSwitchPreference p) {
         int fab_skin = activity.getAccent();
 
         final MaterialDialog dialog = new MaterialDialog.Builder(getActivity())
-                .title(R.string.questiondelete_shortcut)
+                .title(R.string.question_delete_shortcut)
                 .theme(activity.getAppTheme().getMaterialDialogTheme())
                 .positiveColor(fab_skin)
                 .positiveText(getString(R.string.delete).toUpperCase())// TODO: 29/4/2017 don't use toUpperCase(), 20/9,2017 why not?

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -48,7 +48,7 @@ public class ColorPickerDialog extends SelectedColorsPreference {
      * ONLY add new elements to the end of the array
      */
     private static final ColorItemPair[] COLORS = new ColorItemPair[]{
-            new ColorItemPair(R.string.defualt,
+            new ColorItemPair(R.string.default_string,
                     new int[]{R.color.primary_indigo, R.color.primary_indigo, R.color.primary_pink, R.color.accent_pink}),
             new ColorItemPair(R.string.orange,
                     new int[]{R.color.primary_orange, R.color.primary_orange, R.color.primary_deep_orange, R.color.accent_amber}),

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -66,7 +66,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final MaterialDialog materialDialog;
             String pa = path;
             MaterialDialog.Builder builder = new MaterialDialog.Builder(c);
-            builder.title(R.string.renamebookmark);
+            builder.title(R.string.rename_bookmark);
             builder.positiveColor(accentColor);
             builder.negativeColor(accentColor);
             builder.neutralColor(accentColor);
@@ -81,8 +81,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final TextInputLayout t2 = v2.findViewById(R.id.t2);
             final AppCompatEditText conName = v2.findViewById(R.id.editText4);
             conName.setText(title);
-            final String s1 = getString(R.string.cantbeempty, c.getString(R.string.name));
-            final String s2 = getString(R.string.cantbeempty, c.getString(R.string.path));
+            final String s1 = getString(R.string.cant_be_empty, c.getString(R.string.name));
+            final String s2 = getString(R.string.cant_be_empty, c.getString(R.string.path));
             conName.addTextChangedListener(new SimpleTextWatcher() {
                 @Override
                 public void afterTextChanged(Editable s) {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -56,7 +56,7 @@ public void dismiss() {
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         MaterialDialog.Builder builder = new MaterialDialog.Builder(getActivity());
-        builder.title(R.string.searchingdevices);
+        builder.title(R.string.searching_devices);
         builder.negativeColor(accentColor);
         builder.negativeText(R.string.cancel);
         builder.onNegative((dialog, which) -> {
@@ -95,7 +95,7 @@ public void searchFinished() {
                     getActivity().runOnUiThread(() -> {
                         if (computers.size() == 1) {
                             dismiss();
-                            Toast.makeText(getActivity(), getString(R.string.nodevicefound), Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getActivity(), getString(R.string.no_device_found), Toast.LENGTH_SHORT).show();
                             MainActivity mainActivity = (MainActivity) getActivity();
                             mainActivity.showSMBDialog("", "", false);
                             return;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -326,7 +326,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         if (!results) {
             pathText.setText(mainActivity.getString(R.string.folderfilecount, folderCount, fileCount));
         } else {
-            fullPathText.setText(mainActivity.getString(R.string.searchresults, query));
+            fullPathText.setText(mainActivity.getString(R.string.search_results, query));
             pathText.setText("");
             return;
         }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -274,7 +274,7 @@ public void refreshDrawer() {
                 name = resources.getString(R.string.extstorage);
                 icon1 = R.drawable.ic_sd_storage_white_24dp;
             } else if ("/".equals(file)) {
-                name = resources.getString(R.string.rootdirectory);
+                name = resources.getString(R.string.root_directory);
                 icon1 = R.drawable.ic_drawer_root_white;
             } else {
                 name = f.getName();

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareTask.java
Patch:
@@ -103,7 +103,7 @@ public void onPostExecute(Void v) {
             shareAdapter.updateMatDialog(b);
             b.show();
         } else {
-            Toast.makeText(contextc, R.string.noappfound, Toast.LENGTH_SHORT).show();
+            Toast.makeText(contextc, R.string.no_app_found, Toast.LENGTH_SHORT).show();
         }
     }
 }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -767,7 +767,7 @@ public void exit() {
             }
         } else {
             this.backPressedToExitOnce = true;
-            showToast(getString(R.string.pressagain));
+            showToast(getString(R.string.press_again));
             new Handler().postDelayed(() -> {
                 backPressedToExitOnce = false;
             }, 2000);
@@ -947,7 +947,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     break;
                 }
                 final MaterialDialog dialog = GeneralDialogCreation.showBasicDialog(mainActivity,
-                       R.string.questionset, R.string.setashome, R.string.yes, R.string.no);
+                       R.string.question_set_path_as_home, R.string.set_as_home, R.string.yes, R.string.no);
                 dialog.getActionButton(DialogAction.POSITIVE).setOnClickListener((v) -> {
                     main.home = main.getCurrentPath();
                     updatePaths(main.no);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -258,10 +258,10 @@ public void selectItem(int item) {
                 loadPrefFragment(new ColorPref(), R.string.color_title);
                 break;
             case FOLDERS_PREFERENCE:
-                loadPrefFragment(new FoldersPref(), R.string.sidebarfolders_title);
+                loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
                 break;
             case QUICKACCESS_PREFERENCE:
-                loadPrefFragment(new QuickAccessPref(), R.string.sidebarquickaccess_title);
+                loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);
                 break;
             case ADVANCEDSEARCH_PREFERENCE:
                 loadPrefFragment(new AdvancedSearchPref(), R.string.advanced_search);

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -232,8 +232,8 @@ protected void onSaveInstanceState(Bundle outState) {
     private void checkUnsavedChanges() {
         if (mOriginal != null && mInput.isShown() && !mOriginal.equals(mInput.getText().toString())) {
             new MaterialDialog.Builder(this)
-                    .title(R.string.unsavedchanges)
-                    .content(R.string.unsavedchangesdesc)
+                    .title(R.string.unsaved_changes)
+                    .content(R.string.unsaved_changes_description)
                     .positiveText(R.string.yes)
                     .negativeText(R.string.no)
                     .positiveColor(getAccent())
@@ -274,7 +274,7 @@ private void saveFile(final String editTextString) {
                             Toast.makeText(getApplicationContext(), R.string.error_io, Toast.LENGTH_SHORT).show();
                             break;
                         case WriteFileAbstraction.EXCEPTION_SHELL_NOT_RUNNING:
-                            Toast.makeText(getApplicationContext(), R.string.rootfailure, Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getApplicationContext(), R.string.root_failure, Toast.LENGTH_SHORT).show();
                             break;
                     }
         }).execute();

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -506,7 +506,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (p == getItemCount() - 1) {
                     holder.rl.setMinimumHeight((int) minRowHeight);
                     if (itemsDigested.size() == (getBoolean(PREFERENCE_SHOW_GOBACK_BUTTON)? 1:0))
-                        holder.txtTitle.setText(R.string.nofiles);
+                        holder.txtTitle.setText(R.string.no_files);
                     else {
                         holder.txtTitle.setText("");
                     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -234,7 +234,7 @@ void finalizeNotification(ArrayList<HybridFile> failedOps, boolean move) {
 
         if(failedOps.size()==0)return;
         NotificationCompat.Builder mBuilder=new NotificationCompat.Builder(getApplicationContext(), NotificationConstants.CHANNEL_NORMAL_ID);
-        mBuilder.setContentTitle(getString(R.string.operationunsuccesful));
+        mBuilder.setContentTitle(getString(R.string.operation_unsuccesful));
 
         mBuilder.setContentText(getString(R.string.copy_error, getString(getTitle(move)).toLowerCase()));
         mBuilder.setAutoCancel(true);

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -30,6 +30,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.annotation.Nullable;
+
 /**
  * Created by Vishal on 9/17/2014.
  */
@@ -117,6 +119,7 @@ public void clear() {
         }
     }
 
+    @Nullable
     public Tab findTab(int tabNo) {
         String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + "= \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * Created by Vishal on 29-05-2017.
  * Class handles database with tables having list of various utilities like
- * history, hidden files, list paths, grid paths, bookmarks, smb entry
+ * history, hidden files, list paths, grid paths, bookmarks, SMB entry
  *
  * Try to use these functions from a background thread
  */

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -296,7 +296,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             ArrayList<Integer> positions = compressedExplorerAdapter.getCheckedItemPositions();
             ((TextView) v.findViewById(R.id.item_count)).setText(positions.size() + "");
             menu.findItem(R.id.all).setTitle(positions.size() == folder + file ?
-                    R.string.deselect_all : R.string.selectall);
+                    R.string.deselect_all : R.string.select_all);
 
             return false; // Return false if nothing is done
         }
@@ -309,7 +309,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     boolean shouldDeselectAll = positions.size() != folder + file;
                     compressedExplorerAdapter.toggleChecked(shouldDeselectAll);
                     mode.invalidate();
-                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.selectall);
+                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.select_all);
                     if(!shouldDeselectAll)
                     {
                         selection = false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -175,7 +175,7 @@ private void colorChangeDialog(String colorPrefKey) {
                     .autoDismiss(true)
                     .positiveColor(fab_skin)
                     .neutralColor(fab_skin)
-                    .neutralText(R.string.defualt)
+                    .neutralText(R.string.default_string)
                     .callback(new MaterialDialog.ButtonCallback() {
                         @Override
                         public void onNeutral(MaterialDialog dialog) {
@@ -228,7 +228,7 @@ private void loadSection1() {
 
             int colorPickerPref = sharedPref.getInt(PreferencesConstants.PREFERENCE_COLOR_CONFIG, ColorPickerDialog.NO_DATA);
             if(colorPickerPref == ColorPickerDialog.RANDOM_INDEX) {
-                Toast.makeText(getActivity(), R.string.setRandom, Toast.LENGTH_LONG).show();
+                Toast.makeText(getActivity(), R.string.set_random, Toast.LENGTH_LONG).show();
             }
         });
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -208,7 +208,7 @@ private void loadDeleteDialog(final PathSwitchPreference p) {
         int fab_skin = activity.getAccent();
 
         final MaterialDialog dialog = new MaterialDialog.Builder(getActivity())
-                .title(R.string.questiondelete_shortcut)
+                .title(R.string.question_delete_shortcut)
                 .theme(activity.getAppTheme().getMaterialDialogTheme())
                 .positiveColor(fab_skin)
                 .positiveText(getString(R.string.delete).toUpperCase())// TODO: 29/4/2017 don't use toUpperCase(), 20/9,2017 why not?

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -112,9 +112,9 @@ public boolean onMenuItemClick(MenuItem item) {
                 DataUtils dataUtils = DataUtils.getInstance();
                 if (dataUtils.addBook(new String[]{rowItem.title, rowItem.desc}, true)) {
                     mainFragment.getMainActivity().getDrawer().refreshDrawer();
-                    Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
+                    Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarks_added), Toast.LENGTH_LONG).show();
                 } else {
-                    Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarkexists), Toast.LENGTH_LONG).show();
+                    Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmark_exists), Toast.LENGTH_LONG).show();
                 }
                 return true;
             case R.id.delete:

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -48,7 +48,7 @@ public class ColorPickerDialog extends SelectedColorsPreference {
      * ONLY add new elements to the end of the array
      */
     private static final ColorItemPair[] COLORS = new ColorItemPair[]{
-            new ColorItemPair(R.string.defualt,
+            new ColorItemPair(R.string.default_string,
                     new int[]{R.color.primary_indigo, R.color.primary_indigo, R.color.primary_pink, R.color.accent_pink}),
             new ColorItemPair(R.string.orange,
                     new int[]{R.color.primary_orange, R.color.primary_orange, R.color.primary_deep_orange, R.color.accent_amber}),

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -66,7 +66,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final MaterialDialog materialDialog;
             String pa = path;
             MaterialDialog.Builder builder = new MaterialDialog.Builder(c);
-            builder.title(R.string.renamebookmark);
+            builder.title(R.string.rename_bookmark);
             builder.positiveColor(accentColor);
             builder.negativeColor(accentColor);
             builder.neutralColor(accentColor);
@@ -81,8 +81,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final TextInputLayout t2 = v2.findViewById(R.id.t2);
             final AppCompatEditText conName = v2.findViewById(R.id.editText4);
             conName.setText(title);
-            final String s1 = getString(R.string.cantbeempty, c.getString(R.string.name));
-            final String s2 = getString(R.string.cantbeempty, c.getString(R.string.path));
+            final String s1 = getString(R.string.cant_be_empty, c.getString(R.string.name));
+            final String s2 = getString(R.string.cant_be_empty, c.getString(R.string.path));
             conName.addTextChangedListener(new SimpleTextWatcher() {
                 @Override
                 public void afterTextChanged(Editable s) {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -56,7 +56,7 @@ public void dismiss() {
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         MaterialDialog.Builder builder = new MaterialDialog.Builder(getActivity());
-        builder.title(R.string.searchingdevices);
+        builder.title(R.string.searching_devices);
         builder.negativeColor(accentColor);
         builder.negativeText(R.string.cancel);
         builder.onNegative((dialog, which) -> {
@@ -95,7 +95,7 @@ public void searchFinished() {
                     getActivity().runOnUiThread(() -> {
                         if (computers.size() == 1) {
                             dismiss();
-                            Toast.makeText(getActivity(), getString(R.string.nodevicefound), Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getActivity(), getString(R.string.no_device_found), Toast.LENGTH_SHORT).show();
                             MainActivity mainActivity = (MainActivity) getActivity();
                             mainActivity.showSMBDialog("", "", false);
                             return;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -326,7 +326,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         if (!results) {
             pathText.setText(mainActivity.getString(R.string.folderfilecount, folderCount, fileCount));
         } else {
-            fullPathText.setText(mainActivity.getString(R.string.searchresults, query));
+            fullPathText.setText(mainActivity.getString(R.string.search_results, query));
             pathText.setText("");
             return;
         }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -274,7 +274,7 @@ public void refreshDrawer() {
                 name = resources.getString(R.string.extstorage);
                 icon1 = R.drawable.ic_sd_storage_white_24dp;
             } else if ("/".equals(file)) {
-                name = resources.getString(R.string.rootdirectory);
+                name = resources.getString(R.string.root_directory);
                 icon1 = R.drawable.ic_drawer_root_white;
             } else {
                 name = f.getName();

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareTask.java
Patch:
@@ -103,7 +103,7 @@ public void onPostExecute(Void v) {
             shareAdapter.updateMatDialog(b);
             b.show();
         } else {
-            Toast.makeText(contextc, R.string.noappfound, Toast.LENGTH_SHORT).show();
+            Toast.makeText(contextc, R.string.no_app_found, Toast.LENGTH_SHORT).show();
         }
     }
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -82,7 +82,7 @@ public class FtpService extends Service implements Runnable {
     public static final int DEFAULT_PORT = 2211;
     public static final String DEFAULT_USERNAME = "";
     public static final int DEFAULT_TIMEOUT = 600;   // default timeout, in sec
-    public static final boolean DEFAULT_SECURE = false;
+    public static final boolean DEFAULT_SECURE = true;
     public static final String PORT_PREFERENCE_KEY = "ftpPort";
     public static final String KEY_PREFERENCE_PATH = "ftp_path";
     public static final String KEY_PREFERENCE_USERNAME = "ftp_username";

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -82,7 +82,7 @@ public class FtpService extends Service implements Runnable {
     public static final int DEFAULT_PORT = 2211;
     public static final String DEFAULT_USERNAME = "";
     public static final int DEFAULT_TIMEOUT = 600;   // default timeout, in sec
-    public static final boolean DEFAULT_SECURE = false;
+    public static final boolean DEFAULT_SECURE = true;
     public static final String PORT_PREFERENCE_KEY = "ftpPort";
     public static final String KEY_PREFERENCE_PATH = "ftp_path";
     public static final String KEY_PREFERENCE_USERNAME = "ftp_username";

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -30,6 +30,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.annotation.Nullable;
+
 /**
  * Created by Vishal on 9/17/2014.
  */
@@ -117,6 +119,7 @@ public void clear() {
         }
     }
 
+    @Nullable
     public Tab findTab(int tabNo) {
         String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + "= \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -30,6 +30,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.annotation.Nullable;
+
 /**
  * Created by Vishal on 9/17/2014.
  */
@@ -117,6 +119,7 @@ public void clear() {
         }
     }
 
+    @Nullable
     public Tab findTab(int tabNo) {
         String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + "= \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = this.getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -254,13 +254,14 @@ public void addSsh(String name, String path, String hostKey, String sshKeyName,
     }
 
     public void updateSsh(String connectionName, String oldConnectionName, String path,
-                          String sshKeyName, String sshKey) {
+                          String hostKey, String sshKeyName, String sshKey) {
 
         SQLiteDatabase database = getWritableDatabase();
 
         ContentValues values = new ContentValues();
         values.put(COLUMN_NAME, connectionName);
         values.put(COLUMN_PATH, path);
+        values.put(COLUMN_HOST_PUBKEY, hostKey);
         if(sshKeyName != null && sshKey != null) {
             values.put(COLUMN_PRIVATE_KEY_NAME, sshKeyName);
             values.put(COLUMN_PRIVATE_KEY, sshKey);

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -254,13 +254,14 @@ public void addSsh(String name, String path, String hostKey, String sshKeyName,
     }
 
     public void updateSsh(String connectionName, String oldConnectionName, String path,
-                          String sshKeyName, String sshKey) {
+                          String hostKey, String sshKeyName, String sshKey) {
 
         SQLiteDatabase database = getWritableDatabase();
 
         ContentValues values = new ContentValues();
         values.put(COLUMN_NAME, connectionName);
         values.put(COLUMN_PATH, path);
+        values.put(COLUMN_HOST_PUBKEY, hostKey);
         if(sshKeyName != null && sshKey != null) {
             values.put(COLUMN_PRIVATE_KEY_NAME, sshKeyName);
             values.put(COLUMN_PRIVATE_KEY, sshKey);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1659,7 +1659,7 @@ public void showSftpDialog(String name, String path, boolean edit) {
         Bundle bundle = new Bundle();
         bundle.putString("name", name);
         bundle.putString("address", uri.getHost());
-        bundle.putString("port", Integer.toString(uri.getPort()));
+        bundle.putInt("port", uri.getPort());
         bundle.putString("path", path);
         bundle.putString("username", userinfo.indexOf(':') > 0 ?
                 userinfo.substring(0, userinfo.indexOf(':')) : userinfo);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -767,7 +767,7 @@ public void exit() {
             }
         } else {
             this.backPressedToExitOnce = true;
-            showToast(getString(R.string.pressagain));
+            showToast(getString(R.string.press_again));
             new Handler().postDelayed(() -> {
                 backPressedToExitOnce = false;
             }, 2000);
@@ -947,7 +947,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     break;
                 }
                 final MaterialDialog dialog = GeneralDialogCreation.showBasicDialog(mainActivity,
-                       R.string.questionset, R.string.setashome, R.string.yes, R.string.no);
+                       R.string.question_set_path_as_home, R.string.set_as_home, R.string.yes, R.string.no);
                 dialog.getActionButton(DialogAction.POSITIVE).setOnClickListener((v) -> {
                     main.home = main.getCurrentPath();
                     updatePaths(main.no);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -258,10 +258,10 @@ public void selectItem(int item) {
                 loadPrefFragment(new ColorPref(), R.string.color_title);
                 break;
             case FOLDERS_PREFERENCE:
-                loadPrefFragment(new FoldersPref(), R.string.sidebarfolders_title);
+                loadPrefFragment(new FoldersPref(), R.string.sidebar_folders_title);
                 break;
             case QUICKACCESS_PREFERENCE:
-                loadPrefFragment(new QuickAccessPref(), R.string.sidebarquickaccess_title);
+                loadPrefFragment(new QuickAccessPref(), R.string.sidebar_quick_access_title);
                 break;
             case ADVANCEDSEARCH_PREFERENCE:
                 loadPrefFragment(new AdvancedSearchPref(), R.string.advanced_search);

File: app/src/main/java/com/amaze/filemanager/activities/TextEditorActivity.java
Patch:
@@ -232,8 +232,8 @@ protected void onSaveInstanceState(Bundle outState) {
     private void checkUnsavedChanges() {
         if (mOriginal != null && mInput.isShown() && !mOriginal.equals(mInput.getText().toString())) {
             new MaterialDialog.Builder(this)
-                    .title(R.string.unsavedchanges)
-                    .content(R.string.unsavedchangesdesc)
+                    .title(R.string.unsaved_changes)
+                    .content(R.string.unsaved_changes_description)
                     .positiveText(R.string.yes)
                     .negativeText(R.string.no)
                     .positiveColor(getAccent())
@@ -274,7 +274,7 @@ private void saveFile(final String editTextString) {
                             Toast.makeText(getApplicationContext(), R.string.error_io, Toast.LENGTH_SHORT).show();
                             break;
                         case WriteFileAbstraction.EXCEPTION_SHELL_NOT_RUNNING:
-                            Toast.makeText(getApplicationContext(), R.string.rootfailure, Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getApplicationContext(), R.string.root_failure, Toast.LENGTH_SHORT).show();
                             break;
                     }
         }).execute();

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -506,7 +506,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (p == getItemCount() - 1) {
                     holder.rl.setMinimumHeight((int) minRowHeight);
                     if (itemsDigested.size() == (getBoolean(PREFERENCE_SHOW_GOBACK_BUTTON)? 1:0))
-                        holder.txtTitle.setText(R.string.nofiles);
+                        holder.txtTitle.setText(R.string.no_files);
                     else {
                         holder.txtTitle.setText("");
                     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -234,7 +234,7 @@ void finalizeNotification(ArrayList<HybridFile> failedOps, boolean move) {
 
         if(failedOps.size()==0)return;
         NotificationCompat.Builder mBuilder=new NotificationCompat.Builder(getApplicationContext(), NotificationConstants.CHANNEL_NORMAL_ID);
-        mBuilder.setContentTitle(getString(R.string.operationunsuccesful));
+        mBuilder.setContentTitle(getString(R.string.operation_unsuccesful));
 
         mBuilder.setContentText(getString(R.string.copy_error, getString(getTitle(move)).toLowerCase()));
         mBuilder.setAutoCancel(true);

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * Created by Vishal on 29-05-2017.
  * Class handles database with tables having list of various utilities like
- * history, hidden files, list paths, grid paths, bookmarks, smb entry
+ * history, hidden files, list paths, grid paths, bookmarks, SMB entry
  *
  * Try to use these functions from a background thread
  */

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -296,7 +296,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             ArrayList<Integer> positions = compressedExplorerAdapter.getCheckedItemPositions();
             ((TextView) v.findViewById(R.id.item_count)).setText(positions.size() + "");
             menu.findItem(R.id.all).setTitle(positions.size() == folder + file ?
-                    R.string.deselect_all : R.string.selectall);
+                    R.string.deselect_all : R.string.select_all);
 
             return false; // Return false if nothing is done
         }
@@ -309,7 +309,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     boolean shouldDeselectAll = positions.size() != folder + file;
                     compressedExplorerAdapter.toggleChecked(shouldDeselectAll);
                     mode.invalidate();
-                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.selectall);
+                    item.setTitle(shouldDeselectAll ? R.string.deselect_all : R.string.select_all);
                     if(!shouldDeselectAll)
                     {
                         selection = false;

File: app/src/main/java/com/amaze/filemanager/fragments/FtpServerFragment.java
Patch:
@@ -128,7 +128,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                         || FtpService.isEnabledWifiHotspot(getContext()))
                     startServer();
                 else {
-                    // no wifi and no eth, we shouldn't be here in the first place, because of broadcast
+                    // no Wi-Fi and no eth, we shouldn't be here in the first place, because of broadcast
                     // receiver, but just to be sure
                     statusText.setText(spannedStatusNoConnection);
                 }
@@ -318,10 +318,10 @@ public void onReceive(Context context, Intent intent) {
             NetworkInfo netInfo = conMan.getActiveNetworkInfo();
             if ((netInfo != null && (netInfo.getType() == ConnectivityManager.TYPE_WIFI || netInfo.getType() == ConnectivityManager.TYPE_ETHERNET))
                     || FtpService.isEnabledWifiHotspot(getContext())) {
-                // connected to wifi or eth
+                // connected to Wi-Fi or eth
                 ftpBtn.setEnabled(true);
             } else {
-                // wifi or eth connection lost
+                // Wi-Fi or eth connection lost
                 stopServer();
                 statusText.setText(spannedStatusNoConnection);
                 ftpBtn.setEnabled(true);

File: app/src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -242,7 +242,7 @@ String parseSmbPath(String a) {
     String parsePathForName(String path, OpenMode openmode) {
         Resources resources = getActivity().getResources();
         if ("/".equals(path)) {
-            return resources.getString(R.string.rootdirectory);
+            return resources.getString(R.string.root_directory);
         } else if (openmode == OpenMode.SMB && path.startsWith("smb:/")) {
             return (new File(parseSmbPath(path)).getName());
         } else if ("/storage/emulated/0".equals(path)) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -175,7 +175,7 @@ private void colorChangeDialog(String colorPrefKey) {
                     .autoDismiss(true)
                     .positiveColor(fab_skin)
                     .neutralColor(fab_skin)
-                    .neutralText(R.string.defualt)
+                    .neutralText(R.string.default_string)
                     .callback(new MaterialDialog.ButtonCallback() {
                         @Override
                         public void onNeutral(MaterialDialog dialog) {
@@ -228,7 +228,7 @@ private void loadSection1() {
 
             int colorPickerPref = sharedPref.getInt(PreferencesConstants.PREFERENCE_COLOR_CONFIG, ColorPickerDialog.NO_DATA);
             if(colorPickerPref == ColorPickerDialog.RANDOM_INDEX) {
-                Toast.makeText(getActivity(), R.string.setRandom, Toast.LENGTH_LONG).show();
+                Toast.makeText(getActivity(), R.string.set_random, Toast.LENGTH_LONG).show();
             }
         });
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -208,7 +208,7 @@ private void loadDeleteDialog(final PathSwitchPreference p) {
         int fab_skin = activity.getAccent();
 
         final MaterialDialog dialog = new MaterialDialog.Builder(getActivity())
-                .title(R.string.questiondelete_shortcut)
+                .title(R.string.question_delete_shortcut)
                 .theme(activity.getAppTheme().getMaterialDialogTheme())
                 .positiveColor(fab_skin)
                 .positiveText(getString(R.string.delete).toUpperCase())// TODO: 29/4/2017 don't use toUpperCase(), 20/9,2017 why not?

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -113,7 +113,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 DataUtils dataUtils = DataUtils.getInstance();
                 dataUtils.addBook(new String[]{rowItem.title, rowItem.desc}, true);
                 mainFragment.getMainActivity().getDrawer().refreshDrawer();
-                Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
+                Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarks_added), Toast.LENGTH_LONG).show();
                 return true;
             case R.id.delete:
                 ArrayList<LayoutElementParcelable> positions = new ArrayList<>();

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -48,7 +48,7 @@ public class ColorPickerDialog extends SelectedColorsPreference {
      * ONLY add new elements to the end of the array
      */
     private static final ColorItemPair[] COLORS = new ColorItemPair[]{
-            new ColorItemPair(R.string.defualt,
+            new ColorItemPair(R.string.default_string,
                     new int[]{R.color.primary_indigo, R.color.primary_indigo, R.color.primary_pink, R.color.accent_pink}),
             new ColorItemPair(R.string.orange,
                     new int[]{R.color.primary_orange, R.color.primary_orange, R.color.primary_deep_orange, R.color.accent_amber}),

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -66,7 +66,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final MaterialDialog materialDialog;
             String pa = path;
             MaterialDialog.Builder builder = new MaterialDialog.Builder(c);
-            builder.title(R.string.renamebookmark);
+            builder.title(R.string.rename_bookmark);
             builder.positiveColor(accentColor);
             builder.negativeColor(accentColor);
             builder.neutralColor(accentColor);
@@ -81,8 +81,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final TextInputLayout t2 = v2.findViewById(R.id.t2);
             final AppCompatEditText conName = v2.findViewById(R.id.editText4);
             conName.setText(title);
-            final String s1 = getString(R.string.cantbeempty, c.getString(R.string.name));
-            final String s2 = getString(R.string.cantbeempty, c.getString(R.string.path));
+            final String s1 = getString(R.string.cant_be_empty, c.getString(R.string.name));
+            final String s2 = getString(R.string.cant_be_empty, c.getString(R.string.path));
             conName.addTextChangedListener(new SimpleTextWatcher() {
                 @Override
                 public void afterTextChanged(Editable s) {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -56,7 +56,7 @@ public void dismiss() {
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         MaterialDialog.Builder builder = new MaterialDialog.Builder(getActivity());
-        builder.title(R.string.searchingdevices);
+        builder.title(R.string.searching_devices);
         builder.negativeColor(accentColor);
         builder.negativeText(R.string.cancel);
         builder.onNegative((dialog, which) -> {
@@ -95,7 +95,7 @@ public void searchFinished() {
                     getActivity().runOnUiThread(() -> {
                         if (computers.size() == 1) {
                             dismiss();
-                            Toast.makeText(getActivity(), getString(R.string.nodevicefound), Toast.LENGTH_SHORT).show();
+                            Toast.makeText(getActivity(), getString(R.string.no_device_found), Toast.LENGTH_SHORT).show();
                             MainActivity mainActivity = (MainActivity) getActivity();
                             mainActivity.showSMBDialog("", "", false);
                             return;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -326,7 +326,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         if (!results) {
             pathText.setText(mainActivity.getString(R.string.folderfilecount, folderCount, fileCount));
         } else {
-            fullPathText.setText(mainActivity.getString(R.string.searchresults, query));
+            fullPathText.setText(mainActivity.getString(R.string.search_results, query));
             pathText.setText("");
             return;
         }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -274,7 +274,7 @@ public void refreshDrawer() {
                 name = resources.getString(R.string.extstorage);
                 icon1 = R.drawable.ic_sd_storage_white_24dp;
             } else if ("/".equals(file)) {
-                name = resources.getString(R.string.rootdirectory);
+                name = resources.getString(R.string.root_directory);
                 icon1 = R.drawable.ic_drawer_root_white;
             } else {
                 name = f.getName();

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareTask.java
Patch:
@@ -103,7 +103,7 @@ public void onPostExecute(Void v) {
             shareAdapter.updateMatDialog(b);
             b.show();
         } else {
-            Toast.makeText(contextc, R.string.noappfound, Toast.LENGTH_SHORT).show();
+            Toast.makeText(contextc, R.string.no_app_found, Toast.LENGTH_SHORT).show();
         }
     }
 }

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -267,11 +267,11 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     toggleChecked(position, holder.checkImageView);
                 } else {
                     if (rowItem.directory) {
-                        String newPath = rowItem.path.substring(0, rowItem.path.length() - 1);
+                        String newPath = (rowItem.path.endsWith("/")) ? rowItem.path.substring(0, rowItem.path.length() - 1) : rowItem.path;
                         compressedExplorerFragment.changePath(newPath);
                     } else {
-                        String fileName = compressedExplorerFragment.compressedFile.getName().substring(0,
-                                compressedExplorerFragment.compressedFile.getName().lastIndexOf("."));
+
+                        String fileName = CompressedHelper.getFileName(compressedExplorerFragment.compressedFile.getName());
                         String archiveCacheDirPath = compressedExplorerFragment.getActivity().getExternalCacheDir().getPath() +
                                 CompressedHelper.SEPARATOR + fileName;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -41,8 +41,8 @@ public abstract class Extractor {
     protected OnUpdate listener;
     protected List<String> invalidArchiveEntries;
 
-    public Extractor(Context context, String filePath, String outputPath,
-                     Extractor.OnUpdate listener) {
+    public Extractor(@NonNull Context context, @NonNull String filePath, @NonNull String outputPath,
+                     @NonNull Extractor.OnUpdate listener) {
         this.context = context;
         this.filePath = filePath;
         this.outputPath = outputPath;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
@@ -43,7 +44,7 @@
 
 public class GzipExtractor extends Extractor {
 
-    public GzipExtractor(Context context, String filePath, String outputPath, OnUpdate listener) {
+    public GzipExtractor(@NonNull Context context, @NonNull String filePath, @NonNull String outputPath, @NonNull OnUpdate listener) {
         super(context, filePath, outputPath, listener);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
@@ -42,7 +43,7 @@
 
 public class RarExtractor extends Extractor {
 
-    public RarExtractor(Context context, String filePath, String outputPath, OnUpdate listener) {
+    public RarExtractor(@NonNull Context context, @NonNull String filePath, @NonNull String outputPath, @NonNull OnUpdate listener) {
         super(context, filePath, outputPath, listener);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
@@ -43,7 +44,7 @@
 
 public class TarExtractor extends Extractor {
 
-    public TarExtractor(Context context, String filePath, String outputPath, Extractor.OnUpdate listener) {
+    public TarExtractor(@NonNull Context context, @NonNull String filePath, @NonNull String outputPath, @NonNull OnUpdate listener) {
         super(context, filePath, outputPath, listener);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/Decompressor.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.services.ExtractService;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
@@ -34,7 +35,7 @@ public void setFilePath(String path) {
      * @param path end with "/" if it is a directory, does not if it's a file
      */
     public abstract CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                                    OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish);
+                                                    OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish);
 
     /**
      * Decompress a file somewhere

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/GzipDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.GzipHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.TarHelperTask;
@@ -41,7 +42,7 @@ public GzipDecompressor(Context context) {
 
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new GzipHelperTask(context, filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.content.Context;
 
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -42,7 +43,7 @@ public RarDecompressor(Context context) {
 
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
-                                       OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                       OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.TarHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
@@ -38,7 +39,7 @@ public TarDecompressor(Context context) {
     }
 
     @Override
-    public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+    public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/ZipDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
 import java.util.ArrayList;
 
@@ -39,7 +40,7 @@ public ZipDecompressor(Context context) {
 
     @Override
     public ZipHelperTask changePath(String path, boolean addGoBackItem,
-                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new ZipHelperTask(context, filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -86,9 +86,11 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
+        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");
+        MIME_TYPES.put("lzma", "application/x-lzma");
         MIME_TYPES.put("Z", "application/x-compress");
 
         MIME_TYPES.put("bat", "application/x-msdownload");

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -90,7 +90,7 @@ public void testExtractZipWithSlashPrefixEntry() throws Exception{
     @Test
     public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile1.getAbsolutePath(), null, false, (data) -> {});
-        List<CompressedObjectParcelable> result = task.execute().get();
+        List<CompressedObjectParcelable> result = task.execute().get().result;
         assertEquals(1, result.size());
         assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
@@ -99,7 +99,7 @@ public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
     @Test
     public void testZipHelperTaskShouldOmitInvalidEntriesWithBackslash() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile2.getAbsolutePath(), null, false, (data) -> {});
-        List<CompressedObjectParcelable> result = task.execute().get();
+        List<CompressedObjectParcelable> result = task.execute().get().result;
         assertEquals(1, result.size());
         assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -217,7 +217,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
             GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
-                holder.date.setText(Utils.getDate(rowItem.date));
+                holder.date.setText(Utils.getDate(context, rowItem.date));
             if (rowItem.directory) {
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(compressedExplorerFragment.iconskin);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -244,7 +244,7 @@ private LayoutElementParcelable createListParcelables(HybridFileParcelable baseF
                 ma.file_count++;
             }
 
-            LayoutElementParcelable layoutElement = new LayoutElementParcelable(baseFile.getName(),
+            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(),
                     baseFile.getPath(), baseFile.getPermission(), baseFile.getLink(), size,
                     longSize, false, baseFile.getDate() + "", baseFile.isDirectory(),
                     showThumbs, baseFile.getMode());

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -49,7 +49,7 @@ public void handleMessage(Message msg) {
             case CustomFileObserver.NEW_ITEM:
                 HybridFile fileCreated = new HybridFile(main.openMode,
                         main.getCurrentPath() + "/" + path);
-                main.getElementsList().add(fileCreated.generateLayoutElement(useThumbs));
+                main.getElementsList().add(fileCreated.generateLayoutElement(main.getContext(), useThumbs));
                 break;
             case CustomFileObserver.DELETED_ITEM:
                 for (int i = 0; i < main.getElementsList().size(); i++) {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1255,19 +1255,19 @@ public String getNameString(Context context) {
      * Generates a {@link LayoutElementParcelable} adapted compatible element.
      * Currently supports only local filesystem
      */
-    public LayoutElementParcelable generateLayoutElement(boolean showThumbs) {
+    public LayoutElementParcelable generateLayoutElement(@NonNull Context c, boolean showThumbs) {
         switch (mode) {
             case FILE:
             case ROOT:
                 File file = new File(path);
                 LayoutElementParcelable layoutElement;
                 if (isDirectory()) {
 
-                    layoutElement = new LayoutElementParcelable(path, RootHelper.parseFilePermission(file),
+                    layoutElement = new LayoutElementParcelable(c, path, RootHelper.parseFilePermission(file),
                             "", folderSize() + "", 0, true, file.lastModified() + "",
                             false, showThumbs, mode);
                 } else {
-                    layoutElement = new LayoutElementParcelable(
+                    layoutElement = new LayoutElementParcelable(c,
                             file.getPath(), RootHelper.parseFilePermission(file),
                             file.getPath(), file.length() + "", file.length(), false, file.lastModified() + "",
                             false, showThumbs, mode);

File: app/src/main/java/com/amaze/filemanager/fragments/PropertiesSheet.java
Patch:
@@ -72,9 +72,9 @@ public void setupDialog(Dialog dialog, int style) {
         mFileLocationTextView = rootView.findViewById(R.id.text_view_file_location);
         mFileLocationTextView.setText(mFile.getPath());
         mFileAccessedTextView = rootView.findViewById(R.id.text_view_file_accessed);
-        mFileAccessedTextView.setText(Utils.getDate(mFile.getDate()));
+        mFileAccessedTextView.setText(Utils.getDate(getContext(), mFile.getDate()));
         mFileModifiedTextView = rootView.findViewById(R.id.text_view_file_modified);
-        mFileModifiedTextView.setText(Utils.getDate(mFile.getDate()));
+        mFileModifiedTextView.setText(Utils.getDate(getContext(), mFile.getDate()));
 
         CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) ((View) rootView.getParent()).getLayoutParams();
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -375,7 +375,7 @@ private static void showPropertiesDialog(final HybridFileParcelable baseFile, fi
         final Context c = base.getApplicationContext();
         int accentColor = base.getAccent();
         long last = baseFile.getDate();
-        final String date = Utils.getDate(last),
+        final String date = Utils.getDate(base, last),
                 items = c.getString(R.string.calculating),
                 name = baseFile.getName(),
                 parent = baseFile.getReadablePath(baseFile.getParent(c));

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -30,7 +30,7 @@ public class NotificationConstants {
 
     public static final String CHANNEL_NORMAL_ID = "normalChannel";
     public static final String CHANNEL_FTP_ID = "ftpChannel";
-
+    
     /**
      * This creates a channel (API >= 26) or applies the correct metadata to a notification (API < 26)
      */

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -46,7 +46,6 @@ private void createNotification(Context context, boolean noStopButton) {
                 + address.getHostAddress() + ":"
                 + port + "/";
 
-        //TODO: is this an appropriate way to get the builder from FtpService to update the notification here?
         NotificationCompat.Builder builder = FtpService.getBuilder();
 
         int icon = R.drawable.ic_ftp_light;

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTaskTest2.java
Patch:
@@ -3,6 +3,7 @@
 import android.os.Environment;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 
 import org.junit.Ignore;
 import org.junit.Test;
@@ -17,8 +18,8 @@ public class SevenZipHelperTaskTest2 extends AbstractCompressedHelperTaskTest {
     @Test @Override
     public void testRoot(){
         CompressedHelperTask task = createTask("");
-        ArrayList<CompressedObjectParcelable> result = task.doInBackground();
-        assertEquals(result.size(), 0);
+        AsyncTaskResult<ArrayList<CompressedObjectParcelable>> result = task.doInBackground();
+        assertEquals(result.result.size(), 0);
     }
 
     @Test @Override @Ignore("Not testing this one")

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -90,7 +90,7 @@ public void testExtractZipWithSlashPrefixEntry() throws Exception{
     @Test
     public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile1.getAbsolutePath(), null, false, (data) -> {});
-        List<CompressedObjectParcelable> result = task.execute().get();
+        List<CompressedObjectParcelable> result = task.execute().get().result;
         assertEquals(1, result.size());
         assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
@@ -99,7 +99,7 @@ public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
     @Test
     public void testZipHelperTaskShouldOmitInvalidEntriesWithBackslash() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile2.getAbsolutePath(), null, false, (data) -> {});
-        List<CompressedObjectParcelable> result = task.execute().get();
+        List<CompressedObjectParcelable> result = task.execute().get().result;
         assertEquals(1, result.size());
         assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -31,7 +31,7 @@
 import static org.junit.Assert.fail;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 14, maxSdk = 26)
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 14, maxSdk = 27)
 public abstract class AbstractExtractorTest {
 
     protected abstract Class<? extends Extractor> extractorClass();

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/ExtractorTestSuite.java
Patch:
@@ -6,10 +6,12 @@
 @RunWith(Suite.class)
 @Suite.SuiteClasses({
         TarGzExtractorTest.class,
+        TgzExtractorTest.class,
         ZipExtractorTest.class,
         TarExtractorTest.class,
         RarExtractorTest.class,
         Bzip2ExtractorTest.class,
+        Bzip2ExtractorTest2.class,
         LzmaExtractorTest.class,
         XzExtractorTest.class,
         SevenZipExtractorTest.class,

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -217,7 +217,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
             GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
-                holder.date.setText(Utils.getDate(rowItem.date));
+                holder.date.setText(Utils.getDate(context, rowItem.date));
             if (rowItem.directory) {
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(compressedExplorerFragment.iconskin);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -244,7 +244,7 @@ private LayoutElementParcelable createListParcelables(HybridFileParcelable baseF
                 ma.file_count++;
             }
 
-            LayoutElementParcelable layoutElement = new LayoutElementParcelable(baseFile.getName(),
+            LayoutElementParcelable layoutElement = new LayoutElementParcelable(c, baseFile.getName(),
                     baseFile.getPath(), baseFile.getPermission(), baseFile.getLink(), size,
                     longSize, false, baseFile.getDate() + "", baseFile.isDirectory(),
                     showThumbs, baseFile.getMode());

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -49,7 +49,7 @@ public void handleMessage(Message msg) {
             case CustomFileObserver.NEW_ITEM:
                 HybridFile fileCreated = new HybridFile(main.openMode,
                         main.getCurrentPath() + "/" + path);
-                main.getElementsList().add(fileCreated.generateLayoutElement(useThumbs));
+                main.getElementsList().add(fileCreated.generateLayoutElement(main.getContext(), useThumbs));
                 break;
             case CustomFileObserver.DELETED_ITEM:
                 for (int i = 0; i < main.getElementsList().size(); i++) {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1255,19 +1255,19 @@ public String getNameString(Context context) {
      * Generates a {@link LayoutElementParcelable} adapted compatible element.
      * Currently supports only local filesystem
      */
-    public LayoutElementParcelable generateLayoutElement(boolean showThumbs) {
+    public LayoutElementParcelable generateLayoutElement(@NonNull Context c, boolean showThumbs) {
         switch (mode) {
             case FILE:
             case ROOT:
                 File file = new File(path);
                 LayoutElementParcelable layoutElement;
                 if (isDirectory()) {
 
-                    layoutElement = new LayoutElementParcelable(path, RootHelper.parseFilePermission(file),
+                    layoutElement = new LayoutElementParcelable(c, path, RootHelper.parseFilePermission(file),
                             "", folderSize() + "", 0, true, file.lastModified() + "",
                             false, showThumbs, mode);
                 } else {
-                    layoutElement = new LayoutElementParcelable(
+                    layoutElement = new LayoutElementParcelable(c,
                             file.getPath(), RootHelper.parseFilePermission(file),
                             file.getPath(), file.length() + "", file.length(), false, file.lastModified() + "",
                             false, showThumbs, mode);

File: app/src/main/java/com/amaze/filemanager/fragments/PropertiesSheet.java
Patch:
@@ -72,9 +72,9 @@ public void setupDialog(Dialog dialog, int style) {
         mFileLocationTextView = rootView.findViewById(R.id.text_view_file_location);
         mFileLocationTextView.setText(mFile.getPath());
         mFileAccessedTextView = rootView.findViewById(R.id.text_view_file_accessed);
-        mFileAccessedTextView.setText(Utils.getDate(mFile.getDate()));
+        mFileAccessedTextView.setText(Utils.getDate(getContext(), mFile.getDate()));
         mFileModifiedTextView = rootView.findViewById(R.id.text_view_file_modified);
-        mFileModifiedTextView.setText(Utils.getDate(mFile.getDate()));
+        mFileModifiedTextView.setText(Utils.getDate(getContext(), mFile.getDate()));
 
         CoordinatorLayout.LayoutParams layoutParams = (CoordinatorLayout.LayoutParams) ((View) rootView.getParent()).getLayoutParams();
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -375,7 +375,7 @@ private static void showPropertiesDialog(final HybridFileParcelable baseFile, fi
         final Context c = base.getApplicationContext();
         int accentColor = base.getAccent();
         long last = baseFile.getDate();
-        final String date = Utils.getDate(last),
+        final String date = Utils.getDate(base, last),
                 items = c.getString(R.string.calculating),
                 name = baseFile.getName(),
                 parent = baseFile.getReadablePath(baseFile.getParent(c));

File: app/src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -352,6 +352,7 @@ public void addTab(@NonNull Tab tab, String path) {
 
         if (path != null && path.length() != 0) {
             b.putString("lastpath", path);
+            b.putInt("openmode", OpenMode.UNKNOWN.ordinal());
         } else {
             b.putString("lastpath", tab.getOriginalPath(savepaths, mainActivity.getPrefs()));
         }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/Decompressor.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.services.ExtractService;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
@@ -34,7 +35,7 @@ public void setFilePath(String path) {
      * @param path end with "/" if it is a directory, does not if it's a file
      */
     public abstract CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                                    OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish);
+                                                    OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish);
 
     /**
      * Decompress a file somewhere

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/Bzip2Decompressor.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.Bzip2HelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -38,7 +39,7 @@ public Bzip2Decompressor(Context context) {
 
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new Bzip2HelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/GzipDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.GzipHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.TarHelperTask;
@@ -41,7 +42,7 @@ public GzipDecompressor(Context context) {
 
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new GzipHelperTask(context, filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/LzmaDecompressor.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.LzmaHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -38,7 +39,7 @@ public LzmaDecompressor(Context context) {
 
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new LzmaHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
Patch:
@@ -24,6 +24,7 @@
 
 import android.content.Context;
 
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -42,7 +43,7 @@ public RarDecompressor(Context context) {
 
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
-                                       OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                       OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/SevenZipDecompressor.java
Patch:
@@ -27,6 +27,7 @@
 import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.SevenZipHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
@@ -41,7 +42,7 @@ public SevenZipDecompressor(@NonNull Context context) {
 
     @Override
     public SevenZipHelperTask changePath(String path, boolean addGoBackItem,
-                                       OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                       OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new SevenZipHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.TarHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
@@ -38,7 +39,7 @@ public TarDecompressor(Context context) {
     }
 
     @Override
-    public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+    public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/XzDecompressor.java
Patch:
@@ -23,6 +23,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.XzHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
@@ -38,7 +39,7 @@ public XzDecompressor(Context context) {
 
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
-                                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new XzHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/ZipDecompressor.java
Patch:
@@ -25,6 +25,7 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.ZipHelperTask;
 import java.util.ArrayList;
 
@@ -39,7 +40,7 @@ public ZipDecompressor(Context context) {
 
     @Override
     public ZipHelperTask changePath(String path, boolean addGoBackItem,
-                           OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
+                           OnAsyncTaskFinished<AsyncTaskResult<ArrayList<CompressedObjectParcelable>>> onFinish) {
         return new ZipHelperTask(context, filePath, path, addGoBackItem, onFinish);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTask.java
Patch:
@@ -80,9 +80,11 @@ void addElements(@NonNull ArrayList<CompressedObjectParcelable> elements) {
                 }
                 paused = false;
                 break;
-            } catch (PasswordRequiredException | CorruptedInputException e) {
+            } catch (PasswordRequiredException e) {
                 paused = true;
                 publishProgress(e);
+            } catch (CorruptedInputException e) {
+                break;
             } catch (IOException e) {
                 e.printStackTrace();
             }

File: app/src/test/java/com/amaze/filemanager/asynchronous/asynctasks/compress/CompressedHelperTaskTestSuite.java
Patch:
@@ -14,7 +14,9 @@
     Bzip2HelperTaskTest.class,
     LzmaHelperTaskTest.class,
     XzHelperTaskTest.class,
+    XzHelperTaskTest2.class,
     SevenZipHelperTaskTest.class,
+    SevenZipHelperTaskTest2.class,
     EncryptedZipHelperTaskTest.class,
     EncryptedSevenZipHelperTaskTest.class,
     ListEncryptedSevenZipHelperTaskTest.class

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -74,6 +74,8 @@ public boolean isDirectory() {
         return isDirectory;
     }
 
+    public boolean isHidden(){ return name.startsWith("."); }
+
     public void setDirectory(boolean directory) {
         isDirectory = directory;
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/XzDecompressor.java
Patch:
@@ -23,8 +23,8 @@
 import android.content.Context;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.asynchronous.asynctasks.compress.Bzip2HelperTask;
 import com.amaze.filemanager.asynchronous.asynctasks.compress.CompressedHelperTask;
+import com.amaze.filemanager.asynchronous.asynctasks.compress.XzHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
@@ -39,7 +39,7 @@ public XzDecompressor(Context context) {
     @Override
     public CompressedHelperTask changePath(String path, boolean addGoBackItem,
                                            OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new Bzip2HelperTask(filePath, path, addGoBackItem, onFinish);
+        return new XzHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -836,6 +836,7 @@ public static void showPasswordDialog(@NonNull Context c, @NonNull final MainAct
         builder.customView(dialogLayout, false)
                 .theme(appTheme.getMaterialDialogTheme())
                 .autoDismiss(false)
+                .canceledOnTouchOutside(false)
                 .title(titleText)
                 .positiveText(R.string.ok)
                 .positiveColor(accentColor)

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -74,6 +74,8 @@ public boolean isDirectory() {
         return isDirectory;
     }
 
+    public boolean isHidden(){ return name.startsWith("."); }
+
     public void setDirectory(boolean directory) {
         isDirectory = directory;
     }

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -523,6 +523,9 @@ private void setPath(Operation operation, String path) {
         ContentValues contentValues = new ContentValues();
         contentValues.put(COLUMN_PATH, path);
 
+        if(Operation.HISTORY.equals(operation))
+            sqLiteDatabase.delete(getTableForOperation(operation), "path = ?", new String[]{path});
+
         sqLiteDatabase.insert(getTableForOperation(operation), null, contentValues);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -74,6 +74,8 @@ public boolean isDirectory() {
         return isDirectory;
     }
 
+    public boolean isHidden(){ return name.startsWith("."); }
+
     public void setDirectory(boolean directory) {
         isDirectory = directory;
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/SevenZipExtractor.java
Patch:
@@ -23,7 +23,6 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.compressed.ArchivePasswordCache;
@@ -99,7 +98,7 @@ private void extractEntry(@NonNull final Context context, SevenZFile sevenzFile,
         try {
             while (progress<entry.getSize()) {
                 int length;
-                int bytesLeft = new Long(entry.getSize()-progress).intValue();
+                int bytesLeft = Long.valueOf(entry.getSize()-progress).intValue();
                 length = sevenzFile.read(content, 0,
                         bytesLeft>GenericCopyUtil.DEFAULT_BUFFER_SIZE ? GenericCopyUtil.DEFAULT_BUFFER_SIZE : bytesLeft);
                 outputStream.write(content, 0, length);

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -113,7 +113,6 @@ else if (file1.directory && !file2.directory) {
     }
 
     private String getNameForPath(String path) {
-        System.err.printf("getNameForPath: %s\n", path);
         if (path.isEmpty()) return "";
 
         final StringBuilder stringBuilder = new StringBuilder(path);

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -211,7 +211,7 @@ public void onActivityCreated(Bundle savedInstanceState)
             String fileName = compressedFile.getName().substring(0, compressedFile.getName().lastIndexOf("."));
             String path = getActivity().getExternalCacheDir().getPath() + SEPARATOR + fileName;
             files.add(new HybridFileParcelable(path));
-            decompressor = CompressedHelper.getCompressorInstance(getContext(), compressedFile);
+            decompressor = CompressedHelper.getCompressorInstance(getContext(), compressedFile, null);
 
             changePath("");
         } else {
@@ -239,7 +239,7 @@ private void onRestoreInstanceState(Bundle savedInstanceState) {
         elements = savedInstanceState.getParcelableArrayList(KEY_ELEMENTS);
         relativeDirectory = savedInstanceState.getString(KEY_PATH, "");
 
-        decompressor = CompressedHelper.getCompressorInstance(getContext(), compressedFile);
+        decompressor = CompressedHelper.getCompressorInstance(getContext(), compressedFile, null);
         createViews(elements, relativeDirectory);
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -267,7 +267,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     toggleChecked(position, holder.checkImageView);
                 } else {
                     if (rowItem.directory) {
-                        String newPath = rowItem.path.substring(0, rowItem.path.length() - 1);
+                        String newPath = (rowItem.path.endsWith("/")) ? rowItem.path.substring(0, rowItem.path.length() - 1) : rowItem.path;
                         compressedExplorerFragment.changePath(newPath);
                     } else {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTask.java
Patch:
@@ -30,14 +30,13 @@ void addElements(ArrayList<CompressedObjectParcelable> elements) {
             sevenzFile = new SevenZFile(new File(filePath));
 
             for (SevenZArchiveEntry entry : sevenzFile.getEntries()) {
-                android.util.Log.d("DEBUG", String.format("Entry: %s", entry.getName()));
                 String name = entry.getName();
                 boolean isInBaseDir = relativePath.equals("") && !name.contains(SEPARATOR);
                 boolean isInRelativeDir = name.contains(SEPARATOR)
                         && name.substring(0, name.lastIndexOf(SEPARATOR)).equals(relativePath);
 
                 if (isInBaseDir || isInRelativeDir) {
-                    elements.add(new CompressedObjectParcelable(entry.getName(),
+                    elements.add(new CompressedObjectParcelable(entry.getName() + " ",
                             entry.getLastModifiedDate().getTime(), entry.getSize(), entry.isDirectory()));
                 }
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTask.java
Patch:
@@ -3,8 +3,8 @@
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
-import org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry;
-import org.apache.commons.compress.archivers.sevenz.SevenZFile;
+import com.amaze.filemanager.filesystem.compressed.sevenz.SevenZArchiveEntry;
+import com.amaze.filemanager.filesystem.compressed.sevenz.SevenZFile;
 
 import java.io.File;
 import java.io.IOException;
@@ -30,6 +30,7 @@ void addElements(ArrayList<CompressedObjectParcelable> elements) {
             sevenzFile = new SevenZFile(new File(filePath));
 
             for (SevenZArchiveEntry entry : sevenzFile.getEntries()) {
+                android.util.Log.d("DEBUG", String.format("Entry: %s", entry.getName()));
                 String name = entry.getName();
                 boolean isInBaseDir = relativePath.equals("") && !name.contains(SEPARATOR);
                 boolean isInRelativeDir = name.contains(SEPARATOR)

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/SevenZipDecompressor.java
Patch:
@@ -2,9 +2,8 @@
 
 import android.content.Context;
 
-import com.amaze.filemanager.asynchronous.asynctasks.compress.SevenZipHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
+import com.amaze.filemanager.asynchronous.asynctasks.compress.SevenZipHelperTask;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -81,7 +81,7 @@ public void testExtractZipWithWrongPathWindows() throws Exception{
 
     @Test
     public void testExtractZipWithSlashPrefixEntry() throws Exception{
-        Extractor extractor = new ZipExtractor(RuntimeEnvironment.application, zipfile3.getAbsolutePath(), Environment.getExternalStorageDirectory().getAbsolutePath(), emptyListener);
+        Extractor extractor = new ZipExtractor(RuntimeEnvironment.application, zipfile3.getAbsolutePath(), Environment.getExternalStorageDirectory().getAbsolutePath(), emptyListener, null);
         extractor.extractFiles(new String[]{"/test.txt"});
         assertEquals(0, extractor.getInvalidArchiveEntries().size());
         assertTrue(new File(Environment.getExternalStorageDirectory(), "test.txt").exists());

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/AbstractExtractorTest.java
Patch:
@@ -31,7 +31,7 @@
 import static org.junit.Assert.*;
 
 @RunWith(RobolectricTestRunner.class)
-@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class})
+@Config(constants = BuildConfig.class, shadows = {ShadowMultiDex.class}, minSdk = 14, maxSdk = 26)
 public abstract class AbstractExtractorTest {
 
     protected abstract Class<? extends Extractor> extractorClass();
@@ -61,10 +61,10 @@ public void tearDown() throws Exception {
 
     @Test
     public void testFixEntryName() throws Exception {
-        Extractor extractor = extractorClass().getConstructor(Context.class, String.class, String.class, Extractor.OnUpdate.class)
+        Extractor extractor = extractorClass().getConstructor(Context.class, String.class, String.class, Extractor.OnUpdate.class, String.class)
                 .newInstance(RuntimeEnvironment.application,
                         getArchiveFile().getAbsolutePath(),
-                        Environment.getExternalStorageDirectory().getAbsolutePath(), null);
+                        Environment.getExternalStorageDirectory().getAbsolutePath(), null, null);
 
         assertEquals("test.txt", extractor.fixEntryName("test.txt"));
         assertEquals("test.txt", extractor.fixEntryName("/test.txt"));

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -210,7 +210,6 @@ public void invalidateNavBar() {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
             boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -28,18 +28,18 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
         if (requestCode == STORAGE_PERMISSION) {
             if (isGranted(grantResults)) {
                 permissionCallbacks[STORAGE_PERMISSION].onPermissionGranted();
+                permissionCallbacks[STORAGE_PERMISSION] = null;
             } else {
                 Toast.makeText(this, R.string.grantfailed, Toast.LENGTH_SHORT).show();
                 requestStoragePermission(permissionCallbacks[STORAGE_PERMISSION]);
             }
 
-            permissionCallbacks[STORAGE_PERMISSION] = null;
         } else if (requestCode == INSTALL_APK_PERMISSION) {
             if (isGranted(grantResults)) {
                 permissionCallbacks[INSTALL_APK_PERMISSION].onPermissionGranted();
+                permissionCallbacks[INSTALL_APK_PERMISSION] = null;
             }
 
-            permissionCallbacks[INSTALL_APK_PERMISSION] = null;
         }
 
     }
@@ -85,7 +85,7 @@ public void requestPermission(final String permission, final int code, @NonNull
 
         if (ActivityCompat.shouldShowRequestPermissionRationale(this, permission)) {
             rationale.getActionButton(DialogAction.POSITIVE).setOnClickListener(v -> {
-                ActivityCompat.requestPermissions(PermissionsActivity.this, new String[]{permission}, 77);
+                ActivityCompat.requestPermissions(PermissionsActivity.this, new String[]{permission}, code);
                 rationale.dismiss();
             });
             rationale.show();

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PreferenceActivity.java
Patch:
@@ -68,13 +68,13 @@ public boolean getBoolean(String key) {
             case PREFERENCE_SHOW_DIVIDERS:
             case PREFERENCE_SHOW_HEADERS:
             case PREFERENCE_USE_CIRCULAR_IMAGES:
-            case PREFERENCE_SHOW_LAST_MODIFIED:
             case PREFERENCE_COLORIZE_ICONS:
             case PREFERENCE_SHOW_THUMB:
             case PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES:
             case PREFERENCE_NEED_TO_SET_HOME:
             case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
             case PREFERENCE_VIEW:
+            case PREFERENCE_SHOW_LAST_MODIFIED:
                 defaultValue = true;
                 break;
             default:

File: app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -75,7 +75,7 @@ public void onBindViewHolder(HiddenViewHolder holder, int position) {
                 HybridFileParcelable baseFile = new HybridFileParcelable(items.get(position).getPath() + "/.nomedia");
                 baseFile.setMode(OpenMode.FILE);
                 a1.add(baseFile);
-                new DeleteTask(context.getActivity().getContentResolver(), c).execute((a1));
+                new DeleteTask(c).execute((a1));
             }
             dataUtils.removeHiddenFile(items.get(position).getPath());
             items.remove(items.get(position));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -56,12 +56,12 @@ public class DeleteTask extends AsyncTask<ArrayList<HybridFileParcelable>, Strin
     private CompressedExplorerFragment compressedExplorerFragment;
     private DataUtils dataUtils = DataUtils.getInstance();
 
-    public DeleteTask(ContentResolver c, Context cd) {
+    public DeleteTask(Context cd) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
     }
 
-    public DeleteTask(ContentResolver c, Context cd, CompressedExplorerFragment compressedExplorerFragment) {
+    public DeleteTask(Context cd, CompressedExplorerFragment compressedExplorerFragment) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
         this.compressedExplorerFragment = compressedExplorerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -92,8 +92,6 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
 
             if (hFile.isSmb()) {
                 ma.smbPath = path;
-            } else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
-                openmode = OpenMode.ROOT;
             }
         }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -215,6 +215,7 @@ public void onPostExecute(Boolean movedCorrectly) {
                 intent.putExtra(CopyService.TAG_COPY_TARGET, paths.get(i));
                 intent.putExtra(CopyService.TAG_COPY_MOVE, true);
                 intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, mode.ordinal());
+                intent.putExtra(CopyService.TAG_IS_ROOT_EXPLORER, mainFrag.getMainActivity().isRootExplorer());
 
                 ServiceWatcherUtil.runService(context, intent);
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -39,7 +39,6 @@
 
 public class RarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String fileLocation;
     private String relativeDirectory;
 
@@ -48,10 +47,9 @@ public class RarHelperTask extends CompressedHelperTask {
      * @param realFileDirectory the location of the zip file
      * @param dir relativeDirectory to access inside the zip file
      */
-    public RarHelperTask(Context context, String realFileDirectory, String dir, boolean goBack,
+    public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         fileLocation = realFileDirectory;
         relativeDirectory = dir;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -41,13 +41,11 @@
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String filePath, relativePath;
 
-    public TarHelperTask(Context context, String filePath, String relativePath, boolean goBack,
+    public TarHelperTask(String filePath, String relativePath, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         this.filePath = filePath;
         this.relativePath = relativePath;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -213,9 +213,9 @@ public void run() {
         try {
             server = serverFactory.createServer();
             server.start();
-            sendBroadcast(new Intent(FtpService.ACTION_STARTED).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
+            sendBroadcast(new Intent(FtpService.ACTION_STARTED).setPackage(getPackageName()).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
         } catch (Exception e) {
-            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART));
+            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART).setPackage(getPackageName()));
         }
     }
 
@@ -234,7 +234,7 @@ public void onDestroy() {
         }
         if (server != null) {
             server.stop();
-            sendBroadcast(new Intent(FtpService.ACTION_STOPPED));
+            sendBroadcast(new Intent(FtpService.ACTION_STOPPED).setPackage(getPackageName()));
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -31,8 +31,6 @@ public class SortHandler extends SQLiteOpenHelper {
     public static final String COLUMN_SORT_PATH = "path";
     public static final String COLUMN_SORT_TYPE = "type";
 
-    private Context context;
-
     public static int getSortType(Context context, String path) {
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(context);
         final Set<String> onlyThisFloders = sharedPref.getStringSet(PREFERENCE_SORTBY_ONLY_THIS, new HashSet<>());
@@ -51,7 +49,6 @@ public static int getSortType(Context context, String path) {
 
     public SortHandler(Context context) {
         super(context, DATABASE_NAME, null, TabHandler.DATABASE_VERSION);
-        this.context = context;
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -50,11 +50,8 @@ public class TabHandler extends SQLiteOpenHelper {
     protected static final String COLUMN_ENCRYPTED_PATH = "path";
     protected static final String COLUMN_ENCRYPTED_PASSWORD = "password";
 
-    private Context context;
-
     public TabHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        this.context = context;
         // The call to onUpgrade() is not performed unless getWritableDatabase() is called.
         // See more at https://github.com/TeamAmaze/AmazeFileManager/pull/1262
         getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -179,6 +179,7 @@ public static OutputStream getOutputStream(final File target, Context context) t
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 // Storage Access Framework
                 DocumentFile targetDocument = getDocumentFile(target, false, context);
+                if (targetDocument == null) return null;
                 outStream = context.getContentResolver().openOutputStream(targetDocument.getUri());
             } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
                 // Workaround for Kitkat ext SD card
@@ -668,9 +669,11 @@ public static boolean isWritable(final File file) {
             try {
                 output.close();
             } catch (IOException e) {
+                e.printStackTrace();
                 // do nothing.
             }
         } catch (FileNotFoundException e) {
+            e.printStackTrace();
             return false;
         }
         boolean result = file.canWrite();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
Patch:
@@ -26,7 +26,6 @@
 
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.rarfile.FileHeader;
@@ -44,7 +43,7 @@ public RarDecompressor(Context context) {
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
                                        OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new RarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
     public static String convertName(FileHeader file) {

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
Patch:
@@ -39,7 +39,7 @@ public TarDecompressor(Context context) {
 
     @Override
     public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new TarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -98,7 +98,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
                 sizeProvider, GlideConstants.MAX_PRELOAD_APPSADAPTER);
 
         adapter = new AppsAdapter(getContext(), (ThemedActivity) getActivity(), utilsProvider, modelProvider, sizeProvider,
-                R.layout.rowlayout, app);
+                R.layout.rowlayout, app, Sp);
 
         getListView().setOnScrollListener(preloader);
         setListAdapter(adapter);

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -358,7 +358,7 @@ public void onDestroyView() {
         // in case of opening any unknown file inside the zip
 
         if (files.get(0).exists()) {
-            new DeleteTask(getActivity().getContentResolver(), getActivity(), this).execute(files);
+            new DeleteTask(getActivity(), this).execute(files);
         }
     }
 
@@ -439,7 +439,8 @@ private void updateBottomBar() {
 
     private void createViews(List<CompressedObjectParcelable> items, String dir) {
         if (compressedExplorerAdapter == null) {
-            compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor);
+            compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor,
+                    PreferenceManager.getDefaultSharedPreferences(getActivity()));
             listView.setAdapter(compressedExplorerAdapter);
         } else {
             compressedExplorerAdapter.generateZip(items);

File: app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
Patch:
@@ -25,8 +25,6 @@ public class SearchWorkerFragment extends Fragment {
 
     public SearchAsyncTask mSearchAsyncTask;
 
-    private static final String TAG = "SearchWorkerFragment";
-
     private HelperCallbacks mCallbacks;
 
     // interface for activity to communicate with asynctask

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -25,6 +25,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_GOBACK_BUTTON = "goBack_checkbox";
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
+    public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
 
     public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -44,7 +44,7 @@ public class ColorPreferenceHelper {
      * @return The {@link ColorPreference} object itself.
      */
     public static UserColorPreferences randomize(Context c) {
-        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length - 1)];
+        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length)];
 
         return new UserColorPreferences(Utils.getColor(c, colorPos[0]), Utils.getColor(c, colorPos[0]),
                 Utils.getColor(c, colorPos[1]), Utils.getColor(c, colorPos[2]));

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -32,7 +32,6 @@
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 import android.support.annotation.RequiresApi;
 import android.support.annotation.StringRes;
 import android.support.design.widget.TextInputEditText;
@@ -106,7 +105,6 @@
 import java.util.Set;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
-import java.util.stream.Stream;
 
 import static android.os.Build.VERSION_CODES.M;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
@@ -1092,7 +1090,7 @@ public static void setPermissionsDialog(final View v, View but, final HybridFile
             String command = String.format(RootUtils.CHMOD_COMMAND, options, perms, file.getPath());
 
             try {
-                RootHelper.runShellCommand(command, (commandCode, exitCode, output) -> {
+                RootHelper.runShellCommandWithCallback(command, (commandCode, exitCode, output) -> {
                     if (exitCode < 0) {
                         Toast.makeText(context, mainFrag.getString(R.string.operationunsuccesful),
                                 Toast.LENGTH_LONG).show();

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -118,10 +118,8 @@ private class ListViewAdapter extends RecyclerView.Adapter<ElementViewHolder> {
 
         private ArrayList<ComputerParcelable> items;
         private LayoutInflater mInflater;
-        private Context context;
 
         public ListViewAdapter(Context context, List<ComputerParcelable> objects) {
-            this.context = context;
             items = new ArrayList<>(objects);
             mInflater = (LayoutInflater) context
                 .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -76,7 +76,7 @@ private void createNotification(Context context, boolean noStopButton) {
         if (!noStopButton && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             int stopIcon = android.R.drawable.ic_menu_close_clear_cancel;
             CharSequence stopText = context.getString(R.string.ftp_notif_stop_server);
-            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER);
+            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(context.getPackageName());
             PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 0,
                     stopIntent, PendingIntent.FLAG_ONE_SHOT);
 

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -333,6 +334,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         }
 
         final String oldPath = fullPathText.getText().toString();
+
         if (oldPath.equals(newPath)) return;
 
         if (!areButtonsShowing()) {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
Patch:
@@ -16,8 +16,7 @@ public class ActionViewStateManager {
     private @ColorInt int idleIconColor;
     private @ColorInt int selectedIconColor;
 
-    public ActionViewStateManager(NavigationView navView, @ColorInt int idleColor,
-                                  @ColorInt int accentColor) {
+    public ActionViewStateManager(@ColorInt int idleColor, @ColorInt int accentColor) {
         idleIconColor = idleColor;
         selectedIconColor = accentColor;
     }

File: app/src/main/java/com/amaze/filemanager/utils/GenericFileProvider.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.v4.content.FileProvider;
 
+import com.amaze.filemanager.BuildConfig;
+
 /**
  * Created by Vishal on 20-08-2017.
  *
@@ -10,6 +12,6 @@
 
 public class GenericFileProvider extends FileProvider {
 
-    public static final String PROVIDER_NAME = "com.amaze.filemanager.FILE_PROVIDER";
+    public static final String PROVIDER_NAME = BuildConfig.APPLICATION_ID + ".FILE_PROVIDER";
 
 }

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -528,15 +528,15 @@ public void invalidName(final HybridFile file) {
     public void deleteFiles(ArrayList<HybridFileParcelable> files) {
         if (files == null || files.size() == 0) return;
         if (files.get(0).isSmb()) {
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
             return;
         }
         int mode = checkFolder(new File(files.get(0).getPath()).getParentFile(), mainActivity);
         if (mode == 2) {
             mainActivity.oparrayList = (files);
             mainActivity.operation = DataUtils.DELETE;
         } else if (mode == 1 || mode == 0)
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
         else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -199,7 +199,6 @@ public void addHeader( String name, String value )
     public CloudStreamServer(int port, File wwwroot ) throws IOException
     {
         myTcpPort = port;
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -226,7 +225,6 @@ public CloudStreamServer(int port, File wwwroot ) throws IOException
 
     public CloudStreamServer(File wwwroot ) throws IOException
     {
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -889,7 +887,6 @@ else if ( tok.equals( " " ))
     private int myTcpPort;
     private final ServerSocket myServerSocket;
     private Thread myThread;
-    private File myRootDir;
 
     // ==================================================
     // File server code

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/CreateFileOnSshdTest.java
Patch:
@@ -33,11 +33,13 @@ public class CreateFileOnSshdTest extends AbstractSftpServerTest {
 
     @Test
     public void testCreateFileNormal() throws Exception {
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(Paths.get(Environment.getExternalStorageDirectory().getAbsolutePath())));
     }
 
     @Test
     public void testCreateFilePermissionDenied() throws Exception{
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(){
             @Override
             public FileSystem createFileSystem(Session session) throws IOException {

File: app/src/main/java/com/amaze/filemanager/utils/GenericFileProvider.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.v4.content.FileProvider;
 
+import com.amaze.filemanager.BuildConfig;
+
 /**
  * Created by Vishal on 20-08-2017.
  *
@@ -10,6 +12,6 @@
 
 public class GenericFileProvider extends FileProvider {
 
-    public static final String PROVIDER_NAME = "com.amaze.filemanager.FILE_PROVIDER";
+    public static final String PROVIDER_NAME = BuildConfig.APPLICATION_ID + ".FILE_PROVIDER";
 
 }

File: app/src/main/java/com/amaze/filemanager/utils/GenericFileProvider.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.v4.content.FileProvider;
 
+import com.amaze.filemanager.BuildConfig;
+
 /**
  * Created by Vishal on 20-08-2017.
  *
@@ -10,6 +12,6 @@
 
 public class GenericFileProvider extends FileProvider {
 
-    public static final String PROVIDER_NAME = "com.amaze.filemanager.FILE_PROVIDER";
+    public static final String PROVIDER_NAME = BuildConfig.APPLICATION_ID + ".FILE_PROVIDER";
 
 }

File: app/src/main/java/com/amaze/filemanager/utils/GenericFileProvider.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.v4.content.FileProvider;
 
+import com.amaze.filemanager.BuildConfig;
+
 /**
  * Created by Vishal on 20-08-2017.
  *
@@ -10,6 +12,6 @@
 
 public class GenericFileProvider extends FileProvider {
 
-    public static final String PROVIDER_NAME = "com.amaze.filemanager.FILE_PROVIDER";
+    public static final String PROVIDER_NAME = BuildConfig.APPLICATION_ID + ".FILE_PROVIDER";
 
 }

File: app/src/main/java/com/amaze/filemanager/utils/GenericFileProvider.java
Patch:
@@ -2,6 +2,8 @@
 
 import android.support.v4.content.FileProvider;
 
+import com.amaze.filemanager.BuildConfig;
+
 /**
  * Created by Vishal on 20-08-2017.
  *
@@ -10,6 +12,6 @@
 
 public class GenericFileProvider extends FileProvider {
 
-    public static final String PROVIDER_NAME = "com.amaze.filemanager.FILE_PROVIDER";
+    public static final String PROVIDER_NAME = BuildConfig.APPLICATION_ID + ".FILE_PROVIDER";
 
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -340,8 +340,7 @@ public static void rename(final HybridFile oldFile, final HybridFile newFile, fi
             @Override
             protected Void doInBackground(Void... params) {
                 // check whether file names for new file are valid or recursion occurs
-                if (MainActivityHelper.isNewDirectoryRecursive(newFile) ||
-                        !Operations.isFileNameValid(newFile.getName(context))) {
+                if (!Operations.isFileNameValid(newFile.getName(context))) {
                     errorCallBack.invalidName(newFile);
                     return null;
                 }

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -340,8 +340,7 @@ public static void rename(final HybridFile oldFile, final HybridFile newFile, fi
             @Override
             protected Void doInBackground(Void... params) {
                 // check whether file names for new file are valid or recursion occurs
-                if (MainActivityHelper.isNewDirectoryRecursive(newFile) ||
-                        !Operations.isFileNameValid(newFile.getName(context))) {
+                if (!Operations.isFileNameValid(newFile.getName(context))) {
                     errorCallBack.invalidName(newFile);
                     return null;
                 }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -859,7 +859,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.history).setVisible(true);
             menu.findItem(R.id.sethome).setVisible(true);
             menu.findItem(R.id.sort).setVisible(true);
-            if (getBoolean(PREFERENCE_SHOW_HIDDENFILES)) menu.findItem(R.id.hiddenitems).setVisible(true);
+            menu.findItem(R.id.hiddenitems).setVisible(true);
             menu.findItem(R.id.view).setVisible(true);
             menu.findItem(R.id.extract).setVisible(false);
             invalidatePasteButton(menu.findItem(R.id.paste));

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -32,7 +32,6 @@
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
 import android.support.annotation.RequiresApi;
 import android.support.annotation.StringRes;
 import android.support.design.widget.TextInputEditText;
@@ -106,7 +105,6 @@
 import java.util.Set;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
-import java.util.stream.Stream;
 
 import static android.os.Build.VERSION_CODES.M;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SORTBY_ONLY_THIS;
@@ -1092,7 +1090,7 @@ public static void setPermissionsDialog(final View v, View but, final HybridFile
             String command = String.format(RootUtils.CHMOD_COMMAND, options, perms, file.getPath());
 
             try {
-                RootHelper.runShellCommand(command, (commandCode, exitCode, output) -> {
+                RootHelper.runShellCommandWithCallback(command, (commandCode, exitCode, output) -> {
                     if (exitCode < 0) {
                         Toast.makeText(context, mainFrag.getString(R.string.operationunsuccesful),
                                 Toast.LENGTH_LONG).show();

File: app/src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -96,7 +96,8 @@ public void run() {
                         // we passed at the beginning is never reached
                         // we try to get a less precise size and make our decision based on that
                         progressHandler.addWrittenLength(progressHandler.getTotalSize());
-                        pendingIntents.remove();
+                        if (!pendingIntents.isEmpty())
+                            pendingIntents.remove();
                         handler.removeCallbacks(this);
                         handlerThread.quit();
                         return;

File: app/src/fdroid/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -18,6 +18,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.RelativeLayout;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -88,8 +88,7 @@ public static void mkdir(@NonNull final HybridFile file, final Context context,
             @Override
             protected Void doInBackground(Void... params) {
                 // checking whether filename is valid or a recursive call possible
-                if (MainActivityHelper.isNewDirectoryRecursive(file) ||
-                        !Operations.isFileNameValid(file.getName(context))) {
+                if (!Operations.isFileNameValid(file.getName(context))) {
                     errorCallBack.invalidName(file);
                     return null;
                 }

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -98,7 +98,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
                 sizeProvider, GlideConstants.MAX_PRELOAD_APPSADAPTER);
 
         adapter = new AppsAdapter(getContext(), (ThemedActivity) getActivity(), utilsProvider, modelProvider, sizeProvider,
-                R.layout.rowlayout, app);
+                R.layout.rowlayout, app, Sp);
 
         getListView().setOnScrollListener(preloader);
         setListAdapter(adapter);

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -436,7 +436,8 @@ private void updateBottomBar() {
 
     private void createViews(List<CompressedObjectParcelable> items, String dir) {
         if (compressedExplorerAdapter == null) {
-            compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor);
+            compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor,
+                    PreferenceManager.getDefaultSharedPreferences(getActivity()));
             listView.setAdapter(compressedExplorerAdapter);
         } else {
             compressedExplorerAdapter.generateZip(items);

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -25,6 +25,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_GOBACK_BUTTON = "goBack_checkbox";
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
+    public static final String PREFERENCE_ENABLE_MARQUEE_FILENAME = "enableMarqueeFilename";
 
     public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -114,7 +114,7 @@ public void onRestoreInstanceState(Parcelable state) {
      */
     public boolean isNavigationViewSavedStateMissing() {
         return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
-                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1;
+                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.P;
     }
 
     static class SavedState extends BaseSavedState {

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -88,8 +88,7 @@ public static void mkdir(@NonNull final HybridFile file, final Context context,
             @Override
             protected Void doInBackground(Void... params) {
                 // checking whether filename is valid or a recursive call possible
-                if (MainActivityHelper.isNewDirectoryRecursive(file) ||
-                        !Operations.isFileNameValid(file.getName(context))) {
+                if (!Operations.isFileNameValid(file.getName(context))) {
                     errorCallBack.invalidName(file);
                     return null;
                 }

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -88,8 +88,7 @@ public static void mkdir(@NonNull final HybridFile file, final Context context,
             @Override
             protected Void doInBackground(Void... params) {
                 // checking whether filename is valid or a recursive call possible
-                if (MainActivityHelper.isNewDirectoryRecursive(file) ||
-                        !Operations.isFileNameValid(file.getName(context))) {
+                if (!Operations.isFileNameValid(file.getName(context))) {
                     errorCallBack.invalidName(file);
                     return null;
                 }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -114,7 +114,7 @@ public void onRestoreInstanceState(Parcelable state) {
      */
     public boolean isNavigationViewSavedStateMissing() {
         return Build.VERSION.SDK_INT >= Build.VERSION_CODES.M
-                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.O_MR1;
+                && Build.VERSION.SDK_INT <= Build.VERSION_CODES.P;
     }
 
     static class SavedState extends BaseSavedState {

File: app/src/fdroid/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -18,6 +18,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.RelativeLayout;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -35,7 +35,6 @@
 import android.preference.Preference;
 import android.preference.PreferenceFragment;
 import android.preference.PreferenceManager;
-import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.v4.app.ActivityCompat;
 import android.view.LayoutInflater;
@@ -44,7 +43,6 @@
 import android.widget.ListView;
 import android.widget.Toast;
 
-import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.AboutActivity;

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1159,9 +1159,7 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
 
     private LayoutElementParcelable getBackElement() {
         if (back == null) {
-            back = new LayoutElementParcelable("..", "", "",
-                    getString(R.string.goback), 0, false, "",
-                    true, getBoolean(PREFERENCE_SHOW_THUMB), OpenMode.UNKNOWN);
+            back = new LayoutElementParcelable(true, getString(R.string.goback), getBoolean(PREFERENCE_SHOW_THUMB));
         }
 
         return back;

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1159,9 +1159,7 @@ public void reloadListElements(boolean back, boolean results, boolean grid) {
 
     private LayoutElementParcelable getBackElement() {
         if (back == null) {
-            back = new LayoutElementParcelable("..", "", "",
-                    getString(R.string.goback), 0, false, "",
-                    true, getBoolean(PREFERENCE_SHOW_THUMB), OpenMode.UNKNOWN);
+            back = new LayoutElementParcelable(true, getString(R.string.goback), getBoolean(PREFERENCE_SHOW_THUMB));
         }
 
         return back;

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/CreateFileOnSshdTest.java
Patch:
@@ -33,11 +33,13 @@ public class CreateFileOnSshdTest extends AbstractSftpServerTest {
 
     @Test
     public void testCreateFileNormal() throws Exception {
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(Paths.get(Environment.getExternalStorageDirectory().getAbsolutePath())));
     }
 
     @Test
     public void testCreateFilePermissionDenied() throws Exception{
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(){
             @Override
             public FileSystem createFileSystem(Session session) throws IOException {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -74,7 +74,7 @@ public HybridFile(OpenMode mode, String path) {
     }
 
     public HybridFile(OpenMode mode, String path, String name, boolean isDirectory) {
-        this.mode = mode;
+        this(mode, path);
         if (path.startsWith("smb://") || isSmb()) {
             if (!isDirectory) this.path += name;
             else if (!name.endsWith("/")) this.path += name + "/";

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PreferenceActivity.java
Patch:
@@ -68,13 +68,13 @@ public boolean getBoolean(String key) {
             case PREFERENCE_SHOW_DIVIDERS:
             case PREFERENCE_SHOW_HEADERS:
             case PREFERENCE_USE_CIRCULAR_IMAGES:
-            case PREFERENCE_SHOW_LAST_MODIFIED:
             case PREFERENCE_COLORIZE_ICONS:
             case PREFERENCE_SHOW_THUMB:
             case PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES:
             case PREFERENCE_NEED_TO_SET_HOME:
             case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
             case PREFERENCE_VIEW:
+            case PREFERENCE_SHOW_LAST_MODIFIED:
                 defaultValue = true;
                 break;
             default:

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -206,7 +206,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
             GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
-                holder.date.setText(Utils.getDate(rowItem.date, compressedExplorerFragment.year));
+                holder.date.setText(Utils.getDate(rowItem.date));
             if (rowItem.directory) {
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(compressedExplorerFragment.iconskin);

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -244,7 +244,7 @@ public boolean onPreferenceClick(Preference preference) {
                 }
 
                 masterPasswordDialogBuilder.input(getResources().getString(R.string.authenticate_password),
-                        decryptedPassword, false, (dialog, input) -> { });
+                        decryptedPassword, true, (dialog, input) -> { });
                 masterPasswordDialogBuilder.theme(utilsProvider.getAppTheme().getMaterialDialogTheme());
                 masterPasswordDialogBuilder.positiveText(getResources().getString(R.string.ok));
                 masterPasswordDialogBuilder.negativeText(getResources().getString(R.string.cancel));

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -36,7 +36,7 @@ public class Utils {
 
     private static final int INDEX_NOT_FOUND = -1;
     private static final SimpleDateFormat DATE_NO_MINUTES = new SimpleDateFormat("MMM dd, yyyy");
-    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | KK:mm a");
+    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | HH:mm");
     private static final String INPUT_INTENT_BLACKLIST_COLON = ";";
     private static final String INPUT_INTENT_BLACKLIST_PIPE = "\\|";
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";

File: app/src/test/java/com/amaze/filemanager/filesystem/ssh/CreateFileOnSshdTest.java
Patch:
@@ -33,11 +33,13 @@ public class CreateFileOnSshdTest extends AbstractSftpServerTest {
 
     @Test
     public void testCreateFileNormal() throws Exception {
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(Paths.get(Environment.getExternalStorageDirectory().getAbsolutePath())));
     }
 
     @Test
     public void testCreateFilePermissionDenied() throws Exception{
+        tearDown();
         createSshServer(new VirtualFileSystemFactory(){
             @Override
             public FileSystem createFileSystem(Session session) throws IOException {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -74,7 +74,7 @@ public HybridFile(OpenMode mode, String path) {
     }
 
     public HybridFile(OpenMode mode, String path, String name, boolean isDirectory) {
-        this.mode = mode;
+        this(mode, path);
         if (path.startsWith("smb://") || isSmb()) {
             if (!isDirectory) this.path += name;
             else if (!name.endsWith("/")) this.path += name + "/";

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1915,7 +1915,7 @@ public void onLoadFinished(Loader<Cursor> loader, final Cursor data) {
         if (cloudLoaderAsyncTask != null && cloudLoaderAsyncTask.getStatus() == AsyncTask.Status.RUNNING) {
             return;
         }
-        cloudLoaderAsyncTask = new CloudLoaderAsyncTask(new WeakReference<>(this), cloudHandler, mCloudCursorData);
+        cloudLoaderAsyncTask = new CloudLoaderAsyncTask(this, cloudHandler, mCloudCursorData);
         cloudLoaderAsyncTask.execute();
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PreferenceActivity.java
Patch:
@@ -68,13 +68,13 @@ public boolean getBoolean(String key) {
             case PREFERENCE_SHOW_DIVIDERS:
             case PREFERENCE_SHOW_HEADERS:
             case PREFERENCE_USE_CIRCULAR_IMAGES:
-            case PREFERENCE_SHOW_LAST_MODIFIED:
             case PREFERENCE_COLORIZE_ICONS:
             case PREFERENCE_SHOW_THUMB:
             case PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES:
             case PREFERENCE_NEED_TO_SET_HOME:
             case PREFERENCE_SHOW_SIDEBAR_FOLDERS:
             case PREFERENCE_VIEW:
+            case PREFERENCE_SHOW_LAST_MODIFIED:
                 defaultValue = true;
                 break;
             default:

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -206,7 +206,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
             GlideApp.with(compressedExplorerFragment).load(rowItem.iconData.image).into(holder.genericIcon);
 
             if (compressedExplorerFragment.showLastModified)
-                holder.date.setText(Utils.getDate(rowItem.date, compressedExplorerFragment.year));
+                holder.date.setText(Utils.getDate(rowItem.date));
             if (rowItem.directory) {
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(compressedExplorerFragment.iconskin);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -92,8 +92,6 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
 
             if (hFile.isSmb()) {
                 ma.smbPath = path;
-            } else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
-                openmode = OpenMode.ROOT;
             }
         }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -215,6 +215,7 @@ public void onPostExecute(Boolean movedCorrectly) {
                 intent.putExtra(CopyService.TAG_COPY_TARGET, paths.get(i));
                 intent.putExtra(CopyService.TAG_COPY_MOVE, true);
                 intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, mode.ordinal());
+                intent.putExtra(CopyService.TAG_IS_ROOT_EXPLORER, mainFrag.getMainActivity().isRootExplorer());
 
                 ServiceWatcherUtil.runService(context, intent);
             }

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -179,6 +179,7 @@ public static OutputStream getOutputStream(final File target, Context context) t
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 // Storage Access Framework
                 DocumentFile targetDocument = getDocumentFile(target, false, context);
+                if (targetDocument == null) return null;
                 outStream = context.getContentResolver().openOutputStream(targetDocument.getUri());
             } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
                 // Workaround for Kitkat ext SD card
@@ -668,9 +669,11 @@ public static boolean isWritable(final File file) {
             try {
                 output.close();
             } catch (IOException e) {
+                e.printStackTrace();
                 // do nothing.
             }
         } catch (FileNotFoundException e) {
+            e.printStackTrace();
             return false;
         }
         boolean result = file.canWrite();

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -244,7 +244,7 @@ public boolean onPreferenceClick(Preference preference) {
                 }
 
                 masterPasswordDialogBuilder.input(getResources().getString(R.string.authenticate_password),
-                        decryptedPassword, false, (dialog, input) -> { });
+                        decryptedPassword, true, (dialog, input) -> { });
                 masterPasswordDialogBuilder.theme(utilsProvider.getAppTheme().getMaterialDialogTheme());
                 masterPasswordDialogBuilder.positiveText(getResources().getString(R.string.ok));
                 masterPasswordDialogBuilder.negativeText(getResources().getString(R.string.cancel));

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -333,6 +334,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         }
 
         final String oldPath = fullPathText.getText().toString();
+
         if (oldPath.equals(newPath)) return;
 
         if (!areButtonsShowing()) {

File: app/src/main/java/com/amaze/filemanager/utils/RootUtils.java
Patch:
@@ -4,6 +4,8 @@
  * Created by arpitkh996 on 25-01-2016.
  */
 
+import android.util.Log;
+
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.RootHelper;
 
@@ -91,7 +93,7 @@ public static void copy(String source, String destination) throws ShellNotRunnin
         // remounting destination as rw
         String mountPoint = mountFileSystemRW(destination);
 
-        RootHelper.runShellCommand("cp \"" + source + "\" \"" + destination + "\"");
+        RootHelper.runShellCommand("cp -r \"" + source + "\" \"" + destination + "\"");
 
         if (mountPoint != null) {
             // we mounted the filesystem as rw, let's mount it back to ro

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -36,7 +36,7 @@ public class Utils {
 
     private static final int INDEX_NOT_FOUND = -1;
     private static final SimpleDateFormat DATE_NO_MINUTES = new SimpleDateFormat("MMM dd, yyyy");
-    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | KK:mm a");
+    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | HH:mm");
     private static final String INPUT_INTENT_BLACKLIST_COLON = ";";
     private static final String INPUT_INTENT_BLACKLIST_PIPE = "\\|";
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -244,7 +244,7 @@ public boolean onPreferenceClick(Preference preference) {
                 }
 
                 masterPasswordDialogBuilder.input(getResources().getString(R.string.authenticate_password),
-                        decryptedPassword, false, (dialog, input) -> { });
+                        decryptedPassword, true, (dialog, input) -> { });
                 masterPasswordDialogBuilder.theme(utilsProvider.getAppTheme().getMaterialDialogTheme());
                 masterPasswordDialogBuilder.positiveText(getResources().getString(R.string.ok));
                 masterPasswordDialogBuilder.negativeText(getResources().getString(R.string.cancel));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -92,8 +92,6 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
 
             if (hFile.isSmb()) {
                 ma.smbPath = path;
-            } else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
-                openmode = OpenMode.ROOT;
             }
         }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -215,6 +215,7 @@ public void onPostExecute(Boolean movedCorrectly) {
                 intent.putExtra(CopyService.TAG_COPY_TARGET, paths.get(i));
                 intent.putExtra(CopyService.TAG_COPY_MOVE, true);
                 intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, mode.ordinal());
+                intent.putExtra(CopyService.TAG_IS_ROOT_EXPLORER, mainFrag.getMainActivity().isRootExplorer());
 
                 ServiceWatcherUtil.runService(context, intent);
             }

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -179,6 +179,7 @@ public static OutputStream getOutputStream(final File target, Context context) t
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 // Storage Access Framework
                 DocumentFile targetDocument = getDocumentFile(target, false, context);
+                if (targetDocument == null) return null;
                 outStream = context.getContentResolver().openOutputStream(targetDocument.getUri());
             } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
                 // Workaround for Kitkat ext SD card
@@ -668,9 +669,11 @@ public static boolean isWritable(final File file) {
             try {
                 output.close();
             } catch (IOException e) {
+                e.printStackTrace();
                 // do nothing.
             }
         } catch (FileNotFoundException e) {
+            e.printStackTrace();
             return false;
         }
         boolean result = file.canWrite();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -333,6 +334,7 @@ public void updatePath(@NonNull final String news, boolean results, String query
         }
 
         final String oldPath = fullPathText.getText().toString();
+
         if (oldPath.equals(newPath)) return;
 
         if (!areButtonsShowing()) {

File: app/src/main/java/com/amaze/filemanager/utils/RootUtils.java
Patch:
@@ -4,6 +4,8 @@
  * Created by arpitkh996 on 25-01-2016.
  */
 
+import android.util.Log;
+
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.RootHelper;
 
@@ -91,7 +93,7 @@ public static void copy(String source, String destination) throws ShellNotRunnin
         // remounting destination as rw
         String mountPoint = mountFileSystemRW(destination);
 
-        RootHelper.runShellCommand("cp \"" + source + "\" \"" + destination + "\"");
+        RootHelper.runShellCommand("cp -r \"" + source + "\" \"" + destination + "\"");
 
         if (mountPoint != null) {
             // we mounted the filesystem as rw, let's mount it back to ro

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1892,7 +1892,8 @@ public Loader<Cursor> onCreateLoader(int id, Bundle args) {
                             Toast.LENGTH_LONG).show();
                 }
             default:
-                return null;
+                Uri undefinedUriAppendedPath = ContentUris.withAppendedId(uri, 7);
+                return new CursorLoader(this, undefinedUriAppendedPath, projection, null, null, null);
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PreferenceActivity.java
Patch:
@@ -18,7 +18,6 @@
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HEADERS;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_LAST_MODIFIED;
-import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_LAST_MODIFIED_TIME;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_PERMISSIONS;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_SIDEBAR_FOLDERS;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES;
@@ -62,15 +61,14 @@ public boolean getBoolean(String key) {
             case PREFERENCE_ROOTMODE:
             case PREFERENCE_COLORED_NAVIGATION:
             case PREFERENCE_TEXTEDITOR_NEWSTACK:
-            case PREFERENCE_SHOW_LAST_MODIFIED_TIME:
             case PREFERENCE_CHANGEPATHS:
+            case PREFERENCE_SHOW_LAST_MODIFIED:
                 defaultValue = false;
                 break;
             case PREFERENCE_SHOW_FILE_SIZE:
             case PREFERENCE_SHOW_DIVIDERS:
             case PREFERENCE_SHOW_HEADERS:
             case PREFERENCE_USE_CIRCULAR_IMAGES:
-            case PREFERENCE_SHOW_LAST_MODIFIED:
             case PREFERENCE_COLORIZE_ICONS:
             case PREFERENCE_SHOW_THUMB:
             case PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES:

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -30,7 +30,6 @@ public class PreferencesConstants {
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";
-    public static final String PREFERENCE_SHOW_LAST_MODIFIED_TIME = "showLastModifiedTime";
     public static final String PREFERENCE_USE_CIRCULAR_IMAGES = "circularimages";
     public static final String PREFERENCE_ROOTMODE = "rootmode";
     public static final String PREFERENCE_CHANGEPATHS = "typeablepaths";

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -36,7 +36,7 @@ public class Utils {
 
     private static final int INDEX_NOT_FOUND = -1;
     private static final SimpleDateFormat DATE_NO_MINUTES = new SimpleDateFormat("MMM dd, yyyy");
-    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | KK:mm a");
+    private static final SimpleDateFormat DATE_WITH_MINUTES = new SimpleDateFormat("MMM dd yyyy | h:mm");
     private static final String INPUT_INTENT_BLACKLIST_COLON = ";";
     private static final String INPUT_INTENT_BLACKLIST_PIPE = "\\|";
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PreferenceActivity.java
Patch:
@@ -62,6 +62,7 @@ public boolean getBoolean(String key) {
             case PREFERENCE_ROOTMODE:
             case PREFERENCE_COLORED_NAVIGATION:
             case PREFERENCE_TEXTEDITOR_NEWSTACK:
+            case PREFERENCE_SHOW_LAST_MODIFIED_TIME:
             case PREFERENCE_CHANGEPATHS:
                 defaultValue = false;
                 break;
@@ -70,7 +71,6 @@ public boolean getBoolean(String key) {
             case PREFERENCE_SHOW_HEADERS:
             case PREFERENCE_USE_CIRCULAR_IMAGES:
             case PREFERENCE_SHOW_LAST_MODIFIED:
-            case PREFERENCE_SHOW_LAST_MODIFIED_TIME:
             case PREFERENCE_COLORIZE_ICONS:
             case PREFERENCE_SHOW_THUMB:
             case PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES:

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 import android.view.GestureDetector;
 import android.view.Gravity;
 import android.view.MotionEvent;
@@ -334,8 +335,6 @@ public void updatePath(@NonNull final String news, boolean results, String query
 
         final String oldPath = fullPathText.getText().toString();
 
-        // replace multiple occurrences of '/' with single
-        newPath = newPath.replaceAll("/{2,}", "/");
         if (oldPath.equals(newPath)) return;
 
         if (!areButtonsShowing()) {

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/PermissionsActivity.java
Patch:
@@ -28,18 +28,18 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
         if (requestCode == STORAGE_PERMISSION) {
             if (isGranted(grantResults)) {
                 permissionCallbacks[STORAGE_PERMISSION].onPermissionGranted();
+                permissionCallbacks[STORAGE_PERMISSION] = null;
             } else {
                 Toast.makeText(this, R.string.grantfailed, Toast.LENGTH_SHORT).show();
                 requestStoragePermission(permissionCallbacks[STORAGE_PERMISSION]);
             }
 
-            permissionCallbacks[STORAGE_PERMISSION] = null;
         } else if (requestCode == INSTALL_APK_PERMISSION) {
             if (isGranted(grantResults)) {
                 permissionCallbacks[INSTALL_APK_PERMISSION].onPermissionGranted();
+                permissionCallbacks[INSTALL_APK_PERMISSION] = null;
             }
 
-            permissionCallbacks[INSTALL_APK_PERMISSION] = null;
         }
 
     }
@@ -85,7 +85,7 @@ public void requestPermission(final String permission, final int code, @NonNull
 
         if (ActivityCompat.shouldShowRequestPermissionRationale(this, permission)) {
             rationale.getActionButton(DialogAction.POSITIVE).setOnClickListener(v -> {
-                ActivityCompat.requestPermissions(PermissionsActivity.this, new String[]{permission}, 77);
+                ActivityCompat.requestPermissions(PermissionsActivity.this, new String[]{permission}, code);
                 rationale.dismiss();
             });
             rationale.show();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -213,9 +213,9 @@ public void run() {
         try {
             server = serverFactory.createServer();
             server.start();
-            sendBroadcast(new Intent(FtpService.ACTION_STARTED).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
+            sendBroadcast(new Intent(FtpService.ACTION_STARTED).setPackage(getPackageName()).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
         } catch (Exception e) {
-            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART));
+            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART).setPackage(getPackageName()));
         }
     }
 
@@ -234,7 +234,7 @@ public void onDestroy() {
         }
         if (server != null) {
             server.stop();
-            sendBroadcast(new Intent(FtpService.ACTION_STOPPED));
+            sendBroadcast(new Intent(FtpService.ACTION_STOPPED).setPackage(getPackageName()));
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+                getMainActivity().getDrawer().lockIfNotOnTablet(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }
@@ -759,7 +759,7 @@ public void onDestroyActionMode(ActionMode mode) {
                     primaryTwoColor : primaryColor));
 
             if (getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().unlock();
+                getMainActivity().getDrawer().unlockIfNotOnTablet();
             }
         }
     };

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -76,7 +76,7 @@ private void createNotification(Context context, boolean noStopButton) {
         if (!noStopButton && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             int stopIcon = android.R.drawable.ic_menu_close_clear_cancel;
             CharSequence stopText = context.getString(R.string.ftp_notif_stop_server);
-            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER);
+            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(context.getPackageName());
             PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 0,
                     stopIntent, PendingIntent.FLAG_ONE_SHOT);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -213,9 +213,9 @@ public void run() {
         try {
             server = serverFactory.createServer();
             server.start();
-            sendBroadcast(new Intent(FtpService.ACTION_STARTED).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
+            sendBroadcast(new Intent(FtpService.ACTION_STARTED).setPackage(getPackageName()).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
         } catch (Exception e) {
-            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART));
+            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART).setPackage(getPackageName()));
         }
     }
 
@@ -234,7 +234,7 @@ public void onDestroy() {
         }
         if (server != null) {
             server.stop();
-            sendBroadcast(new Intent(FtpService.ACTION_STOPPED));
+            sendBroadcast(new Intent(FtpService.ACTION_STOPPED).setPackage(getPackageName()));
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -49,12 +49,12 @@ public void onClick() {
         super.onClick();
 
         if (getQsTile().getState() == Tile.STATE_ACTIVE) {
-            getApplicationContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER));
+            getApplicationContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
         } else {
             if (FtpService.isConnectedToWifi(getApplicationContext())
                     || FtpService.isConnectedToLocalNetwork(getApplicationContext())
                     || FtpService.isEnabledWifiHotspot(getApplicationContext())) {
-                Intent i = new Intent(FtpService.ACTION_START_FTPSERVER);
+                Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
                 i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
                 getApplicationContext().sendBroadcast(i);
             } else {

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -76,7 +76,7 @@ private void createNotification(Context context, boolean noStopButton) {
         if (!noStopButton && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             int stopIcon = android.R.drawable.ic_menu_close_clear_cancel;
             CharSequence stopText = context.getString(R.string.ftp_notif_stop_server);
-            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER);
+            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(context.getPackageName());
             PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 0,
                     stopIntent, PendingIntent.FLAG_ONE_SHOT);
 

File: app/src/main/java/com/amaze/filemanager/fragments/FtpServerFragment.java
Patch:
@@ -104,6 +104,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         View startDividerView = rootView.findViewById(R.id.divider_ftp_start);
         View statusDividerView = rootView.findViewById(R.id.divider_ftp_status);
         ftpPasswordVisibleButton = rootView.findViewById(R.id.ftp_password_visible);
+        accentColor = mainActivity.getAccent();
 
         updateSpans();
         updateStatus();
@@ -150,7 +151,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         int skin_color = mainActivity.getCurrentColorPreference().primaryFirstTab;
         int skinTwoColor = mainActivity.getCurrentColorPreference().primarySecondTab;
-        accentColor = mainActivity.getAccent();
 
         mainActivity.updateViews(new ColorDrawable(MainActivity.currentTab==1 ?
                 skinTwoColor : skin_color));
@@ -417,6 +417,7 @@ private void updateStatus() {
             ftpBtn.setText(getResources().getString(R.string.start_ftp).toUpperCase());
 
         } else {
+            accentColor = mainActivity.getAccent();
             url.setText(spannedStatusUrl);
             statusText.setText(spannedStatusConnected);
             ftpBtn.setEnabled(true);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpService.java
Patch:
@@ -213,9 +213,9 @@ public void run() {
         try {
             server = serverFactory.createServer();
             server.start();
-            sendBroadcast(new Intent(FtpService.ACTION_STARTED).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
+            sendBroadcast(new Intent(FtpService.ACTION_STARTED).setPackage(getPackageName()).putExtra(TAG_STARTED_BY_TILE, isStartedByTile));
         } catch (Exception e) {
-            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART));
+            sendBroadcast(new Intent(FtpService.ACTION_FAILEDTOSTART).setPackage(getPackageName()));
         }
     }
 
@@ -234,7 +234,7 @@ public void onDestroy() {
         }
         if (server != null) {
             server.stop();
-            sendBroadcast(new Intent(FtpService.ACTION_STOPPED));
+            sendBroadcast(new Intent(FtpService.ACTION_STOPPED).setPackage(getPackageName()));
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FtpTileService.java
Patch:
@@ -49,12 +49,12 @@ public void onClick() {
         super.onClick();
 
         if (getQsTile().getState() == Tile.STATE_ACTIVE) {
-            getApplicationContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER));
+            getApplicationContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getPackageName()));
         } else {
             if (FtpService.isConnectedToWifi(getApplicationContext())
                     || FtpService.isConnectedToLocalNetwork(getApplicationContext())
                     || FtpService.isEnabledWifiHotspot(getApplicationContext())) {
-                Intent i = new Intent(FtpService.ACTION_START_FTPSERVER);
+                Intent i = new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getPackageName());
                 i.putExtra(FtpService.TAG_STARTED_BY_TILE, true);
                 getApplicationContext().sendBroadcast(i);
             } else {

File: app/src/main/java/com/amaze/filemanager/fragments/FtpServerFragment.java
Patch:
@@ -367,14 +367,14 @@ public void onReceive(Context context, Intent intent) {
      * Sends a broadcast to start ftp server
      */
     private void startServer() {
-        getContext().sendBroadcast(new Intent(FtpService.ACTION_START_FTPSERVER));
+        getContext().sendBroadcast(new Intent(FtpService.ACTION_START_FTPSERVER).setPackage(getContext().getPackageName()));
     }
 
     /**
      * Sends a broadcast to stop ftp server
      */
     private void stopServer() {
-        getContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER));
+        getContext().sendBroadcast(new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(getContext().getPackageName()));
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FtpNotification.java
Patch:
@@ -76,7 +76,7 @@ private void createNotification(Context context, boolean noStopButton) {
         if (!noStopButton && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             int stopIcon = android.R.drawable.ic_menu_close_clear_cancel;
             CharSequence stopText = context.getString(R.string.ftp_notif_stop_server);
-            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER);
+            Intent stopIntent = new Intent(FtpService.ACTION_STOP_FTPSERVER).setPackage(context.getPackageName());
             PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 0,
                     stopIntent, PendingIntent.FLAG_ONE_SHOT);
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+                getMainActivity().getDrawer().lockIfNotOnTablet(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }
@@ -759,7 +759,7 @@ public void onDestroyActionMode(ActionMode mode) {
                     primaryTwoColor : primaryColor));
 
             if (getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().unlock();
+                getMainActivity().getDrawer().unlockIfNotOnTablet();
             }
         }
     };

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -215,6 +215,7 @@ public void onPostExecute(Boolean movedCorrectly) {
                 intent.putExtra(CopyService.TAG_COPY_TARGET, paths.get(i));
                 intent.putExtra(CopyService.TAG_COPY_MOVE, true);
                 intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, mode.ordinal());
+                intent.putExtra(CopyService.TAG_IS_ROOT_EXPLORER, mainFrag.getMainActivity().isRootExplorer());
 
                 ServiceWatcherUtil.runService(context, intent);
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -171,6 +171,7 @@ private void startService(ArrayList<HybridFileParcelable> sourceFiles, String ta
         intent.putExtra(CopyService.TAG_COPY_TARGET, target);
         intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, openmode.ordinal());
         intent.putExtra(CopyService.TAG_COPY_MOVE, move);
+        intent.putExtra(CopyService.TAG_IS_ROOT_EXPLORER, rootMode);
         ServiceWatcherUtil.runService(context, intent);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -335,6 +335,9 @@ public void updatePath(@NonNull final String news, boolean results, String query
         final String oldPath = fullPathText.getText().toString();
         if (oldPath.equals(newPath)) return;
 
+        // replace multiple occurrences of '/' with single
+        newPath = newPath.replaceAll("/{2,}", "/");
+
         if (!areButtonsShowing()) {
             final Animation slideIn = AnimationUtils.loadAnimation(mainActivity, R.anim.slide_in);
             Animation slideOut = AnimationUtils.loadAnimation(mainActivity, R.anim.slide_out);

File: app/src/main/java/com/amaze/filemanager/utils/RootUtils.java
Patch:
@@ -4,6 +4,8 @@
  * Created by arpitkh996 on 25-01-2016.
  */
 
+import android.util.Log;
+
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.RootHelper;
 
@@ -91,7 +93,7 @@ public static void copy(String source, String destination) throws ShellNotRunnin
         // remounting destination as rw
         String mountPoint = mountFileSystemRW(destination);
 
-        RootHelper.runShellCommand("cp \"" + source + "\" \"" + destination + "\"");
+        RootHelper.runShellCommand("cp -r \"" + source + "\" \"" + destination + "\"");
 
         if (mountPoint != null) {
             // we mounted the filesystem as rw, let's mount it back to ro

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -84,7 +84,6 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         mAppBarLayout = findViewById(R.id.appBarLayout);
         mCollapsingToolbarLayout = findViewById(R.id.collapsing_toolbar_layout);
         mTitleTextView =  findViewById(R.id.text_view_title);
-        ImageView mLicensesIcon = findViewById(R.id.image_view_license);
         mAuthorsDivider = findViewById(R.id.view_divider_authors);
         mDeveloper1Divider = findViewById(R.id.view_divider_developers_1);
 

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -210,7 +210,6 @@ public void invalidateNavBar() {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
             boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -203,7 +203,7 @@ private void showPopup(View v, final AppDataParcelable rowItem){
                                             } else {
                                                 files.add(f1);
                                             }
-                                            new DeleteTask(app.getActivity().getContentResolver(), app.getActivity()).execute((files));
+                                            new DeleteTask(app.getActivity()).execute((files));
                                         })).build().show();
                             } else {
                                 Toast.makeText(app.getActivity(),app.getString(R.string.enablerootmde),Toast.LENGTH_SHORT).show();

File: app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -75,7 +75,7 @@ public void onBindViewHolder(HiddenViewHolder holder, int position) {
                 HybridFileParcelable baseFile = new HybridFileParcelable(items.get(position).getPath() + "/.nomedia");
                 baseFile.setMode(OpenMode.FILE);
                 a1.add(baseFile);
-                new DeleteTask(context.getActivity().getContentResolver(), c).execute((a1));
+                new DeleteTask(c).execute((a1));
             }
             dataUtils.removeHiddenFile(items.get(position).getPath());
             items.remove(items.get(position));

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -515,7 +515,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 holder.genericIcon.setOnClickListener(v -> {
                     int id = v.getId();
@@ -772,7 +772,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 if (getBoolean(PREFERENCE_SHOW_LAST_MODIFIED))
                     holder.date.setText(rowItem.date1);
@@ -904,7 +904,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
         modelProvider.getPreloadRequestBuilder(iconData).listener(requestListener).into(view);
     }
 
-    private void showPopup(View v, final LayoutElementParcelable rowItem, final int position) {
+    private void showPopup(View v, final LayoutElementParcelable rowItem) {
         v.setOnClickListener(view -> {
             PopupMenu popupMenu = new ItemPopupMenu(context, mainFrag.getMainActivity(),
                     utilsProvider, mainFrag, rowItem, view, sharedPrefs);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -56,12 +56,12 @@ public class DeleteTask extends AsyncTask<ArrayList<HybridFileParcelable>, Strin
     private CompressedExplorerFragment compressedExplorerFragment;
     private DataUtils dataUtils = DataUtils.getInstance();
 
-    public DeleteTask(ContentResolver c, Context cd) {
+    public DeleteTask(Context cd) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
     }
 
-    public DeleteTask(ContentResolver c, Context cd, CompressedExplorerFragment compressedExplorerFragment) {
+    public DeleteTask(Context cd, CompressedExplorerFragment compressedExplorerFragment) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
         this.compressedExplorerFragment = compressedExplorerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -39,7 +39,6 @@
 
 public class RarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String fileLocation;
     private String relativeDirectory;
 
@@ -48,10 +47,9 @@ public class RarHelperTask extends CompressedHelperTask {
      * @param realFileDirectory the location of the zip file
      * @param dir relativeDirectory to access inside the zip file
      */
-    public RarHelperTask(Context context, String realFileDirectory, String dir, boolean goBack,
+    public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         fileLocation = realFileDirectory;
         relativeDirectory = dir;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -41,13 +41,11 @@
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String filePath, relativePath;
 
-    public TarHelperTask(Context context, String filePath, String relativePath, boolean goBack,
+    public TarHelperTask(String filePath, String relativePath, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         this.filePath = filePath;
         this.relativePath = relativePath;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -109,7 +109,7 @@ protected AsyncTaskResult<PublicKey> doInBackground(Void... voids) {
 
     @Override
     protected void onPreExecute() {
-        progressDialog = ProgressDialog.show(AppConfig.getInstance().getActivityContext(),
+        progressDialog = ProgressDialog.show(AppConfig.getInstance().getMainActivityContext(),
                 "", AppConfig.getInstance().getResources().getString(R.string.processing));
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -22,7 +22,6 @@
 package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.AlertDialog;
-import android.content.DialogInterface;
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.support.annotation.NonNull;
@@ -157,7 +156,7 @@ else if(TransportException.class.isAssignableFrom(result.exception.getClass()))
             {
                 DisconnectReason disconnectReason = TransportException.class.cast(result.exception).getDisconnectReason();
                 if(DisconnectReason.HOST_KEY_NOT_VERIFIABLE.equals(disconnectReason)) {
-                    new AlertDialog.Builder(AppConfig.getInstance().getActivityContext())
+                    new AlertDialog.Builder(AppConfig.getInstance().getMainActivityContext())
                             .setTitle(R.string.ssh_connect_failed_host_key_changed_title)
                             .setMessage(R.string.ssh_connect_failed_host_key_changed_message)
                             .setPositiveButton(R.string.ok, (dialog, which) -> dialog.dismiss()).show();

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -31,8 +31,6 @@ public class SortHandler extends SQLiteOpenHelper {
     public static final String COLUMN_SORT_PATH = "path";
     public static final String COLUMN_SORT_TYPE = "type";
 
-    private Context context;
-
     public static int getSortType(Context context, String path) {
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(context);
         final Set<String> onlyThisFloders = sharedPref.getStringSet(PREFERENCE_SORTBY_ONLY_THIS, new HashSet<>());
@@ -51,7 +49,6 @@ public static int getSortType(Context context, String path) {
 
     public SortHandler(Context context) {
         super(context, DATABASE_NAME, null, TabHandler.DATABASE_VERSION);
-        this.context = context;
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -50,11 +50,8 @@ public class TabHandler extends SQLiteOpenHelper {
     protected static final String COLUMN_ENCRYPTED_PATH = "path";
     protected static final String COLUMN_ENCRYPTED_PASSWORD = "password";
 
-    private Context context;
-
     public TabHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        this.context = context;
         // The call to onUpgrade() is not performed unless getWritableDatabase() is called.
         // See more at https://github.com/TeamAmaze/AmazeFileManager/pull/1262
         getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -140,7 +140,7 @@ public static HybridFileParcelable generateBaseFile(File x, boolean showHidden)
         return null;
     }
 
-    public static HybridFileParcelable generateBaseFile(DocumentFile file, boolean showHidden) {
+    public static HybridFileParcelable generateBaseFile(DocumentFile file) {
         long size = 0;
         if (!file.isDirectory())
             size = file.length();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
Patch:
@@ -26,7 +26,6 @@
 
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.rarfile.FileHeader;
@@ -44,7 +43,7 @@ public RarDecompressor(Context context) {
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
                                        OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new RarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
     public static String convertName(FileHeader file) {

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
Patch:
@@ -39,7 +39,7 @@ public TarDecompressor(Context context) {
 
     @Override
     public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new TarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -355,7 +355,7 @@ public void onDestroyView() {
         // in case of opening any unknown file inside the zip
 
         if (files.get(0).exists()) {
-            new DeleteTask(getActivity().getContentResolver(), getActivity(), this).execute(files);
+            new DeleteTask(getActivity(), this).execute(files);
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -691,7 +691,6 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     return true;
                 case R.id.rename:
 
-                    final ActionMode m = mode;
                     final HybridFileParcelable f;
                     f = checkedItems.get(0).generateBaseFile();
                     rename(f);
@@ -1447,7 +1446,7 @@ public void onStop() {
 
             if (!isEncryptOpen && encryptBaseFiles.size() != 0) {
                 // we've opened the file and are ready to delete it
-                new DeleteTask(getMainActivity().getContentResolver(), getActivity()).execute(encryptBaseFiles);
+                new DeleteTask(getActivity()).execute(encryptBaseFiles);
             }
         }
     }

File: app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
Patch:
@@ -25,8 +25,6 @@ public class SearchWorkerFragment extends Fragment {
 
     public SearchAsyncTask mSearchAsyncTask;
 
-    private static final String TAG = "SearchWorkerFragment";
-
     private HelperCallbacks mCallbacks;
 
     // interface for activity to communicate with asynctask

File: app/src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -246,7 +246,7 @@ String parsePathForName(String path, OpenMode openmode) {
         } else if (openmode == OpenMode.SMB && path.startsWith("smb:/")) {
             return (new File(parseSmbPath(path)).getName());
         } else if ("/storage/emulated/0".equals(path)) {
-            return resources.getString(R.string.storage);
+            return resources.getString(R.string.internalstorage);
         } else if (openmode == OpenMode.CUSTOM) {
             return new MainActivityHelper(mainActivity).getIntegralNames(path);
         } else {

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -44,7 +44,7 @@ public class ColorPreferenceHelper {
      * @return The {@link ColorPreference} object itself.
      */
     public static UserColorPreferences randomize(Context c) {
-        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length - 1)];
+        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length)];
 
         return new UserColorPreferences(Utils.getColor(c, colorPos[0]), Utils.getColor(c, colorPos[0]),
                 Utils.getColor(c, colorPos[1]), Utils.getColor(c, colorPos[2]));

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -118,10 +118,8 @@ private class ListViewAdapter extends RecyclerView.Adapter<ElementViewHolder> {
 
         private ArrayList<ComputerParcelable> items;
         private LayoutInflater mInflater;
-        private Context context;
 
         public ListViewAdapter(Context context, List<ComputerParcelable> objects) {
-            this.context = context;
             items = new ArrayList<>(objects);
             mInflater = (LayoutInflater) context
                 .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
Patch:
@@ -16,8 +16,7 @@ public class ActionViewStateManager {
     private @ColorInt int idleIconColor;
     private @ColorInt int selectedIconColor;
 
-    public ActionViewStateManager(NavigationView navView, @ColorInt int idleColor,
-                                  @ColorInt int accentColor) {
+    public ActionViewStateManager(@ColorInt int idleColor, @ColorInt int accentColor) {
         idleIconColor = idleColor;
         selectedIconColor = accentColor;
     }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -167,7 +167,7 @@ public Drawer(MainActivity mainActivity) {
             idleColor = Color.WHITE;
         }
 
-        actionViewStateManager = new ActionViewStateManager(navView, idleColor, accentColor);
+        actionViewStateManager = new ActionViewStateManager(idleColor, accentColor);
 
         ColorStateList drawerColors = new ColorStateList(
                 new int[][] {
@@ -262,7 +262,7 @@ public void refreshDrawer() {
             String name;
             @DrawableRes int icon1;
             if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file) || "/mnt/sdcard".equals(file)) {
-                name = resources.getString(R.string.storage);
+                name = resources.getString(R.string.internalstorage);
                 icon1 = R.drawable.ic_phone_android_white_24dp;
             } else if ("/storage/sdcard1".equals(file)) {
                 name = resources.getString(R.string.extstorage);

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -528,15 +528,15 @@ public void invalidName(final HybridFile file) {
     public void deleteFiles(ArrayList<HybridFileParcelable> files) {
         if (files == null || files.size() == 0) return;
         if (files.get(0).isSmb()) {
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
             return;
         }
         int mode = checkFolder(new File(files.get(0).getPath()).getParentFile(), mainActivity);
         if (mode == 2) {
             mainActivity.oparrayList = (files);
             mainActivity.operation = DataUtils.DELETE;
         } else if (mode == 1 || mode == 0)
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
         else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -199,7 +199,6 @@ public void addHeader( String name, String value )
     public CloudStreamServer(int port, File wwwroot ) throws IOException
     {
         myTcpPort = port;
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -226,7 +225,6 @@ public CloudStreamServer(int port, File wwwroot ) throws IOException
 
     public CloudStreamServer(File wwwroot ) throws IOException
     {
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -889,7 +887,6 @@ else if ( tok.equals( " " ))
     private int myTcpPort;
     private final ServerSocket myServerSocket;
     private Thread myThread;
-    private File myRootDir;
 
     // ==================================================
     // File server code

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamer.java
Patch:
@@ -103,12 +103,12 @@ public CloudStreamServer.Response serve(String uri, String method, Properties he
                     source.moveTo(startFrom);
                     Log.d(CloudUtil.TAG, "Skipped " + startFrom + " bytes");
 
-                    res = new CloudStreamServer.Response(HTTP_PARTIALCONTENT, source.getMimeType(), source);
+                    res = new CloudStreamServer.Response(HTTP_PARTIALCONTENT, null, source);
                     res.addHeader("Content-length", "" + dataLen);
                 }
             } else {
                 source.reset();
-                res = new CloudStreamServer.Response(HTTP_OK, source.getMimeType(), source);
+                res = new CloudStreamServer.Response(HTTP_OK, null, source);
                 res.addHeader("Content-Length", "" + fileLen);
             }
         }

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -44,7 +44,7 @@ public class ColorPreferenceHelper {
      * @return The {@link ColorPreference} object itself.
      */
     public static UserColorPreferences randomize(Context c) {
-        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length - 1)];
+        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length)];
 
         return new UserColorPreferences(Utils.getColor(c, colorPos[0]), Utils.getColor(c, colorPos[0]),
                 Utils.getColor(c, colorPos[1]), Utils.getColor(c, colorPos[2]));

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorPreferenceHelper.java
Patch:
@@ -44,7 +44,7 @@ public class ColorPreferenceHelper {
      * @return The {@link ColorPreference} object itself.
      */
     public static UserColorPreferences randomize(Context c) {
-        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length - 1)];
+        @ColorRes int[] colorPos = RANDOM_COMBINATIONS[new Random().nextInt(RANDOM_COMBINATIONS.length)];
 
         return new UserColorPreferences(Utils.getColor(c, colorPos[0]), Utils.getColor(c, colorPos[0]),
                 Utils.getColor(c, colorPos[1]), Utils.getColor(c, colorPos[2]));

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -84,7 +84,6 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         mAppBarLayout = findViewById(R.id.appBarLayout);
         mCollapsingToolbarLayout = findViewById(R.id.collapsing_toolbar_layout);
         mTitleTextView =  findViewById(R.id.text_view_title);
-        ImageView mLicensesIcon = findViewById(R.id.image_view_license);
         mAuthorsDivider = findViewById(R.id.view_divider_authors);
         mDeveloper1Divider = findViewById(R.id.view_divider_developers_1);
 

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -210,7 +210,6 @@ public void invalidateNavBar() {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
             boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -203,7 +203,7 @@ private void showPopup(View v, final AppDataParcelable rowItem){
                                             } else {
                                                 files.add(f1);
                                             }
-                                            new DeleteTask(app.getActivity().getContentResolver(), app.getActivity()).execute((files));
+                                            new DeleteTask(app.getActivity()).execute((files));
                                         })).build().show();
                             } else {
                                 Toast.makeText(app.getActivity(),app.getString(R.string.enablerootmde),Toast.LENGTH_SHORT).show();

File: app/src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -75,7 +75,7 @@ public void onBindViewHolder(HiddenViewHolder holder, int position) {
                 HybridFileParcelable baseFile = new HybridFileParcelable(items.get(position).getPath() + "/.nomedia");
                 baseFile.setMode(OpenMode.FILE);
                 a1.add(baseFile);
-                new DeleteTask(context.getActivity().getContentResolver(), c).execute((a1));
+                new DeleteTask(c).execute((a1));
             }
             dataUtils.removeHiddenFile(items.get(position).getPath());
             items.remove(items.get(position));

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -515,7 +515,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 holder.genericIcon.setOnClickListener(v -> {
                     int id = v.getId();
@@ -772,7 +772,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 if (holder.about != null) {
                     if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT))
                         holder.about.setColorFilter(grey_color);
-                    showPopup(holder.about, rowItem, p);
+                    showPopup(holder.about, rowItem);
                 }
                 if (getBoolean(PREFERENCE_SHOW_LAST_MODIFIED))
                     holder.date.setText(rowItem.date1);
@@ -904,7 +904,7 @@ public boolean onResourceReady(Drawable resource, Object model, Target<Drawable>
         modelProvider.getPreloadRequestBuilder(iconData).listener(requestListener).into(view);
     }
 
-    private void showPopup(View v, final LayoutElementParcelable rowItem, final int position) {
+    private void showPopup(View v, final LayoutElementParcelable rowItem) {
         v.setOnClickListener(view -> {
             PopupMenu popupMenu = new ItemPopupMenu(context, mainFrag.getMainActivity(),
                     utilsProvider, mainFrag, rowItem, view, sharedPrefs);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -56,12 +56,12 @@ public class DeleteTask extends AsyncTask<ArrayList<HybridFileParcelable>, Strin
     private CompressedExplorerFragment compressedExplorerFragment;
     private DataUtils dataUtils = DataUtils.getInstance();
 
-    public DeleteTask(ContentResolver c, Context cd) {
+    public DeleteTask(Context cd) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
     }
 
-    public DeleteTask(ContentResolver c, Context cd, CompressedExplorerFragment compressedExplorerFragment) {
+    public DeleteTask(Context cd, CompressedExplorerFragment compressedExplorerFragment) {
         this.cd = cd;
         rootMode = PreferenceManager.getDefaultSharedPreferences(cd).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
         this.compressedExplorerFragment = compressedExplorerFragment;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -39,7 +39,6 @@
 
 public class RarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String fileLocation;
     private String relativeDirectory;
 
@@ -48,10 +47,9 @@ public class RarHelperTask extends CompressedHelperTask {
      * @param realFileDirectory the location of the zip file
      * @param dir relativeDirectory to access inside the zip file
      */
-    public RarHelperTask(Context context, String realFileDirectory, String dir, boolean goBack,
+    public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         fileLocation = realFileDirectory;
         relativeDirectory = dir;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -41,13 +41,11 @@
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private WeakReference<Context> context;
     private String filePath, relativePath;
 
-    public TarHelperTask(Context context, String filePath, String relativePath, boolean goBack,
+    public TarHelperTask(String filePath, String relativePath, boolean goBack,
                          OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> l) {
         super(goBack, l);
-        this.context = new WeakReference<>(context);
         this.filePath = filePath;
         this.relativePath = relativePath;
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -428,7 +428,7 @@ public void execute(final ArrayList<HybridFileParcelable> sourceFiles, final Str
                         if (!failedFOps.contains(a))
                             toDelete.add(a);
                     }
-                    new DeleteTask(getContentResolver(), c).execute((toDelete));
+                    new DeleteTask(c).execute((toDelete));
                 }
             }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -54,7 +54,6 @@ public class DecryptService extends AbstractProgressiveService {
     private ArrayList<DatapointParcelable> dataPackages = new ArrayList<>();
     private ServiceWatcherUtil serviceWatcherUtil;
     private long totalSize = 0l;
-    private OpenMode openMode;
     private String decryptPath;
     private HybridFileParcelable baseFile;
     private ArrayList<HybridFile> failedOps = new ArrayList<>();
@@ -80,7 +79,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .getColorPreference()
                 .getCurrentUserColorPreferences(this, sharedPreferences).accent;
 
-        openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
+        OpenMode openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
         notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
         Intent notificationIntent = new Intent(this, MainActivity.class);
         notificationIntent.setAction(Intent.ACTION_MAIN);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -53,7 +53,6 @@ public class EncryptService extends AbstractProgressiveService {
     private ArrayList<DatapointParcelable> dataPackages = new ArrayList<>();
     private ServiceWatcherUtil serviceWatcherUtil;
     private long totalSize = 0l;
-    private OpenMode openMode;
     private HybridFileParcelable baseFile;
     private ArrayList<HybridFile> failedOps = new ArrayList<>();
     private String targetFilename;
@@ -79,7 +78,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .getColorPreference()
                 .getCurrentUserColorPreferences(this, sharedPreferences).accent;
 
-        openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
+        OpenMode openMode = OpenMode.values()[intent.getIntExtra(TAG_OPEN_MODE, OpenMode.UNKNOWN.ordinal())];
         notificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
         Intent notificationIntent = new Intent(this, MainActivity.class);
         notificationIntent.setAction(Intent.ACTION_MAIN);

File: app/src/main/java/com/amaze/filemanager/database/SortHandler.java
Patch:
@@ -31,8 +31,6 @@ public class SortHandler extends SQLiteOpenHelper {
     public static final String COLUMN_SORT_PATH = "path";
     public static final String COLUMN_SORT_TYPE = "type";
 
-    private Context context;
-
     public static int getSortType(Context context, String path) {
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(context);
         final Set<String> onlyThisFloders = sharedPref.getStringSet(PREFERENCE_SORTBY_ONLY_THIS, new HashSet<>());
@@ -51,7 +49,6 @@ public static int getSortType(Context context, String path) {
 
     public SortHandler(Context context) {
         super(context, DATABASE_NAME, null, TabHandler.DATABASE_VERSION);
-        this.context = context;
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -50,11 +50,8 @@ public class TabHandler extends SQLiteOpenHelper {
     protected static final String COLUMN_ENCRYPTED_PATH = "path";
     protected static final String COLUMN_ENCRYPTED_PASSWORD = "password";
 
-    private Context context;
-
     public TabHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
-        this.context = context;
         // The call to onUpgrade() is not performed unless getWritableDatabase() is called.
         // See more at https://github.com/TeamAmaze/AmazeFileManager/pull/1262
         getWritableDatabase();

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -140,7 +140,7 @@ public static HybridFileParcelable generateBaseFile(File x, boolean showHidden)
         return null;
     }
 
-    public static HybridFileParcelable generateBaseFile(DocumentFile file, boolean showHidden) {
+    public static HybridFileParcelable generateBaseFile(DocumentFile file) {
         long size = 0;
         if (!file.isDirectory())
             size = file.length();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/RarDecompressor.java
Patch:
@@ -26,7 +26,6 @@
 
 import com.amaze.filemanager.asynchronous.asynctasks.compress.RarHelperTask;
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
-import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.Decompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.rarfile.FileHeader;
@@ -44,7 +43,7 @@ public RarDecompressor(Context context) {
     @Override
     public RarHelperTask changePath(String path, boolean addGoBackItem,
                                        OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new RarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new RarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
     public static String convertName(FileHeader file) {

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/showcontents/helpers/TarDecompressor.java
Patch:
@@ -39,7 +39,7 @@ public TarDecompressor(Context context) {
 
     @Override
     public TarHelperTask changePath(String path, boolean addGoBackItem, OnAsyncTaskFinished<ArrayList<CompressedObjectParcelable>> onFinish) {
-        return new TarHelperTask(context, filePath, path, addGoBackItem, onFinish);
+        return new TarHelperTask(filePath, path, addGoBackItem, onFinish);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -355,7 +355,7 @@ public void onDestroyView() {
         // in case of opening any unknown file inside the zip
 
         if (files.get(0).exists()) {
-            new DeleteTask(getActivity().getContentResolver(), getActivity(), this).execute(files);
+            new DeleteTask(getActivity(), this).execute(files);
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -691,7 +691,6 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     return true;
                 case R.id.rename:
 
-                    final ActionMode m = mode;
                     final HybridFileParcelable f;
                     f = checkedItems.get(0).generateBaseFile();
                     rename(f);
@@ -1447,7 +1446,7 @@ public void onStop() {
 
             if (!isEncryptOpen && encryptBaseFiles.size() != 0) {
                 // we've opened the file and are ready to delete it
-                new DeleteTask(getMainActivity().getContentResolver(), getActivity()).execute(encryptBaseFiles);
+                new DeleteTask(getActivity()).execute(encryptBaseFiles);
             }
         }
     }

File: app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
Patch:
@@ -25,8 +25,6 @@ public class SearchWorkerFragment extends Fragment {
 
     public SearchAsyncTask mSearchAsyncTask;
 
-    private static final String TAG = "SearchWorkerFragment";
-
     private HelperCallbacks mCallbacks;
 
     // interface for activity to communicate with asynctask

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -118,10 +118,8 @@ private class ListViewAdapter extends RecyclerView.Adapter<ElementViewHolder> {
 
         private ArrayList<ComputerParcelable> items;
         private LayoutInflater mInflater;
-        private Context context;
 
         public ListViewAdapter(Context context, List<ComputerParcelable> objects) {
-            this.context = context;
             items = new ArrayList<>(objects);
             mInflater = (LayoutInflater) context
                 .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/ActionViewStateManager.java
Patch:
@@ -16,8 +16,7 @@ public class ActionViewStateManager {
     private @ColorInt int idleIconColor;
     private @ColorInt int selectedIconColor;
 
-    public ActionViewStateManager(NavigationView navView, @ColorInt int idleColor,
-                                  @ColorInt int accentColor) {
+    public ActionViewStateManager(@ColorInt int idleColor, @ColorInt int accentColor) {
         idleIconColor = idleColor;
         selectedIconColor = accentColor;
     }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -167,7 +167,7 @@ public Drawer(MainActivity mainActivity) {
             idleColor = Color.WHITE;
         }
 
-        actionViewStateManager = new ActionViewStateManager(navView, idleColor, accentColor);
+        actionViewStateManager = new ActionViewStateManager(idleColor, accentColor);
 
         ColorStateList drawerColors = new ColorStateList(
                 new int[][] {

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -528,15 +528,15 @@ public void invalidName(final HybridFile file) {
     public void deleteFiles(ArrayList<HybridFileParcelable> files) {
         if (files == null || files.size() == 0) return;
         if (files.get(0).isSmb()) {
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
             return;
         }
         int mode = checkFolder(new File(files.get(0).getPath()).getParentFile(), mainActivity);
         if (mode == 2) {
             mainActivity.oparrayList = (files);
             mainActivity.operation = DataUtils.DELETE;
         } else if (mode == 1 || mode == 0)
-            new DeleteTask(null, mainActivity).execute((files));
+            new DeleteTask(mainActivity).execute((files));
         else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -199,7 +199,6 @@ public void addHeader( String name, String value )
     public CloudStreamServer(int port, File wwwroot ) throws IOException
     {
         myTcpPort = port;
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -226,7 +225,6 @@ public CloudStreamServer(int port, File wwwroot ) throws IOException
 
     public CloudStreamServer(File wwwroot ) throws IOException
     {
-        this.myRootDir = wwwroot;
         myServerSocket = tryBind(myTcpPort);
         myThread = new Thread(() -> {
             try {
@@ -889,7 +887,6 @@ else if ( tok.equals( " " ))
     private int myTcpPort;
     private final ServerSocket myServerSocket;
     private Thread myThread;
-    private File myRootDir;
 
     // ==================================================
     // File server code

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -949,7 +949,8 @@ private void showPopup(View v, final LayoutElementParcelable rowItem, final int
                     || description.endsWith(".tar") || description.endsWith(".tar.gz")
                     || description.endsWith(".tar.bz2")
                     || description.endsWith(".tar.xz")
-                    || description.endsWith(".tar.lzma"))
+                    || description.endsWith(".tar.lzma")
+                    || description.endsWith(".7z"))
                 popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -103,12 +103,12 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
 
         Intent stopIntent = new Intent(TAG_BROADCAST_EXTRACT_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-        NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey600_36dp,
+        NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey,
                 getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(context, NotificationConstants.CHANNEL_NORMAL_ID);
         mBuilder.setContentIntent(pendingIntent)
-                .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp)
+                .setSmallIcon(R.drawable.ic_zip_box_grey)
                 .setContentIntent(pendingIntent)
                 .setCustomContentView(customSmallContentViews)
                 .setCustomBigContentView(customBigContentViews)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -119,7 +119,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         Intent stopIntent = new Intent(KEY_COMPRESS_BROADCAST_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(getApplicationContext(),
                 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
-        NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey600_36dp,
+        NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey,
                 getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID)

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/extractcontents/ExtractorTestSuite.java
Patch:
@@ -11,7 +11,8 @@
         RarExtractorTest.class,
         Bzip2ExtractorTest.class,
         LzmaExtractorTest.class,
-        XzExtractorTest.class
+        XzExtractorTest.class,
+        SevenZipExtractorTest.class
 })
 public class ExtractorTestSuite {
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -123,7 +123,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID)
-                .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp)
+                .setSmallIcon(R.drawable.ic_zip_box_grey)
                 .setContentIntent(pendingIntent)
                 .setCustomContentView(customSmallContentViews)
                 .setCustomBigContentView(customBigContentViews)

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/SevenZipExtractor.java
Patch:
@@ -66,7 +66,6 @@ private void extractEntry(@NonNull final Context context, SevenZFile sevenzFile,
         if (!outputFile.getParentFile().exists()) {
             FileUtil.mkdir(outputFile.getParentFile(), context);
         }
-        // Log.i("Amaze", "Extracting: " + entry);
 
         BufferedOutputStream outputStream = new BufferedOutputStream(
                 FileUtil.getOutputStream(outputFile, context));

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTask.java
Patch:
@@ -31,8 +31,7 @@ void addElements(ArrayList<CompressedObjectParcelable> elements) {
         try {
             sevenzFile = new SevenZFile(new File(filePath));
 
-            SevenZArchiveEntry entry;
-            while ((entry = sevenzFile.getNextEntry()) != null) {
+            for (SevenZArchiveEntry entry : sevenzFile.getEntries()) {
                 String name = entry.getName();
                 if (name.endsWith(SEPARATOR)) name = name.substring(0, name.length() - 1);
 

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -86,6 +86,7 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
+        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -259,8 +259,8 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                         String newPath = rowItem.path.substring(0, rowItem.path.length() - 1);
                         compressedExplorerFragment.changePath(newPath);
                     } else {
-                        String fileName = compressedExplorerFragment.compressedFile.getName().substring(0,
-                                compressedExplorerFragment.compressedFile.getName().lastIndexOf("."));
+
+                        String fileName = CompressedHelper.getFileName(compressedExplorerFragment.compressedFile.getName());
                         String archiveCacheDirPath = compressedExplorerFragment.getActivity().getExternalCacheDir().getPath() +
                                 CompressedHelper.SEPARATOR + fileName;
 

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -719,7 +719,7 @@ public void onBackPressed() {
             drawer.close();
             return;
         }
-        
+
         Fragment fragment = getFragmentAtFrame();
         if (getAppbar().getSearchView().isShown()) {
             // hide search view if visible, with an animation

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
+                getMainActivity().getDrawer().lockIfNotOnTablet(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }
@@ -760,7 +760,7 @@ public void onDestroyActionMode(ActionMode mode) {
                     primaryTwoColor : primaryColor));
 
             if (getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().unlock();
+                getMainActivity().getDrawer().unlockIfNotOnTablet();
             }
         }
     };

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamer.java
Patch:
@@ -103,12 +103,12 @@ public CloudStreamServer.Response serve(String uri, String method, Properties he
                     source.moveTo(startFrom);
                     Log.d(CloudUtil.TAG, "Skipped " + startFrom + " bytes");
 
-                    res = new CloudStreamServer.Response(HTTP_PARTIALCONTENT, source.getMimeType(), source);
+                    res = new CloudStreamServer.Response(HTTP_PARTIALCONTENT, null, source);
                     res.addHeader("Content-length", "" + dataLen);
                 }
             } else {
                 source.reset();
-                res = new CloudStreamServer.Response(HTTP_OK, source.getMimeType(), source);
+                res = new CloudStreamServer.Response(HTTP_OK, null, source);
                 res.addHeader("Content-Length", "" + fileLen);
             }
         }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1381,6 +1381,7 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
                 // otg access
                 Uri usbOtgRoot = Uri.parse(intent.getData().toString());
                 SingletonUsbOtg.getInstance().setUsbOtgRoot(usbOtgRoot);
+                getCurrentMainFragment().loadlist(OTGUtil.PREFIX_OTG, false, OpenMode.OTG);
 
                 drawer.closeIfNotLocked();
                 if (drawer.isLocked()) drawer.onDrawerClosed();

File: app/src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -246,7 +246,7 @@ String parsePathForName(String path, OpenMode openmode) {
         } else if (openmode == OpenMode.SMB && path.startsWith("smb:/")) {
             return (new File(parseSmbPath(path)).getName());
         } else if ("/storage/emulated/0".equals(path)) {
-            return resources.getString(R.string.storage);
+            return resources.getString(R.string.internalstorage);
         } else if (openmode == OpenMode.CUSTOM) {
             return new MainActivityHelper(mainActivity).getIntegralNames(path);
         } else {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -262,7 +262,7 @@ public void refreshDrawer() {
             String name;
             @DrawableRes int icon1;
             if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file) || "/mnt/sdcard".equals(file)) {
-                name = resources.getString(R.string.storage);
+                name = resources.getString(R.string.internalstorage);
                 icon1 = R.drawable.ic_phone_android_white_24dp;
             } else if ("/storage/sdcard1".equals(file)) {
                 name = resources.getString(R.string.extstorage);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1382,6 +1382,7 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
                 // otg access
                 Uri usbOtgRoot = Uri.parse(intent.getData().toString());
                 SingletonUsbOtg.getInstance().setUsbOtgRoot(usbOtgRoot);
+                getCurrentMainFragment().loadlist(OTGUtil.PREFIX_OTG, false, OpenMode.OTG);
 
                 drawer.closeIfNotLocked();
                 if (drawer.isLocked()) drawer.onDrawerClosed();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -129,7 +129,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         Intent stopIntent = new Intent(TAG_BROADCAST_COPY_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(c, 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_content_copy_white_36dp,
-                getResources().getString(R.string.stop_ftp), stopPendingIntent);
+               getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(c, NotificationConstants.CHANNEL_NORMAL_ID)
                 .setContentIntent(pendingIntent)
@@ -266,7 +266,7 @@ protected Void doInBackground(Bundle... p1) {
                         findAndReplaceEncryptedEntry(sourceFile);
                     } catch (Exception e) {
                         // unable to modify encrypted entry in database
-                        Toast.makeText(c, getResources().getString(R.string.encryption_fail_copy), Toast.LENGTH_SHORT).show();
+                        Toast.makeText(c, getString(R.string.encryption_fail_copy), Toast.LENGTH_SHORT).show();
                     }
                 }
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -94,7 +94,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         Intent stopIntent = new Intent(TAG_BROADCAST_CRYPT_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_folder_lock_open_white_36dp,
-                getResources().getString(R.string.stop_ftp), stopPendingIntent);
+                getString(R.string.stop_ftp), stopPendingIntent);
 
         notificationBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID);
         notificationBuilder.setContentIntent(pendingIntent)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -93,7 +93,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         Intent stopIntent = new Intent(TAG_BROADCAST_CRYPT_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_folder_lock_white_36dp,
-                getResources().getString(R.string.stop_ftp), stopPendingIntent);
+                getString(R.string.stop_ftp), stopPendingIntent);
 
         notificationBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID);
         notificationBuilder.setContentIntent(pendingIntent)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -104,7 +104,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         Intent stopIntent = new Intent(TAG_BROADCAST_EXTRACT_CANCEL);
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(context, 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey600_36dp,
-                getResources().getString(R.string.stop_ftp), stopPendingIntent);
+                getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(context, NotificationConstants.CHANNEL_NORMAL_ID);
         mBuilder.setContentIntent(pendingIntent)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -119,7 +119,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         PendingIntent stopPendingIntent = PendingIntent.getBroadcast(getApplicationContext(),
                 1234, stopIntent, PendingIntent.FLAG_UPDATE_CURRENT);
         NotificationCompat.Action action = new NotificationCompat.Action(R.drawable.ic_zip_box_grey600_36dp,
-                getResources().getString(R.string.stop_ftp), stopPendingIntent);
+                getString(R.string.stop_ftp), stopPendingIntent);
 
         mBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID)
                 .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -245,9 +245,8 @@ protected Void doInBackground(Bundle... p1) {
             progressHandler.setSourceSize(totalSourceFiles);
             progressHandler.setTotalSize(totalSize);
 
-            progressHandler.setProgressListener((fileName, sourceFiles1, sourceProgress1, totalSize1, writtenSize, speed) -> {
-                publishResults(fileName, sourceFiles1, sourceProgress1, totalSize1, writtenSize, speed, false, move);
-            });
+            progressHandler.setProgressListener((speed) ->
+                publishResults(speed, false, move));
 
             watcherUtil = new ServiceWatcherUtil(progressHandler);
 

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -73,6 +73,7 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.List;
 
 import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
@@ -318,7 +319,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 
                     String[] dirs = new String[compressedExplorerAdapter.getCheckedItemPositions().size()];
                     for (int i = 0; i < dirs.length; i++) {
-                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).name;
+                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).path;
                     }
 
                     decompressor.decompress(compressedFile.getPath(), dirs);
@@ -433,7 +434,7 @@ private void updateBottomBar() {
         mainActivity.getAppbar().getBottomBar().updatePath(path, false, null, OpenMode.FILE, folder, file, this);
     }
 
-    private void createViews(ArrayList<CompressedObjectParcelable> items, String dir) {
+    private void createViews(List<CompressedObjectParcelable> items, String dir) {
         if (compressedExplorerAdapter == null) {
             compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor);
             listView.setAdapter(compressedExplorerAdapter);

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_UNDEFINED);
+                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.ui.views;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 import android.support.design.widget.TextInputLayout;

File: app/src/main/java/com/amaze/filemanager/utils/RootUtils.java
Patch:
@@ -8,6 +8,8 @@
 import com.amaze.filemanager.filesystem.RootHelper;
 
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
 import java.util.regex.Pattern;
 
 public class RootUtils {
@@ -205,7 +207,7 @@ public static void cat(String sourcePath, String destinationPath)
 
     /**
      * This converts from a set of booleans to OCTAL permissions notations.
-     * For use with {@link RootUtils.CHMOD_COMMAND}
+     * For use with {@link RootUtils#CHMOD_COMMAND}
      * (true, false, false,  true, true, false,  false, false, true) => 0461
      */
     public static int permissionsToOctalString(boolean ur, boolean uw, boolean ux,

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamServer.java
Patch:
@@ -665,12 +665,12 @@ private void sendResponse(Socket socket, String status, String mime, Properties
 
 
                 if (data != null) {
-                    //long pending = data.available();      // This is to support partial sends, see serveFile()
+                    //long pending = data.availableExact();      // This is to support partial sends, see serveFile()
                     data.open();
                     byte[] buff = new byte[8192];
                     int read = 0;
                     while ((read = data.read(buff)) > 0) {
-                        //if(SolidExplorer.LOG)Log.d(CloudUtil.TAG, "Read: "+ read +", pending: "+ data.available());
+                        //if(SolidExplorer.LOG)Log.d(CloudUtil.TAG, "Read: "+ read +", pending: "+ data.availableExact());
                         out.write(buff, 0, read);
                     }
                 }

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -82,7 +82,7 @@ public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile1.getAbsolutePath(), null, false, (data) -> {});
         List<CompressedObjectParcelable> result = task.execute().get();
         assertEquals(1, result.size());
-        assertEquals("good.txt", result.get(0).name);
+        assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
     }
 
@@ -91,7 +91,7 @@ public void testZipHelperTaskShouldOmitInvalidEntriesWithBackslash() throws Exce
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile2.getAbsolutePath(), null, false, (data) -> {});
         List<CompressedObjectParcelable> result = task.execute().get();
         assertEquals(1, result.size());
-        assertEquals("good.txt", result.get(0).name);
+        assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
     }
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -245,9 +245,8 @@ protected Void doInBackground(Bundle... p1) {
             progressHandler.setSourceSize(totalSourceFiles);
             progressHandler.setTotalSize(totalSize);
 
-            progressHandler.setProgressListener((fileName, sourceFiles1, sourceProgress1, totalSize1, writtenSize, speed) -> {
-                publishResults(fileName, sourceFiles1, sourceProgress1, totalSize1, writtenSize, speed, false, move);
-            });
+            progressHandler.setProgressListener((speed) ->
+                publishResults(speed, false, move));
 
             watcherUtil = new ServiceWatcherUtil(progressHandler);
 

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -319,7 +319,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 
                     String[] dirs = new String[compressedExplorerAdapter.getCheckedItemPositions().size()];
                     for (int i = 0; i < dirs.length; i++) {
-                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).name;
+                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).path;
                     }
 
                     decompressor.decompress(compressedFile.getPath(), dirs);

File: app/src/test/java/com/amaze/filemanager/filesystem/compressed/B0rkenZipTest.java
Patch:
@@ -82,7 +82,7 @@ public void testZipHelperTaskShouldOmitInvalidEntries() throws Exception {
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile1.getAbsolutePath(), null, false, (data) -> {});
         List<CompressedObjectParcelable> result = task.execute().get();
         assertEquals(1, result.size());
-        assertEquals("good.txt", result.get(0).name);
+        assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
     }
 
@@ -91,7 +91,7 @@ public void testZipHelperTaskShouldOmitInvalidEntriesWithBackslash() throws Exce
         ZipHelperTask task = new ZipHelperTask(RuntimeEnvironment.application, zipfile2.getAbsolutePath(), null, false, (data) -> {});
         List<CompressedObjectParcelable> result = task.execute().get();
         assertEquals(1, result.size());
-        assertEquals("good.txt", result.get(0).name);
+        assertEquals("good.txt", result.get(0).path);
         assertEquals(RuntimeEnvironment.application.getString(R.string.multiple_invalid_archive_entries), ShadowToast.getTextOfLatestToast());
     }
 }

File: app/src/main/java/com/amaze/filemanager/utils/RootUtils.java
Patch:
@@ -8,6 +8,8 @@
 import com.amaze.filemanager.filesystem.RootHelper;
 
 import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
 import java.util.regex.Pattern;
 
 public class RootUtils {
@@ -205,7 +207,7 @@ public static void cat(String sourcePath, String destinationPath)
 
     /**
      * This converts from a set of booleans to OCTAL permissions notations.
-     * For use with {@link RootUtils.CHMOD_COMMAND}
+     * For use with {@link RootUtils#CHMOD_COMMAND}
      * (true, false, false,  true, true, false,  false, false, true) => 0461
      */
     public static int permissionsToOctalString(boolean ur, boolean uw, boolean ux,

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -44,10 +44,10 @@ public class RootHelper {
      * @return a list of results. Null only if the command passed is a blocking call or no output is
      * there for the command passed
      */
-    public static List<String> runShellCommand(String cmd) throws ShellNotRunningException {
+    public static ArrayList<String> runShellCommand(String cmd) throws ShellNotRunningException {
         if (MainActivity.shellInteractive == null || !MainActivity.shellInteractive.isRunning())
             throw new ShellNotRunningException();
-        final List<String> result = new ArrayList<>();
+        final ArrayList<String> result = new ArrayList<>();
 
         // callback being called on a background handler thread
         MainActivity.shellInteractive.addCommand(cmd, 0, (commandCode, exitCode, output) -> result.addAll(output));
@@ -217,7 +217,7 @@ public static boolean isDirectory(String toTest, boolean root, int count)
         String name = f.getName();
         String p = f.getParent();
         if (p != null && p.length() > 0) {
-            List<String> ls = runShellCommand("ls -l " + p);
+            ArrayList<String> ls = runShellCommand("ls -l " + p);
             for (String s : ls) {
                 if (contains(s.split(" "), name)) {
                     try {

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamServer.java
Patch:
@@ -665,12 +665,12 @@ private void sendResponse(Socket socket, String status, String mime, Properties
 
 
                 if (data != null) {
-                    //long pending = data.available();      // This is to support partial sends, see serveFile()
+                    //long pending = data.availableExact();      // This is to support partial sends, see serveFile()
                     data.open();
                     byte[] buff = new byte[8192];
                     int read = 0;
                     while ((read = data.read(buff)) > 0) {
-                        //if(SolidExplorer.LOG)Log.d(CloudUtil.TAG, "Read: "+ read +", pending: "+ data.available());
+                        //if(SolidExplorer.LOG)Log.d(CloudUtil.TAG, "Read: "+ read +", pending: "+ data.availableExact());
                         out.write(buff, 0, read);
                     }
                 }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_UNDEFINED);
+                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.ui.views;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 import android.support.design.widget.TextInputLayout;

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -73,6 +73,7 @@
 import java.io.File;
 import java.util.ArrayList;
 import java.util.Calendar;
+import java.util.List;
 
 import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
 import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
@@ -433,7 +434,7 @@ private void updateBottomBar() {
         mainActivity.getAppbar().getBottomBar().updatePath(path, false, null, OpenMode.FILE, folder, file, this);
     }
 
-    private void createViews(ArrayList<CompressedObjectParcelable> items, String dir) {
+    private void createViews(List<CompressedObjectParcelable> items, String dir) {
         if (compressedExplorerAdapter == null) {
             compressedExplorerAdapter = new CompressedExplorerAdapter(getActivity(), utilsProvider, items, this, decompressor);
             listView.setAdapter(compressedExplorerAdapter);

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.ui.views;
 
 import android.content.Context;
+import android.graphics.drawable.Drawable;
 import android.support.annotation.Nullable;
 import android.support.annotation.StringRes;
 import android.support.design.widget.TextInputLayout;

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -975,8 +975,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     break;
                 }
                 final MaterialDialog dialog = GeneralDialogCreation.showBasicDialog(mainActivity,
-                        new String[]{getResources().getString(R.string.questionset),
-                                getResources().getString(R.string.setashome), getResources().getString(R.string.yes), getResources().getString(R.string.no), null});
+                       R.string.questionset, R.string.setashome, R.string.yes, R.string.no);
                 dialog.getActionButton(DialogAction.POSITIVE).setOnClickListener((v) -> {
                     main.home = main.getCurrentPath();
                     updatePaths(main.no);

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -497,7 +497,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
 
             // do not allow drawer to open when item gets selected
             if (!getMainActivity().getDrawer().isLocked()) {
-                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_UNDEFINED);
+                getMainActivity().getDrawer().lock(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);
             }
             return true;
         }

File: app/src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -280,7 +280,6 @@ public static ArrayList<HybridFileParcelable> getFilesList(String path, boolean
     public static void getFiles(String path, boolean root, boolean showHidden,
                                 GetModeCallBack getModeCallBack, OnFileFound fileCallback) {
         OpenMode mode = OpenMode.FILE;
-        ArrayList<HybridFileParcelable> files = new ArrayList<>();
         if (root && !path.startsWith("/storage") && !path.startsWith("/sdcard")) {
             try {
                 // we're rooted and we're trying to load file with superuser
@@ -301,7 +300,6 @@ public static void getFiles(String path, boolean root, boolean showHidden,
                                     boolean isdirectory = isDirectory(array.getLink(), root, 0);
                                     array.setDirectory(isdirectory);
                                 } else array.setDirectory(isDirectory(array));
-                                files.add(array);
                                 fileCallback.onFileFound(array);
                             }
                         }
@@ -315,7 +313,7 @@ public static void getFiles(String path, boolean root, boolean showHidden,
             }
         }
 
-        if (FileUtils.canListFiles(new File(path))) {
+        else if (FileUtils.canListFiles(new File(path))) {
             // we're taking a chance to load files using basic java filesystem
             getFilesList(path, showHidden, fileCallback);
             mode = OpenMode.FILE;

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -179,6 +179,7 @@ public static OutputStream getOutputStream(final File target, Context context) t
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
                 // Storage Access Framework
                 DocumentFile targetDocument = getDocumentFile(target, false, context);
+                if (targetDocument == null) return null;
                 outStream = context.getContentResolver().openOutputStream(targetDocument.getUri());
             } else if (Build.VERSION.SDK_INT == Build.VERSION_CODES.KITKAT) {
                 // Workaround for Kitkat ext SD card

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -122,7 +122,7 @@ public PublicKey getPublic() {
                     }
 
                     @Override
-                    public KeyType getType() throws IOException {
+                    public KeyType getType() {
                         return KeyType.fromKey(getPublic());
                     }
                 });

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamSource.java
Patch:
@@ -21,8 +21,6 @@ public class StreamSource extends RandomAccessStream {
     protected SmbFile file;
     InputStream input;
 
-    public StreamSource() {}
-
     public StreamSource(SmbFile file,long l) {
         super(l);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -65,7 +65,7 @@
  * @see KeyProvider
  * @see OpenSSHKeyV1KeyFile
  * @see PuTTYKeyFile
- * @see com.amaze.filemanager.filesystem.ssh.SshConnectionPool#create(Uri)
+ * @see com.amaze.filemanager.filesystem.ssh.SshConnectionPool#create(String)
  * @see net.schmizz.sshj.SSHClient#authPublickey(String, KeyProvider...)
  */
 public class PemToKeyPairTask extends AsyncTask<Void, Void, AsyncTaskResult<KeyPair>>

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -5,6 +5,7 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.net.Uri;
 import android.os.Environment;
 import android.util.Log;
 import android.widget.Toast;

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -553,7 +553,7 @@ public void extractFile(File file) {
 
     public String parseSftpPath(String a) {
         if (a.contains("@"))
-            return "ssh://" + a.substring(a.indexOf("@") + 1, a.length());
+            return "ssh://" + a.substring(a.lastIndexOf("@") + 1, a.length());
         else return a;
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -34,10 +34,9 @@ public FileHandler(MainFragment mainFragment, RecyclerView listView, boolean use
     @Override
     public void handleMessage(Message msg) {
         super.handleMessage(msg);
-        MainFragment main = mainFragment.get();
+        final MainFragment main = mainFragment.get();
 
-        if (main.getActivity() == null) {
-            // callback called when we're not inside the app
+        if(main == null || main.getActivity() == null) {
             return;
         }
 

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -553,7 +553,7 @@ public void extractFile(File file) {
 
     public String parseSftpPath(String a) {
         if (a.contains("@"))
-            return "ssh://" + a.substring(a.indexOf("@") + 1, a.length());
+            return "ssh://" + a.substring(a.lastIndexOf("@") + 1, a.length());
         else return a;
     }
 

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -5,6 +5,7 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.net.Uri;
 import android.os.Environment;
 import android.util.Log;
 import android.widget.Toast;
@@ -195,7 +196,7 @@ public void addSsh(String name, String path, String hostKey, String sshKeyName,
         SQLiteDatabase database = getWritableDatabase();
         ContentValues values = new ContentValues();
         values.put(COLUMN_NAME, name);
-        values.put(COLUMN_PATH, path);
+        values.put(COLUMN_PATH, Uri.encode(path));
         values.put(COLUMN_HOST_PUBKEY, hostKey);
         if(sshKey != null && !"".equals(sshKey))
         {
@@ -354,7 +355,7 @@ public String getSshHostKey(String uri)
             SQLiteDatabase sqLiteDatabase = getReadableDatabase();
 
             Cursor result = sqLiteDatabase.query(TABLE_SFTP, new String[]{COLUMN_HOST_PUBKEY},
-                    COLUMN_PATH + " = ?", new String[]{uri},
+                    COLUMN_PATH + " = ?", new String[]{Uri.encode(uri)},
                     null, null, null);
             if(result.moveToFirst())
             {

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -175,6 +175,7 @@ public static final String encryptSshPathAsNecessary(@NonNull String fullUri) {
      * @return SSH URL with the password (if exists) decrypted
      */
     public static final String decryptSshPathAsNecessary(@NonNull String fullUri) {
+        fullUri = Uri.decode(fullUri);
         String uriWithoutProtocol = fullUri.substring(SSH_URI_PREFIX.length(), fullUri.indexOf('@'));
         try {
             return (uriWithoutProtocol.indexOf(':') > 0) ?

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -189,7 +189,7 @@ private SSHClient create(@NonNull Uri uri) {
         UtilsHandler utilsHandler = AppConfig.getInstance().getUtilsHandler();
         String pem = utilsHandler.getSshAuthPrivateKey(uri.toString());
 
-        AtomicReference<KeyPair> keyPair = new AtomicReference<>(null);;
+        AtomicReference<KeyPair> keyPair = new AtomicReference<>(null);
         if(pem != null && !pem.isEmpty()) {
             try {
                 CountDownLatch latch = new CountDownLatch(1);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -226,7 +226,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
                 AppConfig.runInBackground(() -> {
                     utilsHandler.removeFromDatabase(new OperationData(UtilsHandler.Operation.SFTP,
-                            connectionName, path, null, null, null));
+                            path, connectionName, null, null, null));
                 });
                 ((MainActivity) getActivity()).getDrawer().refreshDrawer();
             }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -226,7 +226,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
 
                 AppConfig.runInBackground(() -> {
                     utilsHandler.removeFromDatabase(new OperationData(UtilsHandler.Operation.SFTP,
-                            connectionName, path, null, null, null));
+                            path, connectionName, null, null, null));
                 });
                 ((MainActivity) getActivity()).getDrawer().refreshDrawer();
             }

File: app/src/main/java/com/amaze/filemanager/fragments/CloudSheetFragment.java
Patch:
@@ -92,7 +92,6 @@ public static final boolean isCloudProviderAvailable(Context context) {
             pm.getPackageInfo(CloudContract.APP_PACKAGE_NAME, PackageManager.GET_ACTIVITIES);
             return true;
         } catch (PackageManager.NameNotFoundException e) {
-            e.printStackTrace();
             return false;
         }
     }

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -117,10 +117,10 @@ public static long folderSize(File directory, OnProgressUpdate<Long> updateState
     }
 
     public static long folderSize(HybridFile directory, OnProgressUpdate<Long> updateState) {
-        if(directory.isSftp())
-            return directory.folderSize(AppConfig.getInstance());
-        else
+        if(directory.isSimpleFile())
             return folderSize(new File(directory.getPath()), updateState);
+        else
+            return directory.folderSize(AppConfig.getInstance());
     }
 
     public static long folderSize(SmbFile directory) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -103,13 +103,15 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .setCustomHeadsUpContentView(customSmallContentViews)
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
+                .setOngoing(true)
                 .setColor(accentColor);
 
         decryptPath = intent.getStringExtra(TAG_DECRYPT_PATH);
         notificationBuilder.setSmallIcon(R.drawable.ic_folder_lock_open_white_36dp);
         NotificationConstants.setMetadata(context, notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.DECRYPT_ID, notificationBuilder.build());
+        initNotificationViews();
 
         super.onStartCommand(intent, flags, startId);
 
@@ -162,7 +164,7 @@ protected void onPostExecute(Void aVoid) {
             super.onPostExecute(aVoid);
 
             serviceWatcherUtil.stopWatch();
-            generateNotification(failedOps, false);
+            finalizeNotification(failedOps, false);
 
             Intent intent = new Intent(EncryptDecryptUtils.DECRYPT_BROADCAST);
             intent.putExtra(MainActivity.KEY_INTENT_LOAD_LIST_FILE, "");

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -103,11 +103,13 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
                 .setColor(accentColor)
+                .setOngoing(true)
                 .setSmallIcon(R.drawable.ic_folder_lock_white_36dp);
 
         NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
+        initNotificationViews();
 
         super.onStartCommand(intent, flags, startId);
         super.progressHalted();
@@ -208,7 +210,7 @@ protected void onPostExecute(Void aVoid) {
             super.onPostExecute(aVoid);
 
             serviceWatcherUtil.stopWatch();
-            generateNotification(failedOps, false);
+            finalizeNotification(failedOps, false);
 
             Intent intent = new Intent(MainActivity.KEY_INTENT_LOAD_LIST);
             intent.putExtra(MainActivity.KEY_INTENT_LOAD_LIST_FILE, "");

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -116,10 +116,12 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setCustomHeadsUpContentView(customSmallContentViews)
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
+                .setOngoing(true)
                 .setColor(accentColor);
 
         NotificationConstants.setMetadata(getApplicationContext(), mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.EXTRACT_ID, mBuilder.build());
+        initNotificationViews();
 
         long totalSize = getTotalSize(file);
 

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -7,6 +7,7 @@
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.design.widget.NavigationView;
+import android.support.v4.view.AbsSavedState;
 import android.util.AttributeSet;
 import android.view.MenuItem;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/CustomNavigationView.java
Patch:
@@ -67,7 +67,7 @@ public void deselectItems() {
 
     @Override
     public Parcelable onSaveInstanceState() {
-        if (true) {
+        if (!doesNavigationViewSavedStateExist()) {
             return super.onSaveInstanceState();
         }
 
@@ -84,7 +84,7 @@ public Parcelable onSaveInstanceState() {
 
     @Override
     public void onRestoreInstanceState(Parcelable state) {
-        if(true) {
+        if(!doesNavigationViewSavedStateExist()) {
             super.onRestoreInstanceState(state);
             return;
         }

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -110,7 +110,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mProgressImage = rootView.findViewById(R.id.progress_image);
         mCancelButton = rootView.findViewById(R.id.delete_button);
         mProgressTypeText = rootView.findViewById(R.id.text_view_progress_type);
-        mProgressBytesText.invalidate();
         mProgressFileNameText = rootView.findViewById(R.id.text_view_progress_file_name);
         mProgressBytesText = rootView.findViewById(R.id.text_view_progress_bytes);
         mProgressFileText = rootView.findViewById(R.id.text_view_progress_file);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -103,13 +103,15 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .setCustomHeadsUpContentView(customSmallContentViews)
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
+                .setOngoing(true)
                 .setColor(accentColor);
 
         decryptPath = intent.getStringExtra(TAG_DECRYPT_PATH);
         notificationBuilder.setSmallIcon(R.drawable.ic_folder_lock_open_white_36dp);
         NotificationConstants.setMetadata(context, notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.DECRYPT_ID, notificationBuilder.build());
+        initNotificationViews();
 
         super.onStartCommand(intent, flags, startId);
 
@@ -162,7 +164,7 @@ protected void onPostExecute(Void aVoid) {
             super.onPostExecute(aVoid);
 
             serviceWatcherUtil.stopWatch();
-            generateNotification(failedOps, false);
+            finalizeNotification(failedOps, false);
 
             Intent intent = new Intent(EncryptDecryptUtils.DECRYPT_BROADCAST);
             intent.putExtra(MainActivity.KEY_INTENT_LOAD_LIST_FILE, "");

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -103,11 +103,13 @@ public int onStartCommand(Intent intent, int flags, int startId) {
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
                 .setColor(accentColor)
+                .setOngoing(true)
                 .setSmallIcon(R.drawable.ic_folder_lock_white_36dp);
 
         NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
+        initNotificationViews();
 
         super.onStartCommand(intent, flags, startId);
         super.progressHalted();
@@ -208,7 +210,7 @@ protected void onPostExecute(Void aVoid) {
             super.onPostExecute(aVoid);
 
             serviceWatcherUtil.stopWatch();
-            generateNotification(failedOps, false);
+            finalizeNotification(failedOps, false);
 
             Intent intent = new Intent(MainActivity.KEY_INTENT_LOAD_LIST);
             intent.putExtra(MainActivity.KEY_INTENT_LOAD_LIST_FILE, "");

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -116,10 +116,12 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setCustomHeadsUpContentView(customSmallContentViews)
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
+                .setOngoing(true)
                 .setColor(accentColor);
 
         NotificationConstants.setMetadata(getApplicationContext(), mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.EXTRACT_ID, mBuilder.build());
+        initNotificationViews();
 
         long totalSize = getTotalSize(file);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -129,10 +129,12 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setCustomHeadsUpContentView(customSmallContentViews)
                 .setStyle(new NotificationCompat.DecoratedCustomViewStyle())
                 .addAction(action)
+                .setOngoing(true)
                 .setColor(accentColor);
 
         NotificationConstants.setMetadata(this, mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.ZIP_ID, mBuilder.build());
+        initNotificationViews();
 
         super.onStartCommand(intent, flags, startId);
         super.progressHalted();

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -110,6 +110,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         mProgressImage = rootView.findViewById(R.id.progress_image);
         mCancelButton = rootView.findViewById(R.id.delete_button);
         mProgressTypeText = rootView.findViewById(R.id.text_view_progress_type);
+        mProgressBytesText.invalidate();
         mProgressFileNameText = rootView.findViewById(R.id.text_view_progress_file_name);
         mProgressBytesText = rootView.findViewById(R.id.text_view_progress_bytes);
         mProgressFileText = rootView.findViewById(R.id.text_view_progress_file);

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.filesystem.SingletonUsbOtg;
 import com.amaze.filemanager.fragments.AppsListFragment;
 import com.amaze.filemanager.fragments.CloudSheetFragment;
-import com.amaze.filemanager.fragments.FTPServerFragment;
+import com.amaze.filemanager.fragments.FtpServerFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.fragments.preference_fragments.QuickAccessPref;
@@ -364,7 +364,7 @@ public void refreshDrawer() {
         addNewItem(menu, LASTGROUP, order++, R.string.ftp,
                 new MenuMetadata(() -> {
                     FragmentTransaction transaction2 = mainActivity.getSupportFragmentManager().beginTransaction();
-                    transaction2.replace(R.id.content_frame, new FTPServerFragment());
+                    transaction2.replace(R.id.content_frame, new FtpServerFragment());
                     mainActivity.getAppbar()
                             .getAppbarLayout()
                             .animate()

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -117,10 +117,10 @@ public static long folderSize(File directory, OnProgressUpdate<Long> updateState
     }
 
     public static long folderSize(HybridFile directory, OnProgressUpdate<Long> updateState) {
-        if(directory.isSftp())
-            return directory.folderSize(AppConfig.getInstance());
-        else
+        if(directory.isSimpleFile())
             return folderSize(new File(directory.getPath()), updateState);
+        else
+            return directory.folderSize(AppConfig.getInstance());
     }
 
     public static long folderSize(SmbFile directory) {

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -34,7 +34,7 @@
 import com.amaze.filemanager.filesystem.SingletonUsbOtg;
 import com.amaze.filemanager.fragments.AppsListFragment;
 import com.amaze.filemanager.fragments.CloudSheetFragment;
-import com.amaze.filemanager.fragments.FTPServerFragment;
+import com.amaze.filemanager.fragments.FtpServerFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.fragments.preference_fragments.QuickAccessPref;
@@ -364,7 +364,7 @@ public void refreshDrawer() {
         addNewItem(menu, LASTGROUP, order++, R.string.ftp,
                 new MenuMetadata(() -> {
                     FragmentTransaction transaction2 = mainActivity.getSupportFragmentManager().beginTransaction();
-                    transaction2.replace(R.id.content_frame, new FTPServerFragment());
+                    transaction2.replace(R.id.content_frame, new FtpServerFragment());
                     mainActivity.getAppbar()
                             .getAppbarLayout()
                             .animate()

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -445,8 +445,8 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
             private void copyFiles(final HybridFileParcelable sourceFile, final HybridFile targetFile,
                                    final ProgressHandler progressHandler) throws IOException {
 
+                if (progressHandler.getCancelled()) return;
                 if (sourceFile.isDirectory()) {
-                    if (progressHandler.getCancelled()) return;
 
                     if (!targetFile.exists()) targetFile.mkdir(c);
 
@@ -471,7 +471,6 @@ private void copyFiles(final HybridFileParcelable sourceFile, final HybridFile t
                         }
                     });
                 } else {
-                    if (progressHandler.getCancelled()) return;
                     if (!Operations.isFileNameValid(sourceFile.getName())) {
                         failedFOps.add(sourceFile);
                         return;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -279,9 +279,9 @@ public void execute(final @NonNull Context context, ArrayList<File> baseFiles, S
         }
 
         private void compressFile(File file, String path) throws IOException, NullPointerException {
-            if (!file.isDirectory()) {
-                if (progressHandler.getCancelled()) return;
+            if (progressHandler.getCancelled()) return;
 
+            if (!file.isDirectory()) {
                 byte[] buf = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
                 int len;
                 BufferedInputStream in = new BufferedInputStream(new FileInputStream(file));
@@ -315,7 +315,7 @@ private void compressFile(File file, String path) throws IOException, NullPointe
     private BroadcastReceiver receiver1 = new BroadcastReceiver() {
         @Override
         public void onReceive(Context context, Intent intent) {
-            asyncTask.cancel(true);
+            progressHandler.setCancelled(true);
         }
     };
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPService.java
Patch:
@@ -188,7 +188,7 @@ public void run() {
         if (preferences.getBoolean(KEY_PREFERENCE_SECURE, DEFAULT_SECURE)) {
 
             try {
-                KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
+                KeyStore keyStore = KeyStore.getInstance("BKS", "BC");
                 keyStore.load(getResources().openRawResource(R.raw.key), KEYSTORE_PASSWORD);
 
                 KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -28,6 +28,7 @@ public class CompressedHelper {
      * e.g. rar internally uses '\' but is converted to "/" for the app.
      */
     public static final String SEPARATOR = "/";
+    public static final char SEPARATOR_CHAR = '/';
 
     public static final String fileExtensionZip = "zip", fileExtensionJar = "jar", fileExtensionApk = "apk";
     public static final String fileExtensionTar = "tar";

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -143,6 +143,7 @@ protected void onPostExecute(CopyNode copyFolder) {
 
             if (copyFolder == null) {
                 // not starting service as there's no sufficient space
+                dialog.dismiss();
                 return;
             }
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -168,7 +168,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
     private View actionModeView;
     private FastScroller fastScroller;
     private CustomFileObserver customFileObserver;
-    private DataUtils dataUtils = DataUtils.getInstance();
+    private DataUtils dataUtils;
     private boolean isEncryptOpen = false;       // do we have to open a file when service is begin destroyed
     private HybridFileParcelable encryptBaseFile;            // the cached base file which we're to open, delete it later
 
@@ -198,6 +198,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         setRetainInstance(true);
 
+        dataUtils = DataUtils.getInstance();
         utilsProvider = getMainActivity().getUtilsProvider();
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
         res = getResources();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -83,7 +83,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
 
     private MainActivity mainActivity;
     private Resources resources;
-    private DataUtils dataUtils = DataUtils.getInstance();
+    private DataUtils dataUtils;
 
     private ActionViewStateManager actionViewStateManager;
     private boolean isSomethingSelected;
@@ -103,6 +103,7 @@ public class Drawer implements NavigationView.OnNavigationItemSelectedListener {
     public Drawer(MainActivity mainActivity) {
         this.mainActivity = mainActivity;
         resources = mainActivity.getResources();
+        dataUtils = DataUtils.getInstance();
 
         drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);
         drawerHeaderParent = drawerHeaderLayout.findViewById(R.id.drawer_header_parent);

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -29,7 +29,7 @@ public class ProgressHandler {
     String fileName;
 
     // current processing speed (bytes processed in 1000ms time)
-    int speedRaw = 0;
+    long speedRaw = 0;
 
     // boolean manages the lifecycle of service and whether it should be canceled
     private boolean isCancelled = false;
@@ -62,7 +62,7 @@ public ProgressHandler() {
      */
     public synchronized void addWrittenLength(long newPosition) {
 
-        this.speedRaw = (int) (newPosition - writtenSize);
+        this.speedRaw = (newPosition - writtenSize);
         this.writtenSize = newPosition;
 
         progressListener.onProgressed(fileName, sourceFiles, sourceFilesProcessed,
@@ -125,6 +125,6 @@ public interface ProgressListener {
          * @param speed raw write speed in bytes
          */
         void onProgressed(String fileName, int sourceFiles, int sourceProgress, long totalSize,
-                          long writtenSize, int speed);
+                          long writtenSize, long speed);
     }
 }

File: app/src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -55,6 +55,9 @@ public class TabHandler extends SQLiteOpenHelper {
     public TabHandler(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
         this.context = context;
+        // The call to onUpgrade() is not performed unless getWritableDatabase() is called.
+        // See more at https://github.com/TeamAmaze/AmazeFileManager/pull/1262
+        getWritableDatabase();
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -29,7 +29,7 @@ public class ProgressHandler {
     String fileName;
 
     // current processing speed (bytes processed in 1000ms time)
-    int speedRaw = 0;
+    long speedRaw = 0;
 
     // boolean manages the lifecycle of service and whether it should be canceled
     private boolean isCancelled = false;
@@ -62,7 +62,7 @@ public ProgressHandler() {
      */
     public synchronized void addWrittenLength(long newPosition) {
 
-        this.speedRaw = (int) (newPosition - writtenSize);
+        this.speedRaw = (newPosition - writtenSize);
         this.writtenSize = newPosition;
 
         progressListener.onProgressed(fileName, sourceFiles, sourceFilesProcessed,
@@ -125,6 +125,6 @@ public interface ProgressListener {
          * @param speed raw write speed in bytes
          */
         void onProgressed(String fileName, int sourceFiles, int sourceProgress, long totalSize,
-                          long writtenSize, int speed);
+                          long writtenSize, long speed);
     }
 }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -252,7 +252,7 @@ public class MainActivity extends PermissionsActivity implements SmbConnectionLi
     public static final String ARGS_INTENT_ACTION_VIEW_MIME_FOLDER = "resource/folder";
 
     private static final String CLOUD_AUTHENTICATOR_GDRIVE = "android.intent.category.BROWSABLE";
-    private static final String CLOUD_AUTHENTICATOR_REDIRECT_URI = "com.amaze.filemanager:/oauth2redirect";
+    private static final String CLOUD_AUTHENTICATOR_REDIRECT_URI = "com.amaze.filemanager:/auth";
 
     // the current visible tab, either 0 or 1
     public static int currentTab;

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -122,7 +122,7 @@ protected void onProgressUpdate(Object... values) {
                 }
 
                 @Override
-                protected Void doInBackground(Object... params) {
+                protected Object doInBackground(Object... params) {
                     return customAsyncCallbacks.doInBackground();
                 }
 

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -1,9 +1,11 @@
 package com.amaze.filemanager;
 
 import android.content.Context;
+import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 
 import com.amaze.filemanager.adapters.glide.apkimage.ApkImageModelLoaderFactory;
+import com.amaze.filemanager.utils.glide.CloudIconModelFactory;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Registry;
 import com.bumptech.glide.annotation.GlideModule;
@@ -17,5 +19,6 @@ public class AmazeFileManagerModule extends AppGlideModule {
     @Override
     public void registerComponents(Context context, Glide glide, Registry registry) {
         registry.prepend(String.class, Drawable.class, new ApkImageModelLoaderFactory(context.getPackageManager()));
+        registry.prepend(String.class, Bitmap.class, new CloudIconModelFactory(context));
     }
 }

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -77,7 +77,6 @@ public class DatabaseViewerActivity extends ThemedActivity {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        this.checkStorage = false;
         super.onCreate(savedInstanceState);
 
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -51,7 +51,7 @@ public ItemViewHolder(View view) {
         checkImageView = view.findViewById(R.id.check_icon);
         genericIcon = view.findViewById(R.id.generic_icon);
         checkImageViewGrid = view.findViewById(R.id.check_icon_grid);
-        iconLayout = view.findViewById(R.id.icon_frame);
+        iconLayout = view.findViewById(R.id.icon_frame_grid);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -152,7 +152,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
                 }
             } catch (Exception e) {
                 for (HybridFileParcelable f : files) {
-                    FileUtils.scanFile(f.getPath(), cd);
+                    FileUtils.scanFile(f.getFile(), cd);
                 }
             }
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -159,8 +159,8 @@ public void onPostExecute(Boolean movedCorrectly) {
 
             for (int i = 0; i < paths.size(); i++) {
                 for (HybridFileParcelable f : files.get(i)) {
-                    FileUtils.scanFile(f.getPath(), context);
-                    FileUtils.scanFile(paths.get(i) + "/" + f.getName(), context);
+                    FileUtils.scanFile(f.getFile(), context);
+                    FileUtils.scanFile(new File(paths.get(i) + "/" + f.getName()), context);
                 }
             }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -405,7 +405,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
                     failedFOps.add(sourceFile);
                     e.printStackTrace();
                 }
-                FileUtils.scanFile(targetFile.getPath(), c);
+                FileUtils.scanFile(targetFile.getFile(), c);
             }
 
             private void copyFiles(final HybridFileParcelable sourceFile, final HybridFile targetFile,

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -1,9 +1,11 @@
 package com.amaze.filemanager;
 
 import android.content.Context;
+import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 
 import com.amaze.filemanager.adapters.glide.apkimage.ApkImageModelLoaderFactory;
+import com.amaze.filemanager.utils.glide.CloudIconModelFactory;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Registry;
 import com.bumptech.glide.annotation.GlideModule;
@@ -17,5 +19,6 @@ public class AmazeFileManagerModule extends AppGlideModule {
     @Override
     public void registerComponents(Context context, Glide glide, Registry registry) {
         registry.prepend(String.class, Drawable.class, new ApkImageModelLoaderFactory(context.getPackageManager()));
+        registry.prepend(String.class, Bitmap.class, new CloudIconModelFactory(context));
     }
 }

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -77,7 +77,6 @@ public class DatabaseViewerActivity extends ThemedActivity {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        this.checkStorage = false;
         super.onCreate(savedInstanceState);
 
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -51,7 +51,7 @@ public ItemViewHolder(View view) {
         checkImageView = view.findViewById(R.id.check_icon);
         genericIcon = view.findViewById(R.id.generic_icon);
         checkImageViewGrid = view.findViewById(R.id.check_icon_grid);
-        iconLayout = view.findViewById(R.id.icon_frame);
+        iconLayout = view.findViewById(R.id.icon_frame_grid);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -152,7 +152,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
                 }
             } catch (Exception e) {
                 for (HybridFileParcelable f : files) {
-                    FileUtils.scanFile(f.getPath(), cd);
+                    FileUtils.scanFile(f.getFile(), cd);
                 }
             }
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -159,8 +159,8 @@ public void onPostExecute(Boolean movedCorrectly) {
 
             for (int i = 0; i < paths.size(); i++) {
                 for (HybridFileParcelable f : files.get(i)) {
-                    FileUtils.scanFile(f.getPath(), context);
-                    FileUtils.scanFile(paths.get(i) + "/" + f.getName(), context);
+                    FileUtils.scanFile(f.getFile(), context);
+                    FileUtils.scanFile(new File(paths.get(i) + "/" + f.getName()), context);
                 }
             }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -405,7 +405,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
                     failedFOps.add(sourceFile);
                     e.printStackTrace();
                 }
-                FileUtils.scanFile(targetFile.getPath(), c);
+                FileUtils.scanFile(targetFile.getFile(), c);
             }
 
             private void copyFiles(final HybridFileParcelable sourceFile, final HybridFile targetFile,

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -1,9 +1,11 @@
 package com.amaze.filemanager;
 
 import android.content.Context;
+import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 
 import com.amaze.filemanager.adapters.glide.apkimage.ApkImageModelLoaderFactory;
+import com.amaze.filemanager.utils.glide.CloudIconModelFactory;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.Registry;
 import com.bumptech.glide.annotation.GlideModule;
@@ -17,5 +19,6 @@ public class AmazeFileManagerModule extends AppGlideModule {
     @Override
     public void registerComponents(Context context, Glide glide, Registry registry) {
         registry.prepend(String.class, Drawable.class, new ApkImageModelLoaderFactory(context.getPackageManager()));
+        registry.prepend(String.class, Bitmap.class, new CloudIconModelFactory(context));
     }
 }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1196,9 +1196,6 @@ protected void onDestroy() {
         cryptHandler.close();
         
         SshConnectionPool.getInstance().expungeAllConnections();
-
-        /*if (mainFragment!=null)
-            mainFragment = null;*/
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -51,7 +51,7 @@ public ItemViewHolder(View view) {
         checkImageView = view.findViewById(R.id.check_icon);
         genericIcon = view.findViewById(R.id.generic_icon);
         checkImageViewGrid = view.findViewById(R.id.check_icon_grid);
-        iconLayout = view.findViewById(R.id.icon_frame);
+        iconLayout = view.findViewById(R.id.icon_frame_grid);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -152,7 +152,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
                 }
             } catch (Exception e) {
                 for (HybridFileParcelable f : files) {
-                    FileUtils.scanFile(f.getPath(), cd);
+                    FileUtils.scanFile(f.getFile(), cd);
                 }
             }
         }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -159,8 +159,8 @@ public void onPostExecute(Boolean movedCorrectly) {
 
             for (int i = 0; i < paths.size(); i++) {
                 for (HybridFileParcelable f : files.get(i)) {
-                    FileUtils.scanFile(f.getPath(), context);
-                    FileUtils.scanFile(paths.get(i) + "/" + f.getName(), context);
+                    FileUtils.scanFile(f.getFile(), context);
+                    FileUtils.scanFile(new File(paths.get(i) + "/" + f.getName()), context);
                 }
             }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -405,7 +405,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
                     failedFOps.add(sourceFile);
                     e.printStackTrace();
                 }
-                FileUtils.scanFile(targetFile.getPath(), c);
+                FileUtils.scanFile(targetFile.getFile(), c);
             }
 
             private void copyFiles(final HybridFileParcelable sourceFile, final HybridFile targetFile,

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -244,7 +244,7 @@ public class MainActivity extends PermissionsActivity implements SmbConnectionLi
     public static final String ARGS_INTENT_ACTION_VIEW_MIME_FOLDER = "resource/folder";
 
     private static final String CLOUD_AUTHENTICATOR_GDRIVE = "android.intent.category.BROWSABLE";
-    private static final String CLOUD_AUTHENTICATOR_REDIRECT_URI = "com.amaze.filemanager:/oauth2redirect";
+    private static final String CLOUD_AUTHENTICATOR_REDIRECT_URI = "com.amaze.filemanager:/auth";
 
     // the current visible tab, either 0 or 1
     public static int currentTab;

File: app/src/main/java/com/amaze/filemanager/adapters/data/IconDataParcelable.java
Patch:
@@ -69,7 +69,7 @@ public void writeToParcel(Parcel parcel, int i) {
         parcel.writeInt(image);
         parcel.writeInt(loadingImage);
         parcel.writeInt(isImageBroken? 1:0);
-        if (hashCode != null && type == IMAGE_FROMCLOUD) parcel.writeInt(hashCode);
+        if (hashCode != null) parcel.writeInt(hashCode);
     }
 
     public IconDataParcelable(Parcel im) {
@@ -78,7 +78,7 @@ public IconDataParcelable(Parcel im) {
         image = im.readInt();
         loadingImage = im.readInt();
         isImageBroken = im.readInt() == 1;
-        if (type == IMAGE_FROMCLOUD) hashCode = im.readInt();
+        hashCode = im.readInt();
     }
 
     public static final Parcelable.Creator<IconDataParcelable> CREATOR =

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -111,7 +111,7 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
 
                 try {
                     SmbFile[] smbFile = hFile.getSmbFile(5000).listFiles();
-                    list = ma.addToSmb(smbFile, path);
+                    list = ma.addToSmb(smbFile, path, showHiddenFiles);
                     openmode = OpenMode.SMB;
                 } catch (SmbAuthException e) {
                     if (!e.getMessage().toLowerCase().contains("denied")) {

File: app/src/main/java/com/amaze/filemanager/adapters/data/IconDataParcelable.java
Patch:
@@ -69,7 +69,7 @@ public void writeToParcel(Parcel parcel, int i) {
         parcel.writeInt(image);
         parcel.writeInt(loadingImage);
         parcel.writeInt(isImageBroken? 1:0);
-        if (hashCode != null) parcel.writeInt(hashCode);
+        if (hashCode != null && type == IMAGE_FROMCLOUD) parcel.writeInt(hashCode);
     }
 
     public IconDataParcelable(Parcel im) {
@@ -78,7 +78,7 @@ public IconDataParcelable(Parcel im) {
         image = im.readInt();
         loadingImage = im.readInt();
         isImageBroken = im.readInt() == 1;
-        hashCode = im.readInt();
+        if (type == IMAGE_FROMCLOUD) hashCode = im.readInt();
     }
 
     public static final Parcelable.Creator<IconDataParcelable> CREATOR =

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -77,7 +77,6 @@ public class DatabaseViewerActivity extends ThemedActivity {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        this.checkStorage = false;
         super.onCreate(savedInstanceState);
 
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -77,7 +77,6 @@ public class DatabaseViewerActivity extends ThemedActivity {
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-        this.checkStorage = false;
         super.onCreate(savedInstanceState);
 
         SharedPreferences sharedPref = PreferenceManager.getDefaultSharedPreferences(this);

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -234,7 +234,7 @@ public <E> E doInBackground() {
                                     AppConfig.toast(mainActivity, mainActivity.getResources().getString(R.string.not_allowed));
                                     return null;
                                 }
-                                
+
                                 DocumentFile targetDocumentFile = getDocumentFile(targetFile, false, mainActivity.getApplicationContext());
 
                                 //Fallback, in case getDocumentFile() didn't properly return a DocumentFile instance
@@ -243,7 +243,7 @@ public <E> E doInBackground() {
 
                                 //Lazy check... and in fact, different apps may pass in URI in different formats, so we could only check filename matches
                                 //FIXME?: Prompt overwrite instead of simply blocking
-                                if (targetDocumentFile.exists()) {
+                                if (targetDocumentFile.exists() && targetDocumentFile.length() > 0) {
                                     AppConfig.toast(mainActivity, mainActivity.getString(R.string.cannot_overwrite));
                                     return null;
                                 }

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.ContentResolver;
 import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.Build;
 import android.preference.PreferenceManager;
 import android.support.annotation.NonNull;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -111,7 +111,7 @@ protected Pair<OpenMode, ArrayList<LayoutElementParcelable>> doInBackground(Void
 
                 try {
                     SmbFile[] smbFile = hFile.getSmbFile(5000).listFiles();
-                    list = ma.addToSmb(smbFile, path);
+                    list = ma.addToSmb(smbFile, path, showHiddenFiles);
                     openmode = OpenMode.SMB;
                 } catch (SmbAuthException e) {
                     if (!e.getMessage().toLowerCase().contains("denied")) {

File: app/src/main/java/com/amaze/filemanager/utils/glide/CloudIconModelLoader.java
Patch:
@@ -5,6 +5,8 @@
 import android.support.annotation.Nullable;
 
 import com.amaze.filemanager.database.CloudHandler;
+import com.amaze.filemanager.filesystem.HybridFile;
+import com.amaze.filemanager.utils.OpenMode;
 import com.bumptech.glide.load.Options;
 import com.bumptech.glide.load.model.ModelLoader;
 import com.bumptech.glide.signature.ObjectKey;
@@ -27,7 +29,7 @@ public LoadData<Bitmap> buildLoadData(String s, int width, int height, Options o
         // we put key as current time since we're not disk caching the images for cloud,
         // as there is no way to differentiate input streams returned by different cloud services
         // for future instances and they don't expose concrete paths either
-        return new LoadData<>(new ObjectKey(System.currentTimeMillis()), new CloudIconDataFetcher(context, s));
+        return new LoadData<>(new ObjectKey(System.currentTimeMillis()), new CloudIconDataFetcher(context, s, width, height));
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/AmazeFileManagerModule.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager;
 
 import android.content.Context;
+import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 
 import com.amaze.filemanager.adapters.glide.apkimage.ApkImageModelLoaderFactory;
@@ -18,6 +19,6 @@ public class AmazeFileManagerModule extends AppGlideModule {
     @Override
     public void registerComponents(Context context, Glide glide, Registry registry) {
         registry.prepend(String.class, Drawable.class, new ApkImageModelLoaderFactory(context.getPackageManager()));
-        registry.prepend(String.class, String.class, new CloudIconModelFactory(context));
+        registry.prepend(String.class, Bitmap.class, new CloudIconModelFactory(context));
     }
 }

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -7,7 +7,7 @@
 
 public class GlideConstants {
 
-    public static final int MAX_PRELOAD_FILES = 10;
-    public static final int MAX_PRELOAD_APPSADAPTER = 50;
+    public static final int MAX_PRELOAD_FILES = 50;
+    public static final int MAX_PRELOAD_APPSADAPTER = 100;
 
 }

File: app/src/main/java/com/amaze/filemanager/utils/glide/CloudIconModelFactory.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.utils.glide;
 
 import android.content.Context;
+import android.graphics.Bitmap;
 
 import com.bumptech.glide.load.model.ModelLoader;
 import com.bumptech.glide.load.model.ModelLoaderFactory;
@@ -10,7 +11,7 @@
  * Created by Vishal Nehra on 3/27/2018.
  */
 
-public class CloudIconModelFactory implements ModelLoaderFactory<String, String> {
+public class CloudIconModelFactory implements ModelLoaderFactory<String, Bitmap> {
 
     private Context context;
 
@@ -19,7 +20,7 @@ public CloudIconModelFactory(Context context) {
     }
 
     @Override
-    public ModelLoader<String, String> build(MultiModelLoaderFactory multiFactory) {
+    public ModelLoader<String, Bitmap> build(MultiModelLoaderFactory multiFactory) {
         return new CloudIconModelLoader(context);
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1679,7 +1679,7 @@ public void addConnection(boolean edit, final String name, final String path, fi
                 dataUtils.addServer(s);
                 drawer.refreshDrawer();
 
-                utilsHandler.saveToDatabase(new OperationData(UtilsHandler.Operation.SMB, name, encryptedPath));
+                utilsHandler.saveToDatabase(new OperationData(UtilsHandler.Operation.SMB, encryptedPath, name));
 
                 //grid.addPath(name, encryptedPath, DataUtils.SMB, 1);
                 MainFragment ma = getCurrentMainFragment();

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -163,7 +163,7 @@ public void addCommonBookmarks() {
         };
 
         for (String dir : dirs) {
-            saveToDatabase(new OperationData(Operation.BOOKMARKS, dir, new File(dir).getName()));
+            saveToDatabase(new OperationData(Operation.BOOKMARKS, new File(dir).getName(), dir));
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/database/models/OperationData.java
Patch:
@@ -39,7 +39,7 @@ public OperationData(Operation type, String path) {
     /**
      * Constructor for types {@link Operation#BOOKMARKS} or {@link Operation#SMB}
      */
-    public OperationData(Operation type, String path, String name) {
+    public OperationData(Operation type, String name, String path) {
         if(type != BOOKMARKS && type != SMB) throw new IllegalArgumentException("Wrong constructor for object type");
 
         this.type = type;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -137,7 +137,7 @@ private void loadCreateDialog() {
 
                     dataUtils.addBook(values);
                     utilsHandler.saveToDatabase(new OperationData(UtilsHandler.Operation.BOOKMARKS,
-                            editText1.getText().toString(), editText2.getText().toString()));
+                            editText2.getText().toString(), editText1.getText().toString()));
 
                     dialog.dismiss();
                 });

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -41,7 +41,6 @@ public class Utils {
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";
     private static final String INPUT_INTENT_BLACKLIST_DOTS = "\\.\\.\\.";
 
-
     //methods for fastscroller
     public static float clamp(float min, float max, float value) {
         float minimum = Math.max(min, value);
@@ -236,5 +235,4 @@ public static int nthToLastCharIndex(int elementNumber, String str, char element
         }
         return -1;
     }
-
 }

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -82,7 +82,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         mAppBarLayout = findViewById(R.id.appBarLayout);
         mCollapsingToolbarLayout = findViewById(R.id.collapsing_toolbar_layout);
         mTitleTextView =  findViewById(R.id.text_view_title);
-        ImageView mLicensesIcon = findViewById(R.id.image_view_license);;
+        ImageView mLicensesIcon = findViewById(R.id.image_view_license);
         mAuthorsDivider = findViewById(R.id.view_divider_authors);
 
         mAppBarLayout.setLayoutParams(calculateHeaderViewParams());

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/BasicActivity.java
Patch:
@@ -2,8 +2,9 @@
 
 import android.support.v7.app.AppCompatActivity;
 
+import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.utils.application.AppConfig;
-import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.ui.colors.ColorPreference;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
@@ -16,7 +17,7 @@ protected AppConfig getAppConfig() {
         return (AppConfig) getApplication();
     }
 
-    public ColorPreference getColorPreference() {
+    public ColorPreferenceHelper getColorPreference() {
         return getAppConfig().getUtilsProvider().getColorPreference();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -49,8 +49,6 @@ public interface Callback<T> {
 
         /**
          * Implement logic on what to do with the result here.
-         *
-         * @param result
          */
         void onResult(T result);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -121,7 +121,7 @@ protected void onPostExecute(AsyncTaskResult<PublicKey> result) {
             if(SocketException.class.isAssignableFrom(result.exception.getClass())
                     || SocketTimeoutException.class.isAssignableFrom(result.exception.getClass())) {
                 Toast.makeText(AppConfig.getInstance(),
-                        String.format(AppConfig.getInstance().getResources().getString(R.string.ssh_connect_failed),
+                        AppConfig.getInstance().getResources().getString(R.string.ssh_connect_failed,
                                 hostname, port, result.exception.getLocalizedMessage()),
                         Toast.LENGTH_LONG).show();
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -202,7 +202,7 @@ protected void onPostExecute(AsyncTaskResult<KeyPair> result) {
 
     private void toastOnParseError(AsyncTaskResult<KeyPair> result){
         Toast.makeText(AppConfig.getInstance().getActivityContext(),
-                String.format(AppConfig.getInstance().getResources().getString(R.string.ssh_pem_key_parse_error),
+                AppConfig.getInstance().getResources().getString(R.string.ssh_pem_key_parse_error,
                         result.exception.getLocalizedMessage()), Toast.LENGTH_LONG).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -164,7 +164,6 @@ protected void onReset() {
     /**
      * We would want to release resources here
      * List is nothing we would want to close
-     * @param layoutElementList
      */
     //TODO do something
     private void onReleaseResources(AppsDataPair layoutElementList) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -224,8 +224,6 @@ public boolean isDecryptService() {
 
     /**
      * Displays a notification, sends intent and cancels progress if there were some failures
-     *
-     * @param failedOps
      */
     void generateNotification(ArrayList<HybridFile> failedOps, boolean move) {
         if (!move) getNotificationManager().cancelAll();

File: app/src/main/java/com/amaze/filemanager/database/models/CloudEntry.java
Patch:
@@ -38,15 +38,13 @@ public String getPersistData() {
     /**
      * Set the service type
      * Support values from {@link com.amaze.filemanager.utils.OpenMode}
-     * @param openMode
      */
     public void setServiceType(OpenMode openMode) {
         this.serviceType = openMode;
     }
 
     /**
      * Returns ordinal value of service from {@link com.amaze.filemanager.utils.OpenMode}
-     * @return
      */
     public OpenMode getServiceType() {
         return this.serviceType;

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -27,7 +27,7 @@ public class EditableFileAbstraction {
     public final int scheme;
     public final HybridFileParcelable hybridFileParcelable;
 
-    public EditableFileAbstraction(Context context, Uri uri) throws FileNotFoundException {
+    public EditableFileAbstraction(Context context, Uri uri) {
         switch (uri.getScheme()) {
             case "content":
                 this.uri = uri;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -70,9 +70,6 @@ public void setSize(long size) {
         this.size = size;
     }
 
-    /**
-     * @return
-     */
     public boolean isDirectory() {
         return isDirectory;
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SFtpClientTemplate.java
Patch:
@@ -46,7 +46,6 @@ public SFtpClientTemplate(@NonNull String url)
      * session.
      *
      * @param url SSH connection URL, in the form of <code>ssh://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;</code> or <code>ssh://&lt;username&gt;@&lt;host&gt;:&lt;port&gt;</code>
-     * @param closeClientOnFinish
      */
     public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
     {
@@ -61,7 +60,6 @@ public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      *                                SSH session had been set up.
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SFTPClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientSessionTemplate.java
Patch:
@@ -47,7 +47,6 @@ public SshClientSessionTemplate(@NonNull String url)
      * @param sshClientSession {@link Session} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull Session sshClientSession) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientTemplate.java
Patch:
@@ -65,7 +65,6 @@ public SshClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      * @param client {@link SSHClient} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SSHClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -93,7 +93,7 @@ public static final <T> T execute(@NonNull SshClientTemplate template) {
     public static final <T> T execute(@NonNull final SshClientSessionTemplate template) {
         return execute(new SshClientTemplate(template.url, false) {
             @Override
-            public T execute(SSHClient client) throws IOException {
+            public T execute(SSHClient client) {
                 Session session = null;
                 T retval = null;
                 try {
@@ -125,7 +125,7 @@ public T execute(SSHClient client) throws IOException {
     public static final <T> T execute(@NonNull final SFtpClientTemplate template) {
         return execute(new SshClientTemplate(template.url, false) {
             @Override
-            public T execute(SSHClient client) throws IOException {
+            public T execute(SSHClient client) {
                 SFTPClient sftpClient = null;
                 T retval = null;
                 try {

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -133,7 +133,7 @@ private SSHClient create(@NonNull String url) throws IOException {
 
     // Logic for creating SSH connection. Depends on password existence in given Uri password or
     // key-based authentication
-    private SSHClient create(@NonNull Uri uri) throws IOException {
+    private SSHClient create(@NonNull Uri uri) {
         String host = uri.getHost();
         int port = uri.getPort();
         //If the uri is fetched from the app's database storage, we assume it will never be empty

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/Statvfs.java
Patch:
@@ -196,9 +196,7 @@ public long getRawFileSystemId()
          *
          * Many thanks to Alexander--@github for the comments.
          *
-         * @see {@link Buffer#readUInt64()}
-         * @param buffer
-         * @return
+         * @see Buffer#readUInt64()
          */
         private long readUInt64FromBuffer(Buffer buffer) throws Buffer.BufferException
         {

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -103,7 +103,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
         getListView().setOnScrollListener(preloader);
         setListAdapter(adapter);
         setListShown(false);
-        setEmptyText(getResources().getString(R.string.no_applications));
+        setEmptyText(getString(R.string.no_applications));
         getLoaderManager().initLoader(ID_LOADER_APP_LIST, null, this);
 
         if (savedInstanceState != null) {

File: app/src/main/java/com/amaze/filemanager/fragments/DbViewerFragment.java
Patch:
@@ -35,9 +35,9 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         databaseViewerActivity = (DatabaseViewerActivity) getActivity();
 
         rootView = inflater.inflate(R.layout.fragment_db_viewer, null);
-        webView = (WebView) rootView.findViewById(R.id.webView1);
-        loadingText = (TextView) rootView.findViewById(R.id.loadingText);
-        relativeLayout = (RelativeLayout) rootView.findViewById(R.id.tableLayout);
+        webView = rootView.findViewById(R.id.webView1);
+        loadingText = rootView.findViewById(R.id.loadingText);
+        relativeLayout = rootView.findViewById(R.id.tableLayout);
         tableName = getArguments().getString("table");
         databaseViewerActivity.setTitle(tableName);
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -53,6 +53,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SKIN_TWO = "skin_two";
     public static final String PREFERENCE_ACCENT = "accent_skin";
     public static final String PREFERENCE_ICON_SKIN = "icon_skin";
+    public static final String PREFERENCE_CURRENT_TAB = "current_tab";
     public static final String PREFERENCE_COLORIZE_ICONS = "coloriseIcons";
     public static final String PREFERENCE_COLORED_NAVIGATION = "colorednavigation";
     public static final String PREFERENCE_RANDOM_COLOR = "random_checkbox";

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.utils.color;
+package com.amaze.filemanager.ui.colors;
 
 import android.content.Context;
 import android.graphics.drawable.GradientDrawable;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -81,8 +81,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final TextInputLayout t2 = v2.findViewById(R.id.t2);
             final AppCompatEditText conName = v2.findViewById(R.id.editText4);
             conName.setText(title);
-            final String s1 = String.format(getString(R.string.cantbeempty), c.getResources().getString(R.string.name));
-            final String s2 = String.format(getString(R.string.cantbeempty), c.getResources().getString(R.string.path));
+            final String s1 = getString(R.string.cantbeempty, c.getString(R.string.name));
+            final String s2 = getString(R.string.cantbeempty, c.getString(R.string.path));
             conName.addTextChangedListener(new SimpleTextWatcher() {
                 @Override
                 public void afterTextChanged(Editable s) {

File: app/src/main/java/com/amaze/filemanager/ui/views/DividerItemDecoration.java
Patch:
@@ -48,8 +48,6 @@ public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
     /**
      * Draws the divider on the canvas provided by RecyclerView
      * Be advised - divider will be drawn before the views, hence it'll be below the views of adapter
-     * @param c
-     * @param parent
      */
     private void drawVertical(Canvas c, RecyclerView parent) {
         final int left = parent.getPaddingLeft() + leftPaddingPx;

File: app/src/main/java/com/amaze/filemanager/ui/views/RoundedImageView.java
Patch:
@@ -115,8 +115,6 @@ public Bitmap getRoundedCroppedBitmap(Bitmap bitmap, int radius) {
      * Converts a {@link Drawable} to {@link Bitmap}
      * A drawable can be drawn on a {@link Canvas} and a Canvas can be backed by a Bitmap.
      * Hence the conversion
-     * @param drawable
-     * @return
      */
     public Bitmap drawableToBitmap (Drawable drawable) {
         Bitmap bitmap;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -32,11 +32,11 @@ public class AppBar {
     private AppBarLayout appbarLayout;
 
     public AppBar(MainActivity a, SharedPreferences sharedPref, SearchView.SearchListener searchListener) {
-        toolbar = (Toolbar) a.findViewById(R.id.action_bar);
+        toolbar = a.findViewById(R.id.action_bar);
         searchView = new SearchView(this, a, searchListener);
         bottomBar = new BottomBar(this, a);
 
-        appbarLayout = (AppBarLayout) a.findViewById(R.id.lin);
+        appbarLayout = a.findViewById(R.id.lin);
 
         if (SDK_INT >= 21) toolbar.setElevation(0);
         /* For SearchView, see onCreateOptionsMenu(Menu menu)*/

File: app/src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -288,8 +288,6 @@ public void onAnimationRepeat(Animator animator) {
     /**
      * Animates filenames textview to marquee after a delay.
      * Make sure to set {@link TextView#setSelected(boolean)} to false in order to stop the marquee later
-     * @param delayInMillis
-     * @param marqueeView
      */
     public static void marqueeAfterDelay(int delayInMillis, ThemedTextView marqueeView) {
         new Handler().postDelayed(() -> {

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -42,7 +42,6 @@ public static ArrayList<HybridFileParcelable> getDocumentFilesList(String path,
      * @param path    the path to the directory tree, starts with prefix 'otg:/'
      *                Independent of URI (or mount point) for the OTG
      * @param context context for loading
-     * @return an array of list of files at the path
      */
     public static void getDocumentFiles(String path, Context context, OnFileFound fileFound) {
         SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/utils/OnProgressUpdate.java
Patch:
@@ -8,5 +8,5 @@
  */
 
 public interface OnProgressUpdate<T> {
-    public void onUpdate(T data);
+    void onUpdate(T data);
 }

File: app/src/main/java/com/amaze/filemanager/utils/OpenMode.java
Patch:
@@ -29,7 +29,6 @@ public enum OpenMode {
      * Get open mode based on the id assigned.
      * Generally used to retrieve this type after config change or to send enum as argument
      * @param ordinal the position of enum starting from 0 for first element
-     * @return
      */
     public static OpenMode getOpenMode(int ordinal) {
         return OpenMode.values()[ordinal];

File: app/src/main/java/com/amaze/filemanager/utils/PreferenceUtils.java
Patch:
@@ -8,8 +8,6 @@
  */
 public class PreferenceUtils {
 
-    public static final String KEY_CURRENT_TAB = "current_tab";
-
     public static final int DEFAULT_PRIMARY = 4;
     public static final int DEFAULT_ACCENT = 1;
     public static final int DEFAULT_ICON = -1;

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamServer.java
Patch:
@@ -202,9 +202,7 @@ public void stop() {
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the CloudStreamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamSource.java
Patch:
@@ -23,7 +23,7 @@ public class StreamSource {
 
     public StreamSource() {}
 
-    public StreamSource(SmbFile file,long l) throws SmbException {
+    public StreamSource(SmbFile file,long l) {
 
         fp = 0;
         len = l;
@@ -57,8 +57,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -49,7 +49,7 @@ public Task(String str) {
             this.addr = str;
         }
 
-        public ComputerParcelable call() throws Exception {
+        public ComputerParcelable call() {
             try {
                 NbtAddress[] allByAddress = NbtAddress.getAllByAddress(this.addr);
                 if (allByAddress == null || allByAddress.length <= 0) {

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -211,7 +211,7 @@ public static Uri getUriForBaseFile(Context context, HybridFileParcelable baseFi
             case GDRIVE:
             case ONEDRIVE:
             case BOX:
-                Toast.makeText(context, context.getResources().getString(R.string.smb_launch_error),
+                Toast.makeText(context, context.getString(R.string.smb_launch_error),
                         Toast.LENGTH_LONG).show();
                 return null;
             default:

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -92,7 +92,6 @@ public void onTerminate() {
      * Post a runnable to handler. Use this in case we don't have any restriction to execute after
      * this runnable is executed, and {@link #runInBackground(CustomAsyncCallbacks)} in case we need
      * to execute something after execution in background
-     * @param runnable
      */
     public static void runInBackground(Runnable runnable) {
         synchronized (sBackgroundHandler) {
@@ -103,7 +102,6 @@ public static void runInBackground(Runnable runnable) {
     /**
      * A compact AsyncTask which runs which executes whatever is passed by callbacks.
      * Supports any class that extends an object as param array, and result too.
-     * @param customAsyncCallbacks
      */
     public static void runInBackground(final CustomAsyncCallbacks customAsyncCallbacks) {
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -268,9 +268,7 @@ public void stop()
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the Streamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamSource.java
Patch:
@@ -50,8 +50,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {
@@ -69,7 +67,7 @@ public int read(byte[] bytes, int start, int offs) throws IOException {
         fp += read;
         return read;
     }
-    public long moveTo(long position) throws IOException {
+    public long moveTo(long position) {
         fp = position;
         return fp;
     }

File: app/src/main/java/com/amaze/filemanager/utils/files/FileListSorter.java
Patch:
@@ -42,9 +42,6 @@ private boolean isDirectory(LayoutElementParcelable path) {
     /**
      * Compares two elements and return negative, zero and positive integer if first argument is
      * less than, equal to or greater than second
-     * @param file1
-     * @param file2
-     * @return
      */
     @Override
     public int compare(LayoutElementParcelable file1, LayoutElementParcelable file2) {

File: app/src/main/java/com/amaze/filemanager/utils/files/GenericCopyUtil.java
Patch:
@@ -57,7 +57,6 @@ public GenericCopyUtil(Context context) {
      *                    using streams instead of channel which maps the who buffer in memory.
      *                    TODO: Use buffers even on low memory but don't map the whole file to memory but
      *                          parts of it, and transfer each part instead.
-     * @throws IOException
      */
     private void startCopy(boolean lowOnMemory) throws IOException {
 
@@ -251,7 +250,7 @@ else if (outChannel!=null) {
             e.printStackTrace();
 
             // we ran out of memory to map the whole channel, let's switch to streams
-            AppConfig.toast(mContext, mContext.getResources().getString(R.string.copy_low_memory));
+            AppConfig.toast(mContext, mContext.getString(R.string.copy_low_memory));
 
             startCopy(true);
         } finally {

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareAdapter.java
Patch:
@@ -62,8 +62,8 @@ class ViewHolder extends RecyclerView.ViewHolder {
 
             rootView = view;
 
-            textView = ((TextView) view.findViewById(R.id.firstline));
-            imageView = (ImageView) view.findViewById(R.id.icon);
+            textView = view.findViewById(R.id.firstline);
+            imageView = view.findViewById(R.id.icon);
         }
 
         void render(final int position) {

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareTask.java
Patch:
@@ -71,7 +71,7 @@ protected Void doInBackground(String... strings) {
             intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, arrayList);
             intent.setPackage("com.android.bluetooth");
             targetShareIntents.add(intent);
-            arrayList1.add(contextc.getResources().getString(R.string.bluetooth));
+            arrayList1.add(contextc.getString(R.string.bluetooth));
             arrayList2.add(contextc.getResources().getDrawable(appTheme.equals(AppTheme.LIGHT) ? R
                     .drawable.ic_settings_bluetooth_black_24dp : R.drawable.ic_settings_bluetooth_white_36dp));
         }

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -82,7 +82,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         mAppBarLayout = findViewById(R.id.appBarLayout);
         mCollapsingToolbarLayout = findViewById(R.id.collapsing_toolbar_layout);
         mTitleTextView =  findViewById(R.id.text_view_title);
-        ImageView mLicensesIcon = findViewById(R.id.image_view_license);;
+        ImageView mLicensesIcon = findViewById(R.id.image_view_license);
         mAuthorsDivider = findViewById(R.id.view_divider_authors);
 
         mAppBarLayout.setLayoutParams(calculateHeaderViewParams());

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -438,7 +438,6 @@ public <T> T[] params() {
 
     /**
      * Checks for the action to take when Amaze receives an intent from external source
-     * @param intent
      */
     private void checkForExternalIntent(Intent intent) {
         String actionIntent = intent.getAction();

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -174,7 +174,7 @@ public CompressedItemViewHolder onCreateViewHolder(ViewGroup parent, int viewTyp
         } else if(viewType == TYPE_ITEM) {
             View v = mInflater.inflate(R.layout.rowlayout, parent, false);
             CompressedItemViewHolder vh = new CompressedItemViewHolder(v);
-            ImageButton about = (ImageButton) v.findViewById(R.id.properties);
+            ImageButton about = v.findViewById(R.id.properties);
             about.setVisibility(View.INVISIBLE);
             return vh;
         } else {
@@ -287,7 +287,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                         compressedExplorerFragment.isOpen = true;
 
                         Toast.makeText(compressedExplorerFragment.getContext(),
-                                compressedExplorerFragment.getContext().getResources().getString(R.string.please_wait),
+                                compressedExplorerFragment.getContext().getString(R.string.please_wait),
                                 Toast.LENGTH_SHORT).show();
                         decompressor.decompress(compressedExplorerFragment.getActivity().getExternalCacheDir().getPath(),
                                 new String[]{rowItem.name});

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -302,7 +302,6 @@ private void animate(ItemViewHolder holder) {
     /**
      * Adds item to the end of the list, don't use this unless you are dynamically loading the adapter,
      * after you are finished you must call createHeaders
-     * @param e
      */
     public void addItem(LayoutElementParcelable e) {
         if (mainFrag.IS_LIST && itemsDigested.size() > 0) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -49,8 +49,6 @@ public interface Callback<T> {
 
         /**
          * Implement logic on what to do with the result here.
-         *
-         * @param result
          */
         void onResult(T result);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -121,7 +121,7 @@ protected void onPostExecute(AsyncTaskResult<PublicKey> result) {
             if(SocketException.class.isAssignableFrom(result.exception.getClass())
                     || SocketTimeoutException.class.isAssignableFrom(result.exception.getClass())) {
                 Toast.makeText(AppConfig.getInstance(),
-                        String.format(AppConfig.getInstance().getResources().getString(R.string.ssh_connect_failed),
+                        AppConfig.getInstance().getResources().getString(R.string.ssh_connect_failed,
                                 hostname, port, result.exception.getLocalizedMessage()),
                         Toast.LENGTH_LONG).show();
             }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -164,7 +164,7 @@ protected void onPostExecute(AsyncTaskResult<KeyPair> result) {
 
     private void toastOnParseError(AsyncTaskResult<KeyPair> result){
         Toast.makeText(AppConfig.getInstance().getActivityContext(),
-                String.format(AppConfig.getInstance().getResources().getString(R.string.ssh_pem_key_parse_error),
+                AppConfig.getInstance().getResources().getString(R.string.ssh_pem_key_parse_error,
                         result.exception.getLocalizedMessage()), Toast.LENGTH_LONG).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -164,7 +164,6 @@ protected void onReset() {
     /**
      * We would want to release resources here
      * List is nothing we would want to close
-     * @param layoutElementList
      */
     //TODO do something
     private void onReleaseResources(AppsDataPair layoutElementList) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -224,8 +224,6 @@ public boolean isDecryptService() {
 
     /**
      * Displays a notification, sends intent and cancels progress if there were some failures
-     *
-     * @param failedOps
      */
     void generateNotification(ArrayList<HybridFile> failedOps, boolean move) {
         if (!move) getNotificationManager().cancelAll();

File: app/src/main/java/com/amaze/filemanager/database/models/CloudEntry.java
Patch:
@@ -38,15 +38,13 @@ public String getPersistData() {
     /**
      * Set the service type
      * Support values from {@link com.amaze.filemanager.utils.OpenMode}
-     * @param openMode
      */
     public void setServiceType(OpenMode openMode) {
         this.serviceType = openMode;
     }
 
     /**
      * Returns ordinal value of service from {@link com.amaze.filemanager.utils.OpenMode}
-     * @return
      */
     public OpenMode getServiceType() {
         return this.serviceType;

File: app/src/main/java/com/amaze/filemanager/filesystem/EditableFileAbstraction.java
Patch:
@@ -27,7 +27,7 @@ public class EditableFileAbstraction {
     public final int scheme;
     public final HybridFileParcelable hybridFileParcelable;
 
-    public EditableFileAbstraction(Context context, Uri uri) throws FileNotFoundException {
+    public EditableFileAbstraction(Context context, Uri uri) {
         switch (uri.getScheme()) {
             case "content":
                 this.uri = uri;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -70,9 +70,6 @@ public void setSize(long size) {
         this.size = size;
     }
 
-    /**
-     * @return
-     */
     public boolean isDirectory() {
         return isDirectory;
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SFtpClientTemplate.java
Patch:
@@ -46,7 +46,6 @@ public SFtpClientTemplate(@NonNull String url)
      * session.
      *
      * @param url SSH connection URL, in the form of <code>ssh://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;</code> or <code>ssh://&lt;username&gt;@&lt;host&gt;:&lt;port&gt;</code>
-     * @param closeClientOnFinish
      */
     public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
     {
@@ -61,7 +60,6 @@ public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      *                                SSH session had been set up.
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SFTPClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientSessionTemplate.java
Patch:
@@ -47,7 +47,6 @@ public SshClientSessionTemplate(@NonNull String url)
      * @param sshClientSession {@link Session} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull Session sshClientSession) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientTemplate.java
Patch:
@@ -65,7 +65,6 @@ public SshClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      * @param client {@link SSHClient} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SSHClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -93,7 +93,7 @@ public static final <T> T execute(@NonNull SshClientTemplate template) {
     public static final <T> T execute(@NonNull final SshClientSessionTemplate template) {
         return execute(new SshClientTemplate(template.url, false) {
             @Override
-            public T execute(SSHClient client) throws IOException {
+            public T execute(SSHClient client) {
                 Session session = null;
                 T retval = null;
                 try {
@@ -125,7 +125,7 @@ public T execute(SSHClient client) throws IOException {
     public static final <T> T execute(@NonNull final SFtpClientTemplate template) {
         return execute(new SshClientTemplate(template.url, false) {
             @Override
-            public T execute(SSHClient client) throws IOException {
+            public T execute(SSHClient client) {
                 SFTPClient sftpClient = null;
                 T retval = null;
                 try {

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -133,7 +133,7 @@ private SSHClient create(@NonNull String url) throws IOException {
 
     // Logic for creating SSH connection. Depends on password existence in given Uri password or
     // key-based authentication
-    private SSHClient create(@NonNull Uri uri) throws IOException {
+    private SSHClient create(@NonNull Uri uri) {
         String host = uri.getHost();
         int port = uri.getPort();
         //If the uri is fetched from the app's database storage, we assume it will never be empty

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/Statvfs.java
Patch:
@@ -196,9 +196,7 @@ public long getRawFileSystemId()
          *
          * Many thanks to Alexander--@github for the comments.
          *
-         * @see {@link Buffer#readUInt64()}
-         * @param buffer
-         * @return
+         * @see Buffer#readUInt64()
          */
         private long readUInt64FromBuffer(Buffer buffer) throws Buffer.BufferException
         {

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -103,7 +103,7 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
         getListView().setOnScrollListener(preloader);
         setListAdapter(adapter);
         setListShown(false);
-        setEmptyText(getResources().getString(R.string.no_applications));
+        setEmptyText(getString(R.string.no_applications));
         getLoaderManager().initLoader(ID_LOADER_APP_LIST, null, this);
 
         if (savedInstanceState != null) {

File: app/src/main/java/com/amaze/filemanager/fragments/DbViewerFragment.java
Patch:
@@ -35,9 +35,9 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         databaseViewerActivity = (DatabaseViewerActivity) getActivity();
 
         rootView = inflater.inflate(R.layout.fragment_db_viewer, null);
-        webView = (WebView) rootView.findViewById(R.id.webView1);
-        loadingText = (TextView) rootView.findViewById(R.id.loadingText);
-        relativeLayout = (RelativeLayout) rootView.findViewById(R.id.tableLayout);
+        webView = rootView.findViewById(R.id.webView1);
+        loadingText = rootView.findViewById(R.id.loadingText);
+        relativeLayout = rootView.findViewById(R.id.tableLayout);
         tableName = getArguments().getString("table");
         databaseViewerActivity.setTitle(tableName);
 

File: app/src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -318,7 +318,7 @@ public void onPageScrollStateChanged(int state) {
     private class ScreenSlidePagerAdapter extends FragmentStatePagerAdapter {
         @Override
         public int getItemPosition(Object object) {
-            int index = fragments.indexOf((Fragment) object);
+            int index = fragments.indexOf(object);
             if (index == -1)
                 return POSITION_NONE;
             else

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -111,7 +111,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 DataUtils dataUtils = DataUtils.getInstance();
                 dataUtils.addBook(new String[]{rowItem.title, rowItem.desc}, true);
                 mainFragment.getMainActivity().getDrawer().refreshDrawer();
-                Toast.makeText(mainFragment.getActivity(), mainFragment.getResources().getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
+                Toast.makeText(mainFragment.getActivity(), mainFragment.getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
                 return true;
             case R.id.delete:
                 ArrayList<LayoutElementParcelable> positions = new ArrayList<>();
@@ -184,7 +184,7 @@ public void onButtonPressed(Intent intent, String password) {
                     } catch (Exception e) {
                         e.printStackTrace();
                         Toast.makeText(context,
-                                mainFragment.getResources().getString(R.string.crypt_encryption_fail),
+                                mainFragment.getString(R.string.crypt_encryption_fail),
                                 Toast.LENGTH_LONG).show();
                     }
                 } else {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/ColorPickerDialog.java
Patch:
@@ -117,7 +117,7 @@ public void onBindDialogView(View view) {
             selectedIndex = sharedPrefs.getInt(PreferencesConstants.PREFERENCE_COLOR_CONFIG, CUSTOM_INDEX);
         }
 
-        LinearLayout container = (LinearLayout) view.findViewById(R.id.container);
+        LinearLayout container = view.findViewById(R.id.container);
         for(int i = 0; i < COLORS.length; i++) {
             View child = inflateItem(container, i, accentColor);
 
@@ -161,7 +161,7 @@ public void onBindDialogView(View view) {
     }
 
     private void select(View listChild, boolean checked) {
-        RadioButton button = (RadioButton) listChild.findViewById(R.id.select);
+        RadioButton button = listChild.findViewById(R.id.select);
         button.setChecked(checked);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -81,8 +81,8 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             final TextInputLayout t2 = v2.findViewById(R.id.t2);
             final AppCompatEditText conName = v2.findViewById(R.id.editText4);
             conName.setText(title);
-            final String s1 = String.format(getString(R.string.cantbeempty), c.getResources().getString(R.string.name));
-            final String s2 = String.format(getString(R.string.cantbeempty), c.getResources().getString(R.string.path));
+            final String s1 = getString(R.string.cantbeempty, c.getString(R.string.name));
+            final String s2 = getString(R.string.cantbeempty, c.getString(R.string.path));
             conName.addTextChangedListener(new SimpleTextWatcher() {
                 @Override
                 public void afterTextChanged(Editable s) {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -185,7 +185,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
                         final String hostAndPort = sb.toString();
 
                         new AlertDialog.Builder(context).setTitle(R.string.ssh_host_key_verification_prompt_title)
-                                .setMessage(String.format(getResources().getString(R.string.ssh_host_key_verification_prompt),
+                                .setMessage(getString(R.string.ssh_host_key_verification_prompt,
                                         hostAndPort, hostKey.getAlgorithm(), hostKeyFingerprint))
                                 .setCancelable(true)
                                 .setPositiveButton(R.string.yes, (dialog1, which1) -> {
@@ -330,7 +330,7 @@ private boolean authenticateAndSaveSetup(String connectionName, String hostname,
 
                     } else {
                         Snackbar.make(getActivity().findViewById(R.id.content_frame),
-                                getResources().getString(R.string.connection_exists), Snackbar.LENGTH_SHORT).show();
+                                getString(R.string.connection_exists), Snackbar.LENGTH_SHORT).show();
                         dismiss();
                     }
                     return true;

File: app/src/main/java/com/amaze/filemanager/ui/views/DividerItemDecoration.java
Patch:
@@ -48,8 +48,6 @@ public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
     /**
      * Draws the divider on the canvas provided by RecyclerView
      * Be advised - divider will be drawn before the views, hence it'll be below the views of adapter
-     * @param c
-     * @param parent
      */
     private void drawVertical(Canvas c, RecyclerView parent) {
         final int left = parent.getPaddingLeft() + leftPaddingPx;

File: app/src/main/java/com/amaze/filemanager/ui/views/RoundedImageView.java
Patch:
@@ -115,8 +115,6 @@ public Bitmap getRoundedCroppedBitmap(Bitmap bitmap, int radius) {
      * Converts a {@link Drawable} to {@link Bitmap}
      * A drawable can be drawn on a {@link Canvas} and a Canvas can be backed by a Bitmap.
      * Hence the conversion
-     * @param drawable
-     * @return
      */
     public Bitmap drawableToBitmap (Drawable drawable) {
         Bitmap bitmap;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -32,11 +32,11 @@ public class AppBar {
     private AppBarLayout appbarLayout;
 
     public AppBar(MainActivity a, SharedPreferences sharedPref, SearchView.SearchListener searchListener) {
-        toolbar = (Toolbar) a.findViewById(R.id.action_bar);
+        toolbar = a.findViewById(R.id.action_bar);
         searchView = new SearchView(this, a, searchListener);
         bottomBar = new BottomBar(this, a);
 
-        appbarLayout = (AppBarLayout) a.findViewById(R.id.lin);
+        appbarLayout = a.findViewById(R.id.lin);
 
         if (SDK_INT >= 21) toolbar.setElevation(0);
         /* For SearchView, see onCreateOptionsMenu(Menu menu)*/

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -104,7 +104,7 @@ public Drawer(MainActivity mainActivity) {
         resources = mainActivity.getResources();
 
         drawerHeaderLayout = mainActivity.getLayoutInflater().inflate(R.layout.drawerheader, null);
-        drawerHeaderParent = (RelativeLayout) drawerHeaderLayout.findViewById(R.id.drawer_header_parent);
+        drawerHeaderParent = drawerHeaderLayout.findViewById(R.id.drawer_header_parent);
         drawerHeaderView = drawerHeaderLayout.findViewById(R.id.drawer_header);
         drawerHeaderView.setOnLongClickListener(v -> {
             Intent intent1;
@@ -543,7 +543,7 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                     // start system request for storage access framework
                     Toast.makeText(mainActivity, mainActivity.getString(R.string.otg_access), Toast.LENGTH_LONG).show();
                     Intent safIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
-                    mainActivity.startActivityForResult(safIntent, mainActivity.REQUEST_CODE_SAF);
+                    mainActivity.startActivityForResult(safIntent, MainActivity.REQUEST_CODE_SAF);
                 } else {
                     closeIfNotLocked();
                     if (isLocked()) { onDrawerClosed(); }

File: app/src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -288,8 +288,6 @@ public void onAnimationRepeat(Animator animator) {
     /**
      * Animates filenames textview to marquee after a delay.
      * Make sure to set {@link TextView#setSelected(boolean)} to false in order to stop the marquee later
-     * @param delayInMillis
-     * @param marqueeView
      */
     public static void marqueeAfterDelay(int delayInMillis, ThemedTextView marqueeView) {
         new Handler().postDelayed(() -> {

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -42,7 +42,6 @@ public static ArrayList<HybridFileParcelable> getDocumentFilesList(String path,
      * @param path    the path to the directory tree, starts with prefix 'otg:/'
      *                Independent of URI (or mount point) for the OTG
      * @param context context for loading
-     * @return an array of list of files at the path
      */
     public static void getDocumentFiles(String path, Context context, OnFileFound fileFound) {
         SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/utils/OnProgressUpdate.java
Patch:
@@ -8,5 +8,5 @@
  */
 
 public interface OnProgressUpdate<T> {
-    public void onUpdate(T data);
+    void onUpdate(T data);
 }

File: app/src/main/java/com/amaze/filemanager/utils/OpenMode.java
Patch:
@@ -29,7 +29,6 @@ public enum OpenMode {
      * Get open mode based on the id assigned.
      * Generally used to retrieve this type after config change or to send enum as argument
      * @param ordinal the position of enum starting from 0 for first element
-     * @return
      */
     public static OpenMode getOpenMode(int ordinal) {
         return OpenMode.values()[ordinal];

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamServer.java
Patch:
@@ -202,9 +202,7 @@ public void stop() {
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the CloudStreamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamSource.java
Patch:
@@ -23,7 +23,7 @@ public class StreamSource {
 
     public StreamSource() {}
 
-    public StreamSource(SmbFile file,long l) throws SmbException {
+    public StreamSource(SmbFile file,long l) {
 
         fp = 0;
         len = l;
@@ -57,8 +57,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {

File: app/src/main/java/com/amaze/filemanager/utils/SubnetScanner.java
Patch:
@@ -49,7 +49,7 @@ public Task(String str) {
             this.addr = str;
         }
 
-        public ComputerParcelable call() throws Exception {
+        public ComputerParcelable call() {
             try {
                 NbtAddress[] allByAddress = NbtAddress.getAllByAddress(this.addr);
                 if (allByAddress == null || allByAddress.length <= 0) {

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -212,7 +212,7 @@ public static Uri getUriForBaseFile(Context context, HybridFileParcelable baseFi
             case GDRIVE:
             case ONEDRIVE:
             case BOX:
-                Toast.makeText(context, context.getResources().getString(R.string.smb_launch_error),
+                Toast.makeText(context, context.getString(R.string.smb_launch_error),
                         Toast.LENGTH_LONG).show();
                 return null;
             default:

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -92,7 +92,6 @@ public void onTerminate() {
      * Post a runnable to handler. Use this in case we don't have any restriction to execute after
      * this runnable is executed, and {@link #runInBackground(CustomAsyncCallbacks)} in case we need
      * to execute something after execution in background
-     * @param runnable
      */
     public static void runInBackground(Runnable runnable) {
         synchronized (sBackgroundHandler) {
@@ -103,7 +102,6 @@ public static void runInBackground(Runnable runnable) {
     /**
      * A compact AsyncTask which runs which executes whatever is passed by callbacks.
      * Supports any class that extends an object as param array, and result too.
-     * @param customAsyncCallbacks
      */
     public static void runInBackground(final CustomAsyncCallbacks customAsyncCallbacks) {
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -268,9 +268,7 @@ public void stop()
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the Streamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamSource.java
Patch:
@@ -50,8 +50,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {
@@ -69,7 +67,7 @@ public int read(byte[] bytes, int start, int offs) throws IOException {
         fp += read;
         return read;
     }
-    public long moveTo(long position) throws IOException {
+    public long moveTo(long position) {
         fp = position;
         return fp;
     }

File: app/src/main/java/com/amaze/filemanager/utils/files/FileListSorter.java
Patch:
@@ -42,9 +42,6 @@ private boolean isDirectory(LayoutElementParcelable path) {
     /**
      * Compares two elements and return negative, zero and positive integer if first argument is
      * less than, equal to or greater than second
-     * @param file1
-     * @param file2
-     * @return
      */
     @Override
     public int compare(LayoutElementParcelable file1, LayoutElementParcelable file2) {

File: app/src/main/java/com/amaze/filemanager/utils/files/GenericCopyUtil.java
Patch:
@@ -57,7 +57,6 @@ public GenericCopyUtil(Context context) {
      *                    using streams instead of channel which maps the who buffer in memory.
      *                    TODO: Use buffers even on low memory but don't map the whole file to memory but
      *                          parts of it, and transfer each part instead.
-     * @throws IOException
      */
     private void startCopy(boolean lowOnMemory) throws IOException {
 
@@ -251,7 +250,7 @@ else if (outChannel!=null) {
             e.printStackTrace();
 
             // we ran out of memory to map the whole channel, let's switch to streams
-            AppConfig.toast(mContext, mContext.getResources().getString(R.string.copy_low_memory));
+            AppConfig.toast(mContext, mContext.getString(R.string.copy_low_memory));
 
             startCopy(true);
         } finally {

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareAdapter.java
Patch:
@@ -62,8 +62,8 @@ class ViewHolder extends RecyclerView.ViewHolder {
 
             rootView = view;
 
-            textView = ((TextView) view.findViewById(R.id.firstline));
-            imageView = (ImageView) view.findViewById(R.id.icon);
+            textView = view.findViewById(R.id.firstline);
+            imageView = view.findViewById(R.id.icon);
         }
 
         void render(final int position) {

File: app/src/main/java/com/amaze/filemanager/utils/share/ShareTask.java
Patch:
@@ -71,7 +71,7 @@ protected Void doInBackground(String... strings) {
             intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, arrayList);
             intent.setPackage("com.android.bluetooth");
             targetShareIntents.add(intent);
-            arrayList1.add(contextc.getResources().getString(R.string.bluetooth));
+            arrayList1.add(contextc.getString(R.string.bluetooth));
             arrayList2.add(contextc.getResources().getDrawable(appTheme.equals(AppTheme.LIGHT) ? R
                     .drawable.ic_settings_bluetooth_black_24dp : R.drawable.ic_settings_bluetooth_white_36dp));
         }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -438,7 +438,6 @@ public <T> T[] params() {
 
     /**
      * Checks for the action to take when Amaze receives an intent from external source
-     * @param intent
      */
     private void checkForExternalIntent(Intent intent) {
         String actionIntent = intent.getAction();

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -302,7 +302,6 @@ private void animate(ItemViewHolder holder) {
     /**
      * Adds item to the end of the list, don't use this unless you are dynamically loading the adapter,
      * after you are finished you must call createHeaders
-     * @param e
      */
     public void addItem(LayoutElementParcelable e) {
         if (mainFrag.IS_LIST && itemsDigested.size() > 0) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -49,8 +49,6 @@ public interface Callback<T> {
 
         /**
          * Implement logic on what to do with the result here.
-         *
-         * @param result
          */
         void onResult(T result);
     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchAsyncTask.java
Patch:
@@ -151,7 +151,6 @@ private void searchRegExMatch(HybridFile file, final Pattern pattern) {
     /**
      * method converts bash style regular expression to java. See {@link Pattern}
      *
-     * @param originalString
      * @return converted string
      */
     private String bashRegexToJava(String originalString) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/loaders/AppListLoader.java
Patch:
@@ -164,7 +164,6 @@ protected void onReset() {
     /**
      * We would want to release resources here
      * List is nothing we would want to close
-     * @param layoutElementList
      */
     //TODO do something
     private void onReleaseResources(AppsDataPair layoutElementList) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -224,8 +224,6 @@ public boolean isDecryptService() {
 
     /**
      * Displays a notification, sends intent and cancels progress if there were some failures
-     *
-     * @param failedOps
      */
     void generateNotification(ArrayList<HybridFile> failedOps, boolean move) {
         if (!move) getNotificationManager().cancelAll();

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -407,7 +407,6 @@ public void removeBookmarksPath(String name, String path) {
 
     /**
      * Remove SMB entry
-     * @param name
      * @param path the path we get from saved runtime variables is a decrypted, to remove entry,
      *             we must encrypt it's password fiend first first
      */
@@ -565,8 +564,6 @@ private void renamePath(Operation operation, String oldName, String oldPath,
 
     /**
      * Return table string for corresponding {@link Operation}
-     * @param operation
-     * @return
      */
     private String getTableForOperation(Operation operation) {
 

File: app/src/main/java/com/amaze/filemanager/database/models/CloudEntry.java
Patch:
@@ -38,15 +38,13 @@ public String getPersistData() {
     /**
      * Set the service type
      * Support values from {@link com.amaze.filemanager.utils.OpenMode}
-     * @param openMode
      */
     public void setServiceType(OpenMode openMode) {
         this.serviceType = openMode;
     }
 
     /**
      * Returns ordinal value of service from {@link com.amaze.filemanager.utils.OpenMode}
-     * @return
      */
     public OpenMode getServiceType() {
         return this.serviceType;

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFileParcelable.java
Patch:
@@ -70,9 +70,6 @@ public void setSize(long size) {
         this.size = size;
     }
 
-    /**
-     * @return
-     */
     public boolean isDirectory() {
         return isDirectory;
     }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SFtpClientTemplate.java
Patch:
@@ -46,7 +46,6 @@ public SFtpClientTemplate(@NonNull String url)
      * session.
      *
      * @param url SSH connection URL, in the form of <code>ssh://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;</code> or <code>ssh://&lt;username&gt;@&lt;host&gt;:&lt;port&gt;</code>
-     * @param closeClientOnFinish
      */
     public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
     {
@@ -61,7 +60,6 @@ public SFtpClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      *                                SSH session had been set up.
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SFTPClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientSessionTemplate.java
Patch:
@@ -47,7 +47,6 @@ public SshClientSessionTemplate(@NonNull String url)
      * @param sshClientSession {@link Session} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull Session sshClientSession) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientTemplate.java
Patch:
@@ -65,7 +65,6 @@ public SshClientTemplate(@NonNull String url, boolean closeClientOnFinish)
      * @param client {@link SSHClient} instance, with connection opened and authenticated
      * @param <T> Requested return type
      * @return Result of the execution of the type requested
-     * @throws IOException
      */
     public abstract <T> T execute(@NonNull SSHClient client) throws IOException;
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/Statvfs.java
Patch:
@@ -196,9 +196,7 @@ public long getRawFileSystemId()
          *
          * Many thanks to Alexander--@github for the comments.
          *
-         * @see {@link Buffer#readUInt64()}
-         * @param buffer
-         * @return
+         * @see Buffer#readUInt64()
          */
         private long readUInt64FromBuffer(Buffer buffer) throws Buffer.BufferException
         {

File: app/src/main/java/com/amaze/filemanager/fragments/CloudSheetFragment.java
Patch:
@@ -84,8 +84,6 @@ public void setupDialog(Dialog dialog, int style) {
 
     /**
      * Determines whether cloud provider is installed or not
-     * @param context
-     * @return
      */
     public static final boolean isCloudProviderAvailable(Context context) {
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -127,7 +127,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
     public OpenMode openMode = OpenMode.FILE;
 
     /**
-     * {@link MainFragment#IS_LIST} boolean to identify if the view is a list or grid
+     * boolean to identify if the view is a list or grid
      */
     public boolean IS_LIST = true;
     public SwipeRefreshLayout mSwipeRefreshLayout;
@@ -958,7 +958,6 @@ public void updateTabWithDb(Tab tab) {
 
     /**
      * Returns the intent with uri corresponding to specific {@link HybridFileParcelable} back to external app
-     * @param baseFile
      */
     public void returnIntentResults(HybridFileParcelable baseFile) {
 

File: app/src/main/java/com/amaze/filemanager/ui/views/DividerItemDecoration.java
Patch:
@@ -48,8 +48,6 @@ public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
     /**
      * Draws the divider on the canvas provided by RecyclerView
      * Be advised - divider will be drawn before the views, hence it'll be below the views of adapter
-     * @param c
-     * @param parent
      */
     private void drawVertical(Canvas c, RecyclerView parent) {
         final int left = parent.getPaddingLeft() + leftPaddingPx;

File: app/src/main/java/com/amaze/filemanager/ui/views/Indicator.java
Patch:
@@ -364,9 +364,6 @@ private void drawUnselected(Canvas canvas) {
      *
      * This function returns a path for the given dot **and any action to it's right** e.g. joining
      * or retreating from it's neighbour
-     *
-     * @param page
-     * @return
      */
     private Path getUnselectedPath(int page,
                                    float centerX,

File: app/src/main/java/com/amaze/filemanager/ui/views/RoundedImageView.java
Patch:
@@ -115,8 +115,6 @@ public Bitmap getRoundedCroppedBitmap(Bitmap bitmap, int radius) {
      * Converts a {@link Drawable} to {@link Bitmap}
      * A drawable can be drawn on a {@link Canvas} and a Canvas can be backed by a Bitmap.
      * Hence the conversion
-     * @param drawable
-     * @return
      */
     public Bitmap drawableToBitmap (Drawable drawable) {
         Bitmap bitmap;

File: app/src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -288,8 +288,6 @@ public void onAnimationRepeat(Animator animator) {
     /**
      * Animates filenames textview to marquee after a delay.
      * Make sure to set {@link TextView#setSelected(boolean)} to false in order to stop the marquee later
-     * @param delayInMillis
-     * @param marqueeView
      */
     public static void marqueeAfterDelay(int delayInMillis, ThemedTextView marqueeView) {
         new Handler().postDelayed(() -> {

File: app/src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -42,7 +42,6 @@ public static ArrayList<HybridFileParcelable> getDocumentFilesList(String path,
      * @param path    the path to the directory tree, starts with prefix 'otg:/'
      *                Independent of URI (or mount point) for the OTG
      * @param context context for loading
-     * @return an array of list of files at the path
      */
     public static void getDocumentFiles(String path, Context context, OnFileFound fileFound) {
         SharedPreferences manager = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/utils/OpenMode.java
Patch:
@@ -29,7 +29,6 @@ public enum OpenMode {
      * Get open mode based on the id assigned.
      * Generally used to retrieve this type after config change or to send enum as argument
      * @param ordinal the position of enum starting from 0 for first element
-     * @return
      */
     public static OpenMode getOpenMode(int ordinal) {
         return OpenMode.values()[ordinal];

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamServer.java
Patch:
@@ -202,9 +202,7 @@ public void stop() {
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the CloudStreamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/SmbStreamer/StreamSource.java
Patch:
@@ -57,8 +57,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -92,7 +92,6 @@ public void onTerminate() {
      * Post a runnable to handler. Use this in case we don't have any restriction to execute after
      * this runnable is executed, and {@link #runInBackground(CustomAsyncCallbacks)} in case we need
      * to execute something after execution in background
-     * @param runnable
      */
     public static void runInBackground(Runnable runnable) {
         synchronized (sBackgroundHandler) {
@@ -103,7 +102,6 @@ public static void runInBackground(Runnable runnable) {
     /**
      * A compact AsyncTask which runs which executes whatever is passed by callbacks.
      * Supports any class that extends an object as param array, and result too.
-     * @param customAsyncCallbacks
      */
     public static void runInBackground(final CustomAsyncCallbacks customAsyncCallbacks) {
 

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -268,9 +268,7 @@ public void stop()
      * Since CloudStreamServer and Streamer both uses the same port, shutdown the Streamer before
      * acquiring the port.
      *
-     * @param port
      * @return ServerSocket
-     * @throws IOException
      */
     private ServerSocket tryBind(int port) throws IOException {
         ServerSocket socket;

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamSource.java
Patch:
@@ -50,8 +50,6 @@ public SmbFileInputStreamOld( SmbFile file, int readBuffer, int openFlags) throw
      * Setting buffer size by properties didn't work for me so I created this constructor.
      * In the libs folder there is a library modified by me. If you want to use a stock one, you
      * have to set somehow the buffer size to be equal with http server's buffer size which is 8192.
-     *
-     * @throws IOException
      */
     public void open() throws IOException {
         try {

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -68,8 +68,6 @@ public static void getCloudFiles(String path, CloudStorage cloudStorage, OpenMod
 
     /**
      * Strips down the cloud path to remove any prefix
-     * @param openMode
-     * @return
      */
     public static String stripPath(OpenMode openMode, String path) {
         String strippedPath = path;

File: app/src/main/java/com/amaze/filemanager/utils/files/FileListSorter.java
Patch:
@@ -42,9 +42,6 @@ private boolean isDirectory(LayoutElementParcelable path) {
     /**
      * Compares two elements and return negative, zero and positive integer if first argument is
      * less than, equal to or greater than second
-     * @param file1
-     * @param file2
-     * @return
      */
     @Override
     public int compare(LayoutElementParcelable file1, LayoutElementParcelable file2) {

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -142,7 +142,6 @@ public static long folderSize(SmbFile directory) {
      * Only for fallback use when <code>du</code> is not available.
      *
      * @see HybridFile#folderSize(Context)
-     * @param remotePath
      * @return Folder size in bytes
      */
     public static Long folderSizeSftp(SFTPClient client, String remotePath) {
@@ -362,8 +361,8 @@ public static float readableFileSizeFloat(long size) {
 
     /**
      * Open a file not supported by Amaze
+     *
      * @param f the file
-     * @param c
      * @param forcechooser force the chooser to show up even when set default by user
      */
     public static void openunknown(File f, Context c, boolean forcechooser, boolean useNewStack) {

File: app/src/main/java/com/amaze/filemanager/utils/files/GenericCopyUtil.java
Patch:
@@ -57,7 +57,6 @@ public GenericCopyUtil(Context context) {
      *                    using streams instead of channel which maps the who buffer in memory.
      *                    TODO: Use buffers even on low memory but don't map the whole file to memory but
      *                          parts of it, and transfer each part instead.
-     * @throws IOException
      */
     private void startCopy(boolean lowOnMemory) throws IOException {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -173,8 +173,8 @@ private void showDialog(final String path, final ArrayList<HybridFileParcelable>
         View view = layoutInflater.inflate(R.layout.copy_dialog, null);
         dialogBuilder.customView(view, true);
         // textView
-        TextView textView = (TextView) view.findViewById(R.id.textView);
-        textView.setText(context.getResources().getString(R.string.fileexist) + "\n" + conflictingFiles.get(counter).getName());
+        TextView textView = (TextView) view.findViewById(R.id.fileNameText);
+        textView.setText(conflictingFiles.get(counter).getName());
 
         // checkBox
         final CheckBox checkBox = (CheckBox) view.findViewById(R.id.checkBox);

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/BasicActivity.java
Patch:
@@ -2,8 +2,9 @@
 
 import android.support.v7.app.AppCompatActivity;
 
+import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.utils.application.AppConfig;
-import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.ui.colors.ColorPreference;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
@@ -16,7 +17,7 @@ protected AppConfig getAppConfig() {
         return (AppConfig) getApplication();
     }
 
-    public ColorPreference getColorPreference() {
+    public ColorPreferenceHelper getColorPreference() {
         return getAppConfig().getUtilsProvider().getColorPreference();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/PrepareCopyTask.java
Patch:
@@ -24,7 +24,6 @@
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 import com.amaze.filemanager.utils.Utils;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.FileUtils;
 
 import java.io.File;
@@ -167,7 +166,7 @@ private void startService(ArrayList<HybridFileParcelable> sourceFiles, String ta
 
     private void showDialog(final String path, final ArrayList<HybridFileParcelable> filesToCopy,
                             final ArrayList<HybridFileParcelable> conflictingFiles) {
-        int accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
+        int accentColor = mainActivity.getAccent();
         final MaterialDialog.Builder dialogBuilder = new MaterialDialog.Builder(context);
         LayoutInflater layoutInflater =
                 (LayoutInflater) mainActivity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -49,10 +49,10 @@
 import com.amaze.filemanager.asynchronous.services.ExtractService;
 import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.asynchronous.services.ZipService;
+import com.amaze.filemanager.ui.colors.ColorPreferenceHelper;
 import com.amaze.filemanager.utils.DatapointParcelable;
 import com.amaze.filemanager.utils.ObtainableServiceBinder;
 import com.amaze.filemanager.utils.Utils;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.FileUtils;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.github.mikephil.charting.charts.LineChart;
@@ -99,8 +99,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
 
         mainActivity = (MainActivity) getActivity();
 
-        accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
-        primaryColor = mainActivity.getColorPreference().getColor(ColorUsage.getPrimary(MainActivity.currentTab));
+        accentColor = mainActivity.getAccent();
+        primaryColor = ColorPreferenceHelper.getPrimary(mainActivity.getCurrentColorPreference(), MainActivity.currentTab);
         if (mainActivity.getAppTheme().equals(AppTheme.DARK) || mainActivity.getAppTheme().equals(AppTheme.BLACK))
             rootView.setBackgroundResource((R.color.cardView_background));
         mainActivity.updateViews(new ColorDrawable(primaryColor));

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -53,6 +53,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SKIN_TWO = "skin_two";
     public static final String PREFERENCE_ACCENT = "accent_skin";
     public static final String PREFERENCE_ICON_SKIN = "icon_skin";
+    public static final String PREFERENCE_CURRENT_TAB = "current_tab";
     public static final String PREFERENCE_COLORIZE_ICONS = "coloriseIcons";
     public static final String PREFERENCE_COLORED_NAVIGATION = "colorednavigation";
     public static final String PREFERENCE_RANDOM_COLOR = "random_checkbox";

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -20,7 +20,6 @@
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 import com.amaze.filemanager.utils.files.FileUtils;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
@@ -55,7 +54,7 @@ public ItemPopupMenu(Context c, MainActivity ma, UtilitiesProvider up, MainFragm
         this.mainFragment = mainFragment;
         sharedPrefs = sharedPreferences;
         rowItem = ri;
-        accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
+        accentColor = mainActivity.getAccent();
 
         setOnMenuItemClickListener(this);
     }

File: app/src/main/java/com/amaze/filemanager/ui/colors/ColorUtils.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.utils.color;
+package com.amaze.filemanager.ui.colors;
 
 import android.content.Context;
 import android.graphics.drawable.GradientDrawable;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -42,6 +42,7 @@
 import com.afollestad.materialdialogs.internal.MDButton;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.filesystem.ssh.SshConnectionPool;
@@ -55,8 +56,6 @@
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OpenMode;
-import com.amaze.filemanager.utils.application.AppConfig;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import net.schmizz.sshj.SSHClient;
@@ -136,7 +135,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             portET.selectAll();
         });
 
-        int accentColor = utilsProvider.getColorPreference().getColor(ColorUsage.ACCENT);
+        int accentColor = ((ThemedActivity) getActivity()).getAccent();
 
         //Use system provided action to get Uri to PEM.
         //If MaterialDialog.Builder can be upgraded we may use their file selection dialog too

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -26,7 +26,6 @@
 import com.amaze.filemanager.utils.SimpleTextWatcher;
 import com.amaze.filemanager.utils.SmbUtil;
 import com.amaze.filemanager.utils.Utils;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.IOException;
@@ -149,7 +148,7 @@ public void afterTextChanged(Editable s) {
                 else usernameTIL.setError("");
             }
         });
-        int accentColor = utilsProvider.getColorPreference().getColor(ColorUsage.ACCENT);
+        int accentColor = ((ThemedActivity) getActivity()).getAccent();
         final AppCompatEditText pass = (AppCompatEditText) v2.findViewById(R.id.passwordET);
         final AppCompatCheckBox ch = (AppCompatCheckBox) v2.findViewById(R.id.checkBox2);
         TextView help = (TextView) v2.findViewById(R.id.wanthelp);
@@ -160,7 +159,7 @@ public void afterTextChanged(Editable s) {
 
         Utils.setTint(context, ch, accentColor);
         help.setOnClickListener(v -> {
-            int accentColor1 = ((ThemedActivity) getActivity()).getColorPreference().getColor(ColorUsage.ACCENT);
+            int accentColor1 = ((ThemedActivity) getActivity()).getAccent();
             GeneralDialogCreation.showSMBHelpDialog(context, accentColor1);
         });
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -21,7 +21,6 @@
 import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.utils.ComputerParcelable;
 import com.amaze.filemanager.utils.SubnetScanner;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
@@ -44,7 +43,7 @@ public void onCreate(Bundle bundle) {
         super.onCreate(bundle);
         utilsProvider = ((BasicActivity) getActivity()).getUtilsProvider();
 
-        accentColor = ((ThemedActivity) getActivity()).getColorPreference().getColor(ColorUsage.ACCENT);
+        accentColor = ((ThemedActivity) getActivity()).getAccent();
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -47,7 +47,6 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.amaze.filemanager.utils.cloud.CloudUtil;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.FileUtils;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.android.volley.VolleyError;
@@ -133,8 +132,7 @@ public Drawer(MainActivity mainActivity) {
 
         navView.setNavigationItemSelectedListener(this);
 
-        int accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT),
-                idleColor;
+        int accentColor = mainActivity.getAccent(), idleColor;
 
         if (mainActivity.getAppTheme().equals(AppTheme.LIGHT)) {
             idleColor = mainActivity.getResources().getColor(R.color.item_light_theme);

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -22,7 +22,6 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.asynchronous.asynctasks.DeleteTask;
 import com.amaze.filemanager.asynchronous.services.ZipService;
 import com.amaze.filemanager.database.CloudHandler;
@@ -39,7 +38,6 @@
 import com.amaze.filemanager.fragments.SearchWorkerFragment;
 import com.amaze.filemanager.fragments.TabFragment;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
-import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import java.io.File;
@@ -64,7 +62,7 @@ public class MainActivityHelper {
 
     public MainActivityHelper(MainActivity mainActivity) {
         this.mainActivity = mainActivity;
-        accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
+        accentColor = mainActivity.getAccent();
     }
 
     public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, Context contextc) {

File: app/src/main/java/com/amaze/filemanager/utils/PreferenceUtils.java
Patch:
@@ -8,8 +8,6 @@
  */
 public class PreferenceUtils {
 
-    public static final String KEY_CURRENT_TAB = "current_tab";
-
     public static final int DEFAULT_PRIMARY = 4;
     public static final int DEFAULT_ACCENT = 1;
     public static final int DEFAULT_ICON = -1;

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -521,6 +521,9 @@ private void initFabToSave(final ArrayList<Uri> uris) {
             Toast.makeText(MainActivity.this, getResources().getString(R.string.saving), Toast.LENGTH_LONG).show();
             finish();
         });
+        //Ensure the FAB menu is visible
+        floatingActionButton.setVisibility(View.VISIBLE);
+        floatingActionButton.getMenuButton().show();
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -203,7 +203,7 @@ public void invalidateNavBar() {
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
             SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
-            boolean colourednavigation = Sp.getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
+            boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -51,7 +51,7 @@ public class AppConfig extends GlideApplication {
     private UtilsHandler mUtilsHandler;
 
     private static Handler mApplicationHandler = new Handler();
-    private static HandlerThread sBackgroundHandlerThread = new HandlerThread("app_background");
+    private HandlerThread sBackgroundHandlerThread;
     private static Handler sBackgroundHandler;
     private static Context sActivityContext;
     private static ScreenUtils screenUtils;
@@ -66,6 +66,7 @@ public UtilitiesProvider getUtilsProvider() {
     public void onCreate() {
         super.onCreate();
         AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);//selector in srcCompat isn't supported without this
+        sBackgroundHandlerThread = new HandlerThread("app_background");
         mInstance = this;
 
         utilsProvider = new UtilitiesProvider(this);

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -521,6 +521,9 @@ private void initFabToSave(final ArrayList<Uri> uris) {
             Toast.makeText(MainActivity.this, getResources().getString(R.string.saving), Toast.LENGTH_LONG).show();
             finish();
         });
+        //Ensure the FAB menu is visible
+        floatingActionButton.setVisibility(View.VISIBLE);
+        floatingActionButton.getMenuButton().show();
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -51,9 +51,6 @@ public class AppConfig extends GlideApplication {
     private UtilsHandler mUtilsHandler;
 
     private static Handler mApplicationHandler = new Handler();
-    //This caused the IllegalThreadStateException because it is being declared and initialized
-    //at the same time, as @TranceLove said on stack overflow issue 1196
-    //private static HandlerThread sBackgroundHandlerThread = new HandlerThread("app_background");
     private HandlerThread sBackgroundHandlerThread;
     private static Handler sBackgroundHandler;
     private static Context sActivityContext;

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -203,7 +203,7 @@ public void invalidateNavBar() {
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
             SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
-            boolean colourednavigation = Sp.getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
+            boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -203,7 +203,7 @@ public void invalidateNavBar() {
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
             SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
-            boolean colourednavigation = Sp.getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
+            boolean colourednavigation = getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -41,7 +41,6 @@ public class Utils {
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";
     private static final String INPUT_INTENT_BLACKLIST_DOTS = "\\.\\.\\.";
 
-
     //methods for fastscroller
     public static float clamp(float min, float max, float value) {
         float minimum = Math.max(min, value);
@@ -236,5 +235,4 @@ public static int nthToLastCharIndex(int elementNumber, String str, char element
         }
         return -1;
     }
-
 }

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -7,7 +7,7 @@
 
 public class GlideConstants {
 
-    public static final int MAX_PRELOAD_FILES = 50;
-    public static final int MAX_PRELOAD_APPSADAPTER = 100;
+    public static final int MAX_PRELOAD_FILES = 10;
+    public static final int MAX_PRELOAD_APPSADAPTER = 50;
 
 }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -761,7 +761,7 @@ public void onDestroyActionMode(ActionMode mode) {
             getMainActivity().updateViews(new ColorDrawable(MainActivity.currentTab == 1 ?
                     primaryTwoColor : primaryColor));
 
-            if (!getMainActivity().getDrawer().isLocked()) {
+            if (getMainActivity().getDrawer().isLocked()) {
                 getMainActivity().getDrawer().unlock();
             }
         }

File: app/src/main/java/com/amaze/filemanager/database/models/Tab.java
Patch:
@@ -39,7 +39,7 @@ public Tab(int tabNo, String path, String home) {
     }
 
     public String getOriginalPath(boolean savePaths, SharedPreferences sharedPreferences){
-        if(savePaths && FileUtils.isPathAccesible(path, sharedPreferences)) {
+        if(savePaths && FileUtils.isPathAccessible(path, sharedPreferences)) {
             return path;
         } else {
             return home;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CompressedHelper {
      */
     public static final String SEPARATOR = "/";
 
-    public static final String fileExtensionZip = "zip", fileExtensinJar = "jar", fileExtensionApk = "apk";
+    public static final String fileExtensionZip = "zip", fileExtensionJar = "jar", fileExtensionApk = "apk";
     public static final String fileExtensionTar = "tar";
     public static final String fileExtensionGzipTar = "tar.gz";
     public static final String fileExtensionRar = "rar";
@@ -105,7 +105,7 @@ public static String getFileName(String compressedName) {
     }
 
     private static boolean isZip(String type) {
-        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensinJar)
+        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensionJar)
                 || type.endsWith(fileExtensionApk);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -35,7 +35,7 @@ public void extractFiles(String[] files) throws IOException {
             if(filesToExtract.contains(relativePath)) {
                 if(!isDir) filesToExtract.remove(relativePath);
                 return true;
-            } else {// header to be extracted is atleast the entry path (may be more, when it is a directory)
+            } else {// header to be extracted is at least the entry path (may be more, when it is a directory)
                 for (String path : filesToExtract) {
                     if(relativePath.startsWith(path)) {
                         return true;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -34,7 +34,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
             // iterating archive elements to find file names that are to be extracted
             for (FileHeader header : rarFile.getFileHeaders()) {
                 if (filter.shouldExtract(header.getFileNameString(), header.isDirectory())) {
-                    // header to be extracted is atleast the entry path (may be more, when it is a directory)
+                    // header to be extracted is at least the entry path (may be more, when it is a directory)
                     arrayList.add(header);
                     totalBytes += header.getFullUnpackSize();
                 }
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, Archive zipFile, FileH
             while ((len = inputStream.read(buf)) != -1) {
 
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -75,7 +75,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -80,7 +80,7 @@ private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEn
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -177,7 +177,7 @@ private void loadEditDialog(final PathSwitchPreference p) {
                 .build();
 
         dialog.getActionButton(DialogAction.POSITIVE)
-                .setEnabled(FileUtils.isPathAccesible(editText2.getText().toString(), sharedPrefs));
+                .setEnabled(FileUtils.isPathAccessible(editText2.getText().toString(), sharedPrefs));
 
         disableButtonIfTitleEmpty(editText1, dialog);
         disableButtonIfNotPath(editText2, dialog);
@@ -262,7 +262,7 @@ private void disableButtonIfNotPath(EditText path, final MaterialDialog dialog)
             @Override
             public void afterTextChanged(Editable s) {
                 dialog.getActionButton(DialogAction.POSITIVE)
-                        .setEnabled(FileUtils.isPathAccesible(s.toString(), sharedPrefs));
+                        .setEnabled(FileUtils.isPathAccessible(s.toString(), sharedPrefs));
             }
         });
     }

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,14 +17,14 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 

File: app/src/main/java/com/amaze/filemanager/utils/DatapointParcelable.java
Patch:
@@ -3,14 +3,14 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.amaze.filemanager.asynchronous.services.ProgressiveService;
+import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.fragments.ProcessViewerFragment;
 
 /**
  * Created by Arpit on 01-08-2015
  *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *
- * Class stores the {@link ProgressiveService} progress variables.
+ * Class stores the {@link AbstractProgressiveService} progress variables.
  * This class also acts as data carrier to communicate with {@link ProcessViewerFragment}
  */
 public class DatapointParcelable implements Parcelable {

File: app/src/main/java/com/amaze/filemanager/utils/ScreenUtils.java
Patch:
@@ -6,7 +6,7 @@
 
 public class ScreenUtils {
 
-    public static final int TOOLBAR_HEIGHT_IN_DP = 56;  //160 dpi
+    public static final int TOOLBAR_HEIGHT_IN_DP = 128;  //160 dpi
 
     private Activity activity;
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -935,7 +935,7 @@ public static boolean isStorage(String path) {
         return false;
     }
 
-    public static boolean isPathAccesible(String dir, SharedPreferences pref) {
+    public static boolean isPathAccessible(String dir, SharedPreferences pref) {
         File f = new File(dir);
         boolean showIfHidden = pref.getBoolean(PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES, false),
                 isDirSelfOrParent = dir.endsWith("/.") || dir.endsWith("/.."),

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1143,9 +1143,6 @@ protected void onDestroy() {
         cryptHandler.close();
         
         SshConnectionPool.getInstance().expungeAllConnections();
-
-        /*if (mainFragment!=null)
-            mainFragment = null;*/
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -149,7 +149,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
      * This is not an exact copy of the elements in the adapter
      */
     private ArrayList<LayoutElementParcelable> LIST_ELEMENTS;
-    private RecyclerAdapter adapter;
+    public RecyclerAdapter adapter;
     private SharedPreferences sharedPref;
     private Resources res;
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -761,7 +761,7 @@ public void onDestroyActionMode(ActionMode mode) {
             getMainActivity().updateViews(new ColorDrawable(MainActivity.currentTab == 1 ?
                     primaryTwoColor : primaryColor));
 
-            if (!getMainActivity().getDrawer().isLocked()) {
+            if (getMainActivity().getDrawer().isLocked()) {
                 getMainActivity().getDrawer().unlock();
             }
         }

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -212,7 +212,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(Color.parseColor(compressedExplorerFragment.iconskin));
                 if (stringBuilder.toString().length() > 0) {
-                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR)) stringBuilder.deleteCharAt(rowItem.name.length() - 1);
+                    stringBuilder.deleteCharAt(rowItem.name.length() - 1);
                     try {
                         holder.txtTitle.setText(stringBuilder.toString().substring(stringBuilder.toString().lastIndexOf("/") + 1));
                     } catch (Exception e) {
@@ -264,7 +264,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     toggleChecked(position, holder.checkImageView);
                 } else {
                     final StringBuilder stringBuilder = new StringBuilder(rowItem.name);
-                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR))
+                    if (rowItem.directory)
                         stringBuilder.deleteCharAt(rowItem.name.length() - 1);
 
                     if (rowItem.directory) {

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -861,8 +861,7 @@ private void showPopup(View v, final LayoutElementParcelable rowItem, final int
 
             if (description.endsWith(".zip") || description.endsWith(".jar")
                     || description.endsWith(".apk") || description.endsWith(".rar")
-                    || description.endsWith(".tar") || description.endsWith(".tar.gz")
-                    || description.endsWith(".7z"))
+                    || description.endsWith(".tar") || description.endsWith(".tar.gz"))
                 popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -84,7 +84,6 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
-        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -212,7 +212,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(Color.parseColor(compressedExplorerFragment.iconskin));
                 if (stringBuilder.toString().length() > 0) {
-                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR)) stringBuilder.deleteCharAt(rowItem.name.length() - 1);
+                    stringBuilder.deleteCharAt(rowItem.name.length() - 1);
                     try {
                         holder.txtTitle.setText(stringBuilder.toString().substring(stringBuilder.toString().lastIndexOf("/") + 1));
                     } catch (Exception e) {
@@ -264,7 +264,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     toggleChecked(position, holder.checkImageView);
                 } else {
                     final StringBuilder stringBuilder = new StringBuilder(rowItem.name);
-                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR))
+                    if (rowItem.directory)
                         stringBuilder.deleteCharAt(rowItem.name.length() - 1);
 
                     if (rowItem.directory) {

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -861,8 +861,7 @@ private void showPopup(View v, final LayoutElementParcelable rowItem, final int
 
             if (description.endsWith(".zip") || description.endsWith(".jar")
                     || description.endsWith(".apk") || description.endsWith(".rar")
-                    || description.endsWith(".tar") || description.endsWith(".tar.gz")
-                    || description.endsWith(".7z"))
+                    || description.endsWith(".tar") || description.endsWith(".tar.gz"))
                 popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -84,7 +84,6 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
-        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -212,7 +212,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(Color.parseColor(compressedExplorerFragment.iconskin));
                 if (stringBuilder.toString().length() > 0) {
-                    stringBuilder.deleteCharAt(rowItem.name.length() - 1);
+                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR)) stringBuilder.deleteCharAt(rowItem.name.length() - 1);
                     try {
                         holder.txtTitle.setText(stringBuilder.toString().substring(stringBuilder.toString().lastIndexOf("/") + 1));
                     } catch (Exception e) {
@@ -264,7 +264,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     toggleChecked(position, holder.checkImageView);
                 } else {
                     final StringBuilder stringBuilder = new StringBuilder(rowItem.name);
-                    if (rowItem.directory)
+                    if (rowItem.name.endsWith(CompressedHelper.SEPARATOR))
                         stringBuilder.deleteCharAt(rowItem.name.length() - 1);
 
                     if (rowItem.directory) {

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -861,7 +861,8 @@ private void showPopup(View v, final LayoutElementParcelable rowItem, final int
 
             if (description.endsWith(".zip") || description.endsWith(".jar")
                     || description.endsWith(".apk") || description.endsWith(".rar")
-                    || description.endsWith(".tar") || description.endsWith(".tar.gz"))
+                    || description.endsWith(".tar") || description.endsWith(".tar.gz")
+                    || description.endsWith(".7z"))
                 popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -84,6 +84,7 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
+        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -306,7 +306,7 @@ public int getItemCount() {
     public void onViewDetachedFromWindow(CompressedItemViewHolder holder) {
         super.onViewAttachedToWindow(holder);
         holder.rl.clearAnimation();
-        //holder.txtTitle.setSelected(false);
+        holder.txtTitle.setSelected(false);
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -170,7 +170,7 @@ public void toggleChecked(int position, ImageView imageView) {
         notifyItemChanged(position);
         if (mainFrag.mActionMode != null && mainFrag.selection) {
             // we have the actionmode visible, invalidate it's views
-            //mainFrag.mActionMode.invalidate();
+            mainFrag.mActionMode.invalidate();
         }
         if (getCheckedItems().size() == 0) {
             mainFrag.selection = false;
@@ -187,7 +187,7 @@ public void toggleChecked(boolean b, String path) {
             if (b && item.getChecked() != ListItem.CHECKED) {
                 item.setChecked(true);
                 notifyItemChanged(i);
-            } else if (!b && item.getChecked() == ListItem.CHECKED){
+            } else if (!b && item.getChecked() == ListItem.CHECKED) {
                 item.setChecked(false);
                 notifyItemChanged(i);
             }
@@ -217,7 +217,7 @@ public void toggleChecked(boolean b) {
             if (b && item.getChecked() != ListItem.CHECKED) {
                 item.setChecked(true);
                 notifyItemChanged(i);
-            } else if (!b && item.getChecked() == ListItem.CHECKED){
+            } else if (!b && item.getChecked() == ListItem.CHECKED) {
                 item.setChecked(false);
                 notifyItemChanged(i);
             }

File: app/src/main/java/com/amaze/filemanager/adapters/holders/AppHolder.java
Patch:
@@ -8,7 +8,6 @@
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.ThemedTextView;
 
 /**

File: app/src/main/java/com/amaze/filemanager/adapters/holders/CompressedItemViewHolder.java
Patch:
@@ -6,7 +6,6 @@
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ThemedTextView;
 

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -8,7 +8,6 @@
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ThemedTextView;
 

File: app/src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -26,8 +26,6 @@
 import android.view.animation.Interpolator;
 import android.widget.TextView;
 
-import com.amaze.filemanager.adapters.holders.ItemViewHolder;
-import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.ThemedTextView;
 
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/database/models/Tab.java
Patch:
@@ -39,7 +39,7 @@ public Tab(int tabNo, String path, String home) {
     }
 
     public String getOriginalPath(boolean savePaths, SharedPreferences sharedPreferences){
-        if(savePaths && FileUtils.isPathAccesible(path, sharedPreferences)) {
+        if(savePaths && FileUtils.isPathAccessible(path, sharedPreferences)) {
             return path;
         } else {
             return home;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CompressedHelper {
      */
     public static final String SEPARATOR = "/";
 
-    public static final String fileExtensionZip = "zip", fileExtensinJar = "jar", fileExtensionApk = "apk";
+    public static final String fileExtensionZip = "zip", fileExtensionJar = "jar", fileExtensionApk = "apk";
     public static final String fileExtensionTar = "tar";
     public static final String fileExtensionGzipTar = "tar.gz";
     public static final String fileExtensionRar = "rar";
@@ -105,7 +105,7 @@ public static String getFileName(String compressedName) {
     }
 
     private static boolean isZip(String type) {
-        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensinJar)
+        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensionJar)
                 || type.endsWith(fileExtensionApk);
     }
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -35,7 +35,7 @@ public void extractFiles(String[] files) throws IOException {
             if(filesToExtract.contains(relativePath)) {
                 if(!isDir) filesToExtract.remove(relativePath);
                 return true;
-            } else {// header to be extracted is atleast the entry path (may be more, when it is a directory)
+            } else {// header to be extracted is at least the entry path (may be more, when it is a directory)
                 for (String path : filesToExtract) {
                     if(relativePath.startsWith(path)) {
                         return true;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -34,7 +34,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
             // iterating archive elements to find file names that are to be extracted
             for (FileHeader header : rarFile.getFileHeaders()) {
                 if (filter.shouldExtract(header.getFileNameString(), header.isDirectory())) {
-                    // header to be extracted is atleast the entry path (may be more, when it is a directory)
+                    // header to be extracted is at least the entry path (may be more, when it is a directory)
                     arrayList.add(header);
                     totalBytes += header.getFullUnpackSize();
                 }
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, Archive zipFile, FileH
             while ((len = inputStream.read(buf)) != -1) {
 
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -75,7 +75,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -80,7 +80,7 @@ private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEn
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -177,7 +177,7 @@ private void loadEditDialog(final PathSwitchPreference p) {
                 .build();
 
         dialog.getActionButton(DialogAction.POSITIVE)
-                .setEnabled(FileUtils.isPathAccesible(editText2.getText().toString(), sharedPrefs));
+                .setEnabled(FileUtils.isPathAccessible(editText2.getText().toString(), sharedPrefs));
 
         disableButtonIfTitleEmpty(editText1, dialog);
         disableButtonIfNotPath(editText2, dialog);
@@ -262,7 +262,7 @@ private void disableButtonIfNotPath(EditText path, final MaterialDialog dialog)
             @Override
             public void afterTextChanged(Editable s) {
                 dialog.getActionButton(DialogAction.POSITIVE)
-                        .setEnabled(FileUtils.isPathAccesible(s.toString(), sharedPrefs));
+                        .setEnabled(FileUtils.isPathAccessible(s.toString(), sharedPrefs));
             }
         });
     }

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,14 +17,14 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 

File: app/src/main/java/com/amaze/filemanager/utils/DatapointParcelable.java
Patch:
@@ -3,14 +3,14 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.amaze.filemanager.asynchronous.services.ProgressiveService;
+import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.fragments.ProcessViewerFragment;
 
 /**
  * Created by Arpit on 01-08-2015
  *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *
- * Class stores the {@link ProgressiveService} progress variables.
+ * Class stores the {@link AbstractProgressiveService} progress variables.
  * This class also acts as data carrier to communicate with {@link ProcessViewerFragment}
  */
 public class DatapointParcelable implements Parcelable {

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -935,7 +935,7 @@ public static boolean isStorage(String path) {
         return false;
     }
 
-    public static boolean isPathAccesible(String dir, SharedPreferences pref) {
+    public static boolean isPathAccessible(String dir, SharedPreferences pref) {
         File f = new File(dir);
         boolean showIfHidden = pref.getBoolean(PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES, false),
                 isDirSelfOrParent = dir.endsWith("/.") || dir.endsWith("/.."),

File: app/src/main/java/com/amaze/filemanager/adapters/holders/AppHolder.java
Patch:
@@ -9,6 +9,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
+import com.amaze.filemanager.ui.views.ThemedTextView;
 
 /**
  * @author Emmanuel Messulam <emmanuelbendavid@gmail.com>
@@ -18,7 +19,7 @@
 public class AppHolder extends RecyclerView.ViewHolder {
 
     public final ImageView apkIcon;
-    public final MarqueeThemedTextView txtTitle;
+    public final ThemedTextView txtTitle;
     public final RelativeLayout rl;
     public final TextView txtDesc;
     public final ImageButton about;

File: app/src/main/java/com/amaze/filemanager/adapters/holders/CompressedItemViewHolder.java
Patch:
@@ -8,6 +8,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.RoundedImageView;
+import com.amaze.filemanager.ui.views.ThemedTextView;
 
 /**
  * @author Emmanuel Messulam<emmanuelbendavid@gmail.com>
@@ -18,7 +19,7 @@ public class CompressedItemViewHolder extends RecyclerView.ViewHolder {
     // each data item is just a string in this case
     public final RoundedImageView pictureIcon;
     public final ImageView genericIcon, apkIcon;
-    public final MarqueeThemedTextView txtTitle;
+    public final ThemedTextView txtTitle;
     public final TextView txtDesc;
     public final TextView date;
     public final TextView perm;

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -10,6 +10,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.views.MarqueeThemedTextView;
 import com.amaze.filemanager.ui.views.RoundedImageView;
+import com.amaze.filemanager.ui.views.ThemedTextView;
 
 /**
  * Check RecyclerAdapter's doc.
@@ -24,7 +25,7 @@ public class ItemViewHolder extends RecyclerView.ViewHolder {
     public final RoundedImageView pictureIcon;
     public final ImageView genericIcon, apkIcon;
     public final ImageView imageView1;
-    public final MarqueeThemedTextView txtTitle;
+    public final ThemedTextView txtTitle;
     public final TextView txtDesc;
     public final TextView date;
     public final TextView perm;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -35,7 +35,7 @@ public void extractFiles(String[] files) throws IOException {
             if(filesToExtract.contains(relativePath)) {
                 if(!isDir) filesToExtract.remove(relativePath);
                 return true;
-            } else {// header to be extracted is atleast the entry path (may be more, when it is a directory)
+            } else {// header to be extracted is at least the entry path (may be more, when it is a directory)
                 for (String path : filesToExtract) {
                     if(relativePath.startsWith(path)) {
                         return true;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -34,7 +34,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
             // iterating archive elements to find file names that are to be extracted
             for (FileHeader header : rarFile.getFileHeaders()) {
                 if (filter.shouldExtract(header.getFileNameString(), header.isDirectory())) {
-                    // header to be extracted is atleast the entry path (may be more, when it is a directory)
+                    // header to be extracted is at least the entry path (may be more, when it is a directory)
                     arrayList.add(header);
                     totalBytes += header.getFullUnpackSize();
                 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/SevenZipHelperTask.java
Patch:
@@ -31,8 +31,7 @@ void addElements(ArrayList<CompressedObjectParcelable> elements) {
         try {
             sevenzFile = new SevenZFile(new File(filePath));
 
-            SevenZArchiveEntry entry;
-            while ((entry = sevenzFile.getNextEntry()) != null) {
+            for (SevenZArchiveEntry entry : sevenzFile.getEntries()) {
                 String name = entry.getName();
                 if (name.endsWith(SEPARATOR)) name = name.substring(0, name.length() - 1);
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -34,7 +34,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
             // iterating archive elements to find file names that are to be extracted
             for (FileHeader header : rarFile.getFileHeaders()) {
                 if (filter.shouldExtract(header.getFileNameString(), header.isDirectory())) {
-                    // header to be extracted is atleast the entry path (may be more, when it is a directory)
+                    // header to be extracted is at least the entry path (may be more, when it is a directory)
                     arrayList.add(header);
                     totalBytes += header.getFullUnpackSize();
                 }

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/Extractor.java
Patch:
@@ -35,7 +35,7 @@ public void extractFiles(String[] files) throws IOException {
             if(filesToExtract.contains(relativePath)) {
                 if(!isDir) filesToExtract.remove(relativePath);
                 return true;
-            } else {// header to be extracted is atleast the entry path (may be more, when it is a directory)
+            } else {// header to be extracted is at least the entry path (may be more, when it is a directory)
                 for (String path : filesToExtract) {
                     if(relativePath.startsWith(path)) {
                         return true;

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -231,7 +231,7 @@ void generateNotification(ArrayList<HybridFile> failedOps, boolean move) {
         if (!move) getNotificationManager().cancelAll();
 
         if(failedOps.size()==0)return;
-
+        context = getApplicationContext();
         NotificationCompat.Builder mBuilder=new NotificationCompat.Builder(context, NotificationConstants.CHANNEL_NORMAL_ID);
         mBuilder.setContentTitle(context.getString(R.string.operationunsuccesful));
 

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CompressedHelper {
      */
     public static final String SEPARATOR = "/";
 
-    public static final String fileExtensionZip = "zip", fileExtensinJar = "jar", fileExtensionApk = "apk";
+    public static final String fileExtensionZip = "zip", fileExtensionJar = "jar", fileExtensionApk = "apk";
     public static final String fileExtensionTar = "tar";
     public static final String fileExtensionGzipTar = "tar.gz";
     public static final String fileExtensionRar = "rar";
@@ -105,7 +105,7 @@ public static String getFileName(String compressedName) {
     }
 
     private static boolean isZip(String type) {
-        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensinJar)
+        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensionJar)
                 || type.endsWith(fileExtensionApk);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -547,8 +547,9 @@ public boolean onNavigationItemSelected(@NonNull MenuItem item) {
                     // we've not gotten otg path yet
                     // start system request for storage access framework
                     Toast.makeText(mainActivity, mainActivity.getString(R.string.otg_access), Toast.LENGTH_LONG).show();
-                    Intent safIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
 
+                    UsbOtgSingleton.getInstance().setHasRootBeenRequested(true);
+                    Intent safIntent = new Intent(Intent.ACTION_OPEN_DOCUMENT_TREE);
                     mainActivity.startActivityForResult(safIntent, MainActivity.REQUEST_CODE_SAF);
                 } else {
                     pendingPath = meta.path;

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1317,14 +1317,15 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
             }
             operation = -1;
         } else if (requestCode == REQUEST_CODE_SAF) {
-            if (responseCode == Activity.RESULT_OK) {
+            if (responseCode == Activity.RESULT_OK && intent.getData() != null) {
                 // otg access
-                String usbOtgRoot = intent.getData() != null ? intent.getData().toString() : null;
+                String usbOtgRoot = intent.getData().toString();
                 UsbOtgSingleton.getInstance().setUsbOtgRoot(usbOtgRoot);
 
                 drawer.closeIfNotLocked();
                 if (drawer.isLocked()) drawer.onDrawerClosed();
             } else {
+                Toast.makeText(this, R.string.error, Toast.LENGTH_SHORT).show();
                 // otg access not provided
                 drawer.resetPendingPath();
             }

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -46,7 +46,6 @@
 import android.service.quicksettings.TileService;
 import android.support.annotation.NonNull;
 import android.support.design.widget.AppBarLayout;
-import android.support.design.widget.CoordinatorLayout;
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.ActivityCompat.OnRequestPermissionsResultCallback;
 import android.support.v4.app.Fragment;
@@ -65,7 +64,6 @@
 import android.view.WindowManager;
 import android.view.animation.DecelerateInterpolator;
 import android.widget.FrameLayout;
-import android.widget.LinearLayout;
 import android.widget.Toast;
 
 import com.afollestad.materialdialogs.DialogAction;
@@ -1568,7 +1566,7 @@ public void onRequestPermissionsResult(int requestCode, @NonNull String[] permis
                 if (b) {
                     tabHandler.clear();
 
-                    if (drawer.getStorageCount() > 1) {
+                    if (drawer.getPhoneStorageCount() > 1) {
                         tabHandler.addTab(new Tab(1, drawer.getSecondPath(), "/"));
                     } else {
                         tabHandler.addTab(new Tab(1, "/", "/"));

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -861,7 +861,8 @@ private void showPopup(View v, final LayoutElementParcelable rowItem, final int
 
             if (description.endsWith(".zip") || description.endsWith(".jar")
                     || description.endsWith(".apk") || description.endsWith(".rar")
-                    || description.endsWith(".tar") || description.endsWith(".tar.gz"))
+                    || description.endsWith(".tar") || description.endsWith(".tar.gz")
+                    || description.endsWith(".7z"))
                 popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
 
             if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {

File: app/src/main/java/com/amaze/filemanager/ui/icons/MimeTypes.java
Patch:
@@ -84,6 +84,7 @@ public final class MimeTypes {
         MIME_TYPES.put("bz2", "application/x-bzip2");
         MIME_TYPES.put("cab", "application/vnd.ms-cab-compressed");
         MIME_TYPES.put("gz", "application/x-gzip");
+        MIME_TYPES.put("7z", "application/x-7z-compressed");
         MIME_TYPES.put("lrf", "application/octet-stream");
         MIME_TYPES.put("jar", "application/java-archive");
         MIME_TYPES.put("xz", "application/x-xz");

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CompressedHelper {
      */
     public static final String SEPARATOR = "/";
 
-    public static final String fileExtensionZip = "zip", fileExtensinJar = "jar", fileExtensionApk = "apk";
+    public static final String fileExtensionZip = "zip", fileExtensionJar = "jar", fileExtensionApk = "apk";
     public static final String fileExtensionTar = "tar";
     public static final String fileExtensionGzipTar = "tar.gz";
     public static final String fileExtensionRar = "rar";
@@ -105,7 +105,7 @@ public static String getFileName(String compressedName) {
     }
 
     private static boolean isZip(String type) {
-        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensinJar)
+        return type.endsWith(fileExtensionZip) || type.endsWith(fileExtensionJar)
                 || type.endsWith(fileExtensionApk);
     }
 

File: app/src/main/java/com/amaze/filemanager/database/models/Tab.java
Patch:
@@ -39,7 +39,7 @@ public Tab(int tabNo, String path, String home) {
     }
 
     public String getOriginalPath(boolean savePaths, SharedPreferences sharedPreferences){
-        if(savePaths && FileUtils.isPathAccesible(path, sharedPreferences)) {
+        if(savePaths && FileUtils.isPathAccessible(path, sharedPreferences)) {
             return path;
         } else {
             return home;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -177,7 +177,7 @@ private void loadEditDialog(final PathSwitchPreference p) {
                 .build();
 
         dialog.getActionButton(DialogAction.POSITIVE)
-                .setEnabled(FileUtils.isPathAccesible(editText2.getText().toString(), sharedPrefs));
+                .setEnabled(FileUtils.isPathAccessible(editText2.getText().toString(), sharedPrefs));
 
         disableButtonIfTitleEmpty(editText1, dialog);
         disableButtonIfNotPath(editText2, dialog);
@@ -262,7 +262,7 @@ private void disableButtonIfNotPath(EditText path, final MaterialDialog dialog)
             @Override
             public void afterTextChanged(Editable s) {
                 dialog.getActionButton(DialogAction.POSITIVE)
-                        .setEnabled(FileUtils.isPathAccesible(s.toString(), sharedPrefs));
+                        .setEnabled(FileUtils.isPathAccessible(s.toString(), sharedPrefs));
             }
         });
     }

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -230,7 +230,7 @@ public void refreshDrawer() {
             File f = new File(file);
             String name;
             @DrawableRes int icon1 = R.drawable.ic_sd_storage_white_24dp;
-            if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file)) {
+            if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file) || "/mnt/sdcard".equals(file)) {
                 name = resources.getString(R.string.storage);
             } else if ("/storage/sdcard1".equals(file)) {
                 name = resources.getString(R.string.extstorage);
@@ -241,7 +241,7 @@ public void refreshDrawer() {
                 name = "OTG";
                 icon1 = R.drawable.ic_usb_white_24dp;
             } else name = f.getName();
-            if (!f.isDirectory() || f.canExecute()) {
+            if (f.isDirectory() || f.canExecute()) {
                 addNewItem(menu, STORAGES_GROUP, order++, name, new MenuMetadata(file), icon1,
                         R.drawable.ic_show_chart_black_24dp);
                 if(storage_count == 0) firstPath = file;

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -935,7 +935,7 @@ public static boolean isStorage(String path) {
         return false;
     }
 
-    public static boolean isPathAccesible(String dir, SharedPreferences pref) {
+    public static boolean isPathAccessible(String dir, SharedPreferences pref) {
         File f = new File(dir);
         boolean showIfHidden = pref.getBoolean(PreferencesConstants.PREFERENCE_SHOW_HIDDENFILES, false),
                 isDirSelfOrParent = dir.endsWith("/.") || dir.endsWith("/.."),

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -230,7 +230,7 @@ public void refreshDrawer() {
             File f = new File(file);
             String name;
             @DrawableRes int icon1 = R.drawable.ic_sd_storage_white_24dp;
-            if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file)) {
+            if ("/storage/emulated/legacy".equals(file) || "/storage/emulated/0".equals(file) || "/mnt/sdcard".equals(file)) {
                 name = resources.getString(R.string.storage);
             } else if ("/storage/sdcard1".equals(file)) {
                 name = resources.getString(R.string.extstorage);
@@ -241,7 +241,7 @@ public void refreshDrawer() {
                 name = "OTG";
                 icon1 = R.drawable.ic_usb_white_24dp;
             } else name = f.getName();
-            if (!f.isDirectory() || f.canExecute()) {
+            if (f.isDirectory() || f.canExecute()) {
                 addNewItem(menu, STORAGES_GROUP, order++, name, new MenuMetadata(file), icon1,
                         R.drawable.ic_show_chart_black_24dp);
                 if(storage_count == 0) firstPath = file;

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,14 +17,14 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 

File: app/src/main/java/com/amaze/filemanager/utils/DatapointParcelable.java
Patch:
@@ -3,14 +3,14 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.amaze.filemanager.asynchronous.services.ProgressiveService;
+import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.fragments.ProcessViewerFragment;
 
 /**
  * Created by Arpit on 01-08-2015
  *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *
- * Class stores the {@link ProgressiveService} progress variables.
+ * Class stores the {@link AbstractProgressiveService} progress variables.
  * This class also acts as data carrier to communicate with {@link ProcessViewerFragment}
  */
 public class DatapointParcelable implements Parcelable {

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.Intent;
 import android.support.v4.app.NotificationCompat;
 import android.text.format.Formatter;
-import android.util.Log;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
@@ -124,7 +123,7 @@ public final void publishResults(String fileName, int sourceFiles, int sourcePro
                 isNotificationTitleSet = true;
             }
 
-            if (ServiceWatcherUtil.STATE != ServiceWatcherUtil.ServiceWatcherInteractionInterface.STATE_HALTED) {
+            if (ServiceWatcherUtil.state != ServiceWatcherUtil.ServiceWatcherInteractionInterface.STATE_HALTED) {
 
                 getNotificationBuilder().setContentText(fileName + " " + Formatter.formatFileSize(context, writtenSize) + "/" +
                         Formatter.formatFileSize(context, totalSize));

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -403,7 +403,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
                 try {
                     if (!move) RootUtils.copy(sourceFile.getPath(), targetFile.getPath());
                     else if (move) RootUtils.move(sourceFile.getPath(), targetFile.getPath());
-                    ServiceWatcherUtil.POSITION += sourceFile.getSize();
+                    ServiceWatcherUtil.position += sourceFile.getSize();
                 } catch (ShellNotRunningException e) {
                     failedFOps.add(sourceFile);
                     e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -251,7 +251,7 @@ private void compressFile(File file, String path) throws IOException, NullPointe
                 zos.putNextEntry(new ZipEntry(path + "/" + file.getName()));
                 while ((len = in.read(buf)) > 0) {
                     zos.write(buf, 0, len);
-                    ServiceWatcherUtil.POSITION += len;
+                    ServiceWatcherUtil.position += len;
                 }
                 in.close();
                 return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, Archive zipFile, FileH
             while ((len = inputStream.read(buf)) != -1) {
 
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -75,7 +75,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -80,7 +80,7 @@ private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEn
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/ui/views/drawer/Drawer.java
Patch:
@@ -394,6 +394,7 @@ public void refreshDrawer() {
                 new MenuMetadata(() -> {
                     Intent in = new Intent(mainActivity, PreferencesActivity.class);
                     mainActivity.startActivity(in);
+                    mainActivity.finish();
                 }),
                 R.drawable.ic_settings_white_24dp, null);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/AbstractProgressiveService.java
Patch:
@@ -7,7 +7,6 @@
 import android.content.Intent;
 import android.support.v4.app.NotificationCompat;
 import android.text.format.Formatter;
-import android.util.Log;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
@@ -124,7 +123,7 @@ public final void publishResults(String fileName, int sourceFiles, int sourcePro
                 isNotificationTitleSet = true;
             }
 
-            if (ServiceWatcherUtil.STATE != ServiceWatcherUtil.ServiceWatcherInteractionInterface.STATE_HALTED) {
+            if (ServiceWatcherUtil.state != ServiceWatcherUtil.ServiceWatcherInteractionInterface.STATE_HALTED) {
 
                 getNotificationBuilder().setContentText(fileName + " " + Formatter.formatFileSize(context, writtenSize) + "/" +
                         Formatter.formatFileSize(context, totalSize));

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -403,7 +403,7 @@ void copyRoot(HybridFileParcelable sourceFile, HybridFile targetFile, boolean mo
                 try {
                     if (!move) RootUtils.copy(sourceFile.getPath(), targetFile.getPath());
                     else if (move) RootUtils.move(sourceFile.getPath(), targetFile.getPath());
-                    ServiceWatcherUtil.POSITION += sourceFile.getSize();
+                    ServiceWatcherUtil.position += sourceFile.getSize();
                 } catch (ShellNotRunningException e) {
                     failedFOps.add(sourceFile);
                     e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -251,7 +251,7 @@ private void compressFile(File file, String path) throws IOException, NullPointe
                 zos.putNextEntry(new ZipEntry(path + "/" + file.getName()));
                 while ((len = in.read(buf)) > 0) {
                     zos.write(buf, 0, len);
-                    ServiceWatcherUtil.POSITION += len;
+                    ServiceWatcherUtil.position += len;
                 }
                 in.close();
                 return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/RarExtractor.java
Patch:
@@ -77,7 +77,7 @@ private void extractEntry(@NonNull final Context context, Archive zipFile, FileH
             while ((len = inputStream.read(buf)) != -1) {
 
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -75,7 +75,7 @@ private void extractEntry(@NonNull final Context context, TarArchiveInputStream
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -80,7 +80,7 @@ private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEn
             byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
             while ((len = inputStream.read(buf)) != -1) {
                 outputStream.write(buf, 0, len);
-                ServiceWatcherUtil.POSITION += len;
+                ServiceWatcherUtil.position += len;
             }
         } finally {
             outputStream.close();

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,14 +17,14 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 

File: app/src/main/java/com/amaze/filemanager/utils/DatapointParcelable.java
Patch:
@@ -3,14 +3,14 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.amaze.filemanager.asynchronous.services.ProgressiveService;
+import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.fragments.ProcessViewerFragment;
 
 /**
  * Created by Arpit on 01-08-2015
  *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *
- * Class stores the {@link ProgressiveService} progress variables.
+ * Class stores the {@link AbstractProgressiveService} progress variables.
  * This class also acts as data carrier to communicate with {@link ProcessViewerFragment}
  */
 public class DatapointParcelable implements Parcelable {

File: app/src/main/java/com/amaze/filemanager/utils/ScreenUtils.java
Patch:
@@ -6,7 +6,7 @@
 
 public class ScreenUtils {
 
-    public static final int TOOLBAR_HEIGHT_IN_DP = 56;  //160 dpi
+    public static final int TOOLBAR_HEIGHT_IN_DP = 128;  //160 dpi
 
     private Activity activity;
 

File: app/src/main/java/com/amaze/filemanager/utils/ScreenUtils.java
Patch:
@@ -6,7 +6,7 @@
 
 public class ScreenUtils {
 
-    public static final int TOOLBAR_HEIGHT_IN_DP = 56;  //160 dpi
+    public static final int TOOLBAR_HEIGHT_IN_DP = 128;  //160 dpi
 
     private Activity activity;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,14 +17,14 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 

File: app/src/main/java/com/amaze/filemanager/utils/DatapointParcelable.java
Patch:
@@ -3,14 +3,14 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.amaze.filemanager.asynchronous.services.ProgressiveService;
+import com.amaze.filemanager.asynchronous.services.AbstractProgressiveService;
 import com.amaze.filemanager.fragments.ProcessViewerFragment;
 
 /**
  * Created by Arpit on 01-08-2015
  *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *
- * Class stores the {@link ProgressiveService} progress variables.
+ * Class stores the {@link AbstractProgressiveService} progress variables.
  * This class also acts as data carrier to communicate with {@link ProcessViewerFragment}
  */
 public class DatapointParcelable implements Parcelable {

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.ArrayList;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 /**
  * Created by Vishal on 02-02-2015.
@@ -113,12 +114,11 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
-            if (colourednavigation)
+            if (getBoolean(PREFERENCE_COLORED_NAVIGATION))
                 window.setNavigationBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
 
         }
@@ -157,7 +157,7 @@ private void load(final File file) {
 
             // if the db can't be read, and we have root enabled, try reading it by
             // first copying it in cache dir
-            if (!file.canRead() && ThemedActivity.rootMode) {
+            if (!file.canRead() && isRootExplorer()) {
 
                 try {
                     RootUtils.copy(pathFile.getPath(),

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -15,12 +15,13 @@
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
+
 /**
  * Created by arpitkh996 on 03-03-2016.
  */
 public class ThemedActivity extends PreferenceActivity {
 
-    public static boolean rootMode;
     public boolean checkStorage = true;
 
     @Override
@@ -35,8 +36,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         setTheme();
 
-        rootMode = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
-
         //requesting storage permissions
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && checkStorage && !checkStoragePermission()) {
             requestStoragePermission();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -20,7 +20,7 @@
  */
 
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks;
 
 /**
  * Container for AsyncTask results. Allow either result object or exception to be contained.

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -29,6 +29,8 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
         this.webView = webView;
         this.dbViewerFragment = dbViewerFragment;
         stringBuilder = new StringBuilder();
+
+        webView.getSettings().setDefaultTextEncodingName("utf-8");
     }
 
     @Override
@@ -91,7 +93,7 @@ protected void onPostExecute(Void aVoid) {
             stringBuilder.append("</tr>");
         }
         stringBuilder.append("</table></body></html>");
-        webView.loadData(stringBuilder.toString(), "text/html", null);
+        webView.loadData(stringBuilder.toString(), "text/html;charset=utf-8", "utf-8");
         webView.setVisibility(View.VISIBLE);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -100,7 +100,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                         if (!source.renameTo(dest)) {
 
                             // check if we have root
-                            if (ThemedActivity.rootMode) {
+                            if (mainFrag.getMainActivity().isRootExplorer()) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/GzipHelperTask.java
Patch:
@@ -13,9 +13,9 @@
 import java.util.ArrayList;
 import java.util.zip.GZIPInputStream;
 
-public class GzipHelperTask extends CompressedHelperTask {
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
 
-    private static final String SEPARATOR = "/";
+public class GzipHelperTask extends CompressedHelperTask {
 
     private String filePath, relativePath;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.helpers.RarDecompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.Archive;
@@ -35,7 +36,7 @@ public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
     void addElements(ArrayList<CompressedObjectParcelable> elements) {
         try {
             Archive zipfile = new Archive(new File(fileLocation));
-            String relativeDirDiffSeparator = relativeDirectory.replace("/", "\\");
+            String relativeDirDiffSeparator = relativeDirectory.replace(CompressedHelper.SEPARATOR, "\\");
 
             for (FileHeader header : zipfile.getFileHeaders()) {
                 String name = header.getFileNameString();//This uses \ as separator, not /

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
 import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
@@ -11,15 +12,15 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
+
 /**
  * @author Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *         on 2/12/2017, at 00:40.
  */
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private static final String SEPARATOR = "/";
-
     private String filePath, relativePath;
 
     public TarHelperTask(String filePath, String relativePath, boolean goBack,

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.ProgressDialog;
 import android.os.AsyncTask;
@@ -28,6 +28,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.utils.application.AppConfig;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -35,6 +35,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.views.WarnableTextInputLayout;
 import com.amaze.filemanager.ui.views.WarnableTextInputValidator;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.hierynomus.sshj.userauth.keyprovider.OpenSSHKeyV1KeyFile;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -29,6 +29,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.utils.application.AppConfig;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPReceiver.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPTileService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 import android.annotation.TargetApi;
 import android.content.BroadcastReceiver;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -50,16 +50,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -48,16 +48,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -44,7 +44,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
         for (ZipEntry entry : entry1) {
             if (!listener.isCancelled()) {
                 listener.onUpdate(entry.getName());
-                unzipEntry(context, zipfile, entry, outputPath);
+                extractEntry(context, zipfile, entry, outputPath);
             }
         }
         listener.onFinish();
@@ -57,8 +57,8 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
      * @param entry     zip entry that is to be extracted
      * @param outputDir output directory
      */
-    private void unzipEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
-                            String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
+                              String outputDir) throws IOException {
         if (entry.isDirectory()) {
             // zip entry is a directory, return after creating new directory
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -27,9 +27,9 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.filesystem.ssh.tasks.AsyncTaskResult;
-import com.amaze.filemanager.filesystem.ssh.tasks.PemToKeyPairTask;
-import com.amaze.filemanager.filesystem.ssh.tasks.SshAuthenticationTask;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.SshAuthenticationTask;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import net.schmizz.sshj.SSHClient;

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -80,7 +80,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -32,7 +32,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.CryptUtil;
@@ -126,7 +126,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 
         mainActivity.updateViews(new ColorDrawable(MainActivity.currentTab==1 ?

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -26,6 +26,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
 
+    public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -67,7 +67,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.about:
                 GeneralDialogCreation.showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                         rowItem.permissions, (ThemedActivity) mainFragment.getActivity(),
-                        ThemedActivity.rootMode, utilitiesProvider.getAppTheme());
+                        mainActivity.isRootExplorer(), utilitiesProvider.getAppTheme());
                                 /*
                                 PropertiesSheet propertiesSheet = new PropertiesSheet();
                                 Bundle arguments = new Bundle();
@@ -111,7 +111,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.book:
                 DataUtils dataUtils = DataUtils.getInstance();
                 dataUtils.addBook(new String[]{rowItem.title, rowItem.desc}, true);
-                mainFragment.getMainActivity().refreshDrawer();
+                mainFragment.getMainActivity().getDrawer().refreshDrawer();
                 Toast.makeText(mainFragment.getActivity(), mainFragment.getResources().getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
                 return true;
             case R.id.delete:

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -13,7 +13,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 
 import java.net.InetAddress;
 

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -1,5 +1,6 @@
 package com.amaze.filemanager.utils;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.pm.ActivityInfo;
 import android.content.res.ColorStateList;
@@ -12,6 +13,7 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.util.DisplayMetrics;
 import android.view.View;
+import android.view.Window;
 import android.widget.CheckBox;
 import android.widget.Toast;
 

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.ArrayList;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 /**
  * Created by Vishal on 02-02-2015.
@@ -113,12 +114,11 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
-            if (colourednavigation)
+            if (getBoolean(PREFERENCE_COLORED_NAVIGATION))
                 window.setNavigationBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
 
         }
@@ -157,7 +157,7 @@ private void load(final File file) {
 
             // if the db can't be read, and we have root enabled, try reading it by
             // first copying it in cache dir
-            if (!file.canRead() && ThemedActivity.rootMode) {
+            if (!file.canRead() && isRootExplorer()) {
 
                 try {
                     RootUtils.copy(pathFile.getPath(),

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -15,12 +15,13 @@
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
+
 /**
  * Created by arpitkh996 on 03-03-2016.
  */
 public class ThemedActivity extends PreferenceActivity {
 
-    public static boolean rootMode;
     public boolean checkStorage = true;
 
     @Override
@@ -35,8 +36,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         setTheme();
 
-        rootMode = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
-
         //requesting storage permissions
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && checkStorage && !checkStoragePermission()) {
             requestStoragePermission();

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -20,7 +20,7 @@
  */
 
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks;
 
 /**
  * Container for AsyncTask results. Allow either result object or exception to be contained.

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -29,6 +29,8 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
         this.webView = webView;
         this.dbViewerFragment = dbViewerFragment;
         stringBuilder = new StringBuilder();
+
+        webView.getSettings().setDefaultTextEncodingName("utf-8");
     }
 
     @Override
@@ -91,7 +93,7 @@ protected void onPostExecute(Void aVoid) {
             stringBuilder.append("</tr>");
         }
         stringBuilder.append("</table></body></html>");
-        webView.loadData(stringBuilder.toString(), "text/html", null);
+        webView.loadData(stringBuilder.toString(), "text/html;charset=utf-8", "utf-8");
         webView.setVisibility(View.VISIBLE);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -100,7 +100,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                         if (!source.renameTo(dest)) {
 
                             // check if we have root
-                            if (ThemedActivity.rootMode) {
+                            if (mainFrag.getMainActivity().isRootExplorer()) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/GzipHelperTask.java
Patch:
@@ -13,9 +13,9 @@
 import java.util.ArrayList;
 import java.util.zip.GZIPInputStream;
 
-public class GzipHelperTask extends CompressedHelperTask {
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
 
-    private static final String SEPARATOR = "/";
+public class GzipHelperTask extends CompressedHelperTask {
 
     private String filePath, relativePath;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.helpers.RarDecompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.Archive;
@@ -35,7 +36,7 @@ public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
     void addElements(ArrayList<CompressedObjectParcelable> elements) {
         try {
             Archive zipfile = new Archive(new File(fileLocation));
-            String relativeDirDiffSeparator = relativeDirectory.replace("/", "\\");
+            String relativeDirDiffSeparator = relativeDirectory.replace(CompressedHelper.SEPARATOR, "\\");
 
             for (FileHeader header : zipfile.getFileHeaders()) {
                 String name = header.getFileNameString();//This uses \ as separator, not /

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
 import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
@@ -11,15 +12,15 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
+
 /**
  * @author Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *         on 2/12/2017, at 00:40.
  */
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private static final String SEPARATOR = "/";
-
     private String filePath, relativePath;
 
     public TarHelperTask(String filePath, String relativePath, boolean goBack,

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.ProgressDialog;
 import android.os.AsyncTask;
@@ -28,6 +28,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.utils.application.AppConfig;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -35,6 +35,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.views.WarnableTextInputLayout;
 import com.amaze.filemanager.ui.views.WarnableTextInputValidator;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.hierynomus.sshj.userauth.keyprovider.OpenSSHKeyV1KeyFile;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -29,6 +29,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.utils.application.AppConfig;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPReceiver.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPTileService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 import android.annotation.TargetApi;
 import android.content.BroadcastReceiver;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -50,16 +50,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -48,16 +48,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -44,7 +44,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
         for (ZipEntry entry : entry1) {
             if (!listener.isCancelled()) {
                 listener.onUpdate(entry.getName());
-                unzipEntry(context, zipfile, entry, outputPath);
+                extractEntry(context, zipfile, entry, outputPath);
             }
         }
         listener.onFinish();
@@ -57,8 +57,8 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
      * @param entry     zip entry that is to be extracted
      * @param outputDir output directory
      */
-    private void unzipEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
-                            String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
+                              String outputDir) throws IOException {
         if (entry.isDirectory()) {
             // zip entry is a directory, return after creating new directory
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -27,9 +27,9 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.filesystem.ssh.tasks.AsyncTaskResult;
-import com.amaze.filemanager.filesystem.ssh.tasks.PemToKeyPairTask;
-import com.amaze.filemanager.filesystem.ssh.tasks.SshAuthenticationTask;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.SshAuthenticationTask;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import net.schmizz.sshj.SSHClient;

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -80,7 +80,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -32,7 +32,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.CryptUtil;
@@ -126,7 +126,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 
         mainActivity.updateViews(new ColorDrawable(MainActivity.currentTab==1 ?

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -26,6 +26,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
 
+    public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -67,7 +67,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.about:
                 GeneralDialogCreation.showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                         rowItem.permissions, (ThemedActivity) mainFragment.getActivity(),
-                        ThemedActivity.rootMode, utilitiesProvider.getAppTheme());
+                        mainActivity.isRootExplorer(), utilitiesProvider.getAppTheme());
                                 /*
                                 PropertiesSheet propertiesSheet = new PropertiesSheet();
                                 Bundle arguments = new Bundle();
@@ -111,7 +111,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.book:
                 DataUtils dataUtils = DataUtils.getInstance();
                 dataUtils.addBook(new String[]{rowItem.title, rowItem.desc}, true);
-                mainFragment.getMainActivity().refreshDrawer();
+                mainFragment.getMainActivity().getDrawer().refreshDrawer();
                 Toast.makeText(mainFragment.getActivity(), mainFragment.getResources().getString(R.string.bookmarksadded), Toast.LENGTH_LONG).show();
                 return true;
             case R.id.delete:

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -13,7 +13,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 
 import java.net.InetAddress;
 

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -1,5 +1,6 @@
 package com.amaze.filemanager.utils;
 
+import android.app.Activity;
 import android.content.Context;
 import android.content.pm.ActivityInfo;
 import android.content.res.ColorStateList;
@@ -12,6 +13,7 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.util.DisplayMetrics;
 import android.view.View;
+import android.view.Window;
 import android.widget.CheckBox;
 import android.widget.Toast;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -29,6 +29,8 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
         this.webView = webView;
         this.dbViewerFragment = dbViewerFragment;
         stringBuilder = new StringBuilder();
+
+        webView.getSettings().setDefaultTextEncodingName("utf-8");
     }
 
     @Override
@@ -91,7 +93,7 @@ protected void onPostExecute(Void aVoid) {
             stringBuilder.append("</tr>");
         }
         stringBuilder.append("</table></body></html>");
-        webView.loadData(stringBuilder.toString(), "text/html", null);
+        webView.loadData(stringBuilder.toString(), "text/html;charset=utf-8", "utf-8");
         webView.setVisibility(View.VISIBLE);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -29,6 +29,8 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
         this.webView = webView;
         this.dbViewerFragment = dbViewerFragment;
         stringBuilder = new StringBuilder();
+
+        webView.getSettings().setDefaultTextEncodingName("utf-8");
     }
 
     @Override
@@ -91,7 +93,7 @@ protected void onPostExecute(Void aVoid) {
             stringBuilder.append("</tr>");
         }
         stringBuilder.append("</table></body></html>");
-        webView.loadData(stringBuilder.toString(), "text/html", null);
+        webView.loadData(stringBuilder.toString(), "text/html;charset=utf-8", "utf-8");
         webView.setVisibility(View.VISIBLE);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -29,6 +29,8 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
         this.webView = webView;
         this.dbViewerFragment = dbViewerFragment;
         stringBuilder = new StringBuilder();
+
+        webView.getSettings().setDefaultTextEncodingName("utf-8");
     }
 
     @Override
@@ -91,7 +93,7 @@ protected void onPostExecute(Void aVoid) {
             stringBuilder.append("</tr>");
         }
         stringBuilder.append("</table></body></html>");
-        webView.loadData(stringBuilder.toString(), "text/html", null);
+        webView.loadData(stringBuilder.toString(), "text/html;charset=utf-8", "utf-8");
         webView.setVisibility(View.VISIBLE);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/notifications/NotificationConstants.java
Patch:
@@ -17,20 +17,19 @@
 
 public class NotificationConstants {
 
-    public static final int WAIT_ID = -1;
     public static final int COPY_ID = 0;
     public static final int EXTRACT_ID = 1;
     public static final int ZIP_ID = 2;
     public static final int DECRYPT_ID = 3;
     public static final int ENCRYPT_ID = 4;
     public static final int FTP_ID = 5;
     public static final int FAILED_ID = 6;
+    public static final int WAIT_ID = 7;
 
     public static final int TYPE_NORMAL = 0, TYPE_FTP = 1;
 
     public static final String CHANNEL_NORMAL_ID = "normalChannel";
     public static final String CHANNEL_FTP_ID = "ftpChannel";
-    public static final int ID_NOTIFICATION_WAIT =  9248;
 
     /**
      * This creates a channel (API >= 26) or applies the correct metadata to a notification (API < 26)

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -320,7 +320,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).name;
                     }
 
-                    decompressor.decompress(null, dirs);
+                    decompressor.decompress(compressedFile.getPath(), dirs);
 
                     mode.finish();
                     return true;

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -502,7 +502,7 @@ public void extractFile(File file) {
             mainActivity.operation = DataUtils.EXTRACT;
         } else if (mode == 1) {
             Decompressor decompressor = CompressedHelper.getCompressorInstance(mainActivity, file);
-            decompressor.decompress(null);
+            decompressor.decompress(file.getPath());
         } else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -128,7 +128,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         b.putParcelableArrayList(TAG_COPY_SOURCES, files);
 
         super.onStartCommand(intent, flags, startId);
-
+        super.progressHalted();
         //going async
         new DoInBackground(isRootExplorer).execute(b);
 
@@ -185,7 +185,7 @@ protected Void doInBackground(Bundle... p1) {
                 publishResults(fileName, sourceFiles1, sourceProgress1, totalSize1, writtenSize, speed, false, move);
             });
 
-            watcherUtil = new ServiceWatcherUtil(progressHandler, totalSize);
+            watcherUtil = new ServiceWatcherUtil(progressHandler);
 
             addFirstDatapoint(sourceFiles.get(0).getName(), sourceFiles.size(), totalSize, move);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -86,7 +86,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
 
         super.onStartCommand(intent, flags, startId);
-
+        super.progressHalted();
         new BackgroundTask().execute();
 
         return START_STICKY;
@@ -123,7 +123,7 @@ protected Void doInBackground(Void... params) {
                 publishResults(fileName, sourceFiles, sourceProgress, totalSize,
                         writtenSize, speed, false, false);
             });
-            serviceWatcherUtil = new ServiceWatcherUtil(progressHandler, totalSize);
+            serviceWatcherUtil = new ServiceWatcherUtil(progressHandler);
 
             addFirstDatapoint(baseFile.getName(), 1, totalSize, true);// we're using encrypt as move flag false
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -105,9 +105,9 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         startForeground(NotificationConstants.EXTRACT_ID, mBuilder.build());
 
         super.onStartCommand(intent, flags, startId);
+        super.progressHalted();
         new DoWork(this, progressHandler, file, extractPath, entries).execute();
 
-
         return START_STICKY;
     }
 
@@ -188,7 +188,7 @@ public void onStart(long totalBytes, String firstEntryName) {
                                         extractService.addFirstDatapoint(firstEntryName,
                                                 1, totalBytes, false);
 
-                                        watcherUtil = new ServiceWatcherUtil(progressHandler, totalBytes);
+                                        watcherUtil = new ServiceWatcherUtil(progressHandler);
                                         watcherUtil.watch(ExtractService.this);
                                     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -109,7 +109,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
         startForeground(NotificationConstants.ZIP_ID, mBuilder.build());
 
         super.onStartCommand(intent, flags, startId);
-
+        super.progressHalted();
         asyncTask = new CompressAsyncTask(this, baseFiles, mZipPath);
         asyncTask.execute();
         // If we get killed, after returning from here, restart
@@ -188,7 +188,7 @@ public void onPostExecute(Void a) {
         public void execute(final @NonNull Context context, ArrayList<File> baseFiles, String zipPath) {
             OutputStream out;
             File zipDirectory = new File(zipPath);
-            watcherUtil = new ServiceWatcherUtil(progressHandler, totalBytes);
+            watcherUtil = new ServiceWatcherUtil(progressHandler);
             watcherUtil.watch(ZipService.this);
 
             try {

File: app/src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -44,7 +44,6 @@ public class Operations {
     private static final String LESS_THAN = "<";
 
     private static final String FAT = "FAT";
-    private DataUtils dataUtils = DataUtils.getInstance();
 
     public interface ErrorCallBack {
 

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -320,7 +320,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).name;
                     }
 
-                    decompressor.decompress(null, dirs);
+                    decompressor.decompress(compressedFile.getPath(), dirs);
 
                     mode.finish();
                     return true;

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -502,7 +502,7 @@ public void extractFile(File file) {
             mainActivity.operation = DataUtils.EXTRACT;
         } else if (mode == 1) {
             Decompressor decompressor = CompressedHelper.getCompressorInstance(mainActivity, file);
-            decompressor.decompress(null);
+            decompressor.decompress(file.getPath());
         } else Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.ArrayList;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 /**
  * Created by Vishal on 02-02-2015.
@@ -113,12 +114,11 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
-            if (colourednavigation)
+            if (getBoolean(PREFERENCE_COLORED_NAVIGATION))
                 window.setNavigationBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
 
         }
@@ -157,7 +157,7 @@ private void load(final File file) {
 
             // if the db can't be read, and we have root enabled, try reading it by
             // first copying it in cache dir
-            if (!file.canRead() && ThemedActivity.rootMode) {
+            if (!file.canRead() && isRootExplorer()) {
 
                 try {
                     RootUtils.copy(pathFile.getPath(),

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -239,6 +239,8 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
         holder.genericIcon.setOnClickListener(view -> {
             if (rowItem.type != CompressedObjectParcelable.TYPE_GOBACK) {
                 toggleChecked(position, holder.checkImageView);
+            } else {
+                compressedExplorerFragment.goBack();
             }
         });
         if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT)) {

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -100,7 +100,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                         if (!source.renameTo(dest)) {
 
                             // check if we have root
-                            if (ThemedActivity.rootMode) {
+                            if (mainFrag.getMainActivity().isRootExplorer()) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -26,6 +26,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
 
+    public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -67,7 +67,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.about:
                 GeneralDialogCreation.showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                         rowItem.permissions, (ThemedActivity) mainFragment.getActivity(),
-                        ThemedActivity.rootMode, utilitiesProvider.getAppTheme());
+                        mainActivity.isRootExplorer(), utilitiesProvider.getAppTheme());
                                 /*
                                 PropertiesSheet propertiesSheet = new PropertiesSheet();
                                 Bundle arguments = new Bundle();

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -367,7 +367,7 @@ public void mkFile(final HybridFile path, final MainFragment ma) {
         final Toast toast = Toast.makeText(ma.getActivity(), ma.getString(R.string.creatingfile),
                 Toast.LENGTH_SHORT);
         toast.show();
-        Operations.mkfile(path, ma.getActivity(), ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+        Operations.mkfile(path, ma.getActivity(), mainActivity.isRootExplorer(), new Operations.ErrorCallBack() {
             @Override
             public void exists(final HybridFile file) {
                 ma.getActivity().runOnUiThread(() -> {
@@ -426,7 +426,7 @@ public void mkDir(final HybridFile path, final MainFragment ma) {
         final Toast toast = Toast.makeText(ma.getActivity(), ma.getString(R.string.creatingfolder),
                 Toast.LENGTH_SHORT);
         toast.show();
-        Operations.mkdir(path, ma.getActivity(), ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+        Operations.mkdir(path, ma.getActivity(), mainActivity.isRootExplorer(), new Operations.ErrorCallBack() {
             @Override
             public void exists(final HybridFile file) {
                 ma.getActivity().runOnUiThread(() -> {
@@ -581,7 +581,7 @@ public void search(SharedPreferences sharedPrefs, String query) {
             fm.beginTransaction().remove(fragment).commit();
         }
 
-        addSearchFragment(fm, new SearchWorkerFragment(), fpath, query, ma.openMode, ThemedActivity.rootMode,
+        addSearchFragment(fm, new SearchWorkerFragment(), fpath, query, ma.openMode, mainActivity.isRootExplorer(),
                 sharedPrefs.getBoolean(SearchWorkerFragment.KEY_REGEX, false),
                 sharedPrefs.getBoolean(SearchWorkerFragment.KEY_REGEX_MATCHES, false));
     }

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -967,12 +967,12 @@ public static ArrayList<File> hybridListToFileArrayList(ArrayList<HybridFileParc
      * Checks whether path for bookmark exists
      * If path is not found, empty directory is created
      */
-    public static void checkForPath(Context context, String path) {
+    public static void checkForPath(Context context, String path, boolean isRootExplorer) {
         // TODO: Add support for SMB and OTG in this function
         if (!new File(path).exists()) {
             Toast.makeText(context, context.getString(R.string.bookmark_lost), Toast.LENGTH_SHORT).show();
             Operations.mkdir(RootHelper.generateBaseFile(new File(path), true), context,
-                    ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+                    isRootExplorer, new Operations.ErrorCallBack() {
                         //TODO empty
                         @Override
                         public void exists(HybridFile file) {

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.ArrayList;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 /**
  * Created by Vishal on 02-02-2015.
@@ -113,12 +114,11 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
-            if (colourednavigation)
+            if (getBoolean(PREFERENCE_COLORED_NAVIGATION))
                 window.setNavigationBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
 
         }
@@ -157,7 +157,7 @@ private void load(final File file) {
 
             // if the db can't be read, and we have root enabled, try reading it by
             // first copying it in cache dir
-            if (!file.canRead() && ThemedActivity.rootMode) {
+            if (!file.canRead() && isRootExplorer()) {
 
                 try {
                     RootUtils.copy(pathFile.getPath(),

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -100,7 +100,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                         if (!source.renameTo(dest)) {
 
                             // check if we have root
-                            if (ThemedActivity.rootMode) {
+                            if (mainFrag.getMainActivity().isRootExplorer()) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -26,6 +26,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
 
+    public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -67,7 +67,7 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.about:
                 GeneralDialogCreation.showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                         rowItem.permissions, (ThemedActivity) mainFragment.getActivity(),
-                        ThemedActivity.rootMode, utilitiesProvider.getAppTheme());
+                        mainActivity.isRootExplorer(), utilitiesProvider.getAppTheme());
                                 /*
                                 PropertiesSheet propertiesSheet = new PropertiesSheet();
                                 Bundle arguments = new Bundle();

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -367,7 +367,7 @@ public void mkFile(final HybridFile path, final MainFragment ma) {
         final Toast toast = Toast.makeText(ma.getActivity(), ma.getString(R.string.creatingfile),
                 Toast.LENGTH_SHORT);
         toast.show();
-        Operations.mkfile(path, ma.getActivity(), ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+        Operations.mkfile(path, ma.getActivity(), mainActivity.isRootExplorer(), new Operations.ErrorCallBack() {
             @Override
             public void exists(final HybridFile file) {
                 ma.getActivity().runOnUiThread(() -> {
@@ -426,7 +426,7 @@ public void mkDir(final HybridFile path, final MainFragment ma) {
         final Toast toast = Toast.makeText(ma.getActivity(), ma.getString(R.string.creatingfolder),
                 Toast.LENGTH_SHORT);
         toast.show();
-        Operations.mkdir(path, ma.getActivity(), ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+        Operations.mkdir(path, ma.getActivity(), mainActivity.isRootExplorer(), new Operations.ErrorCallBack() {
             @Override
             public void exists(final HybridFile file) {
                 ma.getActivity().runOnUiThread(() -> {
@@ -581,7 +581,7 @@ public void search(SharedPreferences sharedPrefs, String query) {
             fm.beginTransaction().remove(fragment).commit();
         }
 
-        addSearchFragment(fm, new SearchWorkerFragment(), fpath, query, ma.openMode, ThemedActivity.rootMode,
+        addSearchFragment(fm, new SearchWorkerFragment(), fpath, query, ma.openMode, mainActivity.isRootExplorer(),
                 sharedPrefs.getBoolean(SearchWorkerFragment.KEY_REGEX, false),
                 sharedPrefs.getBoolean(SearchWorkerFragment.KEY_REGEX_MATCHES, false));
     }

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -967,12 +967,12 @@ public static ArrayList<File> hybridListToFileArrayList(ArrayList<HybridFileParc
      * Checks whether path for bookmark exists
      * If path is not found, empty directory is created
      */
-    public static void checkForPath(Context context, String path) {
+    public static void checkForPath(Context context, String path, boolean isRootExplorer) {
         // TODO: Add support for SMB and OTG in this function
         if (!new File(path).exists()) {
             Toast.makeText(context, context.getString(R.string.bookmark_lost), Toast.LENGTH_SHORT).show();
             Operations.mkdir(RootHelper.generateBaseFile(new File(path), true), context,
-                    ThemedActivity.rootMode, new Operations.ErrorCallBack() {
+                    isRootExplorer, new Operations.ErrorCallBack() {
                         //TODO empty
                         @Override
                         public void exists(HybridFile file) {

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -239,6 +239,8 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
         holder.genericIcon.setOnClickListener(view -> {
             if (rowItem.type != CompressedObjectParcelable.TYPE_GOBACK) {
                 toggleChecked(position, holder.checkImageView);
+            } else {
+                compressedExplorerFragment.goBack();
             }
         });
         if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT)) {

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -239,6 +239,8 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
         holder.genericIcon.setOnClickListener(view -> {
             if (rowItem.type != CompressedObjectParcelable.TYPE_GOBACK) {
                 toggleChecked(position, holder.checkImageView);
+            } else {
+                compressedExplorerFragment.goBack();
             }
         });
         if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT)) {

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -174,7 +174,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 return true;
             case R.id.ftp_path:
                 FolderChooserDialog.Builder dialogBuilder = new FolderChooserDialog.Builder(getActivity());
-                dialogBuilder.chooseButton(R.string.change)
+                dialogBuilder.chooseButton(R.string.choose_folder)
                         .initialPath(getDefaultPathFromPreferences())
                         .cancelButton(R.string.cancel)
                         .tag(TAG)

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -299,15 +299,15 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
             case PreferencesConstants.PREFERENCE_ZIP_EXTRACT_PATH:
                 new FolderChooserDialog.Builder(getActivity())
                         .tag(PreferencesConstants.PREFERENCE_ZIP_EXTRACT_PATH)
-                        .chooseButton(R.string.select)
+                        .chooseButton(R.string.choose_folder)
                         .cancelButton(R.string.cancel)
                         .initialPath(sharedPref.getString(PreferencesConstants.PREFERENCE_ZIP_EXTRACT_PATH, Environment.getExternalStorageDirectory().getPath()))
                         .build().show((PreferencesActivity)getActivity());
                 return true;
             case PreferencesConstants.PREFERENCE_ZIP_CREATE_PATH:
                 new FolderChooserDialog.Builder(getActivity())
                         .tag(PreferencesConstants.PREFERENCE_ZIP_CREATE_PATH)
-                        .chooseButton(R.string.select)
+                        .chooseButton(R.string.choose_folder)
                         .cancelButton(R.string.cancel)
                         .initialPath(sharedPref.getString(PreferencesConstants.PREFERENCE_ZIP_CREATE_PATH, Environment.getExternalStorageDirectory().getPath()))
                         .build().show((PreferencesActivity)getActivity());

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -20,6 +20,9 @@
  */
 public class ThemedActivity extends PreferenceActivity {
 
+    /**
+     * @deprecated Use PreferenceActivity.isRootExplorer()
+     */
     public static boolean rootMode;
     public boolean checkStorage = true;
 

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -55,6 +55,7 @@
 import java.util.ArrayList;
 
 import static android.os.Build.VERSION.SDK_INT;
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_COLORED_NAVIGATION;
 
 /**
  * Created by Vishal on 02-02-2015.
@@ -113,12 +114,11 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION, true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
-            if (colourednavigation)
+            if (getBoolean(PREFERENCE_COLORED_NAVIGATION))
                 window.setNavigationBarColor(PreferenceUtils.getStatusColor(getColorPreference().getColorAsString(ColorUsage.getPrimary(MainActivity.currentTab))));
 
         }

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -15,6 +15,8 @@
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
+import static com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants.PREFERENCE_ROOTMODE;
+
 /**
  * Created by arpitkh996 on 03-03-2016.
  */
@@ -38,7 +40,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         setTheme();
 
-        rootMode = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
+        rootMode = isRootExplorer();
 
         //requesting storage permissions
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && checkStorage && !checkStoragePermission()) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PreferencesConstants.java
Patch:
@@ -26,6 +26,7 @@ public class PreferencesConstants {
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "sidebar_folders_enable";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "sidebar_quickaccess_enable";
 
+    public static final String PREFERENCE_BOOKMARKS_ADDED = "books_added";
     public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
     public static final String PREFERENCE_SHOW_LAST_MODIFIED = "showLastModified";

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -618,8 +618,9 @@ public synchronized ArrayList<String> getStorageDirectories() {
                     rv.add(s);
             }
         }
-        if (ThemedActivity.rootMode)
+        if (isRootExplorer()){
             rv.add("/");
+        }
         File usb = getUsbDrive();
         if (usb != null && !rv.contains(usb.getPath())) rv.add(usb.getPath());
 
@@ -1076,6 +1077,7 @@ public void onResume() {
             materialDialog = null;
         }
 
+        drawer.refreshDrawer();
         drawer.deselectEverything();
 
         IntentFilter newFilter = new IntentFilter();

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -20,6 +20,9 @@
  */
 public class ThemedActivity extends PreferenceActivity {
 
+    /**
+     * @deprecated Use PreferenceActivity.isRootExplorer()
+     */
     public static boolean rootMode;
     public boolean checkStorage = true;
 

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -80,7 +80,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -126,7 +126,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 
         mainActivity.updateViews(new ColorDrawable(MainActivity.currentTab==1 ?

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -123,6 +123,7 @@ public boolean onPreferenceClick(final Preference preference) {
                             (selectedColorRes) -> {
                         activity.getColorPreference().setRes(usage, selectedColorRes).saveToPreferences(sharedPref);
                         if (dialog != null) dialog.dismiss();
+                        invalidateEverything();
                     });
 
                     GridView v = (GridView) getActivity().getLayoutInflater().inflate(R.layout.dialog_grid, null);
@@ -203,6 +204,8 @@ private void loadSection1() {
             }
         });
 
+        ((InvalidablePreferenceCategory) findPreference("category")).invalidate(activity.getColorPreference());
+
         checkCustomization();
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1558,7 +1558,7 @@ public void refreshDrawer() {
 
         dataUtils.setDrawerItems(sectionDrawerItems);
 
-        adapter = new DrawerAdapter(this, this, sectionDrawerItems, this);
+        adapter = new DrawerAdapter(this, getUtilsProvider(), sectionDrawerItems, this);
         mDrawerList.setAdapter(adapter);
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -52,7 +52,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
@@ -62,7 +62,7 @@
 
 public class AppsAdapter extends ArrayAdapter<AppDataParcelable> {
 
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private Context context;
     private AppsAdapterPreloadModel modelProvider;
     private ViewPreloadSizeProvider<String> sizeProvider;
@@ -71,7 +71,7 @@ public class AppsAdapter extends ArrayAdapter<AppDataParcelable> {
 
     private ThemedActivity themedActivity;
 
-    public AppsAdapter(Context context, ThemedActivity ba, UtilitiesProviderInterface utilsProvider,
+    public AppsAdapter(Context context, ThemedActivity ba, UtilitiesProvider utilsProvider,
                        AppsAdapterPreloadModel modelProvider, ViewPreloadSizeProvider<String> sizeProvider,
                        int resourceId, AppsListFragment app) {
         super(context, resourceId);

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -29,7 +29,7 @@
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.util.ArrayList;
@@ -44,7 +44,7 @@ public class CompressedExplorerAdapter extends RecyclerView.Adapter<CompressedIt
     public boolean stoppedAnimation = false;
 
     private Context context;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private Drawable folder;
     private ArrayList<CompressedObjectParcelable> items;
     private CompressedExplorerFragment compressedExplorerFragment;
@@ -53,7 +53,7 @@ public class CompressedExplorerAdapter extends RecyclerView.Adapter<CompressedIt
     private boolean[] itemsChecked;
     private int offset = 0;
 
-    public CompressedExplorerAdapter(Context c, UtilitiesProviderInterface utilsProvider,
+    public CompressedExplorerAdapter(Context c, UtilitiesProvider utilsProvider,
                                      ArrayList<CompressedObjectParcelable> items,
                                      CompressedExplorerFragment compressedExplorerFragment,
                                      Decompressor decompressor) {

File: app/src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -46,7 +46,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.color.ColorUsage;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.io.File;
@@ -56,14 +56,14 @@ public class DrawerAdapter extends ArrayAdapter<DrawerItem> {
     public static final int SELECTED_NONE = -1;
 
     private final Context context;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private final ArrayList<DrawerItem> values;
     private MainActivity m;
     private int selectedItem = SELECTED_NONE;
     private DataUtils dataUtils = DataUtils.getInstance();
     private LayoutInflater inflater;
 
-    public DrawerAdapter(Context context, UtilitiesProviderInterface utilsProvider,
+    public DrawerAdapter(Context context, UtilitiesProvider utilsProvider,
                          ArrayList<DrawerItem> values, MainActivity m) {
         super(context, R.layout.drawerrow, values);
         this.utilsProvider = utilsProvider;

File: app/src/main/java/com/amaze/filemanager/adapters/holders/SpecialViewHolder.java
Patch:
@@ -7,7 +7,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.utils.Utils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 /**
@@ -23,7 +23,7 @@ public class SpecialViewHolder extends RecyclerView.ViewHolder {
     public final TextView txtTitle;
     public final int type;
 
-    public SpecialViewHolder(Context c, View view, UtilitiesProviderInterface utilsProvider,
+    public SpecialViewHolder(Context c, View view, UtilitiesProvider utilsProvider,
                              int type) {
         super(view);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -10,7 +10,7 @@
 import com.amaze.filemanager.filesystem.CustomFileObserver;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.fragments.MainFragment;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -21,10 +21,10 @@
  */
 public class FileHandler extends Handler {
     private WeakReference<MainFragment> mainFragment;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private RecyclerView listView;
 
-    public FileHandler(MainFragment mainFragment, UtilitiesProviderInterface utilsProvider,
+    public FileHandler(MainFragment mainFragment, UtilitiesProvider utilsProvider,
                         RecyclerView listView) {
         super(Looper.getMainLooper());
         this.mainFragment = new WeakReference<>(mainFragment);

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -106,7 +106,7 @@
 import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 import com.amaze.filemanager.utils.files.FileListSorter;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.io.File;
@@ -160,7 +160,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
     private SwipeRefreshLayout nofilesview;
 
     private android.support.v7.widget.RecyclerView listView;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private HashMap<String, Bundle> scrolls = new HashMap<>();
     private MainFragment ma = this;
     private View rootView;
@@ -197,7 +197,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         setRetainInstance(true);
 
-        utilsProvider = getMainActivity();
+        utilsProvider = getMainActivity().getUtilsProvider();
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
         res = getResources();
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -39,13 +39,13 @@ public class ItemPopupMenu extends PopupMenu implements PopupMenu.OnMenuItemClic
 
     private Context context;
     private MainActivity mainActivity;
-    private UtilitiesProviderInterface utilitiesProvider;
+    private UtilitiesProvider utilitiesProvider;
     private MainFragment mainFragment;
     private SharedPreferences sharedPrefs;
     private LayoutElementParcelable rowItem;
     private int accentColor;
 
-    public ItemPopupMenu(Context c, MainActivity ma, UtilitiesProviderInterface up, MainFragment mainFragment,
+    public ItemPopupMenu(Context c, MainActivity ma, UtilitiesProvider up, MainFragment mainFragment,
                          LayoutElementParcelable ri, View anchor, SharedPreferences sharedPreferences) {
         super(c, anchor);
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -14,9 +14,9 @@
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.SimpleTextWatcher;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 
 import java.net.URL;
 import java.net.URLDecoder;
@@ -73,7 +73,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             builder.positiveText(R.string.save);
             builder.neutralText(R.string.cancel);
             builder.negativeText(R.string.delete);
-            builder.theme(((UtilitiesProviderInterface) getActivity()).getAppTheme().getMaterialDialogTheme());
+            builder.theme(((BasicActivity) getActivity()).getAppTheme().getMaterialDialogTheme());
             builder.autoDismiss(false);
             View v2 = getActivity().getLayoutInflater().inflate(R.layout.rename, null);
             builder.customView(v2, true);

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -13,7 +13,6 @@
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.utils.LruBitmapCache;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
 import com.android.volley.toolbox.ImageLoader;
@@ -27,7 +26,7 @@ public class AppConfig extends GlideApplication {
 
     public static final String TAG = AppConfig.class.getSimpleName();
 
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private RequestQueue mRequestQueue;
     private ImageLoader mImageLoader;
     private UtilsHandler mUtilsHandler;
@@ -39,7 +38,7 @@ public class AppConfig extends GlideApplication {
 
     private static AppConfig mInstance;
 
-    public UtilitiesProviderInterface getUtilsProvider() {
+    public UtilitiesProvider getUtilsProvider() {
         return utilsProvider;
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/EncryptDecryptUtils.java
Patch:
@@ -19,7 +19,7 @@
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;
@@ -55,7 +55,7 @@ public static void startEncryption(Context c, final String path, final String pa
 
     public static void decryptFile(Context c, final MainActivity mainActivity, final MainFragment main, OpenMode openMode,
                                    HybridFileParcelable sourceFile, String decryptPath,
-                                   UtilitiesProviderInterface utilsProvider,
+                                   UtilitiesProvider utilsProvider,
                                    boolean broadcastResult) {
 
         Intent decryptIntent = new Intent(main.getContext(), DecryptService.class);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/tasks/PemToKeyPairTask.java
Patch:
@@ -164,7 +164,7 @@ protected void onPostExecute(AsyncTaskResult<KeyPair> result) {
                         .positiveText(R.string.ok)
                         .onPositive(((dialog, which) -> {
                             new PemToKeyPairTask(pemFile, callback, textfield.getText().toString(), dialog,
-                                    AppConfig.getInstance().getString(R.string.crypt_decryption_fail_password)).execute();
+                                    AppConfig.getInstance().getString(R.string.ssh_key_invalid_passphrase)).execute();
                         })).negativeText(R.string.cancel)
                         .onNegative(((dialog, which) -> {
                             dialog.dismiss();

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -80,7 +80,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -126,7 +126,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.getMenuButton().hide();
-        mainActivity.buttonBarFrame.setVisibility(View.GONE);
+        mainActivity.getAppbar().getBottomBar().setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 
         mainActivity.updateViews(new ColorDrawable(MainActivity.currentTab==1 ?

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -635,8 +635,9 @@ public synchronized ArrayList<String> getStorageDirectories() {
                     rv.add(s);
             }
         }
-        if (ThemedActivity.rootMode)
+        if (isRootExplorer()){
             rv.add("/");
+        }
         File usb = getUsbDrive();
         if (usb != null && !rv.contains(usb.getPath())) rv.add(usb.getPath());
 
@@ -1094,6 +1095,7 @@ public void onResume() {
             materialDialog = null;
         }
 
+        drawer.refreshDrawer();
         drawer.deselectEverything();
 
         IntentFilter newFilter = new IntentFilter();

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -20,6 +20,9 @@
  */
 public class ThemedActivity extends PreferenceActivity {
 
+    /**
+     * @deprecated Use PreferenceActivity.isRootExplorer()
+     */
     public static boolean rootMode;
     public boolean checkStorage = true;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/DecryptService.java
Patch:
@@ -77,7 +77,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         notificationIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
         notificationIntent.putExtra(MainActivity.KEY_INTENT_PROCESS_VIEWER, true);
         PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, notificationIntent, 0);
-        notificationBuilder = new NotificationCompat.Builder(this);
+        notificationBuilder = new NotificationCompat.Builder(this, NotificationConstants.CHANNEL_NORMAL_ID);
         notificationBuilder.setContentIntent(pendingIntent);
 
         decryptPath = intent.getStringExtra(TAG_DECRYPT_PATH);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ProgressiveServiceAbstract.java
Patch:
@@ -137,7 +137,7 @@ public final void publishResults(String fileName, int sourceFiles, int sourcePro
             //for processviewer
             DatapointParcelable intent = new DatapointParcelable(fileName, sourceFiles, sourceProgress,
                     totalSize, writtenSize, speed, move, isComplete);
-            putDataPackage(intent);
+            //putDataPackage(intent);
             addDatapoint(intent);
         } else publishCompletedResult(notificationID);
     }

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -412,7 +412,7 @@ public void onServiceConnected(ComponentName name, IBinder service) {
             // animate the chart a little after initial values have been applied
             lineChart.animateXY(500, 500);
 
-            specificService.setProgressListener(new EncryptService.ProgressListener() {
+            specificService.setProgressListener(new ProgressiveServiceAbstract.ProgressListener() {
                 @Override
                 public void onUpdate(final DatapointParcelable dataPackage) {
                     if (fragment.getActivity() == null) {

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -239,6 +239,8 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
         holder.genericIcon.setOnClickListener(view -> {
             if (rowItem.type != CompressedObjectParcelable.TYPE_GOBACK) {
                 toggleChecked(position, holder.checkImageView);
+            } else {
+                compressedExplorerFragment.goBack();
             }
         });
         if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT)) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -123,6 +123,7 @@ public boolean onPreferenceClick(final Preference preference) {
                             (selectedColorRes) -> {
                         activity.getColorPreference().setRes(usage, selectedColorRes).saveToPreferences(sharedPref);
                         if (dialog != null) dialog.dismiss();
+                        invalidateEverything();
                     });
 
                     GridView v = (GridView) getActivity().getLayoutInflater().inflate(R.layout.dialog_grid, null);
@@ -203,6 +204,8 @@ private void loadSection1() {
             }
         });
 
+        ((InvalidablePreferenceCategory) findPreference("category")).invalidate(activity.getColorPreference());
+
         checkCustomization();
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -579,7 +579,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                             if (rowItem.isDirectory) {
                                 gradientDrawable.setColor(iconSkinColor);
                             } else {
-                                ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(rowItem.desc, rowItem.isDirectory),
+                                ColorUtils.colorizeIcons(context, rowItem.filetype,
                                         gradientDrawable, iconSkinColor);
                             }
                         } else gradientDrawable.setColor(iconSkinColor);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -20,7 +20,7 @@
  */
 
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks;
 
 /**
  * Container for AsyncTask results. Allow either result object or exception to be contained.

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/GzipHelperTask.java
Patch:
@@ -13,9 +13,9 @@
 import java.util.ArrayList;
 import java.util.zip.GZIPInputStream;
 
-public class GzipHelperTask extends CompressedHelperTask {
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
 
-    private static final String SEPARATOR = "/";
+public class GzipHelperTask extends CompressedHelperTask {
 
     private String filePath, relativePath;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/RarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.showcontents.helpers.RarDecompressor;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.Archive;
@@ -35,7 +36,7 @@ public RarHelperTask(String realFileDirectory, String dir, boolean goBack,
     void addElements(ArrayList<CompressedObjectParcelable> elements) {
         try {
             Archive zipfile = new Archive(new File(fileLocation));
-            String relativeDirDiffSeparator = relativeDirectory.replace("/", "\\");
+            String relativeDirDiffSeparator = relativeDirectory.replace(CompressedHelper.SEPARATOR, "\\");
 
             for (FileHeader header : zipfile.getFileHeaders()) {
                 String name = header.getFileNameString();//This uses \ as separator, not /

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/compress/TarHelperTask.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.asynchronous.asynctasks.compress;
 
 import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
 import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;
@@ -11,15 +12,15 @@
 import java.io.IOException;
 import java.util.ArrayList;
 
+import static com.amaze.filemanager.filesystem.compressed.CompressedHelper.SEPARATOR;
+
 /**
  * @author Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *         on 2/12/2017, at 00:40.
  */
 
 public class TarHelperTask extends CompressedHelperTask {
 
-    private static final String SEPARATOR = "/";
-
     private String filePath, relativePath;
 
     public TarHelperTask(String filePath, String relativePath, boolean goBack,

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.ProgressDialog;
 import android.os.AsyncTask;
@@ -28,6 +28,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.utils.application.AppConfig;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -31,6 +31,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.hierynomus.sshj.userauth.keyprovider.OpenSSHKeyV1KeyFile;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -19,7 +19,7 @@
  * along with AmazeFileManager. If not, see <http ://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.filesystem.ssh.tasks;
+package com.amaze.filemanager.asynchronous.asynctasks.ssh;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -29,6 +29,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.utils.application.AppConfig;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPReceiver.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ftp/FTPTileService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.asynchronous.ftpservice;
+package com.amaze.filemanager.asynchronous.services.ftp;
 
 import android.annotation.TargetApi;
 import android.content.BroadcastReceiver;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/GzipExtractor.java
Patch:
@@ -50,16 +50,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/TarExtractor.java
Patch:
@@ -48,16 +48,16 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
                 listener.onUpdate(entry.getName());
                 //TAR is sequential, you need to walk all the way to the file you want
                 while (entry.hashCode() != inputStream.getNextTarEntry().hashCode());
-                unzipTAREntry(context, inputStream, entry, outputPath);
+                extractEntry(context, inputStream, entry, outputPath);
             }
         }
         inputStream.close();
 
         listener.onFinish();
     }
 
-    private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream inputStream,
-                               TarArchiveEntry entry, String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, TarArchiveInputStream inputStream,
+                              TarArchiveEntry entry, String outputDir) throws IOException {
         if (entry.isDirectory()) {
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);
             return;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/extractcontents/helpers/ZipExtractor.java
Patch:
@@ -44,7 +44,7 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
         for (ZipEntry entry : entry1) {
             if (!listener.isCancelled()) {
                 listener.onUpdate(entry.getName());
-                unzipEntry(context, zipfile, entry, outputPath);
+                extractEntry(context, zipfile, entry, outputPath);
             }
         }
         listener.onFinish();
@@ -57,8 +57,8 @@ protected void extractWithFilter(@NonNull Filter filter) throws IOException {
      * @param entry     zip entry that is to be extracted
      * @param outputDir output directory
      */
-    private void unzipEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
-                            String outputDir) throws IOException {
+    private void extractEntry(@NonNull final Context context, ZipFile zipFile, ZipEntry entry,
+                              String outputDir) throws IOException {
         if (entry.isDirectory()) {
             // zip entry is a directory, return after creating new directory
             FileUtil.mkdir(new File(outputDir, entry.getName()), context);

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -27,9 +27,9 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.filesystem.ssh.tasks.AsyncTaskResult;
-import com.amaze.filemanager.filesystem.ssh.tasks.PemToKeyPairTask;
-import com.amaze.filemanager.filesystem.ssh.tasks.SshAuthenticationTask;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
+import com.amaze.filemanager.asynchronous.asynctasks.ssh.SshAuthenticationTask;
 import com.amaze.filemanager.utils.application.AppConfig;
 
 import net.schmizz.sshj.SSHClient;

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -32,7 +32,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.CryptUtil;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -13,7 +13,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.services.ftp.FTPService;
 
 import java.net.InetAddress;
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -123,6 +123,7 @@ public boolean onPreferenceClick(final Preference preference) {
                             (selectedColorRes) -> {
                         activity.getColorPreference().setRes(usage, selectedColorRes).saveToPreferences(sharedPref);
                         if (dialog != null) dialog.dismiss();
+                        invalidateEverything();
                     });
 
                     GridView v = (GridView) getActivity().getLayoutInflater().inflate(R.layout.dialog_grid, null);
@@ -203,6 +204,8 @@ private void loadSection1() {
             }
         });
 
+        ((InvalidablePreferenceCategory) findPreference("category")).invalidate(activity.getColorPreference());
+
         checkCustomization();
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/AsyncTaskResult.java
Patch:
@@ -20,7 +20,7 @@
  */
 
 
-package com.amaze.filemanager.asynchronous.asynctasks.ssh;
+package com.amaze.filemanager.asynchronous.asynctasks;
 
 /**
  * Container for AsyncTask results. Allow either result object or exception to be contained.

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/GetSshHostFingerprintTask.java
Patch:
@@ -28,6 +28,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.utils.application.AppConfig;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/PemToKeyPairTask.java
Patch:
@@ -31,6 +31,7 @@
 
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.utils.application.AppConfig;
 import com.hierynomus.sshj.userauth.keyprovider.OpenSSHKeyV1KeyFile;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ssh/SshAuthenticationTask.java
Patch:
@@ -29,6 +29,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.utils.application.AppConfig;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshConnectionPool.java
Patch:
@@ -27,7 +27,7 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.UtilsHandler;
-import com.amaze.filemanager.asynchronous.asynctasks.ssh.AsyncTaskResult;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.SshAuthenticationTask;
 import com.amaze.filemanager.utils.application.AppConfig;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -46,7 +46,7 @@
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;
 import com.amaze.filemanager.filesystem.ssh.SshConnectionPool;
 import com.amaze.filemanager.fragments.MainFragment;
-import com.amaze.filemanager.asynchronous.asynctasks.ssh.AsyncTaskResult;
+import com.amaze.filemanager.asynchronous.asynctasks.AsyncTaskResult;
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.PemToKeyPairTask;
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.SshAuthenticationTask;
 import com.amaze.filemanager.asynchronous.asynctasks.ssh.GetSshHostFingerprintTask;

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -579,7 +579,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                             if (rowItem.isDirectory) {
                                 gradientDrawable.setColor(iconSkinColor);
                             } else {
-                                ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(rowItem.desc, rowItem.isDirectory),
+                                ColorUtils.colorizeIcons(context, rowItem.filetype,
                                         gradientDrawable, iconSkinColor);
                             }
                         } else gradientDrawable.setColor(iconSkinColor);

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -171,7 +171,7 @@ public boolean isGoogleDriveFile() {
         return mode == OpenMode.GDRIVE;
     }
 
-    File getFile() {
+    public File getFile() {
         return new File(path);
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1558,7 +1558,7 @@ public void refreshDrawer() {
 
         dataUtils.setDrawerItems(sectionDrawerItems);
 
-        adapter = new DrawerAdapter(this, this, sectionDrawerItems, this);
+        adapter = new DrawerAdapter(this, getUtilsProvider(), sectionDrawerItems, this);
         mDrawerList.setAdapter(adapter);
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -52,7 +52,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.bumptech.glide.util.ViewPreloadSizeProvider;
 
@@ -62,7 +62,7 @@
 
 public class AppsAdapter extends ArrayAdapter<AppDataParcelable> {
 
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private Context context;
     private AppsAdapterPreloadModel modelProvider;
     private ViewPreloadSizeProvider<String> sizeProvider;
@@ -71,7 +71,7 @@ public class AppsAdapter extends ArrayAdapter<AppDataParcelable> {
 
     private ThemedActivity themedActivity;
 
-    public AppsAdapter(Context context, ThemedActivity ba, UtilitiesProviderInterface utilsProvider,
+    public AppsAdapter(Context context, ThemedActivity ba, UtilitiesProvider utilsProvider,
                        AppsAdapterPreloadModel modelProvider, ViewPreloadSizeProvider<String> sizeProvider,
                        int resourceId, AppsListFragment app) {
         super(context, resourceId);

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -29,7 +29,7 @@
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.util.ArrayList;
@@ -44,7 +44,7 @@ public class CompressedExplorerAdapter extends RecyclerView.Adapter<CompressedIt
     public boolean stoppedAnimation = false;
 
     private Context context;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private Drawable folder;
     private ArrayList<CompressedObjectParcelable> items;
     private CompressedExplorerFragment compressedExplorerFragment;
@@ -53,7 +53,7 @@ public class CompressedExplorerAdapter extends RecyclerView.Adapter<CompressedIt
     private boolean[] itemsChecked;
     private int offset = 0;
 
-    public CompressedExplorerAdapter(Context c, UtilitiesProviderInterface utilsProvider,
+    public CompressedExplorerAdapter(Context c, UtilitiesProvider utilsProvider,
                                      ArrayList<CompressedObjectParcelable> items,
                                      CompressedExplorerFragment compressedExplorerFragment,
                                      Decompressor decompressor) {

File: app/src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -46,7 +46,7 @@
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.color.ColorUsage;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.io.File;
@@ -56,14 +56,14 @@ public class DrawerAdapter extends ArrayAdapter<DrawerItem> {
     public static final int SELECTED_NONE = -1;
 
     private final Context context;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private final ArrayList<DrawerItem> values;
     private MainActivity m;
     private int selectedItem = SELECTED_NONE;
     private DataUtils dataUtils = DataUtils.getInstance();
     private LayoutInflater inflater;
 
-    public DrawerAdapter(Context context, UtilitiesProviderInterface utilsProvider,
+    public DrawerAdapter(Context context, UtilitiesProvider utilsProvider,
                          ArrayList<DrawerItem> values, MainActivity m) {
         super(context, R.layout.drawerrow, values);
         this.utilsProvider = utilsProvider;

File: app/src/main/java/com/amaze/filemanager/adapters/holders/SpecialViewHolder.java
Patch:
@@ -7,7 +7,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.utils.Utils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 /**
@@ -23,7 +23,7 @@ public class SpecialViewHolder extends RecyclerView.ViewHolder {
     public final TextView txtTitle;
     public final int type;
 
-    public SpecialViewHolder(Context c, View view, UtilitiesProviderInterface utilsProvider,
+    public SpecialViewHolder(Context c, View view, UtilitiesProvider utilsProvider,
                              int type) {
         super(view);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -10,7 +10,7 @@
 import com.amaze.filemanager.filesystem.CustomFileObserver;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.fragments.MainFragment;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.File;
 import java.lang.ref.WeakReference;
@@ -21,10 +21,10 @@
  */
 public class FileHandler extends Handler {
     private WeakReference<MainFragment> mainFragment;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private RecyclerView listView;
 
-    public FileHandler(MainFragment mainFragment, UtilitiesProviderInterface utilsProvider,
+    public FileHandler(MainFragment mainFragment, UtilitiesProvider utilsProvider,
                         RecyclerView listView) {
         super(Looper.getMainLooper());
         this.mainFragment = new WeakReference<>(mainFragment);

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -106,7 +106,7 @@
 import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 import com.amaze.filemanager.utils.files.FileListSorter;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 import java.io.File;
@@ -160,7 +160,7 @@ public class MainFragment extends android.support.v4.app.Fragment implements Bot
     private SwipeRefreshLayout nofilesview;
 
     private android.support.v7.widget.RecyclerView listView;
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private HashMap<String, Bundle> scrolls = new HashMap<>();
     private MainFragment ma = this;
     private View rootView;
@@ -197,7 +197,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         setRetainInstance(true);
 
-        utilsProvider = getMainActivity();
+        utilsProvider = getMainActivity().getUtilsProvider();
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
         res = getResources();
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 import com.amaze.filemanager.utils.files.FileUtils;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -39,13 +39,13 @@ public class ItemPopupMenu extends PopupMenu implements PopupMenu.OnMenuItemClic
 
     private Context context;
     private MainActivity mainActivity;
-    private UtilitiesProviderInterface utilitiesProvider;
+    private UtilitiesProvider utilitiesProvider;
     private MainFragment mainFragment;
     private SharedPreferences sharedPrefs;
     private LayoutElementParcelable rowItem;
     private int accentColor;
 
-    public ItemPopupMenu(Context c, MainActivity ma, UtilitiesProviderInterface up, MainFragment mainFragment,
+    public ItemPopupMenu(Context c, MainActivity ma, UtilitiesProvider up, MainFragment mainFragment,
                          LayoutElementParcelable ri, View anchor, SharedPreferences sharedPreferences) {
         super(c, anchor);
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -14,9 +14,9 @@
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.SimpleTextWatcher;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 
 import java.net.URL;
 import java.net.URLDecoder;
@@ -73,7 +73,7 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {
             builder.positiveText(R.string.save);
             builder.neutralText(R.string.cancel);
             builder.negativeText(R.string.delete);
-            builder.theme(((UtilitiesProviderInterface) getActivity()).getAppTheme().getMaterialDialogTheme());
+            builder.theme(((BasicActivity) getActivity()).getAppTheme().getMaterialDialogTheme());
             builder.autoDismiss(false);
             View v2 = getActivity().getLayoutInflater().inflate(R.layout.rename, null);
             builder.customView(v2, true);

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -13,7 +13,6 @@
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.utils.LruBitmapCache;
 import com.amaze.filemanager.utils.provider.UtilitiesProvider;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
 import com.android.volley.toolbox.ImageLoader;
@@ -27,7 +26,7 @@ public class AppConfig extends GlideApplication {
 
     public static final String TAG = AppConfig.class.getSimpleName();
 
-    private UtilitiesProviderInterface utilsProvider;
+    private UtilitiesProvider utilsProvider;
     private RequestQueue mRequestQueue;
     private ImageLoader mImageLoader;
     private UtilsHandler mUtilsHandler;
@@ -39,7 +38,7 @@ public class AppConfig extends GlideApplication {
 
     private static AppConfig mInstance;
 
-    public UtilitiesProviderInterface getUtilsProvider() {
+    public UtilitiesProvider getUtilsProvider() {
         return utilsProvider;
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/files/EncryptDecryptUtils.java
Patch:
@@ -19,7 +19,7 @@
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
-import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
+import com.amaze.filemanager.utils.provider.UtilitiesProvider;
 
 import java.io.IOException;
 import java.security.GeneralSecurityException;
@@ -55,7 +55,7 @@ public static void startEncryption(Context c, final String path, final String pa
 
     public static void decryptFile(Context c, final MainActivity mainActivity, final MainFragment main, OpenMode openMode,
                                    HybridFileParcelable sourceFile, String decryptPath,
-                                   UtilitiesProviderInterface utilsProvider,
+                                   UtilitiesProvider utilsProvider,
                                    boolean broadcastResult) {
 
         Intent decryptIntent = new Intent(main.getContext(), DecryptService.class);

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -39,7 +39,6 @@ public class Utils {
     private static final String INPUT_INTENT_BLACKLIST_AMP = "&&";
     private static final String INPUT_INTENT_BLACKLIST_DOTS = "\\.\\.\\.";
 
-
     //methods for fastscroller
     public static float clamp(float min, float max, float value) {
         float minimum = Math.max(min, value);
@@ -230,5 +229,4 @@ public static int nthToLastCharIndex(int elementNumber, String str, char element
         }
         return -1;
     }
-
 }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -80,6 +80,7 @@
 import com.amaze.filemanager.database.models.EncryptedEntry;
 import com.amaze.filemanager.database.models.Tab;
 import com.amaze.filemanager.filesystem.CustomFileObserver;
+import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.MediaStoreHack;
@@ -1264,7 +1265,7 @@ public void rename(final HybridFileParcelable f) {
                 getMainActivity().mainActivityHelper.rename(openMode, f.getPath(),
                         CURRENT_PATH + "/" + name1, getActivity(), ThemedActivity.rootMode);
             }, (text)-> {
-                    boolean isValidFilename = Utils.isValidFilename(text);
+                    boolean isValidFilename = FileUtil.isValidFilename(text);
 
                     if (!isValidFilename) {
                         return new WarnableTextInputValidator.ReturnState(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -41,6 +41,7 @@
 import com.amaze.filemanager.asynchronous.asynctasks.GenerateHashesTask;
 import com.amaze.filemanager.asynchronous.asynctasks.LoadFolderSpaceDataTask;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
+import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
@@ -865,7 +866,7 @@ public static void showCompressDialog(final MainActivity m, final ArrayList<Hybr
         new WarnableTextInputValidator(a.getContext(), etFilename, tilFilename,
                         materialDialog.getActionButton(DialogAction.POSITIVE),
                         (text) -> {
-                    boolean isValidFilename = Utils.isValidFilename(text);
+                    boolean isValidFilename = FileUtil.isValidFilename(text);
 
                     if (isValidFilename && text.length() > 0 && !text.toLowerCase().endsWith(".zip")) {
                         return new WarnableTextInputValidator.ReturnState(

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SftpConnectDialog.java
Patch:
@@ -42,6 +42,7 @@
 import com.afollestad.materialdialogs.internal.MDButton;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.filesystem.ssh.SshClientUtils;

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -184,7 +184,7 @@ public void onClick(View v) {
 
             case R.id.relative_layout_licenses:
                 LibsBuilder libsBuilder = new LibsBuilder()
-                        .withFields(R.string.class.getFields())
+                        .withLibraries("commonscompress", "apachemina", "volley")//Not autodetected for some reason
                         .withActivityTitle(getString(R.string.libraries))
                         .withAboutIconShown(true)
                         .withAboutVersionShownName(true)

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -112,7 +112,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentTitle(getResources().getString(R.string.copying))
                 .setSmallIcon(R.drawable.ic_content_copy_white_36dp);
 
-        NotificationConstants.setMetadata(c, mBuilder);
+        NotificationConstants.setMetadata(c, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.COPY_ID, mBuilder.build());
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -77,7 +77,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         notificationBuilder.setContentTitle(getResources().getString(R.string.crypt_encrypting));
         notificationBuilder.setSmallIcon(R.drawable.ic_folder_lock_white_36dp);
 
-        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder);
+        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
 
@@ -191,7 +191,7 @@ void generateNotification(ArrayList<HybridFile> failedOps) {
                     context.getString(R.string.crypt_encrypted).toLowerCase())))
             .setAutoCancel(true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         progressHandler.setCancelled(true);
 

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -73,7 +73,7 @@ public static final <T> T execute(@NonNull SshClientTemplate template) {
                 retval = template.execute(client);
             else
                 throw new RuntimeException("Unable to execute template");
-        } catch(IOException e) {
+        } catch(Exception e) {
             Log.e(TAG, "Error executing template method", e);
         } finally {
             if(client != null && template.closeClientOnFinish) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -116,7 +116,7 @@ public boolean onPreferenceClick(final Preference preference) {
             case PreferencesConstants.PREFERENCE_ICON_SKIN:
                 final ColorUsage usage = ColorUsage.fromString(preference.getKey());
                 if (usage != null) {
-                    ColorAdapter adapter = new ColorAdapter(getActivity(), ColorPreference.availableColors, usage);
+                    ColorAdapter adapter = new ColorAdapter(getActivity(), ColorPreference.getUniqueAvailableColors(getActivity()), usage);
 
                     GridView v = (GridView) getActivity().getLayoutInflater().inflate(R.layout.dialog_grid, null);
                     v.setAdapter(adapter);

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -22,6 +22,7 @@
 import android.support.annotation.DrawableRes;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import java.util.HashMap;
@@ -112,7 +113,7 @@ private static void putKeys(int resId, String... mimeTypes) {
                 "application/x-tar",
                 "application/x-webarchive",
                 "application/x-webarchive-xml",
-                "application/gzip",
+                "application/x-gzip",
                 "application/x-7z-compressed",
                 "application/x-deb",
                 "application/x-rar-compressed"
@@ -198,6 +199,7 @@ private static void putKeys(int resId, String... mimeTypes) {
 
     public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
         if(path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
+        if(CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
 
         int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/utils/PreferenceUtils.java
Patch:
@@ -9,7 +9,6 @@
 public class PreferenceUtils {
 
     public static final String KEY_CURRENT_TAB = "current_tab";
-    public static final String KEY_PATH_COMPRESS = "zippath";
 
     public static final int DEFAULT_PRIMARY = 4;
     public static final int DEFAULT_ACCENT = 1;

File: app/src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -163,7 +163,7 @@ private static synchronized void init(final Context context) {
                 .setSmallIcon(R.drawable.ic_all_inclusive_white_36dp)
                 .setProgress(0, 0, true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         Runnable runnable = new Runnable() {
             @Override

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -421,7 +421,9 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
         if(vholder instanceof ItemViewHolder) {
             final ItemViewHolder holder = (ItemViewHolder) vholder;
             final boolean isBackButton = mainFrag.GO_BACK_ITEM && p == 0;
-
+            if(isBackButton){
+                holder.about.setVisibility(View.GONE);
+            }
             if (mainFrag.IS_LIST) {
                 if (p == getItemCount() - 1) {
                     holder.rl.setMinimumHeight((int) minRowHeight);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -112,7 +112,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentTitle(getResources().getString(R.string.copying))
                 .setSmallIcon(R.drawable.ic_content_copy_white_36dp);
 
-        NotificationConstants.setMetadata(c, mBuilder);
+        NotificationConstants.setMetadata(c, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.COPY_ID, mBuilder.build());
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -77,7 +77,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         notificationBuilder.setContentTitle(getResources().getString(R.string.crypt_encrypting));
         notificationBuilder.setSmallIcon(R.drawable.ic_folder_lock_white_36dp);
 
-        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder);
+        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
 
@@ -191,7 +191,7 @@ void generateNotification(ArrayList<HybridFile> failedOps) {
                     context.getString(R.string.crypt_encrypted).toLowerCase())))
             .setAutoCancel(true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         progressHandler.setCancelled(true);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -116,7 +116,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentText(new File(file).getName())
                 .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp);
 
-        NotificationConstants.setMetadata(getApplicationContext(), mBuilder);
+        NotificationConstants.setMetadata(getApplicationContext(), mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.EXTRACT_ID, mBuilder.build());
 
         new DoWork(this, progressHandler, file, extractPath, entries).execute();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -98,7 +98,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentTitle(getResources().getString(R.string.compressing))
                 .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp);
 
-        NotificationConstants.setMetadata(this, mBuilder);
+        NotificationConstants.setMetadata(this, mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.ZIP_ID, mBuilder.build());
 
         asyncTask = new CompressAsyncTask(this, baseFiles, mZipPath);

File: app/src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -163,7 +163,7 @@ private static synchronized void init(final Context context) {
                 .setSmallIcon(R.drawable.ic_all_inclusive_white_36dp)
                 .setProgress(0, 0, true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         Runnable runnable = new Runnable() {
             @Override

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -521,6 +521,8 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             textView1.setOnClickListener(null);
             mode.setTitle(positions.size() + "");
             hideOption(R.id.openmulti, menu);
+            menu.findItem(R.id.all).setTitle(positions.size() == folder_count + file_count ?
+                    R.string.deselect_all : R.string.selectall);
 
             if (openMode != OpenMode.FILE) {
                 hideOption(R.id.addshortcut, menu);

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -19,19 +19,20 @@ public class WarnableTextInputLayout extends TextInputLayout {
 
     public WarnableTextInputLayout(Context context, AttributeSet attrs) {
         super(context, attrs);
-        setErrorEnabled(true);
     }
 
     /**
      * Remove error or warning
      */
     public void removeError() {
         super.setError(null);
+        setErrorEnabled(false);
     }
 
     @Override
     public void setError(@Nullable CharSequence error) {
         if(isStyleWarning) {
+            setErrorEnabled(true);
             setErrorTextAppearance(R.style.error_inputTextLayout);
             isStyleWarning = false;
         }
@@ -41,6 +42,7 @@ public void setError(@Nullable CharSequence error) {
     public void setWarning(@StringRes int text) {
         if(!isStyleWarning) {
             removeError();
+            setErrorEnabled(true);
             setErrorTextAppearance(R.style.warning_inputTextLayout);
             isStyleWarning = true;
         }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -40,6 +40,7 @@
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.fragments.AppsListFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
@@ -748,8 +749,9 @@ public void onNegative(MaterialDialog materialDialog) {
         if (m.getAppTheme().equals(AppTheme.DARK) || m.getAppTheme().equals(AppTheme.BLACK)) mat.theme(Theme.DARK);
         MaterialDialog b = mat.build();
 
-        if (!f.getName().toLowerCase().endsWith(".rar") && !f.getName().toLowerCase().endsWith(".jar") && !f.getName().toLowerCase().endsWith(".apk") && !f.getName().toLowerCase().endsWith(".zip"))
+        if (!CompressedHelper.isFileExtractable(f.getPath())) {
             b.getActionButton(DialogAction.NEGATIVE).setEnabled(false);
+        }
         b.show();
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -22,6 +22,7 @@
 import android.support.annotation.DrawableRes;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import java.util.HashMap;
@@ -112,7 +113,7 @@ private static void putKeys(int resId, String... mimeTypes) {
                 "application/x-tar",
                 "application/x-webarchive",
                 "application/x-webarchive-xml",
-                "application/gzip",
+                "application/x-gzip",
                 "application/x-7z-compressed",
                 "application/x-deb",
                 "application/x-rar-compressed"
@@ -198,6 +199,7 @@ private static void putKeys(int resId, String... mimeTypes) {
 
     public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
         if(path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
+        if(CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
 
         int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -184,11 +184,12 @@ protected Void doInBackground(Void... p) {
             if(extractService == null) return null;
 
             File f = new File(compressedPath);
+            String extractDirName = CompressedHelper.getFileName(f.getName());
 
             if (!compressedPath.equals(extractionPath)) {// custom extraction path not set, extract at default path
-                extractionPath = f.getParent() + "/" + f.getName().substring(0, f.getName().lastIndexOf("."));
+                extractionPath = f.getParent() + "/" + extractDirName;
             } else if (extractionPath.endsWith("/")) {
-                extractionPath = extractionPath + f.getName().substring(0, f.getName().lastIndexOf("."));
+                extractionPath = extractionPath + extractDirName;
             }
 
             try {

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -749,7 +749,7 @@ public void onNegative(MaterialDialog materialDialog) {
         if (m.getAppTheme().equals(AppTheme.DARK) || m.getAppTheme().equals(AppTheme.BLACK)) mat.theme(Theme.DARK);
         MaterialDialog b = mat.build();
 
-        if (!CompressedHelper.isFileExtractable(f)) {
+        if (!CompressedHelper.isFileExtractable(f.getPath())) {
             b.getActionButton(DialogAction.NEGATIVE).setEnabled(false);
         }
         b.show();

File: app/src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -22,6 +22,7 @@
 import android.support.annotation.DrawableRes;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import java.util.HashMap;
@@ -112,7 +113,7 @@ private static void putKeys(int resId, String... mimeTypes) {
                 "application/x-tar",
                 "application/x-webarchive",
                 "application/x-webarchive-xml",
-                "application/gzip",
+                "application/x-gzip",
                 "application/x-7z-compressed",
                 "application/x-deb",
                 "application/x-rar-compressed"
@@ -198,6 +199,7 @@ private static void putKeys(int resId, String... mimeTypes) {
 
     public static @DrawableRes int loadMimeIcon(String path, boolean isDirectory) {
         if(path.equals("..")) return R.drawable.ic_arrow_left_white_24dp;
+        if(CompressedHelper.isFileExtractable(path)) return R.drawable.ic_compressed_white_24dp;
 
         int type = getTypeOfFile(path, isDirectory);
 

File: app/src/main/java/com/amaze/filemanager/utils/files/FileUtils.java
Patch:
@@ -697,7 +697,7 @@ public static void openFile(final File f, final MainActivity m, SharedPreference
 
         if(f.getName().toLowerCase().endsWith(".apk")) {
             GeneralDialogCreation.showPackageDialog(sharedPrefs, f, m);
-        } else if (defaultHandler && CompressedHelper.isFileExtractable(f)) {
+        } else if (defaultHandler && CompressedHelper.isFileExtractable(f.getPath())) {
             GeneralDialogCreation.showArchiveDialog(f, m);
         } else if (defaultHandler && f.getName().toLowerCase().endsWith(".db")) {
             Intent intent = new Intent(m, DatabaseViewerActivity.class);

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -237,7 +237,7 @@ private void unzipEntry(@NonNull final Context context, ZipFile zipFile, ZipEntr
             BufferedInputStream inputStream = new BufferedInputStream(
                     zipFile.getInputStream(entry));
             BufferedOutputStream outputStream = new BufferedOutputStream(
-                    FileUtil.getOutputStream(outputFile, context, 0));
+                    FileUtil.getOutputStream(outputFile, context));
             try {
                 int len;
                 byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
@@ -268,7 +268,7 @@ private void unzipRAREntry(@NonNull final Context context, Archive zipFile, File
             BufferedInputStream inputStream = new BufferedInputStream(
                     zipFile.getInputStream(entry));
             BufferedOutputStream outputStream = new BufferedOutputStream(
-                    FileUtil.getOutputStream(outputFile, context, entry.getFullUnpackSize()));
+                    FileUtil.getOutputStream(outputFile, context));
             try {
                 int len;
                 byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];
@@ -296,7 +296,7 @@ private void unzipTAREntry(@NonNull final Context context, TarArchiveInputStream
             }
 
             BufferedOutputStream outputStream = new BufferedOutputStream(
-                    FileUtil.getOutputStream(outputFile, context, entry.getRealSize()));
+                    FileUtil.getOutputStream(outputFile, context));
             try {
                 int len;
                 byte buf[] = new byte[GenericCopyUtil.DEFAULT_BUFFER_SIZE];

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1075,7 +1075,7 @@ public void close() throws IOException {
                 break;
             default:
                 try {
-                    outputStream = FileUtil.getOutputStream(new File(path), context, length());
+                    outputStream = FileUtil.getOutputStream(new File(path), context);
                 } catch (Exception e) {
                     outputStream=null;
                     e.printStackTrace();

File: app/src/main/java/com/amaze/filemanager/utils/PreferenceUtils.java
Patch:
@@ -9,7 +9,6 @@
 public class PreferenceUtils {
 
     public static final String KEY_CURRENT_TAB = "current_tab";
-    public static final String KEY_PATH_COMPRESS = "zippath";
 
     public static final int DEFAULT_PRIMARY = 4;
     public static final int DEFAULT_ACCENT = 1;

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -184,7 +184,7 @@ public void onClick(View v) {
 
             case R.id.relative_layout_licenses:
                 LibsBuilder libsBuilder = new LibsBuilder()
-                        .withFields(R.string.class.getFields())
+                        .withLibraries("commonscompress", "apachemina", "volley")//Not autodetected for some reason
                         .withActivityTitle(getString(R.string.libraries))
                         .withAboutIconShown(true)
                         .withAboutVersionShownName(true)

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -521,6 +521,8 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             textView1.setOnClickListener(null);
             mode.setTitle(positions.size() + "");
             hideOption(R.id.openmulti, menu);
+            menu.findItem(R.id.all).setTitle(positions.size() == folder_count + file_count ?
+                    R.string.deselect_all : R.string.selectall);
 
             if (openMode != OpenMode.FILE) {
                 hideOption(R.id.addshortcut, menu);

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -116,7 +116,7 @@ public boolean onPreferenceClick(final Preference preference) {
             case PreferencesConstants.PREFERENCE_ICON_SKIN:
                 final ColorUsage usage = ColorUsage.fromString(preference.getKey());
                 if (usage != null) {
-                    ColorAdapter adapter = new ColorAdapter(getActivity(), ColorPreference.availableColors, usage);
+                    ColorAdapter adapter = new ColorAdapter(getActivity(), ColorPreference.getUniqueAvailableColors(getActivity()), usage);
 
                     GridView v = (GridView) getActivity().getLayoutInflater().inflate(R.layout.dialog_grid, null);
                     v.setAdapter(adapter);

File: app/src/main/java/com/amaze/filemanager/ui/views/WarnableTextInputLayout.java
Patch:
@@ -19,19 +19,20 @@ public class WarnableTextInputLayout extends TextInputLayout {
 
     public WarnableTextInputLayout(Context context, AttributeSet attrs) {
         super(context, attrs);
-        setErrorEnabled(true);
     }
 
     /**
      * Remove error or warning
      */
     public void removeError() {
         super.setError(null);
+        setErrorEnabled(false);
     }
 
     @Override
     public void setError(@Nullable CharSequence error) {
         if(isStyleWarning) {
+            setErrorEnabled(true);
             setErrorTextAppearance(R.style.error_inputTextLayout);
             isStyleWarning = false;
         }
@@ -41,6 +42,7 @@ public void setError(@Nullable CharSequence error) {
     public void setWarning(@StringRes int text) {
         if(!isStyleWarning) {
             removeError();
+            setErrorEnabled(true);
             setErrorTextAppearance(R.style.warning_inputTextLayout);
             isStyleWarning = true;
         }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -765,6 +765,9 @@ public static void showCompressDialog(final MainActivity m, final ArrayList<Hybr
 
         View dialogView = m.getLayoutInflater().inflate(R.layout.dialog_singleedittext, null);
         EditText etFilename = dialogView.findViewById(R.id.singleedittext_input);
+        etFilename.setHint(R.string.enterzipname);
+        etFilename.setText(".zip");
+        etFilename.setInputType(InputType.TYPE_CLASS_TEXT);
         WarnableTextInputLayout tilFilename = dialogView.findViewById(R.id.singleedittext_warnabletextinputlayout);
 
         a.customView(dialogView, false)

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -967,8 +967,8 @@ private static EncryptedEntry findEncryptedEntry(Context context, String path) t
     }
 
     public void updateTabWithDb(Tab tab) {
-        CURRENT_PATH = tab.getPath();
-        home = tab.getHome();
+        CURRENT_PATH = tab.path;
+        home = tab.home;
         loadlist(CURRENT_PATH, false, OpenMode.UNKNOWN);
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/application/LeakCanaryApplication.java
Patch:
@@ -1,13 +1,13 @@
 package com.amaze.filemanager.utils.application;
 
-import android.app.Application;
+import android.support.multidex.MultiDexApplication;
 
 /**
  * @author Emmanuel
  *         on 28/8/2017, at 18:12.
  */
 
-public class LeakCanaryApplication extends Application {
+public class LeakCanaryApplication extends MultiDexApplication {
 
     @Override
     public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -129,8 +129,6 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.encrypt:
                 final Intent encryptIntent = new Intent(context, EncryptService.class);
                 encryptIntent.putExtra(EncryptService.TAG_OPEN_MODE, rowItem.getMode().ordinal());
-                encryptIntent.putExtra(EncryptService.TAG_CRYPT_MODE,
-                        EncryptService.CryptEnum.ENCRYPT.ordinal());
                 encryptIntent.putExtra(EncryptService.TAG_SOURCE, rowItem.generateBaseFile());
 
                 final SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -22,8 +22,6 @@
  */
 public class FTPNotification extends BroadcastReceiver {
 
-    private static final int NOTIFICATION_ID = 2123;
-
     @Override
     public void onReceive(Context context, Intent intent) {
         switch(intent.getAction()){
@@ -96,7 +94,7 @@ private void createNotification(Context context, boolean noStopButton) {
         }
 
         // Pass Notification to NotificationManager
-        notificationManager.notify(NOTIFICATION_ID, notification);
+        notificationManager.notify(NotificationConstants.FTP_ID, notification);
     }
 
     private void removeNotification(Context context){

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -68,7 +68,7 @@ public MainActivityHelper(MainActivity mainActivity) {
         accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
     }
 
-    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, boolean move, Context contextc) {
+    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, Context contextc) {
         MaterialDialog.Builder mat=new MaterialDialog.Builder(contextc);
         mat.title(contextc.getString(R.string.operationunsuccesful));
         mat.theme(mainActivity.getAppTheme().getMaterialDialogTheme());

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -8,7 +8,7 @@
  * Base class to handle progress of services operation
  * Utilized for generation of notification,
  * talking to {@link ProcessViewerFragment} through
- * {@link CopyDataParcelable}
+ * {@link DatapointParcelable}
  *
  */
 public class ProgressHandler {

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -685,8 +685,10 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.all:
                     if (adapter.areAllChecked(CURRENT_PATH)) {
                         adapter.toggleChecked(false, CURRENT_PATH);
+                        item.setTitle(R.string.selectall);
                     } else {
                         adapter.toggleChecked(true, CURRENT_PATH);
+                        item.setTitle(R.string.deselect_all);
                     }
                     mode.invalidate();
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -129,8 +129,6 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.encrypt:
                 final Intent encryptIntent = new Intent(context, EncryptService.class);
                 encryptIntent.putExtra(EncryptService.TAG_OPEN_MODE, rowItem.getMode().ordinal());
-                encryptIntent.putExtra(EncryptService.TAG_CRYPT_MODE,
-                        EncryptService.CryptEnum.ENCRYPT.ordinal());
                 encryptIntent.putExtra(EncryptService.TAG_SOURCE, rowItem.generateBaseFile());
 
                 final SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -22,8 +22,6 @@
  */
 public class FTPNotification extends BroadcastReceiver {
 
-    private static final int NOTIFICATION_ID = 2123;
-
     @Override
     public void onReceive(Context context, Intent intent) {
         switch(intent.getAction()){
@@ -96,7 +94,7 @@ private void createNotification(Context context, boolean noStopButton) {
         }
 
         // Pass Notification to NotificationManager
-        notificationManager.notify(NOTIFICATION_ID, notification);
+        notificationManager.notify(NotificationConstants.FTP_ID, notification);
     }
 
     private void removeNotification(Context context){

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -68,7 +68,7 @@ public MainActivityHelper(MainActivity mainActivity) {
         accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
     }
 
-    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, boolean move, Context contextc) {
+    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, Context contextc) {
         MaterialDialog.Builder mat=new MaterialDialog.Builder(contextc);
         mat.title(contextc.getString(R.string.operationunsuccesful));
         mat.theme(mainActivity.getAppTheme().getMaterialDialogTheme());

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -8,7 +8,7 @@
  * Base class to handle progress of services operation
  * Utilized for generation of notification,
  * talking to {@link ProcessViewerFragment} through
- * {@link CopyDataParcelable}
+ * {@link DatapointParcelable}
  *
  */
 public class ProgressHandler {

File: app/src/main/java/com/amaze/filemanager/utils/PreferenceUtils.java
Patch:
@@ -4,7 +4,7 @@
 
 /**
  * Created by Vishal on 12-05-2015
- *      edited by Emmanuel Messulam <emmanuelbendavid@gmai.com>
+ *      edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  */
 public class PreferenceUtils {
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -685,8 +685,10 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.all:
                     if (adapter.areAllChecked(CURRENT_PATH)) {
                         adapter.toggleChecked(false, CURRENT_PATH);
+                        item.setTitle(R.string.selectall);
                     } else {
                         adapter.toggleChecked(true, CURRENT_PATH);
+                        item.setTitle(R.string.deselect_all);
                     }
                     mode.invalidate();
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -129,8 +129,6 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.encrypt:
                 final Intent encryptIntent = new Intent(context, EncryptService.class);
                 encryptIntent.putExtra(EncryptService.TAG_OPEN_MODE, rowItem.getMode().ordinal());
-                encryptIntent.putExtra(EncryptService.TAG_CRYPT_MODE,
-                        EncryptService.CryptEnum.ENCRYPT.ordinal());
                 encryptIntent.putExtra(EncryptService.TAG_SOURCE, rowItem.generateBaseFile());
 
                 final SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -22,8 +22,6 @@
  */
 public class FTPNotification extends BroadcastReceiver {
 
-    private static final int NOTIFICATION_ID = 2123;
-
     @Override
     public void onReceive(Context context, Intent intent) {
         switch(intent.getAction()){
@@ -96,7 +94,7 @@ private void createNotification(Context context, boolean noStopButton) {
         }
 
         // Pass Notification to NotificationManager
-        notificationManager.notify(NOTIFICATION_ID, notification);
+        notificationManager.notify(NotificationConstants.FTP_ID, notification);
     }
 
     private void removeNotification(Context context){

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -68,7 +68,7 @@ public MainActivityHelper(MainActivity mainActivity) {
         accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
     }
 
-    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, boolean move, Context contextc) {
+    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, Context contextc) {
         MaterialDialog.Builder mat=new MaterialDialog.Builder(contextc);
         mat.title(contextc.getString(R.string.operationunsuccesful));
         mat.theme(mainActivity.getAppTheme().getMaterialDialogTheme());

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -8,7 +8,7 @@
  * Base class to handle progress of services operation
  * Utilized for generation of notification,
  * talking to {@link ProcessViewerFragment} through
- * {@link CopyDataParcelable}
+ * {@link DatapointParcelable}
  *
  */
 public class ProgressHandler {

File: app/src/main/java/com/amaze/filemanager/utils/application/LeakCanaryApplication.java
Patch:
@@ -1,13 +1,13 @@
 package com.amaze.filemanager.utils.application;
 
-import android.app.Application;
+import android.support.multidex.MultiDexApplication;
 
 /**
  * @author Emmanuel
  *         on 28/8/2017, at 18:12.
  */
 
-public class LeakCanaryApplication extends Application {
+public class LeakCanaryApplication extends MultiDexApplication {
 
     @Override
     public void onCreate() {

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -685,8 +685,10 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.all:
                     if (adapter.areAllChecked(CURRENT_PATH)) {
                         adapter.toggleChecked(false, CURRENT_PATH);
+                        item.setTitle(R.string.selectall);
                     } else {
                         adapter.toggleChecked(true, CURRENT_PATH);
+                        item.setTitle(R.string.deselect_all);
                     }
                     mode.invalidate();
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -774,10 +774,10 @@ public static void showCompressDialog(final MainActivity m, final ArrayList<Hybr
             .title(m.getResources().getString(R.string.enterzipname))
             .positiveText(R.string.create)
             .positiveColor(accentColor).onPositive((materialDialog, dialogAction) -> {
-                if (materialDialog.getInputEditText().getText().toString().equals(".zip"))
+                if ("".equals(etFilename.getText().toString()))
                     Toast.makeText(m, m.getResources().getString(R.string.no_name), Toast.LENGTH_SHORT).show();
                 else {
-                    String name = current + "/" + materialDialog.getInputEditText().getText().toString();
+                    String name = current + "/" + etFilename.getText().toString();
                     m.mainActivityHelper.compressFiles(new File(name), b);
                 }
             }).negativeText(m.getResources().getString(R.string.cancel)).negativeColor(accentColor);

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -685,8 +685,10 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.all:
                     if (adapter.areAllChecked(CURRENT_PATH)) {
                         adapter.toggleChecked(false, CURRENT_PATH);
+                        item.setTitle(R.string.selectall);
                     } else {
                         adapter.toggleChecked(true, CURRENT_PATH);
+                        item.setTitle(R.string.deselect_all);
                     }
                     mode.invalidate();
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/CopyService.java
Patch:
@@ -112,7 +112,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentTitle(getResources().getString(R.string.copying))
                 .setSmallIcon(R.drawable.ic_content_copy_white_36dp);
 
-        NotificationConstants.setMetadata(c, mBuilder);
+        NotificationConstants.setMetadata(c, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.COPY_ID, mBuilder.build());
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/EncryptService.java
Patch:
@@ -77,7 +77,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         notificationBuilder.setContentTitle(getResources().getString(R.string.crypt_encrypting));
         notificationBuilder.setSmallIcon(R.drawable.ic_folder_lock_white_36dp);
 
-        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder);
+        NotificationConstants.setMetadata(getApplicationContext(), notificationBuilder, NotificationConstants.TYPE_NORMAL);
 
         startForeground(NotificationConstants.ENCRYPT_ID, notificationBuilder.build());
 
@@ -191,7 +191,7 @@ void generateNotification(ArrayList<HybridFile> failedOps) {
                     context.getString(R.string.crypt_encrypted).toLowerCase())))
             .setAutoCancel(true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         progressHandler.setCancelled(true);
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ExtractService.java
Patch:
@@ -112,7 +112,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentText(new File(file).getName())
                 .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp);
 
-        NotificationConstants.setMetadata(getApplicationContext(), mBuilder);
+        NotificationConstants.setMetadata(getApplicationContext(), mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.EXTRACT_ID, mBuilder.build());
 
         new DoWork(this, progressHandler, file, extractPath, entries).execute();

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -108,7 +108,7 @@ public int onStartCommand(Intent intent, int flags, final int startId) {
                 .setContentTitle(getResources().getString(R.string.compressing))
                 .setSmallIcon(R.drawable.ic_zip_box_grey600_36dp);
 
-        NotificationConstants.setMetadata(this, mBuilder);
+        NotificationConstants.setMetadata(this, mBuilder, NotificationConstants.TYPE_NORMAL);
         startForeground(NotificationConstants.ZIP_ID, mBuilder.build());
 
         b.putParcelableArrayList(KEY_COMPRESS_FILES, baseFiles);

File: app/src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -163,7 +163,7 @@ private static synchronized void init(final Context context) {
                 .setSmallIcon(R.drawable.ic_all_inclusive_white_36dp)
                 .setProgress(0, 0, true);
 
-        NotificationConstants.setMetadata(context, mBuilder);
+        NotificationConstants.setMetadata(context, mBuilder, NotificationConstants.TYPE_NORMAL);
 
         Runnable runnable = new Runnable() {
             @Override

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -16,6 +16,7 @@
 import android.support.v7.widget.AppCompatButton;
 import android.support.v7.widget.AppCompatEditText;
 import android.text.Editable;
+import android.text.InputType;
 import android.text.SpannableString;
 import android.text.TextUtils;
 import android.text.format.Formatter;
@@ -707,6 +708,7 @@ public static void showDecryptDialog(Context c, final MainActivity main, final I
         MaterialDialog.Builder builder = new MaterialDialog.Builder(c);
         builder.title(c.getString(R.string.crypt_decrypt));
         builder.input(c.getString(R.string.authenticate_password), "", false, (dialog, input) -> {});
+        builder.inputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
         builder.theme(appTheme.getMaterialDialogTheme());
         builder.positiveText(c.getString(R.string.ok));
         builder.negativeText(c.getString(R.string.cancel));

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -295,6 +295,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.all:
                     compressedExplorerAdapter.toggleChecked(true);
                     mode.invalidate();
+                    item.setTitle(item.getTitle().equals(getResources().getString(R.string.selectall)) ? R.string.deselect_all : R.string.selectall);
                     return true;
                 case R.id.ex:
                     Toast.makeText(getActivity(), getResources().getString(R.string.extracting), Toast.LENGTH_SHORT).show();

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -688,6 +688,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     } else {
                         adapter.toggleChecked(true, CURRENT_PATH);
                     }
+                    item.setTitle(item.getTitle().equals(getResources().getString(R.string.selectall)) ? R.string.deselect_all : R.string.selectall);
                     mode.invalidate();
 
                     return true;

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -129,8 +129,6 @@ public boolean onMenuItemClick(MenuItem item) {
             case R.id.encrypt:
                 final Intent encryptIntent = new Intent(context, EncryptService.class);
                 encryptIntent.putExtra(EncryptService.TAG_OPEN_MODE, rowItem.getMode().ordinal());
-                encryptIntent.putExtra(EncryptService.TAG_CRYPT_MODE,
-                        EncryptService.CryptEnum.ENCRYPT.ordinal());
                 encryptIntent.putExtra(EncryptService.TAG_SOURCE, rowItem.generateBaseFile());
 
                 final SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -22,8 +22,6 @@
  */
 public class FTPNotification extends BroadcastReceiver {
 
-    private static final int NOTIFICATION_ID = 2123;
-
     @Override
     public void onReceive(Context context, Intent intent) {
         switch(intent.getAction()){
@@ -96,7 +94,7 @@ private void createNotification(Context context, boolean noStopButton) {
         }
 
         // Pass Notification to NotificationManager
-        notificationManager.notify(NOTIFICATION_ID, notification);
+        notificationManager.notify(NotificationConstants.FTP_ID, notification);
     }
 
     private void removeNotification(Context context){

File: app/src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -68,7 +68,7 @@ public MainActivityHelper(MainActivity mainActivity) {
         accentColor = mainActivity.getColorPreference().getColor(ColorUsage.ACCENT);
     }
 
-    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, boolean move, Context contextc) {
+    public void showFailedOperationDialog(ArrayList<HybridFileParcelable> failedOps, Context contextc) {
         MaterialDialog.Builder mat=new MaterialDialog.Builder(contextc);
         mat.title(contextc.getString(R.string.operationunsuccesful));
         mat.theme(mainActivity.getAppTheme().getMaterialDialogTheme());

File: app/src/main/java/com/amaze/filemanager/utils/ProgressHandler.java
Patch:
@@ -8,7 +8,7 @@
  * Base class to handle progress of services operation
  * Utilized for generation of notification,
  * talking to {@link ProcessViewerFragment} through
- * {@link CopyDataParcelable}
+ * {@link DatapointParcelable}
  *
  */
 public class ProgressHandler {

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -361,7 +361,7 @@ public void onCreate(final Bundle savedInstanceState) {
         if (intent.getStringArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS) != null) {
             ArrayList<HybridFileParcelable> failedOps = intent.getParcelableArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS);
             if (failedOps != null) {
-                mainActivityHelper.showFailedOperationDialog(failedOps, intent.getBooleanExtra("move", false), this);
+                mainActivityHelper.showFailedOperationDialog(failedOps, this);
             }
         }
 
@@ -1949,7 +1949,7 @@ public void onNewIntent(Intent i) {
         } else if (i.getStringArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS) != null) {
             ArrayList<HybridFileParcelable> failedOps = i.getParcelableArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS);
             if (failedOps != null) {
-                mainActivityHelper.showFailedOperationDialog(failedOps, i.getBooleanExtra("move", false), this);
+                mainActivityHelper.showFailedOperationDialog(failedOps, this);
             }
         } else if (i.getCategories() != null && i.getCategories().contains(CLOUD_AUTHENTICATOR_GDRIVE)) {
 
@@ -2012,7 +2012,7 @@ public void onReceive(Context context, Intent i) {
             if (i.getStringArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS) != null) {
                 ArrayList<HybridFileParcelable> failedOps = i.getParcelableArrayListExtra(TAG_INTENT_FILTER_FAILED_OPS);
                 if (failedOps != null) {
-                    mainActivityHelper.showFailedOperationDialog(failedOps, i.getBooleanExtra("move", false), mainActivity);
+                    mainActivityHelper.showFailedOperationDialog(failedOps, mainActivity);
                 }
             }
         }

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -16,6 +16,7 @@
 import android.support.v7.widget.AppCompatButton;
 import android.support.v7.widget.AppCompatEditText;
 import android.text.Editable;
+import android.text.InputType;
 import android.text.SpannableString;
 import android.text.TextUtils;
 import android.text.format.Formatter;
@@ -707,6 +708,7 @@ public static void showDecryptDialog(Context c, final MainActivity main, final I
         MaterialDialog.Builder builder = new MaterialDialog.Builder(c);
         builder.title(c.getString(R.string.crypt_decrypt));
         builder.input(c.getString(R.string.authenticate_password), "", false, (dialog, input) -> {});
+        builder.inputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
         builder.theme(appTheme.getMaterialDialogTheme());
         builder.positiveText(c.getString(R.string.ok));
         builder.negativeText(c.getString(R.string.cancel));

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -135,7 +135,7 @@ public boolean onPreferenceClick(final Preference preference) {
                                 @Override
                                 public void onNeutral(MaterialDialog dialog) {
                                     super.onNeutral(dialog);
-                                    if (activity != null) activity.setChanged();
+                                    if (activity != null) activity.setRestartActivity();
                                     activity.getColorPreference()
                                             .setRes(usage, usage.getDefaultColor())
                                             .saveToPreferences(sharedPref);
@@ -172,7 +172,7 @@ private void switchSections() {
     }
 
     private void loadSection0() {
-        if(((PreferencesActivity) getActivity()).getChanged()) {
+        if(((PreferencesActivity) getActivity()).getRestartActivity()) {
             ((PreferencesActivity) getActivity()).restartActivity(getActivity());
         }
 
@@ -189,7 +189,7 @@ private void loadSection1() {
         invalidateColorPreference(selectedColors);
         selectedColors.setColorPreference(activity.getColorPreference(), activity.getAppTheme());
         selectedColors.setListener(() -> {
-            if (activity != null) activity.setChanged();
+            if (activity != null) activity.setRestartActivity();
             checkCustomization();
             invalidateEverything();
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -74,8 +74,6 @@ public void onResume() {
 
     @Override
     public boolean onPreferenceClick(final Preference preference) {
-        if (sharedPrefs != null) activity.setChanged();
-
         if (preference instanceof PathSwitchPreference) {
             PathSwitchPreference p = (PathSwitchPreference) preference;
             switch (p.getLastItemClicked()) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/QuickAccessPref.java
Patch:
@@ -56,7 +56,6 @@ public void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean onPreferenceClick(Preference preference) {
-        if (preferences != null) ((PreferencesActivity) getActivity()).setChanged();
         currentValue[prefPos.get(preference.getKey())] = ((SwitchPreference) preference).isChecked();
         TinyDB.putBooleanArray(preferences, KEY, currentValue);
         return true;

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -32,7 +32,6 @@
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
-import java.io.File;
 import java.util.ArrayList;
 
 /**
@@ -204,7 +203,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
             holder.date.setText(R.string.goback);
         } else {
             GlideApp.with(compressedExplorerFragment)
-                    .load(Icons.loadMimeIcon(rowItem.name))
+                    .load(Icons.loadMimeIcon(rowItem.name, rowItem.directory))
                     .into(holder.genericIcon);
 
             final StringBuilder stringBuilder = new StringBuilder(rowItem.name);
@@ -226,7 +225,7 @@ public void onBindViewHolder(final CompressedItemViewHolder holder, int position
                     holder.txtDesc.setText(Formatter.formatFileSize(context, rowItem.size));
                 holder.txtTitle.setText(rowItem.name.substring(rowItem.name.lastIndexOf("/") + 1));
                 if (compressedExplorerFragment.coloriseIcons) {
-                    ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(new File(rowItem.name)),
+                    ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(rowItem.name, rowItem.directory),
                             gradientDrawable, Color.parseColor(compressedExplorerFragment.iconskin));
                 } else gradientDrawable.setColor(Color.parseColor(compressedExplorerFragment.iconskin));
             }

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -39,7 +39,6 @@
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.bumptech.glide.integration.recyclerview.RecyclerViewPreloader;
 
-import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -570,7 +569,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                         if (rowItem.isDirectory) {
                             gradientDrawable.setColor(iconSkinColor);
                         } else {
-                            ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(new File(rowItem.desc)),
+                            ColorUtils.colorizeIcons(context, Icons.getTypeOfFile(rowItem.desc, rowItem.isDirectory),
                                     gradientDrawable, iconSkinColor);
                         }
                     } else gradientDrawable.setColor(iconSkinColor);

File: app/src/main/java/com/amaze/filemanager/adapters/data/LayoutElementParcelable.java
Patch:
@@ -54,8 +54,8 @@ public class LayoutElementParcelable implements Parcelable {
     public LayoutElementParcelable(String title, String path, String permissions,
                                    String symlink, String size, long longSize, boolean header,
                                    String date, boolean isDirectory, boolean useThumbs) {
-        filetype = Icons.getTypeOfFile(new File(path));
-        @DrawableRes int fallbackIcon = Icons.loadMimeIcon(path);
+        filetype = Icons.getTypeOfFile(path, isDirectory);
+        @DrawableRes int fallbackIcon = Icons.loadMimeIcon(path, isDirectory);
 
         if(useThumbs) {
             if (filetype == Icons.IMAGE || filetype == Icons.VIDEO || filetype == Icons.APK) {

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -510,7 +510,7 @@ public static boolean mkfile(final File file,Context context) throws IOException
             DocumentFile document = getDocumentFile(file.getParentFile(), true, context);
             // getDocumentFile implicitly creates the directory.
             try {
-                return document.createFile(MimeTypes.getMimeType(file), file.getName()) != null;
+                return document.createFile(MimeTypes.getMimeType(file.getPath(), file.isDirectory()), file.getName()) != null;
             } catch (Exception e) {
                 e.printStackTrace();
                 return false;

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/SshClientUtils.java
Patch:
@@ -244,7 +244,7 @@ public static void launchSftp(final HybridFileParcelable baseFile, final MainAct
                         File file = new File(SshClientUtils.extractRemotePathFrom(baseFile.getPath()));
                         Uri uri = Uri.parse(CloudStreamer.URL + Uri.fromFile(file).getEncodedPath());
                         Intent i = new Intent(Intent.ACTION_VIEW);
-                        i.setDataAndType(uri, MimeTypes.getMimeType(file));
+                        i.setDataAndType(uri, MimeTypes.getMimeType(baseFile.getPath(), baseFile.isDirectory()));
                         PackageManager packageManager = activity.getPackageManager();
                         List<ResolveInfo> resInfos = packageManager.queryIntentActivities(i, 0);
                         if (resInfos != null && resInfos.size() > 0)

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -132,7 +132,7 @@ public static void launchCloud(final HybridFileParcelable baseFile, final OpenMo
                         File file = new File(Uri.parse(CloudUtil.stripPath(serviceType, baseFile.getPath())).getPath());
                         Uri uri = Uri.parse(CloudStreamer.URL + Uri.fromFile(file).getEncodedPath());
                         Intent i = new Intent(Intent.ACTION_VIEW);
-                        i.setDataAndType(uri, MimeTypes.getMimeType(file));
+                        i.setDataAndType(uri, MimeTypes.getMimeType(baseFile.getPath(),baseFile.isDirectory()));
                         PackageManager packageManager = activity.getPackageManager();
                         List<ResolveInfo> resInfos = packageManager.queryIntentActivities(i, 0);
                         if (resInfos != null && resInfos.size() > 0)

File: app/src/main/java/com/amaze/filemanager/adapters/holders/ItemViewHolder.java
Patch:
@@ -4,6 +4,7 @@
 import android.view.View;
 import android.widget.ImageButton;
 import android.widget.ImageView;
+import android.widget.RelativeLayout;
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
@@ -31,6 +32,7 @@ public class ItemViewHolder extends RecyclerView.ViewHolder {
     public final ImageButton about;
     public final ImageView checkImageView;
     public final ImageView checkImageViewGrid;
+    public final RelativeLayout iconLayout;
 
     public ItemViewHolder(View view) {
         super(view);
@@ -48,6 +50,7 @@ public ItemViewHolder(View view) {
         checkImageView = view.findViewById(R.id.check_icon);
         genericIcon = view.findViewById(R.id.generic_icon);
         checkImageViewGrid = view.findViewById(R.id.check_icon_grid);
+        iconLayout = view.findViewById(R.id.icon_frame);
     }
 
 }

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -204,7 +204,7 @@ public <E> E doInBackground() {
                         switch (hFile.getMode()) {
                             case FILE:
                             case ROOT:
-                                if (!FileUtil.isWritable(new File(currentPath))) {
+                                if (!FileUtil.isWritable(new File(finalFilePath))) {
                                     AppConfig.toast(mainActivity, mainActivity.getResources().getString(R.string.not_allowed));
                                     return null;
                                 }

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -204,7 +204,7 @@ public <E> E doInBackground() {
                         switch (hFile.getMode()) {
                             case FILE:
                             case ROOT:
-                                if (!FileUtil.isWritable(new File(currentPath))) {
+                                if (!FileUtil.isWritable(new File(finalFilePath))) {
                                     AppConfig.toast(mainActivity, mainActivity.getResources().getString(R.string.not_allowed));
                                     return null;
                                 }

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -9,8 +9,8 @@
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
-import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
@@ -27,13 +27,13 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         // checking if theme should be set light/dark or automatic
-        if (getPrefs().getBoolean("random_checkbox", false)) {
+        if (getPrefs().getBoolean(PreferencesConstants.PREFERENCE_RANDOM_COLOR, false)) {
             getColorPreference().randomize().saveToPreferences(getPrefs());
         }
 
         setTheme();
 
-        rootMode = getPrefs().getBoolean(PreferenceUtils.KEY_ROOT, false);
+        rootMode = getPrefs().getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
 
         //requesting storage permissions
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M && checkStorage && !checkStoragePermission()) {

File: app/src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -46,6 +46,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.fragments.AppsListFragment;
+import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 import com.amaze.filemanager.utils.Utils;
@@ -173,7 +174,7 @@ private void showPopup(View v, final AppDataParcelable rowItem){
                         if ((Integer.valueOf(rowItem.data.substring(0,
                                 rowItem.data.indexOf("_"))) & ApplicationInfo.FLAG_SYSTEM) != 0) {
                             // system package
-                            if(app.Sp.getBoolean("rootmode",false)) {
+                            if(app.Sp.getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE,false)) {
                                 MaterialDialog.Builder builder1 = new MaterialDialog.Builder(app.getActivity());
                                 builder1.theme(utilsProvider.getAppTheme().getMaterialDialogTheme())
                                         .content(app.getResources().getString(R.string.unin_system_apk))

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -7,11 +7,12 @@
 import android.support.v4.provider.DocumentFile;
 import android.util.Log;
 
+import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.fragments.MainFragment;
-import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
+import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
@@ -79,7 +80,7 @@ public void generateMode(Context context) {
         } else if(context == null) {
             mode = OpenMode.FILE;
         } else {
-            boolean rootmode = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("rootMode", false);
+            boolean rootmode = PreferenceManager.getDefaultSharedPreferences(context).getBoolean(PreferencesConstants.PREFERENCE_ROOTMODE, false);
             if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
                 mode = OpenMode.FILE;
                 if (rootmode && !getFile().canRead()) {

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -34,6 +34,7 @@
  * Created by Arpit on 21-06-2015.
  */
 public class ColorPref extends PreferenceFragment implements Preference.OnPreferenceClickListener {
+
     private MaterialDialog dialog;
 
     SharedPreferences sharedPref;
@@ -49,7 +50,7 @@ public void onCreate(Bundle savedInstanceState) {
         activity = (PreferencesActivity) getActivity();
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
 
-        final CheckBox checkBoxPreference = (CheckBox) findPreference("random_checkbox");
+        final CheckBox checkBoxPreference = (CheckBox) findPreference(PreferencesConstants.PREFERENCE_RANDOM_COLOR);
         checkBoxPreference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {
@@ -58,7 +59,7 @@ public boolean onPreferenceClick(Preference preference) {
                 return true;
             }
         });
-        CheckBox preference8 = (CheckBox) findPreference("colorednavigation");
+        CheckBox preference8 = (CheckBox) findPreference(PreferencesConstants.PREFERENCE_COLORED_NAVIGATION);
         preference8.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/AppBar.java
Patch:
@@ -7,6 +7,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 
 import static android.os.Build.VERSION.SDK_INT;
 
@@ -41,7 +42,7 @@ public AppBar(MainActivity a, SharedPreferences sharedPref, SearchView.SearchLis
         /* For SearchView, see onCreateOptionsMenu(Menu menu)*/
         TOOLBAR_START_INSET = toolbar.getContentInsetStart();
 
-        if (!sharedPref.getBoolean("intelliHideToolbar", true)) {
+        if (!sharedPref.getBoolean(PreferencesConstants.PREFERENCE_INTELLI_HIDE_TOOLBAR, true)) {
             AppBarLayout.LayoutParams params = (AppBarLayout.LayoutParams) toolbar.getLayoutParams();
             params.setScrollFlags(0);
             appbarLayout.setExpanded(true, true);

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -25,10 +25,10 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.fragments.CompressedExplorerFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.TabFragment;
-import com.amaze.filemanager.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
+import com.amaze.filemanager.fragments.preference_fragments.PreferencesConstants;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.utils.BottomBarButtonPath;
 import com.amaze.filemanager.utils.MainActivityHelper;
@@ -119,7 +119,7 @@ public void onFinish() {
             }
         };
 
-        allowChangePaths = mainActivity.get().getPrefs().getBoolean(PrefFrag.PREFERENCE_CHANGEPATHS, false);
+        allowChangePaths = mainActivity.get().getPrefs().getBoolean(PreferencesConstants.PREFERENCE_CHANGEPATHS, false);
 
         gestureDetector = new GestureDetector(a.getApplicationContext(), new GestureDetector.SimpleOnGestureListener() {
             @Override

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamer.java
Patch:
@@ -76,7 +76,7 @@ public CloudStreamServer.Response serve(String uri, String method, Properties he
                         }
                     }
                 }
-                Log.d("Explorer", "Request: " + range + " from: " + startFrom + ", to: " + endAt);
+                Log.d(CloudUtil.TAG, "Request: " + range + " from: " + startFrom + ", to: " + endAt);
 
                 // Change return code and add Content-Range header when skipping
                 // is requested
@@ -93,10 +93,10 @@ public CloudStreamServer.Response serve(String uri, String method, Properties he
                         long newLen = fileLen - startFrom;
                         if (newLen < 0)
                             newLen = 0;
-                        Log.d("Explorer", "start=" + startFrom + ", endAt=" + endAt + ", newLen=" + newLen);
+                        Log.d(CloudUtil.TAG, "start=" + startFrom + ", endAt=" + endAt + ", newLen=" + newLen);
                         final long dataLen = newLen;
                         source.moveTo(startFrom);
-                        Log.d("Explorer", "Skipped " + startFrom + " bytes");
+                        Log.d(CloudUtil.TAG, "Skipped " + startFrom + " bytes");
 
                         res = new CloudStreamServer.Response(HTTP_PARTIALCONTENT, source.getMimeType(), source);
                         res.addHeader("Content-length", "" + dataLen);

File: app/src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -33,6 +33,8 @@
 
 public class CloudUtil {
 
+    public static final String TAG = "Explorer";
+
     /**
      * @deprecated use getCloudFiles()
      */

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -12,6 +12,7 @@
 import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
+import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OnFileFound;
@@ -79,7 +80,7 @@ public void generateMode(Context context) {
         } else if(context == null) {
             mode = OpenMode.FILE;
         } else {
-            boolean rootmode = PreferenceManager.getDefaultSharedPreferences(context).getBoolean("rootMode", false);
+            boolean rootmode = PreferenceManager.getDefaultSharedPreferences(context).getBoolean(PrefFrag.PREFERENCE_ROOTMODE, false);
             if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
                 mode = OpenMode.FILE;
                 if (rootmode && !getFile().canRead()) {

File: app/src/main/java/com/amaze/filemanager/filesystem/HybridFile.java
Patch:
@@ -1025,12 +1025,12 @@ public LayoutElementParcelable generateLayoutElement(MainFragment mainFragment,
 
                     layoutElement = new LayoutElementParcelable(path, RootHelper.parseFilePermission(file),
                             "", folderSize() + "", 0, true,
-                            false, file.lastModified() + "", !mainFragment.IS_LIST, mainFragment.SHOW_THUMBS);
+                            false, file.lastModified() + "", mainFragment.SHOW_THUMBS);
                 } else {
                     layoutElement = new LayoutElementParcelable(
                             file.getPath(), RootHelper.parseFilePermission(file),
                             file.getPath(), file.length() + "", file.length(), false,
-                            false, file.lastModified() + "", !mainFragment.IS_LIST, mainFragment.SHOW_THUMBS);
+                            false, file.lastModified() + "", mainFragment.SHOW_THUMBS);
                 }
                 layoutElement.setMode(mode);
                 return layoutElement;

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -103,11 +103,11 @@ public BottomBar(AppBar appbar, MainActivity a) {
         buttonRoot.setLayoutParams(buttonParams);
 
         buttonStorage = new ImageButton(a);
-        buttonStorage.setImageDrawable(a.getResources().getDrawable(R.drawable.ic_sd_storage_white_56dp));
+        buttonStorage.setImageDrawable(a.getResources().getDrawable(R.drawable.ic_sd_storage_white_24dp));
         buttonStorage.setBackgroundColor(Color.TRANSPARENT);
         buttonStorage.setLayoutParams(buttonParams);
 
-        arrow = mainActivity.get().getResources().getDrawable(R.drawable.abc_ic_ab_back_holo_dark);
+        arrow = mainActivity.get().getResources().getDrawable(R.drawable.ic_keyboard_arrow_right_white_24dp);
 
         timer = new CountDownTimer(5000, 1000) {
             @Override

File: app/src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -113,9 +113,7 @@
 import com.amaze.filemanager.ui.dialogs.RenameBookmark.BookmarkCallback;
 import com.amaze.filemanager.ui.dialogs.SmbConnectDialog;
 import com.amaze.filemanager.ui.dialogs.SmbConnectDialog.SmbConnectionListener;
-import com.amaze.filemanager.ui.drawer.EntryItem;
 import com.amaze.filemanager.ui.drawer.Item;
-import com.amaze.filemanager.ui.drawer.SectionItem;
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout;
 import com.amaze.filemanager.ui.views.appbar.AppBar;

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -499,7 +499,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             if (!getMainActivity().isDrawerLocked) {
 
                 getMainActivity().mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNDEFINED,
-                        getMainActivity().mDrawerLayout);
+                        getMainActivity().mDrawerLinear);
             }
             return true;
         }
@@ -758,7 +758,7 @@ public void onDestroyActionMode(ActionMode mode) {
 
             if (!getMainActivity().isDrawerLocked) {
                 getMainActivity().mDrawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_UNLOCKED,
-                        getMainActivity().mDrawerLayout);
+                        getMainActivity().mDrawerLinear);
             }
         }
     };

File: app/src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -184,8 +184,6 @@ else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK))
                 int accentColor = m.getColorPreference().getColor(ColorUsage.ACCENT);
                 if (utilsProvider.getAppTheme().equals(AppTheme.LIGHT)) {
                     view.setBackgroundColor(Color.parseColor("#ffeeeeee"));
-                } else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK)) {
-                    view.setBackgroundColor(Color.BLACK);
                 } else {
                     view.setBackgroundColor(Color.parseColor("#ff424242"));
                 }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1054,7 +1054,7 @@ void initNoFileLayout() {
             ((ImageView) nofilesview.findViewById(R.id.image)).setColorFilter(Color.parseColor("#666666"));
         } else if (utilsProvider.getAppTheme().equals(AppTheme.BLACK)) {
             nofilesview.setBackgroundColor(Utils.getColor(getContext(), android.R.color.black));
-            ((TextView) nofilesview.findViewById(R.id.nofiletext)).setTextColor(Color.BLACK);
+            ((TextView) nofilesview.findViewById(R.id.nofiletext)).setTextColor(Color.WHITE);
         } else {
             nofilesview.setBackgroundColor(Utils.getColor(getContext(), R.color.holo_dark_background));
             ((TextView) nofilesview.findViewById(R.id.nofiletext)).setTextColor(Color.WHITE);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -91,7 +91,7 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = Sp.getBoolean("colorednavigation", true);
+            boolean colourednavigation = Sp.getBoolean("colorednavigation", false);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -91,7 +91,7 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = Sp.getBoolean("colorednavigation", true);
+            boolean colourednavigation = Sp.getBoolean("colorednavigation", false);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -75,7 +75,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(true);
         MainActivity mainActivity = (MainActivity) getActivity();
         mainActivity.getAppbar().setTitle(R.string.apps);
-        mainActivity.floatingActionButton.hideMenuButton(true);
+        mainActivity.floatingActionButton.getMenuButton().hide();
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         vl = getListView();

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -335,7 +335,7 @@ public void onDestroyView() {
     public void onResume() {
         super.onResume();
 
-        mainActivity.floatingActionButton.hideMenuButton(true);
+        mainActivity.floatingActionButton.getMenuButton().hide();
         Intent intent = new Intent(getActivity(), ExtractService.class);
         getActivity().bindService(intent, mServiceConnection, 0);
     }

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -125,7 +125,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
         mainActivity.getAppbar().setTitle(R.string.ftp);
-        mainActivity.floatingActionButton.hideMenuButton(true);
+        mainActivity.floatingActionButton.getMenuButton().hide();
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -477,7 +477,7 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
             mode.setCustomView(actionModeView);
 
             getMainActivity().setPagingEnabled(false);
-            getMainActivity().floatingActionButton.hideMenuButton(true);
+            getMainActivity().floatingActionButton.getMenuButton().hide();
 
             // translates the drawable content down
             // if (getMainActivity().isDrawerLocked) getMainActivity().translateDrawerList(true);
@@ -748,7 +748,7 @@ public void onDestroyActionMode(ActionMode mode) {
             // translates the drawer content up
             //if (getMainActivity().isDrawerLocked) getMainActivity().translateDrawerList(false);
 
-            getMainActivity().floatingActionButton.showMenuButton(true);
+            getMainActivity().floatingActionButton.getMenuButton().show();
             if (!results) adapter.toggleChecked(false, CURRENT_PATH);
             else adapter.toggleChecked(false);
             getMainActivity().setPagingEnabled(true);

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -95,7 +95,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
             rootView.setBackgroundResource((R.color.cardView_background));
         mainActivity.updateViews(new ColorDrawable(primaryColor));
         mainActivity.getAppbar().setTitle(R.string.process_viewer);
-        mainActivity.floatingActionButton.hideMenuButton(true);
+        mainActivity.floatingActionButton.getMenuButton().hide();
         sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
         mainActivity.supportInvalidateOptionsMenu();
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -338,7 +338,7 @@ private ArrayList<LayoutElementParcelable> listDocs() {
             } while (cursor.moveToNext());
         }
         cursor.close();
-        Collections.sort(songs, (lhs, rhs) -> -1 * Long.valueOf(lhs.getDate1()).compareTo(rhs.getDate1()));
+        Collections.sort(songs, (lhs, rhs) -> -1 * Long.valueOf(lhs.date).compareTo(rhs.date));
         if (songs.size() > 20)
             for (int i = songs.size() - 1; i > 20; i--) {
                 songs.remove(i);
@@ -414,7 +414,7 @@ private ArrayList<LayoutElementParcelable> listRecentFiles() {
             } while (cursor.moveToNext());
         }
         cursor.close();
-        Collections.sort(songs, (lhs, rhs) -> -1 * Long.valueOf(lhs.getDate1()).compareTo(rhs.getDate1()));
+        Collections.sort(songs, (lhs, rhs) -> -1 * Long.valueOf(lhs.date).compareTo(rhs.date));
         if (songs.size() > 20)
             for (int i = songs.size() - 1; i > 20; i--) {
                 songs.remove(i);

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -51,7 +51,7 @@ public void handleMessage(Message msg) {
                 break;
             case CustomFileObserver.DELETED_ITEM:
                 for (int i = 0; i < main.getElementsList().size(); i++) {
-                    File currentFile = new File(main.getElementsList().get(i).getDesc());
+                    File currentFile = new File(main.getElementsList().get(i).desc);
 
                     if (currentFile.getName().equals(path)) {
                         main.getElementsList().remove(i);

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -292,7 +292,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
 
                     String[] dirs = new String[compressedExplorerAdapter.getCheckedItemPositions().size()];
                     for (int i = 0; i < dirs.length; i++) {
-                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).getName();
+                        dirs[i] = elements.get(compressedExplorerAdapter.getCheckedItemPositions().get(i)).name;
                     }
 
                     compressedInterface.decompress(null, dirs);
@@ -417,9 +417,9 @@ private void createViews(ArrayList<CompressedObjectParcelable> items, String dir
         folder = 0;
         file = 0;
         for (CompressedObjectParcelable item : items) {
-            if(item.getType() == CompressedObjectParcelable.TYPE_GOBACK) continue;
+            if(item.type == CompressedObjectParcelable.TYPE_GOBACK) continue;
             
-            if (item.isDirectory()) folder++;
+            if (item.directory) folder++;
             else file++;
         }
 

File: app/src/main/java/com/amaze/filemanager/utils/ComputerParcelable.java
Patch:
@@ -8,8 +8,8 @@
  */
 public class ComputerParcelable implements Parcelable {
 
-    public String addr;
-    public String name;
+    public final String addr;
+    public final String name;
 
     public ComputerParcelable(String str, String str2) {
         this.name = str;

File: app/src/main/java/com/amaze/filemanager/adapters/CompressedExplorerAdapter.java
Patch:
@@ -23,7 +23,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedInterface;
 import com.amaze.filemanager.fragments.CompressedExplorerFragment;
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.ui.icons.Icons;
 import com.amaze.filemanager.ui.views.CircleGradientDrawable;
 import com.amaze.filemanager.utils.OpenMode;

File: app/src/main/java/com/amaze/filemanager/adapters/data/CompressedObjectParcelable.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.ui;
+package com.amaze.filemanager.adapters.data;
 
 import android.os.Parcel;
 import android.os.Parcelable;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -71,7 +71,6 @@ public class LoadFilesListTask extends AsyncTask<Void, Void, Pair<OpenMode, Arra
     private MainFragment ma;
     private Context c;
     private OpenMode openmode;
-    private Drawable lockBitmapDrawable = null;
     private DataUtils dataUtils = DataUtils.getInstance();
     private OnAsyncTaskFinished<Pair<OpenMode, ArrayList<LayoutElementParcelable>>> listener;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/RarHelperTask.java
Patch:
@@ -3,7 +3,7 @@
 import android.os.AsyncTask;
 
 import com.amaze.filemanager.filesystem.compressed.RarHelper;
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.github.junrar.Archive;
 import com.github.junrar.exception.RarException;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/ZipHelperTask.java
Patch:
@@ -4,7 +4,7 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
 import java.io.File;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/CompressedInterface.java
Patch:
@@ -1,6 +1,6 @@
 package com.amaze.filemanager.filesystem.compressed;
 
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 
 import java.util.ArrayList;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/RarHelper.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.amaze.filemanager.asynchronous.asynctasks.RarHelperTask;
 import com.amaze.filemanager.asynchronous.services.ExtractService;
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 import com.github.junrar.rarfile.FileHeader;

File: app/src/main/java/com/amaze/filemanager/filesystem/compressed/ZipHelper.java
Patch:
@@ -5,7 +5,7 @@
 
 import com.amaze.filemanager.asynchronous.asynctasks.ZipHelperTask;
 import com.amaze.filemanager.asynchronous.services.ExtractService;
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -55,7 +55,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.compressed.CompressedHelper;
 import com.amaze.filemanager.filesystem.compressed.CompressedInterface;
-import com.amaze.filemanager.ui.CompressedObjectParcelable;
+import com.amaze.filemanager.adapters.data.CompressedObjectParcelable;
 import com.amaze.filemanager.ui.views.DividerItemDecoration;
 import com.amaze.filemanager.ui.views.FastScroller;
 import com.amaze.filemanager.utils.BottomBarButtonPath;

File: app/src/main/java/com/amaze/filemanager/utils/GlideConstants.java
Patch:
@@ -7,7 +7,6 @@
 
 public class GlideConstants {
 
-    public static final int HEIGHT = 40, WIDTH = 40;
     public static final int MAX_PRELOAD_FILES = 50;
     public static final int MAX_PRELOAD_APPSADAPTER = 100;
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/handlers/FileHandler.java
Patch:
@@ -70,7 +70,7 @@ public void handleMessage(Message msg) {
                 main.reloadListElements(true, main.results, !main.IS_LIST);
             } else {
                 // we already have some elements in list view, invalidate the adapter
-                ((RecyclerAdapter) listView.getAdapter()).setItems(main.getElementsList());
+                ((RecyclerAdapter) listView.getAdapter()).setItems(listView, main.getElementsList());
             }
         } else {
             // there was no list view, means the directory was empty

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/CustomSshJConfig.java
Patch:
@@ -44,7 +44,9 @@ public class CustomSshJConfig extends DefaultConfig
     public static void init() {
         Security.removeProvider("BC");
         Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(),
-    Security.getProviders().length+1);
+                Security.getProviders().length+1);
+        Security.insertProviderAt(new org.bouncycastle.jce.provider.BouncyCastleProvider(),
+                Security.getProviders().length+1);
     }
 
     // don't add ECDSA

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -12,6 +12,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.activities.superclasses.ThemedActivity;
+import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.asynchronous.services.EncryptService;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.PasteHelper;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -42,7 +42,7 @@
 import com.amaze.filemanager.fragments.AppsListFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
-import com.amaze.filemanager.ui.LayoutElementParcelable;
+import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.FingerprintHandler;
 import com.amaze.filemanager.utils.OpenMode;

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -23,7 +23,7 @@
  * Created by vishal on 7/12/16 edited by Emmanuel Messulam<emmanuelbendavid@gmail.com>
  */
 
-public class AppConfig extends LeakCanaryApplication {
+public class AppConfig extends GlideApplication {
 
     public static final String TAG = AppConfig.class.getSimpleName();
 

File: app/src/main/java/com/amaze/filemanager/utils/application/LeakCanaryApplication.java
Patch:
@@ -2,8 +2,6 @@
 
 import android.app.Application;
 
-import com.squareup.leakcanary.LeakCanary;
-
 /**
  * @author Emmanuel
  *         on 28/8/2017, at 18:12.
@@ -13,7 +11,8 @@ public class LeakCanaryApplication extends Application {
 
     @Override
     public void onCreate() {
-        super.onCreate();/*
+        super.onCreate();
+        /*
         if (LeakCanary.isInAnalyzerProcess(this)) {
             // This process is dedicated to LeakCanary for heap analysis.
             // You should not init your app in this process.

File: app/src/main/java/com/amaze/filemanager/utils/files/FileListSorter.java
Patch:
@@ -19,7 +19,7 @@
 
 package com.amaze.filemanager.utils.files;
 
-import com.amaze.filemanager.ui.LayoutElementParcelable;
+import com.amaze.filemanager.adapters.data.LayoutElementParcelable;
 
 import java.util.Comparator;
 

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/CustomSshJConfig.java
Patch:
@@ -41,7 +41,7 @@ public class CustomSshJConfig extends DefaultConfig
 {
     // This is where we different from the original AndroidConfig. Found it only work if we remove
     // BouncyCastle before registering SpongyCastle's provider
-    static {
+    public static void init() {
         Security.removeProvider("BC");
         Security.insertProviderAt(new org.spongycastle.jce.provider.BouncyCastleProvider(),
     Security.getProviders().length+1);

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -100,6 +100,7 @@
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.PasteHelper;
 import com.amaze.filemanager.filesystem.RootHelper;
+import com.amaze.filemanager.filesystem.ssh.CustomSshJConfig;
 import com.amaze.filemanager.fragments.AppsListFragment;
 import com.amaze.filemanager.fragments.CloudSheetFragment;
 import com.amaze.filemanager.fragments.CloudSheetFragment.CloudConnectionCallbacks;
@@ -307,7 +308,8 @@ public void onCreate(final Bundle savedInstanceState) {
         initializeInteractiveShell();
 
         dataUtils.registerOnDataChangedListener(this);
-        
+
+        CustomSshJConfig.init();
         AppConfig.setActivityContext(con);
 
         setContentView(R.layout.main_toolbar);

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -33,6 +33,7 @@
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
+import java.io.File;
 import java.util.ArrayList;
 
 /**
@@ -631,7 +632,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                 holder.checkImageViewGrid.setVisibility(View.INVISIBLE);
                 GlideApp.with(mainFrag).load(rowItem.getDrawableId()).into(holder.genericIcon);
 
-                if (Icons.isPicture((rowItem.getDesc().toLowerCase())) || Icons.isVideo(rowItem.getDesc().toLowerCase())) {
+                if (Icons.isPicture(new File(rowItem.getDesc().toLowerCase())) || Icons.isVideo(new File(rowItem.getDesc().toLowerCase()))) {
                     holder.genericIcon.setColorFilter(null);
                     holder.imageView1.setVisibility(View.VISIBLE);
                     holder.imageView1.setImageDrawable(null);
@@ -640,7 +641,7 @@ public void onBindViewHolder(final RecyclerView.ViewHolder vholder, int p) {
                     GlideApp.with(mainFrag).clear(holder.imageView1);
                     GlideApp.with(mainFrag).load(rowItem.getDesc()).into(holder.imageView1)
                             .onLoadFailed(Icons.loadFailedThumbForFile(context, rowItem.getDesc()));
-                } else if (Icons.isApk((rowItem.getDesc()))) {
+                } else if (Icons.isApk(new File(rowItem.getDesc()))) {
                     holder.genericIcon.setColorFilter(null);
                     GlideApp.with(mainFrag).clear(holder.genericIcon);
                     GlideApp.with(mainFrag).load(rowItem.getDesc()).into(holder.genericIcon)

File: app/src/main/java/com/amaze/filemanager/filesystem/ssh/tasks/PemToKeyPairTask.java
Patch:
@@ -21,6 +21,7 @@
 
 package com.amaze.filemanager.filesystem.ssh.tasks;
 
+import android.net.Uri;
 import android.os.AsyncTask;
 import android.support.annotation.NonNull;
 import android.util.Log;
@@ -44,6 +45,7 @@
  *
  * @see JcaPEMKeyConverter
  * @see KeyProvider
+ * @see com.amaze.filemanager.filesystem.ssh.SshConnectionPool#create(Uri)
  * @see net.schmizz.sshj.SSHClient#authPublickey(String, KeyProvider...)
  */
 public class PemToKeyPairTask extends AsyncTask<Void, Void, KeyPair>

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/GenerateHashes.java
Patch:
@@ -56,7 +56,7 @@ protected String[] doInBackground(Void... params) {
 
         try {
             if (file.isSftp()) {
-                md5 = SshClientUtils.execute(new SshClientSessionTemplate<String>(file.getPath()) {
+                md5 = SshClientUtils.execute(new SshClientSessionTemplate(file.getPath()) {
                     @Override
                     public String execute(Session session) throws IOException {
                         Session.Command cmd = session.exec(String.format("md5sum -b \"%s\" | cut -c -32", SshClientUtils.extractRemotePathFrom(file.getPath())));
@@ -70,7 +70,7 @@ public String execute(Session session) throws IOException {
                         }
                     }
                 });
-                sha256 = SshClientUtils.execute(new SshClientSessionTemplate<String>(file.getPath()) {
+                sha256 = SshClientUtils.execute(new SshClientSessionTemplate(file.getPath()) {
                     @Override
                     public String execute(Session session) throws IOException {
                         Session.Command cmd = session.exec(String.format("sha256sum -b \"%s\" | cut -c -64", SshClientUtils.extractRemotePathFrom(file.getPath())));

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -302,7 +302,7 @@ public List<String[]> getSftpList()
 
     public String getSshHostKey(String uri)
     {
-        uri = SshClientUtils.decryptSshPathAsNecessary(uri);
+        uri = SshClientUtils.encryptSshPathAsNecessary(uri);
         if(uri != null)
         {
             SQLiteDatabase sqLiteDatabase = getReadableDatabase();
@@ -413,7 +413,7 @@ public void removeSftpPath(String name, String path) {
             }
 
             sqLiteDatabase.delete(TABLE_SFTP, COLUMN_NAME + " = ? AND " + COLUMN_PATH + " = ?",
-                    new String[] {name, SmbUtil.getSmbEncryptedPath(context, path)});
+                    new String[] {name, SshClientUtils.encryptSshPathAsNecessary(path)});
 
         }
         catch (CryptException e)

File: app/src/main/java/com/amaze/filemanager/filesystem/HFile.java
Patch:
@@ -76,7 +76,7 @@ public HFile(OpenMode mode, String path, String name, boolean isDirectory) {
     public void generateMode(Context context) {
         if (path.startsWith("smb://")) {
             mode = OpenMode.SMB;
-        } else if (path.startsWith("scp://") || path.startsWith("sftp://")) {
+        } else if (path.startsWith("ssh://")) {
             mode = OpenMode.SFTP;
         } else if (path.startsWith(OTGUtil.PREFIX_OTG)) {
             mode = OpenMode.OTG;

File: app/src/main/java/com/amaze/filemanager/services/ssh/SshConnectionPool.java
Patch:
@@ -11,9 +11,9 @@
 
 public class SshConnectionPool
 {
-    private static final String TAG = "SshConnectionPool";
+    public static final int SSH_DEFAULT_PORT = 22;
 
-    private static final int SSH_DEFAULT_PORT = 22;
+    private static final String TAG = "SshConnectionPool";
 
     private static SshConnectionPool instance = null;
 

File: app/src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -88,7 +88,7 @@ public void onCreate(SQLiteDatabase db) {
                 + COLUMN_ID + " INTEGER PRIMARY KEY,"
                 + COLUMN_NAME + " TEXT,"
                 + COLUMN_PATH + " TEXT,"
-                + COLUMN_PRIVATE_KEY + " TEXT,"
+                + COLUMN_PRIVATE_KEY + " TEXT"
                 + ")";
 
         db.execSQL(queryHistory);

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -84,7 +84,7 @@ public void onCreate(Bundle savedInstanceState) {
             getWindow().getDecorView().setBackgroundColor(Utils.getColor(this, R.color.holo_dark_background));
         }
         setContentView(R.layout.activity_db_viewer);
-        toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
+        toolbar = findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
         if (SDK_INT >= 21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription
@@ -121,7 +121,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         path = getIntent().getStringExtra("path");
         pathFile = new File(path);
-        listView = (ListView) findViewById(R.id.listView);
+        listView = findViewById(R.id.listView);
 
         load(pathFile);
         listView.setOnItemClickListener((parent, view, position, id) -> {

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -71,7 +71,7 @@ public void onCreate(Bundle savedInstanceState) {
         SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
-        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        Toolbar toolbar = findViewById(R.id.toolbar);
         if (SDK_INT >= 21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze",
                     ((BitmapDrawable) getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(),

File: app/src/main/java/com/amaze/filemanager/ui/views/FastScroller.java
Patch:
@@ -67,7 +67,7 @@ private int getHeightMinusPadding() {
     private void initialise(@NonNull Context context) {
         setClipChildren(false);
         inflate(context, R.layout.fastscroller, this);
-        this.handle = (ImageView) findViewById(R.id.scroll_handle);
+        this.handle = findViewById(R.id.scroll_handle);
         this.bar = findViewById(R.id.scroll_bar);
         this.handle.setEnabled(true);
         setPressedHandleColor(Utils.getColor(getContext(), R.color.accent_blue));

File: app/src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -588,7 +588,7 @@ private void initializeInteractiveShell() {
                     closeInteractiveShell();
                     sharedPref.edit().putBoolean(PreferenceUtils.KEY_ROOT, false).apply();
                 }
-            } catch (RootNotPermittedException e) {
+            } catch (ShellNotRunningException e) {
                 e.printStackTrace();
                 sharedPref.edit().putBoolean(PreferenceUtils.KEY_ROOT, false).apply();
             }*/

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -40,7 +40,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.superclasses.ThemedActivity;
-import com.amaze.filemanager.exceptions.RootNotPermittedException;
+import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.fragments.DbViewerFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.utils.PreferenceUtils;
@@ -159,7 +159,7 @@ private void load(final File file) {
                     RootUtils.copy(pathFile.getPath(),
                             new File(file1.getPath(), file.getName()).getPath());
                     pathFile = new File(file1.getPath(), file.getName());
-                } catch (RootNotPermittedException e) {
+                } catch (ShellNotRunningException e) {
                     e.printStackTrace();
                 }
                 delete = true;

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DeleteTask.java
Patch:
@@ -32,7 +32,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.CryptHandler;
-import com.amaze.filemanager.exceptions.RootNotPermittedException;
+import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.fragments.CompressedExplorerFragment;
 import com.amaze.filemanager.utils.DataUtils;
@@ -130,7 +130,7 @@ protected Boolean doInBackground(ArrayList<HybridFileParcelable>... p1) {
             for(HybridFileParcelable a : files)
                 try {
                     (a).delete(cd, rootMode);
-                } catch (RootNotPermittedException e) {
+                } catch (ShellNotRunningException e) {
                     e.printStackTrace();
                     b = false;
                 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/MoveFiles.java
Patch:
@@ -27,7 +27,7 @@
 import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.EncryptedEntry;
-import com.amaze.filemanager.exceptions.RootNotPermittedException;
+import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.utils.application.AppConfig;
@@ -40,7 +40,6 @@
 import com.amaze.filemanager.utils.RootUtils;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 import com.cloudrail.si.interfaces.CloudStorage;
-import com.squareup.haha.perflib.Main;
 
 import java.io.File;
 import java.net.MalformedURLException;
@@ -105,7 +104,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;
-                                } catch (RootNotPermittedException e) {
+                                } catch (ShellNotRunningException e) {
                                     e.printStackTrace();
                                     return false;
                                 }

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/SearchTextTask.java
Patch:
@@ -9,6 +9,7 @@
 import android.widget.ImageButton;
 
 import com.amaze.filemanager.activities.TextEditorActivity;
+import com.amaze.filemanager.utils.ImmutableEntry;
 import com.amaze.filemanager.utils.MapEntry;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
@@ -63,7 +64,7 @@ protected ArrayList<MapEntry> doInBackground(Editable... params) {
             // comparing and adding searched phrase to a list
             if (searchSubString.equalsIgnoreCase(params[0].toString())) {
 
-                nodes.add(new MapEntry(new MapEntry.KeyMapEntry(i, i + params[0].length()),
+                nodes.add(new MapEntry(new ImmutableEntry<>(i, i + params[0].length()),
                         lineNumberReader.getLineNumber()));
             }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPService.java
Patch:
@@ -21,7 +21,6 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.exceptions.CryptException;
 import com.amaze.filemanager.utils.files.CryptUtil;
 
 import org.apache.commons.compress.utils.IOUtils;
@@ -46,6 +45,7 @@
 import java.net.ServerSocket;
 import java.net.SocketException;
 import java.net.UnknownHostException;
+import java.security.GeneralSecurityException;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Enumeration;
@@ -131,7 +131,7 @@ public void run() {
             try {
                 password = CryptUtil.decryptPassword(getApplicationContext(), preferences.getString(KEY_PREFERENCE_PASSWORD, ""));
                 isPasswordProtected = true;
-            } catch (CryptException e) {
+            } catch (GeneralSecurityException | IOException e) {
                 e.printStackTrace();
 
                 Toast.makeText(getApplicationContext(), getResources().getString(R.string.error), Toast.LENGTH_SHORT).show();

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -18,7 +18,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.database.CloudHandler;
-import com.amaze.filemanager.exceptions.RootNotPermittedException;
+import com.amaze.filemanager.exceptions.ShellNotRunningException;
 import com.amaze.filemanager.ui.icons.MimeTypes;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.OTGUtil;
@@ -338,7 +338,7 @@ static boolean deleteFile(@NonNull final File file, Context context) {
         return !file.exists();
     }
 
-    private static boolean rename(File f, String name, boolean root) throws RootNotPermittedException {
+    private static boolean rename(File f, String name, boolean root) throws ShellNotRunningException {
         String newPath = f.getParent() + "/" + name;
         if (f.getParentFile().canWrite()) {
             return f.renameTo(new File(newPath));
@@ -357,7 +357,7 @@ private static boolean rename(File f, String name, boolean root) throws RootNotP
      * @return true if the renaming was successful.
      */
     static boolean renameFolder(@NonNull final File source, @NonNull final File target,
-                                Context context) throws RootNotPermittedException {
+                                Context context) throws ShellNotRunningException {
         // First try the normal rename.
         if (rename(source, target.getName(), false)) {
             return true;

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -619,7 +619,7 @@ private void initializeInteractiveShell() {
                     closeInteractiveShell();
                     sharedPref.edit().putBoolean(PreferenceUtils.KEY_ROOT, false).apply();
                 }
-            } catch (RootNotPermittedException e) {
+            } catch (ShellNotRunningException e) {
                 e.printStackTrace();
                 sharedPref.edit().putBoolean(PreferenceUtils.KEY_ROOT, false).apply();
             }*/

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1027,8 +1027,8 @@ public void loadlist(final String path, final boolean back, final OpenMode openM
             loadFilesListTask.cancel(true);
         }
 
-        loadFilesListTask = new LoadFilesListTask(ma.getActivity(), path, ma, openMode,(data) -> {
-            if (data.second != null) {
+        loadFilesListTask = new LoadFilesListTask(ma.getActivity(), path, ma, openMode, (data) -> {
+            if (data != null && data.second != null) {
                 setListElements(data.second, back, path, data.first, false, checkPathIsGrid(path));
                 mSwipeRefreshLayout.setRefreshing(false);
             }

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1575,8 +1575,9 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
                         oppathe = "";
                     }
                     for (int i = 0; i < oparrayListList.size(); i++) {
+                        ArrayList<HybridFileParcelable> sourceList = oparrayListList.get(i);
                         Intent intent1 = new Intent(con, CopyService.class);
-                        intent1.putExtra(CopyService.TAG_COPY_SOURCES, oparrayList.get(i));
+                        intent1.putExtra(CopyService.TAG_COPY_SOURCES, sourceList);
                         intent1.putExtra(CopyService.TAG_COPY_TARGET, oppatheList.get(i));
                         ServiceWatcherUtil.runService(this, intent1);
                     }

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1027,8 +1027,8 @@ public void loadlist(final String path, final boolean back, final OpenMode openM
             loadFilesListTask.cancel(true);
         }
 
-        loadFilesListTask = new LoadFilesListTask(ma.getActivity(), path, ma, openMode,(data) -> {
-            if (data.second != null) {
+        loadFilesListTask = new LoadFilesListTask(ma.getActivity(), path, ma, openMode, (data) -> {
+            if (data != null && data.second != null) {
                 setListElements(data.second, back, path, data.first, false, checkPathIsGrid(path));
                 mSwipeRefreshLayout.setRefreshing(false);
             }

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1575,8 +1575,9 @@ protected void onActivityResult(int requestCode, int responseCode, Intent intent
                         oppathe = "";
                     }
                     for (int i = 0; i < oparrayListList.size(); i++) {
+                        ArrayList<HybridFileParcelable> sourceList = oparrayListList.get(i);
                         Intent intent1 = new Intent(con, CopyService.class);
-                        intent1.putExtra(CopyService.TAG_COPY_SOURCES, oparrayList.get(i));
+                        intent1.putExtra(CopyService.TAG_COPY_SOURCES, sourceList);
                         intent1.putExtra(CopyService.TAG_COPY_TARGET, oppatheList.get(i));
                         ServiceWatcherUtil.runService(this, intent1);
                     }

File: app/src/main/java/com/amaze/filemanager/asynchronous/services/ZipService.java
Patch:
@@ -211,9 +211,9 @@ public void execute(ArrayList<File> baseFiles, String zipPath) {
                         compressFile(file, "");
                     } else return;
                 }
-            } catch (Exception e) {
+            } catch (IOException e) {
+                e.printStackTrace();
             } finally {
-
                 try {
                     zos.flush();
                     zos.close();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -27,7 +27,7 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.TabFragment;
-import com.amaze.filemanager.fragments.ZipExplorerFragment;
+import com.amaze.filemanager.fragments.CompressedExplorerFragment;
 import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.utils.BottomBarButtonPath;
@@ -138,7 +138,7 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
                         timer.start();
                         showButtons(m);
                     }
-                } else if (fragmentAtFrame instanceof ZipExplorerFragment) {
+                } else if (fragmentAtFrame instanceof CompressedExplorerFragment) {
                     FileUtils.crossfade(buttons, pathLayout);
                     timer.cancel();
                     timer.start();

File: app/src/main/java/com/amaze/filemanager/fragments/CompressedExplorerFragment.java
Patch:
@@ -440,9 +440,12 @@ private void createViews(ArrayList<CompressedObjectParcelable> items, String dir
         } else {
             compressedExplorerAdapter.generateZip(items);
         }
+
         folder = 0;
         file = 0;
         for (CompressedObjectParcelable item : items) {
+            if(item.getType() == CompressedObjectParcelable.TYPE_GOBACK) continue;
+            
             if (item.isDirectory()) folder++;
             else file++;
         }

File: app/src/main/java/com/amaze/filemanager/adapters/ZipExplorerAdapter.java
Patch:
@@ -39,7 +39,7 @@
 /**
  * Created by Arpit on 25-01-2015 edited by Emmanuel Messulam<emmanuelbendavid@gmail.com>
  */
-public class ZipExplorerAdapter extends RecyclerArrayAdapter<String, RecyclerView.ViewHolder> {
+public class ZipExplorerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     private static final int TYPE_HEADER = 0, TYPE_ITEM = 1;
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -117,7 +117,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 ArrayList<LayoutElementParcelable> positions = new ArrayList<>();
                 positions.add(rowItem);
                 GeneralDialogCreation.deleteFilesDialog(context,
-                        mainFragment.getLayoutElements(),
+                        mainFragment.getElementsList(),
                         mainFragment.getMainActivity(),
                         positions, utilitiesProvider.getAppTheme());
                 return true;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -847,7 +847,7 @@ public static void showHistoryDialog(final DataUtils dataUtils, SharedPreference
         a.theme(appTheme.getMaterialDialogTheme());
 
         a.autoDismiss(true);
-        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
+        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs,
                 toHybridFileArrayList(dataUtils.getHistory()), null, true);
         a.adapter(adapter, null);
 
@@ -865,7 +865,7 @@ public static void showHiddenDialog(DataUtils dataUtils, SharedPreferences share
         a.title(R.string.hiddenfiles);
         a.theme(appTheme.getMaterialDialogTheme());
         a.autoDismiss(true);
-        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
+        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs,
                 FileUtils.toHybridFileConcurrentRadixTree(dataUtils.getHiddenFiles()), null, false);
         a.adapter(adapter, null);
         a.dividerColor(Color.GRAY);

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -111,7 +111,6 @@
 import com.amaze.filemanager.fragments.SearchWorkerFragment;
 import com.amaze.filemanager.fragments.TabFragment;
 import com.amaze.filemanager.fragments.ZipExplorerFragment;
-import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.fragments.preference_fragments.QuickAccessPref;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.RenameBookmark;
@@ -507,6 +506,7 @@ public void onClick(View view) {
             public <E> E doInBackground() {
 
                 dataUtils.setHiddenFiles(utilsHandler.getHiddenFilesConcurrentRadixTree());
+                dataUtils.setHistory(utilsHandler.getHistoryLinkedList());
                 dataUtils.setGridfiles(utilsHandler.getGridViewList());
                 dataUtils.setListfiles(utilsHandler.getListViewList());
                 dataUtils.setBooks(utilsHandler.getBookmarksList());
@@ -2353,8 +2353,7 @@ public void onProgressUpdate(HybridFileParcelable val , String query) {
 
     @Override
     public void onCancelled() {
-        mainFragment.createViews(mainFragment.getLayoutElements(), false, mainFragment.getCurrentPath(),
-                mainFragment.openMode, false, !mainFragment.IS_LIST);
+        mainFragment.reloadListElements(false, false, !mainFragment.IS_LIST);
         mainFragment.mSwipeRefreshLayout.setRefreshing(false);
     }
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -32,7 +32,6 @@
 import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
-import com.amaze.filemanager.exceptions.RootNotPermittedException;
 import com.amaze.filemanager.filesystem.HybridFile;
 import com.amaze.filemanager.filesystem.HybridFileParcelable;
 import com.amaze.filemanager.filesystem.RootHelper;
@@ -56,8 +55,8 @@
 import java.util.Arrays;
 import java.util.Calendar;
 import java.util.Collections;
-import java.util.Comparator;
 import java.util.Date;
+import java.util.LinkedList;
 
 import jcifs.smb.SmbAuthException;
 import jcifs.smb.SmbException;
@@ -376,7 +375,7 @@ private ArrayList<LayoutElementParcelable> listApks() {
 
     private ArrayList<LayoutElementParcelable> listRecent() {
         UtilsHandler utilsHandler = new UtilsHandler(c);
-        final ArrayList<String> paths = utilsHandler.getHistoryList();
+        final LinkedList<String> paths = utilsHandler.getHistoryLinkedList();
         ArrayList<LayoutElementParcelable> songs = new ArrayList<>();
         for (String f : paths) {
             if (!f.equals("/")) {

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -506,6 +506,7 @@ public void onClick(View view) {
             public <E> E doInBackground() {
 
                 dataUtils.setHiddenFiles(utilsHandler.getHiddenFilesConcurrentRadixTree());
+                dataUtils.setHistory(utilsHandler.getHistoryLinkedList());
                 dataUtils.setGridfiles(utilsHandler.getGridViewList());
                 dataUtils.setListfiles(utilsHandler.getListViewList());
                 dataUtils.setBooks(utilsHandler.getBookmarksList());

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -117,7 +117,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 ArrayList<LayoutElementParcelable> positions = new ArrayList<>();
                 positions.add(rowItem);
                 GeneralDialogCreation.deleteFilesDialog(context,
-                        mainFragment.getLayoutElements(),
+                        mainFragment.getElementsList(),
                         mainFragment.getMainActivity(),
                         positions, utilitiesProvider.getAppTheme());
                 return true;

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -111,7 +111,6 @@
 import com.amaze.filemanager.fragments.SearchWorkerFragment;
 import com.amaze.filemanager.fragments.TabFragment;
 import com.amaze.filemanager.fragments.ZipExplorerFragment;
-import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.fragments.preference_fragments.QuickAccessPref;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.RenameBookmark;
@@ -2353,8 +2352,7 @@ public void onProgressUpdate(HybridFileParcelable val , String query) {
 
     @Override
     public void onCancelled() {
-        mainFragment.createViews(mainFragment.getLayoutElements(), false, mainFragment.getCurrentPath(),
-                mainFragment.openMode, false, !mainFragment.IS_LIST);
+        mainFragment.reloadListElements(false, false, !mainFragment.IS_LIST);
         mainFragment.mSwipeRefreshLayout.setRefreshing(false);
     }
 

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -117,7 +117,7 @@ public boolean onMenuItemClick(MenuItem item) {
                 ArrayList<LayoutElementParcelable> positions = new ArrayList<>();
                 positions.add(rowItem);
                 GeneralDialogCreation.deleteFilesDialog(context,
-                        mainFragment.getLayoutElements(),
+                        mainFragment.getElementsList(),
                         mainFragment.getMainActivity(),
                         positions, utilitiesProvider.getAppTheme());
                 return true;

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -111,7 +111,6 @@
 import com.amaze.filemanager.fragments.SearchWorkerFragment;
 import com.amaze.filemanager.fragments.TabFragment;
 import com.amaze.filemanager.fragments.ZipExplorerFragment;
-import com.amaze.filemanager.fragments.preference_fragments.PrefFrag;
 import com.amaze.filemanager.fragments.preference_fragments.QuickAccessPref;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.dialogs.RenameBookmark;
@@ -2353,8 +2352,7 @@ public void onProgressUpdate(HybridFileParcelable val , String query) {
 
     @Override
     public void onCancelled() {
-        mainFragment.createViews(mainFragment.getLayoutElements(), false, mainFragment.getCurrentPath(),
-                mainFragment.openMode, false, !mainFragment.IS_LIST);
+        mainFragment.reloadListElements(false, false, !mainFragment.IS_LIST);
         mainFragment.mSwipeRefreshLayout.setRefreshing(false);
     }
 

File: app/src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -47,7 +47,7 @@
  * Created by Arpit on 11-04-2015 edited by Emmanuel Messulam <emmanuelbendavid@gmail.com>
  *                                edited by Jens Klingenberg <mail@jensklingenberg.de>
  */
-public class RecyclerAdapter extends RecyclerArrayAdapter<String, RecyclerView.ViewHolder> {
+public class RecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     private static final int PICTURE_FILETYPE = 0, APK_FILETYPE = 1, VIDEO_FILETYPE = 2,
             GENERIC_FILETYPE = 3, ENCRYPTED_FILETYPE = 4;

File: app/src/main/java/com/amaze/filemanager/adapters/ZipExplorerAdapter.java
Patch:
@@ -39,7 +39,7 @@
 /**
  * Created by Arpit on 25-01-2015 edited by Emmanuel Messulam<emmanuelbendavid@gmail.com>
  */
-public class ZipExplorerAdapter extends RecyclerArrayAdapter<String, RecyclerView.ViewHolder> {
+public class ZipExplorerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
 
     private static final int TYPE_HEADER = 0, TYPE_ITEM = 1;
 

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -847,7 +847,7 @@ public static void showHistoryDialog(final DataUtils dataUtils, SharedPreference
         a.theme(appTheme.getMaterialDialogTheme());
 
         a.autoDismiss(true);
-        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
+        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs,
                 toHybridFileArrayList(dataUtils.getHistory()), null, true);
         a.adapter(adapter, null);
 
@@ -865,7 +865,7 @@ public static void showHiddenDialog(DataUtils dataUtils, SharedPreferences share
         a.title(R.string.hiddenfiles);
         a.theme(appTheme.getMaterialDialogTheme());
         a.autoDismiss(true);
-        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
+        HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs,
                 FileUtils.toHybridFileConcurrentRadixTree(dataUtils.getHiddenFiles()), null, false);
         a.adapter(adapter, null);
         a.dividerColor(Color.GRAY);

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/LoadFilesListTask.java
Patch:
@@ -44,6 +44,7 @@
 import com.amaze.filemanager.utils.OnAsyncTaskFinished;
 import com.amaze.filemanager.utils.OnFileFound;
 import com.amaze.filemanager.utils.OpenMode;
+import com.amaze.filemanager.utils.application.AppConfig;
 import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.files.CryptUtil;
 import com.amaze.filemanager.utils.files.FileListSorter;
@@ -176,7 +177,8 @@ public void onFileFound(HybridFileParcelable file) {
                     });
                 } catch (CloudPluginException e) {
                     e.printStackTrace();
-                    return null;
+                    AppConfig.toast(c, c.getResources().getString(R.string.failed_no_connection));
+                    return new Pair<>(openmode, list);
                 }
                 break;
             default:

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -209,7 +209,7 @@ public void onCreate(Bundle savedInstanceState) {
         primaryTwoColor = getMainActivity().getColorPreference().getColor(ColorUsage.PRIMARY_TWO);
 
         SHOW_PERMISSIONS = sharedPref.getBoolean("showPermissions", false);
-        SHOW_SIZE = sharedPref.getBoolean("showFileSize", false);
+        SHOW_SIZE = sharedPref.getBoolean("showFileSize", true);
         SHOW_DIVIDERS = sharedPref.getBoolean("showDividers", true);
         SHOW_HEADERS = sharedPref.getBoolean("showHeaders", true);
         GO_BACK_ITEM = sharedPref.getBoolean("goBack_checkbox", false);

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -74,7 +74,7 @@
 import eu.chainfire.libsuperuser.Shell;
 
 import static android.os.Build.VERSION_CODES.M;
-import static com.amaze.filemanager.utils.files.FileUtils.toHFileArray;
+import static com.amaze.filemanager.utils.files.FileUtils.toHybridFileArrayList;
 
 /**
  * Here are a lot of function that create material dialogs
@@ -970,7 +970,7 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
 
         a.autoDismiss(true);
         HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
-                toHFileArray(dataUtils.getHistory()), null, true);
+                toHybridFileArrayList(dataUtils.getHistory()), null, true);
         a.adapter(adapter, null);
 
         MaterialDialog x= a.build();
@@ -988,7 +988,7 @@ public static void showHiddenDialog(DataUtils dataUtils, SharedPreferences share
         a.theme(appTheme.getMaterialDialogTheme());
         a.autoDismiss(true);
         HiddenAdapter adapter = new HiddenAdapter(m.getActivity(), m, sharedPrefs, R.layout.bookmarkrow,
-                toHFileArray(dataUtils.getHiddenfiles()), null, false);
+                FileUtils.toHybridFileConcurrentRadixTree(dataUtils.getHiddenFiles()), null, false);
         a.adapter(adapter, null);
         a.dividerColor(Color.GRAY);
         MaterialDialog x= a.build();

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -510,7 +510,7 @@ public void onClick(View view) {
             @Override
             public <E> E doInBackground() {
 
-                dataUtils.setHiddenfiles(utilsHandler.getHiddenList());
+                dataUtils.setHiddenFiles(utilsHandler.getHiddenFilesConcurrentRadixTree());
                 dataUtils.setGridfiles(utilsHandler.getGridViewList());
                 dataUtils.setListfiles(utilsHandler.getListViewList());
                 dataUtils.setBooks(utilsHandler.getBookmarksList());

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -74,7 +74,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
         MainActivity mainActivity = (MainActivity) getActivity();
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.apps));
+        mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -130,7 +130,7 @@ public void onClick(View v) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.ftp));
+        mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -94,7 +94,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (mainActivity.getAppTheme().equals(AppTheme.DARK))
             rootView.setBackgroundResource((R.color.cardView_background));
         mainActivity.updateViews(new ColorDrawable(primaryColor));
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.process_viewer));
+        mainActivity.getAppbar().setTitle(R.string.process_viewer);
         mainActivity.floatingActionButton.hideMenuButton(true);
         sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -952,7 +952,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         MenuItem paste = menu.findItem(R.id.paste);
         Fragment fragment = getFragmentAtFrame();
         if (fragment instanceof TabFragment) {
-            appbar.setTitle("Amaze");
+            appbar.setTitle(R.string.appbar_name);
             if (useGridView) {
                 s.setTitle(getResources().getString(R.string.gridview));
             } else {
@@ -1002,6 +1002,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.view).setVisible(false);
             menu.findItem(R.id.paste).setVisible(false);
         } else if (fragment instanceof ZipExplorerFragment) {
+            appbar.setTitle(R.string.appbar_name);
             menu.findItem(R.id.sethome).setVisible(false);
             if (indicator_layout != null) indicator_layout.setVisibility(View.GONE);
             getAppbar().getBottomBar().resetClickListener();

File: app/src/main/java/com/amaze/filemanager/fragments/AppsListFragment.java
Patch:
@@ -74,7 +74,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
         MainActivity mainActivity = (MainActivity) getActivity();
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.apps));
+        mainActivity.getAppbar().setTitle(R.string.apps);
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -130,7 +130,7 @@ public void onClick(View v) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.ftp));
+        mainActivity.getAppbar().setTitle(R.string.ftp);
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/ProcessViewerFragment.java
Patch:
@@ -94,7 +94,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         if (mainActivity.getAppTheme().equals(AppTheme.DARK))
             rootView.setBackgroundResource((R.color.cardView_background));
         mainActivity.updateViews(new ColorDrawable(primaryColor));
-        mainActivity.getAppbar().setTitle(getResources().getString(R.string.process_viewer));
+        mainActivity.getAppbar().setTitle(R.string.process_viewer);
         mainActivity.floatingActionButton.hideMenuButton(true);
         sharedPrefs = PreferenceManager.getDefaultSharedPreferences(getActivity());
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -952,7 +952,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         MenuItem paste = menu.findItem(R.id.paste);
         Fragment fragment = getFragmentAtFrame();
         if (fragment instanceof TabFragment) {
-            appbar.setTitle("Amaze");
+            appbar.setTitle(R.string.appbar_name);
             if (useGridView) {
                 s.setTitle(getResources().getString(R.string.gridview));
             } else {
@@ -1002,6 +1002,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.view).setVisible(false);
             menu.findItem(R.id.paste).setVisible(false);
         } else if (fragment instanceof ZipExplorerFragment) {
+            appbar.setTitle(R.string.appbar_name);
             menu.findItem(R.id.sethome).setVisible(false);
             if (indicator_layout != null) indicator_layout.setVisibility(View.GONE);
             getAppbar().getBottomBar().resetClickListener();

File: app/src/main/java/com/amaze/filemanager/utils/application/LeakCanaryApplication.java
Patch:
@@ -13,13 +13,13 @@ public class LeakCanaryApplication extends Application {
 
     @Override
     public void onCreate() {
-        super.onCreate();
+        super.onCreate();/*
         if (LeakCanary.isInAnalyzerProcess(this)) {
             // This process is dedicated to LeakCanary for heap analysis.
             // You should not init your app in this process.
             return;
         }
-        LeakCanary.install(this);
+        LeakCanary.install(this);*/
     }
 
 }
\ No newline at end of file

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPTileService.java
Patch:
@@ -34,7 +34,9 @@ public void onClick() {
         mTile = getQsTile();
 
         if (!FTPService.isRunning()) {
-            if (FTPService.isConnectedToWifi(getApplicationContext())) {
+            if (FTPService.isConnectedToWifi(getApplicationContext())
+                    || FTPService.isConnectedToLocalNetwork(getApplicationContext())
+                    || FTPService.isEnabledWifiHotspot(getApplicationContext())) {
                 startServer();
                 mTile.setState(Tile.STATE_ACTIVE);
                 mTile.updateTile();

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPTileService.java
Patch:
@@ -34,7 +34,9 @@ public void onClick() {
         mTile = getQsTile();
 
         if (!FTPService.isRunning()) {
-            if (FTPService.isConnectedToWifi(getApplicationContext())) {
+            if (FTPService.isConnectedToWifi(getApplicationContext())
+                    || FTPService.isConnectedToLocalNetwork(getApplicationContext())
+                    || FTPService.isEnabledWifiHotspot(getApplicationContext())) {
                 startServer();
                 mTile.setState(Tile.STATE_ACTIVE);
                 mTile.updateTile();

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1002,6 +1002,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.view).setVisible(false);
             menu.findItem(R.id.paste).setVisible(false);
         } else if (fragment instanceof ZipExplorerFragment) {
+            appbar.setTitle(R.string.appbar_name);
             menu.findItem(R.id.sethome).setVisible(false);
             if (indicator_layout != null) indicator_layout.setVisibility(View.GONE);
             getAppbar().getBottomBar().resetClickListener();

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1176,7 +1176,7 @@ public void run() {
             case R.id.extract:
                 Fragment fragment1 = getFragmentAtFrame();
                 if (fragment1 instanceof ZipExplorerFragment) {
-                    mainActivityHelper.extractFile(((ZipExplorerFragment) fragment1).f);
+                    mainActivityHelper.extractFile(((ZipExplorerFragment) fragment1).realZipFile);
                 }
                 break;
             case R.id.search:
@@ -1348,7 +1348,7 @@ public void openZip(String path) {
         fragmentTransaction.setCustomAnimations(R.anim.slide_in_top, R.anim.slide_in_bottom);
         Fragment zipFragment = new ZipExplorerFragment();
         Bundle bundle = new Bundle();
-        bundle.putString("path", path);
+        bundle.putString(ZipExplorerFragment.KEY_PATH, path);
         zipFragment.setArguments(bundle);
         fragmentTransaction.add(R.id.content_frame, zipFragment);
         fragmentTransaction.commitAllowingStateLoss();

File: app/src/main/java/com/amaze/filemanager/fragments/ZipExplorerFragment.java
Patch:
@@ -431,8 +431,6 @@ public void goBack() {
     public void changePath(String path) {
         if(path.startsWith("/")) path = path.substring(1);
 
-        swipeRefreshLayout.setRefreshing(true);
-
         if (openmode == ZIP_FILE) {// TODO: 15/9/2017 put switch
             changeZipPath(path);
         } else {
@@ -457,6 +455,7 @@ public int getRootDrawable() {
      * The folders's path separator must be "/"
      */
     public void changeZipPath(final String folder) {
+        swipeRefreshLayout.setRefreshing(true);
         new ZipHelperTask(getContext(), realZipFile.getPath(), folder, new OnAsyncTaskFinished<ArrayList<ZipObjectParcelable>>() {
             @Override
             public void onAsyncTaskFinished(ArrayList<ZipObjectParcelable> data) {
@@ -475,6 +474,7 @@ public void onAsyncTaskFinished(ArrayList<ZipObjectParcelable> data) {
      * The folders's path separator must be "/"
      */
     public void changeRarPath(final String folder) {
+        swipeRefreshLayout.setRefreshing(true);
         new RarHelperTask(getContext(), realZipFile.getPath(), folder,
                 new OnAsyncTaskFinished<Pair<Archive, ArrayList<FileHeader>>>() {
             @Override

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1176,7 +1176,7 @@ public void run() {
             case R.id.extract:
                 Fragment fragment1 = getFragmentAtFrame();
                 if (fragment1 instanceof ZipExplorerFragment) {
-                    mainActivityHelper.extractFile(((ZipExplorerFragment) fragment1).f);
+                    mainActivityHelper.extractFile(((ZipExplorerFragment) fragment1).realZipFile);
                 }
                 break;
             case R.id.search:
@@ -1348,7 +1348,7 @@ public void openZip(String path) {
         fragmentTransaction.setCustomAnimations(R.anim.slide_in_top, R.anim.slide_in_bottom);
         Fragment zipFragment = new ZipExplorerFragment();
         Bundle bundle = new Bundle();
-        bundle.putString("path", path);
+        bundle.putString(ZipExplorerFragment.KEY_PATH, path);
         zipFragment.setArguments(bundle);
         fragmentTransaction.add(R.id.content_frame, zipFragment);
         fragmentTransaction.commitAllowingStateLoss();

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -4,7 +4,6 @@
 import android.animation.AnimatorListenerAdapter;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
-import android.os.Bundle;
 import android.os.CountDownTimer;
 import android.os.Handler;
 import android.support.annotation.NonNull;
@@ -517,6 +516,7 @@ public void onAnimationCancel(Animator animation) {
             }
         } else {
             showButtons(buttonPathInterface);
+            fullPathText.setText(newPath);
         }
     }
 

File: app/src/main/java/com/amaze/filemanager/activities/DatabaseViewerActivity.java
Patch:
@@ -111,7 +111,7 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         } else if (SDK_INT >= 21) {
-            boolean colourednavigation = sharedPref.getBoolean("colorednavigation", true);
+            boolean colourednavigation = getPrefs().getBoolean("colorednavigation", true);
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);

File: app/src/main/java/com/amaze/filemanager/fragments/ZipExplorerFragment.java
Patch:
@@ -408,8 +408,7 @@ public void onServiceDisconnected(ComponentName name) {
                 // open most recent entry added to files to be deleted from cache
                 File cacheFile = new File(files.get(files.size() - 1).getPath());
                 if (cacheFile != null && cacheFile.exists())
-                    FileUtils.openFile(cacheFile, mainActivity,  mainActivity.sharedPref);
-
+                    FileUtils.openFile(cacheFile, mainActivity,  mainActivity.getPrefs());
                 // reset the flag and cache file, as it's root is already in the list for deletion
                 isOpen = false;
                 files.remove(files.size() - 1);

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/BottomBar.java
Patch:
@@ -122,7 +122,7 @@ public void onFinish() {
             }
         };
 
-        allowChangePaths = mainActivity.get().sharedPref.getBoolean(PrefFrag.PREFERENCE_CHANGEPATHS, false);
+        allowChangePaths = mainActivity.get().getPrefs().getBoolean(PrefFrag.PREFERENCE_CHANGEPATHS, false);
 
         gestureDetector = new GestureDetector(a.getApplicationContext(), new GestureDetector.SimpleOnGestureListener() {
             @Override
@@ -154,7 +154,7 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
             public void onLongPress(MotionEvent e) {
                 if(allowChangePaths &&
                         (!mainActivity.get().getCurrentMainFragment().results || buttons.getVisibility() == View.VISIBLE)) {
-                    GeneralDialogCreation.showChangePathsDialog(mainActivity, mainActivity.get().sharedPref);
+                    GeneralDialogCreation.showChangePathsDialog(mainActivity, mainActivity.get().getPrefs());
                 }
             }
         });

File: app/src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -27,6 +27,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.theme.AppTheme;

File: app/src/main/java/com/amaze/filemanager/activities/superclasses/ThemedActivity.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.activities;
+package com.amaze.filemanager.activities.superclasses;
 
 import android.Manifest;
 import android.content.SharedPreferences;
@@ -24,7 +24,7 @@ public class ThemedActivity extends BasicActivity {
     public SharedPreferences sharedPref;
 
     public static boolean rootMode;
-    boolean checkStorage = true;
+    public boolean checkStorage = true;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -59,7 +59,7 @@ public boolean checkStoragePermission() {
                 == PackageManager.PERMISSION_GRANTED;
     }
 
-    void requestStoragePermission() {
+    public void requestStoragePermission() {
         if (ActivityCompat.shouldShowRequestPermissionRationale(this,
                 Manifest.permission.WRITE_EXTERNAL_STORAGE)) {
 

File: app/src/main/java/com/amaze/filemanager/asynchronous/asynctasks/DbViewerTask.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.services.asynctasks;
+package com.amaze.filemanager.asynchronous.asynctasks;
 
 import android.database.Cursor;
 import android.os.AsyncTask;
@@ -35,7 +35,7 @@ public DbViewerTask (Cursor schemaCursor, Cursor contentCursor, WebView webView,
     protected void onPreExecute() {
         super.onPreExecute();
 
-        if (dbViewerFragment.dbViewer.getAppTheme().equals(AppTheme.DARK)) {
+        if (dbViewerFragment.databaseViewerActivity.getAppTheme().equals(AppTheme.DARK)) {
 
             htmlInit = "<html><body>" +
                     "<table border='1' style='width:100%;color:#ffffff'>";

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPReceiver.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.services.ftpservice;
+package com.amaze.filemanager.asynchronous.ftpservice;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.services.ftpservice;
+package com.amaze.filemanager.asynchronous.ftpservice;
 
 /**
  * Created by yashwanthreddyg on 09-06-2016.

File: app/src/main/java/com/amaze/filemanager/asynchronous/ftpservice/FTPTileService.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.services.ftpservice;
+package com.amaze.filemanager.asynchronous.ftpservice;
 
 import android.annotation.TargetApi;
 import android.content.Intent;

File: app/src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -201,7 +201,7 @@ public <E> E doInBackground() {
                         String finalFilePath = currentPath + "/" + documentFile.getName();
                         DataUtils dataUtils = DataUtils.getInstance();
 
-                        HFile hFile = new HFile(OpenMode.UNKNOWN, currentPath);
+                        HybridFile hFile = new HybridFile(OpenMode.UNKNOWN, currentPath);
                         hFile.generateMode(mainActivity);
 
                         switch (hFile.getMode()) {
@@ -425,7 +425,7 @@ public static File getTempFile(@NonNull final File file, Context context) {
     /**
      * Create a folder. The folder may even be on external SD card for Kitkat.
      *
-     * @deprecated use {@link #mkdirs(Context, HFile)}
+     * @deprecated use {@link #mkdirs(Context, HybridFile)}
      * @param file  The folder to be created.
      * @return True if creation was successful.
      */
@@ -461,7 +461,7 @@ public static boolean mkdir(final File file, Context context) {
         return false;
     }
 
-    public static boolean mkdirs(Context context, HFile file) {
+    public static boolean mkdirs(Context context, HybridFile file) {
         boolean isSuccessful = true;
         switch (file.mode) {
             case SMB:

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -36,7 +36,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.exceptions.CryptException;
-import com.amaze.filemanager.services.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.files.CryptUtil;
@@ -45,7 +45,6 @@
 import java.io.File;
 import java.io.InputStream;
 import java.net.InetAddress;
-import java.util.Objects;
 
 /**
  * Created by yashwanthreddyg on 10-06-2016.

File: app/src/main/java/com/amaze/filemanager/fragments/SearchWorkerFragment.java
Patch:
@@ -4,8 +4,8 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 
-import com.amaze.filemanager.filesystem.BaseFile;
-import com.amaze.filemanager.services.asynctasks.SearchAsyncTask;
+import com.amaze.filemanager.filesystem.HybridFileParcelable;
+import com.amaze.filemanager.asynchronous.asynctasks.SearchAsyncTask;
 import com.amaze.filemanager.utils.OpenMode;
 
 /**
@@ -33,7 +33,7 @@ public class SearchWorkerFragment extends Fragment {
     public interface HelperCallbacks {
         void onPreExecute(String query);
         void onPostExecute(String query);
-        void onProgressUpdate(BaseFile val,String query);
+        void onProgressUpdate(HybridFileParcelable val, String query);
         void onCancelled();
     }
 

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/FoldersPref.java
Patch:
@@ -22,7 +22,7 @@
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.SimpleTextWatcher;
 import com.amaze.filemanager.utils.color.ColorUsage;
-import com.amaze.filemanager.utils.files.Futils;
+import com.amaze.filemanager.utils.files.FileUtils;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -179,7 +179,7 @@ private void loadEditDialog(final PathSwitchPreference p) {
                 .build();
 
         dialog.getActionButton(DialogAction.POSITIVE)
-                .setEnabled(Futils.isPathAccesible(editText2.getText().toString(), sharedPrefs));
+                .setEnabled(FileUtils.isPathAccesible(editText2.getText().toString(), sharedPrefs));
 
         disableButtonIfTitleEmpty(editText1, dialog);
         disableButtonIfNotPath(editText2, dialog);
@@ -259,7 +259,7 @@ private void disableButtonIfNotPath(EditText path, final MaterialDialog dialog)
             @Override
             public void afterTextChanged(Editable s) {
                 dialog.getActionButton(DialogAction.POSITIVE)
-                        .setEnabled(Futils.isPathAccesible(s.toString(), sharedPrefs));
+                        .setEnabled(FileUtils.isPathAccesible(s.toString(), sharedPrefs));
             }
         });
     }

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/PrefFrag.java
Patch:
@@ -58,7 +58,7 @@
 
 import static com.amaze.filemanager.R.string.feedback;
 
-public class Preffrag extends PreferenceFragment implements Preference.OnPreferenceClickListener {
+public class PrefFrag extends PreferenceFragment implements Preference.OnPreferenceClickListener {
 
     private static final String PREFERENCE_KEY_ABOUT = "about";
     private static final String[] PREFERENCE_KEYS =

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -22,7 +22,7 @@
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.activities.ThemedActivity;
+import com.amaze.filemanager.activities.superclasses.ThemedActivity;
 import com.amaze.filemanager.exceptions.CryptException;
 import com.amaze.filemanager.utils.EditTextColorStateUtil;
 import com.amaze.filemanager.utils.SimpleTextWatcher;

File: app/src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -12,7 +12,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
-import com.amaze.filemanager.services.ftpservice.FTPService;
+import com.amaze.filemanager.asynchronous.ftpservice.FTPService;
 
 import java.net.InetAddress;
 

File: app/src/main/java/com/amaze/filemanager/ui/views/ThemedImageView.java
Patch:
@@ -6,7 +6,7 @@
 import android.graphics.Color;
 import android.util.AttributeSet;
 
-import com.amaze.filemanager.activities.BasicActivity;
+import com.amaze.filemanager.activities.superclasses.BasicActivity;
 import com.amaze.filemanager.utils.theme.AppTheme;
 
 /**

File: app/src/main/java/com/amaze/filemanager/utils/broadcast_receiver/PackageReceiver.java
Patch:
@@ -5,7 +5,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 
-import com.amaze.filemanager.services.asynctasks.AppListLoader;
+import com.amaze.filemanager.asynchronous.loaders.AppListLoader;
 
 /**
  * Created by vishal on 23/2/17.

File: app/src/main/java/com/amaze/filemanager/utils/provider/UtilitiesProviderInterface.java
Patch:
@@ -1,16 +1,13 @@
 package com.amaze.filemanager.utils.provider;
 
 import com.amaze.filemanager.utils.color.ColorPreference;
-import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.amaze.filemanager.utils.theme.AppThemeManager;
 
 /**
  * Created by Rémi Piotaix <remi.piotaix@gmail.com> on 2016-10-17.
  */
 public interface UtilitiesProviderInterface {
-    Futils getFutils();
-
     ColorPreference getColorPreference();
 
     AppTheme getAppTheme();

File: app/src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -406,7 +406,7 @@ public void onServiceDisconnected(ComponentName name) {
                 // open most recent entry added to files to be deleted from cache
                 File cacheFile = new File(files.get(files.size() - 1).getPath());
                 if (cacheFile != null && cacheFile.exists())
-                    utilsProvider.getFutils().openFile(cacheFile, mainActivity);
+                    utilsProvider.getFutils().openFile(cacheFile, mainActivity, mainActivity.sharedPref);
 
                 // reset the flag and cache file, as it's root is already in the list for deletion
                 isOpen = false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -64,12 +64,14 @@ public class Preffrag extends PreferenceFragment implements Preference.OnPrefere
     private static final String[] PREFERENCE_KEYS =
             {"columns", "theme", "sidebar_folders_enable", "sidebar_quickaccess_enable",
                     "rootmode", "showHidden", "feedback", PREFERENCE_KEY_ABOUT, "plus_pic", "colors",
-                    "sidebar_folders", "sidebar_quickaccess", "advancedsearch", "typeablepaths"};
+                    "sidebar_folders", "sidebar_quickaccess", "texteditor_newstack", "advancedsearch", "typeablepaths"};
 
 
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "show_sidebar_folders";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "show_sidebar_quickaccesses";
 
+    public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
+
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
 
     public static final String PREFERENCE_ROOTMODE = "rootmode";

File: app/src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -406,7 +406,7 @@ public void onServiceDisconnected(ComponentName name) {
                 // open most recent entry added to files to be deleted from cache
                 File cacheFile = new File(files.get(files.size() - 1).getPath());
                 if (cacheFile != null && cacheFile.exists())
-                    utilsProvider.getFutils().openFile(cacheFile, mainActivity);
+                    utilsProvider.getFutils().openFile(cacheFile, mainActivity, mainActivity.sharedPref);
 
                 // reset the flag and cache file, as it's root is already in the list for deletion
                 isOpen = false;

File: app/src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -64,12 +64,14 @@ public class Preffrag extends PreferenceFragment implements Preference.OnPrefere
     private static final String[] PREFERENCE_KEYS =
             {"columns", "theme", "sidebar_folders_enable", "sidebar_quickaccess_enable",
                     "rootmode", "showHidden", "feedback", PREFERENCE_KEY_ABOUT, "plus_pic", "colors",
-                    "sidebar_folders", "sidebar_quickaccess", "advancedsearch", "typeablepaths"};
+                    "sidebar_folders", "sidebar_quickaccess", "texteditor_newstack", "advancedsearch", "typeablepaths"};
 
 
     public static final String PREFERENCE_SHOW_SIDEBAR_FOLDERS = "show_sidebar_folders";
     public static final String PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES = "show_sidebar_quickaccesses";
 
+    public static final String PREFERENCE_TEXTEDITOR_NEWSTACK = "texteditor_newstack";
+
     public static final String PREFERENCE_SHOW_HIDDENFILES = "showHidden";
 
     public static final String PREFERENCE_ROOTMODE = "rootmode";

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/RarHelperTask.java
Patch:
@@ -83,7 +83,7 @@ protected ArrayList<FileHeader> doInBackground(File... params) {
     protected void onPostExecute(ArrayList<FileHeader> zipEntries) {
         super.onPostExecute(zipEntries);
         zipViewer.swipeRefreshLayout.setRefreshing(false);
-        zipViewer.createRarviews(zipEntries, dir);
+        zipViewer.createRarViews(zipEntries, dir);
     }
 
     private class FileListSorter implements Comparator<FileHeader> {

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -130,7 +130,7 @@ protected ArrayList<ZipObj> doInBackground(String... params) {
     protected void onPostExecute(ArrayList<ZipObj> zipEntries) {
         super.onPostExecute(zipEntries);
         zipViewer.swipeRefreshLayout.setRefreshing(false);
-        zipViewer.createviews(zipEntries, dir);
+        zipViewer.createZipViews(zipEntries, dir);
     }
 
     private class FileListSorter implements Comparator<ZipObj> {

File: app/src/main/java/com/amaze/filemanager/ui/views/preference/PathSwitchPreference.java
Patch:
@@ -3,10 +3,8 @@
 import android.content.Context;
 import android.preference.Preference;
 import android.support.annotation.IdRes;
-import android.support.v7.app.AppCompatDelegate;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.Switch;
 
 import com.amaze.filemanager.R;
 
@@ -28,7 +26,6 @@ public PathSwitchPreference(Context context) {
     @Override
     protected View onCreateView(ViewGroup parent) {
         setWidgetLayoutResource(R.layout.namepathswitch_preference);
-        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);//selector in srcCompat isn't supported without this
         return super.onCreateView(parent);
     }
 

File: app/src/main/java/com/amaze/filemanager/utils/application/AppConfig.java
Patch:
@@ -6,6 +6,7 @@
 import android.os.Handler;
 import android.os.HandlerThread;
 import android.os.StrictMode;
+import android.support.v7.app.AppCompatDelegate;
 import android.text.TextUtils;
 import android.widget.Toast;
 
@@ -41,6 +42,7 @@ public UtilitiesProviderInterface getUtilsProvider() {
     @Override
     public void onCreate() {
         super.onCreate();
+        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);//selector in srcCompat isn't supported without this
         mInstance = this;
 
         utilsProvider = new UtilitiesProvider(this);

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -964,7 +964,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
                 MainFragment ma = getCurrentMainFragment();
                 if (ma.IS_LIST) s.setTitle(R.string.gridview);
                 else s.setTitle(R.string.listview);
-                appbar.getBottomBar().updatePath(ma.getCurrentPath(), ma.results, MainActivityHelper.SEARCH_TEXT, ma.openMode, ma.folder_count, ma.file_count);
+                appbar.getBottomBar().updatePath(ma.getCurrentPath(), ma.results,
+                        MainActivityHelper.SEARCH_TEXT, ma.openMode, ma.folder_count, ma.file_count, ma);
             } catch (Exception e) {}
 
             appbar.getBottomBar().setClickListener();

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/RarHelperTask.java
Patch:
@@ -83,7 +83,7 @@ protected ArrayList<FileHeader> doInBackground(File... params) {
     protected void onPostExecute(ArrayList<FileHeader> zipEntries) {
         super.onPostExecute(zipEntries);
         zipViewer.swipeRefreshLayout.setRefreshing(false);
-        zipViewer.createRarviews(zipEntries, dir);
+        zipViewer.createRarViews(zipEntries, dir);
     }
 
     private class FileListSorter implements Comparator<FileHeader> {

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -130,7 +130,7 @@ protected ArrayList<ZipObj> doInBackground(String... params) {
     protected void onPostExecute(ArrayList<ZipObj> zipEntries) {
         super.onPostExecute(zipEntries);
         zipViewer.swipeRefreshLayout.setRefreshing(false);
-        zipViewer.createviews(zipEntries, dir);
+        zipViewer.createZipViews(zipEntries, dir);
     }
 
     private class FileListSorter implements Comparator<ZipObj> {

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -964,7 +964,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
                 MainFragment ma = getCurrentMainFragment();
                 if (ma.IS_LIST) s.setTitle(R.string.gridview);
                 else s.setTitle(R.string.listview);
-                appbar.getBottomBar().updatePath(ma.getCurrentPath(), ma.results, MainActivityHelper.SEARCH_TEXT, ma.openMode, ma.folder_count, ma.file_count);
+                appbar.getBottomBar().updatePath(ma.getCurrentPath(), ma.results,
+                        MainActivityHelper.SEARCH_TEXT, ma.openMode, ma.folder_count, ma.file_count, ma);
             } catch (Exception e) {}
 
             appbar.getBottomBar().setClickListener();

File: app/src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -273,7 +273,6 @@ public void execute(final ArrayList<BaseFile> sourceFiles, final String targetPa
                     for (int i = 0; i < sourceFiles.size(); i++) {
                         sourceProgress = i;
                         BaseFile f1 = (sourceFiles.get(i));
-                        Log.e("Copy", "basefile\t" + f1.getPath());
 
                         try {
 
@@ -307,7 +306,7 @@ public void execute(final ArrayList<BaseFile> sourceFiles, final String targetPa
                             }
                         } catch (Exception e) {
                             e.printStackTrace();
-                            Log.e("Copy", "Got exception checkout");
+                            Log.e("CopyService", "Got exception checkout: " + f1.getPath());
 
                             failedFOps.add(sourceFiles.get(i));
                             for (int j = i + 1; j < sourceFiles.size(); j++)

File: app/src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -201,7 +201,7 @@ public void onButtonPressed(Intent intent, String password) {
             case R.id.decrypt:
                 EncryptDecryptUtils.decryptFile(context, mainActivity, mainFragment,
                         mainFragment.openMode, rowItem.generateBaseFile(),
-                        rowItem.generateBaseFile().getParent(context), utilitiesProvider);
+                        rowItem.generateBaseFile().getParent(context), utilitiesProvider, false);
                 return true;
             case R.id.return_select:
                 mainFragment.returnIntentResults(rowItem.generateBaseFile());

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -312,7 +312,9 @@ public void onCreate(final Bundle savedInstanceState) {
         appbar = new AppBar(this, sharedPref, new SearchView.SearchListener() {
             @Override
             public void onSearch(String queue) {
-                mainActivityHelper.search(queue);
+                if(!queue.isEmpty()) {
+                    mainActivityHelper.search(queue);
+                }
             }
         });
         initialiseViews();

File: app/src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2081,7 +2081,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
         });
 
         //    searchViewEditText.setTextColor(Utils.getColor(this, android.R.color.black));
-        //     searchViewEditText.setHintTextColor(Color.parseColor(BaseActivity.accentSkin));
+        //     searchViewEditText.setHintTextColor(Color.parseColor(ThemedActivity.accentSkin));
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/activities/BasicActivity.java
Patch:
@@ -3,11 +3,11 @@
 import android.support.v7.app.AppCompatActivity;
 
 import com.amaze.filemanager.utils.AppConfig;
-import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.amaze.filemanager.utils.theme.AppTheme;
-import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;
+import com.amaze.filemanager.utils.theme.AppThemeManager;
 
 /**
  * Created by rpiotaix on 17/10/16.
@@ -50,7 +50,7 @@ public AppTheme getAppTheme() {
     }
 
     @Override
-    public AppThemeManagerInterface getThemeManager() {
+    public AppThemeManager getThemeManager() {
         if (!initialized)
             initialize();
 

File: app/src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -56,7 +56,7 @@
 /**
  * Created by Vishal on 02-02-2015.
  */
-public class DbViewer extends BaseActivity {
+public class DbViewer extends ThemedActivity {
 
     private String path;
     private ListView listView;
@@ -151,7 +151,7 @@ public void run() {
 
                 // if the db can't be read, and we have root enabled, try reading it by
                 // first copying it in cache dir
-                if (!file.canRead() && BaseActivity.rootMode) {
+                if (!file.canRead() && ThemedActivity.rootMode) {
 
                     try {
                         RootUtils.copy(pathFile.getPath(),

File: app/src/main/java/com/amaze/filemanager/activities/PreferencesActivity.java
Patch:
@@ -50,7 +50,7 @@
 
 import static android.os.Build.VERSION.SDK_INT;
 
-public class PreferencesActivity extends BaseActivity implements ActivityCompat.OnRequestPermissionsResultCallback {
+public class PreferencesActivity extends ThemedActivity implements ActivityCompat.OnRequestPermissionsResultCallback {
 
     //Start is the first activity you see
     public static final int START_PREFERENCE = 0;

File: app/src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -32,7 +32,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.activities.BaseActivity;
+import com.amaze.filemanager.activities.ThemedActivity;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.adapters.AppsAdapter;
 import com.amaze.filemanager.services.asynctasks.AppListLoader;
@@ -86,7 +86,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         if (utilsProvider.getAppTheme().equals(AppTheme.DARK))
             getActivity().getWindow().getDecorView().setBackgroundColor(Utils.getColor(getContext(), R.color.holo_dark_background));
 
-        adapter = new AppsAdapter(getContext(), (BaseActivity) getActivity(), utilsProvider,
+        adapter = new AppsAdapter(getContext(), (ThemedActivity) getActivity(), utilsProvider,
                 R.layout.rowlayout, app);
         setListAdapter(adapter);
         setListShown(false);

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -31,7 +31,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.activities.BaseActivity;
+import com.amaze.filemanager.activities.ThemedActivity;
 import com.amaze.filemanager.database.UtilsHandler;
 import com.amaze.filemanager.exceptions.CloudPluginException;
 import com.amaze.filemanager.exceptions.RootNotPermittedException;
@@ -217,7 +217,7 @@ else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
                 // we're neither in OTG not in SMB, load the list based on root/general filesystem
                 try {
                     ArrayList<BaseFile> arrayList1;
-                    arrayList1 = RootHelper.getFilesList(path, BaseActivity.rootMode, ma.SHOW_HIDDEN,
+                    arrayList1 = RootHelper.getFilesList(path, ThemedActivity.rootMode, ma.SHOW_HIDDEN,
                             new RootHelper.GetModeCallBack() {
                                 @Override
                                 public void getMode(OpenMode mode) {

File: app/src/main/java/com/amaze/filemanager/services/asynctasks/MoveFiles.java
Patch:
@@ -23,7 +23,7 @@
 import android.content.Intent;
 import android.os.AsyncTask;
 
-import com.amaze.filemanager.activities.BaseActivity;
+import com.amaze.filemanager.activities.ThemedActivity;
 import com.amaze.filemanager.database.CryptHandler;
 import com.amaze.filemanager.database.models.EncryptedEntry;
 import com.amaze.filemanager.exceptions.RootNotPermittedException;
@@ -99,7 +99,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
                         if (!source.renameTo(dest)) {
 
                             // check if we have root
-                            if (BaseActivity.rootMode) {
+                            if (ThemedActivity.rootMode) {
                                 try {
                                     if (!RootUtils.rename(f.getPath(), paths.get(i) + "/" + f.getName()))
                                         return false;

File: app/src/main/java/com/amaze/filemanager/ui/dialogs/SmbSearchDialog.java
Patch:
@@ -20,7 +20,7 @@
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.activities.BaseActivity;
+import com.amaze.filemanager.activities.ThemedActivity;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.adapters.RecyclerArrayAdapter;
 import com.amaze.filemanager.utils.Computer;
@@ -48,7 +48,7 @@ public void onCreate(Bundle bundle) {
         super.onCreate(bundle);
         utilsProvider = (UtilitiesProviderInterface) getActivity();
 
-        accentColor = ((BaseActivity) getActivity()).getColorPreference().getColor(ColorUsage.ACCENT);
+        accentColor = ((ThemedActivity) getActivity()).getColorPreference().getColor(ColorUsage.ACCENT);
     }
 
     @Override

File: app/src/main/java/com/amaze/filemanager/ui/views/appbar/SearchView.java
Patch:
@@ -78,7 +78,7 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
         });
 
         //searchViewEditText.setTextColor(Utils.getColor(this, android.R.color.black));
-        //searchViewEditText.setHintTextColor(Color.parseColor(BaseActivity.accentSkin));
+        //searchViewEditText.setHintTextColor(Color.parseColor(ThemedActivity.accentSkin));
     }
 
     /**

File: app/src/main/java/com/amaze/filemanager/utils/provider/UtilitiesProviderInterface.java
Patch:
@@ -1,9 +1,9 @@
 package com.amaze.filemanager.utils.provider;
 
-import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.theme.AppTheme;
-import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;
+import com.amaze.filemanager.utils.theme.AppThemeManager;
 
 /**
  * Created by Rémi Piotaix <remi.piotaix@gmail.com> on 2016-10-17.
@@ -15,5 +15,5 @@ public interface UtilitiesProviderInterface {
 
     AppTheme getAppTheme();
 
-    AppThemeManagerInterface getThemeManager();
+    AppThemeManager getThemeManager();
 }

File: app/src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -172,7 +172,6 @@
 import static android.os.Build.VERSION.SDK_INT;
 import static com.amaze.filemanager.fragments.preference_fragments.Preffrag.PREFERENCE_SHOW_SIDEBAR_FOLDERS;
 import static com.amaze.filemanager.fragments.preference_fragments.Preffrag.PREFERENCE_SHOW_SIDEBAR_QUICKACCESSES;
-import static com.amaze.filemanager.utils.MainActivityHelper.SEARCH_TEXT;
 
 public class MainActivity extends BaseActivity implements
         GoogleApiClient.ConnectionCallbacks,
@@ -314,7 +313,9 @@ public void onCreate(final Bundle savedInstanceState) {
         appbar = new AppBar(this, sharedPref, new SearchView.SearchListener() {
             @Override
             public void onSearch(String queue) {
-                mainActivityHelper.search(queue);
+                if(!queue.isEmpty()) {
+                    mainActivityHelper.search(queue);
+                }
             }
         });
         initialiseViews();

File: app/src/main/java/com/amaze/filemanager/activities/BaseActivity.java
Patch:
@@ -97,7 +97,7 @@ public void onClick(View v) {
     }
 
     void setTheme() {
-        AppTheme theme = getAppTheme();
+        AppTheme theme = getAppTheme().getSimpleTheme();
         if (Build.VERSION.SDK_INT >= 21) {
 
             switch (accentSkin.toUpperCase()) {

File: app/src/main/java/com/amaze/filemanager/activities/BasicActivity.java
Patch:
@@ -3,11 +3,11 @@
 import android.support.v7.app.AppCompatActivity;
 
 import com.amaze.filemanager.utils.AppConfig;
-import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.amaze.filemanager.utils.theme.AppTheme;
-import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;
+import com.amaze.filemanager.utils.theme.AppThemeManager;
 
 /**
  * Created by rpiotaix on 17/10/16.
@@ -50,7 +50,7 @@ public AppTheme getAppTheme() {
     }
 
     @Override
-    public AppThemeManagerInterface getThemeManager() {
+    public AppThemeManager getThemeManager() {
         if (!initialized)
             initialize();
 

File: app/src/main/java/com/amaze/filemanager/utils/provider/UtilitiesProviderInterface.java
Patch:
@@ -1,9 +1,9 @@
 package com.amaze.filemanager.utils.provider;
 
-import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.theme.AppTheme;
-import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;
+import com.amaze.filemanager.utils.theme.AppThemeManager;
 
 /**
  * Created by Rémi Piotaix <remi.piotaix@gmail.com> on 2016-10-17.
@@ -15,5 +15,5 @@ public interface UtilitiesProviderInterface {
 
     AppTheme getAppTheme();
 
-    AppThemeManagerInterface getThemeManager();
+    AppThemeManager getThemeManager();
 }

File: app/src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -135,7 +135,6 @@
 import com.amaze.filemanager.ui.drawer.EntryItem;
 import com.amaze.filemanager.ui.drawer.Item;
 import com.amaze.filemanager.ui.drawer.SectionItem;
-import com.amaze.filemanager.ui.icons.IconUtils;
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout;
 import com.amaze.filemanager.utils.AppConfig;

File: app/src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -120,7 +120,7 @@ private void toggleChecked(int position, ImageView imageView) {
             zipViewer.selection = true;
             /*zipViewer.mActionMode = zipViewer.getActivity().startActionMode(
                    zipViewer.mActionModeCallback);*/
-            zipViewer.mActionMode = zipViewer.mainActivity.toolbar.startActionMode(zipViewer.mActionModeCallback);
+            zipViewer.mActionMode = zipViewer.mainActivity.getAppbar().getToolbar().startActionMode(zipViewer.mActionModeCallback);
         }
         zipViewer.mActionMode.invalidate();
         if (getCheckedItemPositions().size() == 0) {

File: app/src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -74,7 +74,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
         MainActivity mainActivity = (MainActivity) getActivity();
-        mainActivity.setActionBarTitle(getResources().getString(R.string.apps));
+        mainActivity.getAppbar().setTitle(getResources().getString(R.string.apps));
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -131,7 +131,7 @@ public void onClick(View v) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setRetainInstance(true);
-        mainActivity.setActionBarTitle(getResources().getString(R.string.ftp));
+        mainActivity.getAppbar().setTitle(getResources().getString(R.string.ftp));
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();

File: app/src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -331,7 +331,7 @@ public void onActivityCreated(final Bundle savedInstanceState) {
             public void onGlobalLayout() {
                 if ((columns == 0 || columns == -1)) {
                     int screen_width = listView.getWidth();
-                    int dptopx = Utils.dpToPx(115, getContext());
+                    int dptopx = Utils.dpToPx(getContext(), 115);
                     columns = screen_width / dptopx;
                     if (columns == 0 || columns == -1) columns = 3;
                     if (!IS_LIST) mLayoutManagerGrid.setSpanCount(columns);
@@ -1371,7 +1371,7 @@ else if (utils.canGoBack(getContext(), currentFile)) {
                 if (MainActivityHelper.SEARCH_TEXT != null) {
 
                     // starting the search query again :O
-                    getMainActivity().mainFragment = (MainFragment) getMainActivity().getFragment().getTab();
+                    getMainActivity().mainFragment = (MainFragment) getMainActivity().getTabFragment().getCurrentTabFragment();
                     FragmentManager fm = getMainActivity().getSupportFragmentManager();
 
                     // getting parent path to resume search from there

File: app/src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -92,7 +92,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         while (serverThread != null) {
             if (attempts > 0) {
                 attempts--;
-                FTPService.sleepIgnoreInterupt(1000);
+                sleepIgnoreInterupt(1000);
             } else {
                 return START_STICKY;
             }

File: app/src/main/java/com/amaze/filemanager/utils/Utils.java
Patch:
@@ -129,7 +129,7 @@ public static int getColor(Context c, @ColorRes int color) {
         }
     }
 
-    public static int dpToPx(int dp, Context c) {
+    public static int dpToPx(Context c, int dp) {
         DisplayMetrics displayMetrics = c.getResources().getDisplayMetrics();
         return Math.round(dp * (displayMetrics.xdpi / DisplayMetrics.DENSITY_DEFAULT));
     }

File: app/src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -182,7 +182,7 @@ public void run() {
             }
         }
 
-        fac.setPort(preferences.getInt(PORT_PREFERENCE_KEY, DEFAULT_PORT));
+        fac.setPort(getPort(preferences));
         fac.setIdleTimeout(preferences.getInt(KEY_PREFERENCE_TIMEOUT, DEFAULT_TIMEOUT));
 
         serverFactory.addListener("default", fac.createListener());
@@ -360,9 +360,8 @@ public static byte byteOfInt(int value, int which) {
         return (byte) (value >> shift);
     }
 
-    public static int getPort(Context context)
+    public static int getPort(SharedPreferences preferences)
     {
-        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);
         return preferences.getInt(PORT_PREFERENCE_KEY, DEFAULT_PORT);
     }
 

File: app/src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -350,6 +350,7 @@ public void onReceive(Context context, Intent intent) {
         @Override
         public void onReceive(Context context, Intent intent) {
             String action = intent.getAction();
+            updateSpans();
             if (action.equals(FTPService.ACTION_STARTED)) {
                 if (getSecurePreference()) {
                     statusText.setText(spannedStatusSecure);

File: src/main/java/com/amaze/filemanager/ui/notifications/FTPNotification.java
Patch:
@@ -42,7 +42,7 @@ private void createNotification(Context context){
         InetAddress address = FTPService.getLocalInetAddress(context);
 
         String iptext = "ftp://" + address.getHostAddress() + ":"
-                + FTPService.getPort() + "/";
+                + FTPService.getPort(context) + "/";
 
         int icon = R.drawable.ic_ftp_light;
         CharSequence tickerText = context.getResources().getString(R.string.ftp_notif_starting);

File: src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -281,7 +281,7 @@ public static boolean isConnectedToWifi(Context context) {
 
     public static boolean isEnabledWifiHotspot(Context context) {
         boolean enabled = false;
-        Log.d(TAG, "isConnectedToLocalNetwork: see if it is an WIFI AP");
+        Log.d(TAG, "isEnabledWifiHotspot: see if it is an WIFI AP");
         WifiManager wm = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
         try {
             Method method = wm.getClass().getDeclaredMethod("isWifiApEnabled");

File: src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -312,9 +312,9 @@ public static InetAddress getLocalInetAddress(Context context) {
                     .getNetworkInterfaces();
             while (netinterfaces.hasMoreElements()) {
                 NetworkInterface netinterface = netinterfaces.nextElement();
-                Enumeration<InetAddress> adresses = netinterface.getInetAddresses();
-                while (adresses.hasMoreElements()) {
-                    InetAddress address = adresses.nextElement();
+                Enumeration<InetAddress> addresses = netinterface.getInetAddresses();
+                while (addresses.hasMoreElements()) {
+                    InetAddress address = addresses.nextElement();
                     // this is the condition that sometimes gives problems
                     if (!address.isLoopbackAddress()
                             && !address.isLinkLocalAddress())

File: src/main/java/com/amaze/filemanager/fragments/CloudSheetFragment.java
Patch:
@@ -8,6 +8,7 @@
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.design.widget.BottomSheetDialogFragment;
+import android.util.Log;
 import android.view.View;
 import android.widget.LinearLayout;
 
@@ -43,7 +44,6 @@ public void setupDialog(Dialog dialog, int style) {
         super.setupDialog(dialog, style);
 
         rootView = getActivity().getLayoutInflater().inflate(R.layout.fragment_sheet_cloud, null);
-        dialog.setContentView(rootView);
 
         if (((MainActivity) getActivity()).getAppTheme().equals(AppTheme.DARK)) {
             rootView.setBackgroundColor(Utils.getColor(getContext(), R.color.holo_dark_background));
@@ -73,6 +73,8 @@ public void setupDialog(Dialog dialog, int style) {
         mGoogleDriveLayout.setOnClickListener(this);
         mOnedriveLayout.setOnClickListener(this);
         mGetCloudLayout.setOnClickListener(this);
+
+        dialog.setContentView(rootView);
     }
 
     /**

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -91,7 +91,7 @@ protected void onPreExecute() {
     protected ArrayList<LayoutElement> doInBackground(String... params) {// params[0] is the url.
         ArrayList<LayoutElement> list = null;
         path = params[0];
-        grid = ma.checkforpath(path);
+        grid = ma.checkPathIsGrid(path);
         ma.folder_count = 0;
         ma.file_count = 0;
         if (openmode == OpenMode.UNKNOWN) {

File: src/main/java/com/amaze/filemanager/services/asynctasks/MoveFiles.java
Patch:
@@ -148,7 +148,7 @@ protected Boolean doInBackground(ArrayList<String>... strings) {
     @Override
     public void onPostExecute(Boolean movedCorrectly) {
         if (movedCorrectly) {
-            if (mainFrag != null && mainFrag.CURRENT_PATH.equals(paths.get(0))) {
+            if (mainFrag != null && mainFrag.getCurrentPath().equals(paths.get(0))) {
                 // mainFrag.updateList();
                 Intent intent = new Intent("loadlist");
                 context.sendBroadcast(intent);

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -168,7 +168,7 @@ private interface OnClickMaterialListener {
 
     public void add(int pos) {
         final MainFragment ma = (MainFragment) ((TabFragment) mainActivity.getSupportFragmentManager().findFragmentById(R.id.content_frame)).getTab();
-        final String path = ma.CURRENT_PATH;
+        final String path = ma.getCurrentPath();
 
         switch (pos) {
             case NEW_FOLDER:
@@ -612,7 +612,7 @@ public void search(String query) {
         TabFragment tabFragment = mainActivity.getFragment();
         if (tabFragment == null) return;
         final MainFragment ma = (MainFragment) tabFragment.getTab();
-        final String fpath = ma.CURRENT_PATH;
+        final String fpath = ma.getCurrentPath();
 
         /*SearchTask task = new SearchTask(ma.searchHelper, ma, query);
                 task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, fpath);*/

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1161,11 +1161,11 @@ public void run() {
                     AppConfig.runInBackground(new Runnable() {
                         @Override
                         public void run() {
-                            utilsHandler.addListView(mainFragment.CURRENT_PATH);
+                            utilsHandler.addListView(mainFragment.getCurrentPath());
                         }
                     });
                     //grid.addPath(null, ma.CURRENT_PATH, DataUtils.LIST, 0);
-                    dataUtils.getListfiles().add(ma.CURRENT_PATH);
+                    dataUtils.getListfiles().add(ma.getCurrentPath());
                 }
                 ma.switchView();
                 break;

File: src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -57,7 +57,7 @@ public class FTPService extends Service implements Runnable {
     public static final String PORT_PREFERENCE_KEY = "ftpPort";
     public static final String KEY_PREFERENCE_PATH = "ftp_path";
     public static final String KEY_PREFERENCE_USERNAME = "ftp_username";
-    public static final String KEY_PREFERENCE_PASSWORD = "ftp_password";
+    public static final String KEY_PREFERENCE_PASSWORD = "ftp_password_encrypted";
     public static final String KEY_PREFERENCE_TIMEOUT = "ftp_timeout";
     public static final String KEY_PREFERENCE_SECURE = "ftp_secure";
     public static final String DEFAULT_PATH = Environment.getExternalStorageDirectory().getAbsolutePath();

File: src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -201,6 +201,9 @@ public void onButtonPressed(Intent intent, String password) {
                         mainFragment.openMode, rowItem.generateBaseFile(),
                         rowItem.generateBaseFile().getParent(context), utilitiesProvider);
                 return true;
+            case R.id.return_select:
+                mainFragment.returnIntentResults(rowItem.generateBaseFile());
+                return true;
         }
         return false;
     }

File: src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -57,7 +57,7 @@ public class FTPService extends Service implements Runnable {
     public static final String PORT_PREFERENCE_KEY = "ftpPort";
     public static final String KEY_PREFERENCE_PATH = "ftp_path";
     public static final String KEY_PREFERENCE_USERNAME = "ftp_username";
-    public static final String KEY_PREFERENCE_PASSWORD = "ftp_password";
+    public static final String KEY_PREFERENCE_PASSWORD = "ftp_password_encrypted";
     public static final String KEY_PREFERENCE_TIMEOUT = "ftp_timeout";
     public static final String KEY_PREFERENCE_SECURE = "ftp_secure";
     public static final String DEFAULT_PATH = Environment.getExternalStorageDirectory().getAbsolutePath();

File: src/main/java/com/amaze/filemanager/ui/ItemPopupMenu.java
Patch:
@@ -201,6 +201,9 @@ public void onButtonPressed(Intent intent, String password) {
                         mainFragment.openMode, rowItem.generateBaseFile(),
                         rowItem.generateBaseFile().getParent(context), utilitiesProvider);
                 return true;
+            case R.id.return_select:
+                mainFragment.returnIntentResults(rowItem.generateBaseFile());
+                return true;
         }
         return false;
     }

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -192,6 +192,7 @@ public void onCreate(Bundle savedInstanceState) {
         home = getArguments().getString("home");
         CURRENT_PATH = getArguments().getString("lastpath");
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
+        IS_LIST = !checkPathIsGrid(CURRENT_PATH);
 
         accentColor = getMainActivity().getColorPreference().getColor(ColorUsage.ACCENT);
         primaryColor = getMainActivity().getColorPreference().getColor(ColorUsage.PRIMARY);

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -206,7 +206,7 @@ public void updatepaths(int pos) {
 
         tabHandler.clear();
         for (Fragment fragment : fragments) {
-            if (fragment.getClass().getName().contains("Main")) {
+            if (fragment.getClass().getName().contains("MainFragment")) {
                 MainFragment m = (MainFragment) fragment;
                 items.add(parsePathForName(m.CURRENT_PATH, m.openMode));
                 if (i - 1 == MainActivity.currentTab && i == pos) {

File: src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -517,7 +517,10 @@ private String getPasswordFromPreferences() {
             return decryptedPassword;
         } catch (CryptException e) {
             e.printStackTrace();
+
             Toast.makeText(getContext(), getResources().getString(R.string.error), Toast.LENGTH_SHORT).show();
+            // can't decrypt the password saved in preferences, remove the preference altogether
+            preferences.edit().putString(FTPService.KEY_PREFERENCE_PASSWORD, "").apply();
             return "";
         }
     }

File: src/main/java/com/amaze/filemanager/database/UtilsHandler.java
Patch:
@@ -45,7 +45,7 @@ public UtilsHandler(Context context) {
 
     @Override
     public void onCreate(SQLiteDatabase db) {
-        String queryHistroy = "CREATE TABLE IF NOT EXISTS " + TABLE_HISTORY + " ("
+        String queryHistory = "CREATE TABLE IF NOT EXISTS " + TABLE_HISTORY + " ("
                 + COLUMN_ID + " INTEGER PRIMARY KEY,"
                 + COLUMN_PATH + " TEXT"
                 + ")";
@@ -72,7 +72,7 @@ public void onCreate(SQLiteDatabase db) {
                 + COLUMN_PATH + " TEXT"
                 + ")";
 
-        db.execSQL(queryHistroy);
+        db.execSQL(queryHistory);
         db.execSQL(queryHidden);
         db.execSQL(queryList);
         db.execSQL(queryGrid);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -464,7 +464,7 @@ public void onFinish() {
                 if (path != null && path.length() > 0) {
                     HFile file = new HFile(OpenMode.UNKNOWN, path);
                     file.generateMode(this);
-                    if (file.isDirectory())
+                    if (file.isDirectory(this))
                         goToMain(path);
                     else {
                         goToMain("");

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1094,7 +1094,7 @@ public void createViews(ArrayList<LayoutElement> bitmap, boolean back, String pa
                     switchToGrid();
                 else if (!grid && !IS_LIST) switchToList();
                 if (adapter == null) {
-                    adapter = new RecyclerAdapter(ma, utilsProvider, bitmap, ma.getActivity());
+                    adapter = new RecyclerAdapter(ma, utilsProvider, bitmap, ma.getActivity(), SHOW_HEADERS);
                 } else {
                     adapter.setItems(getLayoutElements());
                 }

File: src/main/java/com/amaze/filemanager/adapters/holders/SpecialViewHolder.java
Patch:
@@ -36,8 +36,10 @@ public SpecialViewHolder(Context c, View view, UtilitiesProviderInterface utilsP
                 txtTitle.setText(R.string.files);
                 break;
             case HEADER_FOLDERS:
-                txtTitle.setText(R.string.directories);
+                txtTitle.setText(R.string.folders);
                 break;
+            default:
+                throw new IllegalStateException(": " + type);
         }
 
         //if(utilsProvider.getAppTheme().equals(AppTheme.DARK))

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -117,7 +117,7 @@
 import com.amaze.filemanager.fragments.FTPServerFragment;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.fragments.ProcessViewer;
-import com.amaze.filemanager.fragments.SearchAsyncHelper;
+import com.amaze.filemanager.fragments.SearchWorkerFragment;
 import com.amaze.filemanager.fragments.TabFragment;
 import com.amaze.filemanager.fragments.ZipViewer;
 import com.amaze.filemanager.fragments.preference_fragments.FoldersPref;
@@ -189,7 +189,7 @@ public class MainActivity extends BaseActivity implements
         GoogleApiClient.ConnectionCallbacks,
         GoogleApiClient.OnConnectionFailedListener, OnRequestPermissionsResultCallback,
         SmbConnectionListener, DataChangeListener, BookmarkCallback,
-        SearchAsyncHelper.HelperCallbacks, CloudConnectionCallbacks,
+        SearchWorkerFragment.HelperCallbacks, CloudConnectionCallbacks,
         LoaderManager.LoaderCallbacks<Cursor> {
 
     public static final Pattern DIR_SEPARATOR = Pattern.compile("/");

File: src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class TabHandler extends SQLiteOpenHelper {
 
-    protected static final int DATABASE_VERSION = 4;
+    protected static final int DATABASE_VERSION = 5;
     protected static final String DATABASE_NAME = "explorer.db";
     private static final String TABLE_TAB = "tab";
 

File: src/main/java/com/amaze/filemanager/fragments/CloudSheetFragment.java
Patch:
@@ -87,6 +87,7 @@ public static final boolean isCloudProviderAvailable(Context context) {
             pm.getPackageInfo(CloudContract.APP_PACKAGE_NAME, PackageManager.GET_ACTIVITIES);
             return true;
         } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
             return false;
         }
     }

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1423,7 +1423,6 @@ public void onResume() {
     public void onPause() {
         super.onPause();
         (getActivity()).unregisterReceiver(receiver2);
-
     }
 
     @Override

File: src/main/java/com/amaze/filemanager/utils/files/EncryptDecryptUtils.java
Patch:
@@ -5,6 +5,7 @@
 import android.content.SharedPreferences;
 import android.os.Build;
 import android.preference.PreferenceManager;
+import android.util.Log;
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -779,7 +779,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.compress:
                     ArrayList<BaseFile> copies1 = new ArrayList<>();
                     for (int i4 = 0; i4 < plist.size(); i4++) {
-                        copies1.add(getLayoutElement(i4).generateBaseFile());
+                        copies1.add(plist.get(i4).generateBaseFile());
                     }
                     GeneralDialogCreation.showCompressDialog((MainActivity) getActivity(), copies1, CURRENT_PATH);
                     mode.finish();

File: src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -854,7 +854,7 @@ public void onInput(MaterialDialog materialDialog, CharSequence charSequence) {
             @Override
             public void onClick(MaterialDialog materialDialog, DialogAction dialogAction) {
                 if (materialDialog.getInputEditText().getText().toString().equals(".zip"))
-                    Toast.makeText(m, "File should have a name", Toast.LENGTH_SHORT).show();
+                    Toast.makeText(m, m.getResources().getString(R.string.no_name), Toast.LENGTH_SHORT).show();
                 else {
                     String name = current + "/" + materialDialog.getInputEditText().getText().toString();
                     m.mainActivityHelper.compressFiles(new File(name), b);

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1,4 +1,5 @@
-/*
+/* Diego Felipe Lassa <diegoflassa@gmail.com>
+ *
  * Copyright (C) 2014 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>
  *
  * This file is part of Amaze File Manager.
@@ -1059,7 +1060,7 @@ else if (path2.contains(path1))
      */
     public void createViews(ArrayList<LayoutElement> bitmap, boolean back, String path,
                             final OpenMode openMode, boolean results, boolean grid) {
-        if (bitmap != null) {
+        if ( (bitmap != null) && (isAdded()) ) {
             synchronized (bitmap) {
                 if (GO_BACK_ITEM)
                     if (!path.equals("/") && (openMode == OpenMode.FILE || openMode == OpenMode.ROOT)

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1,4 +1,5 @@
-/*
+/* Diego Felipe Lassa <diegoflassa@gmail.com>
+ *
  * Copyright (C) 2014 Arpit Khurana <arpitkh96@gmail.com>, Vishal Nehra <vishalmeham2@gmail.com>
  *
  * This file is part of Amaze File Manager.
@@ -1059,7 +1060,7 @@ else if (path2.contains(path1))
      */
     public void createViews(ArrayList<LayoutElement> bitmap, boolean back, String path,
                             final OpenMode openMode, boolean results, boolean grid) {
-        if (bitmap != null) {
+        if ( (bitmap != null) && (isAdded()) ) {
             synchronized (bitmap) {
                 if (GO_BACK_ITEM)
                     if (!path.equals("/") && (openMode == OpenMode.FILE || openMode == OpenMode.ROOT)

File: src/main/java/com/amaze/filemanager/filesystem/HFile.java
Patch:
@@ -1052,7 +1052,7 @@ public LayoutElement generateLayoutElement(MainFragment mainFragment, UtilitiesP
                                     file.lastModified() + "");
                 } else {
                     layoutElement = utilitiesProvider.getFutils().newElement(Icons.loadMimeIcon(
-                            file.getPath(), !mainFragment.IS_LIST, mainFragment.res),
+                            file.getPath(), !mainFragment.IS_LIST, mainFragment.getResources()),
                             file.getPath(), RootHelper.parseFilePermission(file),
                             file.getPath(), file.length() + "", file.length(), false, false, file.lastModified() + "");
                 }

File: src/main/java/com/amaze/filemanager/utils/FingerprintHandler.java
Patch:
@@ -11,7 +11,7 @@
 import android.support.v4.app.ActivityCompat;
 
 import com.afollestad.materialdialogs.MaterialDialog;
-import com.amaze.filemanager.adapters.RecyclerAdapter;
+import com.amaze.filemanager.utils.files.EncryptDecryptUtils;
 
 /**
  * Created by vishal on 15/4/17.
@@ -21,13 +21,13 @@
 public class FingerprintHandler extends FingerprintManager.AuthenticationCallback {
 
     private Context context;
-    private RecyclerAdapter.DecryptButtonCallbackInterface decryptButtonCallbackInterface;
+    private EncryptDecryptUtils.DecryptButtonCallbackInterface decryptButtonCallbackInterface;
     private Intent decryptIntent;
     private MaterialDialog materialDialog;
 
     // Constructor
     public FingerprintHandler(Context mContext, Intent intent, MaterialDialog materialDialog,
-                              RecyclerAdapter.DecryptButtonCallbackInterface decryptButtonCallbackInterface) {
+                              EncryptDecryptUtils.DecryptButtonCallbackInterface decryptButtonCallbackInterface) {
         context = mContext;
         this.decryptIntent = intent;
         this.materialDialog = materialDialog;

File: src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -168,9 +168,7 @@ private static synchronized void init(final Context context) {
             @Override
             public void run() {
                 if (handlerThread==null || !handlerThread.isAlive()) {
-
                     // service is been finished, let's start this one
-
                     // pop recent intent from pendingIntents
                     context.startService(pendingIntents.remove(pendingIntents.size()-1));
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1067,7 +1067,7 @@ public void onClick(View v) {
                 break;
             case R.id.sortby:
                 if (ma != null)
-                    GeneralDialogCreation.showSortDialog(ma, getAppTheme());
+                    GeneralDialogCreation.showSortDialog(ma, getAppTheme(), sharedPref);
                 break;
             case R.id.dsort:
                 if (ma == null) return super.onOptionsItemSelected(item);

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -139,7 +139,7 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.DataUtils.DataChangeListener;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;

File: src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -410,9 +410,10 @@ public boolean onLongClick(View v) {
             });
         }
 
-        CountItemsOrAndSize countItemsOrAndSize = new CountItemsOrAndSize(c, itemsText, baseFile);
+        CountItemsOrAndSize countItemsOrAndSize = new CountItemsOrAndSize(c, itemsText, baseFile, forStorage);
         countItemsOrAndSize.executeOnExecutor(executor);
 
+
         GenerateHashes hashGen = new GenerateHashes(baseFile, c, v);
         hashGen.executeOnExecutor(executor);
 

File: src/main/java/com/amaze/filemanager/utils/files/Futils.java
Patch:
@@ -95,7 +95,7 @@ public static long folderSize(File directory, OnProgressUpdate<Long> updateState
                 if (file.isFile())
                     length += file.length();
                 else
-                    length += folderSize(file, updateState);
+                    length += folderSize(file, null); //null because updateState would be called for children dirs
 
                 if(updateState != null)
                     updateState.onUpdate(length);

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -139,7 +139,7 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.DataUtils.DataChangeListener;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;

File: src/main/java/com/amaze/filemanager/services/asynctasks/CountItemsOrAndSize.java
Patch:
@@ -8,7 +8,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.filesystem.BaseFile;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.OnProgressUpdate;
 
 /**

File: src/main/java/com/amaze/filemanager/activities/BasicActivity.java
Patch:
@@ -3,7 +3,7 @@
 import android.support.v7.app.AppCompatActivity;
 
 import com.amaze.filemanager.utils.AppConfig;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 import com.amaze.filemanager.utils.theme.AppTheme;

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -66,7 +66,7 @@
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.services.asynctasks.SearchTextTask;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
-import com.amaze.filemanager.utils.GenericCopyUtil;
+import com.amaze.filemanager.utils.files.GenericCopyUtil;
 import com.amaze.filemanager.utils.MapEntry;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.RootUtils;

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -44,7 +44,7 @@
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
 import com.amaze.filemanager.ui.drawer.EntryItem;
 import com.amaze.filemanager.ui.drawer.Item;
-import com.amaze.filemanager.utils.CloudUtil;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;

File: src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import com.amaze.filemanager.filesystem.HFile;
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.services.DeleteTask;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.OpenMode;
 
 import java.io.File;

File: src/main/java/com/amaze/filemanager/database/CloudHandler.java
Patch:
@@ -8,8 +8,7 @@
 
 import com.amaze.filemanager.exceptions.CloudPluginException;
 import com.amaze.filemanager.fragments.CloudSheetFragment;
-import com.amaze.filemanager.utils.CloudUtil;
-import com.amaze.filemanager.utils.CryptUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
 import com.amaze.filemanager.utils.OpenMode;
 
 import java.util.ArrayList;

File: src/main/java/com/amaze/filemanager/database/CryptHandler.java
Patch:
@@ -6,7 +6,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 
-import com.amaze.filemanager.utils.CryptUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
 
 import java.io.IOException;
 import java.security.InvalidAlgorithmParameterException;

File: src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -20,7 +20,6 @@
 import com.amaze.filemanager.database.CloudHandler;
 import com.amaze.filemanager.exceptions.RootNotPermittedException;
 import com.amaze.filemanager.ui.icons.MimeTypes;
-import com.amaze.filemanager.utils.CloudUtil;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.RootUtils;
 

File: src/main/java/com/amaze/filemanager/filesystem/HFile.java
Patch:
@@ -13,8 +13,8 @@
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.ui.LayoutElement;
 import com.amaze.filemanager.ui.icons.Icons;
-import com.amaze.filemanager.utils.CloudUtil;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.Logger;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;

File: src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -7,7 +7,7 @@
 import android.support.v4.provider.DocumentFile;
 
 import com.amaze.filemanager.exceptions.RootNotPermittedException;
-import com.amaze.filemanager.utils.CloudUtil;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.Logger;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;

File: src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.exceptions.RootNotPermittedException;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.OpenMode;
 
 import java.io.File;

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -32,6 +32,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.BaseActivity;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.adapters.AppsAdapter;
 import com.amaze.filemanager.services.asynctasks.AppListLoader;
@@ -85,7 +86,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         if (utilsProvider.getAppTheme().equals(AppTheme.DARK))
             getActivity().getWindow().getDecorView().setBackgroundColor(Utils.getColor(getContext(), R.color.holo_dark_background));
 
-        adapter = new AppsAdapter(getContext(), utilsProvider, R.layout.rowlayout, app);
+        adapter = new AppsAdapter(getContext(), (BaseActivity) getActivity(), utilsProvider,
+                R.layout.rowlayout, app);
         setListAdapter(adapter);
         setListShown(false);
         setEmptyText(getResources().getString(R.string.no_applications));

File: src/main/java/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -50,7 +50,7 @@
 import com.amaze.filemanager.services.ZipTask;
 import com.amaze.filemanager.ui.icons.IconUtils;
 import com.amaze.filemanager.utils.DataPackage;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.amaze.filemanager.utils.theme.AppTheme;

File: src/main/java/com/amaze/filemanager/fragments/PropertiesSheet.java
Patch:
@@ -16,7 +16,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.filesystem.BaseFile;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.Utils;
 
 import java.io.File;

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -73,7 +73,7 @@
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.github.junrar.Archive;
 import com.github.junrar.rarfile.FileHeader;
-import com.timehop.stickyheadersrecyclerview.StickyRecyclerHeadersDecoration;
+import com.timehop.stickyheadersrecyclerview.decorators.StickyRecyclerHeadersDecoration;
 
 import java.io.File;
 import java.util.ArrayList;

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -23,7 +23,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.PreferencesActivity;
-import com.amaze.filemanager.ui.views.CheckBox;
+import com.amaze.filemanager.ui.views.preference.CheckBox;
 import com.amaze.filemanager.utils.Utils;
 import com.amaze.filemanager.utils.color.ColorPreference;
 import com.amaze.filemanager.utils.color.ColorUsage;

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -45,7 +45,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.AboutActivity;
 import com.amaze.filemanager.activities.PreferencesActivity;
-import com.amaze.filemanager.ui.views.CheckBox;
+import com.amaze.filemanager.ui.views.preference.CheckBox;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.TinyDB;

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -46,10 +46,10 @@
 import com.amaze.filemanager.filesystem.HFile;
 import com.amaze.filemanager.filesystem.Operations;
 import com.amaze.filemanager.filesystem.RootHelper;
-import com.amaze.filemanager.utils.CryptUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
 import com.amaze.filemanager.utils.DataPackage;
-import com.amaze.filemanager.utils.Futils;
-import com.amaze.filemanager.utils.GenericCopyUtil;
+import com.amaze.filemanager.utils.files.Futils;
+import com.amaze.filemanager.utils.files.GenericCopyUtil;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;
 import com.amaze.filemanager.utils.RootUtils;

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -35,10 +35,10 @@
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.filesystem.RootHelper;
 import com.amaze.filemanager.fragments.ZipViewer;
-import com.amaze.filemanager.utils.CloudUtil;
-import com.amaze.filemanager.utils.CryptUtil;
-import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.OTGUtil;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 

File: src/main/java/com/amaze/filemanager/services/EncryptService.java
Patch:
@@ -18,7 +18,7 @@
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.filesystem.HFile;
-import com.amaze.filemanager.utils.CryptUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
 import com.amaze.filemanager.utils.DataPackage;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.ProgressHandler;

File: src/main/java/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -40,7 +40,7 @@
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.utils.AppConfig;
 import com.amaze.filemanager.utils.DataPackage;
-import com.amaze.filemanager.utils.GenericCopyUtil;
+import com.amaze.filemanager.utils.files.GenericCopyUtil;
 import com.amaze.filemanager.utils.ProgressHandler;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;
 import com.github.junrar.Archive;

File: src/main/java/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -39,8 +39,8 @@
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.utils.DataPackage;
-import com.amaze.filemanager.utils.Futils;
-import com.amaze.filemanager.utils.GenericCopyUtil;
+import com.amaze.filemanager.utils.files.Futils;
+import com.amaze.filemanager.utils.files.GenericCopyUtil;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.ProgressHandler;
 import com.amaze.filemanager.utils.ServiceWatcherUtil;

File: src/main/java/com/amaze/filemanager/services/asynctasks/AppListLoader.java
Patch:
@@ -11,7 +11,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.ui.LayoutElement;
-import com.amaze.filemanager.utils.FileListSorter;
+import com.amaze.filemanager.utils.files.FileListSorter;
 import com.amaze.filemanager.utils.InterestingConfigChange;
 import com.amaze.filemanager.utils.broadcast_receiver.PackageReceiver;
 

File: src/main/java/com/amaze/filemanager/services/asynctasks/CopyFileCheck.java
Patch:
@@ -169,7 +169,7 @@ private void showDialog(final String path, final ArrayList<BaseFile> filesToCopy
 
         // checkBox
         final CheckBox checkBox = (CheckBox) view.findViewById(R.id.checkBox);
-        Utils.setTint(checkBox, Color.parseColor(BaseActivity.accentSkin));
+        Utils.setTint(context, checkBox, Color.parseColor(BaseActivity.accentSkin));
         dialogBuilder.theme(mainActivity.getAppTheme().getMaterialDialogTheme());
         dialogBuilder.title(context.getResources().getString(R.string.paste));
         dialogBuilder.positiveText(R.string.skip);

File: src/main/java/com/amaze/filemanager/services/asynctasks/GenerateHashes.java
Patch:
@@ -9,8 +9,8 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.filesystem.BaseFile;
-import com.amaze.filemanager.utils.Futils;
-import com.amaze.filemanager.utils.GenericCopyUtil;
+import com.amaze.filemanager.utils.files.Futils;
+import com.amaze.filemanager.utils.files.GenericCopyUtil;
 
 import java.io.IOException;
 import java.io.InputStream;

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadFolderSpaceData.java
Patch:
@@ -12,7 +12,7 @@
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.OnProgressUpdate;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.github.mikephil.charting.charts.PieChart;

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -40,10 +40,10 @@
 import com.amaze.filemanager.fragments.MainFragment;
 import com.amaze.filemanager.ui.LayoutElement;
 import com.amaze.filemanager.ui.icons.Icons;
-import com.amaze.filemanager.utils.CloudUtil;
-import com.amaze.filemanager.utils.CryptUtil;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
+import com.amaze.filemanager.utils.files.CryptUtil;
 import com.amaze.filemanager.utils.DataUtils;
-import com.amaze.filemanager.utils.FileListSorter;
+import com.amaze.filemanager.utils.files.FileListSorter;
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;

File: src/main/java/com/amaze/filemanager/ui/icons/IconHolder.java
Patch:
@@ -40,7 +40,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.database.CloudHandler;
-import com.amaze.filemanager.utils.CloudUtil;
+import com.amaze.filemanager.utils.cloud.CloudUtil;
 import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;
 import com.amaze.filemanager.utils.Utils;

File: src/main/java/com/amaze/filemanager/ui/views/preference/CheckBox.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.ui.views;
+package com.amaze.filemanager.ui.views.preference;
 
 import android.content.Context;
 import android.preference.SwitchPreference;

File: src/main/java/com/amaze/filemanager/ui/views/preference/EditIntPreference.java
Patch:
@@ -1,8 +1,7 @@
-package com.amaze.filemanager.ui.views;
+package com.amaze.filemanager.ui.views.preference;
 
 import android.content.Context;
 import android.preference.EditTextPreference;
-import android.util.AttributeSet;
 
 /**
  * Created by rpiotaix on 17/11/16.

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -41,6 +41,8 @@
 import com.amaze.filemanager.services.ExtractService;
 import com.amaze.filemanager.services.ZipTask;
 import com.amaze.filemanager.ui.dialogs.GeneralDialogCreation;
+import com.amaze.filemanager.utils.files.CryptUtil;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.provider.UtilitiesProviderInterface;
 
 import java.io.File;

File: src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamServer.java
Patch:
@@ -1,8 +1,10 @@
-package com.amaze.filemanager.utils.SmbStreamer;
+package com.amaze.filemanager.utils.cloud;
 
 import android.net.Uri;
 import android.util.Log;
 
+import com.amaze.filemanager.utils.SmbStreamer.StreamSource;
+
 import java.io.BufferedReader;
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;

File: src/main/java/com/amaze/filemanager/utils/cloud/CloudStreamer.java
Patch:
@@ -1,9 +1,7 @@
-package com.amaze.filemanager.utils;
+package com.amaze.filemanager.utils.cloud;
 
 import android.util.Log;
 
-import com.amaze.filemanager.utils.SmbStreamer.CloudStreamServer;
-
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;

File: src/main/java/com/amaze/filemanager/utils/cloud/CloudUtil.java
Patch:
@@ -1,4 +1,4 @@
-package com.amaze.filemanager.utils;
+package com.amaze.filemanager.utils.cloud;
 
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
@@ -16,6 +16,7 @@
 import com.amaze.filemanager.exceptions.CloudPluginException;
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.ui.icons.MimeTypes;
+import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 import com.cloudrail.si.types.CloudMetaData;
 

File: src/main/java/com/amaze/filemanager/utils/files/FileListSorter.java
Patch:
@@ -17,7 +17,7 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-package com.amaze.filemanager.utils;
+package com.amaze.filemanager.utils.files;
 
 import com.amaze.filemanager.ui.LayoutElement;
 

File: src/main/java/com/amaze/filemanager/utils/provider/UtilitiesProvider.java
Patch:
@@ -4,7 +4,7 @@
 import android.content.SharedPreferences;
 import android.preference.PreferenceManager;
 
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;

File: src/main/java/com/amaze/filemanager/utils/provider/UtilitiesProviderInterface.java
Patch:
@@ -1,6 +1,6 @@
 package com.amaze.filemanager.utils.provider;
 
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.color.ColorPreference;
 import com.amaze.filemanager.utils.theme.AppTheme;
 import com.amaze.filemanager.utils.theme.AppThemeManagerInterface;

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -142,7 +142,7 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.DataUtils.DataChangeListener;
-import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.files.Futils;
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.OTGUtil;
@@ -1912,7 +1912,7 @@ public void bbar(final MainFragment mainFrag) {
                 if (rpaths.get(i).equals("/")) {
                     ImageButton ib = new ImageButton(this);
                     ib.setImageDrawable(icons.getRootDrawable());
-                    ib.setBackgroundColor(Color.parseColor("#00ffffff"));
+                    ib.setBackgroundColor(Color.TRANSPARENT);
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {
@@ -1928,7 +1928,7 @@ public void onClick(View p1) {
                 } else if (isStorage(rpaths.get(i))) {
                     ImageButton ib = new ImageButton(this);
                     ib.setImageDrawable(icons.getSdDrawable());
-                    ib.setBackgroundColor(Color.parseColor("#00ffffff"));
+                    ib.setBackgroundColor(Color.TRANSPARENT);
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {

File: src/main/java/com/amaze/filemanager/ui/dialogs/GeneralDialogCreation.java
Patch:
@@ -395,6 +395,7 @@ public boolean onLongClick(View v) {
             chart.getLegend().setForm(Legend.LegendForm.CIRCLE);
             chart.getLegend().setHorizontalAlignment(Legend.LegendHorizontalAlignment.CENTER);
             chart.getLegend().setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
+            chart.getLegend().setTextColor(isDarkTheme? Color.WHITE:Color.BLACK);
 
             chart.animateY(1000);
 

File: src/main/java/com/amaze/filemanager/filesystem/FileUtil.java
Patch:
@@ -331,7 +331,7 @@ public static boolean mkdirs(Context context, HFile file) {
                 }
                 break;
             case OTG:
-                DocumentFile documentFile = RootHelper.getDocumentFile(file.getPath(), context, true);
+                DocumentFile documentFile = OTGUtil.getDocumentFile(file.getPath(), context, true);
                 isSuccessful = documentFile != null;
                 break;
             case FILE:

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -943,7 +943,7 @@ public void onListItemClicked(int position, ImageView imageView) {
                         }
                     } else if (l.getMode() == OpenMode.OTG) {
 
-                        utils.openFile(RootHelper.getDocumentFile(l.getDesc(), getContext(), false),
+                        utils.openFile(OTGUtil.getDocumentFile(l.getDesc(), getContext(), false),
                                 (MainActivity) getActivity());
                     } else if (l.getMode() == OpenMode.DROPBOX
                             || l.getMode() == OpenMode.BOX

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -38,6 +38,7 @@
 import com.amaze.filemanager.utils.CloudUtil;
 import com.amaze.filemanager.utils.CryptUtil;
 import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.OTGUtil;
 import com.amaze.filemanager.utils.OpenMode;
 import com.cloudrail.si.interfaces.CloudStorage;
 
@@ -76,7 +77,7 @@ protected Boolean doInBackground(ArrayList<BaseFile>... p1) {
         if (files.get(0).isOtgFile()) {
             for (BaseFile a : files) {
 
-                DocumentFile documentFile = RootHelper.getDocumentFile(a.getPath(), cd, false);
+                DocumentFile documentFile = OTGUtil.getDocumentFile(a.getPath(), cd, false);
                  b = documentFile.delete();
             }
         } else if (files.get(0).isDropBoxFile()) {

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadFolderSpaceData.java
Patch:
@@ -54,7 +54,7 @@ public LoadFolderSpaceData(Context c, AppTheme appTheme, PieChart chart, BaseFil
 
     @Override
     protected Pair<String, List<PieEntry>> doInBackground(Void... params) {
-        long[] dataArray = Futils.getSpaces(file, new OnProgressUpdate<Long[]>() {
+        long[] dataArray = Futils.getSpaces(file, context, new OnProgressUpdate<Long[]>() {
             @Override
             public void onUpdate(Long[] data) {
                 publishProgress(data);

File: src/main/java/com/amaze/filemanager/utils/GenericCopyUtil.java
Patch:
@@ -69,7 +69,7 @@ private void startCopy(boolean lowOnMemory) throws IOException {
             if (mSourceFile.isOtgFile()) {
                 // source is in otg
                 ContentResolver contentResolver = mContext.getContentResolver();
-                DocumentFile documentSourceFile = RootHelper.getDocumentFile(mSourceFile.getPath(),
+                DocumentFile documentSourceFile = OTGUtil.getDocumentFile(mSourceFile.getPath(),
                         mContext, false);
 
                 bufferedInputStream = new BufferedInputStream(contentResolver
@@ -135,7 +135,7 @@ private void startCopy(boolean lowOnMemory) throws IOException {
                 // target in OTG, obtain streams from DocumentFile Uri's
 
                 ContentResolver contentResolver = mContext.getContentResolver();
-                DocumentFile documentTargetFile = RootHelper.getDocumentFile(mTargetFile.getPath(),
+                DocumentFile documentTargetFile = OTGUtil.getDocumentFile(mTargetFile.getPath(),
                         mContext, true);
 
                 bufferedOutputStream = new BufferedOutputStream(contentResolver

File: src/main/java/com/amaze/filemanager/utils/HistoryManager.java
Patch:
@@ -185,6 +185,7 @@ public synchronized ArrayList<String[]> readTableSecondary(String table) {
                                 c.getString(c.getColumnIndex("PATH"))
                 });
             } catch (Exception e) {
+                e.printStackTrace();
             }
         } while (c.moveToPrevious());
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1342,7 +1342,7 @@ public void onServiceDisconnected(ComponentName name) {
                 if (mainFragment != null) {
                     switch (mainFragment.openMode) {
                         case OTG:
-                            getFutils().openFile(RootHelper.getDocumentFile(encryptBaseFile.getPath(),
+                            getFutils().openFile(OTGUtil.getDocumentFile(encryptBaseFile.getPath(),
                                     MainActivity.this, false), MainActivity.this);
                             break;
                         case SMB:

File: src/main/java/com/amaze/filemanager/ui/views/preference/PathSwitchPreference.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.preference.Preference;
 import android.support.annotation.IdRes;
+import android.support.v7.app.AppCompatDelegate;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Switch;
@@ -33,7 +34,8 @@ public PathSwitchPreference(Context context) {
 
     @Override
     protected View onCreateView(ViewGroup parent) {
-        setWidgetLayoutResource(R.layout.namepathswich_preference);
+        setWidgetLayoutResource(R.layout.namepathswitch_preference);
+        AppCompatDelegate.setCompatVectorFromResourcesEnabled(true);//selector in srcCompat isn't supported without this
         return super.onCreateView(parent);
     }
 

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -544,7 +544,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 if (mFile.exists()) {
                     //HFile hFile = new HFile(OpenMode.FILE, mFile.getPath());
                     //hFile.generateMode(this);
-                    getFutils().showPropertiesDialogWithoutPreference(mFile, this, getAppTheme());
+                    getFutils().showPropertiesDialogWithoutPermissions(mFile, this, getAppTheme());
                 } else Toast.makeText(this, R.string.not_allowed, Toast.LENGTH_SHORT).show();
                 break;
             case R.id.openwith:

File: src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -705,7 +705,7 @@ public void onClick(View view) {
                     public boolean onMenuItemClick(MenuItem item) {
                         switch (item.getItemId()) {
                             case R.id.about:
-                                utilsProvider.getFutils().showPropertiesDialogWithPreference((rowItem).generateBaseFile(),
+                                utilsProvider.getFutils().showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                                         rowItem.getPermissions(), (BasicActivity) mainFrag.getActivity(),
                                         BaseActivity.rootMode, utilsProvider.getAppTheme());
                                 /*PropertiesSheet propertiesSheet = new PropertiesSheet();

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -668,7 +668,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.about:
                     LayoutElement x;
                     x = getLayoutElement((plist.get(0)));
-                    utils.showPropertiesDialogWithPreference((x).generateBaseFile(), x.getPermissions(),
+                    utils.showPropertiesDialogWithPermissions((x).generateBaseFile(), x.getPermissions(),
                             (BasicActivity) getActivity(), BaseActivity.rootMode,
                             utilsProvider.getAppTheme());
                     /*PropertiesSheet propertiesSheet = new PropertiesSheet();

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -544,7 +544,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 if (mFile.exists()) {
                     //HFile hFile = new HFile(OpenMode.FILE, mFile.getPath());
                     //hFile.generateMode(this);
-                    getFutils().showPropertiesDialogWithoutPreference(mFile, this, getAppTheme());
+                    getFutils().showPropertiesDialogWithoutPermissions(mFile, this, getAppTheme());
                 } else Toast.makeText(this, R.string.not_allowed, Toast.LENGTH_SHORT).show();
                 break;
             case R.id.openwith:

File: src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -705,7 +705,7 @@ public void onClick(View view) {
                     public boolean onMenuItemClick(MenuItem item) {
                         switch (item.getItemId()) {
                             case R.id.about:
-                                utilsProvider.getFutils().showPropertiesDialogWithPreference((rowItem).generateBaseFile(),
+                                utilsProvider.getFutils().showPropertiesDialogWithPermissions((rowItem).generateBaseFile(),
                                         rowItem.getPermissions(), (BasicActivity) mainFrag.getActivity(),
                                         BaseActivity.rootMode, utilsProvider.getAppTheme());
                                 /*PropertiesSheet propertiesSheet = new PropertiesSheet();

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -668,7 +668,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                 case R.id.about:
                     LayoutElement x;
                     x = getLayoutElement((plist.get(0)));
-                    utils.showPropertiesDialogWithPreference((x).generateBaseFile(), x.getPermissions(),
+                    utils.showPropertiesDialogWithPermissions((x).generateBaseFile(), x.getPermissions(),
                             (BasicActivity) getActivity(), BaseActivity.rootMode,
                             utilsProvider.getAppTheme());
                     /*PropertiesSheet propertiesSheet = new PropertiesSheet();

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -836,12 +836,12 @@ public static int calculateInSampleSize(BitmapFactory.Options options,
         return inSampleSize;
     }
 
-    public void showPropertiesDialogWithPreference(BaseFile baseFile, final String permissions,
-                                                   BasicActivity basic, boolean isRoot, AppTheme appTheme) {
+    public void showPropertiesDialogWithPermissions(BaseFile baseFile, final String permissions,
+                                                    BasicActivity basic, boolean isRoot, AppTheme appTheme) {
         showPropertiesDialog(baseFile, permissions, basic, isRoot, appTheme, true, false);
     }
 
-    public void showPropertiesDialogWithoutPreference(final BaseFile f, BasicActivity activity, AppTheme appTheme) {
+    public void showPropertiesDialogWithoutPermissions(final BaseFile f, BasicActivity activity, AppTheme appTheme) {
         showPropertiesDialog(f, null, activity, false, appTheme, false, false);
     }
     public void showPropertiesDialogForStorage(final BaseFile f, BasicActivity activity, AppTheme appTheme) {

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadFolderSpaceData.java
Patch:
@@ -19,7 +19,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static com.amaze.filemanager.utils.Futils.getColor;
+import static com.amaze.filemanager.utils.Utils.getColor;
 
 /**
  * Loads data for chart in Futils.showPropertiesDialog()

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -778,7 +778,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     MAIN_ACTIVITY.COPY_PATH = null;
                     ArrayList<BaseFile> copie = new ArrayList<>();
                     for (int i3 = 0; i3 < plist.size(); i3++) {
-                        copie.add(getLayoutElement(i3).generateBaseFile());
+                        copie.add(getLayoutElement(plist.get(i3)).generateBaseFile());
                     }
                     MAIN_ACTIVITY.MOVE_PATH = copie;
                     MAIN_ACTIVITY.supportInvalidateOptionsMenu();

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadFolderSpaceData.java
Patch:
@@ -76,11 +76,13 @@ protected void onPostExecute(Pair<String, List<PieEntry>> data) {
         set.setXValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);
         set.setYValuePosition(PieDataSet.ValuePosition.OUTSIDE_SLICE);
         set.setSliceSpace(5f);
+        set.setValueLinePart2Length(1.05f);
+        set.setSelectionShift(0f);
 
         PieData pieData = new PieData(set);
         pieData.setValueFormatter(new SizeFormatter(context));
 
-        chart.setCenterText(new SpannableString(context.getString(R.string.total) + data.first));
+        chart.setCenterText(new SpannableString(context.getString(R.string.total) + "\n" + data.first));
         chart.setData(pieData);
         chart.notifyDataSetChanged();
         chart.invalidate();

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -939,6 +939,7 @@ public boolean onLongClick(View v) {
             chart.setDrawEntryLabels(false);
             chart.setDescription(null);
             chart.setNoDataText(c.getString(R.string.loading));
+            chart.setRotationAngle(0f);
 
             chart.getLegend().setEnabled(true);
             chart.getLegend().setForm(Legend.LegendForm.CIRCLE);

File: src/main/java/com/amaze/filemanager/services/asynctasks/GenerateHashes.java
Patch:
@@ -77,7 +77,7 @@ protected String[] doInBackground(Void... params) {
     @Override
     protected void onPostExecute(final String[] hashes) {
         super.onPostExecute(hashes);
-        if (!f.isDirectory()) {
+        if (!f.isDirectory() && f.getSize() != 0) {
             md5HashText.setText(hashes[0]);
             sha256Text.setText(hashes[1]);
 

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -946,7 +946,6 @@ public boolean onLongClick(View v) {
             tasksToDieWithDialog.add(loadFolderSpaceData);
         }
 
-        /*Permissions*/
         if(showPermissions) {
             final MainFragment main = ((MainActivity) basic).mainFragment;
             AppCompatButton appCompatButton = (AppCompatButton) v.findViewById(R.id.permissionsButton);

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -308,10 +308,10 @@ public void invalidateGplus(){
      * changes root access and hidden files visibility preferences.
      */
     private void setEnabledShortcuts() {
-        ArrayList<FoldersPref.Shortcut> currentValue = castStringListToTrioList(
-                TinyDB.getList(sharedPref, String.class, FoldersPref.KEY, null));
+        ArrayList<String> predigestedPref = TinyDB.getList(sharedPref, String.class, FoldersPref.KEY, null);
+        if(predigestedPref == null) return;
 
-        if(currentValue == null) return;
+        ArrayList<FoldersPref.Shortcut> currentValue = castStringListToTrioList(predigestedPref);
 
         for(int i = 0; i < currentValue.size(); i++) {
             if(FoldersPref.canShortcutTo(currentValue.get(i).directory, sharedPref)

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -477,7 +477,6 @@ public void onFinish() {
             oparrayList = savedInstanceState.getParcelableArrayList("oparrayList");
             operation = savedInstanceState.getInt("operation");
             selectedStorage = savedInstanceState.getInt("selectitem", SELECT_0);
-            adapter.toggleChecked(selectedStorage);
             //mainFragment = (Main) savedInstanceState.getParcelable("main_fragment");
         }
 
@@ -1696,6 +1695,7 @@ protected void onPostExecute(ArrayList<Item> items) {
                 super.onPostExecute(items);
                 adapter = new DrawerAdapter(MainActivity.this, MainActivity.this, items, MainActivity.this, sharedPref);
                 mDrawerList.setAdapter(adapter);
+                adapter.toggleChecked(selectedStorage);
             }
         }.execute();
     }

File: src/main/java/com/amaze/filemanager/adapters/RecyclerAdapter.java
Patch:
@@ -857,9 +857,9 @@ public void onButtonPressed(Intent intent, String password) {
                 }
                 if (x.endsWith(".zip") || x.endsWith(".jar") || x.endsWith(".apk") || x.endsWith(".rar") || x.endsWith(".tar") || x.endsWith(".tar.gz"))
                     popupMenu.getMenu().findItem(R.id.ex).setVisible(true);
-                if (x.endsWith(CryptUtil.CRYPT_EXTENSION) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2)
+                if (x.endsWith(CryptUtil.CRYPT_EXTENSION) && Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT)
                     popupMenu.getMenu().findItem(R.id.decrypt).setVisible(true);
-                else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2)
+                else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT)
                     popupMenu.getMenu().findItem(R.id.encrypt).setVisible(true);
                 popupMenu.show();
             }

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -1238,6 +1238,8 @@ public void onTouch() {
                 loadlist(home, true, OpenMode.FILE);
             }
         } catch (Exception e) {
+
+            e.printStackTrace();
         }
     }
 

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -45,6 +45,7 @@
 import com.amaze.filemanager.filesystem.HFile;
 import com.amaze.filemanager.filesystem.Operations;
 import com.amaze.filemanager.filesystem.RootHelper;
+import com.amaze.filemanager.utils.CloudUtil;
 import com.amaze.filemanager.utils.DataPackage;
 import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.GenericCopyUtil;

File: src/main/java/com/amaze/filemanager/utils/GenericCopyUtil.java
Patch:
@@ -162,7 +162,6 @@ private void startCopy(boolean lowOnMemory) throws IOException {
 
                 if (mSourceFile.isBoxFile()) {
                     // we're in the same provider, use api method
-                    bufferedInputStream.close();
                     cloudStorageBox.copy(CloudUtil.stripPath(OpenMode.BOX, mSourceFile.getPath()),
                             CloudUtil.stripPath(OpenMode.BOX, mTargetFile.getPath()));
                     return;
@@ -176,9 +175,9 @@ private void startCopy(boolean lowOnMemory) throws IOException {
                 // API doesn't support output stream, we'll upload the file directly
                 CloudStorage cloudStorageGdrive = DataUtils.getAccount(OpenMode.GDRIVE);
 
+
                 if (mSourceFile.isGoogleDriveFile()) {
                     // we're in the same provider, use api method
-                    bufferedInputStream.close();
                     cloudStorageGdrive.copy(CloudUtil.stripPath(OpenMode.GDRIVE, mSourceFile.getPath()),
                             CloudUtil.stripPath(OpenMode.GDRIVE, mTargetFile.getPath()));
                     return;
@@ -194,7 +193,6 @@ private void startCopy(boolean lowOnMemory) throws IOException {
 
                 if (mSourceFile.isOneDriveFile()) {
                     // we're in the same provider, use api method
-                    bufferedInputStream.close();
                     cloudStorageOnedrive.copy(CloudUtil.stripPath(OpenMode.ONEDRIVE, mSourceFile.getPath()),
                             CloudUtil.stripPath(OpenMode.ONEDRIVE, mTargetFile.getPath()));
                     return;

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2242,6 +2242,7 @@ public void updatePath(@NonNull final String news, boolean results, OpenMode ope
                 break;
             case CUSTOM:
                 newPath = mainActivityHelper.getIntegralNames(news);
+                break;
             case DROPBOX:
             case BOX:
             case ONEDRIVE:

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2382,6 +2382,7 @@ public void updatePath(@NonNull final String news, boolean results, OpenMode ope
                 break;
             case CUSTOM:
                 newPath = mainActivityHelper.getIntegralNames(news);
+                break;
             case DROPBOX:
             case BOX:
             case ONEDRIVE:
@@ -3320,4 +3321,4 @@ protected void onPostExecute(Boolean refreshDrawer) {
     public void onLoaderReset(Loader<Cursor> loader) {
 
     }
-}
\ No newline at end of file
+}

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2580,7 +2580,7 @@ public void onNewIntent(Intent i) {
             if (failedOps != null) {
                 mainActivityHelper.showFailedOperationDialog(failedOps, i.getBooleanExtra("move", false), this);
             }
-        } else if (intent.getCategories().contains(CLOUD_AUTHENTICATOR_GDRIVE)) {
+        } else if (i.getCategories() != null && i.getCategories().contains(CLOUD_AUTHENTICATOR_GDRIVE)) {
 
             // we used an external authenticator instead of APIs. Probably for Google Drive
             CloudRail.setAuthenticationResponse(intent);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -331,6 +331,7 @@ public void onCreate(Bundle savedInstanceState) {
         mainActivityHelper = new MainActivityHelper(this);
         initialiseFab();
 
+        // TODO: Create proper SQLite database handler class with calls to database from background thread
         history = new HistoryManager(this, "Table2");
         history.initializeTable(DataUtils.HISTORY, 0);
         history.initializeTable(DataUtils.HIDDEN, 0);
@@ -2719,10 +2720,11 @@ public void onNewIntent(Intent i) {
             if (failedOps != null) {
                 mainActivityHelper.showFailedOperationDialog(failedOps, i.getBooleanExtra("move", false), this);
             }
-        } else if (intent.getCategories().contains(CLOUD_AUTHENTICATOR_GDRIVE)) {
+        } else if (i.getCategories() != null && i.getCategories().contains(CLOUD_AUTHENTICATOR_GDRIVE)) {
 
             // we used an external authenticator instead of APIs. Probably for Google Drive
             CloudRail.setAuthenticationResponse(intent);
+
         } else if ((openProcesses = i.getBooleanExtra(KEY_INTENT_PROCESS_VIEWER, false))) {
             FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
             transaction.replace(R.id.content_frame, new ProcessViewer(), KEY_INTENT_PROCESS_VIEWER);

File: src/main/java/com/amaze/filemanager/fragments/CloudSheetFragment.java
Patch:
@@ -10,6 +10,7 @@
 import android.support.design.widget.BottomSheetDialogFragment;
 import android.view.View;
 import android.widget.LinearLayout;
+import android.widget.Toast;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;

File: src/main/java/com/amaze/filemanager/utils/CloudUtil.java
Patch:
@@ -53,7 +53,7 @@ public static String stripPath(OpenMode openMode, String path) {
                 }
                 break;
             case BOX:
-                if (path.equals(CloudHandler.CLOUD_PREFIX_DROPBOX + "/")) {
+                if (path.equals(CloudHandler.CLOUD_PREFIX_BOX + "/")) {
                     // we're at root, just replace the prefix
                     strippedPath = path.replace(CloudHandler.CLOUD_PREFIX_BOX, "");
                 } else {

File: src/main/java/com/amaze/filemanager/fragments/MainFragment.java
Patch:
@@ -941,7 +941,7 @@ public void onListItemClicked(int position, ImageView imageView) {
                         MAIN_ACTIVITY.isCloudOpen = true;
                         MAIN_ACTIVITY.cloudBaseFile = new BaseFile(getActivity().getExternalCacheDir()
                                 + "/" + sourceFile.getName());
-                        
+
                         new CopyFileCheck(this, getActivity().getExternalCacheDir().getPath(),
                                 false, MAIN_ACTIVITY, false).execute(baseFiles);
                     }
@@ -1328,7 +1328,7 @@ public void goBack() {
                     }
 
                 } else if (CURRENT_PATH.equals("/") || CURRENT_PATH.equals(home) ||
-                        CURRENT_PATH.equals(OTGUtil.PREFIX_OTG)
+                        CURRENT_PATH.equals(OTGUtil.PREFIX_OTG + "/")
                         || CURRENT_PATH.equals(CloudHandler.CLOUD_PREFIX_BOX + "/")
                         || CURRENT_PATH.equals(CloudHandler.CLOUD_PREFIX_DROPBOX + "/")
                         || CURRENT_PATH.equals(CloudHandler.CLOUD_PREFIX_GOOGLE_DRIVE + "/")

File: src/main/java/com/amaze/filemanager/utils/OTGUtil.java
Patch:
@@ -40,8 +40,8 @@ public static ArrayList<BaseFile> getDocumentFilesList(String path, Context cont
         for (int i = 0; i < parts.length; i++) {
 
             // first omit 'otg:/' before iterating through DocumentFile
-            if (path.equals(OTGUtil.PREFIX_OTG)) break;
-            if (parts[i].equals("")) continue;
+            if (path.equals(OTGUtil.PREFIX_OTG + "/")) break;
+            if (parts[i].equals("otg:") || parts[i].equals("")) continue;
             Log.d(context.getClass().getSimpleName(), "Currently at: " + parts[i]);
             // iterating through the required path to find the end point
             rootUri = rootUri.findFile(parts[i]);

File: src/main/java/com/amaze/filemanager/database/CryptHandler.java
Patch:
@@ -68,7 +68,7 @@ public void addEntry(EncryptedEntry encryptedEntry) throws IOException,
             NoSuchProviderException, IllegalBlockSizeException {
 
         ContentValues contentValues = new ContentValues();
-        contentValues.put(COLUMN_ENCRYPTED_ID, encryptedEntry.getId());
+        //contentValues.put(COLUMN_ENCRYPTED_ID, encryptedEntry.getId());
         contentValues.put(COLUMN_ENCRYPTED_PATH, encryptedEntry.getPath());
         contentValues.put(COLUMN_ENCRYPTED_PASSWORD, CryptUtil.encryptPassword(context,
                 encryptedEntry.getPassword()));
@@ -81,7 +81,7 @@ public void addEntry(EncryptedEntry encryptedEntry) throws IOException,
     public void clear(String path) {
         try {
             SQLiteDatabase sqLiteDatabase = getWritableDatabase();
-            sqLiteDatabase.delete(TABLE_ENCRYPTED, COLUMN_ENCRYPTED_PATH + " = ?s", new String[]{path});
+            sqLiteDatabase.delete(TABLE_ENCRYPTED, COLUMN_ENCRYPTED_PATH + " = ?", new String[]{path});
             sqLiteDatabase.close();
         } catch (NumberFormatException e) {
             e.printStackTrace();
@@ -99,7 +99,7 @@ public void updateEntry(EncryptedEntry oldEncryptedEntry, EncryptedEntry newEncr
         contentValues.put(COLUMN_ENCRYPTED_PASSWORD, CryptUtil.encryptPassword(context,
                 newEncryptedEntry.getPassword()));
 
-        sqLiteDatabase.update(TABLE_ENCRYPTED, contentValues, COLUMN_ENCRYPTED_ID + " = ?s",
+        sqLiteDatabase.update(TABLE_ENCRYPTED, contentValues, COLUMN_ENCRYPTED_ID + " = ?",
                 new String[]{oldEncryptedEntry.getId() + ""});
         sqLiteDatabase.close();
     }

File: src/main/java/com/amaze/filemanager/utils/CryptUtil.java
Patch:
@@ -82,7 +82,7 @@ public class CryptUtil {
     // TODO: Generate a random IV every time, and keep track of it (in database against encrypted files)
     private static final String IV = "LxbHiJhhUXcj";    // 12 byte long IV supported by android for GCM
 
-    public static final String CRYPT_EXTENSION = ".amze";
+    public static final String CRYPT_EXTENSION = ".aze";
 
     private ProgressHandler progressHandler;
     private ArrayList<HFile> failedOps;

File: src/main/java/com/amaze/filemanager/filesystem/BaseFile.java
Patch:
@@ -1,6 +1,5 @@
 package com.amaze.filemanager.filesystem;
 
-import android.content.Context;
 import android.os.Parcel;
 import android.os.Parcelable;
 
@@ -73,7 +72,6 @@ public void setSize(long size) {
     }
 
     /**
-     * @deprecated use {@link #isDirectory(Context)}
      * @return
      */
     public boolean isDirectory() {

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -333,8 +333,7 @@ private void copyFiles(final BaseFile sourceFile, final HFile targetFile,
                     }
                     targetFile.setLastModified(sourceFile.lastModified());
                     if(progressHandler.getCancelled())return;
-                    ArrayList<BaseFile> filePaths = sourceFile.getMode() == OpenMode.OTG ?
-                            sourceFile.listFiles(c) : sourceFile.listFiles(false);
+                    ArrayList<BaseFile> filePaths = sourceFile.listFiles(c, false);
                     for (BaseFile file : filePaths) {
                         HFile destFile = new HFile(targetFile.getMode(),targetFile.getPath(),
                                 file.getName(),file.isDirectory());

File: src/main/java/com/amaze/filemanager/activities/AboutActivity.java
Patch:
@@ -192,7 +192,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     private void switchIcons() {
         if (getAppTheme().equals(AppTheme.DARK)) {
             // dark theme
-            mAuthorsDivider.setBackgroundColor(getResources().getColor(R.color.divider_dark));
+            mAuthorsDivider.setBackgroundColor(getResources().getColor(R.color.divider_dark_card));
         }
     }
 

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -514,10 +514,9 @@ else if (Icons.isGeneric(rowItem.getDesc())) {
                         gradientDrawable.setColor(main.icon_skin_color);
                     }
                 } else gradientDrawable.setColor((main.icon_skin_color));
+
                 if (rowItem.getSize().equals(main.goback))
                     gradientDrawable.setColor(c1);
-
-
             }
             if (main.SHOW_PERMISSIONS)
                 holder.perm.setText(rowItem.getPermissions());

File: src/main/java/com/amaze/filemanager/filesystem/BaseFile.java
Patch:
@@ -91,6 +91,7 @@ public String getPermisson() {
     public void setPermisson(String permisson) {
         this.permisson = permisson;
     }
+
     protected BaseFile(Parcel in) {
         super(OpenMode.getOpenMode(in.readInt()),in.readString());
         permisson = in.readString();

File: src/main/java/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -592,7 +592,7 @@ protected Integer doInBackground(Bundle... p1) {
             }
 
             if(entries!=null && entries.size()!=0) {
-                if (f.getName().toLowerCase().endsWith(".zip"))
+                if (f.getName().toLowerCase().endsWith(".zip") || f.getName().toLowerCase().endsWith(".jar") || f.getName().toLowerCase().endsWith(".apk"))
                     extract(f, path, entries);
                 else if (f.getName().toLowerCase().endsWith(".rar"))
                     extractRar(f, path, entries);

File: src/main/java/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -592,7 +592,7 @@ protected Integer doInBackground(Bundle... p1) {
             }
 
             if(entries!=null && entries.size()!=0) {
-                if (f.getName().toLowerCase().endsWith(".zip"))
+                if (f.getName().toLowerCase().endsWith(".zip") || f.getName().toLowerCase().endsWith(".jar") || f.getName().toLowerCase().endsWith(".apk"))
                     extract(f, path, entries);
                 else if (f.getName().toLowerCase().endsWith(".rar"))
                     extractRar(f, path, entries);

File: src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -291,7 +291,7 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
             case R.id.ftp_timeout:
                 MaterialDialog.Builder timeoutBuilder = new MaterialDialog.Builder(getActivity());
 
-                timeoutBuilder.title(getResources().getString(R.string.ftp_timeout) + "(" +
+                timeoutBuilder.title(getResources().getString(R.string.ftp_timeout) + " (" +
                         getResources().getString(R.string.ftp_seconds) + ")");
                 timeoutBuilder.input(String.valueOf(FTPService.DEFAULT_TIMEOUT + " " +
                                 getResources().getString(R.string.ftp_seconds)), String.valueOf(getFTPTimeout()),

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -623,8 +623,8 @@ public void deleteFiles(ArrayList<Layoutelements> a, final Main b, List<Integer>
                         .append(")");
         }
 
-        String titleFiles = b.getResources().getString(R.string.title_files);
-        String titleDirs = b.getResources().getString(R.string.title_dirs);
+        String titleFiles = b.getResources().getString(R.string.title_files).toUpperCase();
+        String titleDirs = b.getResources().getString(R.string.title_dirs).toUpperCase();
 
         if(fileNames.length() == 0)
             c.content(b.getResources().getString(R.string.questiondelete) + "\n\n" + "---" +

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1753,7 +1753,7 @@ public void run() {
                         Intent intent1 = new Intent(con, CopyService.class);
                         intent1.putExtra(CopyService.TAG_COPY_SOURCES, oparrayList.get(i));
                         intent1.putExtra(CopyService.TAG_COPY_TARGET, oppatheList.get(i));
-                        startService(intent1);
+                        ServiceWatcherUtil.runService(this, intent1);
                     }
                     break;
                 case DataUtils.MOVE://moving

File: src/main/java/com/amaze/filemanager/services/asynctasks/MoveFiles.java
Patch:
@@ -19,7 +19,6 @@
 
 package com.amaze.filemanager.services.asynctasks;
 
-
 import android.content.Context;
 import android.content.Intent;
 import android.os.AsyncTask;
@@ -34,6 +33,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collections;
 
 import static com.amaze.filemanager.activities.BaseActivity.rootMode;
 
@@ -98,11 +98,12 @@ public void onPostExecute(Boolean movedCorrectly) {
         }
 
         //final folder cleaning
+        Collections.reverse(files);
         for (ArrayList<BaseFile> folder : files) {
             BaseFile folderPath = new BaseFile(folder.get(0).getParent());
 
             try {
-                if (folderPath.listOnlyFiles(rootMode).size() == 0)
+                if (folderPath.listFiles(rootMode).size() == 0)
                     folderPath.delete(context, rootMode);
             } catch (RootNotPermittedException e) {
                 e.printStackTrace();

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -357,7 +357,7 @@ public void launchSAF(HFile file) {
                     public void run() {
                         if(toast!=null)toast.cancel();
                         mainActivity.oppathe = path.getPath();
-                        mainActivity.operation = DataUtils.NEW_FOLDER;
+                        mainActivity.operation = DataUtils.NEW_FILE;
                         guideDialogForLEXA(mainActivity.oppathe);
                     }});
 

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -357,7 +357,7 @@ public void launchSAF(HFile file) {
                     public void run() {
                         if(toast!=null)toast.cancel();
                         mainActivity.oppathe = path.getPath();
-                        mainActivity.operation = DataUtils.NEW_FOLDER;
+                        mainActivity.operation = DataUtils.NEW_FILE;
                         guideDialogForLEXA(mainActivity.oppathe);
                     }});
 

File: src/main/java/com/amaze/filemanager/utils/provider/SyncUtils.java
Patch:
@@ -36,14 +36,13 @@ public static void CreateSyncAccount(Context context, String userName, OpenMode
 
         Account account = CloudAccountsService.GET_ACCOUNT(userName,
                 OpenMode.ACCOUNT_MAP.get(accountType));
-        AccountManager accountManager = (AccountManager) context.getSystemService(Context.ACCOUNT_SERVICE);
+        AccountManager accountManager = AccountManager.get(context);
 
-        if (accountManager.addAccountExplicitly(account, null, null)) {
+        if (accountManager.addAccountExplicitly(account, password, null)) {
             ContentResolver.setIsSyncable(account, DatabaseContract.PROVIDER_AUTHORITY, 1);
             ContentResolver.setSyncAutomatically(account, DatabaseContract.PROVIDER_AUTHORITY, true);
             ContentResolver.addPeriodicSync(account, DatabaseContract.PROVIDER_AUTHORITY,
                     new Bundle(), SYNC_FREQUENCY);
-            accountManager.setPassword(account, password);
             newAccount = true;
         }
 

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -180,7 +180,7 @@ public void guideDialogForLEXA(String path) {
         final MaterialDialog.Builder x = new MaterialDialog.Builder(mainActivity);
         x.theme(mainActivity.getAppTheme().getMaterialDialogTheme());
         x.title(R.string.needsaccess);
-        LayoutInflater layoutInflater = (LayoutInflater) mainActivity.getSystemService(mainActivity.LAYOUT_INFLATER_SERVICE);
+        LayoutInflater layoutInflater = (LayoutInflater) mainActivity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View view = layoutInflater.inflate(R.layout.lexadrawer, null);
         x.customView(view, true);
         // textView

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -180,7 +180,7 @@ public void guideDialogForLEXA(String path) {
         final MaterialDialog.Builder x = new MaterialDialog.Builder(mainActivity);
         x.theme(mainActivity.getAppTheme().getMaterialDialogTheme());
         x.title(R.string.needsaccess);
-        LayoutInflater layoutInflater = (LayoutInflater) mainActivity.getSystemService(mainActivity.LAYOUT_INFLATER_SERVICE);
+        LayoutInflater layoutInflater = (LayoutInflater) mainActivity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View view = layoutInflater.inflate(R.layout.lexadrawer, null);
         x.customView(view, true);
         // textView

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -310,7 +310,7 @@ void onBindView(RecyclerView.ViewHolder vholder,final int position1){
             holder.genericIcon.setImageDrawable(Icons.loadMimeIcon(zipViewer.getActivity(), rowItem.getName(), false,zipViewer.res));
             final StringBuilder stringBuilder = new StringBuilder(rowItem.getName());
             if (zipViewer.showLastModified)
-                holder.date.setText(Futils.getdate(rowItem.getTime(), "MMM dd, yyyy", zipViewer.year));
+                holder.date.setText(Futils.getdate(rowItem.getTime(), zipViewer.year));
             if (rowItem.isDirectory()) {
                 holder.genericIcon.setImageDrawable(folder);
                 gradientDrawable.setColor(Color.parseColor(zipViewer.iconskin));

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1763,6 +1763,9 @@ public void run() {
 
             if (!isDrawerLocked) mDrawerLayout.closeDrawer(mDrawerLinear);
             else onDrawerClosed();
+        } else if (requestCode == REQUEST_CODE_SAF && responseCode != Activity.RESULT_OK) {
+            // otg access not provided
+            pending_path = null;
         }
     }
 

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -348,7 +348,7 @@ public void onFinish() {
 
             if (openprocesses) {
                 android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-                transaction.replace(R.id.content_frame, new ProcessViewer());
+                transaction.replace(R.id.content_frame, new ProcessViewer(), KEY_INTENT_PROCESS_VIEWER);
                 //   transaction.addToBackStack(null);
                 select = 102;
                 openprocesses = false;
@@ -2419,7 +2419,7 @@ public void onNewIntent(Intent i) {
         } else if ((openprocesses = i.getBooleanExtra(KEY_INTENT_PROCESS_VIEWER, false))) {
 
             android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-            transaction.replace(R.id.content_frame, new ProcessViewer());
+            transaction.replace(R.id.content_frame, new ProcessViewer(), KEY_INTENT_PROCESS_VIEWER);
             //   transaction.addToBackStack(null);
             select = 102;
             openprocesses = false;

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -368,7 +368,7 @@ public void onFinish() {
 
             if (openprocesses) {
                 android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-                transaction.replace(R.id.content_frame, new ProcessViewer());
+                transaction.replace(R.id.content_frame, new ProcessViewer(), KEY_INTENT_PROCESS_VIEWER);
                 //   transaction.addToBackStack(null);
                 select = 102;
                 openprocesses = false;
@@ -2572,7 +2572,7 @@ public void onNewIntent(Intent i) {
         } else if ((openprocesses = i.getBooleanExtra(KEY_INTENT_PROCESS_VIEWER, false))) {
 
             android.support.v4.app.FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
-            transaction.replace(R.id.content_frame, new ProcessViewer());
+            transaction.replace(R.id.content_frame, new ProcessViewer(), KEY_INTENT_PROCESS_VIEWER);
             //   transaction.addToBackStack(null);
             select = 102;
             openprocesses = false;

File: src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -157,7 +157,7 @@ public void onClick(View v) {
                             URL a = new URL(t);
                             String userinfo = a.getUserInfo();
                             if (userinfo == null && user.length() > 0) {
-                                t = "smb://" + ((URLEncoder.encode(user + ":" + pass, "UTF-8") + "@")) + a.getHost() +a.getPath();
+                                t = "smb://" + ((URLEncoder.encode(user, "UTF-8") + ":" + URLEncoder.encode(pass, "UTF-8") + "@")) + a.getHost() +a.getPath();
                             }
                         } catch (Exception e) {
                             e.printStackTrace();

File: src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -157,7 +157,7 @@ public void onClick(View v) {
                             URL a = new URL(t);
                             String userinfo = a.getUserInfo();
                             if (userinfo == null && user.length() > 0) {
-                                t = "smb://" + ((URLEncoder.encode(user + ":" + pass, "UTF-8") + "@")) + a.getHost() +a.getPath();
+                                t = "smb://" + ((URLEncoder.encode(user, "UTF-8") + ":" + URLEncoder.encode(pass, "UTF-8") + "@")) + a.getHost() +a.getPath();
                             }
                         } catch (Exception e) {
                             e.printStackTrace();

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -384,7 +384,7 @@ public void onFinish() {
         }
 
         if (getAppTheme().equals(AppTheme.DARK)) {
-            mDrawerList.setBackgroundColor(ContextCompat.getColor(this, R.color.holo_dark_background));
+            mDrawerList.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         }
         mDrawerList.setDivider(null);
         if (!isDrawerLocked) {
@@ -1802,7 +1802,8 @@ public boolean onLongClick(View v) {
         frameLayout = (FrameLayout) findViewById(R.id.content_frame);
         indicator_layout = findViewById(R.id.indicator_layout);
         mDrawerLinear = (ScrimInsetsRelativeLayout) findViewById(R.id.left_drawer);
-        if (getAppTheme().equals(AppTheme.DARK)) mDrawerLinear.setBackgroundColor(getColor(R.color.holo_dark_background));
+        if (getAppTheme().equals(AppTheme.DARK))
+            mDrawerLinear.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         else mDrawerLinear.setBackgroundColor(Color.WHITE);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
         //mDrawerLayout.setStatusBarBackgroundColor(Color.parseColor((currentTab==1 ? skinTwo : skin)));

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -835,7 +835,7 @@ public void onClick(View v) {
 
                     // highlighting previous element in list
                     Map.Entry keyValueNew = (Map.Entry) nodes.get(--mCurrent).getKey();
-                    mInput.getText().setSpan(new BackgroundColorSpan(ContextCompat.getColor(this, R.color.search_text_highlight)),
+                    mInput.getText().setSpan(new BackgroundColorSpan(getResources().getColor(R.color.search_text_highlight)),
                             (Integer) keyValueNew.getKey(),
                             (Integer) keyValueNew.getValue(), Spanned.SPAN_INCLUSIVE_INCLUSIVE);
 
@@ -860,7 +860,7 @@ public void onClick(View v) {
                     }
 
                     Map.Entry keyValueNew = (Map.Entry) nodes.get(++mCurrent).getKey();
-                    mInput.getText().setSpan(new BackgroundColorSpan(ContextCompat.getColor(this, R.color.search_text_highlight)),
+                    mInput.getText().setSpan(new BackgroundColorSpan(getResources().getColor(R.color.search_text_highlight)),
                             (Integer) keyValueNew.getKey(),
                             (Integer) keyValueNew.getValue(), Spanned.SPAN_INCLUSIVE_INCLUSIVE);
 

File: src/main/java/com/amaze/filemanager/ui/views/SizeDrawable.java
Patch:
@@ -44,19 +44,19 @@ public SizeDrawable(Context context, AttributeSet attributeSet) {
         mPaint = new Paint();
         mPaint.setAntiAlias(true);
         mPaint.setStyle(Paint.Style.FILL);
-        mPaint.setColor(ContextCompat.getColor(getContext(),R.color.accent_indigo));
+        mPaint.setColor(getResources().getColor(R.color.accent_indigo));
        // mPaint.setStrokeCap(Paint.Cap.BUTT);
         mPaint.setStrokeWidth(strokeWidth);
         mPaint1 = new Paint();
         mPaint1.setAntiAlias(true);
         mPaint1.setStyle(Paint.Style.FILL);
-        mPaint1.setColor(ContextCompat.getColor(getContext(),R.color.accent_red));
+        mPaint1.setColor(getResources().getColor(R.color.accent_red));
       //  mPaint1.setStrokeCap(Paint.Cap.BUTT);
         mPaint1.setStrokeWidth(strokeWidth);
         mPaint2 = new Paint();
         mPaint2.setAntiAlias(true);
         mPaint2.setStyle(Paint.Style.FILL);
-        mPaint2.setColor(ContextCompat.getColor(getContext(),R.color.accent_green));
+        mPaint2.setColor(getResources().getColor(R.color.accent_green));
        // mPaint2.setStrokeCap(Paint.Cap.BUTT);
         mPaint2.setStrokeWidth(strokeWidth);
         twenty = dpToPx(10);

File: src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -263,7 +263,8 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
                 if (ch.isChecked())
                     smbFile = connectingWithSmbServer(new String[]{ipa, "", "",domaind}, true);
                 else {
-                    String useru = user.getText().toString();
+                    String useraw = user.getText().toString();
+                    String useru = useraw.replaceAll(" ", "\\ ");
                     String passp = pass.getText().toString();
                     smbFile = connectingWithSmbServer(new String[]{ipa, useru, passp,domaind}, false);
                 }

File: src/main/java/com/amaze/filemanager/utils/ServiceWatcherUtil.java
Patch:
@@ -83,7 +83,7 @@ public void run() {
      * Thus avoids posting any callback after service has stopped.
      */
     public void stopWatch() {
-        handler.post(runnable);
+        if (handlerThread.isAlive()) handler.post(runnable);
     }
 
     /**

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1956,7 +1956,7 @@ public boolean onLongClick(View v) {
         frameLayout = (FrameLayout) findViewById(R.id.content_frame);
         indicator_layout = findViewById(R.id.indicator_layout);
         mDrawerLinear = (ScrimInsetsRelativeLayout) findViewById(R.id.left_drawer);
-        if (getAppTheme().equals(AppTheme.DARK)) mDrawerLinear.setBackgroundColor(getColor(R.color.holo_dark_background));
+        if (getAppTheme().equals(AppTheme.DARK)) mDrawerLinear.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         else mDrawerLinear.setBackgroundColor(Color.WHITE);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
         //mDrawerLayout.setStatusBarBackgroundColor(Color.parseColor((currentTab==1 ? skinTwo : skin)));

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1956,7 +1956,7 @@ public boolean onLongClick(View v) {
         frameLayout = (FrameLayout) findViewById(R.id.content_frame);
         indicator_layout = findViewById(R.id.indicator_layout);
         mDrawerLinear = (ScrimInsetsRelativeLayout) findViewById(R.id.left_drawer);
-        if (getAppTheme().equals(AppTheme.DARK)) mDrawerLinear.setBackgroundColor(getColor(R.color.holo_dark_background));
+        if (getAppTheme().equals(AppTheme.DARK)) mDrawerLinear.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         else mDrawerLinear.setBackgroundColor(Color.WHITE);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
         //mDrawerLayout.setStatusBarBackgroundColor(Color.parseColor((currentTab==1 ? skinTwo : skin)));

File: src/main/java/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -560,6 +560,8 @@ else if(f.getName().toLowerCase().endsWith(".tar") || f.getName().toLowerCase().
 
         @Override
         public void onPostExecute(Integer b) {
+
+            watcherUtil.stopWatch();
             Intent intent = new Intent("loadlist");
             sendBroadcast(intent);
             stopSelf();

File: src/main/java/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -195,6 +195,7 @@ protected Integer doInBackground(Bundle... p1) {
         @Override
         public void onPostExecute(Integer b) {
 
+            watcherUtil.stopWatch();
             Intent intent = new Intent("loadlist");
             sendBroadcast(intent);
             stopSelf();

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -11,6 +11,7 @@
 import android.graphics.drawable.GradientDrawable;
 import android.os.Build;
 import android.support.v7.widget.RecyclerView;
+import android.text.format.Formatter;
 import android.util.SparseBooleanArray;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -322,7 +323,7 @@ void onBindView(RecyclerView.ViewHolder vholder,final int position1){
                     }
                 } } else {
                 if (zipViewer.showSize)
-                    holder.txtDesc.setText(Futils.readableFileSize(rowItem.getSize()));
+                    holder.txtDesc.setText(Formatter.formatFileSize(c, rowItem.getSize()));
                 holder.txtTitle.setText(rowItem.getName().substring(rowItem.getName().lastIndexOf("/") + 1));
                 if (zipViewer.coloriseIcons) {
                     if (Icons.isVideo(rowItem.getName()) || Icons.isPicture(rowItem.getName()))

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -34,6 +34,7 @@
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.app.ListFragment;
+import android.text.format.Formatter;
 import android.view.Menu;
 import android.view.MenuInflater;
 import android.view.MenuItem;
@@ -210,7 +211,7 @@ protected ArrayList<Layoutelements> doInBackground(Void[] p1) {
                     a.add(new Layoutelements(new BitmapDrawable(getActivity().getResources(),
                             BitmapFactory.decodeResource(getActivity().getResources(), R.drawable.ic_doc_apk_grid)),
                             object.applicationInfo.loadLabel(p).toString(), object.applicationInfo.publicSourceDir,
-                            object.packageName, object.versionName, Futils.readableFileSize(f.length()),f.length(), false,
+                            object.packageName, object.versionName, Formatter.formatFileSize(getContext(), f.length()),f.length(), false,
                             f.lastModified()+"", false));
                     c.add(object);
                 }

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -49,6 +49,7 @@
 import android.support.v7.widget.DefaultItemAnimator;
 import android.support.v7.widget.GridLayoutManager;
 import android.support.v7.widget.LinearLayoutManager;
+import android.text.format.Formatter;
 import android.util.DisplayMetrics;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -1318,7 +1319,7 @@ public ArrayList<Layoutelements> addToSmb(SmbFile[] mFile, String path) throws S
             } else {
                 file_count++;
                 try {
-                    Layoutelements layoutelements = new Layoutelements(Icons.loadMimeIcon(getActivity(), mFile[i].getPath(), !IS_LIST, res), name, mFile[i].getPath(), "", "", Futils.readableFileSize(mFile[i].length()), mFile[i].length(), false, mFile[i].lastModified() + "", false);
+                    Layoutelements layoutelements = new Layoutelements(Icons.loadMimeIcon(getActivity(), mFile[i].getPath(), !IS_LIST, res), name, mFile[i].getPath(), "", "", Formatter.formatFileSize(getContext(), mFile[i].length()), mFile[i].length(), false, mFile[i].lastModified() + "", false);
                     layoutelements.setMode(OpenMode.SMB);
                     searchHelper.add(layoutelements.generateBaseFile());
                     a.add(layoutelements);
@@ -1346,7 +1347,7 @@ private void addTo(BaseFile mFile) {
                 try {
                     if (mFile.getSize() != -1) {
                         longSize = Long.valueOf(mFile.getSize());
-                        size = Futils.readableFileSize(longSize);
+                        size = Formatter.formatFileSize(getContext(), longSize);
                     } else {
                         size = "";
                         longSize = 0;

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -32,6 +32,7 @@
 import android.os.Bundle;
 import android.os.IBinder;
 import android.support.v4.app.NotificationCompat;
+import android.text.format.Formatter;
 import android.util.Log;
 
 import com.amaze.filemanager.R;
@@ -450,8 +451,8 @@ private void publishResults(int id, String fileName, int sourceFiles, int source
             int title = R.string.copying;
             if (move) title = R.string.moving;
             mBuilder.setContentTitle(c.getResources().getString(title));
-            mBuilder.setContentText(fileName + " " + Futils.readableFileSize(writtenSize) + "/" +
-                    Futils.readableFileSize(totalSize));
+            mBuilder.setContentText(fileName + " " + Formatter.formatFileSize(c, writtenSize) + "/" +
+                    Formatter.formatFileSize(c, totalSize));
             int id1 = Integer.parseInt("456" + id);
             mNotifyManager.notify(id1, mBuilder.build());
             if (writtenSize == totalSize || totalSize == 0) {

File: src/main/java/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -32,6 +32,7 @@
 import android.os.IBinder;
 import android.preference.PreferenceManager;
 import android.support.v4.app.NotificationCompat;
+import android.text.format.Formatter;
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
@@ -269,7 +270,7 @@ private void publishResults(int id, String fileName, int sourceFiles, int source
             int title = R.string.compressing;
             mBuilder.setContentTitle(c.getResources().getString(title));
             mBuilder.setContentText(new File(fileName).getName() + " " +
-                    Futils.readableFileSize(done) + "/" + Futils.readableFileSize(total));
+                    Formatter.formatFileSize(c, done) + "/" + Formatter.formatFileSize(c, total));
             int id1 = Integer.parseInt("789" + id);
             mNotifyManager.notify(id1, mBuilder.build());
             if (done == total || total == 0) {

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -23,6 +23,7 @@
 import android.database.Cursor;
 import android.os.AsyncTask;
 import android.provider.MediaStore;
+import android.text.format.Formatter;
 import android.widget.Toast;
 
 import com.amaze.filemanager.activities.BaseActivity;
@@ -216,7 +217,7 @@ private ArrayList<Layoutelements> addTo(ArrayList<BaseFile> mFile) {
                     try {
                         if (ele.getSize() != -1) {
                             longSize = Long.valueOf(ele.getSize());
-                            size = Futils.readableFileSize(longSize);
+                            size = Formatter.formatFileSize(c, longSize);
                         } else {
                             size = "";
                             longSize = 0;

File: src/main/java/com/amaze/filemanager/utils/share/ShareAdapter.java
Patch:
@@ -7,7 +7,6 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
 import android.widget.ImageView;
 import android.widget.TextView;
 
@@ -66,8 +65,8 @@ class ViewHolder extends RecyclerView.ViewHolder {
 
             rootView = view;
 
-            TextView a = ((TextView) view.findViewById(R.id.firstline));
-            ImageView v = (ImageView) view.findViewById(R.id.icon);
+            a = ((TextView) view.findViewById(R.id.firstline));
+            v = (ImageView) view.findViewById(R.id.icon);
         }
 
         void render(final int position) {

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -74,9 +74,9 @@ protected Boolean doInBackground(ArrayList<BaseFile>... p1) {
             }
         } else {
 
-            for(BaseFile a:files)
+            for(BaseFile a : files)
                 try {
-                    (a).delete(cd,rootMode);
+                    (a).delete(cd, rootMode);
                 } catch (RootNotPermittedException e) {
                     e.printStackTrace();
                     b = false;

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -818,7 +818,7 @@ public static boolean copyToClipboard(Context context, String text) {
             android.content.ClipboardManager clipboard = (android.content.ClipboardManager) context
                     .getSystemService(context.CLIPBOARD_SERVICE);
             android.content.ClipData clip = android.content.ClipData
-                    .newPlainText("Path copied to clipboard", text);
+                    .newPlainText(context.getString(R.string.clipboard_path_copy), text);
             clipboard.setPrimaryClip(clip);
             return true;
         } catch (Exception e) {

File: src/main/java/com/amaze/filemanager/fragments/PropertiesSheet.java
Patch:
@@ -62,7 +62,7 @@ public void setupDialog(Dialog dialog, int style) {
         mFileNameTextView = (TextView) rootView.findViewById(R.id.text_view_file_name);
         mFileNameTextView.setText(mFile.getName());
         mFileTypeTextView = (TextView) rootView.findViewById(R.id.text_view_file_type);
-        mFileTypeTextView.setText(mFile.getName().substring(mFile.getName().lastIndexOf(".")));
+        mFileTypeTextView.setText(mFile.isDirectory() ? getString(R.string.folder) : mFile.getName().substring(mFile.getName().lastIndexOf(".")));
         mFileSizeTextView = (TextView) rootView.findViewById(R.id.text_view_file_size);
         mFileSizeTextView.setText(Math.round(mFile.getSize()) + "");
         mFileLocationTextView = (TextView) rootView.findViewById(R.id.text_view_file_location);

File: src/main/java/com/amaze/filemanager/utils/share/ShareAdapter.java
Patch:
@@ -7,7 +7,6 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.ArrayAdapter;
 import android.widget.ImageView;
 import android.widget.TextView;
 
@@ -66,8 +65,8 @@ class ViewHolder extends RecyclerView.ViewHolder {
 
             rootView = view;
 
-            TextView a = ((TextView) view.findViewById(R.id.firstline));
-            ImageView v = (ImageView) view.findViewById(R.id.icon);
+            a = ((TextView) view.findViewById(R.id.firstline));
+            v = (ImageView) view.findViewById(R.id.icon);
         }
 
         void render(final int position) {

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -50,7 +50,6 @@
 import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v4.provider.DocumentFile;
 import android.support.v7.widget.AppCompatButton;
-import android.text.Html;
 import android.text.TextUtils;
 import android.view.View;
 import android.widget.CheckBox;
@@ -991,7 +990,7 @@ public void onFinish() {
 
     public static void showSMBHelpDialog(Context m,String acc){
         MaterialDialog.Builder b=new MaterialDialog.Builder(m);
-        b.content(Html.fromHtml(m.getResources().getString(R.string.smb_instructions)));
+        b.content(m.getText(R.string.smb_instructions));
         b.positiveText(R.string.doit);
         b.positiveColor(Color.parseColor(acc));
         b.build().show();

File: src/main/java/com/amaze/filemanager/utils/GenericCopyUtil.java
Patch:
@@ -34,7 +34,7 @@ public class GenericCopyUtil {
     private BaseFile mSourceFile;
     private HFile mTargetFile;
     private Context mContext;   // context needed to find the DocumentFile in otg/sd card
-    private static final String PATH_FILE_DESCRIPTOR = "/proc/self/fd/";
+    public static final String PATH_FILE_DESCRIPTOR = "/proc/self/fd/";
 
     public static final int DEFAULT_BUFFER_SIZE =  8192;
 

File: src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -204,10 +204,10 @@ public static DocumentFile getDocumentFile(String path, Context context) {
             // iterating through the required path to find the end point
 
             DocumentFile nextDocument = rootUri.findFile(parts[i]);
-            /*if (nextDocument == null || !nextDocument.exists()) {
+            if (nextDocument == null || !nextDocument.exists()) {
                 nextDocument = rootUri.createFile(parts[i].substring(parts[i].lastIndexOf(".")), parts[i]);
                 Log.d(context.getClass().getSimpleName(), "NOT FOUND! File created: " + parts[i]);
-            }*/
+            }
             rootUri = nextDocument;
         }
         return rootUri;

File: src/main/java/com/amaze/filemanager/services/asynctasks/CopyFileCheck.java
Patch:
@@ -109,9 +109,9 @@ public void showDialog() {
                     if (!move) {
 
                         Intent intent = new Intent(con, CopyService.class);
-                        intent.putParcelableArrayListExtra("FILE_PATHS",ab);
-                        intent.putExtra("COPY_DIRECTORY", path);
-                        intent.putExtra("MODE",openMode);
+                        intent.putParcelableArrayListExtra(CopyService.TAG_COPY_SOURCES, ab);
+                        intent.putExtra(CopyService.TAG_COPY_TARGET, path);
+                        intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, openMode.ordinal());
                         ServiceWatcherUtil.runService(mainActivity, intent);
                     } else {
 

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -116,6 +116,7 @@ else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
                 try {
                     SmbFile[] smbFile = hFile.getSmbFile(5000).listFiles();
                     list = ma.addToSmb(smbFile, path);
+                    openmode = OpenMode.SMB;
                 } catch (SmbAuthException e) {
                     if(!e.getMessage().toLowerCase().contains("denied"))
                         ma.reauthenticateSmb();
@@ -169,6 +170,7 @@ else if (android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()) {
                 break;
             case OTG:
                 list = addTo(listOtg(path));
+                openmode = OpenMode.OTG;
                 break;
             default:
                 // we're neither in OTG not in SMB, load the list based on root/general filesystem

File: src/main/java/com/amaze/filemanager/utils/theme/PreferencesAppThemeManager.java
Patch:
@@ -1,14 +1,13 @@
 package com.amaze.filemanager.utils.theme;
 
 import android.content.SharedPreferences;
-import android.util.Log;
 
 public class PreferencesAppThemeManager implements AppThemeManagerInterface {
     private SharedPreferences preferences;
     private AppTheme appTheme;
 
     public PreferencesAppThemeManager(SharedPreferences preferences) {
-        Log.d("ThemeManager", "INSTANTIATE");
+
         this.preferences = preferences;
         appTheme = loadFromPreferences(preferences);
     }
@@ -31,7 +30,6 @@ private AppTheme loadFromPreferences(SharedPreferences preferences) {
 
     @Override
     public AppTheme getAppTheme() {
-        Log.d("AppTheme", "Get " + appTheme.name());
         return appTheme;
     }
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1069,9 +1069,9 @@ public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequ
 
                         arrayList = COPY_PATH;
                         Intent intent = new Intent(con, CopyService.class);
-                        intent.putParcelableArrayListExtra("FILE_PATHS",arrayList);
-                        intent.putExtra("COPY_DIRECTORY", path);
-                        intent.putExtra("MODE",ma.openMode);
+                        intent.putParcelableArrayListExtra(CopyService.TAG_COPY_SOURCES, arrayList);
+                        intent.putExtra(CopyService.TAG_COPY_TARGET, path);
+                        intent.putExtra(CopyService.TAG_COPY_OPEN_MODE, ma.openMode.ordinal());
 
                         ServiceWatcherUtil.runService(mainActivity, intent);
                     } else if (MOVE_PATH!=null){

File: src/main/java/com/amaze/filemanager/activities/BaseActivity.java
Patch:
@@ -30,7 +30,7 @@ public class BaseActivity extends BasicActivity {
     boolean checkStorage=true;
 
     @Override
-    public void onCreate(final Bundle savedInstanceState) {
+    public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(this);
 

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -301,7 +301,7 @@ void onBindView(RecyclerView.ViewHolder vholder,final int position1){
                 utilsProvider.getAppTheme(), zipViewer.getResources().getDisplayMetrics()));
 
         if(rowItem.getEntry()==null){
-            holder.genericIcon.setImageDrawable(zipViewer.getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha));
+            holder.genericIcon.setImageDrawable(zipViewer.getResources().getDrawable(R.drawable.ic_arrow_left_white_24dp));
             gradientDrawable.setColor(Color.parseColor("#757575"));
             holder.txtTitle.setText("..");
             holder.txtDesc.setText("");

File: src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -166,8 +166,8 @@ private static boolean waitForCommand(Command cmd, long time) {
     }*/
 
     /**
-     * Runs the command and stores output in a list. The listener is set on the caller thread,
-     * thus any code run in callback must be thread safe.
+     * Runs the command and stores output in a list. The listener is set on the handler
+     * thread {@link MainActivity#handlerThread} thus any code run in callback must be thread safe.
      * Command is run from the root context (u:r:SuperSU0)
      * @param cmd the command
      * @return a list of results. Null only if the command passed is a blocking call or no output is
@@ -178,7 +178,7 @@ public static ArrayList<String> runShellCommand(String cmd) throws RootNotPermit
         //if (!MainActivity.shellInteractive.isRunning()) throw new RootNotPermittedException();
         final ArrayList<String> result = new ArrayList<>();
 
-        // setting STDOUT listener so as to avoid extra buffer and possible memory loss by superuser
+        // callback being called on a background handler thead
         MainActivity.shellInteractive.addCommand(cmd, 0, new Shell.OnCommandResultListener() {
             @Override
             public void onCommandResult(int commandCode, int exitCode, List<String> output) {

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1016,7 +1016,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, String p
                             && !path.equals("otg:/")) {
                         if (bitmap.size() == 0 || !bitmap.get(0).getSize().equals(goback)) {
 
-                            Bitmap iconBitmap = BitmapFactory.decodeResource(res, R.drawable.abc_ic_ab_back_mtrl_am_alpha);
+                            Bitmap iconBitmap = BitmapFactory.decodeResource(res, R.drawable.ic_arrow_left_white_24dp);
                             bitmap.add(0,
                                     utils.newElement(new BitmapDrawable(res, iconBitmap),
                                             "..", "", "", goback, 0, false, true, ""));

File: src/main/java/com/amaze/filemanager/filesystem/Operations.java
Patch:
@@ -74,7 +74,7 @@ protected Void doInBackground(Void... params) {
 
                     // first check whether new directory already exists
                     DocumentFile directoryToCreate = RootHelper.getDocumentFile(file.getPath(), context);
-                    if (directoryToCreate.exists()) errorCallBack.exists(file);
+                    if (directoryToCreate!=null) errorCallBack.exists(file);
 
                     DocumentFile parentDirectory = RootHelper.getDocumentFile(file.getParent(), context);
                     if (parentDirectory.isDirectory())  {
@@ -154,7 +154,7 @@ protected Void doInBackground(Void... params) {
 
                     // first check whether new file already exists
                     DocumentFile fileToCreate = RootHelper.getDocumentFile(file.getPath(), context);
-                    if (fileToCreate.exists()) errorCallBack.exists(file);
+                    if (fileToCreate!=null) errorCallBack.exists(file);
 
                     DocumentFile parentDirectory = RootHelper.getDocumentFile(file.getParent(), context);
                     if (parentDirectory.isDirectory())  {
@@ -242,7 +242,7 @@ protected Void doInBackground(Void... params) {
                 } else if (oldFile.isOtgFile()) {
                     DocumentFile oldDocumentFile = RootHelper.getDocumentFile(oldFile.getPath(), context);
                     DocumentFile newDocumentFile = RootHelper.getDocumentFile(newFile.getPath(), context);
-                    if (newDocumentFile.exists()) {
+                    if (newDocumentFile!=null) {
                         errorCallBack.exists(newFile);
                         return null;
                     }

File: src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -258,10 +258,10 @@ public static DocumentFile getDocumentFile(String path, Context context) {
             // iterating through the required path to find the end point
 
             DocumentFile nextDocument = rootUri.findFile(parts[i]);
-            if (nextDocument == null || !nextDocument.exists()) {
+            /*if (nextDocument == null || !nextDocument.exists()) {
                 nextDocument = rootUri.createFile(parts[i].substring(parts[i].lastIndexOf(".")), parts[i]);
                 Log.d(context.getClass().getSimpleName(), "NOT FOUND! File created: " + parts[i]);
-            }
+            }*/
             rootUri = nextDocument;
         }
         return rootUri;

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -93,7 +93,7 @@ protected ArrayList<Layoutelements> doInBackground(String... params) {
         if (openmode == OpenMode.UNKNOWN) {
             HFile hFile = new HFile(OpenMode.UNKNOWN, path);
             hFile.generateMode(ma.getActivity());
-            if (hFile.isDirectory() && !hFile.isSmb()) {
+            if (hFile.isLocal()) {
                 openmode = OpenMode.FILE;
             } else if (hFile.isSmb()) {
                 openmode = OpenMode.SMB;

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -64,7 +64,8 @@ public RarAdapter(Context c, UtilitiesProviderInterface utilsProvider, ArrayList
         unknown = c.getResources().getDrawable(R.drawable.ic_doc_generic_am);
         this.zipViewer = zipViewer;
     }
-    public RarAdapter(Context c, ArrayList<ZipObj> enter, ZipViewer zipViewer,boolean l) {
+    public RarAdapter(Context c, UtilitiesProviderInterface utilsProvider, ArrayList<ZipObj> enter, ZipViewer zipViewer,boolean l) {
+        this.utilsProvider = utilsProvider;
         this.enter1 = enter;
         for (int i = 0; i < enter.size(); i++) {
             myChecked.put(i, false);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -566,7 +566,7 @@ public void bbar() {
     int file=0,folder=0;
     public void createviews(ArrayList<ZipObj> zipEntries, String dir) {
         if(rarAdapter==null) {
-            zipViewer.rarAdapter = new RarAdapter(zipViewer.getActivity(), zipEntries, zipViewer,true);
+            zipViewer.rarAdapter = new RarAdapter(zipViewer.getActivity(), utilsProvider, zipEntries, zipViewer,true);
             zipViewer.listView.setAdapter(zipViewer.rarAdapter);
         }
         else rarAdapter.generate(zipEntries,true);

File: src/main/java/com/amaze/filemanager/utils/color/ColorUsage.java
Patch:
@@ -68,6 +68,6 @@ public int getDefaultColor() {
      */
     @NonNull
     public static ColorUsage getPrimary(int num) {
-        return num == 2 ? PRIMARY_TWO : PRIMARY;
+        return num == 1 ? PRIMARY_TWO : PRIMARY;
     }
 }

File: src/main/java/com/amaze/filemanager/services/asynctasks/ZipExtractTask.java
Patch:
@@ -6,6 +6,7 @@
 
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.filesystem.RootHelper;
+import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.UtilitiesProviderInterface;
 import com.github.junrar.Archive;
 import com.github.junrar.exception.RarException;
@@ -68,7 +69,7 @@ protected void onPostExecute(Void aVoid) {
         String cmd = "chmod 777 " + output.getPath();
         Log.d("change permissions", cmd);
         RootHelper.runAndWait(cmd, false);
-        utilsProvider.getFutils().openFile(output, (MainActivity) zipViewer);
+        new Futils().openFile(output, (MainActivity) zipViewer);
 }
     
 private void unzipEntry1(ZipFile zipfile, ZipEntry entry, String outputDir)

File: src/main/java/com/amaze/filemanager/utils/OtgCRUD.java
Patch:
@@ -6,15 +6,15 @@
  * Created by vishal on 7/11/16.
  */
 
-public class OtgCRUG {
+public class OtgCRUD {
 
     private Uri otgUri = null;
 
     /**
      * Default constructor
      * @param uri the uri pointing to content provider for OTG
      */
-    public OtgCRUG(Uri uri) {
+    public OtgCRUD(Uri uri) {
         this.otgUri = uri;
     }
 }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -133,7 +133,6 @@
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.PreferenceUtils;
-import com.amaze.filemanager.utils.broadcast.receivers.OtgBroadcastReceiver;
 import com.amaze.filemanager.utils.color.ColorUsage;
 import com.github.clans.fab.FloatingActionButton;
 import com.github.clans.fab.FloatingActionMenu;
@@ -264,7 +263,7 @@ public void onCreate(Bundle savedInstanceState) {
         DataUtils.registerOnDataChangedListener(this);
         setContentView(R.layout.main_toolbar);
         initialiseViews();
-        tabHandler = new TabHandler(this, null, null, 1);
+        tabHandler = new TabHandler(this);
         utils = getFutils();
         mainActivityHelper = new MainActivityHelper(this);
         initialiseFab();

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -81,6 +81,7 @@
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.filesystem.HFile;
 import com.amaze.filemanager.filesystem.MediaStoreHack;
+import com.amaze.filemanager.filesystem.Operations;
 import com.amaze.filemanager.services.asynctasks.LoadList;
 import com.amaze.filemanager.ui.Layoutelements;
 import com.amaze.filemanager.ui.icons.IconHolder;
@@ -1101,8 +1102,8 @@ public void onPositive(MaterialDialog materialDialog) {
                     if (f.isDirectory() && !name.endsWith("/"))
                         name = name + "/";
 
-                if (MainActivityHelper.validateFileName(new HFile(openMode, CURRENT_PATH + "/" + name), false)) {
-
+                if (!MainActivityHelper.isNewDirectoryRecursive(new HFile(openMode, CURRENT_PATH + "/" + name)) &&
+                        Operations.isFileNameValid(name)) {
                     if (openMode == 1)
                         MAIN_ACTIVITY.mainActivityHelper.rename(openMode, f.getPath(), CURRENT_PATH + name, getActivity(), BaseActivity.rootMode);
                     else

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -127,6 +127,7 @@
 import com.amaze.filemanager.utils.BookSorter;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.DataUtils.DataChangeListener;
+import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.HistoryManager;
 import com.amaze.filemanager.utils.MainActivityHelper;
 import com.amaze.filemanager.utils.PreferenceUtils;
@@ -475,7 +476,7 @@ public List<String> getStorageDirectories() {
             String strings[] = FileUtil.getExtSdCardPathsForActivity(this);
             for (String s : strings) {
                 File f = new File(s);
-                if (!rv.contains(s) && Futils.canListFiles(f))
+                if (!rv.contains(s) && getFutils().canListFiles(f))
                     rv.add(s);
             }
         }
@@ -932,7 +933,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     Toast.makeText(mainActivity, R.string.not_allowed, Toast.LENGTH_SHORT).show();
                     break;
                 }
-                final MaterialDialog b = Futils.showBasicDialog(mainActivity, BaseActivity.accentSkin, theme1,
+                final MaterialDialog b = getFutils().showBasicDialog(mainActivity, BaseActivity.accentSkin, theme1,
                         new String[]{getResources().getString(R.string.questionset),
                                 getResources().getString(R.string.setashome), getResources().getString(R.string.yes), getResources().getString(R.string.no), null});
                 b.getActionButton(DialogAction.POSITIVE).setOnClickListener(new View.OnClickListener() {

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -35,6 +35,7 @@
 import android.database.Cursor;
 import android.graphics.BitmapFactory;
 import android.graphics.Color;
+import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
 import android.media.MediaScannerConnection;
 import android.net.Uri;
@@ -982,7 +983,7 @@ public void onNegative(MaterialDialog materialDialog) {
 
     }
 
-    public Layoutelements newElement(Drawable i, String d,String permissions,String symlink,String size,long longSize,boolean directorybool,boolean b,String date) {
+    public Layoutelements newElement(BitmapDrawable i, String d, String permissions, String symlink, String size, long longSize, boolean directorybool, boolean b, String date) {
         Layoutelements item = new Layoutelements(i, new File(d).getName(), d,permissions,symlink,size,longSize,b,date,directorybool);
         return item;
     }

File: src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -152,7 +152,7 @@ public void run() {
                 File file1=getExternalCacheDir();
                 if(file1==null)file1=getCacheDir();
 
-                if (!file.canRead() && rootmode) {
+                if (!file.canRead() && BaseActivity.rootMode) {
                     RootTools.copyFile(pathFile.getPath(),new File(file1.getPath(),file.getName()).getPath(), true,false);
                     pathFile=new File(file1.getPath(),file.getName());
                     RootHelper.runAndWait("chmod 777 " + pathFile.getPath(), true);

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -21,6 +21,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.BaseActivity;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.fragments.Main;
@@ -651,7 +652,7 @@ public void onClick(View view) {
                     public boolean onMenuItemClick(MenuItem item) {
                         switch (item.getItemId()) {
                             case R.id.about:
-                                main.utils.showProps((rowItem).generateBaseFile(), rowItem.getPermissions(), main, main.ROOT_MODE);
+                                main.utils.showProps((rowItem).generateBaseFile(), rowItem.getPermissions(), main, BaseActivity.rootMode);
                                 return true;
                             case R.id.share:
                                 ArrayList<File> arrayList = new ArrayList<File>();

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -305,7 +305,7 @@ public void compressFiles(File file, ArrayList<BaseFile> b) {
     public void mkFile(final HFile path,final Main ma) {
         final Toast toast=Toast.makeText(ma.getActivity(), R.string.creatingfile, Toast.LENGTH_LONG);
         toast.show();
-        Operations.mkfile(path, ma.getActivity(), ma.ROOT_MODE, new Operations.ErrorCallBack() {
+        Operations.mkfile(path, ma.getActivity(), BaseActivity.rootMode, new Operations.ErrorCallBack() {
             @Override
             public void exists(final HFile file) {
                 ma.getActivity().runOnUiThread(new Runnable() {
@@ -358,7 +358,7 @@ public void run() {
     public void mkDir(final HFile path,final Main ma) {
         final Toast toast=Toast.makeText(ma.getActivity(), R.string.creatingfolder, Toast.LENGTH_LONG);
         toast.show();
-        Operations.mkdir(path, ma.getActivity(), ma.ROOT_MODE, new Operations.ErrorCallBack() {
+        Operations.mkdir(path, ma.getActivity(), BaseActivity.rootMode, new Operations.ErrorCallBack() {
             @Override
             public void exists(final HFile file) {
                 ma.getActivity().runOnUiThread(new Runnable() {
@@ -468,7 +468,7 @@ public void search(String query) {
             fm.beginTransaction().remove(fragment).commit();
         }
 
-        addSearchFragment(fm, new SearchAsyncHelper(), fpath, query, ma.openMode, ma.ROOT_MODE,
+        addSearchFragment(fm, new SearchAsyncHelper(), fpath, query, ma.openMode, BaseActivity.rootMode,
                 mainActivity.Sp.getBoolean(SearchAsyncHelper.KEY_REGEX, false),
                 mainActivity.Sp.getBoolean(SearchAsyncHelper.KEY_REGEX_MATCHES, false));
     }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1983,12 +1983,11 @@ public void onClick(View v) {
             } else window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             if (colourednavigation)
                 window.setNavigationBarColor(skinStatusBar);
-
         }
 
         searchViewLayout = (RelativeLayout) findViewById(R.id.search_view);
         searchViewEditText = (AppCompatEditText) findViewById(R.id.search_edit_text);
-        ImageButton clear=(ImageButton)findViewById(R.id.search_close_btn);
+        ImageView clear=(ImageView) findViewById(R.id.search_close_btn);
         clear.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -2005,7 +2004,7 @@ public void onClick(View v) {
             @Override
             public boolean onKey(View v, int keyCode, KeyEvent event) {
                 // If the event is a key-down event on the "enter" button
-                if ((event.getAction() == KeyEvent.ACTION_DOWN)) {
+                if ((event.getAction() == KeyEvent.ACTION_DOWN) && isSearchViewEnabled) {
                     // Perform action on key press
                     mainActivityHelper.search(searchViewEditText.getText().toString());
                     hideSearchView();

File: src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -286,7 +286,7 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
     public SmbFile connectingWithSmbServer(String[] auth, boolean anonym) {
         try {
             String yourPeerIP = auth[0], domain = auth[3];
-            String path = "smb://"+ (anonym ? "" : (URLEncoder.encode(auth[1] + ":" + auth[2], "UTF-8") + "@")) + yourPeerIP + "/";
+            String path = "smb://"+(android.text.TextUtils.isEmpty(domain) ? "" :( URLEncoder.encode(domain + ";","UTF-8")) )+ (anonym ? "" : (URLEncoder.encode(auth[1] + ":" + auth[2], "UTF-8") + "@")) + yourPeerIP + "/";
             SmbFile smbFile = new SmbFile(path);
             return smbFile;
         } catch (Exception e) {

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2685,7 +2685,7 @@ public void addConnection(boolean edit, String name, String path,String oldname,
         try {
             String[] s=new String[]{name,path};
             if (!edit) {
-                if ((DataUtils.containsServer(s)) == -1) {
+                if ((DataUtils.containsServer(path)) == -1) {
                     DataUtils.addServer(new String[]{name, path});
                     refreshDrawer();
                     grid.addPath(name, path, DataUtils.SMB, 1);

File: src/main/java/com/amaze/filemanager/filesystem/RootHelper.java
Patch:
@@ -234,7 +234,7 @@ public static boolean fileExists(String path){
     }
     static boolean contains(String[] a,String name){
         for(String s:a){
-            Log.e("checking",s);
+            //Log.e("checking",s);
             if(s.equals(name))return true;
         }
         return false;

File: src/main/java/com/amaze/filemanager/ui/dialogs/SmbConnectDialog.java
Patch:
@@ -181,6 +181,7 @@ public void onClick(View view) {
                     String inf = URLDecoder.decode(userinfo, "UTF-8");
                     int domainDelim = !inf.contains(";") ? 0 : inf.indexOf(';');
                     domainp = inf.substring(0,domainDelim);
+                    if(domainp!=null && domainp.length()>0)
                     inf = inf.substring(domainDelim+1);
                     userp = inf.substring(0, inf.indexOf(":"));
                     passp = inf.substring(inf.indexOf(":") + 1, inf.length());
@@ -253,7 +254,6 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
                 else {
                     String useru = user.getText().toString();
                     String passp = pass.getText().toString();
-
                     smbFile = connectingWithSmbServer(new String[]{ipa, useru, passp,domaind}, false);
                 }
                 if (smbFile == null) return;
@@ -286,7 +286,7 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
     public SmbFile connectingWithSmbServer(String[] auth, boolean anonym) {
         try {
             String yourPeerIP = auth[0], domain = auth[3];
-            String path = "smb://"+(android.text.TextUtils.isEmpty(domain) ? "" :( URLEncoder.encode(domain + ";","UTF-8")) )+ (anonym ? "" : (URLEncoder.encode(auth[1] + ":" + auth[2], "UTF-8") + "@")) + yourPeerIP + "/";
+            String path = "smb://"+ (anonym ? "" : (URLEncoder.encode(auth[1] + ":" + auth[2], "UTF-8") + "@")) + yourPeerIP + "/";
             SmbFile smbFile = new SmbFile(path);
             return smbFile;
         } catch (Exception e) {

File: src/main/java/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -35,6 +35,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
+import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.utils.DataPackage;
 import com.amaze.filemanager.filesystem.FileUtil;
 import com.amaze.filemanager.utils.Futils;
@@ -148,7 +149,7 @@ public Doback() {
 
         protected Integer doInBackground(Bundle... p1) {
             int id = p1[0].getInt("id");
-            ArrayList<String> a = p1[0].getStringArrayList("files");
+            ArrayList<BaseFile> a = (ArrayList<BaseFile>) p1[0].getSerializable("files");
             name = p1[0].getString("name");
             new zip().execute(id, utils.toFileArray(a), name);
             // TODO: Implement this method

File: src/main/java/com/amaze/filemanager/services/ftpservice/FTPService.java
Patch:
@@ -42,7 +42,7 @@
 public class FTPService extends Service implements Runnable{
 
     private static final String TAG = FTPService.class.getSimpleName();
-    private static int port = 2211;;
+    private static int port = 2211;
     // Service will (global) broadcast when server start/stop
     static public final String ACTION_STARTED = "com.amaze.filemanager.services.ftpservice.FTPReceiver.FTPSERVER_STARTED";
     static public final String ACTION_STOPPED = "com.amaze.filemanager.services.ftpservice.FTPReceiver.FTPSERVER_STOPPED";

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -987,10 +987,10 @@ public Layoutelements newElement(Drawable i, String d,String permissions,String
         return item;
     }
 
-    public ArrayList<File> toFileArray(ArrayList<String> a) {
-        ArrayList<File> b = new ArrayList<File>();
+    public ArrayList<File> toFileArray(ArrayList<BaseFile> a) {
+        ArrayList<File> b = new ArrayList<>();
         for (int i = 0; i < a.size(); i++) {
-            b.add(new File(a.get(i)));
+            b.add(new File(a.get(i).getPath()));
         }
         return b;
     }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1994,7 +1994,8 @@ public boolean onKey(View v, int keyCode, KeyEvent event) {
                 return false;
             }
         });
-        //searchViewEditText.setTextColor(Color.parseColor(BaseActivity.accentSkin));
+
+        searchViewEditText.setTextColor(getResources().getColor(android.R.color.black));
         searchViewEditText.setHintTextColor(Color.parseColor(BaseActivity.accentSkin));
     }
 

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -66,7 +66,6 @@ public class AppsList extends ListFragment {
     ArrayList<Layoutelements> a = new ArrayList<Layoutelements>();
     public int theme1;
     private MainActivity mainActivity;
-    public String fabSkin;
     int asc,sortby;
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -89,7 +88,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mainActivity.floatingActionButton.hideMenuButton(true);
         mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
-        fabSkin = mainActivity.fabskin;
         vl=getListView();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         getSortModes();

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/ColorPref.java
Patch:
@@ -20,6 +20,7 @@
 import com.afollestad.materialdialogs.MaterialDialog;
 import com.afollestad.materialdialogs.Theme;
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.BaseActivity;
 import com.amaze.filemanager.ui.views.CheckBx;
 import com.amaze.filemanager.utils.PreferenceUtils;
 
@@ -80,7 +81,7 @@ public boolean onPreferenceClick(final Preference preference) {
             a.theme(Theme.DARK);
 
         a.autoDismiss(true);
-        int fab_skin=Color.parseColor(PreferenceUtils.getAccentString(sharedPref));
+        int fab_skin=Color.parseColor(BaseActivity.accentSkin);
         int fab_skin_pos=PreferenceUtils.getAccent(sharedPref);
         a.positiveColor(fab_skin);
         a.neutralColor(fab_skin);

File: src/main/java/com/amaze/filemanager/activities/BaseActivity.java
Patch:
@@ -28,7 +28,8 @@ public class BaseActivity extends AppCompatActivity {
     public SharedPreferences Sp;
 
     // Accent and Primary hex color string respectively
-    public String fabskin,skin, skinTwo;
+    public String fabskin;
+    public static String skin, skinTwo;
     Futils utils;
     boolean  rootmode,checkStorage=true;
     @Override

File: src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -164,6 +164,7 @@ private void updateStatus(){
         if(FTPService.isRunning()){
             statusText.setText(utils.getString(getContext(),R.string.ftp_status_running));
             ftpBtn.setText(utils.getString(getContext(),R.string.stop_ftp));
+            ftpAddrText.setText("ftp:/"+FTPService.getLocalInetAddress(getContext())+":"+FTPService.getPort());
         }
         else{
             statusText.setText(utils.getString(getContext(),R.string.ftp_status_not_running));

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -827,7 +827,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.extract).setVisible(false);
             invalidatePasteButton(menu.findItem(R.id.paste));
             findViewById(R.id.buttonbarframe).setVisibility(View.VISIBLE);
-        } else if (f.contains("AppsList") || f.contains("ProcessViewer")) {
+        } else if (f.contains("AppsList") || f.contains("ProcessViewer" ||
+                f.contains(FTPServerFragment.class.getName())) {
             appBarLayout.setExpanded(true);
             menu.findItem(R.id.sethome).setVisible(false);
             if (indicator_layout != null) indicator_layout.setVisibility(View.GONE);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -854,7 +854,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.extract).setVisible(false);
             invalidatePasteButton(menu.findItem(R.id.paste));
             findViewById(R.id.buttonbarframe).setVisibility(View.VISIBLE);
-        } else if (f.contains("AppsList") || f.contains("ProcessViewer")) {
+        } else if (f.contains("AppsList") || f.contains("ProcessViewer") ||
+                f.contains(FTPServerFragment.class.getName())) {
             appBarLayout.setExpanded(true);
             menu.findItem(R.id.sethome).setVisible(false);
             if (indicator_layout != null) indicator_layout.setVisibility(View.GONE);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1927,7 +1927,7 @@ public void onClick(View v) {
         View ftpButton = findViewById(R.id.ftpbutton);
         if (theme1 == 1) {
             ftpButton.setBackgroundResource(R.drawable.safr_ripple_black);
-            ((ImageView) ftpButton.findViewById(R.id.ftpicon)).setImageResource(R.drawable.ic_doc_apk_white);
+            ((ImageView) ftpButton.findViewById(R.id.ftpicon)).setImageResource(R.drawable.ic_ftp_dark);
             ((TextView) ftpButton.findViewById(R.id.ftptext)).setTextColor(getResources().getColor(android.R.color.white));
         }
         ftpButton.setOnClickListener(new View.OnClickListener(){

File: src/main/java/com/amaze/filemanager/fragments/FTPServerFragment.java
Patch:
@@ -164,10 +164,12 @@ private void updateStatus(){
         if(FTPService.isRunning()){
             statusText.setText(utils.getString(getContext(),R.string.ftp_status_running));
             ftpBtn.setText(utils.getString(getContext(),R.string.stop_ftp));
+            ftpAddrText.setText("ftp:/"+FTPService.getLocalInetAddress(getContext())+":"+FTPService.getPort());
         }
         else{
             statusText.setText(utils.getString(getContext(),R.string.ftp_status_not_running));
             ftpBtn.setText(utils.getString(getContext(),R.string.start_ftp));
+            ftpAddrText.setText("");
         }
     }
 }

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -843,6 +843,7 @@ public void onListItemClicked(int position, ImageView imageView) {
         if (results) {
 
             // check to initialize search results
+            // if search task is been running, cancel it
             FragmentManager fragmentManager = getActivity().getSupportFragmentManager();
             SearchAsyncHelper fragment = (SearchAsyncHelper) fragmentManager
                     .findFragmentByTag(MainActivity.TAG_ASYNC_HELPER);

File: src/main/java/com/amaze/filemanager/fragments/SearchAsyncHelper.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 
 import com.amaze.filemanager.filesystem.BaseFile;
 import com.amaze.filemanager.filesystem.HFile;
@@ -97,7 +98,7 @@ protected Void doInBackground(String... params) {
 
             // level 1
             // if regex or not
-            if (!isRegexEnabled) search(file, path);
+            if (!isRegexEnabled) search(file, mInput);
             else {
 
                 // compile the regular expression in the input
@@ -247,7 +248,7 @@ private String bashRegexToJava(String originalString) {
                 }
             }
 
-            System.out.println(stringBuilder.toString());
+            Log.d(getClass().getSimpleName(), stringBuilder.toString());
             return stringBuilder.toString();
         }
     }

File: src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -226,7 +226,9 @@ public boolean onMenuItemClick(MenuItem item) {
                                 f1.setMode(HFile.ROOT_MODE);
                                 ApplicationInfo info1=null;
                                 for(PackageInfo info:c){
-                                    if(info.applicationInfo.publicSourceDir.equals(rowItem.getDesc()))info1=info.applicationInfo;
+                                    if(info.applicationInfo.publicSourceDir.equals(rowItem.getDesc())) {
+                                        info1=info.applicationInfo;
+                                    }
                                 }
                                 int color= Color.parseColor(PreferenceUtils.getAccentString(app.Sp));
                                 //arrayList.add(utils.newElement(Icons.loadMimeIcon(getActivity(), f1.getPath(), false), f1.getPath(), null, null, utils.getSize(f1),"", false));

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -877,7 +877,7 @@ public void onListItemClicked(int position, ImageView imageView) {
 
                 // hiding search view if visible
                 if (MainActivity.isSearchViewEnabled)   MAIN_ACTIVITY.hideSearchView();
-                
+
                 String path;
                 Layoutelements l = LIST_ELEMENTS.get(position);
                 if (!l.hasSymlink()) {

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -477,7 +477,7 @@ public static void addSearchFragment(FragmentManager fragmentManager, Fragment f
                 MainActivity.TAG_ASYNC_HELPER).commit();
     }
 
-    /*
+    /**
      * Validates file name at the time of creation
      * special reserved characters shall not be allowed in the file names
      * @param file the file which needs to be validated

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -101,12 +101,12 @@ public void onClick(View v) {
         materialDialog.show();
     }
     void mkfile(final int openMode,final String path,final Main ma){
-        final MaterialDialog materialDialog=utils.showNameDialog(mainActivity,new String[]{utils.getString(mainActivity, R.string.entername), "",utils.getString(mainActivity,R.string.newfolder),utils.getString(mainActivity, R.string.create),utils.getString(mainActivity,R.string.cancel),null});
+        final MaterialDialog materialDialog=utils.showNameDialog(mainActivity,new String[]{utils.getString(mainActivity, R.string.entername), "",utils.getString(mainActivity,R.string.newfile),utils.getString(mainActivity, R.string.create),utils.getString(mainActivity,R.string.cancel),null});
         materialDialog.getActionButton(DialogAction.POSITIVE).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 String a = materialDialog.getInputEditText().getText().toString();
-                mkDir(new HFile(openMode,path + "/" + a),ma);
+                mkFile(new HFile(openMode,path + "/" + a),ma);
                 materialDialog.dismiss();
             }
         });

File: src/main/java/com/amaze/filemanager/services/asynctasks/GenerateMD5Task.java
Patch:
@@ -151,7 +151,7 @@ protected void onPostExecute(String aVoid) {
                     public void onClick(View v) {
                         try {
                             new Futils().copyToClipboard(c, md5);
-                            Toast.makeText(c, c.getResources().getString(R.string.pathcopied), Toast.LENGTH_SHORT).show();
+                            Toast.makeText(c, c.getResources().getString(R.string.md5copied), Toast.LENGTH_SHORT).show();
                         } catch (Exception e) {
                             e.printStackTrace();
                         }

File: src/main/java/com/amaze/filemanager/services/asynctasks/GenerateMD5Task.java
Patch:
@@ -151,7 +151,7 @@ protected void onPostExecute(String aVoid) {
                     public void onClick(View v) {
                         try {
                             new Futils().copyToClipboard(c, md5);
-                            Toast.makeText(c, c.getResources().getString(R.string.pathcopied), Toast.LENGTH_SHORT).show();
+                            Toast.makeText(c, c.getResources().getString(R.string.md5copied), Toast.LENGTH_SHORT).show();
                         } catch (Exception e) {
                             e.printStackTrace();
                         }

File: src/main/java/com/amaze/filemanager/ui/dialogs/RenameBookmark.java
Patch:
@@ -117,7 +117,6 @@ public void afterTextChanged(Editable s) {
                     e.printStackTrace();
                 }
             }
-            ip.setText(pa);
             ip.addTextChangedListener(new TextWatcher() {
                 @Override
                 public void beforeTextChanged(CharSequence s, int start, int count, int after) {
@@ -137,6 +136,7 @@ public void afterTextChanged(Editable s) {
                 }
             });
             }else t2.setVisibility(View.GONE);
+            ip.setText(pa);
             builder.onNeutral(new MaterialDialog.SingleButtonCallback() {
                 @Override
                 public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -77,7 +77,8 @@ public Recycleradapter(Main m,ArrayList<Layoutelements> items,Context context){
         anim = /*main.IS_LIST?R.anim.fade_in_top:*/R.anim.fade_in_top;
     }
     public void addItem(){
-        notifyDataSetChanged();
+        //notifyDataSetChanged();
+        notifyItemInserted(getItemCount());
 
     }
     public void toggleChecked(int position) {
@@ -120,6 +121,7 @@ public void toggleChecked(boolean b,String path) {
             main.mActionMode = null;
         }
     }
+
     public void toggleChecked(boolean b) {
         int a=0;
         for (int i = a; i < items.size(); i++) {

File: src/main/java/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -110,6 +110,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
     }
 
     private final IBinder mBinder = new LocalBinder();
+
     public class LocalBinder extends Binder {
         public ExtractService getService() {
             // Return this instance of LocalService so clients can call public methods

File: src/main/java/com/amaze/filemanager/ui/views/Indicator.java
Patch:
@@ -247,8 +247,10 @@ private void setCurrentPageImmediate() {
         } else {
             currentPage = 0;
         }
-        if (dotCenterX != null) {
+        if (dotCenterX != null && dotCenterX.length!=0) {
             selectedDotX = dotCenterX[currentPage];
+        } else {
+            selectedDotX = 0;
         }
     }
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -228,8 +228,8 @@ public class MainActivity extends AppCompatActivity implements
     StringBuffer newPathBuilder, oldPathBuilder;
     AppBarLayout appBarLayout;
 
-    private final int PATH_ANIM_START_DELAY = 0;
-    private final int PATH_ANIM_END_DELAY = 0;
+    private static final int PATH_ANIM_START_DELAY = 0;
+    private static final int PATH_ANIM_END_DELAY = 0;
 
     /**
      * Called when the activity is first created.

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -16,6 +16,7 @@
 import android.view.ViewGroup;
 import android.view.animation.Animation;
 import android.view.animation.AnimationUtils;
+import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.TextView;
 import com.amaze.filemanager.R;
@@ -202,6 +203,8 @@ public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType
         ViewHolder vh = new ViewHolder(v);
         if(zipViewer.mainActivity.theme1==1)
             vh.txtTitle.setTextColor(zipViewer.getActivity().getResources().getColor(android.R.color.white));
+        ImageButton about = (ImageButton) v.findViewById(R.id.properties);
+        about.setVisibility(View.INVISIBLE);
         return vh;
     }
 

File: src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -42,7 +42,7 @@ private AnimUtils() {
     public static Interpolator getFastOutSlowInInterpolator(Context context) {
         if (fastOutSlowIn == null) {
             fastOutSlowIn = AnimationUtils.loadInterpolator(context,
-                    android.R.anim.overshoot_interpolator);
+                    android.R.interpolator.fast_out_slow_in);
         }
         return fastOutSlowIn;
     }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -120,6 +120,7 @@
 import com.amaze.filemanager.ui.drawer.Item;
 import com.amaze.filemanager.ui.drawer.SectionItem;
 import com.amaze.filemanager.ui.icons.IconUtils;
+import com.amaze.filemanager.ui.views.Indicator;
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout;
 import com.amaze.filemanager.utils.BookSorter;
@@ -227,8 +228,8 @@ public class MainActivity extends AppCompatActivity implements
     StringBuffer newPathBuilder, oldPathBuilder;
     AppBarLayout appBarLayout;
 
-    private static final int PATH_ANIM_START_DELAY = 500;
-    private static final int PATH_ANIM_END_DELAY = 500;
+    private final int PATH_ANIM_START_DELAY = 0;
+    private final int PATH_ANIM_END_DELAY = 0;
 
     /**
      * Called when the activity is first created.

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -118,6 +118,7 @@
 import com.amaze.filemanager.ui.views.RoundedImageView;
 import com.amaze.filemanager.ui.views.ScrimInsetsRelativeLayout;
 import com.amaze.filemanager.utils.BookSorter;
+import com.amaze.filemanager.utils.Constants;
 import com.amaze.filemanager.utils.DataUtils;
 import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.HistoryManager;
@@ -275,9 +276,9 @@ public void onFinish() {
             }
             if (intent.getAction() != null)
                 if (intent.getAction().equals(Intent.ACTION_GET_CONTENT)) {
-                    String title = intent.getStringExtra("com.amaze.filemanager.extra.TITLE");
+                    String title = intent.getStringExtra(Constants.FILE_PICKER_TITLE_BUNDLE_KEY);
                     if(title == null || title.length() == 0)
-                        utils.getString(con, R.string.pick_a_file);
+                        title = utils.getString(con, R.string.pick_a_file);
 
                     // file picker intent
                     mReturnIntent = true;

File: src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -32,7 +32,8 @@
  */
 public class AnimUtils {
 
-    private AnimUtils() { }
+    private AnimUtils() {
+    }
 
     private static Interpolator fastOutSlowIn;
     private static Interpolator fastOutLinearIn;
@@ -41,7 +42,7 @@ private AnimUtils() { }
     public static Interpolator getFastOutSlowInInterpolator(Context context) {
         if (fastOutSlowIn == null) {
             fastOutSlowIn = AnimationUtils.loadInterpolator(context,
-                    android.R.interpolator.fast_out_slow_in);
+                    android.R.anim.overshoot_interpolator);
         }
         return fastOutSlowIn;
     }

File: src/main/java/com/amaze/filemanager/utils/AnimUtils.java
Patch:
@@ -32,7 +32,8 @@
  */
 public class AnimUtils {
 
-    private AnimUtils() { }
+    private AnimUtils() {
+    }
 
     private static Interpolator fastOutSlowIn;
     private static Interpolator fastOutLinearIn;
@@ -41,7 +42,7 @@ private AnimUtils() { }
     public static Interpolator getFastOutSlowInInterpolator(Context context) {
         if (fastOutSlowIn == null) {
             fastOutSlowIn = AnimationUtils.loadInterpolator(context,
-                    android.R.interpolator.fast_out_slow_in);
+                    android.R.anim.overshoot_interpolator);
         }
         return fastOutSlowIn;
     }

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -130,12 +130,13 @@ public boolean onLongClick(View v) {
                     if(!getItem(position).isSection())
                     // not to remove the first bookmark (storage) and permanent bookmarks
                     if (position > m.storage_count && position < values.size()-7) {
-                        String path = ((EntryItem) getItem(position)).getPath();
+                        EntryItem item=(EntryItem) getItem(position);
+                        String path = (item).getPath();
                         if(m.mainActivityHelper.contains(path,m.books)!=-1){
                             m.renameBookmark(((EntryItem) getItem(position)).getTitle(),path);
                         }
                         else if (path.startsWith("smb:/")) {
-                            m.mainActivityHelper.createSmbDialog(path, true, null);
+                            m.showSMBDialog(item.getTitle(),path, true);
                         }
                     }else if(position<m.storage_count ){
                         String path = ((EntryItem) getItem(position)).getPath();

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -246,15 +246,15 @@ public void onSaveInstanceState(Bundle outState) {
         super.onSaveInstanceState(outState);
         try {
             int i = 0;
+            Sp.edit().putInt("currenttab",currenttab).commit();
             if (fragments != null && fragments.size() !=0) {
-                if(fragmentManager==null)fragmentManager=getActivity().getSupportFragmentManager();
+                if(fragmentManager==null)return;
                 for (Fragment fragment : fragments) {
                     fragmentManager.putFragment(outState, "tab" + i, fragment);
                     i++;
                 }
                 outState.putInt("pos", mViewPager.getCurrentItem());
             }
-            Sp.edit().putInt("currenttab",currenttab).commit();
         } catch (Exception e) {
             e.printStackTrace();
         }

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -72,7 +72,7 @@ public class Preffrag extends PreferenceFragment{
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-
+        PreferenceUtils.reset();
         // Load the preferences from an XML resource
         addPreferencesFromResource(R.xml.preferences);
 

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -352,6 +352,9 @@ public void onClick(View view) {
                 e.printStackTrace();
             }
 
+        }else if(path!=null && path.length()>0){
+            ip.setText(path);
+            user.requestFocus();
         }
         ba3.customView(v2, true);
         if (mainActivity.theme1 == 1) ba3.theme(Theme.DARK);

File: src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -124,7 +124,7 @@ public void run() {
                             }
                         }
                     }
-                }).run();
+                }).start();
             }
         });
         return view;

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -146,7 +146,7 @@ public void onPostExecute(Boolean b) {
             zipViewer.files.clear();
         }
     }
-    public void delete(final Context context, final String file) {
+     void delete(final Context context, final String file) {
         final String where = MediaStore.MediaColumns.DATA + "=?";
         final String[] selectionArgs = new String[] {
                 file

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -58,7 +58,7 @@ public LoadList(boolean back, Main ma, int openmode) {
 
     @Override
     protected void onPreExecute() {
-        if (openmode != 0)
+        if (ma.mSwipeRefreshLayout!=null)
             ma.mSwipeRefreshLayout.setRefreshing(true);
     }
 

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -594,7 +594,6 @@ public static String[] getExtSdCardPaths(Context context) {
         for (File file : context.getExternalFilesDirs("external")) {
             if (file != null && !file.equals(context.getExternalFilesDir("external"))) {
                 int index = file.getAbsolutePath().lastIndexOf("/Android/data");
-                System.out.println(file.getPath()+"\t"+index);
                 if (index < 0) {
                     Log.w("AmazeFileUtils", "Unexpected external file dir: " + file.getAbsolutePath());
                 }

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -268,7 +268,6 @@ public void scanFile(String path, Context c) {
 
                 @Override
                 public void onScanCompleted(String path, Uri uri) {
-                    System.out.println("SCAN COMPLETED: " + path);
 
                 }
             });

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -579,8 +579,7 @@ public static final boolean isWritableNormalOrSaf(final File folder,Context c) {
         boolean result = document.canWrite() && file.exists();
 
         // Ensure that the dummy file is not remaining.
-        document.delete();
-
+        deleteFile(file,c);
         return result;
     }
 

File: src/main/java/com/amaze/filemanager/utils/RootHelper.java
Patch:
@@ -233,7 +233,7 @@ static boolean contains(String[] a,String name){
         }
         return false;
     }
-    static boolean isDirectory(String a, boolean root,int count) {
+    public static boolean isDirectory(String a, boolean root,int count) {
         File f = new File(a);
         String name = f.getName();
         String p = f.getParent();

File: src/main/java/com/amaze/filemanager/ui/views/DividerItemDecoration.java
Patch:
@@ -61,7 +61,7 @@ public void drawVertical(Canvas c, RecyclerView parent) {
         final int right = parent.getWidth() - parent.getPaddingRight();
 
         final int childCount = parent.getChildCount();
-        for (int i = showtopbottomdividers?0:1; i < (showtopbottomdividers?childCount:childCount-1); i++) {
+        for (int i = showtopbottomdividers?0:1; i < childCount-1; i++) {
             final View child = parent.getChildAt(i);
             final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child
                     .getLayoutParams();

File: src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -91,7 +91,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_db_viewer);
         toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin =PreferenceUtils.getSkinColor(Sp.getInt("skin_color_position", 4));
+        skin =PreferenceUtils.getPrimaryColorString(Sp);
         if (Build.VERSION.SDK_INT>=21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription
                     ("Amaze", ((BitmapDrawable) ContextCompat.getDrawable(this,R.mipmap

File: src/main/java/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -65,7 +65,7 @@ public class Preferences extends AppCompatActivity  implements ActivityCompat.On
     @Override
     public void onCreate(Bundle savedInstanceState) {
         SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
-        fabSkin = PreferenceUtils.getFabColor(Sp.getInt("fab_skin_color_position", 1));
+        fabSkin = PreferenceUtils.getAccentString(Sp);
 
         int th = Integer.parseInt(Sp.getString("theme", "0"));
 
@@ -212,7 +212,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
         Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
-        skin = PreferenceUtils.getSkinColor(Sp.getInt("skin_color_position", 4));
+        skin = PreferenceUtils.getPrimaryColorString(Sp);
         if (Build.VERSION.SDK_INT>=21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -112,7 +112,7 @@ public class TextReader extends AppCompatActivity implements TextWatcher, View.O
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(this);
-        fabSkin = PreferenceUtils.getFabColor(Sp.getInt("fab_skin_color_position", 1));
+        fabSkin = PreferenceUtils.getAccentString(Sp);
 
         theme = Integer.parseInt(Sp.getString("theme", "0"));
         theme1 = theme == 2 ? PreferenceUtils.hourOfDay() : theme;
@@ -263,7 +263,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.search);
         toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin = PreferenceUtils.getSkinColor(Sp.getInt("skin_color_position", 4));
+        skin = PreferenceUtils.getPrimaryColorString(Sp);
         if (Build.VERSION.SDK_INT >= 21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable) getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity) this).setTaskDescription(taskDescription);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -189,8 +189,8 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
         showLastModified = Sp.getBoolean("showLastModified", true);
         showDividers = Sp.getBoolean("showDividers", true);
         year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
-        skin = PreferenceUtils.getSkinColor(Sp.getInt("skin_color_position", 4));
-        iconskin = PreferenceUtils.getSkinColor(Sp.getInt("icon_skin_color_position", 4));
+        skin = PreferenceUtils.getPrimaryColorString(Sp);
+        iconskin = PreferenceUtils.getFolderColorString(Sp);
         mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 
         files = new ArrayList<File>();
@@ -597,7 +597,7 @@ void createViews(String dir) {
         }
         /*((AppBarLayout)mToolbarContainer).setExpanded(true,true);*/
         FastScroller fastScroller=(FastScroller)rootView.findViewById(R.id.fastscroll);
-        fastScroller.setColor(PreferenceUtils.getAccent(Sp));
+        fastScroller.setColor(Color.parseColor(PreferenceUtils.getAccentString(Sp)));
         fastScroller.setRecyclerView(listView);
         listView.stopScroll();
         zipViewer.current = dir;

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -580,7 +580,7 @@ public void showProps(final String f, final String perm, final Main c,boolean ro
         name = hFile.getName();
         parent = hFile.getParent();
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(c.getActivity());
-        String fabskin = PreferenceUtils.getFabColor(sp.getInt("fab_skin_color_position", 1));
+        String fabskin = PreferenceUtils.getAccentString(sp);
         MaterialDialog.Builder a = new MaterialDialog.Builder(c.getActivity());
         a.title(getString(c.getActivity(), R.string.properties));
         if(c.theme1==1)
@@ -650,7 +650,7 @@ public void showProps(final File f, final Activity c,int theme1) {
         name =  f.getName();
         parent = f.getParent();
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(c);
-        String fabskin = PreferenceUtils.getFabColor(sp.getInt("fab_skin_color_position", 1));
+        String fabskin = PreferenceUtils.getAccentString(sp);
         MaterialDialog.Builder a = new MaterialDialog.Builder(c);
         a.title(getString(c, R.string.properties));
         if(theme1==1)

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -2428,7 +2428,7 @@ public void onLoadingComplete(String s, View view, Bitmap b) {
                             Drawable d = new BitmapDrawable(getResources(), b);
                             if(d==null)return;
                             drawerHeaderParent.setBackgroundDrawable(d);
-                            drawerHeaderView.setBackgroundResource(R.drawable.amaze_header_2);
+                            drawerHeaderView.setBackgroundResource(R.drawable.amaze_header);
 
                         }
 

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -652,7 +652,7 @@ public void onBindHeaderViewHolder(RecyclerView.ViewHolder viewHolder, int i) {
 
     @Override
     public int getItemCount() {
-        return items.size()+1;
+        return main.IS_LIST?items.size()+1:items.size();
     }
 }
 

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -88,7 +88,7 @@ public void toggleChecked(int position) {
         }
 
         notifyDataSetChanged();
-        if (main.selection == false || main.mActionMode == null) {
+        if ((main.selection == false || main.mActionMode == null) && getCheckedItemPositions().size()>0) {
             main.selection = true;
             /*main.mActionMode = main.getActivity().startActionMode(
                     main.mActionModeCallback);*/

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -117,7 +117,7 @@ public void onPageScrollStateChanged(int p1) {
                     addTab(new Tab(1,"",((EntryItem)mainActivity.list.get(1)).getPath(),"/"),1,"");
                 else
                 addTab(new Tab(1,"","/","/"),1,"");
-                if(mainActivity.list.get(0).isSection()){
+                if(!mainActivity.list.get(0).isSection()){
                 String pa=((EntryItem)mainActivity.list.get(0)).getPath();
                 addTab(new Tab(2,"",pa,pa),2,"");}
                 else     addTab(new Tab(2,"",((EntryItem)mainActivity.list.get(1)).getPath(),"/"),2,"");

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -116,8 +116,7 @@ public void onPageScrollStateChanged(int p1) {
                 if (mainActivity.storage_count>1)
                     addTab(new Tab(1,"",((EntryItem)mainActivity.list.get(1)).getPath(),"/"),1,"");
                 else
-                addTab(new Tab(1,"","/","/"
-                ),1,"");
+                addTab(new Tab(1,"","/","/"),1,"");
                 String pa=((EntryItem)mainActivity.list.get(0)).getPath();
                 addTab(new Tab(2,"",pa,pa),2,"");
             }

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -621,7 +621,6 @@ public static String[] getExtSdCardPathsForActivity(Context context) {
         for (File file : context.getExternalFilesDirs("external")) {
             if (file != null) {
                 int index = file.getAbsolutePath().lastIndexOf("/Android/data");
-                System.out.println(file.getPath()+"\t"+index);
                 if (index < 0) {
                     Log.w("AmazeFileUtils", "Unexpected external file dir: " + file.getAbsolutePath());
                 }

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -83,7 +83,7 @@ public static boolean copyFile(final File source, final File target,Context cont
                 }
                 else if (Build.VERSION.SDK_INT==Build.VERSION_CODES.KITKAT) {
                     // Workaround for Kitkat ext SD card
-                    Uri uri = MediaStoreUtil.getUriFromFile(target.getAbsolutePath(),context);
+                    Uri uri = MediaStoreHack.getUriFromFile(target.getAbsolutePath(),context);
                     outStream = context.getContentResolver().openOutputStream(uri);
                 }
                 else {
@@ -191,7 +191,7 @@ public static final boolean deleteFile(@NonNull final File file,Context context)
             ContentResolver resolver = context.getContentResolver();
 
             try {
-                Uri uri = MediaStoreUtil.getUriFromFile(file.getAbsolutePath(),context);
+                Uri uri = MediaStoreHack.getUriFromFile(file.getAbsolutePath(),context);
                 resolver.delete(uri, null, null);
                 return !file.exists();
             }

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -717,7 +717,9 @@ else if(root) {
             RootTools.remount(f.getPath(),"rw");
             RootHelper.runAndWait("mv " + f.getPath() + " " + newname, true);
             RootTools.remount(f.getPath(),"ro");
-        }return true;
+            return true;
+        }
+        return false;
     }
 
     public boolean canListFiles(File f) {

File: src/main/java/com/amaze/filemanager/utils/HFile.java
Patch:
@@ -221,7 +221,7 @@ public boolean exists() {
         return exists;
     }
     public boolean isSimpleFile(){
-        if(!isSmb() && !isCustomPath()){
+        if(!isSmb() && !isCustomPath() && !android.util.Patterns.EMAIL_ADDRESS.matcher(path).matches()){
             if(!new File(path).isDirectory())return true;
         }
         return false;

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -255,7 +255,7 @@ void onBindView(RecyclerView.ViewHolder vholder,final int position1){
         final int p=position1-1;
         GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
         if(rowItem.getEntry()==null){
-            holder.imageView.setImageResource(R.drawable.abc_ic_ab_back_mtrl_am_alpha);
+            holder.imageView.setImageDrawable(zipViewer.getResources().getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha));
             gradientDrawable.setColor(Color.parseColor("#757575"));
             holder.txtTitle.setText("..");
             holder.txtDesc.setText("");
@@ -362,7 +362,7 @@ public void onClick(View p1) {
 
                         if (rowItem.isDirectory()) {
 
-                            new ZipHelperTask(zipViewer,  stringBuilder.toString()).execute(zipViewer.f);
+                            new ZipHelperTask(zipViewer,  stringBuilder.toString()).execute(zipViewer.s);
 
                         } else {
                             String x=rowItem.getName().substring(rowItem.getName().lastIndexOf("/")+1);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1097,7 +1097,7 @@ else if(android.util.Patterns.EMAIL_ADDRESS.matcher(f).matches()){
                     MAIN_ACTIVITY.updatepaths(no);
                     listView.stopScroll();
                     if (buttons.getVisibility() == View.VISIBLE) MAIN_ACTIVITY.bbar(this);
-
+                    MAIN_ACTIVITY.invalidateFab(openMode);
                 } catch (Exception e) {
                 }
             } else {//Toast.makeText(getActivity(),res.getString(R.string.error),Toast.LENGTH_LONG).show();

File: src/main/java/com/amaze/filemanager/services/asynctasks/SearchTask.java
Patch:
@@ -63,7 +63,7 @@ protected Void doInBackground(String... params) {
                     } else if (main.SHOW_SIZE) size = "" + file.length();
                     String[] string = new String[0];
                     try {
-                        string = new String[]{file.getPath(), "", "", k, file.lastModified() + "", size};
+                        string = new String[]{file.getPath(), "", "", k, file.lastModified() + "", size,file.isDirectory()+""};
                     } catch (MalformedURLException e) {
                         e.printStackTrace();
                     } catch (SmbException e) {

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -853,9 +853,9 @@ public void onPositive(MaterialDialog materialDialog) {
                     public void onNegative(MaterialDialog materialDialog) {
                         //m.addZipViewTab(f.getPath());
                         if (f.getName().toLowerCase().endsWith(".rar"))
-                            m.openRar(f.getPath());
+                            m.openRar(Uri.fromFile(f).toString());
                         else
-                            m.openZip(f.getPath());
+                            m.openZip(Uri.fromFile(f).toString());
                     }
                 });
         if (m.theme1 == 1) mat.theme(Theme.DARK);

File: src/main/java/com/amaze/filemanager/utils/HFile.java
Patch:
@@ -221,7 +221,7 @@ public boolean exists() {
         return exists;
     }
     public boolean isSimpleFile(){
-        if(!isSmb()){
+        if(!isSmb() && !isCustomPath()){
             if(!new File(path).isDirectory())return true;
         }
         return false;

File: src/main/java/com/amaze/filemanager/utils/MainActivityHelper.java
Patch:
@@ -93,7 +93,7 @@ public void onClick(View v) {
                 break;
             case 1:
                 final String path1 = ma.CURRENT_PATH;
-                final MaterialDialog materialDialog1=utils.showNameDialog(mainActivity,new String[]{utils.getString(mainActivity, R.string.entername), "",utils.getString(mainActivity,R.string.newfolder),utils.getString(mainActivity, R.string.create),utils.getString(mainActivity,R.string.cancel),null});
+                final MaterialDialog materialDialog1=utils.showNameDialog(mainActivity,new String[]{utils.getString(mainActivity, R.string.entername), "",utils.getString(mainActivity,R.string.newfile),utils.getString(mainActivity, R.string.create),utils.getString(mainActivity,R.string.cancel),null});
                 materialDialog1.getActionButton(DialogAction.POSITIVE).setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View v) {

File: src/main/java/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -286,7 +286,7 @@ ArrayList<String[]> listRecent(){
         for(String f:paths){
             if(!f.equals("/")){
                 String[] a=RootHelper.addFile(new File(f), ma.SHOW_SIZE, ma.SHOW_HIDDEN);
-                if(a!=null && !ma.isDirectory(a))
+                if(a!=null && !(a)[6].equals("true"))
                 songs.add(a);
             }
         }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -479,7 +479,9 @@ public void onClick(View view) {
         scroll.setSmoothScrollingEnabled(true);
         scroll1.setSmoothScrollingEnabled(true);
         FloatingActionButton floatingActionButton1 = (FloatingActionButton) findViewById(topfab ? R.id.menu_item_top : R.id.menu_item);
-        String folder_skin = PreferenceUtils.getSkinColor(Sp.getInt("icon_skin_color_position", 4));
+        int icon=Sp.getInt("icon_skin_color_position", -1);
+        icon=icon==-1?Sp.getInt("skin_color_position", 4):icon;
+        String folder_skin = PreferenceUtils.getSkinColor(icon);
         int folderskin = Color.parseColor(folder_skin);
         int fabskinpressed = (PreferenceUtils.getStatusColor(folder_skin));
         floatingActionButton1.setColorNormal(folderskin);

File: src/main/java/com/amaze/filemanager/services/asynctasks/GenerateMD5Task.java
Patch:
@@ -87,7 +87,8 @@ protected void onPostExecute(long[] longs) {
                         animation.setDuration(Math.round(r1 * 5));
                         g.sizeDrawable.startAnimation(animation);
                     } else {
-                        textView.setVisibility(View.GONE);
+                        textView.findViewById(R.id.divider).setVisibility(View.GONE);
+                        textView.findViewById(R.id.dirprops).setVisibility(View.GONE);
                     }
 
                 }

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1460,7 +1460,7 @@ private void addShortcut(Layoutelements path) {
                 MainActivity.class);
         shortcutIntent.putExtra("path", path.getDesc());
         shortcutIntent.setAction(Intent.ACTION_MAIN);
-
+        shortcutIntent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
         Intent addIntent = new Intent();
         addIntent
                 .putExtra(Intent.EXTRA_SHORTCUT_INTENT, shortcutIntent);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1064,7 +1064,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                     for (int i4 = 0; i4 < plist.size(); i4++) {
                         copies1.add(LIST_ELEMENTS.get(plist.get(i4)).getDesc());
                     }
-                    utils.showNameDialog((MainActivity) getActivity(), copies1, CURRENT_PATH);
+                    utils.showCompressDialog((MainActivity) getActivity(), copies1, CURRENT_PATH);
                     mode.finish();
                     return true;
                 case R.id.openwith:
@@ -1230,7 +1230,6 @@ else if (utils.canGoBack(f)) {
             loadlist(f.getPath(), true, openMode);
         }
     }
-
     private BroadcastReceiver receiver2 = new BroadcastReceiver() {
 
         @Override

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -74,7 +74,7 @@ public class AppsList extends ListFragment {
     ArrayList<Layoutelements> a = new ArrayList<Layoutelements>();
     public int theme1;
     private MainActivity mainActivity;
-    private String fabSkin;
+    public String fabSkin;
     int asc,sortby;
     @Override
     public void onCreate(Bundle savedInstanceState) {

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -610,6 +610,7 @@ private static String[] getExtSdCardPaths(Context context) {
                 }
             }
         }
+        if(paths.isEmpty())paths.add("/storage/sdcard1");
         return paths.toArray(new String[0]);
     }
 

File: src/main/java/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -366,7 +366,7 @@ public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
 
     @Override
     public void onBindHeaderViewHolder(RecyclerView.ViewHolder viewHolder, int i) {
-        if(i!=0){
+        if(i>0){
             HeaderViewHolder holder=(HeaderViewHolder)viewHolder;
         if(enter.get(i-1)!=null && enter.get(i-1).isDirectory())holder.ext.setText("Directories");
         else holder.ext.setText("Files");

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -283,6 +283,8 @@ private void checkUnsavedChanges() {
                     .content(R.string.unsavedchangesdesc)
                     .positiveText(R.string.yes)
                     .negativeText(R.string.no)
+                    .positiveColor(Color.parseColor(fabSkin))
+                    .negativeColor(Color.parseColor(fabSkin))
                     .callback(new MaterialDialog.ButtonCallback() {
                         @Override
                         public void onPositive(MaterialDialog dialog) {

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -514,7 +514,7 @@ void refresh() {
     public void bbar() {
         if (current != null)
             mainActivity.updatePath(current,  false,0,folder,file);
-        else     mainActivity.updatePath("", false,0,folder,file);
+        else     mainActivity.updatePath("/", false,0,folder,file);
 
 
     }

File: src/main/java/com/amaze/filemanager/utils/share/ShareAdapter.java
Patch:
@@ -29,7 +29,8 @@ public class ShareAdapter extends ArrayAdapter<Intent> {
     ArrayList<Drawable> arrayList;
     int theme;
     public void updateMatDialog(MaterialDialog b){this.b=b;}
-    public ShareAdapter(Context context, ArrayList<Intent> arrayList,ArrayList<String> labels,ArrayList<Drawable>  arrayList1,int theme) {
+    public ShareAdapter(Context context, ArrayList<Intent> arrayList,ArrayList<String> labels,
+                        ArrayList<Drawable>  arrayList1,int theme) {
         super(context, R.layout.rowlayout, arrayList);
         this.labels=labels;
         iconHolder=new IconHolder(context,true,true);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -306,7 +306,8 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
         // onCreateActionMode, but
         // may be called multiple times if the mode is invalidated.
         public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-            ArrayList<Integer> positions = zipAdapter.getCheckedItemPositions();
+            ArrayList<Integer> positions =
+                    openmode==0 ? zipAdapter.getCheckedItemPositions() : rarAdapter.getCheckedItemPositions();
             ((TextView) v.findViewById(R.id.item_count)).setText(positions.size() + "");
 
             return false; // Return false if nothing is done

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -272,7 +272,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         hiddenfiles = hidden.readTable();
         rootMode = Sp.getBoolean("rootmode", false);
         showHidden = Sp.getBoolean("showHidden", false);
-        coloriseIcons = Sp.getBoolean("coloriseIcons", false);
+        coloriseIcons = Sp.getBoolean("coloriseIcons", true);
         if (islist) {
             folder = res.getDrawable(R.drawable.ic_grid_folder_new);
         } else {

File: src/main/java/com/amaze/filemanager/fragments/preference_fragments/Preffrag.java
Patch:
@@ -109,7 +109,6 @@ public boolean onPreferenceClick(Preference preference) {
                     @Override
                     public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequence text) {
                         sharedPref.edit().putInt("hidemode", which).commit();
-                        restartPC(getActivity());
                         return true;
                     }
                 });
@@ -119,7 +118,6 @@ public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequ
         });
         switch (sharedPref.getInt("hidemode", 0)) {
             case 0:
-                findPreference("topFab").setEnabled(true);
                 hideModePreference.setSummary(getResources().getString(R.string.hide_mode_nothing));
                 break;
             case 1:

File: src/main/java/com/amaze/filemanager/ui/icons/Icons.java
Patch:
@@ -39,7 +39,7 @@ private static void add(String mimeType, int resId) {
         int icon;
 
         // Package
-        icon = R.drawable.ic_doc_apk;
+        icon = R.drawable.ic_doc_apk_white;
         add("application/vnd.android.package-archive", icon);
 
         // Audio
@@ -239,7 +239,7 @@ public static boolean isArchive(String name) {
 
     public static boolean isApk(String name) {
         Integer res = sMimeIcons.get(MimeTypes.getMimeType(new File(name)));
-        if (res != null && res == R.drawable.ic_doc_apk) return true;
+        if (res != null && res == R.drawable.ic_doc_apk_white) return true;
         return false;
     }
     public static boolean isPdf(String name) {
@@ -277,7 +277,7 @@ public static Drawable loadMimeIcon(Context context, String path,boolean grid,fi
         Integer resId = sMimeIcons.get(mimeType);
 
         if (resId != null) {switch (resId){
-            case R.drawable.ic_doc_apk: if(grid)resId=R.drawable.ic_doc_apk_grid;
+            case R.drawable.ic_doc_apk_white: if(grid)resId=R.drawable.ic_doc_apk_grid;
        break;/*
             case R.drawable.ic_doc_audio_am: if(grid)resId=R.drawable.ic_doc_audio_am_grid;
                 break;

File: src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_db_viewer);
         toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin = Sp.getString("skin_color", "#3f51b5");
+        skin =PreferenceUtils.getColor( Sp.getInt("skin_color_position", 4));
         if (Build.VERSION.SDK_INT>=21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);

File: src/main/java/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -57,7 +57,7 @@ public class Preferences extends AppCompatActivity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(this);
-        fabSkin = Sp.getString("fab_skin_color", "#e91e63");
+        fabSkin = PreferenceUtils.getColor(Sp.getInt("fab_skin_color_position", 1));
 
         int th = Integer.parseInt(Sp.getString("theme", "0"));
 
@@ -204,7 +204,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
         Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
-        skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#3f51b5");
+        skin = PreferenceUtils.getColor(Sp.getInt("skin_color_position", 4));
         if (Build.VERSION.SDK_INT>=21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -81,7 +81,7 @@ public class TextReader extends AppCompatActivity implements TextWatcher {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(this);
-        fabSkin = Sp.getString("fab_skin_color", "#e91e63");
+        fabSkin =PreferenceUtils.getColor( Sp.getInt("fab_skin_color_position", 1));
 
         theme = Integer.parseInt(Sp.getString("theme", "0"));
         theme1 = theme==2 ? PreferenceUtils.hourOfDay() : theme;
@@ -230,7 +230,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.search);
         android.support.v7.widget.Toolbar toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin = Sp.getString("skin_color", "#3f51b5");
+        skin = PreferenceUtils.getColor(Sp.getInt("skin_color_position", 4));
         if (Build.VERSION.SDK_INT>=21) {
             ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);

File: src/main/java/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -35,6 +35,7 @@
 
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.fragments.TabFragment;
+import com.amaze.filemanager.utils.PreferenceUtils;
 
 import java.io.File;
 import java.lang.reflect.Method;
@@ -60,7 +61,7 @@ public TabSpinnerAdapter(Context context, int resource, ArrayList<String> items,
         this.tabFragment=tabFragment;
         putColors();
         final SharedPreferences sharedPreferences1 = PreferenceManager.getDefaultSharedPreferences(context);
-        fabSkin = sharedPreferences1.getString("fab_skin_color", "#e91e63");
+        fabSkin = PreferenceUtils.getColor(sharedPreferences1.getInt("fab_skin_color_position", 1));
         color=colors.get(fabSkin);
         if(color==null){color=colors.get("#3f51b5");}
     }

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -61,6 +61,7 @@
 import com.amaze.filemanager.utils.HidingScrollListener;
 import com.amaze.filemanager.ui.views.SpacesItemDecoration;
 import com.amaze.filemanager.ui.ZipObj;
+import com.amaze.filemanager.utils.PreferenceUtils;
 import com.timehop.stickyheadersrecyclerview.StickyRecyclerHeadersDecoration;
 
 import java.io.File;
@@ -152,8 +153,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showLastModified = Sp.getBoolean("showLastModified", true);
         showDividers=Sp.getBoolean("showDividers",true);
         year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
-        skin = Sp.getString("skin_color", "#3f51b5");
-        iconskin=Sp.getString("icon_skin_color",skin);
+        skin = PreferenceUtils.getColor(Sp.getInt("skin_color_position", 4));
+        iconskin=PreferenceUtils.getColor(Sp.getInt("icon_skin_color_position", 4));
         mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 
         String x = getSelectionColor();

File: src/main/java/com/amaze/filemanager/services/asynctasks/RarHelperTask.java
Patch:
@@ -6,6 +6,7 @@
 import android.os.AsyncTask;
 
 import com.amaze.filemanager.fragments.RarViewer;
+import com.amaze.filemanager.utils.Futils;
 import com.github.junrar.Archive;
 import com.github.junrar.rarfile.FileHeader;
 
@@ -31,7 +32,6 @@ public RarHelperTask(RarViewer zipViewer, String dir) {
     @Override
     protected ArrayList<FileHeader> doInBackground(File... params) {
         ArrayList<FileHeader> elements = new ArrayList<FileHeader>();
-
         try {
             Archive zipfile = new Archive(params[0]);
             zipViewer.archive=zipfile;

File: src/main/java/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -404,7 +404,7 @@ public void showProps(final File f, final Main c,boolean root) {
         name = getString(c.getActivity(), R.string.name) + f.getName();
         parent = getString(c.getActivity(), R.string.location) + f.getParent();
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(c.getActivity());
-        String fabskin = sp.getString("fab_skin_color", "#e91e63");
+        String fabskin = PreferenceUtils.getColor(sp.getInt("fab_skin_color_position", 1));
         MaterialDialog.Builder a = new MaterialDialog.Builder(c.getActivity());
         a.title(getString(c.getActivity(), R.string.properties));
         if(c.theme1==1)
@@ -435,7 +435,7 @@ public void showProps(final File f, final Context c,int theme1) {
         name = getString(c, R.string.name) + f.getName();
         parent = getString(c, R.string.location) + f.getParent();
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(c);
-        String fabskin = sp.getString("fab_skin_color", "#e91e63");
+        String fabskin = PreferenceUtils.getColor(sp.getInt("fab_skin_color_position", 1));
         MaterialDialog.Builder a = new MaterialDialog.Builder(c);
         a.title(getString(c, R.string.properties));
         if(theme1==1)
@@ -725,7 +725,7 @@ public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequ
 
                 m.Sp.edit().putString("sortbyApps", "" + which).commit();
                 m.getSortModes();
-                m.loadlist();
+                m.loadlist(false);
                 dialog.dismiss();
                 return true;
             }

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -44,8 +44,8 @@ public RarAdapter(Context c,ArrayList<FileHeader> enter, RarViewer zipViewer) {
         this.enter = enter;
         for (int i = 0; i < enter.size(); i++) {
             myChecked.put(i, false);
-        }  mInflater = (LayoutInflater) c
-                .getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
+        }
+        mInflater = (LayoutInflater) c.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
         this.c = c;
         folder = c.getResources().getDrawable(R.drawable.ic_grid_folder_new);
         unknown = c.getResources().getDrawable(R.drawable.ic_doc_generic_am);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1785,7 +1785,7 @@ public void run() {
                /* DialogUtil.displayError(getActivity(), R.string.message_dialog_cannot_write_to_folder_saf, false,
                         currentFolder);||!FileUtil.isWritableNormalOrSaf(currentFolder)
 */
-                Sp.edit().putString("URI", oldUri.toString()).commit();
+                if(treeUri!=null)Sp.edit().putString("URI", oldUri.toString()).commit();
                 return;
             }
 

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -55,8 +55,10 @@ public class CopyService extends Service {
     boolean rootmode;
     NotificationManager mNotifyManager;
     NotificationCompat.Builder mBuilder;
+    Context c;
     @Override
     public void onCreate() {
+        c = getApplicationContext();
         SharedPreferences Sp=PreferenceManager.getDefaultSharedPreferences(this);
         rootmode=Sp.getBoolean("rootmode",false);
         registerReceiver(receiver3, new IntentFilter("copycancel"));
@@ -160,7 +162,6 @@ public void publishCompletedResult(String a,int id1){
 
 
 
-    Context c = this;
 
     private int checkFolder(final File folder,Context context) {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && FileUtil.isOnExtSdCard(folder, context)) {

File: src/main/java/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -60,9 +60,11 @@ public class ZipTask extends Service {
     NotificationManager mNotifyManager;
     NotificationCompat.Builder mBuilder;
     String zpath;
+    Context c;
     @SuppressWarnings("deprecation")
     @Override
     public void onCreate() {
+        c=getApplicationContext();
         registerReceiver(receiver1, new IntentFilter("zipcancel"));
     }
 boolean foreground=true;
@@ -106,7 +108,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
         // If we get killed, after returning from here, restart
         return START_REDELIVER_INTENT;
     }
-Context c=this;
+
     public class Doback extends AsyncTask<Bundle, Void, Integer> {
         ArrayList<String> files;
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -23,11 +23,9 @@
 import android.animation.AnimatorListenerAdapter;
 import android.app.Activity;
 import android.app.ActivityManager;
-import android.app.ProgressDialog;
 import android.content.BroadcastReceiver;
 import android.content.ContentResolver;
 import android.content.Context;
-import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.IntentSender;
@@ -49,7 +47,6 @@
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentTransaction;
-import android.support.v4.content.LocalBroadcastManager;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -324,7 +324,7 @@ public void onGlobalLayout() {
                 if (savedInstanceState.getBoolean("results")) {
                     try {
                         createViews(list, true, new File(current));
-                        ((TextView) ma.pathbar.findViewById(R.id.pathname)).setText(ma.utils.getString(ma.getActivity(), R.string.searchresults));
+                        pathname.setText(ma.utils.getString(ma.getActivity(), R.string.searchresults));
                         results = true;
                     } catch (Exception e) {
                     }
@@ -1343,7 +1343,7 @@ protected Void doInBackground(Void... params) {
             @Override
             public void onPostExecute(Void c){
                 createViews(list,true,new File(current));
-                ((TextView) ma.pathbar.findViewById(R.id.pathname)).setText(ma.utils.getString(ma.getActivity(), R.string.searchresults));
+                pathname.setText( R.string.searchresults);
                 results=true;
             }
         }.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -398,7 +398,7 @@ public void refresh(){
         new RarHelperTask(this,current).execute(f);
     }
     public void bbar(){
-        mainActivity.updatePath(current,false);
+        mainActivity.updatePath(current,false,false);
     }
     public void createviews(ArrayList<FileHeader> zipEntries,String dir){
         zipViewer.zipAdapter = new RarAdapter(zipViewer.getActivity(), zipEntries, zipViewer);

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -84,7 +84,7 @@ public void onPageSelected(int p1) {
                     if (ma.current != null) {
                         try {
                             mainActivity.updateDrawer(ma.current);
-                            mainActivity.updatePath(ma.current,true);
+                            mainActivity.updatePath(ma.current,true,ma.results);
                         if(buttons.getVisibility()==View.VISIBLE){
                             mainActivity.bbar(ma);
                         }
@@ -204,7 +204,7 @@ public void updatepaths() {
         } catch (Exception e) {
             e.printStackTrace();
         }
-        mainActivity.updatePath(tabHandler.findTab(currenttab+1).getPath(),true);
+        mainActivity.updatePath(tabHandler.findTab(currenttab+1).getPath(),true,((Main)getTab()).results);
     }
 
     @Override

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -379,7 +379,7 @@ void refresh(){
         new ZipHelperTask(this, current).execute(f);
     }
     public void bbar(){
-        mainActivity.updatePath(current,false);
+        mainActivity.updatePath(current,false,false);
 
     }
     public void createviews(ArrayList<ZipObj> zipEntries,String dir){

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -145,8 +145,8 @@ public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
     public void onBindHeaderViewHolder(RecyclerView.ViewHolder viewHolder, int i) {
         if(i!=0){
         HeaderViewHolder holder=(HeaderViewHolder)viewHolder;
-        if(enter.get(i-1)!=null && enter.get(i-1).isDirectory())holder.ext.setText("Directories");
-        else holder.ext.setText("Files");
+        if(enter.get(i-1)!=null && enter.get(i-1).isDirectory())holder.ext.setText(R.string.directories);
+        else holder.ext.setText(R.string.files);
     }}
 
 
@@ -179,7 +179,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder vholder, int position1) {
 
         GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
 
-        holder.imageView.setImageDrawable(Icons.loadMimeIcon(zipViewer.getActivity(), rowItem.getFileNameString(), false));
+        holder.imageView.setImageDrawable(Icons.loadMimeIcon(zipViewer.getActivity(), rowItem.getFileNameString(), false,zipViewer.res));
         holder.txtTitle.setText(rowItem.getFileNameString().substring(rowItem.getFileNameString().lastIndexOf("\\") + 1));
         if (rowItem.isDirectory()) {
             holder.imageView.setImageDrawable(folder);

File: src/main/java/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -167,7 +167,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int position1)
             holder.date.setText(R.string.goback);
         }
         else {
-            holder.imageView.setImageDrawable(Icons.loadMimeIcon(zipViewer.getActivity(), rowItem.getName(), false));
+            holder.imageView.setImageDrawable(Icons.loadMimeIcon(zipViewer.getActivity(), rowItem.getName(), false,zipViewer.res));
             final StringBuilder stringBuilder = new StringBuilder(rowItem.getName());
             if (zipViewer.showLastModified)
                 holder.date.setText(new Futils().getdate(rowItem.getTime(), "MMM dd, yyyy", zipViewer.year));

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -26,6 +26,7 @@
 import android.animation.ObjectAnimator;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.os.Build;
@@ -73,7 +74,7 @@
 import java.util.Calendar;
 
 public class RarViewer extends Fragment {
-
+    public Resources res;
     String s;
     public File f;
     public ArrayList<File> files;
@@ -138,7 +139,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         f = new File(s);
         listView.setVisibility(View.VISIBLE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
-
+        res=getResources();
 
         listView.setVisibility(View.VISIBLE);
         mLayoutManager=new LinearLayoutManager(getActivity());

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -24,6 +24,7 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.graphics.Color;
 import android.os.Build;
@@ -94,6 +95,7 @@ public class ZipViewer extends Fragment {
     public int paddingTop;
     int mToolbarHeight,hidemode;
     View mToolbarContainer;
+    public Resources res;
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         rootView = inflater.inflate(R.layout.main_frag, container, false);
@@ -135,7 +137,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         listView.setVisibility(View.VISIBLE);
         mLayoutManager=new LinearLayoutManager(getActivity());
         listView.setLayoutManager(mLayoutManager);
-
+        res=getResources();
         mainActivity.supportInvalidateOptionsMenu();
         if (mainActivity.theme1 == 1)
             rootView.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));

File: src/main/java/com/amaze/filemanager/utils/Icons.java
Patch:
@@ -263,8 +263,7 @@ public static boolean isgeneric(String name){
 
 
     return false;}
-    public static Drawable loadMimeIcon(Context context, String path,boolean grid) {
-        final Resources res = context.getResources();
+    public static Drawable loadMimeIcon(Context context, String path,boolean grid,final Resources res) {
         String mimeType = MimeTypes.getMimeType(new File(path));
         if (mimeType == null) {
             /* if(grid)

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -60,7 +60,6 @@ public Recycleradapter(Main m,ArrayList<Layoutelements> items,Context context){
     }
     public void addItem(Layoutelements layoutelements){
         notifyDataSetChanged();
-        items.add(layoutelements);
         item_count++;
 
     }

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1241,9 +1241,11 @@ public void run() {
         a.callback(new MaterialDialog.ButtonCallback() {
             @Override
             public void onPositive(MaterialDialog materialDialog) {
+                materialDialog.dismiss();
                 String a = e.getText().toString();
                 SearchTask task= new SearchTask(ma.searchHelper,ma,a);
                 task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,fpath);
+                ma.searchTask=task;
             }
 
             @Override

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -89,12 +89,10 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
          if ((!b || mode==0 || mode ==2) && rootMode)
              for (File f : files) {
                  try {
-
                      b=RootTools.deleteFileOrDirectory(f.getPath(), true);
                  } catch (Exception e) {
                      b = false;
                  }
-                return b;
             }
 
         return b;

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1902,13 +1902,13 @@ public void rename(File file,File file1) {
         sendBroadcast(intent);
     }
     private int checkFolder(final File folder,Context context) {
-        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP) {
+        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP && FileUtil.isOnExtSdCard(folder,context)) {
             if (!folder.exists() || !folder.isDirectory()) {
                 return 0;
             }
 
             // On Android 5, trigger storage access framework.
-            if (!FileUtil.isWritableNormalOrSaf(folder,context)) {
+            if (!FileUtil.isWritableNormalOrSaf(folder,context) ) {
                 guideDialogForLEXA(folder.getPath());
                 return 2;
             }

File: src/main/java/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -105,4 +105,7 @@ public void onClick(View view) {
         });
         return view;
     }
+    public void updateDialog(MaterialDialog dialog){
+        materialDialog=dialog;
+    }
 }

File: src/main/java/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -471,7 +471,6 @@ public boolean onPreferenceClick(Preference preference) {
         a.title(R.string.choose_color);
         if(theme==1)
             a.theme(Theme.DARK);
-        LayoutInflater layoutInflater = (LayoutInflater) getActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
 
         a.autoDismiss(true);
         ColorAdapter adapter = null;

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -202,7 +202,7 @@ public class MainActivity extends AppCompatActivity implements
     /* A flag indicating that a PendingIntent is in progress and prevents
    * us from starting further intents.
    */
-    private boolean mIntentInProgress,topfab=false;
+    private boolean mIntentInProgress,topfab=false,showHidden=false;
     public boolean isDrawerLocked = false;
     static final int DELETE=0,COPY=1,MOVE=2,NEW_FOLDER=3,RENAME=4,NEW_FILE=5,EXTRACT=6,COMPRESS=7;
     /**
@@ -375,7 +375,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         hidemode=Sp.getInt("hidemode", 0);
         topfab = hidemode==0 ? Sp.getBoolean("topFab",true):false;
-
+        showHidden=Sp.getBoolean("showHidden",false);
         floatingActionButton = !topfab ?
                 (FloatingActionButton) findViewById(R.id.fab) : (FloatingActionButton) findViewById(R.id.fab2);
         fabShowAnim = AnimationUtils.loadAnimation(this, R.anim.fab_newtab);
@@ -994,7 +994,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             menu.findItem(R.id.home).setVisible(true);
             menu.findItem(R.id.history).setVisible(true);
             menu.findItem(R.id.item10).setVisible(true);
-            menu.findItem(R.id.hiddenitems).setVisible(true);
+            if(showHidden)menu.findItem(R.id.hiddenitems).setVisible(true);
             menu.findItem(R.id.view).setVisible(true);
             menu.findItem(R.id.extract).setVisible(false);
             invalidatePasteButton(menu.findItem(R.id.paste));

File: src/main/java/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -88,9 +88,9 @@ public Tab findTab(int tabNo) {
         Tab tab = new Tab();
         if (cursor.moveToFirst()) {
             cursor.moveToFirst();
-            tab.setTab(Integer.parseInt(cursor.getString(0)));
-            tab.setPath(cursor.getString(1));
-            tab.setHome(cursor.getString(2));
+            tab.setTab((cursor.getInt(cursor.getColumnIndex(COLUMN_TAB_NO))));
+            tab.setPath(cursor.getString(cursor.getColumnIndex(COLUMN_PATH)));
+            tab.setHome(cursor.getString(cursor.getColumnIndex(COLUMN_HOME)));
             cursor.close();
         } else {
             tab = null;

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -120,7 +120,7 @@ public void onPageScrollStateChanged(int p1) {
                     tab.setPath(path);
                     addTab(tab,l+1,"");
                     if(l==0)
-                        addTab(tabHandler.findTab(1),1,"");
+                        addTab(tabHandler.findTab(2),2,"");
                 }
                 else
                 {   addTab(tabHandler.findTab(1),1,"");

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -936,9 +936,7 @@ public void onNegative(MaterialDialog materialDialog) {
                     mode.finish();
                     return true;
                 case R.id.ex:
-                    Intent intent = new Intent(getActivity(), ExtractService.class);
-                    intent.putExtra("zip", list.get((plist.get(0))).getDesc());
-                    getActivity().startService(intent);
+                    mainActivity.extractFile(new File(list.get(plist.get(0)).getDesc()));
                     mode.finish();
                     return true;
                 case R.id.cpy:

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -136,7 +136,6 @@ public static OutputStream getOutputStream(final File target,Context context) {
 
         OutputStream outStream = null;
         try {
-
             // First try the normal way
             if (isWritable(target)) {
                 // standard way
@@ -308,7 +307,7 @@ public static boolean mkdir(final File file,Context context) {
         }
 
         // Try the normal way
-        if (file.mkdir()) {
+        if (file.mkdirs()) {
             return true;
         }
 

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -903,7 +903,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         @Override
                         public void onPositive(MaterialDialog materialDialog) {
                         m.finish();
-                            mainActivity.rename((f),new File(f.getPath()+"/"+edit.getText()));
+                            mainActivity.rename((f),new File(f.getParent()+"/"+edit.getText()));
 
                         }
 

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -260,7 +260,7 @@ public static final boolean moveFile(final File source, final File target,Contex
      */
     public static final boolean renameFolder(final File source, final File target,Context context) {
         // First try the normal rename.
-        if (source.renameTo(target)) {
+        if (new Futils().rename(source,target.getName(),false)) {
             return true;
         }
         if (target.exists()) {

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1871,7 +1871,7 @@ public void rename(File file,File file1) {
             oppathe=file.getPath();
             oppathe1=file1.getPath();
             operation = 4;
-        } else if (mode == 0) {
+        } else if (mode == 1) {
             boolean b = FileUtil.renameFolder(file, file1, mainActivity);
             if (b) {
                 Toast.makeText(mainActivity,
@@ -1883,7 +1883,7 @@ public void rename(File file,File file1) {
                         Toast.LENGTH_LONG).show();
 
             }
-        } else if(mode==1) utils.rename(file,file1.getName(),rootmode);
+        } else if(mode==0) utils.rename(file,file1.getName(),rootmode);
 
         Intent intent = new Intent("loadlist");
         sendBroadcast(intent);

File: src/main/java/com/amaze/filemanager/utils/FileUtil.java
Patch:
@@ -268,7 +268,8 @@ public static final boolean renameFolder(final File source, final File target,Co
         }
 
         // Try the Storage Access Framework if it is just a rename within the same parent folder.
-        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP && source.getParent().equals(target.getParent())) {
+        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP
+                && source.getParent().equals(target.getParent()) && FileUtil.isOnExtSdCard(source, context)) {
             DocumentFile document = getDocumentFile(source, true,context);
             if (document.renameTo(target.getName())) {
                 return true;
@@ -336,7 +337,7 @@ public static boolean mkdir(final File file,Context context) {
         }
 
         // Try with Storage Access Framework.
-        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP) {
+        if (Build.VERSION.SDK_INT>=Build.VERSION_CODES.LOLLIPOP && FileUtil.isOnExtSdCard(file, context)) {
             DocumentFile document = getDocumentFile(file, true,context);
             // getDocumentFile implicitly creates the directory.
             return document.exists();

File: src/main/java/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -39,7 +39,6 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.utils.FileUtil;
 import com.amaze.filemanager.utils.Futils;
-import com.amaze.filemanager.utils.MediaFile;
 import com.stericson.RootTools.RootTools;
 
 import java.io.BufferedInputStream;

File: src/main/java/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -32,7 +32,7 @@
 import com.amaze.filemanager.fragments.ZipViewer;
 import com.amaze.filemanager.utils.FileUtil;
 import com.amaze.filemanager.utils.Futils;
-import com.amaze.filemanager.utils.MediaFile;
+
 import com.stericson.RootTools.RootTools;
 
 import java.io.File;

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -101,7 +101,6 @@
 import com.amaze.filemanager.utils.FileUtil;
 import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.IconUtils;
-import com.amaze.filemanager.utils.MediaFile;
 import com.amaze.filemanager.utils.PreferenceUtils;
 import com.amaze.filemanager.utils.RootHelper;
 import com.amaze.filemanager.utils.RoundedImageView;

File: src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
         setSupportActionBar(toolbar);
         skin = Sp.getString("skin_color", "#3f51b5");
         if (Build.VERSION.SDK_INT>=21) {
-            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.drawable.ic_launcher)).getBitmap(), Color.parseColor(skin));
+            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);
         }
         String x = PreferenceUtils.getStatusColor(skin);

File: src/main/java/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -202,7 +202,7 @@ public void onCreate(Bundle savedInstanceState) {
         Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
         skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#3f51b5");
         if (Build.VERSION.SDK_INT>=21) {
-            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.drawable.ic_launcher)).getBitmap(), Color.parseColor(skin));
+            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);
         }
         String x = PreferenceUtils.getStatusColor(skin);

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -94,7 +94,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setSupportActionBar(toolbar);
         skin = Sp.getString("skin_color", "#3f51b5");
         if (Build.VERSION.SDK_INT>=21) {
-            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.drawable.ic_launcher)).getBitmap(), Color.parseColor(skin));
+            ActivityManager.TaskDescription taskDescription = new ActivityManager.TaskDescription("Amaze", ((BitmapDrawable)getResources().getDrawable(R.mipmap.ic_launcher)).getBitmap(), Color.parseColor(skin));
             ((Activity)this).setTaskDescription(taskDescription);
         }
         String x = PreferenceUtils.getStatusColor(skin);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1341,7 +1341,7 @@ public float[] calculatevalues(String color){
 
         addIntent.putExtra(Intent.EXTRA_SHORTCUT_ICON_RESOURCE,
                 Intent.ShortcutIconResource.fromContext(getActivity(),
-                        R.drawable.ic_launcher));
+                        R.mipmap.ic_launcher));
 
         addIntent
                 .setAction("com.android.launcher.action.INSTALL_SHORTCUT");

File: src/main/java/com/amaze/filemanager/utils/ScrimInsetsRelativeLayout.java
Patch:
@@ -28,9 +28,7 @@
 
 import com.amaze.filemanager.R;
 
-/**
- * Created by Vishal on 02-03-2015.
- *
+/*
  * A layout that draws something in the insets passed to {@link #fitSystemWindows(Rect)}, i.e. the area above UI chrome
  * (status and navigation bars, overlay action bars).
  */

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -193,7 +193,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         setContentView(R.layout.main_toolbar);
 
-        PreferenceManager.setDefaultValues(this, R.xml.preferences, false);
         tabHandler=new TabHandler(this,null,null,1);
 
         buttonBarFrame = (FrameLayout) findViewById(R.id.buttonbarframe);

File: src/main/java/com/amaze/filemanager/utils/DividerItemDecoration.java
Patch:
@@ -26,7 +26,7 @@ public class DividerItemDecoration extends RecyclerView.ItemDecoration {
 
     private int mOrientation;
     boolean show;
-    int pix=0,leftpix=0;
+    int leftpix=0;
     boolean showtopbottomdividers;
     public DividerItemDecoration(Context context, int orientation,boolean showtopbottomdividers,boolean show) {
         final TypedArray a = context.obtainStyledAttributes(ATTRS);
@@ -35,7 +35,6 @@ public DividerItemDecoration(Context context, int orientation,boolean showtopbot
         this.show=show;
         this.showtopbottomdividers=showtopbottomdividers;
         setOrientation(orientation);
-        pix=(int)(16*(context.getResources().getDisplayMetrics().densityDpi/160f));
         leftpix=(int)(72*(context.getResources().getDisplayMetrics().densityDpi/160f));
     }
 
@@ -58,7 +57,7 @@ public void onDraw(Canvas c, RecyclerView parent) {
 
     public void drawVertical(Canvas c, RecyclerView parent) {
         final int left = parent.getPaddingLeft()+leftpix;
-        final int right = parent.getWidth() - parent.getPaddingRight()-pix;
+        final int right = parent.getWidth() - parent.getPaddingRight();
 
         final int childCount = parent.getChildCount();
         for (int i = showtopbottomdividers?0:1; i < (showtopbottomdividers?childCount:childCount-1); i++) {

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -219,7 +219,6 @@ public void onCreate(Bundle savedInstanceState) {
         }
 
         setContentView(R.layout.main_toolbar);
-        PreferenceManager.setDefaultValues(this, R.xml.preferences, false);
         tabHandler=new TabHandler(this,null,null,1);
 
         buttonBarFrame = (FrameLayout) findViewById(R.id.buttonbarframe);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -613,6 +613,7 @@ public void onClick(View v) {
             }
             mode.setCustomView(v);
             mainActivity.setPagingEnabled(false);
+            if(mainActivity.isDrawerLocked)mainActivity.translateDrawerList(true);
             // assumes that you have "contexual.xml" menu resources
             inflater.inflate(R.menu.contextual, menu);
             initMenu(menu);
@@ -986,6 +987,7 @@ public void onNegative(MaterialDialog materialDialog) {
         public void onDestroyActionMode(ActionMode mode) {
             mActionMode = null;
             selection = false;
+            if(mainActivity.isDrawerLocked)mainActivity.translateDrawerList(false);
             if(!results)adapter.toggleChecked(false, current);
             else adapter.toggleChecked(false);
             mainActivity.setPagingEnabled(true);

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -179,7 +179,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder vholder,final int p1) {
             i=1;
         if(p1==getItemCount()-1){
             holder.rl.setMinimumHeight(main.paddingTop);
-            if(item_count==2)
+            if(item_count==(main.gobackitem?3:2))
             holder.txtTitle.setText(R.string.nofiles);
             else holder.txtTitle.setText(R.string.guide3);
             return;}

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -527,7 +527,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                         listView.removeItemDecoration(headersDecor);
                         addheader=true;}
                     if(addheader && islist){
-                            dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,showDividers);
+                            dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,false,showDividers);
                             listView.addItemDecoration(dividerItemDecoration);
 
                     headersDecor = new StickyRecyclerHeadersDecoration(adapter);

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -404,7 +404,7 @@ public void createviews(ArrayList<FileHeader> zipEntries,String dir){
             addheader=true;
         }
         if(addheader ) {
-                dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,showDividers);
+                dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,false,showDividers);
                 listView.addItemDecoration(dividerItemDecoration);
 
             headersDecor = new StickyRecyclerHeadersDecoration(zipAdapter);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -385,7 +385,7 @@ public void createviews(ArrayList<ZipObj> zipEntries,String dir){
             addheader=true;
         }
         if(addheader ) {
-            dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,showDividers);
+            dividerItemDecoration = new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL_LIST,false,showDividers);
             listView.addItemDecoration(dividerItemDecoration);
 
             headersDecor = new StickyRecyclerHeadersDecoration(zipAdapter);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -413,8 +413,9 @@ public void onFinish() {
             Window window = getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             //window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
-            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
-            //window.setStatusBarColor(Color.parseColor(statusBarColorBuilder.toString()));
+            if(isDrawerLocked) {
+                window.setStatusBarColor((skinStatusBar));
+            }else window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             if (colourednavigation)
                 window.setNavigationBarColor(skinStatusBar);
 

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -33,6 +33,7 @@
 import android.os.Environment;
 import android.preference.PreferenceManager;
 import android.support.v4.app.ListFragment;
+import android.util.Log;
 import android.view.ActionMode;
 import android.view.View;
 import android.view.ViewGroup;
@@ -156,7 +157,7 @@ public void onSelection(MaterialDialog materialDialog, View view, int i, CharSeq
                                 Intent intent = new Intent(getActivity(), CopyService.class);
                                 //Toast.makeText(getActivity(), f.getParent(), Toast.LENGTH_LONG).show();
 
-                                if (Build.VERSION.SDK_INT == 21) {
+                                if (Build.VERSION.SDK_INT >= 21) {
                                     a.add(f.getParent());
                                 } else {
                                     a.add(f.getPath());

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -735,7 +735,6 @@ else if(f.canExecute()){
                 e1.printStackTrace();
             }
         }
-        Toast.makeText(this,books.size()+"\n"+list.size(),Toast.LENGTH_SHORT).show();
         adapter = new DrawerAdapter(this, list, MainActivity.this, Sp);
         mDrawerList.setAdapter(adapter);
     }

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -132,7 +132,7 @@ public void onClick(View p1) {
             public boolean onLongClick(View v) {
 
                 // not to remove the first bookmark (storage)
-                if (position>=m.getStorageDirectories().size()) {
+                if (position>=m.storage_count) {
 
                     if (m.theme1 == 0)
                         imageView.setImageResource(R.drawable.ic_action_cancel_light);

File: src/main/java/com/amaze/filemanager/utils/ExternalStoragePermissionGrant.java
Patch:
@@ -89,7 +89,7 @@ private Uri checkUri(final Uri uri, final String path) {
         return null;
     }
     public  String getStorageDirectories(MainActivity m,String path) {
-        for(int i=0;i<m.list.size()-m.booksize;i++){
+        for(int i=0;i<m.storage_count;i++){
             if(path.contains(m.list.get(i)))return m.list.get(i);
 
 

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -132,7 +132,6 @@ public void onClick(View p1) {
             public boolean onLongClick(View v) {
 
                 // not to remove the first bookmark (storage)
-                Log.d("tags", m.val.size() + "");
                 if (position>=m.getStorageDirectories().size()) {
 
                     if (m.theme1 == 0)

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -132,7 +132,8 @@ public void onClick(View p1) {
             public boolean onLongClick(View v) {
 
                 // not to remove the first bookmark (storage)
-                if (position>=m.val.size()) {
+                Log.d("tags", m.val.size() + "");
+                if (position>=m.getStorageDirectories().size()) {
 
                     if (m.theme1 == 0)
                         imageView.setImageResource(R.drawable.ic_action_cancel_light);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -630,7 +630,7 @@ public void onClick(View v) {
             /*if(Build.VERSION.SDK_INT<19)
                 getActivity().findViewById(R.id.action_bar).setVisibility(View.GONE);*/
            // rootView.findViewById(R.id.buttonbarframe).setBackgroundColor(res.getColor(R.color.toolbar_cab));
-            ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", skin_color, res.getColor(R.color.toolbar_cab));
+            ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", skin_color, res.getColor(R.color.holo_dark_action_mode));
             anim.setDuration(0);
             anim.setEvaluator(new ArgbEvaluator());
             anim.start();
@@ -989,7 +989,7 @@ public void onDestroyActionMode(ActionMode mode) {
             if(!results)adapter.toggleChecked(false, current);
             else adapter.toggleChecked(false);
             mainActivity.setPagingEnabled(true);
-            ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", res.getColor(R.color.toolbar_cab), skin_color);
+            ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", res.getColor(R.color.holo_dark_action_mode), skin_color);
             anim.setDuration(0);
             anim.setEvaluator(new ArgbEvaluator());
             anim.start();

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -132,7 +132,7 @@ public void onClick(View p1) {
             public boolean onLongClick(View v) {
 
                 // not to remove the first bookmark (storage)
-                if (m.rootmode ? position!=0&&position!=1 : position!=0) {
+                if (position>=m.val.size()) {
 
                     if (m.theme1 == 0)
                         imageView.setImageResource(R.drawable.ic_action_cancel_light);

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -726,7 +726,7 @@ public void run() {
     }
     public void updateDrawer(){
         list.clear();
-        for (String file:getStorageDirectories()) {
+        for (String file:val=getStorageDirectories()) {
             File f=new File(file);
             if(!f.isDirectory())
                 list.add(file);

File: src/main/java/com/amaze/filemanager/utils/MimeTypes.java
Patch:
@@ -141,7 +141,7 @@ public static String getMimeType(File file) {
             return null;
         }
 
-        String type = null;
+        String type = "*/*";
         final String extension = getExtension(file.getName());
 
         if (extension != null && !extension.isEmpty()) {
@@ -153,6 +153,7 @@ public static String getMimeType(File file) {
                 type = MIME_TYPES.get(extensionLowerCase);
             }
         }
+        if(type==null)type="*/*";
         return type;
     }
 

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -635,7 +635,7 @@ public void onClick(View v) {
                 getActivity().findViewById(R.id.action_bar).setVisibility(View.GONE);*/
            // rootView.findViewById(R.id.buttonbarframe).setBackgroundColor(res.getColor(R.color.toolbar_cab));
             ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", skin_color, res.getColor(R.color.toolbar_cab));
-            anim.setDuration(200);
+            anim.setDuration(0);
             anim.setEvaluator(new ArgbEvaluator());
             anim.start();
             if (Build.VERSION.SDK_INT >= 21) {
@@ -994,7 +994,7 @@ public void onDestroyActionMode(ActionMode mode) {
             else adapter.toggleChecked(false);
             mainActivity.setPagingEnabled(true);
             ObjectAnimator anim = ObjectAnimator.ofInt(getActivity().findViewById(R.id.buttonbarframe), "backgroundColor", res.getColor(R.color.toolbar_cab), skin_color);
-            anim.setDuration(50);
+            anim.setDuration(0);
             anim.setEvaluator(new ArgbEvaluator());
             anim.start();
             if (Build.VERSION.SDK_INT >= 21) {

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -566,7 +566,7 @@ public void onHide() {
                         }
 
                     });
-                    if (buttons.getVisibility() == View.VISIBLE) mainActivity.bbar();
+                    if (buttons.getVisibility() == View.VISIBLE) mainActivity.bbar(this);
 
                     mainActivity.updateDrawer(current);
                     mainActivity.updatepager();

File: src/main/java/com/amaze/filemanager/fragments/DbViewerFragment.java
Patch:
@@ -53,8 +53,8 @@ public void onActivityCreated(@Nullable Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         if (dbViewer.theme1 == 1) {
 
-            relativeLayout.setBackgroundColor(Color.parseColor("#000000"));
-            webView.setBackgroundColor(Color.parseColor("#000000"));
+            relativeLayout.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
+            webView.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         } else {
 
             relativeLayout.setBackgroundColor(Color.parseColor("#ffffff"));

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -125,7 +125,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mInput = (EditText) findViewById(R.id.fname);
         mInput.addTextChangedListener(this);
         try {
-            if (theme1 == 1) mInput.setBackgroundColor(Color.parseColor("#000000"));
+            if (theme1 == 1) mInput.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
             getSupportActionBar().setDisplayHomeAsUpEnabled(true);
         } catch (Exception e) {
 

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -214,6 +214,7 @@ public void onDestroyView() {
 
         // needed to remove any extracted file from cache, when onResume was not called
         // in case of opening any unknown file inside the rar
+        // bug : only deletes most recent openUnknown file from cache
         if (files.size()==1) {
 
             new DeleteTask(getActivity().getContentResolver(),  getActivity(), this).execute(files);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -345,6 +345,7 @@ public void onDestroyView() {
 
         // needed to remove any extracted file from cache, when onResume was not called
         // in case of opening any unknown file inside the zip
+        // bug : only deletes most recent openUnknown file from cache
         if (files.size()==1) {
 
             new DeleteTask(getActivity().getContentResolver(),  getActivity(), this).execute(files);

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -132,7 +132,7 @@ public void onClick(View p1) {
             public boolean onLongClick(View v) {
 
                 // not to remove the first bookmark (storage)
-                if (position!=0) {
+                if (m.rootmode ? position!=0&&position!=1 : position!=0) {
 
                     if (m.theme1 == 0)
                         imageView.setImageResource(R.drawable.ic_action_cancel_light);

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -208,7 +208,7 @@ else if (Icons.isgeneric(rowItem.getFileNameString()))
             @Override
             public boolean onLongClick(View view) {
                 toggleChecked(p);
-                return false;
+                return true;
             }
         });holder.imageView.setOnClickListener(new View.OnClickListener() {
                                                    @Override

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -118,7 +118,8 @@ public ViewHolder(View view) {
 
     @Override
     public long getHeaderId(int position) {
-        if(position==0)return -1;
+        if(position>=0 && position<enter.size()+1)
+            if(position==0)return -1;
         if(enter.get(position-1)==null)return -1;
         else if(enter.get(position-1).isDirectory())return 'D';
         else return 'F';

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -478,7 +478,7 @@ else if (Icons.isApk(rowItem.getDesc()) || Icons.isPicture(rowItem.getDesc()))
 
     @Override
     public long getHeaderId(int i) {
-        if(i>=0 && i<items.size())
+        if(i>=0 && i<items.size()+(main.islist?1:3))
         if(main.islist){
             if(i!=0){
                     if(items.get(i-1).getSize().equals(main.goback))return -1;

File: src/main/java/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -304,7 +304,7 @@ private boolean isPositionHeader(int position) {
         return position == 0;}
     @Override
     public long getHeaderId(int position) {
-        if(position>=0 && position<enter.size())
+        if(position>=0 && position<enter.size()+1)
     if(position!=0){
     if(enter.get(position-1)==null)return -1;
     else if(enter.get(position-1).isDirectory())return 'D';

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -79,7 +79,7 @@ public class RarViewer extends Fragment {
     public Boolean results,selection=false;
     public String current;
     public Futils utils=new Futils();
-    public String skin,year;public RarAdapter zipAdapter;
+    public String skin,iconskin,year;public RarAdapter zipAdapter;
     public ActionMode mActionMode;public int skinselection;
     public boolean coloriseIcons,showSize,showLastModified,gobackitem;
     SharedPreferences Sp;
@@ -155,6 +155,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showLastModified = Sp.getBoolean("showLastModified", true);
         year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
         skin = Sp.getString("skin_color", "#3f51b5");
+        iconskin=Sp.getString("icon_skin_color",skin);
         String x = getSelectionColor();
         skinselection = Color.parseColor(x);
         files = new ArrayList<File>();

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -74,7 +74,7 @@ public class ZipViewer extends Fragment {
     public Boolean results,selection=false;
     public String current;
     public Futils utils=new Futils();
-    public String skin,year;public ZipAdapter zipAdapter;
+    public String skin,iconskin,year;public ZipAdapter zipAdapter;
     public ActionMode mActionMode;public int skinselection;
     public boolean coloriseIcons,showSize,showLastModified,gobackitem;
 SharedPreferences Sp;
@@ -151,6 +151,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showLastModified = Sp.getBoolean("showLastModified", true);
         year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
         skin = Sp.getString("skin_color", "#3f51b5");
+        iconskin=Sp.getString("icon_skin_color",skin);
         mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 
         String x = getSelectionColor();

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -320,7 +320,7 @@ public void onClick(View view) {
                     GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
                     if (main.coloriseIcons) {
                         if (rowItem.isDirectory(main.rootMode))
-                            gradientDrawable.setColor(Color.parseColor(main.skin));
+                            gradientDrawable.setColor(Color.parseColor(main.iconskin));
                         else if (Icons.isVideo(rowItem.getDesc()))
                             gradientDrawable.setColor(Color.parseColor("#f06292"));
                         else if (Icons.isAudio(rowItem.getDesc()))
@@ -341,9 +341,9 @@ else if (Icons.isgeneric(rowItem.getDesc())) {
                                 holder.imageView.setImageDrawable(null);
                             }
                         } else {
-                            gradientDrawable.setColor(Color.parseColor(main.skin));
+                            gradientDrawable.setColor(Color.parseColor(main.iconskin));
                         }
-                    } else gradientDrawable.setColor(Color.parseColor(main.skin));
+                    } else gradientDrawable.setColor(Color.parseColor(main.iconskin));
                     if (rowItem.getSize().equals(main.goback))
                         gradientDrawable.setColor(Color.parseColor("#757575"));
 

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -128,7 +128,7 @@ public class Main extends android.support.v4.app.Fragment {
     public IconHolder ic;
     public MainActivity mainActivity;
     public boolean showButtonOnStart = false;
-    public String skin, fabSkin;
+    public String skin, fabSkin,iconskin;
     public int skinselection;
     public int theme;
     public int theme1;
@@ -163,6 +163,7 @@ public void onCreate(Bundle savedInstanceState) {
         savepaths=Sp.getBoolean("savepaths", true);
         skin = Sp.getString("skin_color", "#3f51b5");
         fabSkin = Sp.getString("fab_skin_color", "#e91e63");
+        iconskin=Sp.getString("icon_skin_color",skin);
         sh = new Shortcuts(getActivity());
         islist = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -83,6 +83,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mainActivity=(MainActivity)getActivity();
         mainActivity.toolbar.setTitle(utils.getString(getActivity(), R.string.apps));
         mainActivity.tabsSpinner.setVisibility(View.GONE);
+        mainActivity.floatingActionButton.setVisibility(View.GONE);
+        mainActivity.buttonBarFrame.setVisibility(View.GONE);
         mainActivity.supportInvalidateOptionsMenu();
         fabSkin = mainActivity.fabskin;
         vl=getListView();

File: src/main/java/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -76,9 +76,9 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         mainActivity.tabsSpinner.setVisibility(View.GONE);
         mainActivity.floatingActionButton.setVisibility(View.GONE);
+        mainActivity.buttonBarFrame.setVisibility(View.GONE);
 
         listview=(RecyclerView)rootView.findViewById(R.id.listView);
-        rootView.findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         c=getActivity();
         linearLayoutManager=new LinearLayoutManager(c);
         listview.setLayoutManager(linearLayoutManager);
@@ -188,7 +188,6 @@ public void onSaveInstanceState(Bundle b) {
     public void refresh() {
 
         new LoadList().execute();
-
     }
     public class LoadList extends AsyncTask<Void, Void, ArrayList<File>> {
 

File: src/main/java/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -345,7 +345,7 @@ public boolean onPreferenceClick(Preference preference) {
                         getActivity().getString(R.string.changelog_version_1) +
                         getActivity().getString(R.string.changelog_change_1)));
                 a.negativeText(R.string.close);
-                a.negativeColor(Color.parseColor(skin));
+                a.negativeColor(Color.parseColor(fabSkin));
                 a.positiveText(R.string.fullChangelog);
                 a.positiveColor(Color.parseColor(fabSkin));
                 a.callback(new MaterialDialog.ButtonCallback() {

File: src/main/java/com/amaze/filemanager/adapters/AppsAdapter.java
Patch:
@@ -121,6 +121,8 @@ public View getView(final int position, View convertView, ViewGroup parent) {
             view = mInflater.inflate(R.layout.rowlayout, null);
             final ViewHolder vholder = new ViewHolder();
             vholder.txtTitle = (TextView) view.findViewById(R.id.firstline);
+            if (app.theme1!=0)
+                vholder.txtTitle.setTextColor(Color.WHITE);
             vholder.imageView = (ImageView) view.findViewById(R.id.bicon);
             vholder.rl = (RelativeLayout) view.findViewById(R.id.second);
             vholder.txtDesc= (TextView) view.findViewById(R.id.date);

File: src/main/java/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -107,11 +107,11 @@ public void onRefresh() {
         m.supportInvalidateOptionsMenu();
         Animation animation1 = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
         FloatingActionButton floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab1);
-        floatingActionButton.show(true);
+        //floatingActionButton.show(true);
         floatingActionButton.setColorNormal(Color.parseColor(((MainActivity)getActivity()).fabskin));
         floatingActionButton.setColorPressed(Color.parseColor(((MainActivity)getActivity()).fabSkinPressed));
 
-        floatingActionButton.setAnimation(animation1);
+        //floatingActionButton.setAnimation(animation1);
         //getActivity().findViewById(R.id.fab).setVisibility(View.VISIBLE);
         listview.setHasFixedSize(true);
         getActivity().findViewById(R.id.fab1).setOnClickListener(new View.OnClickListener() {

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -183,7 +183,7 @@ public static int getToolbarHeight(Context context) {
     public void onDestroyView() {
         super.onDestroyView();
         mainActivity.supportInvalidateOptionsMenu();
-        mainActivity.floatingActionButton.show();
+        //mainActivity.floatingActionButton.show();
     }
     public String getSelectionColor(){
 

File: src/main/java/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -58,7 +58,7 @@ public class AppsList extends ListFragment {
     Futils utils = new Futils();
     AppsList app = this;
     AppsAdapter adapter;
-    public int uimode;
+
     SharedPreferences Sp;
     public boolean selection = false;
     public ActionMode mActionMode;
@@ -84,7 +84,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mainActivity.supportInvalidateOptionsMenu();
         vl=getListView();
             Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        uimode = Integer.parseInt(Sp.getString("uimode", "0"));
+
         ListView vl = getListView();
         Calendar calendar = Calendar.getInstance();
         int hour = calendar.get(Calendar.HOUR_OF_DAY);

File: src/main/java/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -138,15 +138,15 @@ public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequ
         findPreference("hidemode").setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {
-                String[] sort = getResources().getStringArray(R.array.uimode);
+                String[] sort = getResources().getStringArray(R.array.hidemode);
                 MaterialDialog.Builder a = new MaterialDialog.Builder(getActivity());
                 if(theme==1)a.theme(Theme.DARK);
                 a.title("Hide Mode");
                 int current = sharedPref.getInt("hidemode", 0);
                 a.items(sort).itemsCallbackSingleChoice(current, new MaterialDialog.ListCallbackSingleChoice() {
                     @Override
                     public boolean onSelection(MaterialDialog dialog, View view, int which, CharSequence text) {
-                        sharedPref.edit().putString("hidemode", "" + which).commit();
+                        sharedPref.edit().putInt("hidemode", which).commit();
                         dialog.dismiss();
                         return true;
                     }

File: src/main/java/com/amaze/filemanager/services/asynctasks/ZipExtractTask.java
Patch:
@@ -66,8 +66,7 @@ protected void onPostExecute(Void aVoid) {
 
         String cmd = "chmod 777 " + output.getPath();
         Log.d("change permissions", cmd);
-        RootTools.remount(output.getParent(), "rw");
-        RootHelper.runAndWait(cmd, true);
+        RootHelper.runAndWait(cmd, false);
         Futils futils = new Futils();
         futils.openFile(output, (MainActivity) zipViewer);
 }

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -444,9 +444,10 @@ else if (Icons.isApk(rowItem.getDesc()) || Icons.isPicture(rowItem.getDesc()))
                     if (main.uimode == 0) {
                         if (main.theme1 == 0)
                             holder.rl.setBackgroundResource(R.drawable.item_doc_grid);
-                        else
+                        else{
                             holder.rl.setBackgroundResource(R.drawable.ic_grid_card_background_dark);
-                    } else if (main.uimode == 1) {
+                            holder.rl.findViewById(R.id.icon_frame).setBackgroundColor(Color.parseColor("#303030"));
+                        }} else if (main.uimode == 1) {
                         holder.rl.setBackgroundResource(R.drawable.bg_card);
                     }
                 }

File: src/main/java/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -106,15 +106,15 @@ public void onRefresh() {
         m=(MainActivity)getActivity();
         m.supportInvalidateOptionsMenu();
         Animation animation1 = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
-        FloatingActionButton floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab);
+        FloatingActionButton floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab1);
         floatingActionButton.show(true);
         floatingActionButton.setColorNormal(Color.parseColor(((MainActivity)getActivity()).fabskin));
         floatingActionButton.setColorPressed(Color.parseColor(((MainActivity)getActivity()).fabSkinPressed));
 
         floatingActionButton.setAnimation(animation1);
         //getActivity().findViewById(R.id.fab).setVisibility(View.VISIBLE);
         listview.setHasFixedSize(true);
-        getActivity().findViewById(R.id.fab).setOnClickListener(new View.OnClickListener() {
+        getActivity().findViewById(R.id.fab1).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
 

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -347,9 +347,7 @@ public void refresh(){
         new RarHelperTask(this,current).execute(f);
     }
     public void bbar(){
-        ((TextView) mainActivity.findViewById(R.id.fullpath)).setText(zipViewer.current);
-        ((TextView) mainActivity.findViewById(R.id.pathname)).setText("");
-
+        mainActivity.updatePath(current,false);
     }
     public void createviews(ArrayList<FileHeader> zipEntries,String dir){
         zipViewer.zipAdapter = new RarAdapter(zipViewer.getActivity(), zipEntries, zipViewer);

File: src/main/java/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -87,7 +87,7 @@ public void onPageSelected(int p1) {
                     if (ma.current != null) {
                         try {
                             mainActivity.updateDrawer(ma.current);
-                            mainActivity.updatePath(ma.current);
+                            mainActivity.updatePath(ma.current,true);
 
                         } catch (Exception e) {
                             //       e.printStackTrace();5
@@ -207,7 +207,7 @@ public void updatepaths() {
         } catch (Exception e) {
             e.printStackTrace();
         }
-        mainActivity.updatePath(tabHandler.findTab(currenttab+1).getPath());
+        mainActivity.updatePath(tabHandler.findTab(currenttab+1).getPath(),true);
     }
 
     @Override

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -321,7 +321,7 @@ void refresh(){
         new ZipHelperTask(this, current).execute(f);
     }
     public void bbar(){
-        mainActivity.updatePath(current);
+        mainActivity.updatePath(current,false);
 
     }
     public void createviews(ArrayList<ZipObj> zipEntries,String dir){

File: src/main/java/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -73,7 +73,7 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.activity_db_viewer);
         toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin = Sp.getString("skin_color", "#03A9F4");
+        skin = Sp.getString("skin_color", "#3f51b5");
         String x = getStatusColor();
         skinStatusBar = Color.parseColor(x);
         getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));

File: src/main/java/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -69,7 +69,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
         Toolbar toolbar=(Toolbar)findViewById(R.id.toolbar);
-        skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#03A9F4");
+        skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#3f51b5");
 
         String x = getStatusColor();
         skinStatusBar = Color.parseColor(x);

File: src/main/java/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -95,7 +95,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.search);
         android.support.v7.widget.Toolbar toolbar = (android.support.v7.widget.Toolbar) findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);
-        skin = Sp.getString("skin_color", "#03A9F4");
+        skin = Sp.getString("skin_color", "#3f51b5");
         String x = getStatusColor();
         skinStatusBar = Color.parseColor(x);
         getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));

File: src/main/java/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -102,7 +102,7 @@ public DrawerAdapter(Context context, ArrayList<String> values, MainActivity m,
         this.m = m;
         putColors();
         color=colors.get(m.skin);
-        if(color==null){color=colors.get("#03A9F4");}
+        if(color==null){color=colors.get("#3f51b5");}
     }
     @Override
     public View getView(final int position, View convertView, ViewGroup parent) {

File: src/main/java/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -60,9 +60,9 @@ public TabSpinnerAdapter(Context context, int resource, ArrayList<String> items,
         this.tabFragment=tabFragment;
         putColors();
         final SharedPreferences sharedPreferences1 = PreferenceManager.getDefaultSharedPreferences(context);
-        skin = sharedPreferences1.getString("skin_color", "#03A9F4");
+        skin = sharedPreferences1.getString("skin_color", "#3f51b5");
         color=colors.get(skin);
-        if(color==null){color=colors.get("#03A9F4");}
+        if(color==null){color=colors.get("#3f51b5");}
     }
 
     void putColor(String x,float a,float b,float c){colors.put(x,new Float[]{a,b,c});}

File: src/main/java/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -108,8 +108,8 @@ public void onRefresh() {
         Animation animation1 = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
         FloatingActionButton floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab);
         floatingActionButton.show(true);
-        floatingActionButton.setColorNormal(Color.parseColor(((MainActivity)getActivity()).skin));
-        floatingActionButton.setColorPressed(Color.parseColor(((MainActivity)getActivity()).skin));
+        floatingActionButton.setColorNormal(Color.parseColor(((MainActivity)getActivity()).fabskin));
+        floatingActionButton.setColorPressed(Color.parseColor(((MainActivity)getActivity()).fabSkinPressed));
 
         floatingActionButton.setAnimation(animation1);
         //getActivity().findViewById(R.id.fab).setVisibility(View.VISIBLE);

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -123,7 +123,7 @@ public class Main extends android.support.v4.app.Fragment {
     public IconHolder ic;
     public MainActivity mainActivity;
     public boolean showButtonOnStart = false;
-    public String skin,fabskin, fabSkinPressed;
+    public String skin;
     public int skinselection;
     public int theme;
     public int theme1;
@@ -156,7 +156,7 @@ public void onCreate(Bundle savedInstanceState) {
         tabHandler=new TabHandler(getActivity(),null,null,1);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         savepaths=Sp.getBoolean("savepaths", true);
-        skin = Sp.getString("skin_color", "#03A9F4");
+        skin = Sp.getString("skin_color", "#3f51b5");
         sh = new Shortcuts(getActivity());
         islist = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();

File: src/main/java/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -79,7 +79,7 @@ public void onCreate(Bundle savedInstanceState) {
         addPreferencesFromResource(R.xml.preferences);
 
         sharedPref = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        skin = sharedPref.getString("skin_color", "#03A9F4");
+        skin = sharedPref.getString("skin_color", "#3f51b5");
         Calendar calendar = Calendar.getInstance();
         int hour = calendar.get(Calendar.HOUR_OF_DAY);
 

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -154,7 +154,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showSize = Sp.getBoolean("showFileSize", false);
         showLastModified = Sp.getBoolean("showLastModified", true);
         year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
-        skin = Sp.getString("skin_color", "#03A9F4");
+        skin = Sp.getString("skin_color", "#3f51b5");
         mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 
         //listView.setDivider(null);

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -147,7 +147,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
             showSize = Sp.getBoolean("showFileSize", false);
             showLastModified = Sp.getBoolean("showLastModified", true);
             year = ("" + calendar.get(Calendar.YEAR)).substring(2, 4);
-            skin = Sp.getString("skin_color", "#03A9F4");
+            skin = Sp.getString("skin_color", "#3f51b5");
             mainActivity.findViewById(R.id.buttonbarframe).setBackgroundColor(Color.parseColor(skin));
 
             String x = getSelectionColor();

File: src/main/java/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -450,7 +450,6 @@ public void loadlist(final File f, boolean back) {
         }
 
         listView.setAnimation(animation);
-        //mainActivity.updatePath(f.getPath());
     }
 
     @SuppressWarnings("unchecked")

File: src/fdroid/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -428,7 +428,7 @@ else if(file.canExecute())
             adapter.toggleChecked(select);
         }
         if (theme1 == 1) {
-            mDrawerList.setBackgroundResource(android.R.drawable.screen_background_dark);
+            mDrawerList.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         }
         mDrawerList.setOnItemClickListener(new DrawerItemClickListener());
         mDrawerList.setDivider(null);

File: src/main/java/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -133,7 +133,8 @@ public HeaderViewHolder(View view) {
     @Override
     public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
-        if(zipViewer.mainActivity.theme1==1)view.setBackgroundResource(android.R.color.black);
+        if(zipViewer.mainActivity.theme1==1)
+            view.setBackgroundResource(R.color.holo_dark_background);
         HeaderViewHolder holder = new HeaderViewHolder(view);
         return holder;
     }

File: src/main/java/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -480,7 +480,8 @@ public HeaderViewHolder(View view) {
     @Override
     public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
-        if(main.theme1==1)view.setBackgroundResource(android.R.color.black);
+        if(main.theme1==1)
+            view.setBackgroundResource(R.color.holo_dark_background);
         HeaderViewHolder holder = new HeaderViewHolder(view);
         if (main.theme1==0)holder.ext.setTextColor(Color.parseColor("#8A000000"));
         else holder.ext.setTextColor(Color.parseColor("#B3ffffff"));

File: src/main/java/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -301,7 +301,8 @@ public HeaderViewHolder(View view) {
     @Override
     public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
-        if(zipViewer.mainActivity.theme1==1)view.setBackgroundResource(android.R.color.black);
+        if(zipViewer.mainActivity.theme1==1)
+            view.setBackgroundResource(R.color.holo_dark_background);
         HeaderViewHolder holder = new HeaderViewHolder(view);
         return holder;
     }

File: src/main/java/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -142,7 +142,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         mLayoutManager=new LinearLayoutManager(getActivity());
         listView.setLayoutManager(mLayoutManager);
         if (mainActivity.theme1 == 1)
-            listView.setBackgroundColor(Color.parseColor("#000000"));
+            rootView.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
         else
         if (uimode==0) {
 

File: src/main/java/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -135,7 +135,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
             mainActivity.supportInvalidateOptionsMenu();
             if (mainActivity.theme1 == 1)
-                listView.setBackgroundColor(Color.parseColor("#000000"));
+                rootView.setBackgroundColor(getResources().getColor(R.color.holo_dark_background));
             else
                 if (uimode==0) {
 

File: src/play/java/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -53,6 +53,7 @@
 import android.support.v4.content.LocalBroadcastManager;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.Toolbar;
 import android.text.TextUtils;
 import android.transition.Explode;
@@ -139,7 +140,7 @@
 import java.util.regex.Pattern;
 
 
-public class MainActivity extends ActionBarActivity implements
+public class MainActivity extends AppCompatActivity implements
         ConnectionCallbacks, OnConnectionFailedListener, GoogleApiClient.ConnectionCallbacks,
         GoogleApiClient.OnConnectionFailedListener {
     public Integer select;

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -88,7 +88,6 @@ public class ZipViewer extends Fragment {
     public SwipeRefreshLayout swipeRefreshLayout;
     StickyRecyclerHeadersDecoration headersDecor;
     LinearLayoutManager mLayoutManager;
-    GridLayoutManager mLayoutManagerGrid;
     DividerItemDecoration dividerItemDecoration;
     public int uimode;
 
@@ -139,8 +138,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
             listView.setVisibility(View.VISIBLE);
             mLayoutManager=new LinearLayoutManager(getActivity());
-            int columns=Integer.parseInt(Sp.getString("columns","3"));
-            mLayoutManagerGrid=new GridLayoutManager(getActivity(),columns);
                 listView.setLayoutManager(mLayoutManager);
 
             mainActivity.supportInvalidateOptionsMenu();

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -169,14 +169,13 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         mainActivity=(MainActivity)getActivity();
-        no=getArguments().getInt("no",1);
+        no=getArguments().getInt("no", 1);
         home=getArguments().getString("home");
         current=getArguments().getString("lastpath");
         tabHandler=new TabHandler(getActivity(),null,null,1);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         savepaths=Sp.getBoolean("savepaths", true);
         skin = Sp.getString("skin_color", "#03A9F4");
-        mainActivity.initiatebbar(ma.current, ma);
         sh = new Shortcuts(getActivity());
         islist = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();
@@ -241,6 +240,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(false);
+        mainActivity = (MainActivity) getActivity();
         utils = new Futils();
         String x=getSelectionColor();
         skinselection=Color.parseColor(x);
@@ -265,7 +265,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         if(savepaths)
             f=new File(current);
         else f=new File(home);
-        //mainActivity.initiatebbar(current, this);
+        mainActivity.initiatebbar(current, this);
 
         scroll = (HorizontalScrollView) rootView.findViewById(R.id.scroll);
         scroll1 = (HorizontalScrollView) rootView.findViewById(R.id.scroll1);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -176,6 +176,7 @@ public void onCreate(Bundle savedInstanceState) {
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         savepaths=Sp.getBoolean("savepaths", true);
         skin = Sp.getString("skin_color", "#03A9F4");
+        mainActivity.initiatebbar(ma.current, ma);
         sh = new Shortcuts(getActivity());
         islist = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();
@@ -468,6 +469,7 @@ public void loadlist(final File f, boolean back) {
         }
 
         listView.setAnimation(animation);
+        mainActivity.updatePath(f.getPath());
 
     }
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -319,7 +319,7 @@ public void onCreate(Bundle savedInstanceState) {
         skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#03A9F4");
         getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
 
-        skinStatusBar = Color.parseColor(getStatusColor());
+        skinStatusBar = Color.parseColor(getStatusColor(skin));
 
         mDrawerLinear = (ScrimInsetsFrameLayout) findViewById(R.id.left_drawer);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
@@ -1132,7 +1132,7 @@ protected void onDestroy() {
         Sp.edit().putBoolean("remember", true).apply();
         unregisterReceiver(mNotificationReceiver);
     }
-    public String getStatusColor() {
+    public String getStatusColor(String reqSkin) {
 
         String[] colors = new String[]{
                 "#F44336","#D32F2F",
@@ -1154,7 +1154,7 @@ public String getStatusColor() {
                 "#607d8b","#455A64",
                 "#004d40","#002620"
         };
-        return colors[ Arrays.asList(colors).indexOf(skin)+1];
+        return colors[ Arrays.asList(colors).indexOf(reqSkin)+1];
     }
 
     class CheckForFiles extends AsyncTask<ArrayList<String>, String, ArrayList<String>> {

File: src/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -261,6 +261,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 return false;
             }
         });
+
         final Preference fabpreference = (Preference) findPreference("fab_skin");
         fabpreference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -196,6 +196,8 @@ public void onCreate(Bundle savedInstanceState) {
             e.printStackTrace();
         }
 
+        PreferenceManager.setDefaultValues(this, R.xml.preferences, false);
+
         Sp = PreferenceManager.getDefaultSharedPreferences(this);
 
         drawerHeaderView = getLayoutInflater().inflate(R.layout.drawerheader, null);

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -56,6 +56,7 @@
 import com.amaze.filemanager.services.asynctasks.ZipHelperTask;
 import com.amaze.filemanager.utils.DividerItemDecoration;
 import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.SpacesItemDecoration;
 import com.amaze.filemanager.utils.ZipObj;
 import com.melnykov.fab.FloatingActionButton;
 import com.timehop.stickyheadersrecyclerview.StickyRecyclerHeadersDecoration;

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -659,7 +659,7 @@ public void goToMain(String path){
         toolbar.setTitle(null);
         tabsSpinner.setVisibility(View.VISIBLE);
         if(openzip && zippath!=null)
-        {if(zippath.endsWith(".zip"))openZip(zippath);else{openRar(zippath);}zippath=null;}
+        {if(zippath.endsWith(".zip") || zippath.endsWith(".apk"))openZip(zippath);else{openRar(zippath);}zippath=null;}
 
     }
     public void selectItem(final int i) {
@@ -1420,7 +1420,7 @@ public void onConnected(Bundle bundle) {
             Log.d("G+", stringBuilder.toString());
 
             Person.Cover.CoverPhoto personCover = currentPerson.getCover().getCoverPhoto();
-
+            ((TextView)drawerHeaderLayout.findViewById(R.id.account_header_drawer_name)).setText(currentPerson.getDisplayName());
             // setting cover pic
             ImageLoader.getInstance().loadImage(personCover.getUrl(), displayImageOptions, new SimpleImageLoadingListener() {
                 @Override

File: src/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -485,6 +485,8 @@ public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
         if(main.theme1==1)view.setBackgroundResource(android.R.color.black);
         HeaderViewHolder holder = new HeaderViewHolder(view);
+        if (main.theme1==0)holder.ext.setTextColor(Color.parseColor("#8A000000"));
+        else holder.ext.setTextColor(Color.parseColor("#B3ffffff"));
         return holder;
     }
 

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -99,6 +99,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         int hour = calendar.get(Calendar.HOUR_OF_DAY);
         int theme=Integer.parseInt(Sp.getString("theme","0"));
         theme1 = theme;
+        vl.setDivider(null);
         if (theme == 2) {
             if(hour<=6 || hour>=18) {
                 theme1 = 1;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -201,7 +201,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         rootView = inflater.inflate(R.layout.main_frag, container, false);
         listView = (android.support.v7.widget.RecyclerView) rootView.findViewById(R.id.listView);
         floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab);
-        if (showButtonOnStart) floatingActionButton.setVisibility(View.VISIBLE);
+        if (showButtonOnStart)
+            floatingActionButton.setVisibility(View.VISIBLE);
         floatingActionButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {

File: src/com/amaze/filemanager/adapters/Recycleradapter.java
Patch:
@@ -483,6 +483,7 @@ public HeaderViewHolder(View view) {
     @Override
     public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
+        if(main.theme1==1)view.setBackgroundResource(android.R.color.black);
         HeaderViewHolder holder = new HeaderViewHolder(view);
         return holder;
     }

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -301,6 +301,7 @@ public HeaderViewHolder(View view) {
     @Override
     public RecyclerView.ViewHolder onCreateHeaderViewHolder(ViewGroup viewGroup) {
         View  view = mInflater.inflate(R.layout.listheader, viewGroup, false);
+        if(zipViewer.mainActivity.theme1==1)view.setBackgroundResource(android.R.color.black);
         HeaderViewHolder holder = new HeaderViewHolder(view);
         return holder;
     }

File: src/com/amaze/filemanager/services/asynctasks/LoadSearchList.java
Patch:
@@ -27,7 +27,6 @@
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
-import com.amaze.filemanager.adapters.MyAdapter;
 import com.amaze.filemanager.adapters.Recycleradapter;
 import com.amaze.filemanager.fragments.Main;
 import com.amaze.filemanager.utils.FileListSorter;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -152,6 +152,7 @@ public class Main extends android.support.v4.app.Fragment {
     GridLayoutManager mLayoutManagerGrid;
     SwipeRefreshLayout mSwipeRefreshLayout;
     boolean addheader=true;
+    StickyRecyclerHeadersDecoration headersDecor;
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -518,8 +519,9 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
 
                         listView.setAdapter(adapter);
 
+                    if(!addheader && aBoolean){listView.removeItemDecoration(headersDecor);addheader=true;}
                     if(addheader && aBoolean){
-                    StickyRecyclerHeadersDecoration headersDecor = new StickyRecyclerHeadersDecoration(adapter);
+                     headersDecor = new StickyRecyclerHeadersDecoration(adapter);
                     listView.addItemDecoration(headersDecor);addheader=false;}
                     results = false;
                     current = f.getPath();

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -367,7 +367,7 @@ public void onSaveInstanceState(Bundle outState) {
                 index = (mLayoutManager).findFirstVisibleItemPosition();
                 vi = listView.getChildAt(0);
             } else {
-                index =  (mLayoutManager).findFirstVisibleItemPosition();
+                index =  (mLayoutManagerGrid).findFirstVisibleItemPosition();
                 vi = listView.getChildAt(0);
             }
             int top = (vi == null) ? 0 : vi.getTop();

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -87,7 +87,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             mainActivity.tabsSpinner.setVisibility(View.GONE);
             listview=(ListView)rootView.findViewById(R.id.listView);
             rootView.findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
-            rootView.findViewById(R.id.activity_main_swipe_refresh_layout1).setVisibility(View.GONE);
             c=getActivity();
         return rootView;}
     @Override

File: src/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -122,7 +122,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         s = getArguments().getString("path");
         f = new File(s);
-        rootView.findViewById(R.id.activity_main_swipe_refresh_layout1).setVisibility(View.GONE);
         listView.setVisibility(View.VISIBLE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
 

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -83,7 +83,6 @@ public class ZipViewer extends Fragment {
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         rootView = inflater.inflate(R.layout.main_frag, container, false);
         listView = (ListView) rootView.findViewById(R.id.listView);
-        rootView.findViewById(R.id.activity_main_swipe_refresh_layout1).setVisibility(View.GONE);
         swipeRefreshLayout=(SwipeRefreshLayout)rootView.findViewById(R.id.activity_main_swipe_refresh_layout);
         swipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
             @Override
@@ -113,7 +112,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
             super.onActivityCreated(savedInstanceState);
             s = getArguments().getString("path");
             f = new File(s);
-            rootView.findViewById(R.id.gridView).setVisibility(View.GONE);
             listView.setVisibility(View.VISIBLE);
             Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
             mainActivity = (MainActivity) getActivity();

File: src/com/amaze/filemanager/services/asynctasks/LoadSearchList.java
Patch:
@@ -107,9 +107,7 @@ protected void onPostExecute(ArrayList<Layoutelements> bitmap) {
                 ma.adapter = new Recycleradapter(ma,
                         bitmap, ma.getActivity());
                 try {
-                    //ListView lv = (ListView) ma.listView.findViewById(R.id.listView);
-             if(ma.aBoolean)       ma.listView.setAdapter(ma.adapter);
-                    else //ma.gridView.setAdapter(ma.adapter);
+                  ma.listView.setAdapter(ma.adapter);
                     ma.results = true;
                     try {
                         Intent i = new Intent("updatepager");

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -160,7 +160,7 @@ private boolean isSelfDefault(File f, Context c){
         String s="";
         ResolveInfo rii = c.getPackageManager().resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
         if (rii !=  null && rii.activityInfo != null) s = rii.activityInfo.packageName;
-        if (s=="com.amaze.filemanager" || rii==null) return true;
+        if (s.equals("com.amaze.filemanager") || rii==null) return true;
         else return false;
     }
 

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -160,7 +160,7 @@ private boolean isSelfDefault(File f, Context c){
         String s="";
         ResolveInfo rii = c.getPackageManager().resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY);
         if (rii !=  null && rii.activityInfo != null) s = rii.activityInfo.packageName;
-        if (s=="com.amaze.filemanager" || rii==null) return true;
+        if (s.equals("com.amaze.filemanager") || rii==null) return true;
         else return false;
     }
 

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -306,7 +306,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             utils.showProps(mFile, c, theme1);
             return true;
         } else if (item.getItemId() == R.id.openwith) {
-            utils.openunknown(mFile, c);
+            utils.openunknown(mFile, c, false);
         }
         return super.onOptionsItemSelected(item);
     }
@@ -360,4 +360,4 @@ private String getStatusColor() {
         };
         return colors[ Arrays.asList(colors).indexOf(skin)+1];
     }
-}
\ No newline at end of file
+}

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1026,10 +1026,10 @@ public void onNegative(MaterialDialog materialDialog) {
                     return true;
                 case R.id.openwith:
                     if (results)utils.openunknown(new File(slist.get(
-                            (plist.get(0))).getDesc()), getActivity());
+                            (plist.get(0))).getDesc()), getActivity(), true);
                     else
                         utils.openunknown(new File(list.get(
-                                (plist.get(0))).getDesc()), getActivity());
+                                (plist.get(0))).getDesc()), getActivity(), true);
 
                     return true;
                 case R.id.permissions:
@@ -1545,4 +1545,4 @@ public void onClick(View view) {
         });
 
     }
-}
\ No newline at end of file
+}

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -306,7 +306,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             utils.showProps(mFile, c, theme1);
             return true;
         } else if (item.getItemId() == R.id.openwith) {
-            utils.openunknown(mFile, c);
+            utils.openunknown(mFile, c, false);
         }
         return super.onOptionsItemSelected(item);
     }
@@ -360,4 +360,4 @@ private String getStatusColor() {
         };
         return colors[ Arrays.asList(colors).indexOf(skin)+1];
     }
-}
\ No newline at end of file
+}

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1026,10 +1026,10 @@ public void onNegative(MaterialDialog materialDialog) {
                     return true;
                 case R.id.openwith:
                     if (results)utils.openunknown(new File(slist.get(
-                            (plist.get(0))).getDesc()), getActivity());
+                            (plist.get(0))).getDesc()), getActivity(), true);
                     else
                         utils.openunknown(new File(list.get(
-                                (plist.get(0))).getDesc()), getActivity());
+                                (plist.get(0))).getDesc()), getActivity(), true);
 
                     return true;
                 case R.id.permissions:
@@ -1545,4 +1545,4 @@ public void onClick(View view) {
         });
 
     }
-}
\ No newline at end of file
+}

File: src/com/amaze/filemanager/utils/RootHelper.java
Patch:
@@ -152,9 +152,9 @@ public static ArrayList<String[]> getFilesList(boolean showSize,String path,bool
                     if(showSize)size=""+getCount(x);
                     }else if(showSize)size=""+x.length();
                     if(showHidden){
-                        files.add(new String[]{x.getPath(),"",parseFilePermission(x),k,futils.getdate(x.lastModified(),"MMM dd, yyyy","15"),size});
+                        files.add(new String[]{x.getPath(),"",parseFilePermission(x),k,x.lastModified()+"",size});
                     }
-                    else{if(!x.isHidden()){files.add(new String[]{x.getPath(),"",parseFilePermission(x),k,futils.getdate(x.lastModified(),"MMM dd, yyyy","15"),size});}}
+                    else{if(!x.isHidden()){files.add(new String[]{x.getPath(),"",parseFilePermission(x),k,x.lastModified()+"",size});}}
                 }
             }}catch (Exception e){}
 

File: src/com/amaze/filemanager/utils/FileListSorter.java
Patch:
@@ -72,7 +72,7 @@ public int compare(Layoutelements file1, Layoutelements file2) {
         if (sort == 0) {
             return asc * file1.getTitle().compareToIgnoreCase(file2.getTitle());
         } else if (sort == 1) {
-            return asc * Long.valueOf(f1.lastModified()).compareTo(Long.valueOf(f2.lastModified()));
+            return asc * Long.valueOf(file1.getDate1()).compareTo(Long.valueOf(file2.getDate1()));
         } else if (sort == 2) {
             if (f1.isFile() && f2.isFile()) {
                 return asc * Long.valueOf(f1.length()).compareTo(Long.valueOf(f2.length()));

File: src/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -91,7 +91,7 @@ public void onCreate(Bundle savedInstanceState) {
             SystemBarTintManager tintManager = new SystemBarTintManager(this);
             tintManager.setStatusBarTintEnabled(true);
             tintManager.setStatusBarTintColor(Color.parseColor(skin));
-            FrameLayout.MarginLayoutParams p = (ViewGroup.MarginLayoutParams) findViewById(R.id.texteditor).getLayoutParams();
+            FrameLayout.MarginLayoutParams p = (ViewGroup.MarginLayoutParams) findViewById(R.id.parentdb).getLayoutParams();
             SystemBarTintManager.SystemBarConfig config = tintManager.getConfig();
             p.setMargins(0, config.getStatusBarHeight(), 0, 0);
         }else if(Build.VERSION.SDK_INT>=21){

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -112,7 +112,7 @@ public void shareFiles(ArrayList<File> a,Context c){
         ArrayList<Uri> uris=new ArrayList<Uri>();
         if(a.size()==1){
             String mime=MimeTypes.getMimeType(a.get(0));
-            if(mime!=null && mime.equals("application/vnd.android.package-archive"))mime="*/*";
+            if(!mime.equals(null) && mime.equals("application/vnd.android.package-archive"))mime="*/*";
             uris.add(Uri.fromFile(a.get(0)));
             sendIntent.setType(mime);
         }else{boolean b=true;

File: src/com/amaze/filemanager/adapters/BooksAdapter.java
Patch:
@@ -20,6 +20,7 @@
 package com.amaze.filemanager.adapters;
 
 import android.app.Activity;
+import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -37,12 +38,12 @@
 import java.util.ArrayList;
 public class BooksAdapter extends ArrayAdapter<File> {
     Shortcuts s;
-    Activity context;
+    Context context;
     public ArrayList<File> items;
     BookmarksManager b;
     ///	public HashMap<Integer, Boolean> myChecked = new HashMap<Integer, Boolean>();
 
-    public BooksAdapter(Activity context, int resourceId, ArrayList<File> items, BookmarksManager b) {
+    public BooksAdapter(Context context, int resourceId, ArrayList<File> items, BookmarksManager b) {
         super(context, resourceId, items);
         this.context = context;
         this.items = items;

File: src/com/amaze/filemanager/utils/Shortcuts.java
Patch:
@@ -136,7 +136,7 @@ public boolean isShortcut(File f) throws IOException, ParserConfigurationExcepti
         return b;
     }
 
-    public void removeS(File f1, Activity s) throws IOException, SAXException, ParserConfigurationException, TransformerException {
+    public void removeS(File f1, Context s) throws IOException, SAXException, ParserConfigurationException, TransformerException {
         //	ArrayList<File> f=new ArrayList<File>();
         File g = new File(path);
         DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();

File: src/com/amaze/filemanager/utils/Icons.java
Patch:
@@ -173,9 +173,6 @@ private static void add(String mimeType, int resId) {
         add("application/msword", icon);
         add("application/vnd.openxmlformats-officedocument.wordprocessingml.document", icon);
         add("application/vnd.openxmlformats-officedocument.wordprocessingml.template", icon);
-
-        // Text
-        icon = R.drawable.ic_doc_text_am;
         add("application/vnd.oasis.opendocument.text", icon);
         add("application/vnd.oasis.opendocument.text-master", icon);
         add("application/vnd.oasis.opendocument.text-template", icon);
@@ -187,6 +184,9 @@ private static void add(String mimeType, int resId) {
         add("application/vnd.sun.xml.writer.template", icon);
         add("application/x-abiword", icon);
         add("application/x-kword", icon);
+
+        // Text
+        icon = R.drawable.ic_doc_text_am;
         add("text/plain", icon);
 
         // Video

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -74,7 +74,7 @@ public class AppsList extends ListFragment {
     ListView vl;
     public IconHolder ic;
     ArrayList<Layoutelements> a = new ArrayList<Layoutelements>();
-    int theme1;
+    public int theme1;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {

File: src/com/amaze/filemanager/services/asynctasks/RarHelperTask.java
Patch:
@@ -47,22 +47,19 @@ protected ArrayList<FileHeader> doInBackground(File... params) {
             }
             if(dir==null || dir.trim().length()==0 || dir.equals("")){
 
-                System.out.println("fine here");
             for(FileHeader header:zipViewer.wholelist){
                 String name=header.getFileNameString();
 
                 if(!name.contains("\\")){
                     elements.add(header);
 
-                    System.out.println(name);
                 }
             }}else{
                 for(FileHeader header:zipViewer.wholelist){
                     String name=header.getFileNameString();
                     if(name.substring(0,name.lastIndexOf("\\")).equals(dir)){
                         elements.add(header);
                     }
-                    Log.d("Header", name);
                 }
             }
         }catch (Exception e){}

File: src/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -386,7 +386,9 @@ public boolean onPreferenceClick(Preference preference) {
                 MaterialDialog.Builder a = new MaterialDialog.Builder(getActivity());
                 if(theme==1)a.theme(Theme.DARK);
                 a.title(R.string.changelog);
-                a.content(Html.fromHtml(getActivity().getString(R.string.changelog_version_4) +
+                a.content(Html.fromHtml(getActivity().getString(R.string.changelog_version_5) +
+                        getActivity().getString(R.string.changelog_change_5) +
+                        getActivity().getString(R.string.changelog_version_4) +
                         getActivity().getString(R.string.changelog_change_4) +
                         getActivity().getString(R.string.changelog_version_3) +
                         getActivity().getString(R.string.changelog_change_3) +

File: src/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -258,7 +258,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                                 archive.extractFile(elements.get(i), fileOutputStream);
                             }else{
                                     String name=elements.get(i).getFileNameString();
-                                    for(FileHeader v:wholelist){
+                                    for(FileHeader v:archive.getFileHeaders()){
                                         if(v.getFileNameString().contains(name)){
                                                 File f2=new File(f.getParent() +
                                                         "/" + v.getFileNameString().trim().replaceAll("\\\\","/"));

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -334,7 +334,7 @@ else if (Icons.isArchive(rowItem.getDesc()))
                             gradientDrawable.setColor(Color.parseColor("#f9a825"));
                         else if (Icons.isgeneric(rowItem.getDesc()))
                         {  gradientDrawable.setColor(Color.parseColor("#9e9e9e"));
-                           String ext=MimeTypes.getExtension(rowItem.getDesc());
+                           String ext=MimeTypes.getExtension(new File(rowItem.getDesc()).getName());
                                 if(ext!=null && ext.trim().length()!=0) {
                                     holder.ext.setText(ext);
                                     holder.imageView.setImageDrawable(null);

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -533,7 +533,7 @@ public void openFile(final File f, final MainActivity m) {
             Intent i = new Intent(m, TextReader.class);
             i.putExtra("path", f.getPath());
             m.startActivity(i);
-        } else if (f.getName().toLowerCase().endsWith(".zip") || f.getName().toLowerCase().endsWith(".jar") || f.getName().toLowerCase().endsWith(".apk") || f.getName().toLowerCase().endsWith(".rar")|| f.getName().toLowerCase().endsWith(".tar")|| f.getName().toLowerCase().endsWith(".tar.gz")) {
+        } else if (f.getName().toLowerCase().endsWith(".zip") || f.getName().toLowerCase().endsWith(".jar") || f.getName().toLowerCase().endsWith(".rar")|| f.getName().toLowerCase().endsWith(".tar")|| f.getName().toLowerCase().endsWith(".tar.gz")) {
             showArchiveDialog(f, m);
 
         }else if(f.getName().toLowerCase().endsWith(".apk")){

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -90,7 +90,8 @@ public void onCreate(Bundle savedInstanceState) {
             boolean colourednavigation=Sp.getBoolean("colorednavigation",true);
             Window window =getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            window.setStatusBarColor(Color.parseColor(getStatusColor()));
             if(colourednavigation)
                 window.setNavigationBarColor(Color.parseColor(getStatusColor()));
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -507,6 +507,7 @@ public void onBackPressed() {
                         if(zipViewer.mActionMode==null)
                         {if (zipViewer.cangoBack()) {
 
+                                zipViewer.elements.clear();
                                 zipViewer.goBack();
                             } else {
                                 FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();

File: src/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -40,7 +40,6 @@ public class RarAdapter extends ArrayAdapter<ZipObj> {
     Drawable folder, unknown;
     ArrayList<FileHeader> enter;
     RarViewer zipViewer;
-    private int HEADER_INDEX = 0;
     private SparseBooleanArray myChecked = new SparseBooleanArray();
     public RarAdapter(Context c, int id, ArrayList<FileHeader> enter, RarViewer zipViewer) {
         super(c, id);
@@ -110,6 +109,7 @@ private class ViewHolder {
     public View getView(final int position, View convertView, ViewGroup parent) {
 
         final FileHeader rowItem = enter.get(position);
+        zipViewer.elements.add(position, headerRequired(rowItem));
         View view = convertView;
         final int p = position;
         if (convertView == null) {
@@ -216,10 +216,9 @@ public void onClick(View p1) {
                         toggleChecked(p);
                     else {
 
-                        HEADER_INDEX += position;
-                        Log.d("INDEX", "Index at adapter" + HEADER_INDEX);
                         if (rowItem.isDirectory()) {
 
+                            zipViewer.elements.clear();
                             new RarHelperTask(zipViewer,  rowItem.getFileNameString()).execute(zipViewer.f);
 
                         }else {

File: src/com/amaze/filemanager/services/asynctasks/RarHelperTask.java
Patch:
@@ -71,7 +71,7 @@ protected ArrayList<FileHeader> doInBackground(File... params) {
     @Override
     protected void onPostExecute (ArrayList < FileHeader > zipEntries) {
         super.onPostExecute(zipEntries);
-        zipViewer.elements=zipEntries;
+        //zipViewer.elements=zipEntries;
         Collections.sort(zipViewer.elements,new FileListSorter());
     zipViewer.createviews(zipEntries,dir);}
     class FileListSorter implements Comparator<FileHeader> {

File: src/com/amaze/filemanager/fragments/RarViewer.java
Patch:
@@ -280,7 +280,7 @@ public void onResume() {
         floatingActionButton.hide(true);
         if (files.size()==1) {
 
-            new DeleteTask(getActivity().getContentResolver(),  getActivity()).execute(files);
+            new DeleteTask(getActivity().getContentResolver(),  getActivity(), this).execute(files);
         }
     }
     public boolean cangoBack(){

File: src/com/amaze/filemanager/activities/DbViewer.java
Patch:
@@ -98,8 +98,7 @@ public void onCreate(Bundle savedInstanceState) {
 
             Window window =getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
-            window.setStatusBarColor(Color.parseColor(getStatusColor()));
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
 
         }
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -128,7 +128,7 @@ public class MainActivity extends ActionBarActivity{
     private static final Pattern DIR_SEPARATOR = Pattern.compile("/");
     public ArrayList<String> list;
     public int theme1;
-    boolean rootmode,aBoolean,openzip=false;
+    public boolean rootmode,aBoolean,openzip=false;
     String zippath;
     public Spinner tabsSpinner;
     public boolean mRingtonePickerIntent = false,restart=false,colourednavigation=false;

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -90,8 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
             boolean colourednavigation=Sp.getBoolean("colorednavigation",true);
             Window window =getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
-            window.setStatusBarColor(Color.parseColor(getStatusColor()));
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             if(colourednavigation)
                 window.setNavigationBarColor(Color.parseColor(getStatusColor()));
 

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -116,8 +116,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
             Window window =getWindow();
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
-            window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
-            window.setStatusBarColor(Color.parseColor(getStatusColor()));
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
 
         }
         mInput = (EditText) findViewById(R.id.fname);

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -263,7 +263,8 @@ public void onClick(View p1) {
 
                     new ZipHelperTask(zipViewer,  stringBuilder.toString()).execute(zipViewer.f);
 
-                } else {String x=rowItem.getName().substring(rowItem.getName().lastIndexOf("/")+1);
+                } else {
+                            String x=rowItem.getName().substring(rowItem.getName().lastIndexOf("/")+1);
                     File file = new File(getContext().getCacheDir().getAbsolutePath() + "/" + x);
                     zipViewer.files.clear();
                     zipViewer.files.add(0, file);

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -84,7 +84,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             mainActivity.tabsSpinner.setVisibility(View.GONE);
             listview=(ListView)rootView.findViewById(R.id.listView);
             rootView.findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
-            rootView.findViewById(R.id.gridView).setVisibility(View.GONE);
+            rootView.findViewById(R.id.activity_main_swipe_refresh_layout1).setVisibility(View.GONE);
         return rootView;}
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {

File: src/com/amaze/filemanager/fragments/DbViewerFragment.java
Patch:
@@ -131,7 +131,7 @@ private ArrayList<String[]> getDbTableDetails(Cursor c) {
                         // #FIELD_TYPE_BLOB
                         /*byte[] blob = c.getBlob(i);
                         blobString = new String(blob);*/
-                        temp[i] = "(data)";
+                        temp[i] = "(BLOB)";
                         break;
                 }
             }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -506,7 +506,7 @@ public void onBackPressed() {
                                 fragmentTransaction.commit();
                                 supportInvalidateOptionsMenu();
 
-                            }}else {zipViewer.mActionMode.finish();}}else if(name.contains("Process")){exit();}else goToMain("");
+                            }}else {zipViewer.mActionMode.finish();}}else if(name.contains("Process")){finish();}else goToMain("");
                 } catch (ClassCastException e) {
                     goToMain("");
                 }
@@ -1111,7 +1111,7 @@ protected ArrayList<String> doInBackground(ArrayList<String>... params) {
 
                 File f = new File(path);
 
-                for (String k1[] : RootHelper.getFilesList(f.getPath(),rootmode,true)) {
+                for (String k1[] : RootHelper.getFilesList(f.getPath(),rootmode,true,false)) {
                     File k=new File(k1[0]);
                     for (String j : ab) {
 

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -351,7 +351,7 @@ else if (Icons.isgeneric(rowItem.getDesc()))
             if (main.showPermissions)
                 holder.perm.setText(rowItem.getPermissions());
             if (main.showLastModified)
-                holder.date.setText(rowItem.getDate("MMM dd, yyyy",main.year));
+                holder.date.setText(rowItem.getDate());
             String size=rowItem.getSize();
 
             if(size.equals(main.goback)){
@@ -474,7 +474,7 @@ else if (Icons.isApk((rowItem.getDesc()))) {
                 }
             }
             if(main.showLastModified)
-                holder.date.setText(rowItem.getDate("MMM dd, yyyy",main.year));
+                holder.date.setText(rowItem.getDate());
             if(rowItem.getSize().equals(main.goback)){
                 holder.date.setText(rowItem.getSize());
                 holder.txtDesc.setText("");

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -258,7 +258,7 @@ protected ArrayList<Layoutelements> doInBackground(Void[] p1) {
                 }
                 Collections.sort(c, new AppsSorter(p));
                 for (ApplicationInfo object:c)
-                a.add(new Layoutelements(getActivity().getResources().getDrawable(R.drawable.ic_doc_apk_grid), object.loadLabel(getActivity().getPackageManager()).toString(), object.publicSourceDir,"","","","",false));
+                a.add(new Layoutelements(getActivity().getResources().getDrawable(R.drawable.ic_doc_apk_grid), object.loadLabel(getActivity().getPackageManager()).toString(), object.publicSourceDir,"","","","",false,""));
 
             } catch (Exception e) {
                 //Toast.makeText(getActivity(), "" + e, Toast.LENGTH_LONG).show();

File: src/com/amaze/filemanager/services/SearchService.java
Patch:
@@ -85,7 +85,7 @@ public void onReceive(Context context, Intent intent) {
     public void search(File file, String text) {
         if (file.isDirectory()) {
 
-            ArrayList<String[]> f= RootHelper.getFilesList(file.getPath(), rootMode, showHidden);
+            ArrayList<String[]> f= RootHelper.getFilesList(file.getPath(), rootMode, showHidden,false);
             // do you have permission to read this directory?
             if(run)
             for (String[] x : f) {

File: src/com/amaze/filemanager/fragments/DbViewerFragment.java
Patch:
@@ -69,11 +69,11 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
 
         int j = 0;
         for (String[] strings : contentList) {
-            Log.d("column number", "  " + j++);
+          //  Log.d("column number", "  " + j++);
             tableRow1 = new TableRow(getActivity());
             tableRow1.setLayoutParams(matchParent);
             for (int i=0; i<strings.length; i++) {
-                Log.d("column data", strings[i]);
+                //Log.d("column data", strings[i]);
                 textView = new TextView(getActivity());
                 textView.setText(strings[i]);
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -251,7 +251,7 @@ public void onCreate(Bundle savedInstanceState) {
         mDrawerList = (ListView) findViewById(R.id.menu_drawer);
         View settingsbutton = findViewById(R.id.settingsbutton);
         if (theme1 == 1) {
-            settingsbutton.setBackgroundResource(android.R.color.black);
+            settingsbutton.setBackgroundResource(R.drawable.safr_ripple_black);
             ((ImageView) settingsbutton.findViewById(R.id.settingicon)).setImageResource(R.drawable.ic_settings_white_48dp);
         }settingsbutton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -269,7 +269,7 @@ public void onClick(View v) {
         });
         View appbutton = findViewById(R.id.appbutton);
         if (theme1 == 1)
-        {appbutton.setBackgroundResource(android.R.color.black);
+        {appbutton.setBackgroundResource(R.drawable.safr_ripple_black);
             ((ImageView) appbutton.findViewById(R.id.appicon)).setImageResource(R.drawable.ic_action_view_as_grid);
     }appbutton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -286,7 +286,7 @@ public void onClick(View v) {
         View bookbutton=findViewById(R.id.bookbutton);
         if(theme1==1) {
             ((ImageView) bookbutton.findViewById(R.id.bookicon)).setImageResource(R.drawable.ic_action_not_important);
-            bookbutton.setBackgroundResource(android.R.color.black);
+            bookbutton.setBackgroundResource(R.drawable.safr_ripple_black);
         }
             bookbutton.setOnClickListener(new View.OnClickListener() {
             @Override

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -901,7 +901,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         public void onPositive(MaterialDialog materialDialog) {
 
                             boolean b = utils.rename(f, edit.getText()
-                                    .toString());
+                                    .toString(),rootMode);
                             m.finish();
                             updateList();
                             if (b) {

File: src/com/amaze/filemanager/utils/RootHelper.java
Patch:
@@ -172,7 +172,7 @@ public static ArrayList<String[]> getFilesList(String path,boolean root,boolean
         ArrayList<String[]> a = new ArrayList<String[]>();
         ArrayList<String> ls = new ArrayList<String>();
         if (root) {
-            if (path.startsWith("/storage")) {
+            if (!path.startsWith("/storage")) {
                 String cpath = getCommandLineString(path);
                 ls = runAndWait1("ls -l" + p + cpath, root);
                 for (String file : ls) {

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -298,7 +298,7 @@ public void onClick(View view) {
                             holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.black));
                         else
                             holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.white));
-                        holder.rl.setElevation(10f);
+                        holder.rl.setElevation(6f);
                     }
                     else
                         holder.rl.setBackgroundColor(main.skinselection);

File: src/com/amaze/filemanager/adapters/RarAdapter.java
Patch:
@@ -188,7 +188,7 @@ public void onClick(View view) {
                         holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.black));
                     else
                         holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.white));
-                    holder.rl.setElevation(10f);
+                    holder.rl.setElevation(6f);
                 }
                 else
                     holder.rl.setBackgroundColor(zipViewer.skinselection);

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -228,7 +228,7 @@ public void onClick(View view) {
                         holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.black));
                     else
                         holder.rl.setBackgroundColor(getContext().getResources().getColor(android.R.color.white));
-                    holder.rl.setElevation(10f);
+                    holder.rl.setElevation(6f);
                 }
                 else
                     holder.rl.setBackgroundColor(zipViewer.skinselection);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -485,7 +485,7 @@ public void onBackPressed() {
         if (mDrawerLayout.isDrawerOpen(mDrawerLinear))
             mDrawerLayout.closeDrawer(mDrawerLinear);
         else {
-            if (select < list.size() - 3) {
+            if (select < list.size() ) {
                 try {
 
                     Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.content_frame);
@@ -495,7 +495,6 @@ public void onBackPressed() {
                         Fragment fragment1 = tabFragment.getTab();
                         Main main = (Main) fragment1;
                         main.goBack();
-
                     } else if (name.contains("ZipViewer")){
                         ZipViewer zipViewer = (ZipViewer) getSupportFragmentManager().findFragmentById(R.id.content_frame);
                         if(zipViewer.mActionMode==null)

File: src/com/amaze/filemanager/utils/RootHelper.java
Patch:
@@ -172,7 +172,7 @@ public static ArrayList<String[]> getFilesList(String path,boolean root,boolean
         ArrayList<String[]> a=new ArrayList<String[]>();
         ArrayList<String> ls=new ArrayList<String>();
         if (root){
-            String cpath=getCommandLineString(path);
+            if(path.startsWith("/storage")){String cpath=getCommandLineString(path);
             ls=runAndWait1("ls -l"+p+cpath,root);
             for (String file : ls) {
                     if(!file.contains("Permission denied"))
@@ -185,6 +185,8 @@ public static ArrayList<String[]> getFilesList(String path,boolean root,boolean
                         e.printStackTrace();
                     }
 
+            }}else if(futils.canListFiles(new File(path))){
+                a=getFilesList(path,showHidden);
             }}
             else if(futils.canListFiles(new File(path))){
             a=getFilesList(path,showHidden);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -563,8 +563,8 @@ public void updateDrawer(){
             else if(f.canExecute())
                 list.add(file);
         }
-        list.add(utils.getString(this, R.string.apps));
-        list.add(utils.getString(this, R.string.bookmanag));
+        /*list.add(utils.getString(this, R.string.apps));
+        list.add(utils.getString(this, R.string.bookmanag));*/
         adapter = new DrawerAdapter(this, list, MainActivity.this, Sp);
         mDrawerList.setAdapter(adapter);
     }

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -143,7 +143,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 createviews(elements, current);
             }
             mainActivity.tabsSpinner.setVisibility(View.GONE);
-            mainActivity.toolbar.setTitle(getResources().getString(R.string.zip_viewer));
+            try{mainActivity.toolbar.setTitle(f.getName());}catch (Exception e){
+            mainActivity.toolbar.setTitle(getResources().getString(R.string.zip_viewer));}
             mainActivity.supportInvalidateOptionsMenu();
         }
     public String getSelectionColor(){
@@ -276,7 +277,7 @@ public void onDestroyActionMode(ActionMode actionMode) {
             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
             window.setStatusBarColor(Color.parseColor(mainActivity.getStatusColor()));
-        }}
+        }mActionMode=null;}
     };
     @Override
     public void onResume() {

File: src/com/amaze/filemanager/utils/IconHolder.java
Patch:
@@ -197,7 +197,7 @@ private Bitmap loadDrawable(File fso) {
                 }else if(Icons.isVideo(filePath))
                     return getVideoDrawable(fso);
             } catch (OutOfMemoryError outOfMemoryError) {
-                outOfMemoryError.printStackTrace();
+               cleanup();
                 shutdownWorker();
             }
 

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -71,11 +71,11 @@ public TabSpinnerAdapter(Context context, int resource, ArrayList<String> items,
         final SharedPreferences sharedPreferences1 = PreferenceManager.getDefaultSharedPreferences(context);
         skin = sharedPreferences1.getString("skin_color", "#03A9F4");
         color=colors.get(skin);
+        if(color==null){color=colors.get("#03A9F4");}
     }
 
     void putColor(String x,float a,float b,float c){colors.put(x,new Float[]{a,b,c});}
-    void putColors(){
-        putColor("#F44336",0.956862f,0.2627450f,0.21176470f);
+    void putColors(){putColor("#F44336",0.956862f,0.2627450f,0.21176470f);
         putColor("#e91e63",0.91372549f,0.11764706f,0.38823529f);
         putColor("#9c27b0",0.61176471f,0.15294118f,0.69019608f);
         putColor("#673ab7",0.40392157f,0.22745098f,0.71764706f);

File: src/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -209,7 +209,7 @@ public void execute(int id, final ArrayList<String> files,final String FILE2,fin
 
                        if(hash.get(id)) copyFiles((f1), new File(FILE2, f1.getName()), id, move);
                         else {stopSelf(id);}
-                    } catch (IOException e) {
+                    } catch (Exception e) {
                         System.out.println("amaze " + e);
                         publishResults("" + e, 0, 0, id, 0, 0, false, move);
                     }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -310,9 +310,7 @@ else if(file.canExecute())
 
         } else {
             select = savedInstanceState.getInt("selectitem", 0);
-
             adapter.toggleChecked(select);
-
         }
         /*if (Build.VERSION.SDK_INT >= 19) {
             SystemBarTintManager tintManager = new SystemBarTintManager(this);
@@ -557,7 +555,8 @@ else if(f.canExecute())
     public void updateDrawer(String path){
 
         if(list.contains(path))
-        {select= list.indexOf(path);
+        {
+            //select= list.indexOf(path);
             adapter.toggleChecked(select);
         }}
     public void goToMain(String path){

File: src/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -112,8 +112,8 @@ public List<Tab> getAllTabs() {
             do {
                 Tab tab = new Tab();
                 tab.setTab((cursor.getInt(cursor.getColumnIndex(COLUMN_TAB_NO))));
-                tab.setPath(cursor.getString(cursor.getColumnIndex(COLUMN_HOME)));
-                tab.setHome(cursor.getString(cursor.getColumnIndex(COLUMN_PATH)));
+                tab.setPath(cursor.getString(cursor.getColumnIndex(COLUMN_PATH)));
+                tab.setHome(cursor.getString(cursor.getColumnIndex(COLUMN_HOME)));
                 //Adding them to list
                 tabList.add(tab);
             } while (cursor.moveToNext());

File: src/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -103,6 +103,7 @@ public DrawerAdapter(Context context, ArrayList<String> values, MainActivity m,
         this.m = m;
         putColors();
         color=colors.get(m.skin);
+        if(color==null){color=colors.get("#03A9F4");}
     }
     @Override
     public View getView(final int position, View convertView, ViewGroup parent) {

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -85,6 +85,9 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
+        MainActivity mainActivity=(MainActivity)getActivity();
+        mainActivity.toolbar.setTitle(utils.getString(getActivity(),R.string.apps));
+        mainActivity.tabsSpinner.setVisibility(View.GONE);
 
         vl=getListView();
             Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -76,7 +76,7 @@ public class BookmarksManager extends Fragment {
         @Override
         public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
             rootView = inflater.inflate(R.layout.main_frag, container, false);
-        listview=(ListView)rootView.findViewById(R.id.listView);
+             listview=(ListView)rootView.findViewById(R.id.listView);
             rootView.findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
             rootView.findViewById(R.id.gridView).setVisibility(View.GONE);
         return rootView;}

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -78,6 +78,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             rootView = inflater.inflate(R.layout.main_frag, container, false);
         listview=(ListView)rootView.findViewById(R.id.listView);
             rootView.findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
+            rootView.findViewById(R.id.gridView).setVisibility(View.GONE);
         return rootView;}
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -206,7 +206,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         rootView = inflater.inflate(R.layout.main_frag, container, false);
         listView = (ListView) rootView.findViewById(R.id.listView);
         gridView = (GridView) rootView.findViewById(R.id.gridView);
-        floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);
+        floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab);
         floatingActionButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -1220,7 +1220,7 @@ public void getSortModes() {
     @Override
     public void onResume() {
         super.onResume();
-        floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);
+        floatingActionButton = (FloatingActionButton) rootView.findViewById(R.id.fab);
         floatingActionButton.attachToListView(listView);
         floatingActionButton.attachToListView(gridView);
         floatingActionButton.setColorNormal(Color.parseColor(skin));

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -92,7 +92,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
 
         LinearLayout pathbar = (LinearLayout) rootView.findViewById(R.id.pathbar);
         TextView textView = (TextView) rootView.findViewById(R.id.fullpath);
-
+        rootView.findViewById(R.id.fab).setVisibility(View.GONE);
         pathbar.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1010,6 +1010,7 @@ public void onReceive(final Context context, Intent intent) {
                     p.setButton(DialogInterface.BUTTON_POSITIVE,utils.getString(con,R.string.cancel),new DialogInterface.OnClickListener() {
                         @Override
                         public void onClick(DialogInterface dialog, int which) {
+                      System.out.println("Broadcast sent");
                             LocalBroadcastManager.getInstance(con).sendBroadcast(new Intent("searchcancel"));
                             dialog.cancel();
                         }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -186,7 +186,7 @@ public void onCreate(Bundle savedInstanceState) {
         mainActivity=(MainActivity)getActivity();
         showPermissions=Sp.getBoolean("showPermissions",false);
         showSize=Sp.getBoolean("showFileSize",false);
-        gobackitem=Sp.getBoolean("goBack_checkbox", true);
+        gobackitem=Sp.getBoolean("goBack_checkbox", false);
         circularImages=Sp.getBoolean("circularimages",true);
         showLastModified=Sp.getBoolean("showLastModified",true);
         icons = new IconUtils(Sp, getActivity());

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -173,7 +173,6 @@ public void onCreate(Bundle savedInstanceState) {
         rootmode = Sp.getBoolean("rootmode", false);
         theme = Integer.parseInt(Sp.getString("theme", "0"));
         util = new IconUtils(Sp, this);
-
         Calendar calendar = Calendar.getInstance();
         int hour = calendar.get(Calendar.HOUR_OF_DAY);
         int th = Integer.parseInt(Sp.getString("theme", "0"));
@@ -1300,4 +1299,4 @@ public String getStatusColor() {
         };
         return colors[ Arrays.asList(colors).indexOf(skin)+1];
     }
-}
+   }

File: src/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -111,7 +111,8 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
     public void onPostExecute(Boolean b) {
         Intent intent = new Intent("loadlist");
         cd.sendBroadcast(intent);
-        utils.scanFile(files.get(0).getParent(), cd);
+        for(File file:files)
+        utils.scanFile(file.getPath(), cd);
         if (!b) {
             Toast.makeText(cd, utils.getString(cd, R.string.error), Toast.LENGTH_LONG).show();
         } else if (zipViewer==null) {

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -254,13 +254,13 @@ public void onClick(View p1) {
                     new ZipHelperTask(zipViewer,  stringBuilder.toString()).execute(zipViewer.f);
 
                 } else {String x=rowItem.getName().substring(rowItem.getName().lastIndexOf("/")+1);
-                    File file = new File(zipViewer.f.getParent() + "/" + x);
+                    File file = new File(getContext().getCacheDir().getAbsolutePath() + "/" + x);
                     zipViewer.files.clear();
                     zipViewer.files.add(0, file);
 
                     try {
                         ZipFile zipFile = new ZipFile(zipViewer.f);
-                     new ZipExtractTask(zipFile, zipViewer.f.getParent(), zipViewer, x,true).execute(rowItem.getEntry());
+                     new ZipExtractTask(zipFile, getContext().getCacheDir().getAbsolutePath(), zipViewer, x,true).execute(rowItem.getEntry());
                     } catch (IOException e) {
                         e.printStackTrace();
                     }

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -285,7 +285,7 @@ public void onResume() {
         floatingActionButton.hide(true);
         if (files.size()==1) {
 
-            new DeleteTask(getActivity().getContentResolver(),  getActivity()).execute(files);
+            new DeleteTask(getActivity().getContentResolver(),  getActivity(), this).execute(files);
         }
     }
 public boolean cangoBack(){

File: src/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -130,7 +130,9 @@ public void onPageScrollStateChanged(int p1) {
             }
             else{
                 if(path!=null && path.length()!=0){
-                    addTab(new Tab(1,"",path,path),1,"");
+                    Tab tab=tabHandler.findTab(1);
+                    tab.setPath(path);
+                    addTab(tab,1,"");
                 }
                 else
                 addTab(tabHandler.findTab(1),1,"");

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -527,7 +527,6 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                     results = false;
                     current = f.getPath();
                     updatePath(f.getPath());
-                    mainActivity.updatespinner();
                     if (back) {
                         if (scrolls.containsKey(current)) {
                             Bundle b = scrolls.get(current);
@@ -538,7 +537,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                     floatingActionButton.show();
                     mainActivity.updatepaths();
 
-                            if (buttons.getVisibility() == View.VISIBLE) bbar(current);
+                    if (buttons.getVisibility() == View.VISIBLE) bbar(current);
 
                     mainActivity.updateDrawer(current);
                     mainActivity.updatepager();

File: src/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -38,7 +38,6 @@ public class TabHandler extends SQLiteOpenHelper {
     private static final String DATABASE_NAME = "explorer.db";
     private static final String TABLE_TAB = "tab";
 
-    public static final String COLUMN_ID = "id";
     public static final String COLUMN_TAB_NO = "tab_no";
     public static final String COLUMN_LABEL = "label";
     public static final String COLUMN_PATH = "path";
@@ -51,7 +50,7 @@ public TabHandler(Context context, String name, SQLiteDatabase.CursorFactory fac
     public void onCreate(SQLiteDatabase sqLiteDatabase) {
         String CREATE_TAB_TABLE = "CREATE TABLE " + TABLE_TAB + "("
                 +  COLUMN_TAB_NO
-                + " INTEGER PRIMARY KEY," + COLUMN_LABEL + " TEXT,"
+                + " INTEGER PRIMARY KEY,"
                 + COLUMN_PATH + " TEXT,"+COLUMN_HOME+" TEXT" + ")";
         sqLiteDatabase.execSQL(CREATE_TAB_TABLE);
     }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -1266,9 +1266,6 @@ public void updatepaths(){
         }
     }
 
-    public void addZipViewTab(String text){
-       getFragment().addZipViewerTab(text);
-    }
     public void openZip(String path) {
         FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();
         fragmentTransaction.setCustomAnimations(R.animator.slide_in_top,R.animator.slide_in_bottom);

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -605,7 +605,7 @@ public void onPositive(MaterialDialog materialDialog) {
 
         @Override
         public void onNegative(MaterialDialog materialDialog) {
-            m.addZipViewTab(f.getPath());
+            m.openZip(f.getPath());
         }
     });
     mat.positiveColor(Color.parseColor(m.skin));

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -196,7 +196,7 @@ public void onPositive(MaterialDialog materialDialog) {
                                                         ArrayList<File> files = new ArrayList<File>();
                                                         if (Build.VERSION.SDK_INT >= 21) {
                                                             String parent = f1.getParent();
-                                                            if (!parent.equals("app") && !parent.equals("priv_app"))
+                                                            if (!parent.equals("app") && !parent.equals("priv-app"))
                                                                 files.add(new File(f1.getParent()));
                                                             else files.add(f1);
                                                         } else {

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -991,7 +991,7 @@ public void bbar(String text) {
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {
-                            ((Main) mainActivity.getFragment().getTab()).loadlist(new File("/"), false);
+                            loadlist(new File("/"), false);
                             timer.cancel();
                             timer.start();
                         }
@@ -1007,7 +1007,7 @@ public void onClick(View p1) {
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {
-                            ((Main)   mainActivity.getFragment().getTab()).loadlist(new File(rpaths.get(k)), false);
+                            loadlist(new File(rpaths.get(k)), false);
                             timer.cancel();
                             timer.start();
                         }
@@ -1026,7 +1026,7 @@ public void onClick(View p1) {
                     button.setOnClickListener(new Button.OnClickListener() {
 
                         public void onClick(View p1) {
-                            ((Main) mainActivity.getFragment().getTab()).loadlist(new File(rpaths.get(k)), false);
+                            loadlist(new File(rpaths.get(k)), false);
                             timer.cancel();
                             timer.start();
                         }

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -70,9 +70,9 @@ public void onCreate(Bundle savedInstanceState) {
 
         String x = getStatusColor();
         skinStatusBar = Color.parseColor(x);
-        toolbar.setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);
+        getSupportActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         if (Build.VERSION.SDK_INT >= 21) {
 
             Window window = this.getWindow();

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -610,7 +610,9 @@ public boolean onCreateActionMode(ActionMode mode, Menu menu) {
         // may be called multiple times if the mode is invalidated.
         public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
             ArrayList<Integer> positions = adapter.getCheckedItemPositions();
-            ((TextView) v.findViewById(R.id.item_count)).setText(positions.size() + "");
+            TextView textView1 = (TextView) v.findViewById(R.id.item_count);
+            textView1.setText(positions.size() + "");
+            textView1.setOnClickListener(null);
             //tv.setText(positions.size());
             if (positions.size() == 1) {
                 showOption(R.id.addshortcut,menu);

File: src/com/amaze/filemanager/services/SearchService.java
Patch:
@@ -56,7 +56,7 @@ protected void onHandleIntent(Intent intent) {
         showHidden=Sp.getBoolean("showHidden",false);
         LocalBroadcastManager.getInstance(this).registerReceiver(RECIEVER,new IntentFilter("searchcancel"));
         publishProgress(0);
-    ArrayList<String[]> arrayList=getSearchResult(new File(intent.getStringExtra("path")), intent.getStringExtra("text"));
+        ArrayList<String[]> arrayList=getSearchResult(new File(intent.getStringExtra("path")), intent.getStringExtra("text"));
         publishProgress(arrayList);
         stopSelf();
     }

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -36,6 +36,7 @@
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentTransaction;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -622,13 +623,12 @@ public void onPositive(MaterialDialog materialDialog) {
                 Intent intent = new Intent(m, ExtractService.class);
                 intent.putExtra("zip",f.getPath());
                 m.startService(intent);
-
-
             }
 
             @Override
             public void onNegative(MaterialDialog materialDialog) {
-                m.addZipViewTab(f.getPath());
+                //m.addZipViewTab(f.getPath());
+                m.openZip(f.getPath());
             }
         });
         mat.positiveColor(Color.parseColor(m.skin));

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -558,7 +558,6 @@ public void goToMain(){
         transaction.commit();
         toolbar.setTitle(null);
         tabsSpinner.setVisibility(View.VISIBLE);
-
     }
     public void selectItem(final int i) {
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -609,7 +609,7 @@ public void selectItem(final int i) {
                 transaction2.commit();
                 //title.setText(utils.getString(this, R.string.apps));
                 //title.setVisibility(View.VISIBLE);
-                getSupportActionBar().setTitle(utils.getString(this, R.string.apps));
+                toolbar.setTitle(utils.getString(this, R.string.apps));
             } else if (i == list.size() - 1) {
 
                 android.support.v4.app.FragmentTransaction transaction3 = getSupportFragmentManager().beginTransaction();
@@ -619,7 +619,7 @@ public void selectItem(final int i) {
                 transaction3.commit();
                 //title.setText(utils.getString(this, R.string.bookmanag));
                 //title.setVisibility(View.VISIBLE);
-                getSupportActionBar().setTitle(utils.getString(this, R.string.bookmanag));
+                toolbar.setTitle(utils.getString(this, R.string.bookmanag));
                 }
         }
         select = i;
@@ -698,7 +698,7 @@ public void onClick(View v) {
             progress_bar.setActionView(progress);
         } catch (ClassCastException e) {
             tabsSpinner.setVisibility(View.GONE);
-            toolbar.setTitle(list.get(select));
+            //toolbar.setTitle(list.get(select));
             menu.findItem(R.id.search).setVisible(false);
             menu.findItem(R.id.home).setVisible(false);
             menu.findItem(R.id.history).setVisible(false);

File: src/com/amaze/filemanager/adapters/BooksAdapter.java
Patch:
@@ -93,7 +93,7 @@ public void onClick(View p1) {
                     s.removeS(items.get(p), context);
                     items.remove(p);
                     notifyDataSetChanged();
-           b.m.updateDrawer();
+                    b.m.updateDrawer();
                 } catch (Exception e) {
                     Toast.makeText(context, e + "", Toast.LENGTH_LONG).show();
                 }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -658,7 +658,7 @@ public void onClick(View v) {
                     transaction.commit();
                 } else {
                     selectItem(0);
-                }invalidateOptionsMenu();
+                }supportInvalidateOptionsMenu();
             }
         });
 
@@ -708,7 +708,7 @@ public void onClick(View v) {
             menu.findItem(R.id.view).setVisible(false);
             menu.findItem(R.id.paste).setVisible(false);
             e.printStackTrace();
-        }catch (Exception e){e.printStackTrace();}
+        }catch (Exception e){}
         return super.onPrepareOptionsMenu(menu);
     }
 

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -507,7 +507,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                         if (scrolls.containsKey(current)) {
                             Bundle b = scrolls.get(current);
 
-                            //listView.setSelectionFromTop(b.getInt("index"), b.getInt("top"));
+                            listView.setSelectionFromTop(b.getInt("index"), b.getInt("top"));
                         }
                     }
                     floatingActionButton.show();

File: src/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -61,7 +61,7 @@ protected ArrayList<ZipObj> doInBackground(File... params) {
                         String y=entry.getName();
                         if(y.startsWith("/"))
                             y=y.substring(1,y.length());
-                        if (file.getParent() == null) {
+                        if (file.getParent() == null || file.getParent().length()==0 || file.getParent().equals("/")) {
                             if(!strings.contains(y)){
                                 elements.add(new ZipObj(new ZipEntry(y),entry.getTime(),entry.getSize(), entry.isDirectory()));
                             strings.add(y);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -670,7 +670,7 @@ public void onClick(View v) {
                 s.setTitle(getResources().getString(R.string.gridview));
             } else {
                 s.setTitle(getResources().getString(R.string.listview));
-            }
+            } if(Build.VERSION.SDK_INT>=21)toolbar.setElevation(0);
             if(name.contains("Main")) {
                 invalidatePasteButton(paste);
                 search.setVisible(true);
@@ -696,6 +696,7 @@ public void onClick(View v) {
             }
             progress_bar.setActionView(progress);
         } catch (ClassCastException e) {
+           if(Build.VERSION.SDK_INT>=21) toolbar.setElevation(10);
             tabsSpinner.setVisibility(View.GONE);
             toolbar.setTitle(list.get(select));
             menu.findItem(R.id.search).setVisible(false);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -973,7 +973,7 @@ public void onClick(View p1) {
                             timer.start();
                         }
                     });
-
+                    ib.setLayoutParams(params);
                     buttons.addView(ib);
                     if(names.size()-i!=1)
                         buttons.addView(v);
@@ -989,6 +989,7 @@ public void onClick(View p1) {
                             timer.start();
                         }
                     });
+                    ib.setLayoutParams(params);
                     buttons.addView(ib);
                     if(names.size()-i!=1)
                         buttons.addView(v);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -266,6 +266,7 @@ public void onSelection(MaterialDialog materialDialog, View view, int i, CharSeq
         }
         mDrawerLinear = (RelativeLayout) findViewById(R.id.left_drawer);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
+        mDrawerLayout.setStatusBarBackgroundColor(Color.parseColor(skin));
         mDrawerList = (ListView) findViewById(R.id.menu_drawer);
         View v=getLayoutInflater().inflate(R.layout.drawerheader,null);
         v.setBackgroundColor(Color.parseColor(skin));

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -304,7 +304,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         }
         footerView=getActivity().getLayoutInflater().inflate(R.layout.divider, null);
         if (aBoolean) {
-            listView.addFooterView(footerView);
+            //listView.addFooterView(footerView);
             listView.setFastScrollEnabled(true);
         } else {
 
@@ -482,8 +482,10 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                 TextView footerText = (TextView) footerView.findViewById(R.id.footerText);
                 if (bitmap.size() == 0) {
                     footerText.setText(res.getString(R.string.nofiles));
+                    listView.addFooterView(footerView);
                 } else {
                     footerText.setText(res.getString(R.string.tapnhold));
+                    listView.removeFooterView(footerView);
                 }if(gobackitem)
                 if (!f.getPath().equals("/")) {
                     if (bitmap.size() == 0 || !bitmap.get(0).getSize().equals(goback))

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -82,7 +82,7 @@ public class ZipViewer extends Fragment {
     View rootView;
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-         rootView = inflater.inflate(R.layout.main_frag, container, false);
+        rootView = inflater.inflate(R.layout.main_frag, container, false);
         listView = (ListView) rootView.findViewById(R.id.listView);
 
         return rootView;
@@ -97,7 +97,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         mainActivity=(MainActivity)getActivity();
         if(mainActivity.theme1==1)
-            getActivity().getWindow().getDecorView().setBackgroundColor(Color.BLACK);
+            listView.setBackgroundColor(Color.parseColor("#000000"));
         else
             listView.setBackgroundColor(Color.parseColor("#ffffff"));
         gobackitem=Sp.getBoolean("goBack_checkbox", true);

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -72,11 +72,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         FloatingActionButton floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);
         floatingActionButton.hide(true);
 
-        getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         rootView = (LinearLayout) root.findViewById(R.id.secondbut);
         ((MainActivity)getActivity()).getSupportActionBar().setTitle(utils.getString(getActivity(),R.string.processes));
-        ((LinearLayout) getActivity().findViewById(R.id.buttons))
-                .setVisibility(View.GONE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         icons = new IconUtils(Sp, getActivity());
         return root;

File: src/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -84,7 +84,7 @@ protected void onPostExecute(ArrayList<Layoutelements> bitmap) {
             bitmap = null;
 
         }
-        ma.createViews(bitmap, back, f,true);
+        ma.createViews(bitmap, back, f);
 
         //ListView lv = (ListView) ma.listView.findViewById(R.id.listView);
         ma.listView.setVisibility(View.VISIBLE);

File: src/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -108,7 +108,7 @@ protected ArrayList<ZipObj> doInBackground(File... params) {
             protected void onPostExecute (ArrayList < ZipObj > zipEntries) {
                 super.onPostExecute(zipEntries);
                 zipViewer.zipAdapter = new ZipAdapter(zipViewer.getActivity(), R.layout.simplerow, zipEntries, zipViewer);
-                zipViewer.setListAdapter(zipViewer.zipAdapter);
+                zipViewer.listView.setAdapter(zipViewer.zipAdapter);
                 zipViewer.current = dir;
 zipViewer.bbar();            }
             class FileListSorter implements Comparator<ZipObj> {

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -69,7 +69,7 @@ public TabSpinnerAdapter(Context context, int resource, ArrayList<String> items,
         this.tabFragment=tabFragment;
         putColors();
         final SharedPreferences sharedPreferences1 = PreferenceManager.getDefaultSharedPreferences(context);
-         skin = sharedPreferences1.getString("skin_color", "#5677fc");
+        skin = sharedPreferences1.getString("skin_color", "#03A9F4");
         color=colors.get(skin);
     }
 

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -116,7 +116,7 @@ public void onClick(View view) {
                 if(theme1==1)ba1.theme(Theme.DARK);
                 ba1.negativeText(R.string.cancel);
                 ba1.positiveText(R.string.create);
-                String skin=Sp.getString("skin_color", "#5677fc");
+                String skin=Sp.getString("skin_color", "#03A9F4");
                 ba1.positiveColor(Color.parseColor(skin));
                 ba1.negativeColor(Color.parseColor(skin));
                 ba1.callback(new MaterialDialog.Callback() {

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -90,7 +90,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showSize=Sp.getBoolean("showFileSize",false);
         showLastModified=Sp.getBoolean("showLastModified",true);
         year=(""+calendar.get(Calendar.YEAR)).substring(2,4);
-        skin = Sp.getString("skin_color", "#5677fc");
+        skin = Sp.getString("skin_color", "#03A9F4");
         getListView().setDividerHeight(0);
         getListView().setDivider(null);
         FloatingActionButton floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -592,7 +592,9 @@ public void selectItem(final int i) {
                     transaction.commit();
 
 
-                }else{
+                }else if (select == i) {
+                    mDrawerLayout.closeDrawer(mDrawerLinear);
+                } else{
                     try {
                         TabFragment m=((TabFragment)getSupportFragmentManager().findFragmentById(R.id.content_frame));
                     if(new File(list.get(i)).isDirectory())

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -158,7 +158,6 @@ public void onCreate(Bundle savedInstanceState) {
         } catch (Exception e) {
             e.printStackTrace();
         }
-        //getActionBar().hide();
         Sp = PreferenceManager.getDefaultSharedPreferences(this);
         utils = new Futils();
         s=new Shortcuts(this);

File: src/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -110,8 +110,7 @@ protected void onPostExecute (ArrayList < ZipObj > zipEntries) {
                 zipViewer.zipAdapter = new ZipAdapter(zipViewer.getActivity(), R.layout.simplerow, zipEntries, zipViewer);
                 zipViewer.setListAdapter(zipViewer.zipAdapter);
                 zipViewer.current = dir;
-                ((TextView) zipViewer.getActivity().findViewById(R.id.fullpath)).setText(zipViewer.current);
-            }
+zipViewer.bbar();            }
             class FileListSorter implements Comparator<ZipObj> {
 
 

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -130,7 +130,7 @@ public View getDropDownView(final int position, View convertView, ViewGroup pare
         else
         textView.setText(new File(items.get(position)).getName());
         imageButton.setVisibility(View.VISIBLE);
-        /*if (position == tabFragment.mViewPager.getCurrentItem()) {
+        if (position == tabFragment.mViewPager.getCurrentItem()) {
             float[] src = {
 
                     color[0], 0, 0, 0, 0,
@@ -144,7 +144,7 @@ public View getDropDownView(final int position, View convertView, ViewGroup pare
             textView.setTextColor(Color.parseColor(skin));
        //     textView.setTypeface(null, Typeface.BOLD);
 
-        }else*/ imageButton.setVisibility(View.GONE);
+        } imageButton.setVisibility(View.GONE);
         row.setOnClickListener(new View.OnClickListener() {
 
             @Override

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -108,9 +108,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         current=savedInstanceState.getString("path");
             zipViewer.zipAdapter = new ZipAdapter(zipViewer.getActivity(), R.layout.simplerow, elements, zipViewer);
             zipViewer.setListAdapter(zipViewer.zipAdapter);
-
-            ((TextView) zipViewer.getActivity().findViewById(R.id.fullpath)).setText(zipViewer.current);
-        }   }
+            f=new File(savedInstanceState.getString("file"));
+       bbar(); }   }
     public String getSelectionColor(){
 
         String[] colors = new String[]{
@@ -141,6 +140,7 @@ public void onSaveInstanceState(Bundle outState) {
         outState.putParcelableArrayList("wholelist",wholelist);
         outState.putParcelableArrayList("elements",elements);
         outState.putString("path",current);
+        outState.putString("file",f.getPath());
     }
     public ActionMode.Callback mActionModeCallback = new ActionMode.Callback() {
         private void hideOption(int id, Menu menu) {

File: src/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -84,7 +84,7 @@ protected void onPostExecute(ArrayList<Layoutelements> bitmap) {
             bitmap = null;
 
         }
-        ma.createViews(bitmap, back, f);
+        ma.createViews(bitmap, back, f,true);
 
         //ListView lv = (ListView) ma.listView.findViewById(R.id.listView);
         ma.listView.setVisibility(View.VISIBLE);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -321,6 +321,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 }
             }
 
+            if(current!=null)
+                ma.updatePath(ma.current);
         }
 
     }

File: src/com/amaze/filemanager/utils/RootHelper.java
Patch:
@@ -180,7 +180,7 @@ public static ArrayList<String[]> getFilesList(String path,boolean root,boolean
         }
         else {
             for (String file : ls) {
-
+                    if(!file.contains("Permission denied"))
                     try {
                         String[] array=futils.parseName(file);
                         array[0]=path+"/"+array[0];

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -589,7 +589,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                         .getDesc());
 
                 if (x.isDirectory()) {
-
+                    hideOption(R.id.openwith,menu);
                     showOption(R.id.sethome, menu);
                     hideOption(R.id.share,menu);
                 } else if (x.getName().toLowerCase().endsWith(".zip") || x.getName().toLowerCase().endsWith(".jar") || x.getName().toLowerCase().endsWith(".apk") || x.getName().toLowerCase().endsWith(".rar")|| x.getName().toLowerCase().endsWith(".tar")|| x.getName().toLowerCase().endsWith(".tar.gz")) {
@@ -856,10 +856,10 @@ public void onNegative(MaterialDialog materialDialog) {
                     mode.finish();
                     return true;
                 case R.id.openwith:
-                    if (results)utils.openWith(new File(slist.get(
+                    if (results)utils.openunknown(new File(slist.get(
                             (plist.get(0))).getDesc()), getActivity());
                     else
-                        utils.openWith(new File(list.get(
+                        utils.openunknown(new File(list.get(
                                 (plist.get(0))).getDesc()), getActivity());
 
                     return true;

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -974,7 +974,7 @@ protected void onPause() {
         unregisterReceiver(RECIEVER);
         //progress.setVisibility(View.INVISIBLE);
         //progressWheel.setVisible(false);
-        progress_bar.setVisible(false);
+        //progress_bar.setVisible(false);
     }
 
     @Override

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -652,7 +652,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         try {tabsSpinner.setVisibility(View.VISIBLE);
             TabFragment tabFragment=getFragment();
             String name=tabFragment.getTab1().getClass().getName();
-
+            toolbar.setTitle("");
             if (aBoolean) {
                 s.setTitle(getResources().getString(R.string.gridview));
             } else {

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -97,7 +97,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 theme1 = 1;
             } else
                 theme1 = 0;
-        }if(theme1==1){setTheme(R.style.appCompatDark);}
+        }if(theme1==1){setTheme(R.style.appCompatDark);getWindow().getDecorView().setBackgroundColor(Color.BLACK);}
         setContentView(R.layout.search);
         android.support.v7.widget.Toolbar toolbar=(android.support.v7.widget.Toolbar)findViewById(R.id.toolbar);
         setSupportActionBar(toolbar);

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -87,7 +87,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
                 theme1 = 1;
             } else
                 theme1 = 0;
-        }m=(MainActivity)getActivity();
+        }
+        if(theme1==1)getActivity().getWindow().getDecorView().setBackgroundColor(Color.BLACK);
+        m=(MainActivity)getActivity();
         getListView().setDivider(null);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
   //      getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -649,7 +649,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         View progress = layoutInflater.inflate(R.layout.toolbar_progress, null);
         progress.setLayoutParams(new ViewGroup.LayoutParams(48, 48));
 
-        try {
+        try {tabsSpinner.setVisibility(View.VISIBLE);
             TabFragment tabFragment=getFragment();
             String name=tabFragment.getTab1().getClass().getName();
 
@@ -683,6 +683,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
             }
             progress_bar.setActionView(progress);
         } catch (ClassCastException e) {
+            tabsSpinner.setVisibility(View.GONE);
+            toolbar.setTitle(list.get(select));
             menu.findItem(R.id.search).setVisible(false);
             menu.findItem(R.id.home).setVisible(false);
             menu.findItem(R.id.history).setVisible(false);

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -92,9 +92,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
         floatingActionButton.hide(true);
         String x=getSelectionColor();
         skinselection= Color.parseColor(x);
-        getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.search).setVisibility(View.INVISIBLE);
-        getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
+        //getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
+        //getActivity().findViewById(R.id.search).setVisibility(View.INVISIBLE);
+        //getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.pathbar).setOnClickListener(null);
         ((TextView)getActivity().findViewById(R.id.pathname)).setText("");
         getActivity().findViewById(R.id.fullpath).setOnClickListener(null);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -145,6 +145,7 @@ public class MainActivity extends ActionBarActivity {
     public Spinner tabsSpinner;
     public boolean mRingtonePickerIntent = false,restart=false;
     private MenuItem progress_bar;
+    public Toolbar toolbar;
 
     /**
      * Called when the activity is first created.
@@ -185,10 +186,9 @@ public void onCreate(Bundle savedInstanceState) {
         setContentView(R.layout.main_toolbar);
 
         // Toolbar
-        Toolbar toolbar = (Toolbar) findViewById(R.id.action_bar);
+        toolbar = (Toolbar) findViewById(R.id.action_bar);
         setSupportActionBar(toolbar);
         getSupportActionBar().setDisplayShowTitleEnabled(false);
-
         aBoolean = Sp.getBoolean("view", true);
         //ImageView overflow = ((ImageView)findViewById(R.id.action_overflow));
 

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -76,8 +76,9 @@ public void toggleChecked(int position) {
         notifyDataSetChanged();
         if (main.selection == false || main.mActionMode == null) {
             main.selection = true;
-            main.mActionMode = main.getActivity().startActionMode(
-                    main.mActionModeCallback);
+            /*main.mActionMode = main.getActivity().startActionMode(
+                    main.mActionModeCallback);*/
+            main.mActionMode = main.mainActivity.toolbar.startActionMode(main.mActionModeCallback);
         }
         main.mActionMode.invalidate();
         if (getCheckedItemPositions().size() == 0) {

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -141,7 +141,7 @@ public class Main extends android.support.v4.app.Fragment {
     public IconHolder ic;
     private List<Tab> content;
     private ArrayList<String> list1;
-    private MainActivity mainActivity;
+    public MainActivity mainActivity;
     public String skin;
     public int skinselection;
     public int theme;

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -96,6 +96,7 @@ public void onPause() {
         super.onPause();
         (getActivity()).unregisterReceiver(Copy_Receiver);
         (getActivity()).unregisterReceiver(Extract_Receiver);
+        (getActivity()).unregisterReceiver(Zip_Receiver);
         rootView.removeAllViewsInLayout();
         CopyIds.clear();
         CancelledCopyIds.clear();

File: src/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -239,15 +239,14 @@ public boolean extract(int id, File archive, String destinationPath,ArrayList<St
                     for(String y:x){
                         if(y.endsWith("/")){
                         if(entry.getName().contains(y))entry1.add(entry);}
+                        else {if(entry.getName().equals(y) || ("/"+entry.getName()).equals(y)){entry1.add(entry);}}
                     }
                     i++;
                 } else {
                     stopSelf(id);
                     publishResults(false);
                 }
-            }for(String y:x){
-                if(!y.endsWith("/")){
-                    entry1.add(new ZipEntry(y));}}
+            }
             for (ZipEntry entry:entry1){totalbytes=totalbytes+entry.getSize();}
             for(ZipEntry entry:entry1){
                     unzipEntry(id, zipfile, entry, destinationPath);}

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -941,7 +941,7 @@ public void bbar(String text) {
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {
-                            mainActivity.getFragment().getTab().loadlist(new File("/"), false);
+                            ((Main) mainActivity.getFragment().getTab()).loadlist(new File("/"), false);
                             timer.cancel();
                             timer.start();
                         }
@@ -957,7 +957,7 @@ public void onClick(View p1) {
                     ib.setOnClickListener(new View.OnClickListener() {
 
                         public void onClick(View p1) {
-                            mainActivity.getFragment().getTab().loadlist(new File("/"), false);
+                            ((Main)   mainActivity.getFragment().getTab()).loadlist(new File("/"), false);
                             timer.cancel();
                             timer.start();
                         }
@@ -974,7 +974,7 @@ public void onClick(View p1) {
                     button.setOnClickListener(new Button.OnClickListener() {
 
                         public void onClick(View p1) {
-                            mainActivity.getFragment().getTab().loadlist(new File("/"), false);
+                            ((Main) mainActivity.getFragment().getTab()).loadlist(new File("/"), false);
                             timer.cancel();
                             timer.start();
                         }

File: src/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -313,9 +313,8 @@ public void addZipViewerTab(String text) {
         mViewPager.setCurrentItem(fragments.size()-1,true);
 
     }
-    public Main getTab() {
-        Main man = ((Main) fragments.get(mViewPager.getCurrentItem()));
-        return man;
+    public Fragment getTab() {
+        return fragments.get(mViewPager.getCurrentItem());
     }
     public Fragment getTab1() {
         Fragment man = ( fragments.get(mViewPager.getCurrentItem()));

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -123,7 +123,8 @@ public void onClick(View view) {
         imageButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-            tabFragment.removeTab();
+           if(position==tabFragment.mViewPager.getCurrentItem()) tabFragment.removeTab();
+                else tabFragment.removeTabFromBack(position);
                 hideSpinnerDropDown(spinner);
             }
         });

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -38,6 +38,7 @@
 import android.widget.Toast;
 
 import com.amaze.filemanager.R;
+import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.adapters.ZipAdapter;
 import com.amaze.filemanager.services.DeleteTask;
 import com.amaze.filemanager.services.ExtractService;
@@ -71,7 +72,7 @@ public class ZipViewer extends ListFragment {
     ZipViewer zipViewer=this;
     public ArrayList<ZipObj> wholelist=new ArrayList<ZipObj>();
 public     ArrayList<ZipObj> elements = new ArrayList<ZipObj>();
-
+    public MainActivity mainActivity;
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
@@ -84,7 +85,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
         showLastModified=Sp.getBoolean("showLastModified",true);
         year=(""+calendar.get(Calendar.YEAR)).substring(2,4);
         skin = Sp.getString("skin_color", "#5677fc");
-        ((TextView) getActivity().findViewById(R.id.title)).setText(f.getName());
         getListView().setDividerHeight(0);
         getListView().setDivider(null);
         FloatingActionButton floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);
@@ -99,6 +99,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         ((TextView)getActivity().findViewById(R.id.pathname)).setText("");
         getActivity().findViewById(R.id.fullpath).setOnClickListener(null);
         files=new ArrayList<File>();
+        mainActivity=(MainActivity)getActivity();
         if(savedInstanceState==null)
         new ZipHelperTask(this,"").execute(f);
 else {

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -675,7 +675,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                 }
                 if(!shouldbbar){
                     shouldbbar=true;
-               if(mainActivity.shouldbbar(current)) bbar(current);}else bbar(current);mainActivity.updateDrawer(current);mainActivity.updatepaths();mainActivity.updatepager();
+               if(mainActivity.shouldbbar(current)) bbar(current);}else bbar(current);mainActivity.updateDrawer(current);mainActivity.updatepager();
             } catch (Exception e) {
             }
         }

File: src/com/amaze/filemanager/services/asynctasks/ZipExtractTask.java
Patch:
@@ -7,6 +7,7 @@
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.fragments.ZipViewer;
 import com.amaze.filemanager.utils.Futils;
+import com.amaze.filemanager.utils.ZipObj;
 
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
@@ -68,8 +69,8 @@ private void unzipEntry(ZipFile zipfile, ZipEntry entry, String outputDir)
             throws IOException {
         if (entry.isDirectory()) {
             createDir(new File(outputDir, entry.getName()));
-            for (ZipEntry entry1:zipViewer.wholelist ) {
-                if(entry1.getName().contains(entry.getName())){unzipEntry(zipfile,entry1,outputDir);}
+            for (ZipObj entry1:zipViewer.wholelist ) {
+                if(entry1.getName().contains(entry.getName())){unzipEntry(zipfile,entry1.getEntry(),outputDir);}
             }
                 return;
         }

File: src/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -45,7 +45,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 container, false);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
        path0= Sp.getString("tab0","");
-        path1= Sp.getString("tab1","");
+        path1= Sp.getString("tab1","/");
        // Toast.makeText(getActivity(),path0,Toast.LENGTH_LONG).show();
         mViewPager = (ViewPager) rootView.findViewById(R.id.pager);
         STRIP = ((android.support.v4.view.PagerTitleStrip) rootView

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -791,7 +791,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                 showOption(R.id.permissions, menu);
 
                 showOption(R.id.about, menu);
-
+                showOption(R.id.share,menu);
                 showOption(R.id.rename, menu);
 
                 File x = new File(list.get(adapter.getCheckedItemPositions().get(0))
@@ -801,15 +801,14 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                 if (x.isDirectory()) {
 
                     showOption(R.id.sethome, menu);
-
+                    hideOption(R.id.share,menu);
                 } else if (x.getName().toLowerCase().endsWith(".zip") || x.getName().toLowerCase().endsWith(".jar") || x.getName().toLowerCase().endsWith(".apk") || x.getName().toLowerCase().endsWith(".rar")|| x.getName().toLowerCase().endsWith(".tar")|| x.getName().toLowerCase().endsWith(".tar.gz")) {
 
                     showOption(R.id.ex, menu);
 
                     hideOption(R.id.sethome, menu);
                     hideOption(R.id.book, menu);
                     showOption(R.id.openwith,menu);
-                    showOption(R.id.share, menu);
 
                 } else if (x.isFile()) {
 

File: src/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -238,7 +238,7 @@ private void copyFiles(File sourceFile, File targetFile, int id,boolean move) th
                 OutputStream out;
                 try {
                 out= new FileOutputStream(targetFile);
-}catch (Exception e){out=new MediaFile(getContentResolver(),targetFile).write();}
+}catch (Exception e){out=new MediaFile(c,targetFile).write(size);}
 
                 byte[] buffer = new byte[8192];
 

File: src/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -62,7 +62,7 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
                     }       }
                 if(!b){
                         for(File f:files){
-                            MediaFile mediaFile=new MediaFile(contentResolver,f);
+                            MediaFile mediaFile=new MediaFile(cd,f);
                             try {
                                 boolean delete=mediaFile.delete();
                                 if(!delete){b=false;}

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1487,6 +1487,7 @@ public void onAnimationEnd(Animator animation) {
         activity.overridePendingTransition(enter_anim, exit_anim);
         Intent i=new Intent(getActivity(),MainActivity.class);
         i.putExtra("restart",true);
+        i.setAction(Intent.ACTION_MAIN);
         activity.startActivity(i);
     }private void crossfadeInverse() {
 

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -93,7 +93,7 @@ public void onCreate(Bundle savedInstanceState) {
         path = this.getIntent().getStringExtra("path");
         if (path != null) {
             file=new File(path);
-            Toast.makeText(this, "" + path, Toast.LENGTH_SHORT).show();
+            //Toast.makeText(this, "" + path, Toast.LENGTH_SHORT).show();
             new LoadText().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, path);
         } else {
             Toast.makeText(this,utils.getString(this,R.string.cant_read_file) , Toast.LENGTH_LONG).show();

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -122,13 +122,13 @@ public void onClick(View view) {
                     public void onPositive(MaterialDialog materialDialog) {
                         try {
                             File a = new File(edir.getText().toString());
-                            if (a.exists()) {
+                            if (a.isDirectory()) {
                                 s.addS(a);
                                 b.items.add(a);
                                 b.notifyDataSetChanged();
                                 Toast.makeText(getActivity(), utils.getString(getActivity(), R.string.success), Toast.LENGTH_LONG).show();
                             } else {
-                                Toast.makeText(getActivity(), utils.getString(getActivity(), R.string.filenotexists), Toast.LENGTH_LONG).show();
+                                Toast.makeText(getActivity(), utils.getString(getActivity(), R.string.invalid_dir), Toast.LENGTH_LONG).show();
                             }
                         } catch (Exception e) {
                             // TODO Auto-generated catch block

File: src/com/amaze/filemanager/services/asynctasks/SearchTask.java
Patch:
@@ -29,6 +29,7 @@
 import android.widget.TextView;
 
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.afollestad.materialdialogs.Theme;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.activities.MainActivity;
 import com.amaze.filemanager.fragments.Main;
@@ -58,6 +59,7 @@ public void onPreExecute() {
         a.title(futils.getString(tab.getActivity(), R.string.searching));
         a.positiveText(futils.getString(tab.getActivity(), R.string.cancel));
         a.positiveColor(Color.parseColor(m.skin));
+        if(m.theme1==1)a.theme(Theme.DARK);
         a.callback(new MaterialDialog.Callback() {
             @Override
             public void onPositive(MaterialDialog materialDialog) {

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -188,7 +188,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         Intent intent = new Intent(getActivity(), ExtractService.class);
                         ArrayList<String> a=new ArrayList<String>();
                         for(int i:zipAdapter.getCheckedItemPositions()){
-                            a.add(elements.get(i).getEntry().getName());
+                            a.add(elements.get(i).getName());
                         }
                        intent.putExtra("zip",f.getPath());
                         intent.putExtra("entries1",true);

File: src/com/amaze/filemanager/services/ExtractService.java
Patch:
@@ -138,18 +138,18 @@ public boolean extract(int id, File archive, String destinationPath,ArrayList<St
                     publishResults(true);
                     ZipEntry entry = (ZipEntry) e.nextElement();
                     for(String y:x){
-                        if(new ZipEntry(y).isDirectory()){
+                        if(y.endsWith("/")){
                         if(entry.getName().contains(y))
                         unzipEntry(id, zipfile, entry, destinationPath);}
-                    else unzipEntry(id, zipfile, new ZipEntry(y), destinationPath);
                     }
                     i++;
                     publishResults(id, archive.getName(), i * 100 / fileCount, false);
                 } else {
                     stopSelf(id);
                     publishResults(false);
                 }
-            }
+            }for(String y:x){
+                if(!y.endsWith("/")){unzipEntry(id, zipfile, new ZipEntry(y), destinationPath);}}
             Intent intent = new Intent("loadlist");
             sendBroadcast(intent);
             return true;

File: src/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -84,7 +84,7 @@ protected ArrayList<ZipObj> doInBackground(File... params) {
                         zipViewer.results = true;
                         strings.add(entry.getName());
                     }else {
-                        if(entry.getName().startsWith(dir+"/")){
+                        if(entry.getName().startsWith(dir+"/") && entry.getName().length()>dir.length()+1){
                         String path1=entry.getName().substring(dir.length()+1,entry.getName().length());
 
                         int index=dir.length()+1+path1.indexOf("/");

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -45,6 +45,7 @@
 import com.amaze.filemanager.services.asynctasks.ZipHelperTask;
 import com.amaze.filemanager.utils.Futils;
 import com.amaze.filemanager.utils.IconUtils;
+import com.amaze.filemanager.utils.ZipObj;
 import com.melnykov.fab.FloatingActionButton;
 
 import java.io.File;
@@ -69,7 +70,7 @@ public class ZipViewer extends ListFragment {
 SharedPreferences Sp;
     ZipViewer zipViewer=this;
     public ArrayList<ZipEntry> wholelist=new ArrayList<ZipEntry>();
-public     ArrayList<ZipEntry> elements = new ArrayList<ZipEntry>();
+public     ArrayList<ZipObj> elements = new ArrayList<ZipObj>();
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
@@ -187,7 +188,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
                         Intent intent = new Intent(getActivity(), ExtractService.class);
                         ArrayList<String> a=new ArrayList<String>();
                         for(int i:zipAdapter.getCheckedItemPositions()){
-                            a.add(elements.get(i).getName());
+                            a.add(elements.get(i).getEntry().getName());
                         }
                        intent.putExtra("zip",f.getPath());
                         intent.putExtra("entries1",true);

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -246,7 +246,7 @@ public void onClick(View view) {
 
                     GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
                     if(main.coloriseIcons){
-                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor("#757575"));
+                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor(main.skin));
                         else if(Icons.isVideo(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#f06292"));
                         else if(Icons.isAudio(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#9575cd"));
                         else if(Icons.isPdf(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#da4336"));
@@ -342,7 +342,7 @@ else if (Icons.isApk((rowItem.getDesc()))) {
             }
             if(main.coloriseIcons){
 
-                if(new File(rowItem.getDesc()).isDirectory())holder.imageView.setColorFilter(Color.parseColor("#9e9e9e"));
+                if(new File(rowItem.getDesc()).isDirectory())holder.imageView.setColorFilter(Color.parseColor(main.skin));
 
                 else if(Icons.isVideo(rowItem.getDesc()))holder.imageView.setColorFilter(Color.parseColor("#f06292"));
 

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -186,9 +186,10 @@ public boolean onOptionsItemSelected(MenuItem menu) {
     File f;
     public void writeTextFile(String fileName, String s) {
        f = new File(fileName);
+        mOriginal=s;
        final String s1=s;
         if(!file.canWrite()){f=new File(this.getFilesDir()+"/"+f.getName());}
-
+        Toast.makeText(c,R.string.saving,Toast.LENGTH_SHORT).show();
         new Thread(new Runnable() {
             @Override
             public void run() {
@@ -227,7 +228,6 @@ public void onPreExecute() {
             p.setVisibility(View.VISIBLE);
         }
 
-        boolean editable = true;
         @Override
         public void onProgressUpdate(String... x){
 Toast.makeText(c,R.string.cant_read_file,Toast.LENGTH_SHORT).show();    }

File: src/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -151,10 +151,10 @@ public void onSelection(MaterialDialog dialog, View view, int which, String text
                        sharedPref.edit().putString("theme", "" + which).commit();
                         if(which!=0)
                             sharedPref.edit().putString("uimode","0").commit();
-
+                        dialog.dismiss();
                         restartPC(getActivity());}
                 });
-                a.title(R.string.sortby);
+                a.title(R.string.theme);
                 a.build().show();
                 return true;
             }

File: src/com/amaze/filemanager/utils/HistoryManager.java
Patch:
@@ -47,7 +47,7 @@ public ArrayList<String> readTable() {
             try {
                 paths.add(c.getString(c.getColumnIndex("PATH")));
             } catch (Exception e) {
-                e.printStackTrace();
+     //           e.printStackTrace();
             }
         } while (c.moveToPrevious());
         return paths;

File: src/com/amaze/filemanager/adapters/BooksAdapter.java
Patch:
@@ -93,6 +93,7 @@ public void onClick(View p1) {
                     s.removeS(items.get(p), context);
                     items.remove(p);
                     notifyDataSetChanged();
+           b.m.updateDrawer();
                 } catch (Exception e) {
                     Toast.makeText(context, e + "", Toast.LENGTH_LONG).show();
                 }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1022,6 +1022,7 @@ public void onNegative(MaterialDialog materialDialog) {
                             } catch (Exception e) {
                             }
                         }}
+                    mainActivity.updateDrawer();
                     Toast.makeText(getActivity(), utils.getString(getActivity(), R.string.bookmarksadded), Toast.LENGTH_LONG).show();
                     mode.finish();
                     return true;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -803,7 +803,7 @@ public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
                     showOption(R.id.ex, menu);
 
                     hideOption(R.id.sethome, menu);
-
+                    showOption(R.id.openwith,menu);
                     showOption(R.id.share, menu);
 
                 } else {

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -175,13 +175,13 @@ public boolean onLongClick(View p1) {
             });
 
 
-            final Animation animation = AnimationUtils.loadAnimation(context, R.anim.holder_anim);
 
             holder.txtTitle.setText(rowItem.getTitle());
             holder.imageView.setImageDrawable(rowItem.getImageId());
             holder.imageView.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
+                    final Animation animation = AnimationUtils.loadAnimation(context, R.anim.holder_anim);
                     if (!rowItem.getSize().equals(main.goback)) {
                         holder.imageView.setAnimation(animation);
                         toggleChecked(p);

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -51,8 +51,6 @@ public class ZipAdapter extends ArrayAdapter<ZipEntry> {
     Drawable folder, unknown;
     ArrayList<ZipEntry> enter;
     ZipViewer zipViewer;
-    StringBuilder stringBuilder1;
-
     public ZipAdapter(Context c, int id, ArrayList<ZipEntry> enter, ZipViewer zipViewer) {
         super(c, id, enter);
         this.enter = enter;
@@ -123,7 +121,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
         holder.rl.setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View view) {
-                try {
+                try {Toast.makeText(zipViewer.getActivity(), new Futils().getString(zipViewer.getActivity(),R.string.extracting),Toast.LENGTH_SHORT).show();
                     ZipFile zipFile = new ZipFile(zipViewer.f);
                     new ZipExtractTask(zipFile, zipViewer.f.getParent(), zipViewer,stringBuilder.toString().substring(stringBuilder.toString().lastIndexOf("/") + 1),false).execute(rowItem);
                 } catch (IOException e) {

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -194,9 +194,9 @@ protected ArrayList<File> doInBackground(Void... params) {
             try {
 
                 bx = s.readS();
-            } catch (IOException e) {
-            } catch (SAXException e) {
-            } catch (ParserConfigurationException e) {
+                if(bx==null || bx.size()==0)s.makeS();
+                bx=s.readS();
+            } catch (Exception e) {
             }
             return bx;
         }

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -62,7 +62,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         year=(""+calendar.get(Calendar.YEAR)).substring(2,4);
         skin = Sp.getString("skin_color", "#5677fc");
         ((TextView) getActivity().findViewById(R.id.title)).setText(f.getName());
-
+        getListView().setDividerHeight(0);
         FloatingActionButton floatingActionButton = (FloatingActionButton) getActivity().findViewById(R.id.fab);
         floatingActionButton.hide(true);
 

File: src/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -197,10 +197,7 @@ private void compressFile(int id, File file, String path) throws IOException {
                 byte[] buf = new byte[1024];
                 int len;
                 FileInputStream in = new FileInputStream(file);
-                if (path.length() > 0)
                     zos.putNextEntry(new ZipEntry(path + "/" + file.getName()));
-                else
-                    zos.putNextEntry(new ZipEntry(file.getName()));
                 while ((len = in.read(buf)) > 0) {
                     if (hash.get(id)) {
                         zos.write(buf, 0, len);

File: src/com/amaze/filemanager/fragments/ZipViewer.java
Patch:
@@ -48,7 +48,7 @@ public class ZipViewer extends ListFragment {
     public String current;
     public Futils utils=new Futils();
     public String skin,year;
-    public boolean coloriseIcons;
+    public boolean coloriseIcons,showSize,showLastModified;
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
@@ -57,7 +57,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 SharedPreferences Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         coloriseIcons=Sp.getBoolean("coloriseIcons",false);
         Calendar calendar = Calendar.getInstance();
-        int hour = calendar.get(Calendar.HOUR_OF_DAY);
+        showSize=Sp.getBoolean("showFileSize",false);
+        showLastModified=Sp.getBoolean("showLastModified",true);
         year=(""+calendar.get(Calendar.YEAR)).substring(2,4);
         skin = Sp.getString("skin_color", "#5677fc");
         ((TextView) getActivity().findViewById(R.id.title)).setText(f.getName());

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -246,7 +246,7 @@ public void onClick(View view) {
 
                     GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
                     if(main.coloriseIcons){
-                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor("#9e9e9e"));
+                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor("#757575"));
                         else if(Icons.isVideo(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#f06292"));
                         else if(Icons.isAudio(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#9575cd"));
                         else if(Icons.isPdf(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#da4336"));

File: src/com/amaze/filemanager/services/asynctasks/ZipHelperTask.java
Patch:
@@ -50,7 +50,7 @@ protected ArrayList<ZipEntry> doInBackground(File... params) {
             for (Enumeration e = zipfile.entries(); e.hasMoreElements(); ) {
                 ZipEntry entry = (ZipEntry) e.nextElement();
                 i++;
-                String s = entry.getName().toString();
+                //String s = entry.getName().toString();
                 File file = new File(entry.getName());
                 if (counter==0) {
                     if (file.getParent() == null) {
@@ -59,7 +59,7 @@ protected ArrayList<ZipEntry> doInBackground(File... params) {
                     }
                 } else if (counter==1) {
 
-                    Log.d("Test", dir);
+                    //Log.d("Test", dir);
                     if (file.getParent()!=null && file.getParent().equals(dir)) {
                         elements.add(entry);
                         zipViewer.results = true;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -366,7 +366,7 @@ public void onClick(View view) {
         if (savedInstanceState == null){
             if(Intentpath!=null){File file1=new File(Intentpath);
             if(file1.isDirectory())loadlist(file1,false);
-                else {utils.openFile(f,(MainActivity)getActivity());
+                else {utils.openFile(file1,mainActivity);
             loadlist(f,false);}
             }else
             loadlist(f, false);}
@@ -1540,7 +1540,7 @@ public float[] calculatevalues(String color){
         //on Home screen
         Intent shortcutIntent = new Intent(getActivity().getApplicationContext(),
                 MainActivity.class);
-        shortcutIntent.putExtra("path", path);
+        shortcutIntent.putExtra("path", path.getDesc());
         shortcutIntent.setAction(Intent.ACTION_MAIN);
 
         Intent addIntent = new Intent();

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -459,7 +459,7 @@ public void openFile(final File f, final MainActivity m) {
             Intent i = new Intent(m, TextReader.class);
             i.putExtra("path", f.getPath());
             m.startActivity(i);
-        } else if (Icons.isArchive(f.getPath())) {
+        } else if (f.getName().toLowerCase().endsWith(".zip")) {
             m.select=-2;
             FragmentTransaction fragmentTransaction = m.getSupportFragmentManager().beginTransaction();
             Fragment fragment = new ZipViewer();

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -105,7 +105,7 @@ public class MainActivity extends android.support.v4.app.FragmentActivity {
     private boolean backPressedToExitOnce = false;
     private Toast toast = null;
     private DrawerLayout mDrawerLayout;
-    private ListView mDrawerList;
+    public ListView mDrawerList;
     SharedPreferences Sp;
     private ActionBarDrawerToggle mDrawerToggle;
     public Spinner tabsSpinner;
@@ -126,7 +126,7 @@ public class MainActivity extends android.support.v4.app.FragmentActivity {
     public boolean mReturnIntent = false;
     private Intent intent;
     private static final Pattern DIR_SEPARATOR = Pattern.compile("/");
-    private ArrayList<String> list;
+    public ArrayList<String> list;
     public int theme1;
     private EasyTracker easyTracker = null;
     boolean rootmode;
@@ -240,6 +240,7 @@ public void onClick(View view) {
         mDrawerLinear = (RelativeLayout) findViewById(R.id.left_drawer);
         mDrawerLayout = (DrawerLayout) findViewById(R.id.drawer_layout);
         mDrawerList = (ListView) findViewById(R.id.menu_drawer);
+
         list = new ArrayList<String>();
         for (int i = 0; i < val.size(); i++) {
             File file = new File(val.get(i));

File: src/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -119,6 +119,7 @@ public void onClick(View p1) {
             // TODO: Implement this method
 
         });
+
         float[] src = {
 
                 color[0], 0, 0, 0, 0,

File: src/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -32,6 +32,7 @@
 import android.widget.ArrayAdapter;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
 import android.widget.TextView;
 
 import com.amaze.filemanager.R;
@@ -109,7 +110,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
         View rowView = inflater.inflate(R.layout.drawerrow, parent, false);
         TextView textView = (TextView) rowView.findViewById(R.id.firstline);
         ImageView imageView = (ImageView) rowView.findViewById(R.id.icon);
-        LinearLayout l = (LinearLayout) rowView.findViewById(R.id.second);
+        RelativeLayout l = (RelativeLayout) rowView.findViewById(R.id.second);
         l.setOnClickListener(new View.OnClickListener() {
 
             public void onClick(View p1) {

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -438,7 +438,7 @@ public void openFile(final File f, final MainActivity m) {
             Intent i = new Intent(m, TextReader.class);
             i.putExtra("path", f.getPath());
             m.startActivity(i);
-        } else if (Icons.isArchive(f.getPath())) {
+        } /*else if (Icons.isArchive(f.getPath())) {
             m.select=-2;
             FragmentTransaction fragmentTransaction = m.getSupportFragmentManager().beginTransaction();
             Fragment fragment = new ZipViewer();
@@ -449,7 +449,7 @@ public void openFile(final File f, final MainActivity m) {
             //fragmentTransaction.addToBackStack(null);
             fragmentTransaction.commit();
 
-        } else {
+        }*/ else {
             try {
                 openunknown(f, m);
             } catch (Exception e) {

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -134,14 +134,14 @@ public class MainActivity extends android.support.v4.app.FragmentActivity {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
+        Sp = PreferenceManager.getDefaultSharedPreferences(this);
         utils = new Futils();
         s=new Shortcuts(this);
         // Google Analytics
         // Get a Tracker (should auto-report)
         //((Amaze) getApplication()).getTracker(Amaze.TrackerName.APP_TRACKER);
         easyTracker = EasyTracker.getInstance(this);
         val = getStorageDirectories();
-        Sp = PreferenceManager.getDefaultSharedPreferences(this);
         rootmode = Sp.getBoolean("rootmode", false);
         theme = Integer.parseInt(Sp.getString("theme", "0"));
         util = new IconUtils(Sp, this);
@@ -401,7 +401,7 @@ public  List<String> getStorageDirectories() {
             // All Secondary SD-CARDs splited into array
             final String[] rawSecondaryStorages = rawSecondaryStoragesStr.split(File.pathSeparator);
             Collections.addAll(rv, rawSecondaryStorages);
-        }
+        }rootmode = Sp.getBoolean("rootmode", false);
         if(rootmode)
             rv.add("/");
         try {

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -789,6 +789,9 @@ public void showDialog() {
                 x.positiveText(R.string.skip);
                 x.negativeText(R.string.overwrite);
                 x.neutralText(R.string.cancel);
+                x.positiveColor(Color.parseColor(skin));
+                x.negativeColor(Color.parseColor(skin));
+                x.neutralColor(Color.parseColor(skin));
                 x.callback(new MaterialDialog.Callback() {
                     @Override
                     public void onPositive(MaterialDialog materialDialog) {

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -155,7 +155,7 @@ public class Main extends android.support.v4.app.Fragment {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
-        skin = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString("skin_color", "#5677fc");
+        skin = Sp.getString("skin_color", "#5677fc");
         sh = new Shortcuts(getActivity());
         aBoolean = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -126,7 +126,7 @@ public void onReceive(Context arg0, Intent arg1) {
                             boolean move = b.getBoolean("move", false);
                             String text = utils.getString(getActivity(), R.string.copying) + "\n" + name + "\n" + utils.readableFileSize(done) + "/" + utils.readableFileSize(total) + "\n" + p1 + "%";
                             if (move) {
-                                text = utils.getString(getActivity(), R.string.copying) + "\n" + name + "\n" + utils.readableFileSize(done) + "/" + utils.readableFileSize(total) + "\n" + p1 + "%";
+                                text = utils.getString(getActivity(), R.string.moving) + "\n" + name + "\n" + utils.readableFileSize(done) + "/" + utils.readableFileSize(total) + "\n" + p1 + "%";
                             }
                             ((TextView) process.findViewById(R.id.progressText)).setText(text);
                             ProgressBar p = (ProgressBar) process.findViewById(R.id.progressBar1);

File: src/com/amaze/filemanager/services/asynctasks/SearchTask.java
Patch:
@@ -57,6 +57,7 @@ public void onPreExecute() {
         a = new MaterialDialog.Builder(m);
         a.title(futils.getString(tab.getActivity(), R.string.searching));
         a.positiveText(futils.getString(tab.getActivity(), R.string.cancel));
+        a.positiveColor(Color.parseColor(m.skin));
         a.callback(new MaterialDialog.Callback() {
             @Override
             public void onPositive(MaterialDialog materialDialog) {

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -53,7 +53,7 @@ public ZipAdapter(Context c, int id, ArrayList<ZipEntry> enter, ZipViewer zipVie
         super(c, id, enter);
         this.enter = enter;
         this.c = c;
-        folder = c.getResources().getDrawable(R.drawable.ic_grid_folder1);
+        folder = c.getResources().getDrawable(R.drawable.folder);
         unknown = c.getResources().getDrawable(R.drawable.ic_doc_generic_am);
         this.zipViewer = zipViewer;
     }

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -64,6 +64,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                 container, false);
         setRetainInstance(false);
 
+        getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.search).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.fab).setVisibility(View.GONE);

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -504,7 +504,7 @@ public void showSortDialog(final Main m) {
         String[] sort = m.getResources().getStringArray(R.array.sortby);
         int current = Integer.parseInt(m.Sp.getString("sortby", "0"));
         MaterialDialog.Builder a = new MaterialDialog.Builder(m.getActivity());
-        if(m.theme1==1)a.theme(Theme.DARK);
+        a.positiveText(R.string.cancel);if(m.theme1==1)a.theme(Theme.DARK);
         a.items(sort).itemsCallbackSingleChoice(current, new MaterialDialog.ListCallback() {
             @Override
             public void onSelection(MaterialDialog dialog, View view, int which, String text) {
@@ -515,8 +515,7 @@ public void onSelection(MaterialDialog dialog, View view, int which, String text
                 dialog.cancel();
             }
         });
-        a.title( R.string.sortby);
-        a.negativeText( R.string.cancel);
+        a.title(R.string.sortby);
         a.build().show();
     }
 

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -57,6 +57,7 @@
 
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.afollestad.materialdialogs.Theme;
 import com.amaze.filemanager.R;
 import com.amaze.filemanager.adapters.DrawerAdapter;
 import com.amaze.filemanager.database.Tab;
@@ -773,7 +774,7 @@ public void showDialog() {
                 textView.setText(utils.getString(con,R.string.fileexist) + new File(a.get(counter)).getName());
                 // checkBox
                 final CheckBox checkBox = (CheckBox) view.findViewById(R.id.checkBox);
-
+                if(theme1==1)x.theme(Theme.DARK);
                 x.title(utils.getString(con, R.string.paste));
                 x.positiveText(R.string.skip);
                 x.negativeText(R.string.overwrite);

File: src/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -31,10 +31,10 @@ public class HiddenAdapter extends ArrayAdapter<File> {
     Main context;Context c;
     public ArrayList<File> items;
     HistoryManager hidden;
-    MaterialDialog.Builder materialDialog;
+    MaterialDialog materialDialog;
     ///	public HashMap<Integer, Boolean> myChecked = new HashMap<Integer, Boolean>();
 
-    public HiddenAdapter(Context c,Main context, int resourceId, ArrayList<File> items,HistoryManager hidden,MaterialDialog.Builder materialDialog) {
+    public HiddenAdapter(Context c,Main context, int resourceId, ArrayList<File> items,HistoryManager hidden,MaterialDialog materialDialog) {
         super(c, resourceId, items);
         this.c=c;
         this.context = context;
@@ -89,7 +89,7 @@ public void onClick(View view) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                //materialDialog.dismiss();
+                materialDialog.dismiss();
                 final File f = (items.get(p));
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1301,9 +1301,6 @@ public boolean onMenuItemClick(MenuItem item) {
                     case R.id.history:
                         utils.showHistoryDialog(ma);
                         break;
-                    case R.id.book:
-                        utils.showBookmarkDialog(ma, sh);
-                        break;
                     case R.id.item3:
                         getActivity().finish();
                         break;

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -269,8 +269,9 @@ public void onClick(View view) {
                 holder.date.setText(rowItem.getDate("MMM dd, yyyy",main.year));
             if (main.showSize){
                 String size=rowItem.getSize();
-                if(size.equals(main.goback))
+                if(size.equals(main.goback)){
                     holder.date.setText(size);
+                holder.txtDesc.setText("");}
                     else
                 holder.txtDesc.setText(rowItem.getSize());}
             return view;

File: src/com/amaze/filemanager/services/asynctasks/MoveFiles.java
Patch:
@@ -27,6 +27,7 @@
 
 import com.amaze.filemanager.fragments.Main;
 import com.amaze.filemanager.services.CopyService;
+import com.amaze.filemanager.utils.Futils;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -57,7 +58,7 @@ public void onPostExecute(Boolean b){
         if(b && ma!=null){if(ma.current.equals(path))ma.updateList();}
         if(!b){
             Intent intent = new Intent(context, CopyService.class);
-            intent.putExtra("FILE_PATHS", files);
+            intent.putExtra("FILE_PATHS", new Futils().toStringArray(files));
             intent.putExtra("COPY_DIRECTORY", path);
             context.startService(intent);}
     }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -294,7 +294,7 @@ public void onClick(View view) {
         getSortModes();
         darkimage=res.getDrawable(R.drawable.ic_doc_image_dark);
         darkvideo=res.getDrawable(R.drawable.ic_doc_video_dark);
-        home = Sp.getString("home", mainActivity.val[mainActivity.select]);
+        home = Sp.getString("home", mainActivity.val.get(mainActivity.select));
         this.setRetainInstance(false);
         int pos = Sp.getInt("spinner_selected", 0);
         String path=content.get(pos).getPath();

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -645,7 +645,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
             }
             if(!f.getPath().equals("/")){
                 if(bitmap.size()==0 || !bitmap.get(0).getSize().equals(goback))
-                    bitmap.add(0,utils.newElement(folder,"...", "","",goback,true));
+                    bitmap.add(0,utils.newElement(res.getDrawable(R.drawable.abc_ic_ab_back_mtrl_am_alpha),"...", "","",goback,true));
             }
             adapter = new MyAdapter(getActivity(), R.layout.rowlayout,
                     bitmap, ma);

File: src/com/amaze/filemanager/adapters/BooksAdapter.java
Patch:
@@ -36,7 +36,7 @@
 import java.io.File;
 import java.util.ArrayList;
 public class BooksAdapter extends ArrayAdapter<File> {
-    Shortcuts s = new Shortcuts();
+    Shortcuts s;
     Activity context;
     public ArrayList<File> items;
     BookmarksManager b;
@@ -47,6 +47,7 @@ public BooksAdapter(Activity context, int resourceId, ArrayList<File> items, Boo
         this.context = context;
         this.items = items;
         this.b = b;
+        s = new Shortcuts(context);
     }
 
 

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -39,7 +39,7 @@
 import java.util.ArrayList;
 
 public class DialogAdapter extends ArrayAdapter<File> {
-    Shortcuts s = new Shortcuts();
+    Shortcuts s;
     Activity context;
     Main m;
     public ArrayList<File> items;
@@ -52,6 +52,7 @@ public DialogAdapter(Main m,Activity context, int resourceId, ArrayList<File> it
         this.items = items;
         this.m=m;
         this.materialDialog=materialDialog;
+        s = new Shortcuts(context);
     }
 
 

File: src/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -129,6 +129,9 @@ public void onClick(View p1) {
         ColorMatrixColorFilter colorMatrixColorFilter = new ColorMatrixColorFilter(colorMatrix);
         if(values.get(position).equals("/storage/emulated/0"))
             textView.setText(futils.getString(context,R.string.storage));
+        else if(values.get(position).equals("/")){
+            textView.setText(R.string.rootdirectory);
+        }
         else {
             if (position != values.size() - 1 && position != values.size() - 2){
                 textView.setText(new File(values.get(position)).getName());

File: src/com/amaze/filemanager/adapters/HiddenAdapter.java
Patch:
@@ -27,7 +27,7 @@
  * Created by Arpit on 16-11-2014.
  */
 public class HiddenAdapter extends ArrayAdapter<File> {
-    Shortcuts s = new Shortcuts();
+    Shortcuts s;
     Main context;Context c;
     public ArrayList<File> items;
     HistoryManager hidden;
@@ -41,7 +41,7 @@ public HiddenAdapter(Context c,Main context, int resourceId, ArrayList<File> ite
         this.items = items;
         this.hidden=hidden;
         this.materialDialog=materialDialog;
-
+        s = new Shortcuts(c);
     }
 
 

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -56,7 +56,7 @@
 
 public class BookmarksManager extends ListFragment {
     Futils utils = new Futils();
-    Shortcuts s = new Shortcuts();
+    Shortcuts s;
     BooksAdapter b;
     SharedPreferences Sp;
     public IconUtils icons;
@@ -67,6 +67,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(false);
         setRetainInstance(false);
+        s = new Shortcuts(getActivity());
         Calendar calendar = Calendar.getInstance();
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         int hour = calendar.get(Calendar.HOUR_OF_DAY);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -111,7 +111,7 @@ public class Main extends android.support.v4.app.Fragment {
     public int sortby, dsort, asc;
     public int uimode;
     public String home, current = Environment.getExternalStorageDirectory().getPath();
-    Shortcuts sh = new Shortcuts();
+    Shortcuts sh;
     HashMap<String, Bundle> scrolls = new HashMap<String, Bundle>();
     Main ma = this;
     public HistoryManager history,hidden;
@@ -150,7 +150,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         skin = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString("skin_color", "#5677fc");
-
+        sh = new Shortcuts(getActivity());
         aBoolean = Sp.getBoolean("view", true);
         Calendar calendar = Calendar.getInstance();
         int hour = calendar.get(Calendar.HOUR_OF_DAY);
@@ -682,7 +682,7 @@ public void createViews(ArrayList<Layoutelements> bitmap, boolean back, File f)
                         listView.setSelectionFromTop(b.getInt("index"), b.getInt("top"));
                     }
                 }
-                bbar(current);} catch (Exception e) {
+                bbar(current);mainActivity.updateDrawer(current);} catch (Exception e) {
             }
         }
         else{//Toast.makeText(getActivity(),res.getString(R.string.error),Toast.LENGTH_LONG).show();

File: src/com/amaze/filemanager/adapters/ZipAdapter.java
Patch:
@@ -49,6 +49,7 @@ public class ZipAdapter extends ArrayAdapter<ZipEntry> {
     ArrayList<ZipEntry> enter;
     ZipViewer zipViewer;
     Futils futils;
+    StringBuilder stringBuilder1;
 
     public ZipAdapter(Context c, int id, ArrayList<ZipEntry> enter, ZipViewer zipViewer) {
         super(c, id, enter);
@@ -104,7 +105,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
             if (file.getParent()!=null){
 
                 String parentLength = file.getParent();
-                StringBuilder stringBuilder1 = new StringBuilder(rowItem.getName());
+                stringBuilder1 = new StringBuilder(rowItem.getName());
                 stringBuilder1.delete(0, parentLength.length()+1);
                 holder.txtTitle.setText(stringBuilder1.toString());
             } else {
@@ -135,7 +136,7 @@ public void onClick(View p1) {
 
                     try {
                         ZipFile zipFile = new ZipFile(zipViewer.f);
-                        new ZipExtractTask(zipFile, zipViewer.f.getParent(), zipViewer).execute(rowItem);
+                        new ZipExtractTask(zipFile, zipViewer.f.getParent(), zipViewer, stringBuilder1.toString()).execute(rowItem);
                     } catch (IOException e) {
                         e.printStackTrace();
                     }

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -27,6 +27,7 @@
 import android.content.pm.PackageManager;
 import android.net.Uri;
 import android.os.AsyncTask;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.Environment;
 import android.preference.PreferenceManager;
@@ -137,7 +138,7 @@ public void onClick(DialogInterface p1, int p2) {
                         Intent intent = new Intent(getActivity(), CopyService.class);
                         Toast.makeText(getActivity(), f.getParent(), Toast.LENGTH_LONG).show();
 
-                        if (!f.getParent().equals("/data/app") || !f.getParent().equals("/system/app") || !f.getParent().equals("/system/priv-app")) {
+                        if (Build.VERSION.SDK_INT == 21) {
                             a.add(f.getParent());
                         } else {
                             a.add(f.getPath());

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -250,6 +250,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setHasOptionsMenu(false);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.VISIBLE);
 
+        Animation animation1 = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
+        getActivity().findViewById(R.id.fab).setAnimation(animation1);
+
         content = tabHandler.getAllTabs();
         list1 = new ArrayList<String>();
 

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -90,7 +90,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-          // materialDialog.build().dismiss();
                 final File f = items.get(p);
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -72,12 +72,11 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
-        getActivity().findViewById(R.id.pink_icon).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.bookadd).setVisibility(View.GONE);
         getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.search).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.search).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.fab).setVisibility(View.GONE);
         vl=getListView();
 
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -65,9 +65,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         setRetainInstance(false);
 
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.pink_icon).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.bookadd).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.paste).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
+        getActivity().findViewById(R.id.fab).setVisibility(View.GONE);
         rootView = (LinearLayout) root.findViewById(R.id.secondbut);
         getActivity().getActionBar().setSubtitle(utils.getString(getActivity(),R.string.processes));
         ((LinearLayout) getActivity().findViewById(R.id.buttons))

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -90,7 +90,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-          // materialDialog.build().dismiss();
                 final File f = items.get(p);
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -72,12 +72,11 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
-        getActivity().findViewById(R.id.pink_icon).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.bookadd).setVisibility(View.GONE);
         getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.search).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.search).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.fab).setVisibility(View.GONE);
         vl=getListView();
 
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -65,9 +65,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
         setRetainInstance(false);
 
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.pink_icon).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.bookadd).setVisibility(View.GONE);
-        getActivity().findViewById(R.id.paste).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.paste).setVisibility(View.INVISIBLE);
+        getActivity().findViewById(R.id.fab).setVisibility(View.GONE);
         rootView = (LinearLayout) root.findViewById(R.id.secondbut);
         getActivity().getActionBar().setSubtitle(utils.getString(getActivity(),R.string.processes));
         ((LinearLayout) getActivity().findViewById(R.id.buttons))

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -956,10 +956,10 @@ public void onClick(DialogInterface p1, int p2) {
                     mode.finish();
                     return true;
                 case R.id.openwith:
-                    if (results)utils.openWith(new File(slist.get(
+                    if (results)utils.openunknown(new File(slist.get(
                             (plist.get(0))).getDesc()), getActivity());
                     else
-                        utils.openWith(new File(list.get(
+                        utils.openunknown(new File(list.get(
                                 (plist.get(0))).getDesc()), getActivity());
                     mode.finish();
                     return true;

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -209,7 +209,7 @@ public void onClick(View view) {
         tabHandler = new TabHandler(this, "", null, 1);
         if (Sp.getBoolean("firstrun", true)) {
             try {
-                s.makeS();
+                s.makeS(this);
             } catch (Exception e) {
             }
 
@@ -727,7 +727,7 @@ public void showDialog() {
                         startService(intent);
                     } else{
 
-                        new MoveFiles(utils.toFileArray(ab), ma).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, path);
+                        new MoveFiles(utils.toFileArray(ab), ma,ma.getActivity()).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, path);
                     }
                 } else {
 

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -90,6 +90,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
+          // materialDialog.build().dismiss();
                 final File f = items.get(p);
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -230,8 +230,7 @@ public void onClick(View view) {
                     main.ic.cancelLoad(holder.viewmageV);
                     main.ic.loadDrawable(holder.viewmageV, new File(rowItem.getDesc()), null);
                 }
-                System.out.println("Video: "+rowItem.getDesc());
-            }
+             }
             else{holder.viewmageV.setVisibility(View.GONE);
             holder.apk.setVisibility(View.GONE);}
 
@@ -326,7 +325,6 @@ else if (Icons.isApk((rowItem.getDesc()))) {
                 main.ic.cancelLoad(holder.imageView);
                 main.ic.loadDrawable(holder.imageView,new File(rowItem.getDesc()),null);
             } if(Icons.isVideo(rowItem.getDesc())){
-                System.out.println("Video: "+rowItem.getDesc());
                 holder.imageView.setColorFilter(null);
                 holder.imageView1.setVisibility(View.VISIBLE);
                 holder.imageView1.setImageDrawable(null);

File: src/com/amaze/filemanager/utils/Shortcuts.java
Patch:
@@ -20,6 +20,7 @@
 package com.amaze.filemanager.utils;
 
 import android.app.Activity;
+import android.content.Context;
 import android.os.Environment;
 import android.widget.Toast;
 
@@ -48,10 +49,10 @@ public class Shortcuts {
     public Shortcuts() {
     }
 
-    public void makeS() throws ParserConfigurationException, TransformerException {
+    public void makeS(Context context) throws ParserConfigurationException, TransformerException {
         String sd = Environment.getExternalStorageDirectory() + "/";
         String[] a = new String[]{sd + Environment.DIRECTORY_DCIM, sd + Environment.DIRECTORY_DOWNLOADS, sd + Environment.DIRECTORY_MOVIES, sd + Environment.DIRECTORY_MUSIC, sd + Environment.DIRECTORY_PICTURES};
-        File g = new File("/data/data/com.amaze.filemanager/shortcut.xml");
+        File g = new File(context.getFilesDir()+"/shortcut.xml");
         if (!g.exists()) {
             DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
             DocumentBuilder docBuilder = docFactory.newDocumentBuilder();

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -90,7 +90,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-//                materialDialog.dismiss();
                 final File f = items.get(p);
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/adapters/DialogAdapter.java
Patch:
@@ -90,7 +90,6 @@ public View getView(int position, View convertView, ViewGroup parent) {
         holder.row.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-//                materialDialog.dismiss();
                 final File f = items.get(p);
                 if (f.isDirectory()) {
 

File: src/com/amaze/filemanager/utils/FileListSorter.java
Patch:
@@ -70,7 +70,7 @@ public int compare(Layoutelements file1, Layoutelements file2) {
             if (f1.isFile() && f2.isFile()) {
                 return asc * Long.valueOf(f1.length()).compareTo(Long.valueOf(f2.length()));
             } else {
-                return asc * f1.getName().compareToIgnoreCase(f2.getName());
+                return f1.getName().compareToIgnoreCase(f2.getName());
             }
         }
         else if(sort ==3){
@@ -79,12 +79,12 @@ else if(sort ==3){
             final String ext_b = getExtension(f2.getName());
 
 
-            final int res = ext_a.compareTo(ext_b);
+            final int res = asc*ext_a.compareTo(ext_b);
             if (res == 0) {
                 return asc * f1.getName().compareToIgnoreCase(f2.getName());
             }
             return res;}
-            else{return asc * f1.getName().compareToIgnoreCase(f2.getName());}
+            else{return  f1.getName().compareToIgnoreCase(f2.getName());}
         }
 
 

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -85,7 +85,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
                 startActivity(in);
                 return true;
 
-
         }
         return true;
     }

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -56,7 +56,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.lang.reflect.Array;
 import java.text.DecimalFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -56,7 +56,6 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.lang.reflect.Array;
 import java.text.DecimalFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -142,7 +142,7 @@ public class Main extends android.support.v4.app.Fragment {
     private TabSpinnerAdapter tabSpinnerAdapter;
     public float[] color;
     public ColorMatrixColorFilter colorMatrixColorFilter;
-    Animation animation;
+    Animation animation,animation1;
     public String year,goback;
     FloatingActionsMenu floatingActionsMenu;
     ArrayList<String> hiddenfiles;
@@ -191,7 +191,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         goback=res.getString(R.string.goback);
         apk=res.getDrawable(R.drawable.ic_doc_apk_grid);
          animation = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
-        if(theme1==1) {
+         animation1 = AnimationUtils.loadAnimation(getActivity(), R.anim.load_list_anim);
+         if(theme1==1) {
             rootView.findViewById(R.id.main_frag).setBackgroundColor(getResources().getColor(android.R.color.background_dark));
         }if (aBoolean) {
             listView.setVisibility(View.VISIBLE);
@@ -598,7 +599,6 @@ public void loadlist(final File f, boolean back) {
         if(mActionMode!=null){mActionMode.finish();}
         new LoadList(back, ma).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, (f));
 
-        Animation animation = AnimationUtils.loadAnimation(getActivity(), R.anim.load_list_anim);
         listView.setAnimation(animation);
         gridView.setAnimation(animation);
 

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1032,7 +1032,7 @@ public boolean onLongClick(View view) {
             TextView textView = (TextView)pathbar.findViewById(R.id.pathname);
             String used = utils.readableFileSize(f.getTotalSpace()-f.getFreeSpace());
             String free = utils.readableFileSize(f.getFreeSpace());
-            textView.setText(res.getString(R.string.used) + used + res.getString(R.string.free) + free);
+            textView.setText(res.getString(R.string.used)+" " + used +" "+ res.getString(R.string.free)+" " + free);
 
             TextView bapath=(TextView)pathbar.findViewById(R.id.fullpath);
             bapath.setAllCaps(true);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -181,7 +181,7 @@ public void onClick(View view) {
             Toast.makeText(this, "Pick a file", Toast.LENGTH_LONG).show();
         }
 
-        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#673ab7");
+        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#5677fc");
         RelativeLayout linearLayout = (RelativeLayout) findViewById(R.id.action_bar);
         linearLayout.setBackgroundColor(Color.parseColor(skin));
         LinearLayout linearLayout1 = (LinearLayout) findViewById(R.id.pathbar);

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -59,7 +59,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
 
-        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#673ab7");
+        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#5677fc");
         getActionBar().setIcon(R.drawable.ic_launcher1);
         getActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         getActionBar().setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);

File: src/com/amaze/filemanager/activities/TextReader.java
Patch:
@@ -61,7 +61,7 @@ public void onCreate(Bundle savedInstanceState) {
         ma = (EditText) findViewById(R.id.fname);
         p = (ProgressBar) findViewById(R.id.pbar);
         ma.setVisibility(View.GONE);
-        String skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#673ab7");
+        String skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#5677fc");
         getActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         if(Build.VERSION.SDK_INT>=19){
             SystemBarTintManager tintManager = new SystemBarTintManager(this);

File: src/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -89,7 +89,7 @@ public boolean onPreferenceChange(Preference p1, Object p2) {
         });
 
         final Preference preference = (Preference) findPreference("skin");
-        final int current = Integer.parseInt(sharedPref.getString("skin", ""+3));
+        final int current = Integer.parseInt(sharedPref.getString("skin", ""+6));
         preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -247,7 +247,7 @@ public void onClick(View view) {
 
                     GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
                     if(main.coloriseIcons){
-                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor(main.skin));
+                        if(new File(rowItem.getDesc()).isDirectory())gradientDrawable.setColor(Color.parseColor("#9e9e9e"));
                         else if(Icons.isVideo(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#f06292"));
                         else if(Icons.isAudio(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#9575cd"));
                         else if(Icons.isPdf(rowItem.getDesc()))gradientDrawable.setColor(Color.parseColor("#da4336"));

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -187,7 +187,6 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
          animation = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
         if(theme1==1) {
             rootView.findViewById(R.id.main_frag).setBackgroundColor(getResources().getColor(android.R.color.background_dark));
-            ((ImageView)getActivity().findViewById(R.id.shadow)).setImageDrawable(res.getDrawable(R.drawable.shadow_dark));
         }if (aBoolean) {
             listView.setVisibility(View.VISIBLE);
             gridView.setVisibility(View.GONE);

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -200,7 +200,7 @@ public String getdate(long f,String form,String year) {
 
         SimpleDateFormat sdf = new SimpleDateFormat(form);
         String date=(sdf.format(f)).toString();
-        if(date.substring(date.length()-2,date.length()).equals("14"))
+        if(date.substring(date.length()-2,date.length()).equals(year))
             date=date.substring(0,date.length()-6);
         return date;
     }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -1034,6 +1034,7 @@ public void onReceive(Context context, Intent intent) {
     };
     public void updateList(){
         computeScroll();
+        ic.cleanup();
         loadlist(new File(current), true);}
 
     public void getSortModes() {

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -67,7 +67,6 @@ public class AppsList extends ListFragment {
     public boolean selection = false;
     public ActionMode mActionMode;
     public ArrayList<ApplicationInfo> c = new ArrayList<ApplicationInfo>();
-    private LruCache<String, Bitmap> mMemoryCache;
    ListView vl;public IconHolder ic;
     ArrayList<Layoutelements> a = new ArrayList<Layoutelements>();
 
@@ -86,8 +85,6 @@ public void onActivityCreated(Bundle savedInstanceState) {
         getActivity().findViewById(R.id.paste).setVisibility(View.GONE);
         final int maxMemory = (int) (Runtime.getRuntime().maxMemory() / 1024);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
-        final int cacheSize = maxMemory / 4;
-        mMemoryCache = new LruCache<String, Bitmap>(cacheSize) {};
         vl=getListView();
 
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
@@ -130,6 +127,7 @@ public void onClick(DialogInterface p1, int p2) {
                         ArrayList<String> a = new ArrayList<String>();
                         a.add(info.publicSourceDir);
                         File dst = new File(Environment.getExternalStorageDirectory().getPath() + "/app_backup");
+                        if(!dst.exists() || !dst.isDirectory())dst.mkdirs();
                         Intent intent = new Intent(getActivity(), CopyService.class);
                         intent.putExtra("FILE_PATHS", a);
                         intent.putExtra("COPY_DIRECTORY", dst.getPath());

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -221,7 +221,7 @@ public void onClick(View view) {
         getActivity().findViewById(R.id.fab2).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                add(2);
+                add(1);
             }
         });
         getActivity().findViewById(R.id.fab3).setOnClickListener(new View.OnClickListener() {

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -705,7 +705,7 @@ public void showDialog() {
 
 
             if (counter == a.size()) {
-                if (lol != null) {
+                if (lol != null && lol.size() != 0) {
                     Intent intent = new Intent(con, CopyService.class);
                     intent.putExtra("FILE_PATHS", lol);
                     intent.putExtra("COPY_DIRECTORY", ma.current);
@@ -755,15 +755,15 @@ protected void onPostExecute(ArrayList<String> strings) {
             super.onPostExecute(strings);
             if (!move) {
 
-                if (b != null) {
+                if (b != null && b.size() != 0) {
 
                     Intent intent = new Intent(con, CopyService.class);
                     intent.putExtra("FILE_PATHS", b);
                     intent.putExtra("COPY_DIRECTORY", ma.current);
                     startService(intent);
                 }
 
-                if (a != null) {
+                if (a != null && a.size() != 0) {
                     showDialog();
                 }
             } else {

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -238,9 +238,6 @@ public void onClick(View view) {
             if (checked != null) {
 
                 if (checked) {
-                    holder.viewmageV.setVisibility(View.GONE);
-                    holder.apk.setVisibility(View.GONE);
-                    holder.imageView.setVisibility(View.VISIBLE);
                     holder.imageView.setImageDrawable(main.getResources().getDrawable(R.drawable.abc_ic_cab_done_holo_dark));
                     GradientDrawable gradientDrawable = (GradientDrawable) holder.imageView.getBackground();
                     gradientDrawable.setColor(Color.parseColor("#757575"));

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -222,7 +222,7 @@ public void onClick(View view) {
             if (Icons.isPicture((rowItem.getDesc().toLowerCase()))) {
                 if(main.showThumbs){holder.imageView.setVisibility(View.GONE);
                 holder.viewmageV.setVisibility(View.VISIBLE);
-                holder.viewmageV.setImageDrawable(rowItem.getImageId());
+                holder.viewmageV.setImageDrawable(main.darkimage);
                 main.ic.cancelLoad(holder.viewmageV);
                 main.ic.loadDrawable(holder.viewmageV, new File(rowItem.getDesc()), null);
             } }else if (Icons.isApk((rowItem.getDesc()))) {

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -80,6 +80,9 @@ public void onCreate(Bundle savedInstanceState) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         getActivity().findViewById(R.id.fabbutton).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.action_overflow).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.search).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.paste).setVisibility(View.GONE);
         final int maxMemory = (int) (Runtime.getRuntime().maxMemory() / 1024);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         final int cacheSize = maxMemory / 4;

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -190,7 +190,7 @@ public boolean onLongClick(View p1) {
             holder.imageView.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
-                    if(!main.selection){
+                    if(!main.results){
                     if (!rowItem.getSize().equals("Go Back")) {
                         holder.imageView.setAnimation(animation);
                         toggleChecked(p);
@@ -202,7 +202,7 @@ public void onClick(View view) {
             holder.viewmageV.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
-                    if(!main.selection){
+                    if(!main.results){
                         if (!rowItem.getSize().equals("Go Back"))
                         toggleChecked(p);
                     else main.goBack();
@@ -211,7 +211,7 @@ public void onClick(View view) {
             holder.apk.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
-                    if(!main.selection) {
+                    if(!main.results) {
                         if (!rowItem.getSize().equals("Go Back"))
                             toggleChecked(p);
                         else main.goBack();

File: src/com/amaze/filemanager/adapters/DrawerAdapter.java
Patch:
@@ -146,7 +146,7 @@ public void onClick(View p1) {
         }
         if(myChecked.get(position)){
             imageView.setColorFilter(colorMatrixColorFilter);
-            if(m.theme==0){textView.setTypeface(Typeface.DEFAULT);}else textView.setTypeface(Typeface.DEFAULT_BOLD);
+           textView.setTypeface(Typeface.DEFAULT_BOLD);
             textView.setTextColor(Color.parseColor(m.skin));}
         else
         if(m.theme==0)

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -141,6 +141,7 @@ public class Main extends android.support.v4.app.Fragment {
     private TabSpinnerAdapter tabSpinnerAdapter;
     public float[] color;
     public ColorMatrixColorFilter colorMatrixColorFilter;
+    Animation animation;
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -173,6 +174,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         showThumbs=Sp.getBoolean("showThumbs",true);
         ic=new IconHolder(getActivity(),showThumbs,!aBoolean);
         res = getResources();
+         animation = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
         if(theme==1) {
             rootView.findViewById(R.id.main_frag).setBackgroundColor(getResources().getColor(android.R.color.background_dark));
             ((ImageView)getActivity().findViewById(R.id.shadow)).setImageDrawable(res.getDrawable(R.drawable.shadow_dark));
@@ -1275,7 +1277,7 @@ public void onAnimationEnd(Animator animation) {
         activity.startActivity(activity.getIntent());
     }private void crossfadeInverse() {
 
-        Animation animation = AnimationUtils.loadAnimation(getActivity(), R.anim.fab_newtab);
+
         fab.setAnimation(animation);
         fab.setVisibility(View.VISIBLE);
         // Set the content view to 0% opacity but visible, so that it is visible

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -210,7 +210,7 @@ public void onClick(View view) {
                 add();
             }
         });
-        //getActivity().findViewById(R.id.fabbutton).setVisibility(View.VISIBLE);
+        fab.setVisibility(View.VISIBLE);
 
         utils = new Futils();
 

File: src/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -74,7 +74,7 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
                             }
                         }}
                 }
-            
+
             else if(m.rootMode){for(File f:files){
                 RootTools.deleteFileOrDirectory(f.getPath(), true);}
               return true;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -104,7 +104,7 @@ public class Main extends android.support.v4.app.Fragment {
     public boolean results = false;
     public ActionMode mActionMode;
     public SharedPreferences Sp;
-    Drawable folder, apk, unknown, archive, text;
+    Drawable folder;
     Resources res;
     public LinearLayout buttons;
     public int sortby, dsort, asc;
@@ -118,7 +118,6 @@ public class Main extends android.support.v4.app.Fragment {
     HorizontalScrollView scroll,scroll1;
     public boolean rootMode, mountSystem,showHidden,showPermissions,showSize,showLastModified;
     View footerView, poppyView;
-    ImageButton paste;
     private PoppyViewHelper mPoppyViewHelper;
     public LinearLayout pathbar;
     private ImageButton ib;
@@ -132,7 +131,6 @@ public class Main extends android.support.v4.app.Fragment {
     private TabHandler tabHandler;
     private List<Tab> content;
     private ArrayList<String> list1;
-    private ArrayAdapter<String> adapter1;
     private MainActivity mainActivity;
     public String skin;
     public int skinselection;

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -459,7 +459,7 @@ public void onResume() {
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event)  {
        if ( keyCode == KeyEvent.KEYCODE_MENU ) {
-ImageButton ib=(ImageButton)findViewById(R.id.action_overflow);
+ImageView ib=(ImageView)findViewById(R.id.overflow);
 if(ib.getVisibility()==View.VISIBLE){
 	ib.performClick();
 }

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -39,7 +39,6 @@
 import android.view.ActionMode;
 import android.view.View;
 import android.widget.ArrayAdapter;
-import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.Toast;
@@ -79,8 +78,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         final int cacheSize = maxMemory / 4;
         mMemoryCache = new LruCache<String, Bitmap>(cacheSize) {};
         vl=getListView();
-        ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
-        overflow.setVisibility(View.GONE);
+
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         uimode = Integer.parseInt(Sp.getString("uimode", "0"));
         ListView vl = getListView();

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -30,7 +30,6 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.EditText;
-import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.Toast;
@@ -64,8 +63,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         setRetainInstance(false);
         getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         getActivity().findViewById(R.id.fabbutton).setVisibility(View.GONE);
-        ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
-        overflow.setVisibility(View.GONE);
+
         ((LinearLayout) getActivity().findViewById(R.id.buttons))
                 .setVisibility(View.GONE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: src/com/amaze/filemanager/services/DeleteTask.java
Patch:
@@ -61,7 +61,7 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
                     boolean c = utils.deletefiles(files.get(i));
                     if (!c) {
                         b = false;
-                    }
+                    }       }
                 if(!b){
                         for(File f:files){
                             MediaFile mediaFile=new MediaFile(contentResolver,f);
@@ -74,7 +74,7 @@ protected Boolean doInBackground(ArrayList<File>... p1) {
                             }
                         }}
                 }
-            }
+            
             else if(m.rootMode){for(File f:files){
                 RootTools.deleteFileOrDirectory(f.getPath(), true);}
               return true;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -515,7 +515,7 @@ public void onListItemClicked(int position, View v) {
                 mActionMode = null;}
 
         } else {
-            if(!list.get(0).getSize().equals("Go Back")){
+            if(!list.get(position).getSize().equals("Go Back")){
 
                 String path;
                 Layoutelements l=list.get(position);

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -117,8 +117,8 @@ public void onClick(View view) {
                     Main ma = ((Main) fragmentTransaction.findFragmentById(R.id.content_frame));
                     ma.loadlist(new File(tab.getPath()),false);
 
-                    Animation animationLeft = AnimationUtils.loadAnimation(getContext(), R.animator.tab_selection_left);
-                    Animation animationRight = AnimationUtils.loadAnimation(getContext(), R.animator.tab_selection_right);
+                    Animation animationLeft = AnimationUtils.loadAnimation(getContext(), R.anim.tab_selection_left);
+                    Animation animationRight = AnimationUtils.loadAnimation(getContext(), R.anim.tab_selection_right);
 
                     if (position < spinner_current) {
                         ma.listView.setAnimation(animationLeft);

File: src/com/amaze/filemanager/adapters/TabSpinnerAdapter.java
Patch:
@@ -117,8 +117,8 @@ public void onClick(View view) {
                     Main ma = ((Main) fragmentTransaction.findFragmentById(R.id.content_frame));
                     ma.loadlist(new File(tab.getPath()),false);
 
-                    Animation animationLeft = AnimationUtils.loadAnimation(getContext(), R.animator.tab_selection_left);
-                    Animation animationRight = AnimationUtils.loadAnimation(getContext(), R.animator.tab_selection_right);
+                    Animation animationLeft = AnimationUtils.loadAnimation(getContext(), R.anim.tab_selection_left);
+                    Animation animationRight = AnimationUtils.loadAnimation(getContext(), R.anim.tab_selection_right);
 
                     if (position < spinner_current) {
                         ma.listView.setAnimation(animationLeft);

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -183,7 +183,7 @@ public void onClick(View v) {
             public boolean onLongClick(View p1) {
                 if (main.results) {
                     utils.longClickSearchItem(main, rowItem.getDesc());
-                } else if (!main.selection) {
+                } else if (p!=0) {
                     toggleChecked(p);
 
                 }

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -176,7 +176,7 @@ protected ArrayList<Layoutelements> doInBackground(Void[] p1) {
                 for (int i = 0; i < c.size(); i++) {
 
 
-                    a.add(new Layoutelements(getActivity().getResources().getDrawable(R.drawable.ic_doc_apk), c.get(i).loadLabel(getActivity().getPackageManager()).toString(), c.get(i).publicSourceDir,"","",""));
+                    a.add(new Layoutelements(getActivity().getResources().getDrawable(R.drawable.ic_doc_apk), c.get(i).loadLabel(getActivity().getPackageManager()).toString(), c.get(i).publicSourceDir,"","","",false));
 
                     File file = new File(c.get(i).publicSourceDir);
                     mFile.add(file);

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -417,8 +417,8 @@ public void openFile(final File f, final MainActivity m) {
         }
     }
 
-    public Layoutelements newElement(Drawable i, String d,String permissions,String symlink,String size) {
-        Layoutelements item = new Layoutelements(i, new File(d).getName(), d,permissions,symlink,size);
+    public Layoutelements newElement(Drawable i, String d,String permissions,String symlink,String size,boolean b) {
+        Layoutelements item = new Layoutelements(i, new File(d).getName(), d,permissions,symlink,size,b);
         return item;
     }
 

File: src/com/amaze/filemanager/services/asynctasks/LoadSearchList.java
Patch:
@@ -84,7 +84,8 @@ protected void onPostExecute(ArrayList<Layoutelements> bitmap) {
                         bitmap, ma);
                 try {
                     //ListView lv = (ListView) ma.listView.findViewById(R.id.listView);
-                    ma.listView.setAdapter(ma.adapter);
+             if(ma.aBoolean)       ma.listView.setAdapter(ma.adapter);
+                    else ma.gridView.setAdapter(ma.adapter);
                     ma.results = true;
                     try {
                         Intent i = new Intent("updatepager");

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -153,7 +153,7 @@ public void deleteFiles(ArrayList<Layoutelements> a, final Main b, List<Integer>
 
             public void onClick(DialogInterface p1, int p2) {
                 Toast.makeText(b.getActivity(), getString(b.getActivity(), R.string.deleting), Toast.LENGTH_LONG).show();
-
+                new DeleteTask(b.getActivity().getContentResolver(),b).execute(todelete);
             }
         });
         c.show();

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -282,6 +282,7 @@ public boolean onLongClick(View p1) {
                 main.ic.loadDrawable(holder.imageView,new File(rowItem.getDesc()),main.getResources().getDrawable(R.drawable.ic_doc_apk));
             }
             if(new File(rowItem.getDesc()).isDirectory()){holder.imageView.setColorFilter(colorMatrixColorFilter);}
+            else {holder.imageView.setColorFilter(null);}
             if(main.showLastModified)
                 holder.date.setText(rowItem.getDate("dd/MM/yy"));
             if(main.showSize)

File: src/com/amaze/filemanager/utils/Icons.java
Patch:
@@ -247,6 +247,8 @@ public static Drawable loadMimeIcon(Context context, String path,boolean grid) {
                 break;
             case R.drawable.ic_doc_video_am: if(grid)resId=R.drawable.ic_doc_video_am_grid;
                 break;
+            case R.drawable.ic_doc_text_am: if(grid)resId=R.drawable.ic_doc_text_am_grid;
+                break;
         }
             return res.getDrawable(resId);
         }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -255,7 +255,8 @@ public void onClick(View view) {
         getSortModes();
         home = Sp.getString("home", System.getenv("EXTERNAL_STORAGE"));
         this.setRetainInstance(false);
-        String path=content.get(0).getPath();
+        int pos = Sp.getInt("spinner_selected", 0);
+        String path=content.get(pos).getPath();
         File f;
         if(path!=null)f=new File(path);
         else
@@ -319,7 +320,6 @@ public void onClick(View view) {
                 }
             }
 
-            int pos = Sp.getInt("spinner_selected", 0);
             mainActivity.tabsSpinner.setAdapter(tabSpinnerAdapter);
             mainActivity.tabsSpinner.setSelection(pos);
 

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -255,7 +255,8 @@ public void onClick(View view) {
         getSortModes();
         home = Sp.getString("home", System.getenv("EXTERNAL_STORAGE"));
         this.setRetainInstance(false);
-        String path=content.get(0).getPath();
+        int pos = Sp.getInt("spinner_selected", 0);
+        String path=content.get(pos).getPath();
         File f;
         if(path!=null)f=new File(path);
         else
@@ -319,7 +320,6 @@ public void onClick(View view) {
                 }
             }
 
-            int pos = Sp.getInt("spinner_selected", 0);
             mainActivity.tabsSpinner.setAdapter(tabSpinnerAdapter);
             mainActivity.tabsSpinner.setSelection(pos);
 

File: src/com/amaze/filemanager/utils/Icons.java
Patch:
@@ -166,7 +166,6 @@ private static void add(String mimeType, int resId) {
         add("application/vnd.sun.xml.calc", icon);
         add("application/vnd.sun.xml.calc.template", icon);
         add("application/x-kspread", icon);
-
         // Text
         icon = R.drawable.ic_doc_text_am;
         add("application/vnd.oasis.opendocument.text", icon);
@@ -219,6 +218,9 @@ public static Drawable loadMimeIcon(Context context, String path,boolean grid) {
         final Resources res = context.getResources();
         String mimeType = MimeTypes.getMimeType(new File(path));
         if (mimeType == null) {
+             if(grid)
+            return res.getDrawable(R.drawable.ic_doc_generic_am_grid);
+
             return res.getDrawable(R.drawable.ic_doc_generic_am);
         }
 

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -133,7 +133,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
         if (checked != null) {
 
             if (checked) {
-                holder.rl.setBackgroundColor(Color.parseColor("#5fcccccc"));
+                holder.rl.setBackgroundColor(Color.parseColor("#9f808080"));
             } else {
                 if (main.uimode == 0) {
                     holder.rl.setBackgroundResource(R.drawable.listitem1);
@@ -207,7 +207,7 @@ public boolean onLongClick(View p1) {
             if (checked != null) {
 
                 if (checked) {
-                    holder.rl.setBackgroundColor(Color.parseColor("#5fcccccc"));
+                    holder.rl.setBackgroundColor(Color.parseColor("#9f808080"));
                 } else {
                     if (main.uimode == 0) {
                         if(main.theme==0)holder.rl.setBackgroundResource(R.drawable.item_doc_grid);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -397,9 +397,8 @@ public void onClick(DialogInterface p1, int p2) {
                         tabHandler.addTab(new Tab(older, "legacy", "/storage/emulated/legacy"));
                         //restartPC(getActivity()); // breaks the copy feature
                         Sp.edit().putInt("spinner_selected", older).commit();
-                        Sp.edit().putString("current", "/storage/emulated/legacy").apply();
-                        fragmentTransaction.replace(R.id.content_frame, new Main());
-                        fragmentTransaction.commit();
+                        Sp.edit().putString("current", home).apply();
+                        loadlist(new File(home),false);
                 }
             }
         });

File: src/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -83,9 +83,9 @@ public void updateTab(Tab tab) {
         sqLiteDatabase.close();
     }
 
-    public boolean deleteTab(String tabLabel) {
+    public boolean deleteTab(int tabNo) {
         boolean result = false;
-        String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_LABEL + " = \"" + tabLabel + "\"";
+        String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + " = \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = getWritableDatabase();
         Cursor cursor = sqLiteDatabase.rawQuery(query, null);
         Tab tab = new Tab();

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -61,9 +61,6 @@ public class MainActivity extends android.support.v4.app.FragmentActivity {
     private ActionBarDrawerToggle mDrawerToggle;
     public Spinner tabsSpinner;
     private TabHandler tabHandler;
-    private List<Tab> content;
-    private ArrayList<String> list1;
-    private ArrayAdapter<String> adapter1;
 
     String[] val;
     ProgressBar progress;

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -523,7 +523,7 @@ public void loadlist(final File f, boolean back) {
             list1.add(tab.getLabel());
         }
 
-        TabSpinnerAdapter tabSpinnerAdapter = new TabSpinnerAdapter(getActivity(), R.layout.spinner_layout, list1, fragmentTransaction);
+        TabSpinnerAdapter tabSpinnerAdapter = new TabSpinnerAdapter(getActivity(), R.layout.spinner_layout, list1, fragmentTransaction,mainActivity.tabsSpinner);
 
         adapter1.setDropDownViewResource(R.layout.spinner_dropdown_layout);
         /*LayoutInflater inflater = getActivity().getLayoutInflater();

File: src/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -83,9 +83,9 @@ public void updateTab(Tab tab) {
         sqLiteDatabase.close();
     }
 
-    public boolean deleteTab(String tabLabel) {
+    public boolean deleteTab(int tabNo) {
         boolean result = false;
-        String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_LABEL + " = \"" + tabLabel + "\"";
+        String query = "Select * FROM " + TABLE_TAB + " WHERE " + COLUMN_TAB_NO + " = \"" + tabNo + "\"";
         SQLiteDatabase sqLiteDatabase = getWritableDatabase();
         Cursor cursor = sqLiteDatabase.rawQuery(query, null);
         Tab tab = new Tab();

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -362,6 +362,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         }
     }
 
+
+
     @Override
     protected void onPause() {
         super.onPause();

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -362,6 +362,8 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
         }
     }
 
+
+
     @Override
     protected void onPause() {
         super.onPause();

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -93,7 +93,7 @@ public void onCreate(Bundle savedInstanceState) {
         title=(TextView)findViewById(R.id.title);
         tabsSpinner = (Spinner) findViewById(R.id.tab_spinner);
 
-        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#607d8b");
+        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#673ab7");
         LinearLayout linearLayout = (LinearLayout) findViewById(R.id.action_bar);
         linearLayout.setBackgroundColor(Color.parseColor(skin));
         LinearLayout linearLayout1 = (LinearLayout) findViewById(R.id.pathbar);

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -24,7 +24,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
 
-        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#607d8b");
+        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#673ab7");
         getActionBar().setIcon(R.drawable.ic_launcher1);
         getActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         getActionBar().setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -111,8 +111,8 @@ public class Main extends android.support.v4.app.Fragment {
     private ArrayList<String> list1;
     private ArrayAdapter<String> adapter1;
     private MainActivity mainActivity;
-    private String skin;
-    int theme;
+    public String skin;
+    public int theme;
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -201,7 +201,7 @@ public void onClick(View view) {
         utils = new Futils();
         res = getResources();
         mPoppyViewHelper = new PoppyViewHelper(getActivity());
-        skin = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString("skin_color", "#607d8b");
+        skin = PreferenceManager.getDefaultSharedPreferences(getActivity()).getString("skin_color", "#673ab7");
 
         if (aBoolean) {
             poppyView = mPoppyViewHelper.createPoppyViewOnListView(R.id.listView, R.layout.pooppybar);

File: src/com/amaze/filemanager/fragments/Preffrag.java
Patch:
@@ -51,7 +51,7 @@ public boolean onPreferenceChange(Preference p1, Object p2) {
         });
 
         final Preference preference = (Preference) findPreference("skin");
-        final int current = Integer.parseInt(sharedPref.getString("skin", ""+8));
+        final int current = Integer.parseInt(sharedPref.getString("skin", ""+3));
         preference.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener() {
             @Override
             public boolean onPreferenceClick(Preference preference) {

File: src/com/amaze/filemanager/activities/Preferences.java
Patch:
@@ -24,7 +24,7 @@ public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.prefsfrag);
 
-        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#009688");
+        String skin = PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString("skin_color", "#607d8b");
         getActionBar().setIcon(R.drawable.ic_launcher1);
         getActionBar().setBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
         getActionBar().setDisplayOptions(ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_SHOW_TITLE);

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -112,13 +112,13 @@ public class Main extends android.support.v4.app.Fragment {
     private ArrayAdapter<String> adapter1;
     private MainActivity mainActivity;
     private String skin;
-
+    int theme;
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         aBoolean = Sp.getBoolean("view", true);
-
+        theme=Integer.parseInt(Sp.getString("theme","0"));
         mainActivity=(MainActivity)getActivity();
         tabHandler = new TabHandler(getActivity(), null, null, 1);
         showPermissions=Sp.getBoolean("showPermissions",false);
@@ -143,6 +143,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         gridView = (GridView) rootView.findViewById(R.id.gridView);
         showThumbs=Sp.getBoolean("showThumbs",true);
         ic=new IconHolder(getActivity(),showThumbs,!aBoolean);
+        if(theme==1)rootView.findViewById(R.id.main_frag).setBackgroundColor(getResources().getColor(android.R.color.background_dark));
         if (aBoolean) {
             listView.setVisibility(View.VISIBLE);
             gridView.setVisibility(View.GONE);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -93,7 +93,7 @@ public void onCreate(Bundle savedInstanceState) {
         title=(TextView)findViewById(R.id.title);
         tabsSpinner = (Spinner) findViewById(R.id.tab_spinner);
 
-        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#009688");
+        skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#607d8b");
         LinearLayout linearLayout = (LinearLayout) findViewById(R.id.action_bar);
         linearLayout.setBackgroundColor(Color.parseColor(skin));
         LinearLayout linearLayout1 = (LinearLayout) findViewById(R.id.pathbar);

File: src/com/amaze/filemanager/adapters/MyAdapter.java
Patch:
@@ -125,7 +125,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
                 vholder.txtDesc = (TextView) view.findViewById(R.id.secondLine);
             view.setTag(vholder);
 
-            String skin = PreferenceManager.getDefaultSharedPreferences(context).getString("skin_color", "#009688");
+            String skin = PreferenceManager.getDefaultSharedPreferences(context).getString("skin_color", "#607d8b");
             GradientDrawable gradientDrawable = (GradientDrawable) vholder.imageView.getBackground();
             gradientDrawable.setColor(Color.parseColor(skin));
         }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -116,7 +116,7 @@ public void onClick(View view) {
         linearLayout3.setBackgroundColor(Color.parseColor(skin));
 
         //tabsSpinner.setPopupBackgroundDrawable(new ColorDrawable(Color.parseColor("#000000")));
-
+        tabHandler=new TabHandler(this,"",null,1);
         if(Sp.getBoolean("firstrun",true)){
         try {
             s.makeS();

File: src/com/amaze/filemanager/database/TabHandler.java
Patch:
@@ -5,6 +5,7 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.widget.Toast;
 
 import java.util.ArrayList;
 import java.util.List;

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -74,7 +74,7 @@ public class MainActivity extends android.support.v4.app.FragmentActivity {
     IconUtils util;
     RelativeLayout mDrawerLinear;
     Shortcuts s = new Shortcuts();
-    int tab=0;
+    int tab=0; public String skin;
     public int theme;
     /**
      * Called when the activity is first created.
@@ -97,7 +97,7 @@ public void onCreate(Bundle savedInstanceState) {
         tabsSpinner = (Spinner) findViewById(R.id.tab_spinner);
 
         // BBar
-        String skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#009688");
+       skin = PreferenceManager.getDefaultSharedPreferences(this).getString("skin_color", "#009688");
         LinearLayout linearLayout = (LinearLayout) findViewById(R.id.action_bar);
         linearLayout.setBackgroundColor(Color.parseColor(skin));
         LinearLayout linearLayout1 = (LinearLayout) findViewById(R.id.pathbar);

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -119,7 +119,7 @@ public void onClick(View view) {
         LinearLayout linearLayout3 = (LinearLayout) findViewById(R.id.settings_bg);
         linearLayout3.setBackgroundColor(Color.parseColor(skin));
 
-        tabsSpinner.setPopupBackgroundDrawable(new ColorDrawable(Color.parseColor(skin)));
+        tabsSpinner.setPopupBackgroundDrawable(new ColorDrawable(Color.parseColor("#000000")));
 
         if(Sp.getBoolean("firstrun",true)){
         try {

File: src/com/amaze/filemanager/utils/Futils.java
Patch:
@@ -8,7 +8,7 @@
 import android.graphics.BitmapFactory;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
-import android.os.*;
+import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.view.View;
 import android.widget.ArrayAdapter;
@@ -33,7 +33,6 @@
 import java.io.DataOutputStream;
 import java.io.File;
 import java.io.IOException;
-import java.lang.Process;
 import java.text.DecimalFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -637,6 +636,7 @@ public void onClick(DialogInterface dialogInterface, int j) {
                 try {
                     process = Runtime.getRuntime().exec("su");
                     dataOutputStream = new DataOutputStream(process.getOutputStream());
+                    RootTools.remount(file.getParent(), "rw");
                     dataOutputStream.writeBytes("chmod " + finalValue + " " + file.getPath() + "\n");
                     dataOutputStream.writeBytes("exit\n");
                     dataOutputStream.flush();

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -57,7 +57,7 @@ public class AppsList extends ListFragment {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         final int maxMemory = (int) (Runtime.getRuntime().maxMemory() / 1024);
-        getActivity().findViewById(R.id.buttons).setVisibility(View.GONE);
+        getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         final int cacheSize = maxMemory / 4;
         mMemoryCache = new LruCache<String, Bitmap>(cacheSize) {
 

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -45,6 +45,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(false);
         setRetainInstance(false);
+        getActivity().findViewById(R.id.buttonbarframe).setVisibility(View.GONE);
         ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
         overflow.setVisibility(View.GONE);
         ((LinearLayout) getActivity().findViewById(R.id.buttons))

File: src/com/amaze/filemanager/services/ZipTask.java
Patch:
@@ -139,7 +139,7 @@ public zip() {
         public void execute(int id, ArrayList<File> a, String fileOut) {
             for (File f1 : a) {
                 if (f1.isDirectory()) {
-                    totalBytes = totalBytes + new Futils().folderSize(f1);
+                    totalBytes = totalBytes + new Futils().folderSize(f1,false);
                 } else {
                     totalBytes = totalBytes + f1.length();
                 }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -141,7 +141,7 @@ public void onClick(View view) {
         });
         if (savedInstanceState == null) {
             selectItem(0);
-        }
+        }if(select<5){title.setText(val[select]);}
     }
 
     @Override

File: src/com/amaze/filemanager/fragments/AppsList.java
Patch:
@@ -20,6 +20,7 @@
 import android.view.ActionMode;
 import android.view.View;
 import android.widget.ArrayAdapter;
+import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.ListView;
 import android.widget.Toast;
@@ -60,7 +61,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         final int cacheSize = maxMemory / 4;
         mMemoryCache = new LruCache<String, Bitmap>(cacheSize) {
 
-        };
+        };ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
+        overflow.setVisibility(View.GONE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         uimode = Integer.parseInt(Sp.getString("uimode", "0"));
         ListView vl = getListView();

File: src/com/amaze/filemanager/fragments/BookmarksManager.java
Patch:
@@ -11,6 +11,7 @@
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.EditText;
+import android.widget.ImageButton;
 import android.widget.LinearLayout;
 import android.widget.ListView;
 
@@ -44,6 +45,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(false);
         setRetainInstance(false);
+        ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
+        overflow.setVisibility(View.GONE);
         ((LinearLayout) getActivity().findViewById(R.id.buttons))
                 .setVisibility(View.GONE);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -108,7 +108,9 @@ public void onCreate(Bundle savedInstanceState) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
         setHasOptionsMenu(false);
-        ((ImageButton)getActivity().findViewById(R.id.action_overflow)).setOnClickListener(new View.OnClickListener() {
+        ImageButton overflow=(ImageButton)getActivity().findViewById(R.id.action_overflow);
+        overflow.setVisibility(View.VISIBLE);
+        (overflow).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
                 showPopup(view);

File: src/com/amaze/filemanager/utils/IconUtils.java
Patch:
@@ -72,7 +72,7 @@ public Drawable getRefreshDrawable() {
 
     public Drawable getCancelDrawable() {
         if (CURRENT == LIGHT)
-            return c.getResources().getDrawable(R.drawable.ic_action_cancel);
+            return c.getResources().getDrawable(R.drawable.ic_action_cancel_light);
         else
             return c.getResources().getDrawable(R.drawable.ic_action_cancel);
     }

File: src/com/amaze/filemanager/activities/MainActivity.java
Patch:
@@ -196,7 +196,7 @@ public void selectItem(int i) {
                 android.support.v4.app.FragmentTransaction transaction2 = getSupportFragmentManager().beginTransaction();
                 transaction2.replace(R.id.content_frame, new AppsList());
                // transaction2.addToBackStack(null);
-                select = 2;
+                select = 1;
 // Commit the transaction
                 transaction2.commit();
                 getActionBar().setSubtitle(val[1]);
@@ -205,7 +205,7 @@ public void selectItem(int i) {
                 android.support.v4.app.FragmentTransaction transaction3 = getSupportFragmentManager().beginTransaction();
                 transaction3.replace(R.id.content_frame, new BookmarksManager());
                // transaction3.addToBackStack(null);
-                select = 3;
+                select = 2;
 // Commit the transaction
                 transaction3.commit();
                 getActionBar().setSubtitle(val[2]);

File: src/com/amaze/filemanager/services/asynctasks/LoadList.java
Patch:
@@ -1,6 +1,7 @@
 package com.amaze.filemanager.services.asynctasks;
 
 import android.os.AsyncTask;
+import android.view.View;
 
 import com.amaze.filemanager.fragments.Main;
 import com.amaze.filemanager.utils.FileListSorter;
@@ -78,6 +79,7 @@ protected void onPostExecute(ArrayList<Layoutelements> bitmap) {
 
         }
         ma.createViews(bitmap, back, f);
-
+        ma.p.setVisibility(View.GONE);
+        ma.getListView().setVisibility(View.VISIBLE);
     }
 }

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -202,6 +202,7 @@ private void showOption(int id, Menu menu) {
     public void initMenu(Menu menu) {
         menu.findItem(R.id.item1).setIcon(icons.getBackDrawable());
         menu.findItem(R.id.item2).setIcon(icons.getHomeDrawable());
+        menu.findItem(R.id.item3).setIcon(icons.getCancelDrawable());
         menu.findItem(R.id.item4).setIcon(icons.getSearchDrawable());
         menu.findItem(R.id.item5).setIcon(icons.getNewDrawable());
         menu.findItem(R.id.item6).setIcon(icons.getBookDrawable());

File: src/com/amaze/filemanager/fragments/ProcessViewer.java
Patch:
@@ -45,6 +45,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         View root = (ViewGroup) inflater.inflate(R.layout.processparent,
                 container, false);
+        setRetainInstance(false);
         rootView = (LinearLayout) root.findViewById(R.id.secondbut);
         getActivity().getActionBar().setSubtitle("Processes");
         ((LinearLayout) getActivity().findViewById(R.id.buttons))

File: src/com/amaze/filemanager/services/CopyService.java
Patch:
@@ -68,7 +68,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {
 
 
     public void onDestroy() {
-        //this.unregisterReceiver(receiver3);
+        this.unregisterReceiver(receiver3);
     }
 
     public class Doback extends AsyncTask<Bundle, Void, Integer> {
@@ -171,7 +171,7 @@ private void copyFiles(File sourceFile, File targetFile, int id, boolean move) t
                 InputStream in = new FileInputStream(sourceFile);
                 OutputStream out = new FileOutputStream(targetFile);
 
-                byte[] buffer = new byte[1024];
+                byte[] buffer = new byte[8192];
 
                 int length;
                 //copy the file content in bytes

File: src/com/amaze/filemanager/fragments/Main.java
Patch:
@@ -101,6 +101,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.mainlist,
                 container, false);
+        history=new HistoryManager(getActivity(),"Table1");
         p = (ProgressBar) rootView.findViewById(R.id.progressBar);
         Sp = PreferenceManager.getDefaultSharedPreferences(getActivity());
         icons = new IconUtils(Sp, getActivity());
@@ -1198,7 +1199,7 @@ public void getSortModes() {
     @Override
     public void onResume() {
         super.onResume();
-          history=new HistoryManager(getActivity(),"table1");
+          history.open();
         (getActivity()).registerReceiver(receiver2, new IntentFilter("loadlist"));
     }
 

File: src/com/amaze/filemanager/utils/HistoryManager.java
Patch:
@@ -39,4 +39,7 @@ public void addPath(String path) {
         }
         db.execSQL("INSERT INTO " + table + " VALUES" + "('" + path + "');");
     }
+    public void end(){
+        db.close();
+    }
 }

File: src/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -368,7 +368,7 @@ public void onClick(DialogInterface dialog, int which) {
 	          Bundle b=new Bundle();
 			  b.putString("FILENAME",a);
 			  b.putString("FILEPATH",fpath);
-			  new SearchTask((MainActivity)getActivity(),t).execute(b);
+			 // new SearchTask((MainActivity)getActivity()).execute(b);
 
 			}
 		});

File: src/com/amaze/filemanager/utils/SearchTask.java
Patch:
@@ -10,8 +10,8 @@
 
 public class SearchTask extends AsyncTask<Bundle,String,ArrayList<File>>
 { ProgressDialog a;boolean run=true;
-MainActivity m;TabFragment tab;
-public SearchTask(MainActivity m,TabFragment tab){this.m=m;this.tab=tab;}
+MainActivity m;Main tab;
+public SearchTask(MainActivity m,Main tab){this.m=m;this.tab=tab;}
 @Override
   public void onPreExecute(){
 	  a=new ProgressDialog(m);
@@ -45,7 +45,7 @@ protected ArrayList<File> doInBackground(Bundle[] p1)
 	@Override
 	public void onPostExecute(ArrayList<File> c){
 		if(run){
-		tab.getCurrentTab().loadsearchlist(new Futils().toStringArray(c));}
+		tab.loadsearchlist(new Futils().toStringArray(c));}
 a.dismiss();
 		}
 	ArrayList<File> lis = new ArrayList<File>();

File: src/com/amaze/filemanager/fragments/TabFragment.java
Patch:
@@ -368,7 +368,7 @@ public void onClick(DialogInterface dialog, int which) {
 	          Bundle b=new Bundle();
 			  b.putString("FILENAME",a);
 			  b.putString("FILEPATH",fpath);
-			  new SearchTask((MainActivity)getActivity(),t).execute(b);
+			 // new SearchTask((MainActivity)getActivity()).execute(b);
 
 			}
 		});

File: src/com/amaze/filemanager/utils/SearchTask.java
Patch:
@@ -10,8 +10,8 @@
 
 public class SearchTask extends AsyncTask<Bundle,String,ArrayList<File>>
 { ProgressDialog a;boolean run=true;
-MainActivity m;TabFragment tab;
-public SearchTask(MainActivity m,TabFragment tab){this.m=m;this.tab=tab;}
+MainActivity m;Main tab;
+public SearchTask(MainActivity m,Main tab){this.m=m;this.tab=tab;}
 @Override
   public void onPreExecute(){
 	  a=new ProgressDialog(m);
@@ -45,7 +45,7 @@ protected ArrayList<File> doInBackground(Bundle[] p1)
 	@Override
 	public void onPostExecute(ArrayList<File> c){
 		if(run){
-		tab.getCurrentTab().loadsearchlist(new Futils().toStringArray(c));}
+		tab.loadsearchlist(new Futils().toStringArray(c));}
 a.dismiss();
 		}
 	ArrayList<File> lis = new ArrayList<File>();

