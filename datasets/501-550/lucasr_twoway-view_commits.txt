File: core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java
Patch:
@@ -273,7 +273,7 @@ private void fillAfter(int position, Recycler recycler, State state, int extraSp
     }
 
     private void fillSpecific(int position, Recycler recycler, State state) {
-        if (state.getItemCount() == 0) {
+        if (state.getItemCount() <= 0) {
             return;
         }
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/BaseLayoutManager.java
Patch:
@@ -597,7 +597,7 @@ private LanedSavedState(Parcel in) {
                 itemEntries = new ItemEntries();
                 for (int i = 0; i < itemEntriesCount; i++) {
                     final ItemEntry entry = in.readParcelable(getClass().getClassLoader());
-                    itemEntries.putItemEntry(i, entry);
+                    itemEntries.restoreItemEntry(i, entry);
                 }
             }
         }

File: core/src/main/java/org/lucasr/twowayview/ItemClickSupport.java
Patch:
@@ -83,7 +83,7 @@ public static ItemClickSupport addTo(RecyclerView recyclerView) {
         ItemClickSupport itemClickSupport = from(recyclerView);
         if (itemClickSupport == null) {
             itemClickSupport = new ItemClickSupport(recyclerView);
-            recyclerView.setTag(R.id.item_click_support, itemClickSupport);
+            recyclerView.setTag(R.id.twowayview_item_click_support, itemClickSupport);
         } else {
             // TODO: Log warning
         }
@@ -99,15 +99,15 @@ public static void removeFrom(RecyclerView recyclerView) {
         }
 
         recyclerView.removeOnItemTouchListener(itemClickSupport.mTouchListener);
-        recyclerView.setTag(R.id.item_click_support, null);
+        recyclerView.setTag(R.id.twowayview_item_click_support, null);
     }
 
     public static ItemClickSupport from(RecyclerView recyclerView) {
         if (recyclerView == null) {
             return null;
         }
 
-        return (ItemClickSupport) recyclerView.getTag(R.id.item_click_support);
+        return (ItemClickSupport) recyclerView.getTag(R.id.twowayview_item_click_support);
     }
 
     private class TouchListener extends ClickItemTouchListener {

File: core/src/main/java/org/lucasr/twowayview/ItemSelectionSupport.java
Patch:
@@ -344,7 +344,7 @@ public static ItemSelectionSupport addTo(RecyclerView recyclerView) {
         ItemSelectionSupport itemSelectionSupport = from(recyclerView);
         if (itemSelectionSupport == null) {
             itemSelectionSupport = new ItemSelectionSupport(recyclerView);
-            recyclerView.setTag(R.id.item_selection_support, itemSelectionSupport);
+            recyclerView.setTag(R.id.twowayview_item_selection_support, itemSelectionSupport);
         } else {
             // TODO: Log warning
         }
@@ -362,15 +362,15 @@ public static void removeFrom(RecyclerView recyclerView) {
         itemSelection.clearChoices();
 
         recyclerView.removeOnItemTouchListener(itemSelection.mTouchListener);
-        recyclerView.setTag(R.id.item_selection_support, null);
+        recyclerView.setTag(R.id.twowayview_item_selection_support, null);
     }
 
     public static ItemSelectionSupport from(RecyclerView recyclerView) {
         if (recyclerView == null) {
             return null;
         }
 
-        return (ItemSelectionSupport) recyclerView.getTag(R.id.item_selection_support);
+        return (ItemSelectionSupport) recyclerView.getTag(R.id.twowayview_item_selection_support);
     }
 
     private static class CheckedStates extends SparseBooleanArray implements Parcelable {

File: core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java
Patch:
@@ -68,13 +68,13 @@ public TwoWayLayoutManager(Context context, AttributeSet attrs) {
 
     public TwoWayLayoutManager(Context context, AttributeSet attrs, int defStyle) {
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.TwoWayLayoutManager, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_TwoWayLayoutManager, defStyle, 0);
 
         final int indexCount = a.getIndexCount();
         for (int i = 0; i < indexCount; i++) {
             final int attr = a.getIndex(i);
 
-            if (attr == R.styleable.TwoWayLayoutManager_android_orientation) {
+            if (attr == R.styleable.twowayview_TwoWayLayoutManager_android_orientation) {
                 final int orientation = a.getInt(attr, -1);
                 if (orientation >= 0) {
                     setOrientation(Orientation.values()[orientation]);

File: core/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -46,9 +46,9 @@ public TwoWayView(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
 
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.TwoWayView, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_TwoWayView, defStyle, 0);
 
-        final String name = a.getString(R.styleable.TwoWayView_layoutManager);
+        final String name = a.getString(R.styleable.twowayview_TwoWayView_twowayview_layoutManager);
         if (!TextUtils.isEmpty(name)) {
             loadLayoutManagerFromName(context, attrs, name);
         }

File: layouts/src/main/java/org/lucasr/twowayview/widget/GridLayoutManager.java
Patch:
@@ -47,12 +47,12 @@ protected GridLayoutManager(Context context, AttributeSet attrs, int defStyle,
         super(context, attrs, defStyle);
 
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.GridLayoutManager, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_GridLayoutManager, defStyle, 0);
 
         mNumColumns =
-                Math.max(1, a.getInt(R.styleable.GridLayoutManager_numColumns, defaultNumColumns));
+                Math.max(1, a.getInt(R.styleable.twowayview_GridLayoutManager_twowayview_numColumns, defaultNumColumns));
         mNumRows =
-                Math.max(1, a.getInt(R.styleable.GridLayoutManager_numRows, defaultNumRows));
+                Math.max(1, a.getInt(R.styleable.twowayview_GridLayoutManager_twowayview_numRows, defaultNumRows));
 
         a.recycle();
     }

File: layouts/src/main/java/org/lucasr/twowayview/widget/SpacingItemDecoration.java
Patch:
@@ -21,12 +21,12 @@ public SpacingItemDecoration(Context context, AttributeSet attrs) {
 
     public SpacingItemDecoration(Context context, AttributeSet attrs, int defStyle) {
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.SpacingItemDecoration, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_SpacingItemDecoration, defStyle, 0);
 
         final int verticalSpacing =
-                Math.max(0, a.getInt(R.styleable.SpacingItemDecoration_android_verticalSpacing, 0));
+                Math.max(0, a.getInt(R.styleable.twowayview_SpacingItemDecoration_android_verticalSpacing, 0));
         final int horizontalSpacing =
-                Math.max(0, a.getInt(R.styleable.SpacingItemDecoration_android_horizontalSpacing, 0));
+                Math.max(0, a.getInt(R.styleable.twowayview_SpacingItemDecoration_android_horizontalSpacing, 0));
 
         a.recycle();
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/SpannableGridLayoutManager.java
Patch:
@@ -285,11 +285,11 @@ public LayoutParams(int width, int height) {
         public LayoutParams(Context c, AttributeSet attrs) {
             super(c, attrs);
 
-            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.SpannableGridViewChild);
+            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.twowayview_SpannableGridViewChild);
             colSpan = Math.max(
-                    DEFAULT_SPAN, a.getInt(R.styleable.SpannableGridViewChild_colSpan, -1));
+                    DEFAULT_SPAN, a.getInt(R.styleable.twowayview_SpannableGridViewChild_twowayview_colSpan, -1));
             rowSpan = Math.max(
-                    DEFAULT_SPAN, a.getInt(R.styleable.SpannableGridViewChild_rowSpan, -1));
+                    DEFAULT_SPAN, a.getInt(R.styleable.twowayview_SpannableGridViewChild_twowayview_rowSpan, -1));
             a.recycle();
         }
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/StaggeredGridLayoutManager.java
Patch:
@@ -259,8 +259,8 @@ public LayoutParams(int width, int height) {
         public LayoutParams(Context c, AttributeSet attrs) {
             super(c, attrs);
 
-            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.StaggeredGridViewChild);
-            span = Math.max(DEFAULT_SPAN, a.getInt(R.styleable.StaggeredGridViewChild_span, -1));
+            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.twowayview_StaggeredGridViewChild);
+            span = Math.max(DEFAULT_SPAN, a.getInt(R.styleable.twowayview_StaggeredGridViewChild_twowayview_span, -1));
             a.recycle();
         }
 

File: core/src/main/java/org/lucasr/twowayview/ItemClickSupport.java
Patch:
@@ -83,7 +83,7 @@ public static ItemClickSupport addTo(RecyclerView recyclerView) {
         ItemClickSupport itemClickSupport = from(recyclerView);
         if (itemClickSupport == null) {
             itemClickSupport = new ItemClickSupport(recyclerView);
-            recyclerView.setTag(R.id.item_click_support, itemClickSupport);
+            recyclerView.setTag(R.id.twowayview_item_click_support, itemClickSupport);
         } else {
             // TODO: Log warning
         }
@@ -99,15 +99,15 @@ public static void removeFrom(RecyclerView recyclerView) {
         }
 
         recyclerView.removeOnItemTouchListener(itemClickSupport.mTouchListener);
-        recyclerView.setTag(R.id.item_click_support, null);
+        recyclerView.setTag(R.id.twowayview_item_click_support, null);
     }
 
     public static ItemClickSupport from(RecyclerView recyclerView) {
         if (recyclerView == null) {
             return null;
         }
 
-        return (ItemClickSupport) recyclerView.getTag(R.id.item_click_support);
+        return (ItemClickSupport) recyclerView.getTag(R.id.twowayview_item_click_support);
     }
 
     private class TouchListener extends ClickItemTouchListener {

File: core/src/main/java/org/lucasr/twowayview/ItemSelectionSupport.java
Patch:
@@ -344,7 +344,7 @@ public static ItemSelectionSupport addTo(RecyclerView recyclerView) {
         ItemSelectionSupport itemSelectionSupport = from(recyclerView);
         if (itemSelectionSupport == null) {
             itemSelectionSupport = new ItemSelectionSupport(recyclerView);
-            recyclerView.setTag(R.id.item_selection_support, itemSelectionSupport);
+            recyclerView.setTag(R.id.twowayview_item_selection_support, itemSelectionSupport);
         } else {
             // TODO: Log warning
         }
@@ -362,15 +362,15 @@ public static void removeFrom(RecyclerView recyclerView) {
         itemSelection.clearChoices();
 
         recyclerView.removeOnItemTouchListener(itemSelection.mTouchListener);
-        recyclerView.setTag(R.id.item_selection_support, null);
+        recyclerView.setTag(R.id.twowayview_item_selection_support, null);
     }
 
     public static ItemSelectionSupport from(RecyclerView recyclerView) {
         if (recyclerView == null) {
             return null;
         }
 
-        return (ItemSelectionSupport) recyclerView.getTag(R.id.item_selection_support);
+        return (ItemSelectionSupport) recyclerView.getTag(R.id.twowayview_item_selection_support);
     }
 
     private static class CheckedStates extends SparseBooleanArray implements Parcelable {

File: core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java
Patch:
@@ -68,13 +68,13 @@ public TwoWayLayoutManager(Context context, AttributeSet attrs) {
 
     public TwoWayLayoutManager(Context context, AttributeSet attrs, int defStyle) {
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.TwoWayLayoutManager, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_TwoWayLayoutManager, defStyle, 0);
 
         final int indexCount = a.getIndexCount();
         for (int i = 0; i < indexCount; i++) {
             final int attr = a.getIndex(i);
 
-            if (attr == R.styleable.TwoWayLayoutManager_android_orientation) {
+            if (attr == R.styleable.twowayview_TwoWayLayoutManager_android_orientation) {
                 final int orientation = a.getInt(attr, -1);
                 if (orientation >= 0) {
                     setOrientation(Orientation.values()[orientation]);

File: core/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -46,9 +46,9 @@ public TwoWayView(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
 
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.TwoWayView, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_TwoWayView, defStyle, 0);
 
-        final String name = a.getString(R.styleable.TwoWayView_layoutManager);
+        final String name = a.getString(R.styleable.twowayview_TwoWayView_twowayview_layoutManager);
         if (!TextUtils.isEmpty(name)) {
             loadLayoutManagerFromName(context, attrs, name);
         }

File: layouts/src/main/java/org/lucasr/twowayview/widget/GridLayoutManager.java
Patch:
@@ -47,12 +47,12 @@ protected GridLayoutManager(Context context, AttributeSet attrs, int defStyle,
         super(context, attrs, defStyle);
 
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.GridLayoutManager, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_GridLayoutManager, defStyle, 0);
 
         mNumColumns =
-                Math.max(1, a.getInt(R.styleable.GridLayoutManager_numColumns, defaultNumColumns));
+                Math.max(1, a.getInt(R.styleable.twowayview_GridLayoutManager_twowayview_numColumns, defaultNumColumns));
         mNumRows =
-                Math.max(1, a.getInt(R.styleable.GridLayoutManager_numRows, defaultNumRows));
+                Math.max(1, a.getInt(R.styleable.twowayview_GridLayoutManager_twowayview_numRows, defaultNumRows));
 
         a.recycle();
     }

File: layouts/src/main/java/org/lucasr/twowayview/widget/SpacingItemDecoration.java
Patch:
@@ -21,12 +21,12 @@ public SpacingItemDecoration(Context context, AttributeSet attrs) {
 
     public SpacingItemDecoration(Context context, AttributeSet attrs, int defStyle) {
         final TypedArray a =
-                context.obtainStyledAttributes(attrs, R.styleable.SpacingItemDecoration, defStyle, 0);
+                context.obtainStyledAttributes(attrs, R.styleable.twowayview_SpacingItemDecoration, defStyle, 0);
 
         final int verticalSpacing =
-                Math.max(0, a.getInt(R.styleable.SpacingItemDecoration_android_verticalSpacing, 0));
+                Math.max(0, a.getInt(R.styleable.twowayview_SpacingItemDecoration_android_verticalSpacing, 0));
         final int horizontalSpacing =
-                Math.max(0, a.getInt(R.styleable.SpacingItemDecoration_android_horizontalSpacing, 0));
+                Math.max(0, a.getInt(R.styleable.twowayview_SpacingItemDecoration_android_horizontalSpacing, 0));
 
         a.recycle();
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/SpannableGridLayoutManager.java
Patch:
@@ -285,11 +285,11 @@ public LayoutParams(int width, int height) {
         public LayoutParams(Context c, AttributeSet attrs) {
             super(c, attrs);
 
-            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.SpannableGridViewChild);
+            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.twowayview_SpannableGridViewChild);
             colSpan = Math.max(
-                    DEFAULT_SPAN, a.getInt(R.styleable.SpannableGridViewChild_colSpan, -1));
+                    DEFAULT_SPAN, a.getInt(R.styleable.twowayview_SpannableGridViewChild_twowayview_colSpan, -1));
             rowSpan = Math.max(
-                    DEFAULT_SPAN, a.getInt(R.styleable.SpannableGridViewChild_rowSpan, -1));
+                    DEFAULT_SPAN, a.getInt(R.styleable.twowayview_SpannableGridViewChild_twowayview_rowSpan, -1));
             a.recycle();
         }
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/StaggeredGridLayoutManager.java
Patch:
@@ -259,8 +259,8 @@ public LayoutParams(int width, int height) {
         public LayoutParams(Context c, AttributeSet attrs) {
             super(c, attrs);
 
-            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.StaggeredGridViewChild);
-            span = Math.max(DEFAULT_SPAN, a.getInt(R.styleable.StaggeredGridViewChild_span, -1));
+            TypedArray a = c.obtainStyledAttributes(attrs, R.styleable.twowayview_StaggeredGridViewChild);
+            span = Math.max(DEFAULT_SPAN, a.getInt(R.styleable.twowayview_StaggeredGridViewChild_twowayview_span, -1));
             a.recycle();
         }
 

File: sample/src/main/java/org/lucasr/twowayview/sample/LayoutFragment.java
Patch:
@@ -111,12 +111,12 @@ public boolean onItemLongClick(RecyclerView parent, View child, int position, lo
 
         mRecyclerView.setOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
-            public void onScrollStateChanged(int scrollState) {
+            public void onScrollStateChanged(RecyclerView recyclerView, int scrollState) {
                 updateState(scrollState);
             }
 
             @Override
-            public void onScrolled(int i, int i2) {
+            public void onScrolled(RecyclerView recyclerView, int i, int i2) {
                 mPositionText.setText("First: " + mRecyclerView.getFirstVisiblePosition());
                 mCountText.setText("Count: " + mRecyclerView.getChildCount());
             }

File: core/src/main/java/org/lucasr/twowayview/TwoWayLayoutManager.java
Patch:
@@ -36,7 +36,7 @@
 import java.util.List;
 
 public abstract class TwoWayLayoutManager extends LayoutManager {
-    private static final String LOGTAG = "AbsLayoutManager";
+    private static final String LOGTAG = "TwoWayLayoutManager";
 
     public static enum Orientation {
         HORIZONTAL,

File: layouts/src/main/java/org/lucasr/twowayview/widget/SpannableGridLayoutManager.java
Patch:
@@ -156,12 +156,12 @@ void getLaneForChild(LaneInfo outInfo, View child, Direction direction) {
 
     private int getWidthUsed(View child) {
         final LayoutParams lp = (LayoutParams) child.getLayoutParams();
-        return getWidth() - getChildWidth(lp.colSpan);
+        return getWidth() - getPaddingLeft() - getPaddingRight() - getChildWidth(lp.colSpan);
     }
 
     private int getHeightUsed(View child) {
         final LayoutParams lp = (LayoutParams) child.getLayoutParams();
-        return getHeight() - getChildHeight(lp.rowSpan);
+        return getHeight() - getPaddingTop() - getPaddingBottom() - getChildHeight(lp.rowSpan);
     }
 
     @Override

File: layouts/src/main/java/org/lucasr/twowayview/widget/DividerItemDecoration.java
Patch:
@@ -33,8 +33,8 @@ public DividerItemDecoration(Context context, AttributeSet attrs, int defStyle)
         mItemSpacing = createSpacing(mDivider);
     }
 
-    public DividerItemDecoration(Drawable verticalDivider) {
-        mDivider = verticalDivider;
+    public DividerItemDecoration(Drawable divider) {
+        mDivider = divider;
         mItemSpacing = createSpacing(mDivider);
     }
 

File: sample/src/main/java/org/lucasr/twowayview/sample/MainActivity.java
Patch:
@@ -68,7 +68,7 @@ private void addLayoutTab(ActionBar actionBar, int layoutId, int iconId, String
     }
 
     public class TabListener implements ActionBar.TabListener {
-        private TWFragment mFragment;
+        private LayoutFragment mFragment;
         private final int mLayoutId;
         private final String mTag;
 
@@ -79,9 +79,9 @@ public TabListener(int layoutId, String tag) {
 
         @Override
         public void onTabSelected(ActionBar.Tab tab, FragmentTransaction ft) {
-            mFragment = (TWFragment) getSupportFragmentManager().findFragmentByTag(mTag);
+            mFragment = (LayoutFragment) getSupportFragmentManager().findFragmentByTag(mTag);
             if (mFragment == null) {
-                mFragment = (TWFragment) TWFragment.newInstance(mLayoutId);
+                mFragment = (LayoutFragment) LayoutFragment.newInstance(mLayoutId);
                 ft.add(R.id.content, mFragment, mTag);
             } else {
                 ft.attach(mFragment);

File: core/src/main/java/org/lucasr/twowayview/TWAbsLayoutManager.java
Patch:
@@ -508,13 +508,13 @@ private void updateLayoutEdgesFromRemovedChild(View removedChild, Direction dire
         int index;
         final int limit;
         if (direction == Direction.END) {
-            // Scrolling torwards the end of the layout, child view being
+            // Scrolling towards the end of the layout, child view being
             // removed from the start.
             mLayoutStart = Integer.MAX_VALUE;
             index = 0;
             limit = removedChildEnd;
         } else {
-            // Scrolling torwards the start of the layout, child view being
+            // Scrolling towards the start of the layout, child view being
             // removed from the end.
             mLayoutEnd = Integer.MIN_VALUE;
             index = childCount - 1;

File: core/src/main/java/org/lucasr/twowayview/TWAbsLayoutManager.java
Patch:
@@ -672,7 +672,7 @@ protected void detachChild(View child, Direction direction) {
     @Override
     public void onItemsAdded(RecyclerView recyclerView, int positionStart, int itemCount) {
         if (positionStart < mFirstPosition) {
-            mFirstPosition -= itemCount;
+            mFirstPosition += itemCount;
             handleAdapterChange();
         }
     }

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWBaseLayoutManager.java
Patch:
@@ -310,7 +310,7 @@ private int getWidthUsed(View child) {
 
         final LayoutParams lp = (LayoutParams) child.getLayoutParams();
         final int size = (isVertical ? mLanes.getLaneSize() : lp.width);
-        return getWidth() - size;
+        return getWidth() - getPaddingLeft() - getPaddingRight() - size;
     }
 
     private int getHeightUsed(View child) {
@@ -321,7 +321,7 @@ private int getHeightUsed(View child) {
 
         final LayoutParams lp = (LayoutParams) child.getLayoutParams();
         final int size = (isVertical ? lp.height : mLanes.getLaneSize());
-        return getHeight() - size;
+        return getHeight() - getPaddingTop() - getPaddingBottom() - size;
     }
 
     @Override

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWLanes.java
Patch:
@@ -74,8 +74,8 @@ public TWLanes(TWBaseLayoutManager layout, int laneCount) {
         for (int i = 0; i < laneCount; i++) {
             final int laneStart = i * mLaneSize;
 
-            final int l = paddingLeft + (mIsVertical ? laneStart : layout.getStartWithPadding());
-            final int t = paddingTop + (mIsVertical ? layout.getStartWithPadding() : laneStart);
+            final int l = paddingLeft + (mIsVertical ? laneStart : 0);
+            final int t = paddingTop + (mIsVertical ? 0 : laneStart);
             final int r = (mIsVertical ? l + mLaneSize : l);
             final int b = (mIsVertical ? t : t + mLaneSize);
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWBaseLayoutManager.java
Patch:
@@ -337,9 +337,8 @@ protected void layoutChild(View child, Direction direction) {
         mLanes.getChildFrame(child, lane, direction, mChildFrame);
         mLanes.pushChildFrame(lane, direction, mChildFrame);
 
-        final MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();
-        layoutDecorated(child, mChildFrame.left + lp.leftMargin, mChildFrame.top + lp.topMargin,
-                mChildFrame.right - lp.rightMargin, mChildFrame.bottom - lp.bottomMargin);
+        layoutDecorated(child, mChildFrame.left, mChildFrame.top, mChildFrame.right,
+                mChildFrame.bottom);
 
         cacheItemEntry(child, position, lane, mChildFrame);
     }

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWSpannableGridLayoutManager.java
Patch:
@@ -289,9 +289,8 @@ protected void layoutChild(View child, Direction direction) {
                 getDecoratedMeasuredHeight(child), position, direction, laneSpan, mChildFrame);
         getLanes().pushChildFrame(lane, lane + laneSpan, direction, mChildFrame);
 
-        final MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();
-        layoutDecorated(child, mChildFrame.left + lp.leftMargin, mChildFrame.top + lp.topMargin,
-                mChildFrame.right - lp.rightMargin, mChildFrame.bottom - lp.bottomMargin);
+        layoutDecorated(child, mChildFrame.left, mChildFrame.top, mChildFrame.right,
+                mChildFrame.bottom);
 
         cacheItemEntry(child, position, lane, mChildFrame);
     }

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWGridLayoutManager.java
Patch:
@@ -52,9 +52,9 @@ protected TWGridLayoutManager(Context context, AttributeSet attrs, int defStyle,
             final int attr = a.getIndex(i);
 
             if (attr == R.styleable.TWGridLayoutManager_numColumns) {
-                mNumColumns = Math.max(defaultNumColumns, a.getInt(attr, -1));
+                mNumColumns = Math.max(1, a.getInt(attr, defaultNumColumns));
             } else if (attr == R.styleable.TWGridLayoutManager_numRows) {
-                mNumRows = Math.max(defaultNumRows, a.getInt(attr, -1));
+                mNumRows = Math.max(1, a.getInt(attr, defaultNumRows));
             }
         }
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWLanes.java
Patch:
@@ -17,7 +17,6 @@
 package org.lucasr.twowayview.widget;
 
 import android.graphics.Rect;
-import android.util.Log;
 import android.view.View;
 
 import org.lucasr.twowayview.TWLayoutManager;
@@ -80,8 +79,8 @@ public TWLanes(TWLanedLayoutManager layout, int laneCount) {
             final int spacing = i * (mIsVertical ? horizontalSpacing : verticalSpacing);
             final int laneStart = (i * mLaneSize) + spacing;
 
-            final int l = paddingLeft + (mIsVertical ? laneStart : layout.getStartEdge());
-            final int t = paddingTop + (mIsVertical ? layout.getStartEdge() : laneStart);
+            final int l = paddingLeft + (mIsVertical ? laneStart : layout.getStartWithPadding());
+            final int t = paddingTop + (mIsVertical ? layout.getStartWithPadding() : laneStart);
             final int r = (mIsVertical ? l + mLaneSize : l);
             final int b = (mIsVertical ? t : t + mLaneSize);
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWLanedLayoutManager.java
Patch:
@@ -77,8 +77,8 @@ public ItemEntry[] newArray(int size) {
     private SparseArray<ItemEntry> mItemEntries;
     private SparseArray<ItemEntry> mItemEntriesToRestore;
 
-    private int mHorizontalSpacing;
-    private int mVerticalSpacing;
+    private int mHorizontalSpacing = 0;
+    private int mVerticalSpacing = 0;
 
     protected final Rect mTempRect = new Rect();
 

File: core/src/main/java/org/lucasr/twowayview/TWLayoutManager.java
Patch:
@@ -53,7 +53,7 @@ public static enum Flow {
     private int mFirstPosition;
     private int mFirstVisiblePosition;
 
-    private boolean mIsVertical;
+    private boolean mIsVertical = true;
 
     private SavedState mPendingSavedState = null;
 

File: layouts/src/main/java/org/lucasr/twowayview/widget/TWSpannableGridLayoutManager.java
Patch:
@@ -214,11 +214,11 @@ protected int getChildHeightMeasureSpec(View child, int position) {
         return MeasureSpec.makeMeasureSpec(getChildHeight(lp.rowSpan), MeasureSpec.EXACTLY);
     }
 
-    private int getFirstChildCountInLanes(int laneCount, int itemCount) {
+    private int getFirstChildCountInLanes(int laneCount, int maxPosition) {
         final boolean isVertical = isVertical();
 
         int childCount = 0, i = 0;
-        while (i < itemCount && i < laneCount) {
+        while (i < maxPosition && i < laneCount) {
             SpannableItemEntry entry = (SpannableItemEntry) getItemEntryForPosition(i);
             i += (isVertical ? entry.colSpan : entry.rowSpan);
             childCount++;
@@ -259,7 +259,7 @@ protected void moveLayoutToPosition(int position, int offset, Recycler recycler,
 
         final SpannableItemEntry entry = (SpannableItemEntry) getItemEntryForPosition(position);
         final int laneCount = lanes.getCount();
-        if (position >= getFirstChildCountInLanes(laneCount, state.getItemCount())) {
+        if (position >= getFirstChildCountInLanes(laneCount, position)) {
             final int spacing = getLaneSpacing(isVertical);
             for (int i = entry.lane; i < laneCount; i++) {
                 lanes.addToLane(i, Flow.FORWARD, spacing);

File: library/src/main/java/org/lucasr/twowayview/TWSpannableGridLayoutManager.java
Patch:
@@ -30,7 +30,7 @@
 import android.view.ViewGroup;
 
 public class TWSpannableGridLayoutManager extends TWGridLayoutManager {
-    private static final String LOGTAG = "TWSpannableGridView";
+    private static final String LOGTAG = "TWSpannableGridLayoutManager";
 
     private static final int DEFAULT_NUM_COLS = 3;
     private static final int DEFAULT_NUM_ROWS = 3;

File: sample/src/main/java/org/lucasr/twowayview/sample/TWFragment.java
Patch:
@@ -82,6 +82,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         mToast.setGravity(Gravity.CENTER, 0, 0);
 
         mRecyclerView = (TWView) view.findViewById(R.id.list);
+        mRecyclerView.setHasFixedSize(true);
         mRecyclerView.setLongClickable(true);
 
         mPositionText = (TextView) view.getRootView().findViewById(R.id.position);

File: library/src/main/java/org/lucasr/twowayview/TWLanes.java
Patch:
@@ -62,8 +62,8 @@ public TWLanes(TWLanedLayoutManager layout, int laneCount) {
         final int paddingRight = layout.getPaddingRight();
         final int paddingBottom = layout.getPaddingBottom();
 
-        final int verticalSpacing = 0;//layout.getVerticalSpacing();
-        final int horizontalSpacing = 0;//layout.getHorizontalSpacing();
+        final int verticalSpacing = layout.getVerticalSpacing();
+        final int horizontalSpacing = layout.getHorizontalSpacing();
 
         if (mIsVertical) {
             final int width = layout.getWidth() - paddingLeft - paddingRight;

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -1484,7 +1484,7 @@ public boolean onTouchEvent(MotionEvent ev) {
                 final float x = ev.getX();
                 final float y = ev.getY();
 
-                boolean inList = false;
+                final boolean inList;
                 if (mIsVertical) {
                     inList = x > getPaddingLeft() && x < getWidth() - getPaddingRight();
                 } else {

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -1275,7 +1275,7 @@ public void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
 
     @Override
     public boolean onInterceptTouchEvent(MotionEvent ev) {
-        if (!mIsAttached) {
+        if (!mIsAttached || mAdapter == null) {
             return false;
         }
 
@@ -1361,7 +1361,7 @@ public boolean onTouchEvent(MotionEvent ev) {
             return isClickable() || isLongClickable();
         }
 
-        if (!mIsAttached) {
+        if (!mIsAttached || mAdapter == null) {
             return false;
         }
 

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -3213,7 +3213,7 @@ private boolean drawStartEdge(Canvas canvas) {
         }
 
         final int restoreCount = canvas.save();
-        final int height = getHeight() - getPaddingTop() - getPaddingBottom();
+        final int height = getHeight();
 
         canvas.translate(0, height);
         canvas.rotate(270);
@@ -3229,8 +3229,8 @@ private boolean drawEndEdge(Canvas canvas) {
         }
 
         final int restoreCount = canvas.save();
-        final int width = getWidth() - getPaddingLeft() - getPaddingRight();
-        final int height = getHeight() - getPaddingTop() - getPaddingBottom();
+        final int width = getWidth();
+        final int height = getHeight();
 
         if (mIsVertical) {
             canvas.translate(-width, height);

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -4723,7 +4723,7 @@ private int measureWidthOfChildren(int heightMeasureSpec, int startPosition, int
                 recycleBin.addScrapView(child, -1);
             }
 
-            returnedWidth += child.getMeasuredHeight();
+            returnedWidth += child.getMeasuredWidth();
 
             if (returnedWidth >= maxWidth) {
                 // We went over, figure out which width to return.  If returnedWidth > maxWidth,

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -5368,6 +5368,8 @@ private View obtainView(int position, boolean[] isScrap) {
     }
 
     void resetState() {
+        mScroller.forceFinished(true);
+
         removeAllViewsInLayout();
 
         mSelectedStart = 0;

File: library/src/main/java/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -5368,6 +5368,8 @@ private View obtainView(int position, boolean[] isScrap) {
     }
 
     void resetState() {
+        mScroller.forceFinished(true);
+
         removeAllViewsInLayout();
 
         mSelectedStart = 0;

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -5737,7 +5737,7 @@ public LayoutParams(ViewGroup.LayoutParams other) {
             super(other);
 
             if (this.width == MATCH_PARENT) {
-                Log.w(LOGTAG, "Constructing LayoutParams with height MATCH_PARENT - " +
+                Log.w(LOGTAG, "Constructing LayoutParams with width MATCH_PARENT - " +
                         "does not make much sense as the view might change orientation. " +
                         "Falling back to WRAP_CONTENT");
                 this.width = WRAP_CONTENT;

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -6122,7 +6122,7 @@ private void updateEmptyStatus() {
             // Force one here to make sure that the state of the list matches
             // the state of the adapter.
             if (mDataChanged) {
-                onLayout(false, getLeft(), getTop(), getRight(), getBottom());
+                layout(getLeft(), getTop(), getRight(), getBottom());
             }
         } else {
             if (mEmptyView != null) {

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -1863,7 +1863,7 @@ boolean trackMotionScroll(int incrementalDelta) {
             for (int i = 0; i < childCount; i++) {
                 final View child = getChildAt(i);
                 final int childEnd = (mIsVertical ? child.getBottom() : child.getRight());
-                Log.d(LOGTAG, "      - childEnd: " + childEnd + " >= " + childrenStart);
+
                 if (childEnd >= childrenStart) {
                     break;
                 }

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -3327,7 +3327,6 @@ View obtainView(int position, boolean[] isScrap) {
             }
 
             lp.id = mAdapter.getItemId(position);
-            lp.viewType = mAdapter.getItemViewType(position);
 
             child.setLayoutParams(lp);
         }

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -1138,6 +1138,7 @@ public void run() {
             }
 
             cancelCheckForTap();
+            cancelCheckForLongPress();
             setPressed(false);
 
             if (mStartEdge != null && mEndEdge != null) {
@@ -1228,6 +1229,8 @@ private boolean maybeStartScrolling(int delta) {
             parent.requestDisallowInterceptTouchEvent(true);
         }
 
+        cancelCheckForLongPress();
+
         setPressed(false);
         View motionView = getChildAt(mMotionPosition - mFirstPosition);
         if (motionView != null) {

File: library/src/org/lucasr/twowayview/TwoWayView.java
Patch:
@@ -1574,7 +1574,7 @@ public void onInvalidated() {
         }
     }
 
-    private static class SavedState extends BaseSavedState {
+    static class SavedState extends BaseSavedState {
         int position;
         int offset;
 

