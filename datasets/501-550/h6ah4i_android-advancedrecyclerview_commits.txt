File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d_basic/DraggableExampleItemAdapter.java
Patch:
@@ -28,7 +28,6 @@
 import com.h6ah4i.android.example.advrecyclerview.common.utils.DrawableUtils;
 import com.h6ah4i.android.example.advrecyclerview.common.utils.ViewUtils;
 import com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemAdapter;
-import com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemConstants;
 import com.h6ah4i.android.widget.advrecyclerview.draggable.DraggableItemState;
 import com.h6ah4i.android.widget.advrecyclerview.draggable.ItemDraggableRange;
 import com.h6ah4i.android.widget.advrecyclerview.utils.AbstractDraggableItemViewHolder;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableItemState.java
Patch:
@@ -1,7 +1,6 @@
 package com.h6ah4i.android.widget.advrecyclerview.expandable;
 
 import com.h6ah4i.android.widget.advrecyclerview.expandable.annotation.ExpandableItemStateFlags;
-import com.h6ah4i.android.widget.advrecyclerview.swipeable.SwipeableItemConstants;
 
 /**
  * Helper class for decoding {@link ExpandableItemViewHolder#getExpandStateFlags()} flag values.

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemConstants.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.swipeable;
 
+import android.annotation.SuppressLint;
+
 import androidx.recyclerview.widget.RecyclerView;
 
 public interface SwipeableItemConstants {
@@ -302,6 +304,7 @@ public interface SwipeableItemConstants {
      * <p>After-reaction type used for the {@link SwipeableItemViewHolder#setAfterSwipeReaction(int)} and {@link SwipeableItemViewHolder#getAfterSwipeReaction()} methods.</p>
      * <p>Represents that the item moved to swiped direction.</p>
      */
+    @SuppressLint("ShiftFlags")
     int AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION = 2;
 
     /**

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/about/AssetFileLibraryLicenseDataCollector.java
Patch:
@@ -25,7 +25,6 @@
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Comparator;
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/DraggableSwipeableExampleActivity.java
Patch:
@@ -17,7 +17,6 @@
 package com.h6ah4i.android.example.advrecyclerview.demo_ds;
 
 import android.os.Bundle;
-import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.h6ah4i.android.example.advrecyclerview.R;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/ExpandableDraggableSwipeableExampleActivity.java
Patch:
@@ -17,7 +17,6 @@
 package com.h6ah4i.android.example.advrecyclerview.demo_eds;
 
 import android.os.Bundle;
-import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.h6ah4i.android.example.advrecyclerview.R;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_basic/SwipeableExampleActivity.java
Patch:
@@ -17,7 +17,6 @@
 package com.h6ah4i.android.example.advrecyclerview.demo_s_basic;
 
 import android.os.Bundle;
-import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.h6ah4i.android.example.advrecyclerview.R;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_longpress/SwipeOnLongPressExampleActivity.java
Patch:
@@ -17,7 +17,6 @@
 package com.h6ah4i.android.example.advrecyclerview.demo_s_longpress;
 
 import android.os.Bundle;
-import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.h6ah4i.android.example.advrecyclerview.R;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_vertical/VerticalSwipeableExampleActivity.java
Patch:
@@ -17,7 +17,6 @@
 package com.h6ah4i.android.example.advrecyclerview.demo_s_vertical;
 
 import android.os.Bundle;
-import android.view.View;
 
 import com.google.android.material.snackbar.Snackbar;
 import com.h6ah4i.android.example.advrecyclerview.R;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/AddAnimationInfo.java
Patch:
@@ -33,9 +33,7 @@ public RecyclerView.ViewHolder getAvailableViewHolder() {
 
     @Override
     public void clear(RecyclerView.ViewHolder item) {
-        if (holder == null) {
-            holder = null;
-        }
+        holder = null;
     }
 
     @NonNull

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/ItemChangeAnimationManager.java
Patch:
@@ -56,11 +56,11 @@ public void setDuration(long duration) {
 
     @Override
     protected void onCreateAnimation(ChangeAnimationInfo info) {
-        if (info.oldHolder != null && info.oldHolder.itemView != null) {
+        if (info.oldHolder != null) {
             onCreateChangeAnimationForOldItem(info);
         }
 
-        if (info.newHolder != null && info.newHolder.itemView != null) {
+        if (info.newHolder != null) {
             onCreateChangeAnimationForNewItem(info);
         }
     }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -156,7 +156,7 @@ public int getItemViewType(int position) {
     @Override
     public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         if (mExpandableItemAdapter == null) {
-            return null;
+            throw new IllegalStateException();
         }
 
         final int maskedViewType = (viewType & (~VIEW_TYPE_FLAG_IS_GROUP));

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/BaseItemAnimationManager.java
Patch:
@@ -69,9 +69,7 @@ public void cancelAllStartedAnimations() {
     }
 
     public void runPendingAnimations(boolean deferred, long deferredDelay) {
-        final List<T> ready = new ArrayList<>();
-
-        ready.addAll(mPending);
+        final List<T> ready = new ArrayList<>(mPending);
         mPending.clear();
 
         if (deferred) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandablePositionTranslator.java
Patch:
@@ -167,7 +167,7 @@ public long[] getSavedStateArray() {
 
         for (int i = 0; i < mGroupCount; i++) {
             final long t = mCachedGroupPosInfo[i];
-            expandedGroups[i] = ((long) mCachedGroupId[i] << 32l) | (t & FLAG_EXPANDED);
+            expandedGroups[i] = ((long) mCachedGroupId[i] << 32L) | (t & FLAG_EXPANDED);
         }
 
         Arrays.sort(expandedGroups);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d_grid/DraggableGridExampleFragment.java
Patch:
@@ -36,6 +36,7 @@
 import com.h6ah4i.android.widget.advrecyclerview.draggable.RecyclerViewDragDropManager;
 import com.h6ah4i.android.widget.advrecyclerview.utils.WrapperAdapterUtils;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.Fragment;
@@ -60,12 +61,12 @@ public void onCreate(@Nullable Bundle savedInstanceState) {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
         return inflater.inflate(R.layout.fragment_recycler_list_view, container, false);
     }
 
     @Override
-    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
         //noinspection ConstantConditions

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_wa_filtering/MyItemFilteringAdapter.java
Patch:
@@ -61,13 +61,14 @@ public long getItemId(int position) {
         }
     }
 
+    @NonNull
     @Override
-    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
         return super.onCreateViewHolder(parent, viewType);
     }
 
     @Override
-    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position, List payloads) {
+    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position, @NonNull List payloads) {
         if (isFilteringEnabled()) {
             super.onBindViewHolder(holder, position * 2, payloads);
         } else {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/GeneralItemAnimator.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.animator;
 
+import androidx.annotation.NonNull;
 import androidx.core.view.ViewCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import android.util.Log;
@@ -116,7 +117,7 @@ protected void cancelAnimations(RecyclerView.ViewHolder item) {
     }
 
     @Override
-    public void endAnimation(RecyclerView.ViewHolder item) {
+    public void endAnimation(@NonNull RecyclerView.ViewHolder item) {
 
         // this will trigger end callback which should set properties to their target values.
         cancelAnimations(item);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/AddAnimationInfo.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.animator.impl;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 public class AddAnimationInfo extends ItemAnimationInfo {
@@ -37,6 +38,7 @@ public void clear(RecyclerView.ViewHolder item) {
         }
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "AddAnimationInfo{" +

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/ChangeAnimationInfo.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.animator.impl;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 public class ChangeAnimationInfo extends ItemAnimationInfo {
@@ -53,6 +54,7 @@ public void clear(RecyclerView.ViewHolder item) {
         }
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "ChangeInfo{" +

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/MoveAnimationInfo.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.animator.impl;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 public class MoveAnimationInfo extends ItemAnimationInfo {
@@ -45,6 +46,7 @@ public void clear(RecyclerView.ViewHolder item) {
         }
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "MoveAnimationInfo{" +

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/impl/RemoveAnimationInfo.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.animator.impl;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 public class RemoveAnimationInfo extends ItemAnimationInfo {
@@ -37,6 +38,7 @@ public void clear(RecyclerView.ViewHolder item) {
         }
     }
 
+    @NonNull
     @Override
     public String toString() {
         return "RemoveAnimationInfo{" +

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/decoration/ItemShadowDecorator.java
Patch:
@@ -55,7 +55,7 @@ public ItemShadowDecorator(@NonNull NinePatchDrawable shadow, boolean castShadow
     }
 
     @Override
-    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
+    public void onDraw(@NonNull Canvas c, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         final int childCount = parent.getChildCount();
 
         if (childCount == 0) {
@@ -106,7 +106,7 @@ private boolean shouldDrawDropShadow(View child) {
     }
 
     @Override
-    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+    public void getItemOffsets(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         outRect.set(0, 0, 0, 0);
     }
 }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -21,6 +21,8 @@
 import android.graphics.Paint;
 import android.graphics.Rect;
 import android.graphics.drawable.NinePatchDrawable;
+
+import androidx.annotation.NonNull;
 import androidx.core.view.ViewCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import android.view.View;
@@ -133,7 +135,7 @@ private static View findRangeLastItem(RecyclerView rv, ItemDraggableRange range,
     }
 
     @Override
-    public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state) {
+    public void onDrawOver(@NonNull Canvas c, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         if (mDraggingItemImage == null) {
             return;
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/ItemDraggableRange.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.draggable;
 
+import androidx.annotation.NonNull;
+
 public class ItemDraggableRange {
     private final int mStart;
     private final int mEnd;
@@ -45,6 +47,7 @@ protected String getClassName() {
         return "ItemDraggableRange";
     }
 
+    @NonNull
     @Override
     public String toString() {
         return getClassName() + "{" +

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/SwapTargetItemOperator.java
Patch:
@@ -18,6 +18,8 @@
 
 import android.graphics.Canvas;
 import android.graphics.Rect;
+
+import androidx.annotation.NonNull;
 import androidx.core.view.ViewCompat;
 import androidx.core.view.ViewPropertyAnimatorCompat;
 import androidx.core.view.ViewPropertyAnimatorListener;
@@ -111,7 +113,7 @@ public void setSwapTargetItem(RecyclerView.ViewHolder swapTargetItem) {
     }
 
     @Override
-    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
+    public void onDraw(@NonNull Canvas c, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         final RecyclerView.ViewHolder draggingItem = mDraggingItemViewHolder;
         final RecyclerView.ViewHolder swapTargetItem = mSwapTargetItem;
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/event/RecyclerViewRecyclerEventDistributor.java
Patch:
@@ -16,6 +16,7 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.event;
 
+import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
 
 import java.lang.ref.WeakReference;
@@ -66,7 +67,7 @@ public InternalRecyclerListener(RecyclerViewRecyclerEventDistributor distributor
         }
 
         @Override
-        public void onViewRecycled(RecyclerView.ViewHolder holder) {
+        public void onViewRecycled(@NonNull RecyclerView.ViewHolder holder) {
             final RecyclerViewRecyclerEventDistributor distributor = mRefDistributor.get();
             
             if (distributor != null) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -98,12 +98,12 @@ public interface OnGroupCollapseListener {
     public RecyclerViewExpandableItemManager(@Nullable Parcelable savedState) {
         mInternalUseOnItemTouchListener = new RecyclerView.OnItemTouchListener() {
             @Override
-            public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {
+            public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
                 return RecyclerViewExpandableItemManager.this.onInterceptTouchEvent(rv, e);
             }
 
             @Override
-            public void onTouchEvent(RecyclerView rv, MotionEvent e) {
+            public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
             }
 
             @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -111,12 +111,12 @@ public interface OnItemSwipeEventListener {
     public RecyclerViewSwipeManager() {
         mInternalUseOnItemTouchListener = new RecyclerView.OnItemTouchListener() {
             @Override
-            public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {
+            public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
                 return RecyclerViewSwipeManager.this.onInterceptTouchEvent(rv, e);
             }
 
             @Override
-            public void onTouchEvent(RecyclerView rv, MotionEvent e) {
+            public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
                 RecyclerViewSwipeManager.this.onTouchEvent(rv, e);
             }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RemovingItemDecorator.java
Patch:
@@ -19,6 +19,8 @@
 import android.graphics.Canvas;
 import android.graphics.Rect;
 import android.graphics.drawable.Drawable;
+
+import androidx.annotation.NonNull;
 import androidx.core.view.ViewCompat;
 import androidx.recyclerview.widget.RecyclerView;
 import android.view.View;
@@ -71,7 +73,7 @@ public void setMoveAnimationInterpolator(Interpolator interpolator) {
     }
 
     @Override
-    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
+    public void onDraw(@NonNull Canvas c, @NonNull RecyclerView parent, @NonNull RecyclerView.State state) {
         final long elapsedTime = getElapsedTime(mStartTime);
 
         final float scale = determineBackgroundScaleSwipeCompletedSuccessfully(elapsedTime);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/touchguard/RecyclerViewTouchActionGuardManager.java
Patch:
@@ -46,12 +46,12 @@ public class RecyclerViewTouchActionGuardManager {
     public RecyclerViewTouchActionGuardManager() {
         mInternalUseOnItemTouchListener = new RecyclerView.OnItemTouchListener() {
             @Override
-            public boolean onInterceptTouchEvent(RecyclerView rv, MotionEvent e) {
+            public boolean onInterceptTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
                 return RecyclerViewTouchActionGuardManager.this.onInterceptTouchEvent(rv, e);
             }
 
             @Override
-            public void onTouchEvent(RecyclerView rv, MotionEvent e) {
+            public void onTouchEvent(@NonNull RecyclerView rv, @NonNull MotionEvent e) {
                 RecyclerViewTouchActionGuardManager.this.onTouchEvent(rv, e);
             }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/composedadapter/ComposedChildAdapterTag.java
Patch:
@@ -20,9 +20,9 @@
 /**
  * Returned value of the {@link ComposedAdapter#addAdapter(RecyclerView.Adapter)} method.
  *
- * @see {@link ComposedAdapter#addAdapter(RecyclerView.Adapter)}
- * @see {@link ComposedAdapter#addAdapter(RecyclerView.Adapter, int)}
- * @see {@link ComposedAdapter#removeAdapter(ComposedChildAdapterTag)}
+ * @see ComposedAdapter#addAdapter(RecyclerView.Adapter)
+ * @see ComposedAdapter#addAdapter(RecyclerView.Adapter, int)
+ * @see ComposedAdapter#removeAdapter(ComposedChildAdapterTag)
  */
 public class ComposedChildAdapterTag {
     ComposedChildAdapterTag() {

File: library/src/test/java/com/h6ah4i/android/widget/advrecyclerview/utils/DebugWrapperAdapterTest.java
Patch:
@@ -20,7 +20,6 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.h6ah4i.android.widget.advrecyclerview.BuildConfig;
 import com.h6ah4i.android.widget.advrecyclerview.adapter.AdapterPath;
 import com.h6ah4i.android.widget.advrecyclerview.adapter.AdapterPathSegment;
 import com.h6ah4i.android.widget.advrecyclerview.adapter.SimpleWrapperAdapter;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/composedadapter/SegmentedViewTypeTranslator.java
Patch:
@@ -57,6 +57,7 @@ public long unwrapViewType(int viewType) {
         }
 
         final int packedSegments = mUnwrapSegmentMap.valueAt(index);
+        //noinspection BooleanMethodIsAlwaysInverted
         final long packedViewType = (((long) packedSegments) << 32) | (((long) viewType) & 0xFFFFFFFFL);
 
         return packedViewType;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/CustomRecyclerViewUtils.java
Patch:
@@ -315,8 +315,7 @@ public static int getSpanSize(@Nullable RecyclerView.ViewHolder holder) {
             final boolean isFullSpan = ((StaggeredGridLayoutManager.LayoutParams) lp).isFullSpan();
             if (isFullSpan) {
                 final RecyclerView rv = (RecyclerView) itemView.getParent();
-                final int spanCount = getSpanCount(rv);
-                return spanCount;
+                return getSpanCount(rv);
             } else {
                 return 1;
             }

File: library/src/test/java/com/h6ah4i/android/widget/advrecyclerview/adapter/ItemViewTypeComposerTest.java
Patch:
@@ -103,7 +103,7 @@ public void extractWrappedViewTypePart() throws Exception {
         assertThat(ItemViewTypeComposer.extractWrappedViewTypePart(0), is(0));
 
         // one
-        assertThat(ItemViewTypeComposer.extractWrappedViewTypePart(1 << ItemViewTypeComposer.MIN_WRAPPED_VIEW_TYPE), is(1));
+        assertThat(ItemViewTypeComposer.extractWrappedViewTypePart(1 << ItemViewTypeComposer.BIT_OFFSET_WRAPPED_VIEW_TYPE), is(1));
 
         // full bits
         assertThat(ItemViewTypeComposer.extractWrappedViewTypePart(ItemViewTypeComposer.BIT_MASK_WRAPPED_VIEW_TYPE), is(-1));

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_already_expanded/AlreadyExpandedGroupsExpandableExampleAdapter.java
Patch:
@@ -153,8 +153,6 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
 
             holder.mContainer.setBackgroundResource(bgResId);
             holder.mIndicator.setExpandedState(isExpanded, animateIndicator);
-        } else {
-            Log.d("TAG", "teste");
         }
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/headerfooter/AbstractHeaderFooterWrapperAdapter.java
Patch:
@@ -294,7 +294,7 @@ public long getHeaderItemId(int localPosition) {
      * Return the stable ID for the item at <code>localPosition</code>. If {@link #hasStableIds()}
      * would return false this method should return {@link RecyclerView#NO_ID}.
      *
-     * @param localPosition Foote adapter position to query
+     * @param localPosition Footer adapter position to query
      * @return the stable ID of the item at position
      * @see {@link RecyclerView.Adapter#getItemId(int)}
      */

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemAdapter.java
Patch:
@@ -33,7 +33,7 @@ public interface DraggableItemAdapter<T extends RecyclerView.ViewHolder> {
     boolean onCheckCanStartDrag(T holder, int position, int x, int y);
 
     /**
-     * Called after the {@link #onCheckCanStartDrag(androidx.appcompat.widget.RecyclerView.ViewHolder, int, int, int)} method returned true.
+     * Called after the {@link #onCheckCanStartDrag(androidx.recyclerview.widget.RecyclerView.ViewHolder, int, int, int)} method returned true.
      *
      * @param holder The ViewHolder which is associated to item user is attempt to start dragging.
      * @param position The position of the item within the adapter's data set.

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemViewHolder.java
Patch:
@@ -21,7 +21,7 @@
 /**
  * Interface which provides required information for dragging item.
  *
- * Implement this interface on your sub-class of the {@link androidx.appcompat.widget.RecyclerView.ViewHolder}.
+ * Implement this interface on your sub-class of the {@link androidx.recyclerview.widget.RecyclerView.ViewHolder}.
  */
 public interface DraggableItemViewHolder {
     /**

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableDraggableItemAdapter.java
Patch:
@@ -48,7 +48,7 @@ public interface ExpandableDraggableItemAdapter<GVH extends RecyclerView.ViewHol
     boolean onCheckChildCanStartDrag(CVH holder, int groupPosition, int childPosition, int x, int y);
 
     /**
-     * Called after the {@link #onCheckGroupCanStartDrag(androidx.appcompat.widget.RecyclerView.ViewHolder, int, int, int)} method returned true.
+     * Called after the {@link #onCheckGroupCanStartDrag(androidx.recyclerview.widget.RecyclerView.ViewHolder, int, int, int)} method returned true.
      *
      * @param holder The ViewHolder which is associated to item user is attempt to start dragging.
      * @param groupPosition Group position.
@@ -59,7 +59,7 @@ public interface ExpandableDraggableItemAdapter<GVH extends RecyclerView.ViewHol
     ItemDraggableRange onGetGroupItemDraggableRange(GVH holder, int groupPosition);
 
     /**
-     * Called after the {@link #onCheckChildCanStartDrag(androidx.appcompat.widget.RecyclerView.ViewHolder, int, int, int, int)} method returned true.
+     * Called after the {@link #onCheckChildCanStartDrag(androidx.recyclerview.widget.RecyclerView.ViewHolder, int, int, int, int)} method returned true.
      *
      * @param holder The ViewHolder which is associated to item user is attempt to start dragging.
      * @param groupPosition Group position.

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableItemViewHolder.java
Patch:
@@ -20,7 +20,7 @@
 
 /**
  * <p>Interface which provides required information for expanding item.</p>
- * <p>Implement this interface on your sub-class of the {@link androidx.appcompat.widget.RecyclerView.ViewHolder}.</p>
+ * <p>Implement this interface on your sub-class of the {@link androidx.recyclerview.widget.RecyclerView.ViewHolder}.</p>
  */
 public interface ExpandableItemViewHolder {
     /**

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemViewHolder.java
Patch:
@@ -24,7 +24,7 @@
 /**
  * Interface which provides required information for swiping item.
  * <p>
- * Implement this interface on your sub-class of the {@link androidx.appcompat.widget.RecyclerView.ViewHolder}.
+ * Implement this interface on your sub-class of the {@link androidx.recyclerview.widget.RecyclerView.ViewHolder}.
  */
 public interface SwipeableItemViewHolder {
     /**

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/touchguard/RecyclerViewTouchActionGuardManager.java
Patch:
@@ -71,9 +71,9 @@ public boolean isReleased() {
     }
 
     /**
-     * Attaches {@link androidx.appcompat.widget.RecyclerView} instance.
+     * Attaches {@link androidx.recyclerview.widget.RecyclerView} instance.
      *
-     * @param rv The {@link androidx.appcompat.widget.RecyclerView} instance
+     * @param rv The {@link androidx.recyclerview.widget.RecyclerView} instance
      */
     public void attachRecyclerView(@NonNull RecyclerView rv) {
         if (isReleased()) {
@@ -91,7 +91,7 @@ public void attachRecyclerView(@NonNull RecyclerView rv) {
     }
 
     /**
-     * Detach the {@link androidx.appcompat.widget.RecyclerView} instance and release internal field references.
+     * Detach the {@link androidx.recyclerview.widget.RecyclerView} instance and release internal field references.
      *
      * This method should be called in order to avoid memory leaks.
      */

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/RecyclerViewAdapterUtils.java
Patch:
@@ -46,7 +46,7 @@ public static RecyclerView getParentRecyclerView(@Nullable View view) {
     }
 
     /**
-     * Gets directly child of RecyclerView (== {@link androidx.appcompat.widget.RecyclerView.ViewHolder#itemView}})
+     * Gets directly child of RecyclerView (== {@link androidx.recyclerview.widget.RecyclerView.ViewHolder#itemView}})
      * @param view Child view of the RecyclerView's item
      * @return Item view
      */
@@ -60,7 +60,7 @@ public static View getParentViewHolderItemView(@Nullable View view) {
     }
 
     /**
-     * Gets {@link androidx.appcompat.widget.RecyclerView.ViewHolder}.
+     * Gets {@link androidx.recyclerview.widget.RecyclerView.ViewHolder}.
      * @param view Child view of the RecyclerView's item
      * @return ViewHolder
      */

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -600,7 +600,7 @@ private void startSwiping(MotionEvent e, RecyclerView.ViewHolder holder, int ite
         }
 
         // raise onSwipeItemStarted() event
-        mWrapperAdapter.onSwipeItemStarted(this, holder, mSwipingItemId);
+        mWrapperAdapter.onSwipeItemStarted(this, holder, itemPosition, mSwipingItemId);
     }
 
     private void finishSwiping(int result) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -195,7 +195,7 @@ public void start(DraggingItemInfo draggingItemInfo, int touchX, int touchY) {
         mLayoutType = CustomRecyclerViewUtils.getLayoutType(mRecyclerView);
 
         mInitialDraggingItemScaleX = itemView.getScaleX();
-        mInitialDraggingItemScaleY = itemView.getScaleX();
+        mInitialDraggingItemScaleY = itemView.getScaleY();
 
         mLastDraggingItemScaleX = 1.0f;
         mLastDraggingItemScaleY = 1.0f;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -198,7 +198,7 @@ public void start(DraggingItemInfo draggingItemInfo, int touchX, int touchY) {
         mLayoutOrientation = CustomRecyclerViewUtils.getOrientation(mRecyclerView);
 
         mInitialDraggingItemScaleX = ViewCompat.getScaleX(itemView);
-        mInitialDraggingItemScaleY = ViewCompat.getScaleX(itemView);
+        mInitialDraggingItemScaleY = ViewCompat.getScaleY(itemView);
 
         mLastDraggingItemScaleX = 1.0f;
         mLastDraggingItemScaleY = 1.0f;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -287,13 +287,13 @@ private void cancelDrag() {
     }
 
     @Override
-    public void onViewRecycled(VH holder) {
+    public void onViewRecycled(VH holder, int viewType) {
         if (isDragging()) {
             mDragDropManager.onItemViewRecycled(holder);
             mDraggingItemViewHolder = mDragDropManager.getDraggingItemViewHolder();
         }
 
-        super.onViewRecycled(holder);
+        super.onViewRecycled(holder, viewType);
     }
 
     // NOTE: This method is called from RecyclerViewDragDropManager

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -220,12 +220,12 @@ private void rebuildPositionTranslator() {
     }
 
     @Override
-    public void onViewRecycled(RecyclerView.ViewHolder holder) {
+    public void onViewRecycled(RecyclerView.ViewHolder holder, int viewType) {
         if (holder instanceof ExpandableItemViewHolder) {
             ((ExpandableItemViewHolder) holder).setExpandStateFlags(STATE_FLAG_INITIAL_VALUE);
         }
 
-        super.onViewRecycled(holder);
+        super.onViewRecycled(holder, viewType);
     }
 
     @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -68,8 +68,8 @@ protected void onRelease() {
     }
 
     @Override
-    public void onViewRecycled(VH holder) {
-        super.onViewRecycled(holder);
+    public void onViewRecycled(VH holder, int viewType) {
+        super.onViewRecycled(holder, viewType);
 
         if ((mSwipingItemId != RecyclerView.NO_ID) && (mSwipingItemId == holder.getItemId())) {
             mSwipeManager.cancelSwipe();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -287,13 +287,13 @@ private void cancelDrag() {
     }
 
     @Override
-    public void onViewRecycled(VH holder) {
+    public void onViewRecycled(VH holder, int viewType) {
         if (isDragging()) {
             mDragDropManager.onItemViewRecycled(holder);
             mDraggingItemViewHolder = mDragDropManager.getDraggingItemViewHolder();
         }
 
-        super.onViewRecycled(holder);
+        super.onViewRecycled(holder, viewType);
     }
 
     // NOTE: This method is called from RecyclerViewDragDropManager

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -220,12 +220,12 @@ private void rebuildPositionTranslator() {
     }
 
     @Override
-    public void onViewRecycled(RecyclerView.ViewHolder holder) {
+    public void onViewRecycled(RecyclerView.ViewHolder holder, int viewType) {
         if (holder instanceof ExpandableItemViewHolder) {
             ((ExpandableItemViewHolder) holder).setExpandStateFlags(STATE_FLAG_INITIAL_VALUE);
         }
 
-        super.onViewRecycled(holder);
+        super.onViewRecycled(holder, viewType);
     }
 
     @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -68,8 +68,8 @@ protected void onRelease() {
     }
 
     @Override
-    public void onViewRecycled(VH holder) {
-        super.onViewRecycled(holder);
+    public void onViewRecycled(VH holder, int viewType) {
+        super.onViewRecycled(holder, viewType);
 
         if ((mSwipingItemId != RecyclerView.NO_ID) && (mSwipingItemId == holder.getItemId())) {
             mSwipeManager.cancelSwipe();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -578,7 +578,7 @@ public boolean isCheckCanDropEnabled() {
         switch (action) {
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
-                handleActionUpOrCancel(action, true);
+                handled = handleActionUpOrCancel(action, true);
                 break;
 
             case MotionEvent.ACTION_DOWN:
@@ -922,6 +922,7 @@ private void finishDragging(boolean result) {
 
     private boolean handleActionUpOrCancel(int action, boolean invokeFinish) {
         final boolean result = (action == MotionEvent.ACTION_UP);
+        final boolean handled = isDragging();
 
         if (mHandler != null) {
             mHandler.cancelLongPressDetection();
@@ -951,7 +952,7 @@ private boolean handleActionUpOrCancel(int action, boolean invokeFinish) {
             finishDragging(result);
         }
 
-        return true;
+        return handled;
     }
 
     private boolean handleActionMoveWhileNotDragging(RecyclerView rv, MotionEvent e) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -578,7 +578,7 @@ public boolean isCheckCanDropEnabled() {
         switch (action) {
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
-                handleActionUpOrCancel(action, true);
+                handled = handleActionUpOrCancel(action, true);
                 break;
 
             case MotionEvent.ACTION_DOWN:
@@ -922,6 +922,7 @@ private void finishDragging(boolean result) {
 
     private boolean handleActionUpOrCancel(int action, boolean invokeFinish) {
         final boolean result = (action == MotionEvent.ACTION_UP);
+        final boolean handled = isDragging();
 
         if (mHandler != null) {
             mHandler.cancelLongPressDetection();
@@ -951,7 +952,7 @@ private boolean handleActionUpOrCancel(int action, boolean invokeFinish) {
             finishDragging(result);
         }
 
-        return true;
+        return handled;
     }
 
     private boolean handleActionMoveWhileNotDragging(RecyclerView rv, MotionEvent e) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/headerfooter/AbstractHeaderFooterWrapperAdapter.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.v7.widget.RecyclerView;
 import android.view.ViewGroup;
 
+import com.h6ah4i.android.widget.advrecyclerview.adapter.AdapterPathSegment;
 import com.h6ah4i.android.widget.advrecyclerview.adapter.ItemIdComposer;
 import com.h6ah4i.android.widget.advrecyclerview.adapter.ItemViewTypeComposer;
 import com.h6ah4i.android.widget.advrecyclerview.composedadapter.ComposedAdapter;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractExpandableItemAdapter.java
Patch:
@@ -154,6 +154,7 @@ public boolean onHookGroupCollapse(int groupPosition, boolean fromUser) {
     @Override
     public boolean onHookGroupCollapse(int groupPosition, boolean fromUser, Object payload) {
         return onHookGroupCollapse(groupPosition, fromUser);
+    }
 
     /**
      * {@inheritDoc}

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/ItemSlidingAnimator.java
Patch:
@@ -136,12 +136,12 @@ private boolean slideToSpecifiedPositionInternal(
             final int width = containerView.getWidth();
             final int height = containerView.getHeight();
 
-            if (horizontal && (proportional || width != 0)) {
+            if (horizontal && (!proportional || width != 0)) {
                 final int translationX;
                 translationX = (int) ((proportional ? width * amount : amount) + 0.5f);
                 return animateSlideInternalCompat(
                         holder, horizontal, translationX, 0, duration, interpolator, swipeFinish);
-            } else if (!horizontal && (proportional || height != 0)) {
+            } else if (!horizontal && (!proportional || height != 0)) {
                 final int translationY;
                 translationY = (int) ((proportional ? height * amount : amount) + 0.5f);
                 return animateSlideInternalCompat(

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/ItemSlidingAnimator.java
Patch:
@@ -136,12 +136,12 @@ private boolean slideToSpecifiedPositionInternal(
             final int width = containerView.getWidth();
             final int height = containerView.getHeight();
 
-            if (horizontal && (proportional || width != 0)) {
+            if (horizontal && (!proportional || width != 0)) {
                 final int translationX;
                 translationX = (int) ((proportional ? width * amount : amount) + 0.5f);
                 return animateSlideInternalCompat(
                         holder, horizontal, translationX, 0, duration, interpolator, swipeFinish);
-            } else if (!horizontal && (proportional || height != 0)) {
+            } else if (!horizontal && (!proportional || height != 0)) {
                 final int translationY;
                 translationY = (int) ((proportional ? height * amount : amount) + 0.5f);
                 return animateSlideInternalCompat(

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -2056,7 +2056,7 @@ public InternalHandler(RecyclerViewDragDropManager holder) {
         }
 
         public void release() {
-            removeCallbacks(null);
+            removeCallbacksAndMessages(null);
             mHolder = null;
         }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -1006,7 +1006,7 @@ public InternalHandler(RecyclerViewSwipeManager holder) {
         }
 
         public void release() {
-            removeCallbacks(null);
+            removeCallbacksAndMessages(null);
             mHolder = null;
         }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -2056,7 +2056,7 @@ public InternalHandler(RecyclerViewDragDropManager holder) {
         }
 
         public void release() {
-            removeCallbacks(null);
+            removeCallbacksAndMessages(null);
             mHolder = null;
         }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -1006,7 +1006,7 @@ public InternalHandler(RecyclerViewSwipeManager holder) {
         }
 
         public void release() {
-            removeCallbacks(null);
+            removeCallbacksAndMessages(null);
             mHolder = null;
         }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -65,7 +65,7 @@ public ExpandableRecyclerViewWrapperAdapter(RecyclerViewExpandableItemManager ma
 
         mExpandableItemAdapter = getExpandableItemAdapter(adapter);
         if (mExpandableItemAdapter == null) {
-            throw new IllegalArgumentException("adapter does not implement RecyclerViewExpandableListManager");
+            throw new IllegalArgumentException("adapter does not implement ExpandableItemAdapter");
         }
 
         if (manager == null) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -421,7 +421,7 @@ private Bitmap createDraggingItemImage(View v, NinePatchDrawable shadow) {
                 View.MeasureSpec.makeMeasureSpec(viewWidth, View.MeasureSpec.EXACTLY),
                 View.MeasureSpec.makeMeasureSpec(viewHeight, View.MeasureSpec.EXACTLY));
 
-        v.layout(viewTop, viewLeft, viewLeft + viewWidth, viewTop + viewHeight);
+        v.layout(viewLeft, viewTop, viewLeft + viewWidth, viewTop + viewHeight);
 
         final Bitmap bitmap = Bitmap.createBitmap(canvasWidth, canvasHeight, Bitmap.Config.ARGB_8888);
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/BaseDraggableItemDecorator.java
Patch:
@@ -59,7 +59,7 @@ protected void moveToDefaultPosition(View targetView, float initialScale, float
         final int animDuration = (int) (mReturnToDefaultPositionDuration * durationFactor);
 
         if (supportsViewPropertyAnimation() && animate && (animDuration > RETURN_TO_DEFAULT_POS_ANIMATE_THRESHOLD_MSEC)) {
-            final ViewPropertyAnimatorCompat animator = ViewCompat.animate(targetView);
+            ViewPropertyAnimatorCompat animator = ViewCompat.animate(targetView);
 
             ViewCompat.setScaleX(targetView, initialScale);
             ViewCompat.setScaleY(targetView, initialScale);
@@ -85,6 +85,7 @@ public void onAnimationStart(View view) {
 
                 @Override
                 public void onAnimationEnd(View view) {
+                    ViewPropertyAnimatorCompat animator = ViewCompat.animate(view);
                     animator.setListener(null);
                     resetDraggingItemViewEffects(view, initialTranslationZ);
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -659,7 +659,7 @@ private void finishSwiping(int result) {
         boolean slideAnimated = false;
 
         switch (afterReaction) {
-            case AFTER_SWIPE_REACTION_DEFAULT:
+            case AFTER_SWIPE_REACTION_MOVE_TO_ORIGIN:
                 slideAnimated = mItemSlideAnimator.finishSwipeSlideToDefaultPosition(
                         swipingItem, mSwipeHorizontal, true, mReturnToDefaultPositionAnimationDuration,
                         itemPosition, resultAction);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemViewHolder.java
Patch:
@@ -77,6 +77,7 @@ public interface SwipeableItemViewHolder {
      *
      * @param reaction After-reaction type. One of these values;
      *                 - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_DEFAULT}
+     *                 - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_MOVE_TO_ORIGIN}
      *                 - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_REMOVE_ITEM}
      *                 - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION}
      *                 - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_DO_NOTHING}
@@ -88,6 +89,7 @@ public interface SwipeableItemViewHolder {
      *
      * @return After-reaction type. One of these values;
      * - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_DEFAULT}
+     * - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_MOVE_TO_ORIGIN}
      * - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_REMOVE_ITEM}
      * - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION}
      * - {@link com.h6ah4i.android.widget.advrecyclerview.swipeable.RecyclerViewSwipeManager#AFTER_SWIPE_REACTION_DO_NOTHING}

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -332,7 +332,7 @@ private static void setSwipeItemSlideAmount(SwipeableItemViewHolder holder, floa
 
     private static float getSwipeAmountFromAfterReaction(int result, int afterReaction) {
         switch (afterReaction) {
-            case RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_DEFAULT:
+            case RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_MOVE_TO_ORIGIN:
                 return 0.0f;
             case RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION:
             case RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_REMOVE_ITEM:

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/annotation/SwipeableItemAfterReactions.java
Patch:
@@ -24,7 +24,8 @@
 import java.lang.annotation.RetentionPolicy;
 
 @IntDef(flag = true, value = {
-        SwipeableItemConstants.AFTER_SWIPE_REACTION_DEFAULT,
+        /*SwipeableItemConstants.AFTER_SWIPE_REACTION_DEFAULT,*/
+        SwipeableItemConstants.AFTER_SWIPE_REACTION_MOVE_TO_ORIGIN,
         SwipeableItemConstants.AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION,
         SwipeableItemConstants.AFTER_SWIPE_REACTION_REMOVE_ITEM,
         SwipeableItemConstants.AFTER_SWIPE_REACTION_DO_NOTHING,

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemAdapter.java
Patch:
@@ -36,7 +36,7 @@ public interface SwipeableItemAdapter<T extends RecyclerView.ViewHolder> extends
      *              {@link SwipeableItemConstants#RESULT_SWIPED_RIGHT} or
      *              {@link SwipeableItemConstants#RESULT_SWIPED_DOWN}
      *
-     * @return Result action.
+     * @return {@link SwipeResultAction} object.
      */
     SwipeResultAction onSwipeItem(T holder, int position, @SwipeableItemResults int result);
 }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/annotation/SwipeableItemAfterReactions.java
Patch:
@@ -27,6 +27,7 @@
         SwipeableItemConstants.AFTER_SWIPE_REACTION_DEFAULT,
         SwipeableItemConstants.AFTER_SWIPE_REACTION_MOVE_TO_SWIPED_DIRECTION,
         SwipeableItemConstants.AFTER_SWIPE_REACTION_REMOVE_ITEM,
+        SwipeableItemConstants.AFTER_SWIPE_REACTION_DO_NOTHING,
 })
 @Retention(RetentionPolicy.SOURCE)
 public @interface SwipeableItemAfterReactions {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -432,7 +432,7 @@ private int getOriginalPosition(int position) {
     public int onGetSwipeReactionType(VH holder, int position, int x, int y) {
         RecyclerView.Adapter adapter = getWrappedAdapter();
         if (!(adapter instanceof BaseSwipeableItemAdapter)) {
-            return RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_DEFAULT;
+            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_ANY;
         }
 
         int correctedPosition = getOriginalPosition(position);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_already_expanded/AlreadyExpandedGroupsExpandableExampleAdapter.java
Patch:
@@ -195,7 +195,7 @@ public void addGroupAndChildItemsBottom(int groupCount, int childCount) {
             }
         }
 
-        mExpandableItemManager.notifyGroupItemRangeInserted(groupPosition, groupCount, true);
+        mExpandableItemManager.notifyGroupItemRangeInserted(groupPosition, groupCount);
     }
 
     // NOTE: This method is called from Fragment

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_button/SwipeableWithButtonExampleFragment.java
Patch:
@@ -72,8 +72,8 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         mRecyclerViewSwipeManager = new RecyclerViewSwipeManager();
 
         //adapter
-        final SwipeableWIthButtonExampleAdapter myItemAdapter = new SwipeableWIthButtonExampleAdapter(getDataProvider());
-        myItemAdapter.setEventListener(new SwipeableWIthButtonExampleAdapter.EventListener() {
+        final SwipeableWithButtonExampleAdapter myItemAdapter = new SwipeableWithButtonExampleAdapter(getDataProvider());
+        myItemAdapter.setEventListener(new SwipeableWithButtonExampleAdapter.EventListener() {
             @Override
             public void onItemPinned(int position) {
                 ((SwipeableWithButtonExampleActivity) getActivity()).onItemPinned(position);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_already_expanded/AlreadyExpandedGroupsExpandableExampleAdapter.java
Patch:
@@ -195,7 +195,7 @@ public void addGroupAndChildItemsBottom(int groupCount, int childCount) {
             }
         }
 
-        mExpandableItemManager.notifyGroupItemRangeInserted(groupPosition, groupCount, true);
+        mExpandableItemManager.notifyGroupItemRangeInserted(groupPosition, groupCount);
     }
 
     // NOTE: This method is called from Fragment

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -253,7 +253,7 @@ public void setLongPressTimeout(int longPressTimeout) {
     }
 
     /**
-     * Sets swipe thredhold distance.
+     * Sets swipe threshold distance.
      *
      * @param distanceInPixels Integer specifies threshold distance in pixels.
      */
@@ -262,7 +262,7 @@ public void setSwipeThresholdDistance(int distanceInPixels) {
     }
 
     /**
-     * Gets swipe thredhold distance.
+     * Gets swipe threshold distance.
      *
      * @return Threshold distance in pixels.
      */

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_minimal/MinimalExpandableExampleActivity.java
Patch:
@@ -163,8 +163,8 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
 
         @Override
         public void onBindChildViewHolder(MyChildViewHolder holder, int groupPosition, int childPosition, int viewType) {
-            MyChildItem group = mItems.get(groupPosition).children.get(childPosition);
-            holder.textView.setText(group.text);
+            MyChildItem child = mItems.get(groupPosition).children.get(childPosition);
+            holder.textView.setText(child.text);
         }
 
         @Override

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/widget/ExpandableItemIndicatorImplAnim.java
Patch:
@@ -21,16 +21,15 @@
 import android.graphics.drawable.Animatable;
 import android.os.Build;
 import android.support.annotation.DrawableRes;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.graphics.drawable.DrawableCompat;
 import android.support.v7.widget.AppCompatImageView;
 import android.util.AttributeSet;
 import android.view.LayoutInflater;
 import android.view.View;
 
 import com.h6ah4i.android.example.advrecyclerview.R;
 
-@TargetApi(Build.VERSION_CODES.LOLLIPOP)
+// NOTE: AnimatedVectorDrawableCompat works on API level 11+
+@TargetApi(Build.VERSION_CODES.HONEYCOMB)
 class ExpandableItemIndicatorImplAnim extends ExpandableItemIndicator.Impl {
     private AppCompatImageView mImageView;
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_minimal/MinimalExpandableExampleActivity.java
Patch:
@@ -115,7 +115,7 @@ public MyAdapter() {
             for (int i = 0; i < 20; i++) {
                 MyGroupItem group = new MyGroupItem(i, "GROUP " + i);
                 for (int j = 0; j < 5; j++) {
-                    group.children.add(new MyChildItem(i, "child " + i));
+                    group.children.add(new MyChildItem(j, "child " + j));
                 }
                 mItems.add(group);
             }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -1316,7 +1316,7 @@ private void performSwapItems(RecyclerView rv, @NonNull RecyclerView.ViewHolder
         if ((firstVisible == fromPosition) && (firstOrigin != null) && (toOrigin != null)) {
             rv.scrollBy(0, -(toOrigin - firstOrigin));
             safeEndAnimations(rv);
-        } else if ((firstVisible == toPosition) && (fromView != null) && (fromOrigin != toOrigin)) {
+        } else if ((firstVisible == toPosition) && (fromView != null) && (fromOrigin != null) && (!fromOrigin.equals(toOrigin))) {
             ViewGroup.MarginLayoutParams lp = (ViewGroup.MarginLayoutParams) fromView.getLayoutParams();
             rv.scrollBy(0, -(layoutManager.getDecoratedMeasuredHeight(fromView) + lp.topMargin + lp.bottomMargin));
             safeEndAnimations(rv);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/event/BaseRecyclerViewEventDistributor.java
Patch:
@@ -210,7 +210,7 @@ public int size() {
         if (mListeners != null) {
             return mListeners.size();
         } else {
-            return mListeners.size();
+            return 0;
         }
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableAdapterHelper.java
Patch:
@@ -19,10 +19,10 @@
 import android.support.v7.widget.RecyclerView;
 
 class ExpandableAdapterHelper {
-    public static final long NO_EXPANDABLE_POSITION = 0xffffffffffffffffl;
+    public static final long NO_EXPANDABLE_POSITION = 0xffffffffffffffffL;
 
-    private static final long LOWER_32BIT_MASK = 0x00000000ffffffffl;
-    private static final long LOWER_31BIT_MASK = 0x000000007fffffffl;
+    private static final long LOWER_32BIT_MASK = 0x00000000ffffffffL;
+    private static final long LOWER_31BIT_MASK = 0x000000007fffffffL;
 
     /*package*/ static final int VIEW_TYPE_FLAG_IS_GROUP = 0x80000000;
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/ItemSlidingAnimator.java
Patch:
@@ -443,7 +443,7 @@ private static abstract class ViewHolderDeferredProcess implements Runnable {
         final WeakReference<RecyclerView.ViewHolder> mRefHolder;
 
         public ViewHolderDeferredProcess(RecyclerView.ViewHolder holder) {
-            mRefHolder = new WeakReference<RecyclerView.ViewHolder>(holder);
+            mRefHolder = new WeakReference<>(holder);
         }
 
         @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/SwapTargetItemOperator.java
Patch:
@@ -19,7 +19,6 @@
 import android.graphics.Canvas;
 import android.graphics.Rect;
 import android.support.v4.view.ViewCompat;
-import android.support.v4.view.ViewPropertyAnimatorCompat;
 import android.support.v7.widget.RecyclerView;
 import android.view.View;
 import android.view.animation.Interpolator;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/decoration/SimpleListDividerDecorator.java
Patch:
@@ -32,7 +32,7 @@ public class SimpleListDividerDecorator extends RecyclerView.ItemDecoration {
     private final Drawable mVerticalDrawable;
     private final int mHorizontalDividerHeight;
     private final int mVerticalDividerWidth;
-    private boolean mOverlap;
+    private final boolean mOverlap;
 
     /**
      * Constructor.

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/BaseDraggableItemDecorator.java
Patch:
@@ -30,10 +30,10 @@ abstract class BaseDraggableItemDecorator extends RecyclerView.ItemDecoration {
     private static final int RETURN_TO_DEFAULT_POS_ANIMATE_THRESHOLD_MSEC = 20;
 
     private int mReturnToDefaultPositionDuration = 200;
-    private int mReturnToDefaultPositionAnimateThreshold;
+    private final int mReturnToDefaultPositionAnimateThreshold;
     private Interpolator mReturnToDefaultPositionInterpolator;
 
-    protected RecyclerView mRecyclerView;
+    protected final RecyclerView mRecyclerView;
     protected RecyclerView.ViewHolder mDraggingItemViewHolder;
 
     public BaseDraggableItemDecorator(RecyclerView recyclerView, RecyclerView.ViewHolder draggingItemViewHolder) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -41,7 +41,7 @@ class DraggingItemDecorator extends BaseDraggableItemDecorator {
     private int mTouchPositionX;
     private int mTouchPositionY;
     private NinePatchDrawable mShadowDrawable;
-    private Rect mShadowPadding = new Rect();
+    private final Rect mShadowPadding = new Rect();
     private boolean mStarted;
     private boolean mIsScrolling;
     private ItemDraggableRange mRange;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -137,7 +137,7 @@ public interface OnItemDragEventListener {
     private boolean mInScrollByMethod;
     private int mActualScrollByXAmount;
     private int mActualScrollByYAmount;
-    private Rect mTmpRect1 = new Rect();
+    private final Rect mTmpRect1 = new Rect();
     private int mItemSettleBackIntoPlaceAnimationDuration = 200;
     private Interpolator mItemSettleBackIntoPlaceAnimationInterpolator = DEFAULT_ITEM_SETTLE_BACK_INTO_PLACE_ANIMATION_INTERPOLATOR;
 
@@ -1170,7 +1170,7 @@ private void updateEdgeEffect(float distance) {
         }
     }
 
-    private Runnable mCheckItemSwappingRunnable = new Runnable() {
+    private final Runnable mCheckItemSwappingRunnable = new Runnable() {
         @Override
         public void run() {
             if (mDraggingItemViewHolder != null) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/SwapTargetItemOperator.java
Patch:
@@ -34,9 +34,9 @@ class SwapTargetItemOperator extends BaseDraggableItemDecorator {
     private Interpolator mSwapTargetTranslationInterpolator;
     private int mTranslationX;
     private int mTranslationY;
-    private Rect mSwapTargetDecorationOffsets = new Rect();
-    private Rect mSwapTargetItemMargins = new Rect();
-    private Rect mDraggingItemDecorationOffsets = new Rect();
+    private final Rect mSwapTargetDecorationOffsets = new Rect();
+    private final Rect mSwapTargetItemMargins = new Rect();
+    private final Rect mDraggingItemDecorationOffsets = new Rect();
     private boolean mStarted;
     private float mReqTranslationPhase;
     private float mCurTranslationPhase;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/event/RecyclerViewOnScrollEventDistributor.java
Patch:
@@ -78,7 +78,7 @@ protected void onRelease() {
 
     @SuppressWarnings("deprecation")
     private static class InternalOnScrollListener extends RecyclerView.OnScrollListener {
-        private WeakReference<RecyclerViewOnScrollEventDistributor> mRefDistributor;
+        private final WeakReference<RecyclerViewOnScrollEventDistributor> mRefDistributor;
 
         public InternalOnScrollListener(RecyclerViewOnScrollEventDistributor distributor) {
             super();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/event/RecyclerViewRecyclerEventDistributor.java
Patch:
@@ -58,7 +58,7 @@ protected void onRelease() {
     }
 
     private static class InternalRecyclerListener implements RecyclerView.RecyclerListener {
-        private WeakReference<RecyclerViewRecyclerEventDistributor> mRefDistributor;
+        private final WeakReference<RecyclerViewRecyclerEventDistributor> mRefDistributor;
 
         public InternalRecyclerListener(RecyclerViewRecyclerEventDistributor distributor) {
             super();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -92,7 +92,7 @@ public interface OnItemSwipeEventListener {
     private RecyclerView.ViewHolder mSwipingItem;
     private int mSwipingItemPosition = RecyclerView.NO_POSITION;
     private long mSwipingItemId = RecyclerView.NO_ID;
-    private Rect mSwipingItemMargins = new Rect();
+    private final Rect mSwipingItemMargins = new Rect();
     private int mTouchedItemOffsetX;
     private int mTouchedItemOffsetY;
     private int mLastTouchX;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipingItemOperator.java
Patch:
@@ -41,15 +41,15 @@ class SwipingItemOperator {
     private int mRightSwipeReactionType;
     private int mDownSwipeReactionType;
     private int mSwipingItemWidth;
-    private int mSwipingItemHeight;
+    private final int mSwipingItemHeight;
     private float mInvSwipingItemWidth;
     private float mInvSwipingItemHeight;
     private int mSwipeDistanceX;
     private int mSwipeDistanceY;
     private float mPrevTranslateAmount;
     private int mInitialTranslateAmountX;
     private int mInitialTranslateAmountY;
-    private boolean mSwipeHorizontal;
+    private final boolean mSwipeHorizontal;
 
     public SwipingItemOperator(
             RecyclerViewSwipeManager manager, RecyclerView.ViewHolder swipingItem,

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/BaseWrapperAdapter.java
Patch:
@@ -210,7 +210,7 @@ protected void onHandleWrappedAdapterRangeMoved(int fromPosition, int toPosition
     }
 
     private static final class BridgeObserver<VH extends RecyclerView.ViewHolder> extends RecyclerView.AdapterDataObserver {
-        private WeakReference<BaseWrapperAdapter<VH>> mRefHolder;
+        private final WeakReference<BaseWrapperAdapter<VH>> mRefHolder;
 
         public BridgeObserver(BaseWrapperAdapter<VH> holder) {
             mRefHolder = new WeakReference<>(holder);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -119,8 +119,8 @@ public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state)
         // However, if the RecyclerView has any other decorations or RecyclerView is in scrolling state,
         // need to draw it to avoid visual corruptions.
         if (mDraggingItemImage != null) {
-            final float left = mTranslationX + mDraggingItemInfo.margins.left - mShadowPadding.left;
-            final float top = /*mDraggingItemMargins.top +*/ mTranslationY - mShadowPadding.top;
+            final float left = mTranslationX - mShadowPadding.left;
+            final float top = mTranslationY - mShadowPadding.top;
             c.drawBitmap(mDraggingItemImage, left, top, null);
         }
     }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/MyDraggableSwipeableItemAdapter.java
Patch:
@@ -138,9 +138,9 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         final AbstractDataProvider.Data item = mProvider.getItem(position);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/MyExpandableDraggableSwipeableItemAdapter.java
Patch:
@@ -264,9 +264,9 @@ public void onBindChildViewHolder(MyChildViewHolder holder, int groupPosition, i
         final AbstractExpandableDataProvider.ChildData item = mProvider.getChildItem(groupPosition, childPosition);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/MySwipeableItemAdapter.java
Patch:
@@ -127,9 +127,9 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         final AbstractDataProvider.Data item = mProvider.getItem(position);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_legacy/MyLegacySwipeableItemAdapter.java
Patch:
@@ -129,9 +129,9 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         final AbstractDataProvider.Data item = mProvider.getItem(position);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_longpress/MySwipeableItemAdapter.java
Patch:
@@ -127,9 +127,9 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         final AbstractDataProvider.Data item = mProvider.getItem(position);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_vertical/MySwipeableItemAdapter.java
Patch:
@@ -123,9 +123,9 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         final AbstractDataProvider.Data item = mProvider.getItem(position);
 
         // set listeners
-        // (if the item is *not pinned*, click event comes to the itemView)
+        // (if the item is *pinned*, click event comes to the itemView)
         holder.itemView.setOnClickListener(mItemViewOnClickListener);
-        // (if the item is *pinned*, click event comes to the mContainer)
+        // (if the item is *not pinned*, click event comes to the mContainer)
         holder.mContainer.setOnClickListener(mSwipeableViewContainerOnClickListener);
 
         // set text

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -69,8 +69,9 @@ protected void onRelease() {
     public void onViewRecycled(VH holder) {
         super.onViewRecycled(holder);
 
-        if (mSwipingItemId == holder.getItemId())
+        if ((mSwipingItemId != RecyclerView.NO_ID) && (mSwipingItemId == holder.getItemId())) {
             mSwipeManager.cancelSwipe();
+        }
 
         // reset SwipeableItemViewHolder state
         if (holder instanceof SwipeableItemViewHolder) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/BaseWrapperAdapter.java
Patch:
@@ -133,7 +133,7 @@ protected void onHandleWrappedAdapterItemRangeChanged(int positionStart, int ite
     }
 
     protected void onHandleWrappedAdapterItemRangeChanged(int positionStart, int itemCount, Object payload) {
-        notifyItemRangeChanged(positionStart, itemCount);
+        notifyItemRangeChanged(positionStart, itemCount, payload);
     }
 
     protected void onHandleWrappedAdapterItemRangeInserted(int positionStart, int itemCount) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -69,6 +69,9 @@ protected void onRelease() {
     public void onViewRecycled(VH holder) {
         super.onViewRecycled(holder);
 
+        if (mSwipingItemId == holder.getItemId())
+            mSwipeManager.cancelSwipe();
+
         // reset SwipeableItemViewHolder state
         if (holder instanceof SwipeableItemViewHolder) {
             mSwipeManager.cancelPendingAnimations(holder);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -544,7 +544,7 @@ private void startSwiping(MotionEvent e, RecyclerView.ViewHolder holder, int ite
         }
 
         // raise onSwipeItemStarted() event
-        mAdapter.onSwipeItemStarted(this, holder, itemPosition);
+        mAdapter.onSwipeItemStarted(this, holder, mSwipingItemId);
     }
 
     private void finishSwiping(int result) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -33,6 +33,7 @@
 
 import com.h6ah4i.android.widget.advrecyclerview.animator.SwipeDismissItemAnimator;
 import com.h6ah4i.android.widget.advrecyclerview.swipeable.action.SwipeResultAction;
+import com.h6ah4i.android.widget.advrecyclerview.swipeable.action.SwipeResultActionDefault;
 import com.h6ah4i.android.widget.advrecyclerview.utils.CustomRecyclerViewUtils;
 import com.h6ah4i.android.widget.advrecyclerview.utils.WrapperAdapterUtils;
 
@@ -587,7 +588,7 @@ private void finishSwiping(int result) {
         }
 
         if (resultAction == null) {
-            resultAction = null; // TODO set default action
+            resultAction = new SwipeResultActionDefault(); // set default action
         }
 
         int afterReaction = resultAction.getResultActionType();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/BaseItemAnimator.java
Patch:
@@ -17,8 +17,9 @@
 package com.h6ah4i.android.widget.advrecyclerview.animator;
 
 import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.SimpleItemAnimator;
 
-public abstract class BaseItemAnimator extends RecyclerView.ItemAnimator {
+public abstract class BaseItemAnimator extends SimpleItemAnimator {
     private ItemAnimatorListener mListener;
 
     /**

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/RefactoredDefaultItemAnimator.java
Patch:
@@ -203,7 +203,7 @@ public boolean addPendingAnimation(RecyclerView.ViewHolder oldHolder, RecyclerVi
             ViewCompat.setTranslationY(oldHolder.itemView, prevTranslationY);
             ViewCompat.setAlpha(oldHolder.itemView, prevAlpha);
 
-            if (newHolder != null && newHolder.itemView != null) {
+            if (newHolder != null) {
                 // carry over translation values
                 endAnimation(newHolder);
                 ViewCompat.setTranslationX(newHolder.itemView, -deltaX);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/SwipeDismissItemAnimator.java
Patch:
@@ -286,7 +286,7 @@ public boolean addPendingAnimation(RecyclerView.ViewHolder oldHolder, RecyclerVi
             ViewCompat.setTranslationY(oldHolder.itemView, prevTranslationY);
             ViewCompat.setAlpha(oldHolder.itemView, prevAlpha);
 
-            if (newHolder != null && newHolder.itemView != null) {
+            if (newHolder != null) {
                 // carry over translation values
                 endAnimation(newHolder);
                 ViewCompat.setTranslationX(newHolder.itemView, -deltaX);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d_grid/RecyclerListViewFragment.java
Patch:
@@ -67,6 +67,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         // Start dragging after long press
         mRecyclerViewDragDropManager.setInitiateOnLongPress(true);
         mRecyclerViewDragDropManager.setInitiateOnMove(false);
+        mRecyclerViewDragDropManager.setLongPressTimeout(750);
 
         //adapter
         final MyDraggableItemAdapter myItemAdapter = new MyDraggableItemAdapter(getDataProvider());

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/annotation/SwipeableItemReactions.java
Patch:
@@ -53,6 +53,7 @@
         SwipeableItemConstants.REACTION_CAN_NOT_SWIPE_BOTH,
         SwipeableItemConstants.REACTION_CAN_NOT_SWIPE_BOTH_WITH_RUBBER_BAND_EFFECT,
         SwipeableItemConstants.REACTION_CAN_SWIPE_BOTH,
+        SwipeableItemConstants.REACTION_START_SWIPE_ON_LONG_PRESS,
 })
 @Retention(RetentionPolicy.SOURCE)
 public @interface SwipeableItemReactions {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/decoration/SimpleListDividerDecorator.java
Patch:
@@ -109,7 +109,7 @@ public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state)
             if (mHorizontalDividerHeight != 0) {
                 final int left = child.getLeft();
                 final int right = child.getRight();
-                final int top = child.getBottom();
+                final int top = child.getBottom() - (mOverlap ? mHorizontalDividerHeight : 0);
                 final int bottom = top + mHorizontalDividerHeight;
 
                 mHorizontalDrawable.setAlpha((int) ((0.5f * 255) * (childAlpha + nextChildAlpha) + 0.5f));
@@ -118,7 +118,7 @@ public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state)
             }
 
             if (mVerticalDividerWidth != 0) {
-                final int left = child.getRight();
+                final int left = child.getRight() - (mOverlap ? mVerticalDividerWidth : 0);
                 final int right = left + mVerticalDividerWidth;
                 final int top = child.getTop();
                 final int bottom = child.getBottom();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableItemViewHolder.java
Patch:
@@ -19,9 +19,8 @@
 import com.h6ah4i.android.widget.advrecyclerview.expandable.annotation.ExpandableItemStateFlags;
 
 /**
- * Interface which provides required information for expanding item.
- * <p/>
- * Implement this interface on your sub-class of the {@link android.support.v7.widget.RecyclerView.ViewHolder}.
+ * <p>Interface which provides required information for expanding item.</p>
+ * <p>Implement this interface on your sub-class of the {@link android.support.v7.widget.RecyclerView.ViewHolder}.</p>
  */
 public interface ExpandableItemViewHolder {
     /**

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractSwipeableItemViewHolder.java
Patch:
@@ -87,7 +87,7 @@ public float getSwipeItemSlideAmount() {
 
     /**
      * Deprecated. Use the {@link #getSwipeItemHorizontalSlideAmount()} instead.
-     * @param amount
+     * @param amount horizontal swipe amount
      */
     @Deprecated
     public void setSwipeItemSlideAmount(float amount) {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/widget/ExpandableItemIndicatorImplAnim.java
Patch:
@@ -38,7 +38,7 @@ public void onInit(Context context, AttributeSet attrs, int defStyleAttr, Expand
 
     @Override
     public void setExpandedState(boolean isExpanded, boolean animate) {
-        MorphButton.MorphState indicatorState = (isExpanded) ? MorphButton.MorphState.END : MorphButton.MorphState.START;
+        MorphButton.MorphState indicatorState = (isExpanded) ? MorphButton.MorphState.START : MorphButton.MorphState.END;
 
         if (mMorphButton.getState() != indicatorState) {
             mMorphButton.setState(indicatorState, animate);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_already_expanded/RecyclerListViewFragment.java
Patch:
@@ -144,7 +144,7 @@ public void onDestroyView() {
     }
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.menu_e_add_remove, menu);
+        inflater.inflate(R.menu.menu_e_already_expanded, menu);
     }
 
     @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/BaseDraggableItemDecorator.java
Patch:
@@ -34,11 +34,11 @@ abstract class BaseDraggableItemDecorator extends RecyclerView.ItemDecoration {
     private Interpolator mReturnToDefaultPositionInterpolator;
 
     protected RecyclerView mRecyclerView;
-    protected RecyclerView.ViewHolder mDraggingItem;
+    protected RecyclerView.ViewHolder mDraggingItemViewHolder;
 
-    public BaseDraggableItemDecorator(RecyclerView recyclerView, RecyclerView.ViewHolder draggingItem) {
+    public BaseDraggableItemDecorator(RecyclerView recyclerView, RecyclerView.ViewHolder draggingItemViewHolder) {
         mRecyclerView = recyclerView;
-        mDraggingItem = draggingItem;
+        mDraggingItemViewHolder = draggingItemViewHolder;
 
         final float displayDensity = recyclerView.getResources().getDisplayMetrics().density;
         mReturnToDefaultPositionAnimateThreshold = (int) (RETURN_TO_DEFAULT_POS_ANIMATE_THRESHOLD_DP * displayDensity + 0.5f);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/DraggableSwipeableExampleActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 
@@ -65,7 +66,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/MyDraggableSwipeableItemAdapter.java
Patch:
@@ -163,7 +163,7 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         }
 
         // set swiping properties
-        holder.setSwipeItemSlideAmount(
+        holder.setSwipeItemHorizontalSlideAmount(
                 item.isPinned() ? RecyclerViewSwipeManager.OUTSIDE_OF_THE_WINDOW_LEFT : 0);
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/RecyclerListViewFragment.java
Patch:
@@ -178,7 +178,7 @@ public void onDestroyView() {
     }
 
     private void onItemViewClick(View v, boolean pinned) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((DraggableSwipeableExampleActivity) getActivity()).onItemClicked(position);
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/ExpandableDraggableSwipeableExampleActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.RecyclerView;
 import android.view.View;
@@ -67,7 +68,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 
@@ -89,7 +90,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/MyExpandableDraggableSwipeableItemAdapter.java
Patch:
@@ -242,7 +242,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
         }
 
         // set swiping properties
-        holder.setSwipeItemSlideAmount(
+        holder.setSwipeItemHorizontalSlideAmount(
                 item.isPinned() ? RecyclerViewSwipeManager.OUTSIDE_OF_THE_WINDOW_LEFT : 0);
     }
 
@@ -286,7 +286,7 @@ public void onBindChildViewHolder(MyChildViewHolder holder, int groupPosition, i
         }
 
         // set swiping properties
-        holder.setSwipeItemSlideAmount(
+        holder.setSwipeItemHorizontalSlideAmount(
                 item.isPinned() ? RecyclerViewSwipeManager.OUTSIDE_OF_THE_WINDOW_LEFT : 0);
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/RecyclerListViewFragment.java
Patch:
@@ -231,7 +231,7 @@ private void adjustScrollPositionOnGroupExpanded(int groupPosition) {
     }
 
     private void onItemViewClick(View v, boolean pinned) {
-        final int flatPosition = mRecyclerView.getChildPosition(v);
+        final int flatPosition = mRecyclerView.getChildAdapterPosition(v);
 
         if (flatPosition == RecyclerView.NO_POSITION) {
             return;

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/RecyclerListViewFragment.java
Patch:
@@ -157,7 +157,7 @@ public void onDestroyView() {
     }
 
     private void onItemViewClick(View v, boolean pinned) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((SwipeableExampleActivity) getActivity()).onItemClicked(position);
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/SwipeableExampleActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 
@@ -66,7 +67,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_legacy/LegacySwipeableExampleActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 
@@ -72,7 +73,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_legacy/RecyclerListViewFragment.java
Patch:
@@ -157,7 +157,7 @@ public void onDestroyView() {
     }
 
     private void onItemViewClick(View v, boolean pinned) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((LegacySwipeableExampleActivity) getActivity()).onItemClicked(position);
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_vertical/RecyclerListViewFragment.java
Patch:
@@ -157,7 +157,7 @@ public void onDestroyView() {
     }
 
     private void onItemViewClick(View v, boolean pinned) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((VerticalSwipeableExampleActivity) getActivity()).onItemClicked(position);
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s_vertical/VerticalSwipeableExampleActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.support.design.widget.Snackbar;
 import android.support.v4.app.DialogFragment;
 import android.support.v4.app.Fragment;
+import android.support.v4.content.ContextCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 
@@ -67,7 +68,7 @@ public void onClick(View v) {
                 onItemUndoActionClicked();
             }
         });
-        snackbar.setActionTextColor(getResources().getColor(R.color.snackbar_action_color_done));
+        snackbar.setActionTextColor(ContextCompat.getColor(this, R.color.snackbar_action_color_done));
         snackbar.show();
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_us/MyUnderSwipeableItemAdapter.java
Patch:
@@ -157,7 +157,7 @@ public void onBindViewHolder(MyViewHolder holder, int position) {
         // set swiping properties
         holder.setMaxLeftSwipeAmount(-0.5f);
         holder.setMaxRightSwipeAmount(0);
-        holder.setSwipeItemSlideAmount(
+        holder.setSwipeItemHorizontalSlideAmount(
                 item.isPinned() ? -0.5f : 0);
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_us/RecyclerListViewFragment.java
Patch:
@@ -156,14 +156,14 @@ public void onDestroyView() {
     }
 
     private void handleOnItemViewClicked(View v) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((UnderSwipeableExampleActivity) getActivity()).onItemClicked(position);
         }
     }
 
     private void handleOnUnderSwipeableViewButtonClicked(View v) {
-        int position = mRecyclerView.getChildPosition(v);
+        int position = mRecyclerView.getChildAdapterPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((UnderSwipeableExampleActivity) getActivity()).onItemButtonClicked(position);
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -923,7 +923,7 @@ private void finishSwiping(int result) {
                     final long moveAnimationDuration = (itemAnimator != null) ? itemAnimator.getMoveDuration() : 0;
 
                     final RemovingItemDecorator decorator = new RemovingItemDecorator(
-                            mRecyclerView, swipingItem, removeAnimationDuration, moveAnimationDuration);
+                            mRecyclerView, swipingItem, result, removeAnimationDuration, moveAnimationDuration);
 
                     decorator.setMoveAnimationInterpolator(SwipeDismissItemAnimator.MOVE_INTERPOLATOR);
                     decorator.start();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/SwipeDismissItemAnimator.java
Patch:
@@ -148,7 +148,9 @@ private static boolean isSwipeDismissed(RecyclerView.ViewHolder item) {
             final int reaction = item2.getAfterSwipeReaction();
 
             return ((result == RecyclerViewSwipeManager.RESULT_SWIPED_LEFT) ||
-                    (result == RecyclerViewSwipeManager.RESULT_SWIPED_RIGHT)) &&
+                    (result == RecyclerViewSwipeManager.RESULT_SWIPED_UP) ||
+                    (result == RecyclerViewSwipeManager.RESULT_SWIPED_RIGHT) ||
+                    (result == RecyclerViewSwipeManager.RESULT_SWIPED_DOWN)) &&
                     (reaction == RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_REMOVE_ITEM);
         }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e/MyExpandableItemAdapter.java
Patch:
@@ -130,6 +130,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
         if ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_IS_UPDATED) != 0) {
             int bgResId;
             boolean isExpanded;
+            boolean animateIndicator = ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_HAS_EXPANDED_STATE_CHANGED) != 0);
 
             if ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_IS_EXPANDED) != 0) {
                 bgResId = R.drawable.bg_group_item_expanded_state;
@@ -140,7 +141,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
             }
 
             holder.mContainer.setBackgroundResource(bgResId);
-            holder.mIndicator.setExpandedState(isExpanded, true);
+            holder.mIndicator.setExpandedState(isExpanded, animateIndicator);
         }
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e_already_expanded/MyExpandableItemAdapter.java
Patch:
@@ -137,6 +137,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
         if ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_IS_UPDATED) != 0) {
             int bgResId;
             boolean isExpanded;
+            boolean animateIndicator = ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_HAS_EXPANDED_STATE_CHANGED) != 0);
 
             if ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_IS_EXPANDED) != 0) {
                 bgResId = R.drawable.bg_group_item_expanded_state;
@@ -147,7 +148,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
             }
 
             holder.mContainer.setBackgroundResource(bgResId);
-            holder.mIndicator.setExpandedState(isExpanded, true);
+            holder.mIndicator.setExpandedState(isExpanded, animateIndicator);
         } else {
             Log.d("TAG", "teste");
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ed_with_section/MyExpandableDraggableWithSectionItemAdapter.java
Patch:
@@ -191,6 +191,7 @@ private void onBindItemGroupViewHolder(MyGroupViewHolder holder, int groupPositi
                 ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_IS_UPDATED) != 0)) {
             int bgResId;
             boolean isExpanded;
+            boolean animateIndicator = ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_HAS_EXPANDED_STATE_CHANGED) != 0);
 
             if ((dragState & RecyclerViewDragDropManager.STATE_FLAG_IS_ACTIVE) != 0) {
                 bgResId = R.drawable.bg_group_item_dragging_active_state;
@@ -213,7 +214,7 @@ private void onBindItemGroupViewHolder(MyGroupViewHolder holder, int groupPositi
             }
 
             holder.mContainer.setBackgroundResource(bgResId);
-            holder.mIndicator.setExpandedState(isExpanded, true);
+            holder.mIndicator.setExpandedState(isExpanded, animateIndicator);
         }
     }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/MyExpandableDraggableSwipeableItemAdapter.java
Patch:
@@ -208,6 +208,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
                 ((swipeState & RecyclerViewSwipeManager.STATE_FLAG_IS_UPDATED) != 0)) {
             int bgResId;
             boolean isExpanded;
+            boolean animateIndicator = ((expandState & RecyclerViewExpandableItemManager.STATE_FLAG_HAS_EXPANDED_STATE_CHANGED) != 0);
 
             if ((dragState & RecyclerViewDragDropManager.STATE_FLAG_IS_ACTIVE) != 0) {
                 bgResId = R.drawable.bg_group_item_dragging_active_state;
@@ -233,7 +234,7 @@ public void onBindGroupViewHolder(MyGroupViewHolder holder, int groupPosition, i
             }
 
             holder.mContainer.setBackgroundResource(bgResId);
-            holder.mIndicator.setExpandedState(isExpanded, true);
+            holder.mIndicator.setExpandedState(isExpanded, animateIndicator);
         }
 
         // set swiping properties

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/data/ExampleAddRemoveExpandableDataProvider.java
Patch:
@@ -34,6 +34,9 @@ public ExampleAddRemoveExpandableDataProvider() {
 
         for (int i = 0; i < 1; i++) {
             addGroupItem(i);
+            for (int j = 0; j < 3; j++) {
+                addChildItem(i, j);
+            }
         }
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -680,8 +680,8 @@ public void notifyGroupItemRangeInserted(int groupPositionStart, int itemCount)
 
     /**
      * Notify any registered observers that the currently reflected <code>itemCount</code>
-     * group items starting at <code>groupPositionStart</code> have been newly inserted. The group items
-     * previously located at <code>groupPositionStart</code> and beyond can now be found starting
+     * group items starting at <code>groupPositionStart</code> have been newly inserted and may be <code>expanded</code>.
+     * The group items previously located at <code>groupPositionStart</code> and beyond can now be found starting
      * at position <code>groupPositionStart + itemCount</code>.
      *
      * <p>This is a structural change event. Representations of other existing items in the
@@ -690,7 +690,7 @@ public void notifyGroupItemRangeInserted(int groupPositionStart, int itemCount)
      *
      * @param groupPositionStart Position of the first group item that was inserted
      * @param itemCount Number of group items inserted
-     * @param expanded Wheter the groups will be inserted already expanded
+     * @param expanded Whether the groups will be inserted already expanded
      *
      * @see #notifyGroupItemRangeInserted(int, int)
      */

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -836,7 +836,7 @@ boolean onTapItem(RecyclerView.ViewHolder holder, int position, int x, int y) {
 
         int removedCount = mPositionTranslator.removeGroupItem(groupPosition);
         if (removedCount > 0) {
-            notifyItemRemoved(flatPosition);
+            notifyItemRangeRemoved(flatPosition, removedCount);
         }
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandablePositionTranslator.java
Patch:
@@ -444,6 +444,8 @@ public void removeGroupItem(int groupPosition) {
             mCachedGroupPosInfo[i] = mCachedGroupPosInfo[i + 1];
             mCachedGroupId[i] = mCachedGroupId[i + 1];
         }
+
+        mEndOfCalculatedOffsetGroupPosition = (mGroupCount == 0) ? RecyclerView.NO_POSITION : Math.max(0, groupPosition - 1);
     }
 
     public void removeChildItem(int groupPosition, int childPosition) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandablePositionTranslator.java
Patch:
@@ -444,6 +444,8 @@ public void removeGroupItem(int groupPosition) {
             mCachedGroupPosInfo[i] = mCachedGroupPosInfo[i + 1];
             mCachedGroupId[i] = mCachedGroupId[i + 1];
         }
+
+        mEndOfCalculatedOffsetGroupPosition = (mGroupCount == 0) ? RecyclerView.NO_POSITION : Math.max(0, groupPosition - 1);
     }
 
     public void removeChildItem(int groupPosition, int childPosition) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandablePositionTranslator.java
Patch:
@@ -444,6 +444,8 @@ public void removeGroupItem(int groupPosition) {
             mCachedGroupPosInfo[i] = mCachedGroupPosInfo[i + 1];
             mCachedGroupId[i] = mCachedGroupId[i + 1];
         }
+
+        mEndOfCalculatedOffsetGroupPosition = (mGroupCount == 0) ? RecyclerView.NO_POSITION : Math.max(0, groupPosition - 1);
     }
 
     public void removeChildItem(int groupPosition, int childPosition) {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e/MyExpandableItemAdapter.java
Patch:
@@ -20,6 +20,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import com.h6ah4i.android.example.advrecyclerview.R;
@@ -38,13 +39,13 @@ public class MyExpandableItemAdapter
     private AbstractExpandableDataProvider mProvider;
 
     public static abstract class MyBaseViewHolder extends AbstractExpandableItemViewHolder {
-        public ViewGroup mContainer;
+        public FrameLayout mContainer;
         public View mDragHandle;
         public TextView mTextView;
 
         public MyBaseViewHolder(View v) {
             super(v);
-            mContainer = (ViewGroup) v.findViewById(R.id.container);
+            mContainer = (FrameLayout) v.findViewById(R.id.container);
             mDragHandle = v.findViewById(R.id.drag_handle);
             mTextView = (TextView) v.findViewById(android.R.id.text1);
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/MySwipeableItemAdapter.java
Patch:
@@ -21,6 +21,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import com.h6ah4i.android.example.advrecyclerview.R;
@@ -49,13 +50,13 @@ public interface EventListener {
     }
 
     public static class MyViewHolder extends AbstractSwipeableItemViewHolder {
-        public ViewGroup mContainer;
+        public FrameLayout mContainer;
         public View mDragHandle;
         public TextView mTextView;
 
         public MyViewHolder(View v) {
             super(v);
-            mContainer = (ViewGroup) v.findViewById(R.id.container);
+            mContainer = (FrameLayout) v.findViewById(R.id.container);
             mDragHandle = v.findViewById(R.id.drag_handle);
             mTextView = (TextView) v.findViewById(android.R.id.text1);
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_us/MyUnderSwipeableItemAdapter.java
Patch:
@@ -22,6 +22,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.FrameLayout;
 import android.widget.TextView;
 
 import com.h6ah4i.android.example.advrecyclerview.R;
@@ -53,14 +54,14 @@ public interface EventListener {
     }
 
     public static class MyViewHolder extends AbstractSwipeableItemViewHolder {
-        public ViewGroup mContainer;
+        public FrameLayout mContainer;
         public View mDragHandle;
         public TextView mTextView;
         public Button mButton;
 
         public MyViewHolder(View v) {
             super(v);
-            mContainer = (ViewGroup) v.findViewById(R.id.container);
+            mContainer = (FrameLayout) v.findViewById(R.id.container);
             mDragHandle = v.findViewById(R.id.drag_handle);
             mTextView = (TextView) v.findViewById(android.R.id.text1);
             mButton = (Button) v.findViewById(android.R.id.button1);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -244,7 +244,8 @@ public Parcelable getSavedState() {
             case MotionEvent.ACTION_UP:
             case MotionEvent.ACTION_CANCEL:
                 if (handleActionUpOrCancel(rv, e)) {
-                    return true;
+                    // NOTE: it requires to return false to work click effect properly (issue #44)
+                    return false;
                 }
                 break;
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/decoration/ItemShadowDecorator.java
Patch:
@@ -78,8 +78,6 @@ public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
         }
 
         c.restoreToCount(savedCount);
-
-        ViewCompat.postInvalidateOnAnimation(parent);
     }
 
     private static boolean shouldDrawDropShadow(View child) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/GeneralItemAnimator.java
Patch:
@@ -36,7 +36,7 @@ public abstract class GeneralItemAnimator extends BaseItemAnimator {
     private ItemChangeAnimationManager mChangeAnimationsManager;
     private ItemMoveAnimationManager mMoveAnimationsManager;
 
-    GeneralItemAnimator() {
+    protected GeneralItemAnimator() {
         setup();
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -197,7 +197,7 @@ public boolean isReleased() {
 
     /**
      * Attaches {@link android.support.v7.widget.RecyclerView} instance.
-     * <p/>
+     *
      * Before calling this method, the target {@link android.support.v7.widget.RecyclerView} must set
      * the wrapped adapter instance which is returned by the
      * {@link #createWrappedAdapter(android.support.v7.widget.RecyclerView.Adapter)} method.
@@ -210,7 +210,7 @@ public void attachRecyclerView(RecyclerView rv) {
 
     /**
      * Attaches {@link android.support.v7.widget.RecyclerView} instance.
-     * <p/>
+     *
      * Before calling this method, the target {@link android.support.v7.widget.RecyclerView} must set
      * the wrapped adapter instance which is returned by the
      * {@link #createWrappedAdapter(android.support.v7.widget.RecyclerView.Adapter)} method.
@@ -286,7 +286,7 @@ public boolean onDown(MotionEvent e) {
 
     /**
      * Detach the {@link android.support.v7.widget.RecyclerView} instance and release internal field references.
-     * <p/>
+     *
      * This method should be called in order to avoid memory leaks.
      */
     public void release() {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/RecyclerListViewFragment.java
Patch:
@@ -87,8 +87,8 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         mRecyclerViewSwipeManager = new RecyclerViewSwipeManager();
 
         //adapter
-        getDataProvider();
-        final MyExpandableDraggableSwipeableItemAdapter myItemAdapter = new MyExpandableDraggableSwipeableItemAdapter(getDataProvider());
+        final MyExpandableDraggableSwipeableItemAdapter myItemAdapter =
+                new MyExpandableDraggableSwipeableItemAdapter(mRecyclerViewExpandableItemManager, getDataProvider());
 
         myItemAdapter.setEventListener(new MyExpandableDraggableSwipeableItemAdapter.EventListener() {
             @Override

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d/MyDraggableItemAdapter.java
Patch:
@@ -121,7 +121,7 @@ public void onMoveItem(int fromPosition, int toPosition) {
     }
 
     @Override
-    public boolean onCheckCanStartDrag(MyViewHolder holder, int x, int y) {
+    public boolean onCheckCanStartDrag(MyViewHolder holder, int position, int x, int y) {
         // x, y --- relative from the itemView's top-left
         final View containerView = holder.mContainer;
         final View dragHandleView = holder.mDragHandle;
@@ -133,7 +133,7 @@ public boolean onCheckCanStartDrag(MyViewHolder holder, int x, int y) {
     }
 
     @Override
-    public ItemDraggableRange onGetItemDraggableRange(MyViewHolder holder) {
+    public ItemDraggableRange onGetItemDraggableRange(MyViewHolder holder, int position) {
         // no drag-sortable range specified
         return null;
     }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d_with_longpress/MyDraggableItemAdapter.java
Patch:
@@ -121,7 +121,7 @@ public void onMoveItem(int fromPosition, int toPosition) {
     }
 
     @Override
-    public boolean onCheckCanStartDrag(MyViewHolder holder, int x, int y) {
+    public boolean onCheckCanStartDrag(MyViewHolder holder, int position, int x, int y) {
         // x, y --- relative from the itemView's top-left
         final View containerView = holder.mContainer;
         final View dragHandleView = holder.mDragHandle;
@@ -133,7 +133,7 @@ public boolean onCheckCanStartDrag(MyViewHolder holder, int x, int y) {
     }
 
     @Override
-    public ItemDraggableRange onGetItemDraggableRange(MyViewHolder holder) {
+    public ItemDraggableRange onGetItemDraggableRange(MyViewHolder holder, int position) {
         // no drag-sortable range specified
         return null;
     }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/MyExpandableDraggableSwipeableItemAdapter.java
Patch:
@@ -436,7 +436,7 @@ public void onPerformAfterSwipeGroupReaction(MyGroupViewHolder holder, int group
         Log.d(TAG, "onPerformAfterSwipeGroupReaction(groupPosition = " + groupPosition + ", result = " + result + ", reaction = " + reaction + ")");
 
         final AbstractExpandableDataProvider.GroupData item = mProvider.getGroupItem(groupPosition);
-        final int flatPosition = holder.getPosition();
+        final int flatPosition = holder.getAdapterPosition();
 
         if (reaction == RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_REMOVE_ITEM) {
             mProvider.removeGroupItem(groupPosition);
@@ -463,7 +463,7 @@ public void onPerformAfterSwipeChildReaction(MyChildViewHolder holder, int group
                 ", result = " + result + ", reaction = " + reaction + ")");
 
         final AbstractExpandableDataProvider.ChildData item = mProvider.getChildItem(groupPosition, childPosition);
-        final int flatPosition = holder.getPosition();
+        final int flatPosition = holder.getAdapterPosition();
 
         if (reaction == RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_REMOVE_ITEM) {
             mProvider.removeChildItem(groupPosition, childPosition);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractDraggableSwipeableItemViewHolder.java
Patch:
@@ -29,8 +29,8 @@ public abstract class AbstractDraggableSwipeableItemViewHolder extends RecyclerV
     private int mSwipeResult = RecyclerViewSwipeManager.RESULT_NONE;
     private int mAfterSwipeReaction = RecyclerViewSwipeManager.AFTER_SWIPE_REACTION_DEFAULT;
     private float mSwipeAmount;
-    private float mMaxLeftSwipeAmount;
-    private float mMaxRightSwipeAmount;
+    private float mMaxLeftSwipeAmount = RecyclerViewSwipeManager.OUTSIDE_OF_THE_WINDOW_LEFT;
+    private float mMaxRightSwipeAmount = RecyclerViewSwipeManager.OUTSIDE_OF_THE_WINDOW_RIGHT;
 
     public AbstractDraggableSwipeableItemViewHolder(View itemView) {
         super(itemView);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -248,8 +248,9 @@ private void cancelDrag() {
 
         if (result && (mDraggingItemCurrentPosition != mDraggingItemInitialPosition)) {
             // apply to wrapped adapter
-            ((DraggableItemAdapter) getWrappedAdapter()).onMoveItem(
-                    mDraggingItemInitialPosition, mDraggingItemCurrentPosition);
+            DraggableItemAdapter adapter = WrapperAdapterUtils.findWrappedAdapter(
+                    getWrappedAdapter(), DraggableItemAdapter.class);
+            adapter.onMoveItem(mDraggingItemInitialPosition, mDraggingItemCurrentPosition);
         }
 
         mDraggingItemInitialPosition = RecyclerView.NO_POSITION;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -747,8 +747,8 @@ public void setMoveToOutsideWindowAnimationDuration(long duration) {
             }
             if (adjustedAmount < holder2.getMaxLeftSwipeAmount()) {
                 adjustedAmount = holder2.getMaxLeftSwipeAmount();
-            } else if (adjustedAmount > holder2.getMaxRightSwipeIAmount()) {
-                adjustedAmount = holder2.getMaxRightSwipeIAmount();
+            } else if (adjustedAmount > holder2.getMaxRightSwipeAmount()) {
+                adjustedAmount = holder2.getMaxRightSwipeAmount();
             }
             mAdapter.setSwipeBackgroundDrawable(holder, reqBackgroundType);
             slideItem(holder, adjustedAmount, shouldAnimate);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemViewHolder.java
Patch:
@@ -130,7 +130,7 @@ public interface SwipeableItemViewHolder {
      *
      * @return Item swipe amount. Generally the range is [-1.0 .. 1.0]
      */
-    float getMaxRightSwipeIAmount();
+    float getMaxRightSwipeAmount();
 
     /**
      * Gets the container view for the swipeable area.

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractDraggableSwipeableItemViewHolder.java
Patch:
@@ -102,7 +102,7 @@ public void setMaxRightSwipeAmount(float amount) {
     }
 
     @Override
-    public float getMaxRightSwipeIAmount() {
+    public float getMaxRightSwipeAmount() {
         return mMaxRightSwipeAmount;
     }
 }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractSwipeableItemViewHolder.java
Patch:
@@ -90,7 +90,7 @@ public void setMaxRightSwipeAmount(float amount) {
     }
 
     @Override
-    public float getMaxRightSwipeIAmount() {
+    public float getMaxRightSwipeAmount() {
         return mMaxRightSwipeAmount;
     }
 }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -304,7 +304,7 @@ private boolean handleActionUpOrCancel(RecyclerView rv, MotionEvent e) {
      *
      * @param groupPosition The group position to be expanded
      *
-     * @return True if the group was expanded,false otherwise  (If the group was already expanded, this will return false)
+     * @return True if the group was expanded, false otherwise  (If the group was already expanded, this will return false)
      */
     public boolean expandGroup(int groupPosition) {
         return (mAdapter != null) && mAdapter.expandGroup(groupPosition, false);
@@ -315,7 +315,7 @@ public boolean expandGroup(int groupPosition) {
      *
      * @param groupPosition The group position to be collapsed
      *
-     * @return True if the group was collapsed,false otherwise  (If the group was already collapsed, this will return false)
+     * @return True if the group was collapsed, false otherwise  (If the group was already collapsed, this will return false)
      */
     public boolean collapseGroup(int groupPosition) {
         return (mAdapter != null) && mAdapter.collapseGroup(groupPosition, false);
@@ -367,7 +367,7 @@ public static int getPackedPositionChild(long packedPosition) {
      * Returns the packed position representation of a child position.
      *
      * In general, a packed position should be used in situations where the position given to/returned from
-     * {@link RecyclerViewExpandableItemManager} method can eirther be a child or group.
+     * {@link RecyclerViewExpandableItemManager} method can either be a child or group.
      * The two positions are packed into a single long which can be unpacked using {@link #getPackedPositionChild(long)} and
      * {@link #getPackedPositionGroup(long)}.
      *

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -215,7 +215,7 @@ private void handleActionDown(RecyclerView rv, MotionEvent e) {
         mInitialTouchX = (int) (e.getX() + 0.5f);
         mInitialTouchY = (int) (e.getY() + 0.5f);
 
-        if (holder != null) {
+        if (holder instanceof ExpandableItemViewHolder) {
             mTouchedItemId = holder.getItemId();
         } else {
             mTouchedItemId = RecyclerView.NO_ID;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -36,7 +36,7 @@
 import java.lang.ref.WeakReference;
 
 /**
- * Provides item drag & drop operation for {@link android.support.v7.widget.RecyclerView}
+ * Provides item drag &amp; drop operation for {@link android.support.v7.widget.RecyclerView}
  */
 @SuppressWarnings("PointlessBitwiseExpression")
 public class RecyclerViewDragDropManager {
@@ -215,6 +215,7 @@ public void attachRecyclerView(RecyclerView rv) {
      * {@link #createWrappedAdapter(android.support.v7.widget.RecyclerView.Adapter)} method.
      *
      * @param rv The {@link android.support.v7.widget.RecyclerView} instance
+     * @param scrollEventDistributor The distributor for {@link android.support.v7.widget.RecyclerView.OnScrollListener} event
      */
     public void attachRecyclerView(RecyclerView rv, RecyclerViewOnScrollEventDistributor scrollEventDistributor) {
         if (rv == null) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/event/BaseRecyclerViewEventDistributor.java
Patch:
@@ -94,7 +94,7 @@ public boolean add(T listener) {
      * Add a {@link T} listener to the chain at the specified position.
      *
      * @param listener The {@link T} instance
-     * @param index Position in the listener chain to insert this listener at.  (< 0:  tail of the chain)
+     * @param index Position in the listener chain to insert this listener at.  (&lt; 0:  tail of the chain)
      *
      * @return True if the listener object successfully added, otherwise false. Also returns true if have already been added.
      */

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d/RecyclerListViewFragment.java
Patch:
@@ -63,7 +63,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
         // drag & drop manager
         mRecyclerViewDragDropManager = new RecyclerViewDragDropManager();
-        mRecyclerViewDragDropManager.setSwapTargetTranslationInterpolator(new BasicSwapTargetTranslationInterpolator());
         mRecyclerViewDragDropManager.setDraggingItemShadowDrawable(
                 (NinePatchDrawable) getResources().getDrawable(R.drawable.material_shadow_z3));
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d_with_section/RecyclerListViewFragment.java
Patch:
@@ -63,7 +63,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
         // drag & drop manager
         mRecyclerViewDragDropManager = new RecyclerViewDragDropManager();
-        mRecyclerViewDragDropManager.setSwapTargetTranslationInterpolator(new BasicSwapTargetTranslationInterpolator());
         mRecyclerViewDragDropManager.setDraggingItemShadowDrawable(
                 (NinePatchDrawable) getResources().getDrawable(R.drawable.material_shadow_z3));
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/RecyclerListViewFragment.java
Patch:
@@ -72,7 +72,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
         // drag & drop manager
         mRecyclerViewDragDropManager = new RecyclerViewDragDropManager();
-        mRecyclerViewDragDropManager.setSwapTargetTranslationInterpolator(new BasicSwapTargetTranslationInterpolator());
         mRecyclerViewDragDropManager.setDraggingItemShadowDrawable(
                 (NinePatchDrawable) getResources().getDrawable(R.drawable.material_shadow_z3));
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ed_with_section/RecyclerListViewFragment.java
Patch:
@@ -80,7 +80,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
         // drag & drop manager
         mRecyclerViewDragDropManager = new RecyclerViewDragDropManager();
-        mRecyclerViewDragDropManager.setSwapTargetTranslationInterpolator(new BasicSwapTargetTranslationInterpolator());
         mRecyclerViewDragDropManager.setDraggingItemShadowDrawable(
                 (NinePatchDrawable) getResources().getDrawable(R.drawable.material_shadow_z3));
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/RecyclerListViewFragment.java
Patch:
@@ -80,7 +80,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
         // drag & drop manager
         mRecyclerViewDragDropManager = new RecyclerViewDragDropManager();
-        mRecyclerViewDragDropManager.setSwapTargetTranslationInterpolator(new BasicSwapTargetTranslationInterpolator());
         mRecyclerViewDragDropManager.setDraggingItemShadowDrawable(
                 (NinePatchDrawable) getResources().getDrawable(R.drawable.material_shadow_z3));
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/decoration/ItemShadowDecorator.java
Patch:
@@ -96,6 +96,7 @@ private static boolean shouldDrawDropShadow(View child) {
         }
 
         if (background instanceof ColorDrawable) {
+            //noinspection RedundantCast
             if (((ColorDrawable) background).getAlpha() == 0) {
                 return false;
             }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipingItemOperator.java
Patch:
@@ -53,6 +53,7 @@ public SwipingItemOperator(RecyclerViewSwipeManager manager, RecyclerView.ViewHo
         mInvSwipingItemWidth = (mSwipingItemWidth != 0) ? (1.0f / mSwipingItemWidth) : 0.0f;
     }
 
+    @SuppressWarnings("EmptyMethod")
     public void start() {
         // nothing to do here.
     }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/utils/AdapterUtils.java
Patch:
@@ -26,7 +26,7 @@ public static View findParentViewHolderItemView(View v) {
         if (parent instanceof RecyclerView) {
             // returns the passed instance if the parent is RecyclerView
             return v;
-        } else if (v instanceof View) {
+        } else if (parent instanceof View) {
             // check the parent view recursively
             return findParentViewHolderItemView((View) parent);
         } else {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -23,7 +23,7 @@
 import com.h6ah4i.android.widget.advrecyclerview.utils.BaseWrapperAdapter;
 import com.h6ah4i.android.widget.advrecyclerview.utils.WrapperAdapterUtils;
 
-public class DraggableItemWrapperAdapter<VH extends RecyclerView.ViewHolder> extends BaseWrapperAdapter<VH> {
+class DraggableItemWrapperAdapter<VH extends RecyclerView.ViewHolder> extends BaseWrapperAdapter<VH> {
     private static final String TAG = "ARVDraggableWrapper";
 
     private static final int STATE_FLAG_INITIAL_VALUE = -1;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -25,7 +25,7 @@
 import com.h6ah4i.android.widget.advrecyclerview.utils.BaseWrapperAdapter;
 import com.h6ah4i.android.widget.advrecyclerview.utils.WrapperAdapterUtils;
 
-public class ExpandableRecyclerViewWrapperAdapter
+class ExpandableRecyclerViewWrapperAdapter
         extends BaseWrapperAdapter<RecyclerView.ViewHolder>
         implements DraggableItemAdapter<RecyclerView.ViewHolder>,
         SwipeableItemAdapter<RecyclerView.ViewHolder> {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -157,7 +157,7 @@ public void release() {
      * @return Wrapped adapter which is associated to this {@link RecyclerViewExpandableItemManager} instance.
      */
     @SuppressWarnings("unchecked")
-    public ExpandableRecyclerViewWrapperAdapter createWrappedAdapter(RecyclerView.Adapter adapter) {
+    public RecyclerView.Adapter createWrappedAdapter(RecyclerView.Adapter adapter) {
         if (mAdapter != null) {
             throw new IllegalStateException("already have a wrapped adapter");
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -273,7 +273,7 @@ public void onTouchEvent(RecyclerView rv, MotionEvent e) {
      * @return Wrapped adapter which is associated to this {@link RecyclerViewSwipeManager} instance.
      */
     @SuppressWarnings("unchecked")
-    public SwipeableItemWrapperAdapter createWrappedAdapter(RecyclerView.Adapter adapter) {
+    public RecyclerView.Adapter createWrappedAdapter(RecyclerView.Adapter adapter) {
         if (mAdapter != null) {
             throw new IllegalStateException("already have a wrapped adapter");
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemWrapperAdapter.java
Patch:
@@ -25,7 +25,7 @@
 import com.h6ah4i.android.widget.advrecyclerview.utils.BaseWrapperAdapter;
 import com.h6ah4i.android.widget.advrecyclerview.utils.WrapperAdapterUtils;
 
-public class SwipeableItemWrapperAdapter<VH extends RecyclerView.ViewHolder> extends BaseWrapperAdapter<VH> {
+class SwipeableItemWrapperAdapter<VH extends RecyclerView.ViewHolder> extends BaseWrapperAdapter<VH> {
     private static final String TAG = "ARVSwipeableWrapper";
 
     private static final int STATE_FLAG_INITIAL_VALUE = -1;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -480,11 +480,11 @@ public void cancelSwipe() {
         finishSwiping(RESULT_CANCELED);
     }
 
-    public boolean isAnimationRunning(RecyclerView.ViewHolder item) {
+    /*package*/ boolean isAnimationRunning(RecyclerView.ViewHolder item) {
         return (mItemSlideAnimator != null) && (mItemSlideAnimator.isRunning(item));
     }
 
-    public void slideItem(RecyclerView.ViewHolder holder, float amount, boolean shouldAnimate) {
+    private void slideItem(RecyclerView.ViewHolder holder, float amount, boolean shouldAnimate) {
         if (amount == OUTSIDE_OF_THE_WINDOW_LEFT) {
             mItemSlideAnimator.slideToOutsideOfWindow(holder, true, shouldAnimate, mMoveToOutsideWindowAnimationDuration);
         } else if (amount == OUTSIDE_OF_THE_WINDOW_RIGHT) {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e/MyExpandableItemAdapter.java
Patch:
@@ -67,7 +67,7 @@ public MyExpandableItemAdapter(AbstractExpandableDataProvider dataProvider) {
         mProvider = dataProvider;
 
         // ExpandableItemAdapter requires stable ID, and also
-        // have to implement the getItemId() method appropriately.
+        // have to implement the getGroupItemId()/getChildItemId() methods appropriately.
         setHasStableIds(true);
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemAdapter.java
Patch:
@@ -23,7 +23,7 @@ public interface DraggableItemAdapter<T extends RecyclerView.ViewHolder> {
     /**
      * Called when user is attempt to drag the item.
      *
-     * @param holder The ViewHolder which is associated to item user is attempt to start swiping.
+     * @param holder The ViewHolder which is associated to item user is attempt to start dragging.
      * @param x Touched X position. Relative from the itemView's top-left.
      * @param y Touched Y position. Relative from the itemView's top-left.
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/RecyclerListViewFragment.java
Patch:
@@ -93,8 +93,8 @@ public void onItemPinned(int position) {
             }
 
             @Override
-            public void onItemViewClicked(View v) {
-                onItemViewClick(v);
+            public void onItemViewClicked(View v, boolean pinned) {
+                onItemViewClick(v, pinned);
             }
         });
 
@@ -178,7 +178,7 @@ public void onDestroyView() {
         super.onDestroyView();
     }
 
-    private void onItemViewClick(View v) {
+    private void onItemViewClick(View v, boolean pinned) {
         int position = mRecyclerView.getChildPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((DraggableSwipeableExampleActivity) getActivity()).onItemClicked(position);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/RecyclerListViewFragment.java
Patch:
@@ -113,8 +113,8 @@ public void onChildItemPinned(int groupPosition, int childPosition) {
             }
 
             @Override
-            public void onItemViewClicked(View v) {
-                onItemViewClick(v);
+            public void onItemViewClicked(View v, boolean pinned) {
+                onItemViewClick(v, pinned);
             }
         });
 
@@ -211,7 +211,7 @@ public void onDestroyView() {
         super.onDestroyView();
     }
 
-    private void onItemViewClick(View v) {
+    private void onItemViewClick(View v, boolean pinned) {
         final int flatPosition = mRecyclerView.getChildPosition(v);
 
         if (flatPosition == RecyclerView.NO_POSITION) {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/RecyclerListViewFragment.java
Patch:
@@ -84,8 +84,8 @@ public void onItemPinned(int position) {
             }
 
             @Override
-            public void onItemViewClicked(View v) {
-                onItemViewClick(v);
+            public void onItemViewClicked(View v, boolean pinned) {
+                onItemViewClick(v, pinned);
             }
         });
 
@@ -161,7 +161,7 @@ public void onDestroyView() {
         super.onDestroyView();
     }
 
-    private void onItemViewClick(View v) {
+    private void onItemViewClick(View v, boolean pinned) {
         int position = mRecyclerView.getChildPosition(v);
         if (position != RecyclerView.NO_POSITION) {
             ((SwipeableExampleActivity) getActivity()).onItemClicked(position);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/about/AssetFileLibraryLicenseDataCollector.java
Patch:
@@ -133,7 +133,6 @@ private static Uri safeParseLinkUri(String s) {
     private static String loadTextFile(AssetManager assets, String path) {
         InputStream stream = null;
         try {
-            StringBuilder builder = new StringBuilder();
             stream = assets.open(path, AssetManager.ACCESS_STREAMING);
             java.util.Scanner s = new java.util.Scanner(stream).useDelimiter("\\A");
             return s.hasNext() ? s.next().trim() : "";

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/data/ExampleDataProvider.java
Patch:
@@ -84,7 +84,7 @@ public Data getItem(int index) {
     @Override
     public int undoLastRemoval() {
         if (mLastRemovedData != null) {
-            int insertedPosition = mLastRemovedPosition;
+            int insertedPosition;
             if (mLastRemovedPosition >= 0 && mLastRemovedPosition < mData.size()) {
                 insertedPosition = mLastRemovedPosition;
             } else {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RemovingItemDecorator.java
Patch:
@@ -144,9 +144,9 @@ private void fillSwipingItemBackground(Canvas c, Drawable drawable, int height)
     }
 
     private void postInvalidateOnAnimation() {
-        final Rect bounds = mSwipingItemBounds;
-        final int translationX = mInitialTranslationX;
-        final int translationY = mTranslationY;
+//        final Rect bounds = mSwipingItemBounds;
+//        final int translationX = mInitialTranslationX;
+//        final int translationY = mTranslationY;
 
 //        ViewCompat.postInvalidateOnAnimation(
 //                mRecyclerView,

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/about/AssetFileLibraryLicenseDataCollector.java
Patch:
@@ -119,7 +119,7 @@ private static Uri safeParseLinkUri(String s) {
 
         final String[] lines = s.split("\n");
 
-        if (lines == null || lines.length == 0) {
+        if (lines.length == 0) {
             return null;
         }
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/data/ExampleDataProvider.java
Patch:
@@ -38,7 +38,7 @@ public ExampleDataProvider(boolean simple) {
                     final int viewType = 0;
                     final String text = Character.toString(atoz.charAt(j));
                     final int swipeReaction = RecyclerViewSwipeManager.REACTION_CAN_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_SWIPE_RIGHT;
-                    mData.add(new ConcreteData(id, viewType, text, swipeReaction, simple));
+                    mData.add(new ConcreteData(id, viewType, text, swipeReaction, true));
                 }
             }
         } else {
@@ -61,7 +61,7 @@ public ExampleDataProvider(boolean simple) {
                     final int viewType = j % 2;
                     final String text = Character.toString(atoz.charAt(j));
                     final int swipeReaction = swipeReactionTable[j % swipeReactionTable.length];
-                    mData.add(new ConcreteData(id, viewType, text, swipeReaction, simple));
+                    mData.add(new ConcreteData(id, viewType, text, swipeReaction, false));
                 }
             }
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_d/RecyclerListViewFragment.java
Patch:
@@ -57,6 +57,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
+        //noinspection ConstantConditions
         mRecyclerView = (RecyclerView) getView().findViewById(R.id.recycler_view);
         mLayoutManager = new LinearLayoutManager(getActivity());
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/RecyclerListViewFragment.java
Patch:
@@ -61,6 +61,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
+        //noinspection ConstantConditions
         mRecyclerView = (RecyclerView) getView().findViewById(R.id.recycler_view);
         mLayoutManager = new LinearLayoutManager(getActivity());
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_e/RecyclerListViewFragment.java
Patch:
@@ -59,6 +59,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
+        //noinspection ConstantConditions
         mRecyclerView = (RecyclerView) getView().findViewById(R.id.recycler_view);
         mLayoutManager = new LinearLayoutManager(getActivity());
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/RecyclerListViewFragment.java
Patch:
@@ -66,6 +66,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
+        //noinspection ConstantConditions
         mRecyclerView = (RecyclerView) getView().findViewById(R.id.recycler_view);
         mLayoutManager = new LinearLayoutManager(getActivity());
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/RecyclerListViewFragment.java
Patch:
@@ -58,6 +58,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
 
+        //noinspection ConstantConditions
         mRecyclerView = (RecyclerView) getView().findViewById(R.id.recycler_view);
         mLayoutManager = new LinearLayoutManager(getActivity());
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/EdgeEffectDecorator.java
Patch:
@@ -40,6 +40,7 @@ public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state)
             if (getClipToPadding(parent)) {
                 c.translate(parent.getPaddingLeft(), parent.getPaddingTop());
             }
+            //noinspection ConstantConditions
             needsInvalidate |= mTopGlow.draw(c);
             c.restoreToCount(restore);
         }
@@ -99,6 +100,7 @@ public void releaseBothGlows() {
         boolean needsInvalidate = false;
 
         if (mTopGlow != null) {
+            //noinspection ConstantConditions
             needsInvalidate |= mTopGlow.onRelease();
         }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -294,7 +294,7 @@ public void onMoveItem(int fromPosition, int toPosition) {
 
             adapter.onMoveChildItem(fromGroupPosition, fromChildPosition, toGroupPosition, modToChildPosition);
             mPositionTranslator.moveChildItem(fromGroupPosition, fromChildPosition, toGroupPosition, modToChildPosition);
-        } else if (!fromIsGroup && toIsGroup) {
+        } else if (!fromIsGroup /*&& toIsGroup NOTE: toIsGroup is always true here*/) {
             int modToGroupPosition;
             int modToChildPosition;
 

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/DraggableSwipeableExampleActivity.java
Patch:
@@ -54,7 +54,7 @@ protected void onCreate(Bundle savedInstanceState) {
     /**
      * This method will be called when a list item is removed
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemRemoved(int position) {
         SnackbarManager.show(
@@ -77,7 +77,7 @@ public void onActionClicked(Snackbar snackbar) {
     /**
      * This method will be called when a list item is pinned
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemPinned(int position) {
         final DialogFragment dialog = ItemPinnedMessageDialogFragment.newInstance(position);
@@ -91,7 +91,7 @@ public void onItemPinned(int position) {
     /**
      * This method will be called when a list item is clicked
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemClicked(int position) {
         final Fragment fragment = getSupportFragmentManager().findFragmentByTag(FRAGMENT_LIST_VIEW);

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_s/SwipeableExampleActivity.java
Patch:
@@ -54,7 +54,7 @@ protected void onCreate(Bundle savedInstanceState) {
     /**
      * This method will be called when a list item is removed
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemRemoved(int position) {
         SnackbarManager.show(
@@ -77,7 +77,7 @@ public void onActionClicked(Snackbar snackbar) {
     /**
      * This method will be called when a list item is pinned
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemPinned(int position) {
         final DialogFragment dialog = ItemPinnedMessageDialogFragment.newInstance(position);
@@ -91,7 +91,7 @@ public void onItemPinned(int position) {
     /**
      * This method will be called when a list item is clicked
      *
-     * @param position
+     * @param position The position of the item within data set
      */
     public void onItemClicked(int position) {
         final Fragment fragment = getSupportFragmentManager().findFragmentByTag(FRAGMENT_LIST_VIEW);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/utils/AbstractExpandableItemAdapter.java
Patch:
@@ -79,8 +79,8 @@ public final int getItemCount() {
      * Override {@link #onBindGroupViewHolder(RecyclerView.ViewHolder, int, int)} ()} and
      * {@link #onBindChildViewHolder(RecyclerView.ViewHolder, int, int, int)} instead.
      *
-     * @param holder
-     * @param position
+     * @param holder not used
+     * @param position not used
      */
     @Override
     public final void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/data/ExampleDataProvider.java
Patch:
@@ -140,7 +140,8 @@ public static final class ConcreteData extends Data {
         private static String makeText(long id, String text, int swipeReaction, boolean simplified) {
             final StringBuilder sb = new StringBuilder();
 
-            sb.append(id + " - ");
+            sb.append(id);
+            sb.append(" - ");
             sb.append(text);
 
             if (!simplified) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -781,7 +781,7 @@ private static class ScrollOnDraggingProcessRunnable implements Runnable {
         private boolean mStarted;
 
         public ScrollOnDraggingProcessRunnable(RecyclerViewDragDropManager holder) {
-            mHolderRef = new WeakReference<RecyclerViewDragDropManager>(holder);
+            mHolderRef = new WeakReference<>(holder);
         }
 
         public void start() {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandablePositionTranslator.java
Patch:
@@ -94,6 +94,7 @@ public void restoreExpandedGroupItems(int[] restoreGroupIds) {
 
         // find matched items & apply
         int index = 0;
+        //noinspection ForLoopReplaceableByForEach
         for (int i = 0; i < restoreGroupIds.length; i++) {
             final int id1 = restoreGroupIds[i];
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableSwipeableItemAdapter.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.expandable;
 
-import android.graphics.drawable.Drawable;
 import android.support.v7.widget.RecyclerView;
 
 public interface ExpandableSwipeableItemAdapter<GVH extends RecyclerView.ViewHolder, CVH extends RecyclerView.ViewHolder> {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipeableItemAdapter.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.h6ah4i.android.widget.advrecyclerview.swipeable;
 
-import android.graphics.drawable.Drawable;
 import android.support.v7.widget.RecyclerView;
 
 public interface SwipeableItemAdapter<T extends RecyclerView.ViewHolder> {

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/about/AssetFileLibraryLicenseDataCollector.java
Patch:
@@ -141,7 +141,7 @@ private static String loadTextFile(AssetManager assets, String path) {
             if (stream != null) {
                 try {
                     stream.close();
-                } catch (IOException e) {
+                } catch (IOException ignored) {
                 }
             }
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -192,6 +192,7 @@ protected void onHandleWrappedAdapterRangeMoved(int fromPosition, int toPosition
     }
 
     private boolean shouldCancelDragOnDataUpdated() {
+        //noinspection SimplifiableIfStatement
         if (DEBUG_BYPASS_MOVE_OPERATION_MODE) {
             return false;
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/common/data/ExampleDataProvider.java
Patch:
@@ -42,6 +42,7 @@ public ExampleDataProvider(boolean simple) {
                 }
             }
         } else {
+            @SuppressWarnings("PointlessBitwiseExpression")
             final int[] swipeReactionTable = {
                     RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT,
                     RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT_WITH_RUBBER_BAND_EFFECT,

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_ds/MyDraggableSwipeableItemAdapter.java
Patch:
@@ -174,7 +174,7 @@ public boolean onCheckCanStartDrag(MyViewHolder holder, int x, int y) {
     @Override
     public int onGetSwipeReactionType(MyViewHolder holder, int x, int y) {
         if (onCheckCanStartDrag(holder, x, y)) {
-            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT;
+            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_BOTH;
         } else {
             return mProvider.getItem(holder.getPosition()).getSwipeReactionType();
         }

File: example/src/main/java/com/h6ah4i/android/example/advrecyclerview/demo_eds/MyExpandableDraggableSwipeableItemAdapter.java
Patch:
@@ -305,7 +305,7 @@ public void onMoveChildItem(int fromGroupPosition, int fromChildPosition, int to
     @Override
     public int onGetGroupItemSwipeReactionType(MyGroupViewHolder holder, int groupPosition, int x, int y) {
         if (onCheckGroupCanStartDrag(holder, groupPosition, x, y)) {
-            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT;
+            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_BOTH;
         }
 
         return mProvider.getGroupItem(groupPosition).getSwipeReactionType();
@@ -314,7 +314,7 @@ public int onGetGroupItemSwipeReactionType(MyGroupViewHolder holder, int groupPo
     @Override
     public int onGetChildItemSwipeReactionType(MyChildViewHolder holder, int groupPosition, int childPosition, int x, int y) {
         if (onCheckChildCanStartDrag(holder, groupPosition, childPosition, x, y)) {
-            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT;
+            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_BOTH;
         }
 
         return mProvider.getChildItem(groupPosition, childPosition).getSwipeReactionType();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -33,6 +33,7 @@
 
 import java.lang.ref.WeakReference;
 
+@SuppressWarnings("PointlessBitwiseExpression")
 public class RecyclerViewDragDropManager {
     private static final String TAG = "ARVDragDropManager";
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableAdapterHelper.java
Patch:
@@ -47,6 +47,7 @@ public static long getCombinedChildId(long groupId, long childId) {
     }
 
     public static long getCombinedGroupId(long groupId) {
+        //noinspection PointlessBitwiseExpression
         return ((groupId & LOWER_31BIT_MASK) << 32) | (RecyclerView.NO_ID & LOWER_32BIT_MASK);
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/ExpandableRecyclerViewWrapperAdapter.java
Patch:
@@ -356,7 +356,7 @@ public void onMoveItem(int fromPosition, int toPosition) {
     @Override
     public int onGetSwipeReactionType(RecyclerView.ViewHolder holder, int x, int y) {
         if (!(mExpandableItemAdapter instanceof ExpandableSwipeableItemAdapter)) {
-            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_LEFT | RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_RIGHT;
+            return RecyclerViewSwipeManager.REACTION_CAN_NOT_SWIPE_BOTH;
         }
 
         final ExpandableSwipeableItemAdapter adapter = (ExpandableSwipeableItemAdapter) mExpandableItemAdapter;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/expandable/RecyclerViewExpandableItemManager.java
Patch:
@@ -32,6 +32,7 @@ public class RecyclerViewExpandableItemManager {
 
     public static final long NO_EXPANDABLE_POSITION = ExpandableAdapterHelper.NO_EXPANDABLE_POSITION;
 
+    @SuppressWarnings("PointlessBitwiseExpression")
     public static final int STATE_FLAG_IS_GROUP = (1 << 0);
     public static final int STATE_FLAG_IS_CHILD = (1 << 1);
     public static final int STATE_FLAG_IS_EXPANDED = (1 << 2);

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/RecyclerViewDragDropManager.java
Patch:
@@ -720,6 +720,7 @@ private boolean checkTouchedItemState(RecyclerView rv, RecyclerView.ViewHolder h
             return false;
         }
 
+        //noinspection RedundantIfStatement
         if (holder.getItemId() != adapter.getItemId(itemPosition)) {
             return false;
         }

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggingItemDecorator.java
Patch:
@@ -45,7 +45,6 @@ class DraggingItemDecorator extends RecyclerView.ItemDecoration {
     private NinePatchDrawable mShadowDrawable;
     private Rect mShadowPadding = new Rect();
     private Rect mDraggingItemMargins = new Rect();
-    private Rect mDraggingItemDecorationOffsets = new Rect();
     private boolean mStarted;
     private boolean mIsScrolling;
 
@@ -54,8 +53,6 @@ public DraggingItemDecorator(RecyclerView recyclerView, RecyclerView.ViewHolder
         mDraggingItem = draggingItem;
 
         CustomRecyclerViewUtils.getLayoutMargins(mDraggingItem.itemView, mDraggingItemMargins);
-        CustomRecyclerViewUtils.getDecorationOffsets(
-                mRecyclerView.getLayoutManager(), mDraggingItem.itemView, mDraggingItemDecorationOffsets);
     }
 
     @Override

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RemovingItemDecorator.java
Patch:
@@ -40,7 +40,6 @@ class RemovingItemDecorator extends RecyclerView.ItemDecoration {
     private RecyclerView mRecyclerView;
     private RecyclerView.ViewHolder mSwipingItem;
     private long mSwipingItemId;
-    private Rect mSwipingItemMargins = new Rect();
     private Rect mSwipingItemBounds = new Rect();
     private int mInitialTranslationX;
     private int mTranslationY;
@@ -61,7 +60,6 @@ public RemovingItemDecorator(RecyclerView rv, RecyclerView.ViewHolder swipingIte
         mMoveAnimationDuration = moveAnimationDuration;
         mInitialTranslationX = (int) (ViewCompat.getTranslationX(swipingItem.itemView) + 0.5f);
 
-        CustomRecyclerViewUtils.getLayoutMargins(mSwipingItem.itemView, mSwipingItemMargins);
         CustomRecyclerViewUtils.getViewBounds(mSwipingItem.itemView, mSwipingItemBounds);
     }
 

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/SwipingItemOperator.java
Patch:
@@ -66,6 +66,7 @@ public void finish() {
         mLeftSwipeReactionType = REACTION_CAN_NOT_SWIPE;
         mRightSwipeReactionType = REACTION_CAN_NOT_SWIPE;
         mPrevTranslateAmount = 0;
+        mSwipingItemContainerView = null;
     }
 
     public void update(int swipeDistance) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/animator/GeneralItemAnimator.java
Patch:
@@ -97,7 +97,7 @@ public boolean animateChange(
             final String newId = (newHolder != null) ? Long.toString(newHolder.getItemId()) : "-";
             final String newPosition = (newHolder != null) ? Long.toString(newHolder.getPosition()) : "-";
 
-            Log.d(TAG, "animateMove(old.id = " + oldId + ", old.position = " + oldPosition + ", new.id = " + newId + ", new.position = " + newPosition
+            Log.d(TAG, "animateChange(old.id = " + oldId + ", old.position = " + oldPosition + ", new.id = " + newId + ", new.position = " + newPosition
                     + ", fromX = " + fromX + ", fromY = " + fromY + ", toX = " + toX + ", toY = " + toY + ")");
         }
 
@@ -186,7 +186,7 @@ public boolean debugLogEnabled() {
     @Override
     public boolean dispatchFinishedWhenDone() {
         if (mDebug && !isRunning()) {
-            Log.d(TAG, "dispatchAnimationsFinished()");
+            Log.d(TAG, "dispatchFinishedWhenDone()");
         }
 
         return super.dispatchFinishedWhenDone();

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/draggable/DraggableItemWrapperAdapter.java
Patch:
@@ -44,7 +44,7 @@ public DraggableItemWrapperAdapter(RecyclerViewDragDropManager manager, Recycler
 
         mDraggableItemAdapter = getDraggableItemAdapter(adapter);
         if (getDraggableItemAdapter(adapter) == null) {
-            throw new IllegalArgumentException("adapter does not implement MovableItemAdapter");
+            throw new IllegalArgumentException("adapter does not implement DraggableItemAdapter");
         }
 
         if (manager == null) {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/touchguard/RecyclerViewTouchActionGuardManager.java
Patch:
@@ -23,7 +23,7 @@
 import android.view.ViewConfiguration;
 
 public class RecyclerViewTouchActionGuardManager {
-    private static final String TAG = "RecyclerViewScrollGuardManager";
+    private static final String TAG = "RecyclerViewTouchActionGuardManager";
 
     private static final boolean LOCAL_LOGV = false;
     private static final boolean LOCAL_LOGD = false;

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/ItemSlidingAnimator.java
Patch:
@@ -91,12 +91,13 @@ private boolean slideToOutsideOfWindowInternal(RecyclerView.ViewHolder holder, b
         final int left = containerView.getLeft();
         final int right = containerView.getRight();
         final int width = right - left;
+        final boolean parentIsShown = parent.isShown();
 
         parent.getWindowVisibleDisplayFrame(mTmpRect);
 
         final int translateX;
-        if (width == 0) {
-            // not measured yet
+        if ((width == 0) || !parentIsShown) {
+            // not measured yet or not shown
             translateX = (toLeft) ? (-mTmpRect.width()) : (mTmpRect.width());
             shouldAnimate = false;
         } else {

File: library/src/main/java/com/h6ah4i/android/widget/advrecyclerview/swipeable/RecyclerViewSwipeManager.java
Patch:
@@ -362,15 +362,15 @@ private void handleActionMoveWhileSwiping(MotionEvent e) {
         mLastTouchX = (int) (e.getX() + 0.5f);
         mVelocityTracker.addMovement(e);
 
-        final int swipeDistance = mLastTouchX - (mTouchedItemOffsetX + mSwipingItemMargins.left);
+        final int swipeDistance = mLastTouchX - mTouchedItemOffsetX;
 
         mSwipingItemOperator.update(swipeDistance);
     }
 
     private void startSwiping(RecyclerView rv, MotionEvent e, RecyclerView.ViewHolder holder) {
         mSwipingItem = holder;
         mLastTouchX = (int) (e.getX() + 0.5f);
-        mTouchedItemOffsetX = mLastTouchX - holder.itemView.getLeft();
+        mTouchedItemOffsetX = mLastTouchX;
         CustomRecyclerViewUtils.getLayoutMargins(holder.itemView, mSwipingItemMargins);
 
         mSwipingItemOperator = new SwipingItemOperator(this, mSwipingItem, mSwipingItemReactionType);

