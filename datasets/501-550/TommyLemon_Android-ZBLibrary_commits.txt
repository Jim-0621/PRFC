File: ZBLibrary/src/main/java/zuo/biao/library/manager/HttpManager.java
Patch:
@@ -234,6 +234,7 @@ protected Exception doInBackground(Void... params) {
 					result = getResponseJson(
 							client,
 							new Request.Builder()
+                                    .url(url)
 									.post(requestBody)
 									.build()
 					);

File: ZBLibrary(AndroidStudio)/ZBLibrary/src/main/java/zuo/biao/library/base/BaseView.java
Patch:
@@ -68,7 +68,7 @@ public BaseView(Activity context, @LayoutRes int layoutResId) {
 	/**
 	 * @param context
 	 * @param layoutResId
-	 * @param parent TODO 如果itemView是放在RecyclerView.Adapter中，则需要传入parent来解决不能占满宽度的问题
+	 * @param parent TODO 如果itemView不能占满宽度 或 高度不对，一般是RecyclerView的问题，可通过传parent解决
 	 */
 	public BaseView(Activity context, @LayoutRes int layoutResId, ViewGroup parent) {
 		this(context, context.getLayoutInflater().inflate(layoutResId, parent, false));

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseAdapter.java
Patch:
@@ -104,7 +104,7 @@ public void setOnReachViewBorderListener(OnReachViewBorderListener onReachViewBo
 	 * 预加载提前数
 	 * @use 可在子类getView前赋值;
 	 */
-	public static int PRELOAD_NUM = 1;
+	protected int preloadCount = 1;
 
 	/**获取item对应View的方法，带item滑到底部等监听
 	 * @param position
@@ -115,7 +115,7 @@ public void setOnReachViewBorderListener(OnReachViewBorderListener onReachViewBo
 	 */
 	@Override
 	public View getView(int position, View convertView, ViewGroup parent) {
-		if (onReachViewBorderListener != null && position >= getCount() - 1 - PRELOAD_NUM) {
+		if (onReachViewBorderListener != null && position >= getCount() - 1 - preloadCount) {
 			onReachViewBorderListener.onReach(OnReachViewBorderListener.TYPE_BOTTOM, parent);
 		}
 		return convertView;

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/DEMO/DemoFragment.java
Patch:
@@ -199,7 +199,7 @@ public void initEvent() {//必须在onCreateView方法内调用
 		lvDemoFragment.setOnItemClickListener(new OnItemClickListener() {
 			@Override
 			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-				toActivity(UserActivity.createIntent(context, id));
+				toActivity(UserActivity.createIntent(context, position));//一般用id，这里position仅用于测试 id));//
 			}
 		});
 		//示例代码>>>>>>>>>>>>>>>>>>>

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/DEMO/DemoListFragment.java
Patch:
@@ -146,7 +146,7 @@ public void initEvent() {//必须在onCreateView方法内调用
 		lvBaseList.setOnItemClickListener(new OnItemClickListener() {
 			@Override
 			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-				toActivity(UserActivity.createIntent(context, id));
+				toActivity(UserActivity.createIntent(context, position));//一般用id，这里position仅用于测试 id));//
 			}
 		});
 		//示例代码>>>>>>>>>>>>>>>>>>>

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseListActivity.java
Patch:
@@ -286,7 +286,7 @@ public synchronized void handleList(List<T> newList_, boolean isCache) {
 		if (newList == null) {
 			newList = new ArrayList<T>();
 		}
-		Log.i(TAG, "handleList  newList.size = " + newList_.size() + "; isCache = " + isCache);
+		Log.i(TAG, "handleList  newList.size = " + newList.size() + "; isCache = " + isCache);
 
 		if (pageNum <= HttpManager.PAGE_NUM_0) {
 			saveCacheStart = 0;

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseListFragment.java
Patch:
@@ -353,7 +353,7 @@ public synchronized void handleList(List<T> newList_, boolean isCache) {
 		if (newList == null) {
 			newList = new ArrayList<T>();
 		}
-		Log.i(TAG, "handleList  newList.size = " + newList_.size() + "; isCache = " + isCache);
+		Log.i(TAG, "handleList  newList.size = " + newList.size() + "; isCache = " + isCache);
 
 		if (pageNum <= HttpManager.PAGE_NUM_0) {
 			saveCacheStart = 0;

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseHttpListActivity.java
Patch:
@@ -138,11 +138,11 @@ public void onHttpRequestSuccess(int requestCode, int resultCode, final String j
 
 	/**里面只有stopLoadData();showShortToast(R.string.get_failed); 不能满足需求时可重写该方法
 	 * @param requestCode 请求码，自定义，同一个Activity中以实现接口方式发起多个网络请求时以状态码区分各个请求
-	 * @param exception   OKHTTP中请求异常
+	 * @param e OKHTTP中请求异常
 	 */
 	@Override
-	public void onHttpRequestError(int requestCode, Exception exception) {
-		onLoadFailed(requestCode, exception);
+	public void onHttpRequestError(int requestCode, Exception e) {
+		onLoadFailed(e);
 	}
 
 

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseHttpListFragment.java
Patch:
@@ -137,11 +137,11 @@ public void onHttpRequestSuccess(int requestCode, int resultCode, final String j
 
 	/**里面只有stopLoadData();showShortToast(R.string.get_failed); 不能满足需求时可重写该方法
 	 * @param requestCode 请求码，自定义，同一个Activity中以实现接口方式发起多个网络请求时以状态码区分各个请求
-	 * @param exception   OKHTTP中请求异常
+	 * @param e OKHTTP中请求异常
 	 */
 	@Override
-	public void onHttpRequestError(int requestCode, Exception exception) {
-		onLoadFailed(requestCode, exception);
+	public void onHttpRequestError(int requestCode, Exception e) {
+		onLoadFailed(e);
 	}
 
 

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/base/BaseViewAdapter.java
Patch:
@@ -40,12 +40,12 @@ public View getView(int position, View convertView, ViewGroup parent) {
 		BV bv = convertView == null ? null : (BV) convertView.getTag();
 		if (bv == null) {
 			bv = createView(position, convertView, parent);
-			convertView = bv.createView(inflater);
+			convertView = bv.createView(inflater, getItemViewType(position));
 
 			convertView.setTag(bv);
 		}
 
-		bv.setView(position, getItem(position));
+		bv.setView(getItem(position), position, getItemViewType(position));
 
 		return super.getView(position, convertView, parent);
 	}

File: ZBLibrary(ADT)/ZBLibrary/src/zuo/biao/library/ui/TextClearSuit.java
Patch:
@@ -20,7 +20,6 @@
 import android.util.Log;
 import android.view.View;
 import android.view.View.OnClickListener;
-import android.widget.EditText;
 import android.widget.TextView;
 
 /**带清除按钮EditText或TextView套件，如果输入为空则隐藏清除按钮
@@ -65,7 +64,7 @@ public void addClearListener(final TextView tv, final View clearView) {
 	 * @param trim
 	 * @param clearView
 	 */
-	public void addClearListener(final EditText tv, final int blankType, final View clearView) {
+	public void addClearListener(final TextView tv, final int blankType, final View clearView) {
 		addClearListener(tv, blankType, clearView, false);
 	}
 	/**

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/DEMO/DemoAdapter2.java
Patch:
@@ -70,7 +70,7 @@ public ItemView(Activity context, Resources resources) {
 		@SuppressLint("InflateParams")
 		@Override
 		public View createView(@NonNull LayoutInflater inflater) {
-			//TODO demo_view改为你所需要的layout文件
+			//TODO demo_view改为你所需要的layout文件，可以根据viewType使用不同layout
 			convertView = inflater.inflate(R.layout.demo_view, null);
 
 			//示例代码<<<<<<<<<<<<<<<<

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/DEMO/DemoMainActivity.java
Patch:
@@ -17,7 +17,7 @@
 import java.util.ArrayList;
 
 import zblibrary.demo.R;
-import zblibrary.demo.activity_fragment.CameraScanActivity;
+import zblibrary.demo.activity_fragment.ScanActivity;
 import zuo.biao.library.base.BaseActivity;
 import zuo.biao.library.interfaces.OnBottomDragListener;
 import zuo.biao.library.ui.AlertDialog;
@@ -353,7 +353,7 @@ public void onClick(View v) {//直接调用不会显示v被点击效果
 			cutPicture(picturePath);
 			break;  
 		case R.id.llDemoMainCameraScanActivity:
-			toActivity(CameraScanActivity.createIntent(context), REQUEST_TO_CAMERA_SCAN);
+			toActivity(ScanActivity.createIntent(context), REQUEST_TO_CAMERA_SCAN);
 			break;  
 		case R.id.llDemoMainWebViewActivity:
 			toActivity(WebViewActivity.createIntent(context, SettingUtil.isOnTestMode ? "测试服务器" : "正式服务器"
@@ -438,7 +438,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 			break;
 		case REQUEST_TO_CAMERA_SCAN:
 			if (data != null) {
-				String result = data.getStringExtra(CameraScanActivity.RESULT_QRCODE_STRING);
+				String result = data.getStringExtra(ScanActivity.RESULT_QRCODE_STRING);
 				CommonUtil.copyText(context, result);
 //				toActivity(WebViewActivity.createIntent(context, "扫描结果", result));
 				CommonUtil.openWebSite(context, result);

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/DEMO/DemoView.java
Patch:
@@ -61,7 +61,7 @@ public DemoView(Activity context, Resources resources) {
 	@SuppressLint("InflateParams")
 	@Override
 	public View createView(@NonNull LayoutInflater inflater) {
-		//TODO demo_view改为你所需要的layout文件
+		//TODO demo_view改为你所需要的layout文件，可以根据viewType使用不同layout
 		convertView = inflater.inflate(R.layout.demo_view, null);
 
 		//示例代码<<<<<<<<<<<<<<<<

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/activity_fragment/QRCodeActivity.java
Patch:
@@ -18,7 +18,7 @@
 import zblibrary.demo.model.User;
 import zuo.biao.library.base.BaseActivity;
 import zuo.biao.library.interfaces.OnBottomDragListener;
-import zuo.biao.library.manager.ListDiskCacheManager;
+import zuo.biao.library.manager.CacheManager;
 import zuo.biao.library.util.ImageLoaderUtil;
 import zuo.biao.library.util.Json;
 import zuo.biao.library.util.Log;
@@ -124,7 +124,7 @@ public void initData() {//必须调用
 			@Override
 			public void run() {
 
-				user = ListDiskCacheManager.getInstance().get(User.class, "" + userId);
+				user = CacheManager.getInstance().get(User.class, "" + userId);
 				if (user == null) {
 					user = new User(userId);
 				}

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/activity_fragment/UserListFragment.java
Patch:
@@ -128,7 +128,7 @@ public void initData() {//必须调用
 
 	@Override
 	public void getListAsync(final int pageNum) {
-		//实际使用时用这个，需要配置服务器地址		HttpRequest.getInstance().getUserList(range, pageNum, 0, this);
+		//实际使用时用这个，需要配置服务器地址		HttpRequest.getUserList(range, pageNum, 0, this);
 
 		//仅测试用<<<<<<<<<<<
 		new Handler().postDelayed(new Runnable() {

File: ZBLibrary(ADT)/ZBLibraryDemoApp/src/zblibrary/demo/adapter/UserAdapter2.java
Patch:
@@ -39,12 +39,12 @@ public View getView(final int position, View convertView, ViewGroup parent) {
 		UserView userView = convertView == null ? null : (UserView) convertView.getTag();
 		if (convertView == null) {
 			userView = new UserView(context, resources);
-			convertView = userView.createView(inflater);
+			convertView = userView.createView(inflater, getItemViewType(position));
 
 			convertView.setTag(userView);
 		}
 
-		userView.setView(position, getItem(position));
+		userView.setView(getItem(position), position, getItemViewType(position));
 
 		return super.getView(position, convertView, parent);
 	}

