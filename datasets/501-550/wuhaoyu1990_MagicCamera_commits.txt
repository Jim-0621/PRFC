File: Project-AndroidStudio/magicfilter/src/main/java/com/seu/magicfilter/widget/MagicCameraView.java
Patch:
@@ -102,7 +102,6 @@ public void onDrawFrame(GL10 gl) {
                 case RECORDING_OFF:
                     CameraInfo info = CameraEngine.getCameraInfo();
                     videoEncoder.setPreviewSize(info.previewWidth, info.pictureHeight);
-                    videoEncoder.setPreviewSize(imageWidth, imageHeight);
                     videoEncoder.setTextureBuffer(gLTextureBuffer);
                     videoEncoder.setCubeBuffer(gLCubeBuffer);
                     videoEncoder.startRecording(new TextureMovieEncoder.EncoderConfig(

File: MagicFilter/src/com/seu/magicfilter/display/MagicDisplay.java
Patch:
@@ -15,8 +15,8 @@
 import com.seu.magicfilter.filter.factory.MagicFilterFactory;
 import com.seu.magicfilter.filter.helper.MagicFilterAdjuster;
 import com.seu.magicfilter.filter.helper.MagicFilterType;
-import com.seu.magicfilter.filter.helper.SaveTask;
 import com.seu.magicfilter.utils.OpenGLUtils;
+import com.seu.magicfilter.utils.SaveTask;
 import com.seu.magicfilter.utils.TextureRotationUtil;
 
 public abstract class MagicDisplay implements Renderer{

File: MagicCamera/src/com/seu/magiccamera/activity/CameraActivity.java
Patch:
@@ -41,7 +41,7 @@ private void initFilterLayout(){
 	}
 	
 	private void initMagicPreview(){
-		GLSurfaceView glSurfaceView = (GLSurfaceView)findViewById(R.id.glsurfaceView);
+		GLSurfaceView glSurfaceView = (GLSurfaceView)findViewById(R.id.glsurfaceview_camera);
 		FrameLayout.LayoutParams params = new LayoutParams(Constants.mScreenWidth, Constants.mScreenHeight);
 		glSurfaceView.setLayoutParams(params);	
 		mMagicCameraDisplay = new MagicCameraDisplay(this, glSurfaceView);

File: MagicCamera/src/com/seu/magiccamera/activity/ImageActivity.java
Patch:
@@ -175,7 +175,7 @@ public boolean onKeyDown(int keyCode, KeyEvent event) {
 	}
 	
 	private void initMagicPreview(){
-		GLSurfaceView glSurfaceView = (GLSurfaceView)findViewById(R.id.glsurfaceView_image);
+		GLSurfaceView glSurfaceView = (GLSurfaceView)findViewById(R.id.glsurfaceview_image);
 		mMagicImageDisplay = new MagicImageDisplay(this, glSurfaceView);
 
 		Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);

File: MagicCamera/src/com/seu/magiccamera/common/view/edit/adjust/ImageEditAdjustView.java
Patch:
@@ -6,13 +6,13 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.RadioGroup;
-import android.widget.SeekBar;
 import android.widget.RadioGroup.OnCheckedChangeListener;
+import android.widget.SeekBar;
 
 import com.seu.magiccamera.R;
 import com.seu.magiccamera.common.view.edit.ImageEditFragment;
-import com.seu.magiccamera.widget.bubble.BubbleSeekBar;
-import com.seu.magiccamera.widget.bubble.BubbleSeekBar.OnBubbleSeekBarChangeListener;
+import com.seu.magiccamera.widget.BubbleSeekBar;
+import com.seu.magiccamera.widget.BubbleSeekBar.OnBubbleSeekBarChangeListener;
 import com.seu.magicfilter.display.MagicImageDisplay;
 import com.seu.magicfilter.filter.helper.MagicFilterType;
 

File: MagicFilter/src/com/seu/magicfilter/filter/helper/MagicFilterAdjuster.java
Patch:
@@ -107,7 +107,7 @@ private class BrightnessAdjuster extends Adjuster<GPUImageBrightnessFilter> {
     	    	
         @Override
         public void adjust(final int percentage) {
-            getFilter().setBrightness(range(percentage, -0.75f, 0.75f));
+            getFilter().setBrightness(range(percentage, -0.5f, 0.5f));
         }
     }
     
@@ -149,7 +149,7 @@ public void adjust(final int percentage, final int type) {
 				getFilter().setExposure(range(percentage, -2.0f, 2.0f));
 				break;
 			case MagicFilterType.BRIGHTNESS:
-				getFilter().setBrightness(range(percentage, -0.75f, 0.75f));
+				getFilter().setBrightness(range(percentage, -0.5f, 0.5f));
 				break;
 			case MagicFilterType.HUE:
 				getFilter().setHue(range(percentage, 0.0f, 360.0f));

File: MagicFilter/src/com/seu/magicfilter/utils/OpenGLUtils.java
Patch:
@@ -26,6 +26,8 @@ public static int loadTexture(final Bitmap img, final int usedTexId) {
     }
 	
 	public static int loadTexture(final Bitmap img, final int usedTexId, boolean recyled) {
+		if(img == null)
+			return NO_TEXTURE; 
         int textures[] = new int[1];
         if (usedTexId == NO_TEXTURE) {
             GLES20.glGenTextures(1, textures, 0);

File: MagicCamera/src/com/seu/magiccamera/activity/CameraActivity.java
Patch:
@@ -73,7 +73,7 @@ protected void onDestroy() {
 		
 		@Override
 		public void onClick(View v) {
-			mMagicCameraDisplay.onTakePicture(null,null);
+			mMagicCameraDisplay.onTakePicture(Constants.getOutputMediaFile(), null, null);
 		}
 	};
 	

File: MagicCamera/src/com/seu/magiccamera/activity/ImageActivity.java
Patch:
@@ -18,6 +18,7 @@
 import android.widget.RadioGroup.OnCheckedChangeListener;
 
 import com.seu.magiccamera.R;
+import com.seu.magiccamera.common.utils.Constants;
 import com.seu.magiccamera.common.view.edit.ImageEditFragment;
 import com.seu.magiccamera.common.view.edit.ImageEditFragment.onHideListener;
 import com.seu.magiccamera.common.view.edit.adds.ImageEditAddsView;
@@ -59,7 +60,7 @@ public void onClick(View v) {
 			@Override
 			public void onClick(View v) {
 				// TODO Auto-generated method stub
-				mMagicImageDisplay.savaImage(new onPictureSaveListener() {
+				mMagicImageDisplay.savaImage(Constants.getOutputMediaFile(), new onPictureSaveListener() {
 					
 					@Override
 					public void onSaved(String result) {

File: MagicCamera/src/com/seu/magiccamera/widget/bubble/BubbleIndicator.java
Patch:
@@ -27,9 +27,9 @@ public class BubbleIndicator {
     Point screenSize = new Point();
 	private Floater mPopupView;
 	
-	public BubbleIndicator(Context context, AttributeSet attrs, int defStyleAttr, String maxValue) {
+	public BubbleIndicator(Context context) {
         mWindowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
-        mPopupView = new Floater(context, attrs, defStyleAttr, maxValue);
+        mPopupView = new Floater(context);
    
         DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics();
         screenSize.set(displayMetrics.widthPixels, displayMetrics.heightPixels);
@@ -129,7 +129,7 @@ private class Floater extends FrameLayout{
         public TextView mMarker;
         private int mOffset;
 
-        public Floater(Context context, AttributeSet attrs, int defStyleAttr, String maxValue) {
+        public Floater(Context context) {
             super(context);
             mMarker = new TextView(context);
             mMarker.setText("0%");

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicBrooklynFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicBrooklynFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicFreudFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicFreudFilter(Context context){
 		mContext = context;
 	}
 	
-	public void onDestroy() {
+	protected void onDestroy() {
         super.onDestroy();
         GLES20.glDeleteTextures(1, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
@@ -44,15 +44,15 @@ protected void onDrawArraysPre(){
 		}
 	}
 	
-	public void onInit(){
+	protected void onInit(){
 		super.onInit();
 		inputTextureUniformLocations[0] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture2");
 		
 		mTexelWidthUniformLocation = GLES20.glGetUniformLocation(getProgram(), "inputImageTextureWidth");
         mTexelHeightUniformLocation = GLES20.glGetUniformLocation(getProgram(), "inputImageTextureHeight");
 	}
 	
-	public void onInitialized(){
+	protected void onInitialized(){
 		super.onInitialized();
 	    runOnDraw(new Runnable(){
 		    public void run(){

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicInkwellFilter.java
Patch:
@@ -42,14 +42,14 @@ protected void onDrawArraysPre(){
 		}
 	}
 	
-	public void onInit(){
+	protected void onInit(){
 		super.onInit();
 		for(int i=0; i < inputTextureUniformLocations.length; i++){
 			inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture"+(2+i));
 		}
 	}
 	
-	public void onInitialized(){
+	protected void onInitialized(){
 		super.onInitialized();
 	    runOnDraw(new Runnable(){
 		    public void run(){

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicKevinFilter.java
Patch:
@@ -17,7 +17,7 @@ public MagicKevinFilter(Context context){
 		mContext = context;
 	}
 	
-	public void onDestroy() {
+	protected void onDestroy() {
         super.onDestroy();
         GLES20.glDeleteTextures(1, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
@@ -42,14 +42,14 @@ protected void onDrawArraysPre(){
 		}
 	}
 	
-	public void onInit(){
+	protected void onInit(){
 		super.onInit();		
 		for(int i=0; i < inputTextureUniformLocations.length; i++){
 			inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture"+(2+i));
 		}
 	}
 	
-	public void onInitialized(){
+	protected void onInitialized(){
 		super.onInitialized();
 	    runOnDraw(new Runnable(){
 		    public void run(){

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicN1977Filter.java
Patch:
@@ -35,14 +35,14 @@ protected void onDrawArraysPre(){
 		}
 	}
 	
-	public void onInit(){
+	protected void onInit(){
 		super.onInit();
 		for(int i=0; i < inputTextureUniformLocations.length; i++){
 			inputTextureUniformLocations[i] = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture"+(2+i));
 		}
 	}
 	
-	public void onInitialized(){
+	protected void onInitialized(){
 		super.onInitialized();
 	    runOnDraw(new Runnable(){
 		    public void run(){

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicRiseFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicRiseFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicSierraFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicSierraFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicSutroFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicSutroFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicToasterFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicToasterFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicWaldenFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicWaldenFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/advance/common/MagicXproIIFilter.java
Patch:
@@ -19,7 +19,7 @@ public MagicXproIIFilter(Context context){
 	
 	public void onDestroy() {
         super.onDestroy();
-        GLES20.glDeleteTextures(1, inputTextureHandles, 0);
+        GLES20.glDeleteTextures(inputTextureHandles.length, inputTextureHandles, 0);
         for(int i = 0; i < inputTextureHandles.length; i++)
         	inputTextureHandles[i] = -1;
     }

File: MagicFilter/src/com/seu/magicfilter/filter/base/MagicBilateralFilter.java
Patch:
@@ -58,14 +58,14 @@ public MagicBilateralFilter(Context context) {
 	}
 	
 	@Override
-	public void onInit() {
+	protected void onInit() {
 		super.onInit();
 		mDisFactorLocation = GLES20.glGetUniformLocation(getProgram(), "distanceNormalizationFactor");
 		mSingleStepOffsetLocation = GLES20.glGetUniformLocation(getProgram(), "singleStepOffset");
 	}
 	
 	@Override
-	public void onInitialized() {
+	protected void onInitialized() {
 		super.onInitialized();
 		setDistanceNormalizationFactor(mDistanceNormalizationFactor);
 	}

File: MagicFilter/src/com/seu/magicfilter/utils/OpenGLUtils.java
Patch:
@@ -18,7 +18,7 @@
 
 public class OpenGLUtils {
 	public static final int NO_TEXTURE = -1;
-	public static final int NOT_INIT = -2;	
+	public static final int NOT_INIT = -1;	
 	public static final int ON_DRAWN = 1;
 	
 	public static int loadTexture(final Bitmap img, final int usedTexId) {

