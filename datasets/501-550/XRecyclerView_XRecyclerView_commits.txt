File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -381,6 +381,8 @@ public void notifyItemChanged(int position,Object o) {
     }
 
     private int getHeaders_includingRefreshCount(){
+        if(mWrapAdapter == null)
+            return 0;
         return mWrapAdapter.getHeadersCount()+1;
     }
 

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -500,6 +500,8 @@ public RecyclerView.Adapter getOriginalAdapter(){
         }
 
         public boolean isHeader(int position) {
+            if(mHeaderViews == null)
+                return false;
             return position >= 1 && position < mHeaderViews.size() + 1;
         }
 

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -50,6 +50,9 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
+        mRecyclerView
+                .getDefaultRefreshHeaderView()
+                .setRefreshTimeVisible(true);
         View header = LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);
         mRecyclerView.addHeaderView(header);
 

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -6,7 +6,6 @@
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.Toolbar;
 import android.view.LayoutInflater;
-import android.view.Menu;
 import android.view.MenuItem;
 import android.view.View;
 import android.view.ViewGroup;
@@ -42,6 +41,9 @@ protected void onCreate(Bundle savedInstanceState) {
         View header = LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);
         mRecyclerView.addHeaderView(header);
 
+        mRecyclerView.getDefaultFootView().setLoadingHint("自定义加载中提示");
+        mRecyclerView.getDefaultFootView().setNoMoreHint("自定义加载完毕提示");
+
         mRecyclerView.setLoadingListener(new XRecyclerView.LoadingListener() {
             @Override
             public void onRefresh() {

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/progressindicator/AVLoadingIndicatorView.java
Patch:
@@ -154,7 +154,6 @@ public class AVLoadingIndicatorView extends View{
 
     private boolean mHasAnimation;
 
-
     public AVLoadingIndicatorView(Context context) {
         super(context);
         init(null, 0);

File: app/src/main/java/com/example/xrecyclerview/EmptyViewActivity.java
Patch:
@@ -4,6 +4,7 @@
 import android.os.Handler;
 import android.support.v7.app.AppCompatActivity;
 import android.support.v7.widget.LinearLayoutManager;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.Menu;
 import android.view.MenuItem;
@@ -38,6 +39,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mAdapter = new MyAdapter(listData);
 
         mRecyclerView.setAdapter(mAdapter);
+
     }
 
     @Override

File: app/src/main/java/com/example/xrecyclerview/ItemDecorationActivity.java
Patch:
@@ -100,7 +100,7 @@ public void run() {
         mAdapter = new MyAdapter(listData);
 
         mRecyclerView.setAdapter(mAdapter);
-        mRecyclerView.setRefreshing(true);
+        mRecyclerView.refresh();
     }
 
     @Override

File: app/src/main/java/com/example/xrecyclerview/MultiHeaderActivity.java
Patch:
@@ -102,7 +102,7 @@ public void run() {
         mAdapter = new MyAdapter(listData);
 
         mRecyclerView.setAdapter(mAdapter);
-        mRecyclerView.setRefreshing(true);
+        mRecyclerView.refresh();
     }
 
     @Override

File: app/src/main/java/com/example/xrecyclerview/EmptyViewActivity.java
Patch:
@@ -28,7 +28,7 @@ protected void onCreate(Bundle savedInstanceState) {
         LinearLayoutManager layoutManager = new LinearLayoutManager(this);
         layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
         mRecyclerView.setLayoutManager(layoutManager);
-
+        mRecyclerView.setPullRefreshEnabled(false);
         mEmptyView = findViewById(R.id.text_empty);
 
         mRecyclerView.setEmptyView(mEmptyView);

File: app/src/main/java/com/example/xrecyclerview/MultiHeaderActivity.java
Patch:
@@ -4,6 +4,7 @@
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.Toolbar;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
@@ -47,6 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.addHeaderView(header2);
         header2.setBackgroundColor(0xff1874CD);
 
+
         mRecyclerView.setLoadingListener(new XRecyclerView.LoadingListener() {
             @Override
             public void onRefresh() {

File: app/src/main/java/com/example/xrecyclerview/MyAdapter.java
Patch:
@@ -6,7 +6,10 @@
 import android.view.ViewGroup;
 import android.widget.TextView;
 
+import com.jcodecraeer.xrecyclerview.ItemTouchHelperAdapter;
+
 import java.util.ArrayList;
+import java.util.Collections;
 
 /**
  * Created by jianghejie on 15/11/26.

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/LoadingMoreFooter.java
Patch:
@@ -1,6 +1,7 @@
 package com.jcodecraeer.xrecyclerview;
 
 import android.content.Context;
+import android.support.v7.widget.RecyclerView;
 import android.util.AttributeSet;
 import android.view.Gravity;
 import android.view.View;
@@ -35,7 +36,7 @@ public LoadingMoreFooter(Context context, AttributeSet attrs) {
 	}
     public void initView(){
         setGravity(Gravity.CENTER);
-        setLayoutParams(new ViewGroup.LayoutParams(
+        setLayoutParams(new RecyclerView.LayoutParams(
                 ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));
         progressCon = new SimpleViewSwitcher(getContext());
         progressCon.setLayoutParams(new ViewGroup.LayoutParams(
@@ -85,6 +86,5 @@ public void  setState(int state) {
                 this.setVisibility(View.VISIBLE);
                 break;
         }
-
     }
 }

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/SimpleViewSwitcher.java
Patch:
@@ -40,9 +40,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
-
         final int count = getChildCount();
-
         for (int i = 0; i < count; i++) {
             final View child = getChildAt(i);
             if (child.getVisibility() != View.GONE) {

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -89,6 +89,7 @@ public void run() {
         mAdapter = new MyAdapter(listData);
 
         mRecyclerView.setAdapter(mAdapter);
+        mRecyclerView.setRefreshing(true);
     }
 
     @Override

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -89,6 +89,7 @@ public void run() {
         mAdapter = new MyAdapter(listData);
 
         mRecyclerView.setAdapter(mAdapter);
+        mRecyclerView.setRefreshing(true);
     }
 
     @Override

File: app/src/main/java/com/example/xrecyclerview/GridActivity.java
Patch:
@@ -21,6 +21,7 @@ public class GridActivity extends AppCompatActivity {
     private ArrayList<String> listData;
     private int refreshTime = 0;
     private int times = 0;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -31,7 +32,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -31,7 +31,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: app/src/main/java/com/example/xrecyclerview/StaggeredGridActivity.java
Patch:
@@ -33,7 +33,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/LoadingMoreFooter.java
Patch:
@@ -15,7 +15,7 @@ public class LoadingMoreFooter extends LinearLayout {
 
     private SimpleViewSwithcer progressCon;
     private Context mContext;
-    public final static int STATE_LAODING = 0;
+    public final static int STATE_LOADING = 0;
     public final static int STATE_COMPLETE = 1;
     public final static int STATE_NOMORE = 2;
     private TextView mText;
@@ -70,7 +70,7 @@ public void setProgressStyle(int style) {
 
     public void  setState(int state) {
         switch(state) {
-            case STATE_LAODING:
+            case STATE_LOADING:
                 progressCon.setVisibility(View.VISIBLE);
                 mText.setText(mContext.getText(R.string.listview_loading));
                 this.setVisibility(View.VISIBLE);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -10,6 +10,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Adapter;
 
 import java.util.ArrayList;
 
@@ -138,7 +139,7 @@ public void setRefreshProgressStyle(int style) {
         }
     }
 
-    public void setLaodingMoreProgressStyle(int style) {
+    public void setLoadingMoreProgressStyle(int style) {
         mLoadingMoreProgressStyle = style;
         if(mFootViews.size() > 0 && mFootViews.get(0) instanceof LoadingMoreFooter){
             ((LoadingMoreFooter) mFootViews.get(0)).setProgressStyle(style);
@@ -181,7 +182,7 @@ public void onScrollStateChanged(int state) {
                 View footView = mFootViews.get(0);
                 isLoadingData = true;
                 if(footView instanceof  LoadingMoreFooter) {
-                    ( (LoadingMoreFooter) footView ).setState(LoadingMoreFooter.STATE_LAODING);
+                    ( (LoadingMoreFooter) footView ).setState(LoadingMoreFooter.STATE_LOADING);
                 } else{
                     footView.setVisibility(View.VISIBLE);
                 }

File: app/src/main/java/com/example/xrecyclerview/GridActivity.java
Patch:
@@ -21,6 +21,7 @@ public class GridActivity extends AppCompatActivity {
     private ArrayList<String> listData;
     private int refreshTime = 0;
     private int times = 0;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -31,7 +32,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -31,7 +31,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: app/src/main/java/com/example/xrecyclerview/StaggeredGridActivity.java
Patch:
@@ -33,7 +33,7 @@ protected void onCreate(Bundle savedInstanceState) {
         mRecyclerView.setLayoutManager(layoutManager);
 
         mRecyclerView.setRefreshProgressStyle(ProgressStyle.BallSpinFadeLoader);
-        mRecyclerView.setLaodingMoreProgressStyle(ProgressStyle.BallRotate);
+        mRecyclerView.setLoadingMoreProgressStyle(ProgressStyle.BallRotate);
         mRecyclerView.setArrowImageView(R.drawable.iconfont_downgrey);
 
         View header =   LayoutInflater.from(this).inflate(R.layout.recyclerview_header, (ViewGroup)findViewById(android.R.id.content),false);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/LoadingMoreFooter.java
Patch:
@@ -15,7 +15,7 @@ public class LoadingMoreFooter extends LinearLayout {
 
     private SimpleViewSwithcer progressCon;
     private Context mContext;
-    public final static int STATE_LAODING = 0;
+    public final static int STATE_LOADING = 0;
     public final static int STATE_COMPLETE = 1;
     public final static int STATE_NOMORE = 2;
     private TextView mText;
@@ -70,7 +70,7 @@ public void setProgressStyle(int style) {
 
     public void  setState(int state) {
         switch(state) {
-            case STATE_LAODING:
+            case STATE_LOADING:
                 progressCon.setVisibility(View.VISIBLE);
                 mText.setText(mContext.getText(R.string.listview_loading));
                 this.setVisibility(View.VISIBLE);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -10,6 +10,7 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.Adapter;
 
 import java.util.ArrayList;
 
@@ -138,7 +139,7 @@ public void setRefreshProgressStyle(int style) {
         }
     }
 
-    public void setLaodingMoreProgressStyle(int style) {
+    public void setLoadingMoreProgressStyle(int style) {
         mLoadingMoreProgressStyle = style;
         if(mFootViews.size() > 0 && mFootViews.get(0) instanceof LoadingMoreFooter){
             ((LoadingMoreFooter) mFootViews.get(0)).setProgressStyle(style);
@@ -181,7 +182,7 @@ public void onScrollStateChanged(int state) {
                 View footView = mFootViews.get(0);
                 isLoadingData = true;
                 if(footView instanceof  LoadingMoreFooter) {
-                    ( (LoadingMoreFooter) footView ).setState(LoadingMoreFooter.STATE_LAODING);
+                    ( (LoadingMoreFooter) footView ).setState(LoadingMoreFooter.STATE_LOADING);
                 } else{
                     footView.setVisibility(View.VISIBLE);
                 }

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -204,7 +204,7 @@ public boolean onTouchEvent(MotionEvent ev) {
                 mLastY = ev.getRawY();
                 if ( isOnTop() && pullRefreshEnabled) {
                     mRefreshHeader.onMove(deltaY / DRAG_RATE);
-                    if(mRefreshHeader.getVisiableHeight() > 0 && mRefreshHeader.getState() < ArrowRefreshHeader.STATE_REFRESHING    ) {
+                    if(mRefreshHeader.getVisiableHeight() > 0 && mRefreshHeader.getState() < ArrowRefreshHeader.STATE_REFRESHING ) {
                         Log.i("getVisiableHeight", "getVisiableHeight = " + mRefreshHeader.getVisiableHeight());
                         Log.i("getVisiableHeight", " mRefreshHeader.getState() = " +  mRefreshHeader.getState());
                         return false;

File: app/src/main/java/com/example/xrecyclerview/LinearActivity.java
Patch:
@@ -24,7 +24,7 @@ public class LinearActivity extends AppCompatActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_main);
+        setContentView(R.layout.activity_recyclerview);
         mRecyclerView = (XRecyclerView)this.findViewById(R.id.recyclerview);
         LinearLayoutManager layoutManager = new LinearLayoutManager(this);
         layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
@@ -83,7 +83,7 @@ public void run() {
         });
 
         listData = new  ArrayList<String>();
-        for(int i = 0; i < 10 ;i++){
+        for(int i = 0; i < 15 ;i++){
             listData.add("item" + (i + listData.size()) );
         }
         mAdapter = new MyAdapter(listData);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/ArrowRefreshHeader.java
Patch:
@@ -182,9 +182,11 @@ public int getVisiableHeight() {
     public void onMove(float delta) {
         if(getVisiableHeight() > 0 || delta > 0) {
             setVisiableHeight((int) delta + getVisiableHeight());
-            if (mState < STATE_RELEASE_TO_REFRESH) { // 未处于刷新状态，更新箭头
+            if (mState <= STATE_RELEASE_TO_REFRESH) { // 未处于刷新状态，更新箭头
                 if (getVisiableHeight() > mMeasuredHeight) {
                     setState(STATE_RELEASE_TO_REFRESH);
+                }else {
+                    setState(STATE_NORMAL);
                 }
             }
         }

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/LoadingMoreFooter.java
Patch:
@@ -44,8 +44,9 @@ public void initView(Context context ){
         addView(progressCon);
         TextView text = new TextView(context);
         text.setText("正在加载...");
+
         LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
-        layoutParams.setMargins(10,0,0,0);//4个参数按顺序分别是左上右下
+        layoutParams.setMargins((int)getResources().getDimension(R.dimen.textandiconmargin),0,0,0);
 
         text.setLayoutParams(layoutParams);
         addView(text);

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/XRecyclerView.java
Patch:
@@ -97,14 +97,14 @@ public void addFootView(final View view) {
         mFootViews.add(view);
     }
 
-    public void loadMoreComplate() {
+    public void loadMoreComplete() {
         if (mFootViews.size() > 0) {
             mFootViews.get(0).setVisibility(GONE);
         }
         isLoadingData = false;
     }
 
-    public void refreshComplate() {
+    public void refreshComplete() {
         mRefreshHeader.refreshComplate();
     }
 

File: xrecyclerview/src/main/java/com/jcodecraeer/xrecyclerview/progressindicator/AVLoadingIndicatorView.java
Patch:
@@ -142,7 +142,7 @@ public class AVLoadingIndicatorView extends View{
     public @interface Indicator{}
 
     //Sizes (with defaults in DP)
-    public static final int DEFAULT_SIZE=45;
+    public static final int DEFAULT_SIZE=30;
 
     //attrs
     int mIndicatorId;

