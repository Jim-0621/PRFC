File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -541,7 +541,7 @@ private void startExpandAnimation() {
   }
 
   protected void applyTargetOptions(Context context) {
-    shouldTintTarget = target.tintTarget;
+    shouldTintTarget = !target.transparentTarget && target.tintTarget;
     shouldDrawShadow = target.drawShadow;
     cancelable = target.cancelable;
 

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -745,7 +745,7 @@ public void dismiss(boolean tappedTarget) {
     isDismissing = true;
     pulseAnimation.cancel();
     expandAnimation.cancel();
-    if (!visible) {
+    if (!visible || outerCircleCenter == null) {
       finishDismiss(tappedTarget);
       return;
     }

File: app/src/main/java/com/getkeepsafe/taptargetviewsample/MainActivity.java
Patch:
@@ -42,7 +42,7 @@ protected void onCreate(Bundle savedInstanceState) {
     droidTarget.offset(display.getWidth() / 2, display.getHeight() / 2);
 
     final SpannableString sassyDesc = new SpannableString("It allows you to go back, sometimes");
-    sassyDesc.setSpan(new StyleSpan(Typeface.ITALIC), sassyDesc.length() - "somtimes".length(), sassyDesc.length(), 0);
+    sassyDesc.setSpan(new StyleSpan(Typeface.ITALIC), sassyDesc.length() - "sometimes".length(), sassyDesc.length(), 0);
 
     // We have a sequence of targets, so lets build it!
     final TapTargetSequence sequence = new TapTargetSequence(this)

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -665,7 +665,7 @@ protected void onDraw(Canvas c) {
 
       if (descriptionLayout != null && titleLayout != null) {
         c.translate(0, titleLayout.getHeight() + TEXT_SPACING);
-        descriptionPaint.setAlpha((int) (0.54f * textAlpha));
+        descriptionPaint.setAlpha((int) (target.descriptionTextAlpha * textAlpha));
         descriptionLayout.draw(c);
       }
     }

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/ToolbarTapTarget.java
Patch:
@@ -102,7 +102,7 @@ private static View findNavView(Object instance) {
       }
     }
 
-    throw new IllegalStateException("Could not find navigation view for Toolbar!", e);
+    throw new IllegalStateException("Could not find navigation view for Toolbar!");
   }
 
   private static View findOverflowView(Object instance) {

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -362,12 +362,12 @@ public TapTargetView(Context context,
         drawingBounds = new Rect();
 
         titlePaint = new TextPaint();
-        titlePaint.setTextSize(UiUtil.sp(context, target.titleTextSize));
+        titlePaint.setTextSize(target.titleTextSizePx(context));
         titlePaint.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
         titlePaint.setAntiAlias(true);
 
         descriptionPaint = new TextPaint();
-        descriptionPaint.setTextSize(UiUtil.sp(context, target.descriptionTextSize));
+        descriptionPaint.setTextSize(target.descriptionTextSizePx(context));
         descriptionPaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.NORMAL));
         descriptionPaint.setAntiAlias(true);
         descriptionPaint.setAlpha((int) (0.54f * 255.0f));

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -340,12 +340,12 @@ public TapTargetView(Context context,
         drawingBounds = new Rect();
 
         titlePaint = new TextPaint();
-        titlePaint.setTextSize(UiUtil.sp(context, 20));
+        titlePaint.setTextSize(UiUtil.sp(context, target.titleTextSize));
         titlePaint.setTypeface(Typeface.create("sans-serif-medium", Typeface.NORMAL));
         titlePaint.setAntiAlias(true);
 
         descriptionPaint = new TextPaint();
-        descriptionPaint.setTextSize(UiUtil.sp(context, 18));
+        descriptionPaint.setTextSize(UiUtil.sp(context, target.descriptionTextSize));
         descriptionPaint.setTypeface(Typeface.create(Typeface.SANS_SERIF, Typeface.NORMAL));
         descriptionPaint.setAntiAlias(true);
         descriptionPaint.setAlpha((int) (0.54f * 255.0f));

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -527,7 +527,7 @@ void onDismiss(boolean userInitiated) {
 
     @Override
     protected void onDraw(Canvas c) {
-        if (isDismissed) return;
+        if (isDismissed || outerCircleCenter == null) return;
 
         if (dimColor != -1) {
             c.drawColor(dimColor);

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTarget.java
Patch:
@@ -46,7 +46,7 @@ public class TapTarget {
     @ColorRes int dimColor = -1;
     @ColorRes int textColor = -1;
 
-    boolean drawShadow = true;
+    boolean drawShadow = false;
     boolean cancelable = true;
     boolean tintTarget = true;
 

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/ViewTapTarget.java
Patch:
@@ -15,6 +15,7 @@
  */
 package com.getkeepsafe.taptargetview;
 
+import android.graphics.Bitmap;
 import android.graphics.Rect;
 import android.graphics.drawable.BitmapDrawable;
 import android.support.annotation.Nullable;
@@ -40,7 +41,8 @@ public void run() {
                         location[0] + view.getWidth(), location[1] + view.getHeight());
 
                 view.setDrawingCacheEnabled(true);
-                icon = new BitmapDrawable(view.getContext().getResources(), view.getDrawingCache());
+                final Bitmap cacheCopy = view.getDrawingCache().copy(Bitmap.Config.ARGB_8888, false);
+                icon = new BitmapDrawable(view.getContext().getResources(), cacheCopy);
                 icon.setBounds(0, 0, icon.getIntrinsicWidth(), icon.getIntrinsicHeight());
 
                 runnable.run();

File: taptargetview/src/main/java/com/getkeepsafe/taptargetview/TapTargetView.java
Patch:
@@ -32,6 +32,7 @@
 import android.graphics.Typeface;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.support.annotation.Nullable;
 import android.text.Layout;
 import android.text.StaticLayout;
@@ -361,7 +362,7 @@ protected void applyTargetOptions(Context context) {
         this.shouldDrawShadow = target.drawShadow;
         this.cancelable = target.cancelable;
 
-        if (target.drawShadow) {
+        if (target.drawShadow || Build.VERSION.SDK_INT < 18) {
             setLayerType(LAYER_TYPE_SOFTWARE, null);
         } else {
             setLayerType(LAYER_TYPE_HARDWARE, null);

