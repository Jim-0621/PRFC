File: lamp-oauth/lamp-oauth-controller/src/main/java/top/tangyh/lamp/oauth/controller/WebLogController.java
Patch:
@@ -43,7 +43,7 @@ public class WebLogController {
      * @param data 保存对象
      * @return 保存结果
      */
-    @PostMapping("/anyUser/optLog")
+    @PostMapping("/optLog")
     @Operation(summary = "保存系统日志", description = "保存系统日志不为空的字段")
     public R<Boolean> save(@RequestBody OptLogDTO data) {
         baseOperationLogService.save(BeanPlusUtil.toBean(data, BaseOperationLogSaveVO.class));

File: lamp-generator/lamp-generator-biz/src/main/java/top/tangyh/lamp/generator/utils/ProjectUtils.java
Patch:
@@ -158,6 +158,7 @@ public static void generator(ProjectGeneratorVO vo, DatabaseProperties databaseP
         String serviceName = vo.getServiceName();
         String serviceNameUpper = StrUtil.upperFirst(serviceName);
 
+        vo.setApplicationName(StrUtil.format("{}-{}-server", vo.getProjectPrefix(), serviceName));
         Map<String, Object> objectMap = buildObjectMap(vo, databaseProperties, serviceName, serviceNameUpper);
 
         ProjectTypeEnum type = vo.getType();
@@ -285,6 +286,7 @@ private static Map<String, Object> buildObjectMap(ProjectGeneratorVO vo, Databas
         objectMap.put("pg", vo);
         objectMap.put("moduleName", vo.getModuleName());
         objectMap.put("serviceName", serviceName);
+        objectMap.put("applicationName", vo.getApplicationName());
         objectMap.put("serviceNameUpper", serviceNameUpper);
         objectMap.put("projectPrefix", vo.getProjectPrefix());
         objectMap.put("datetime", LocalDateTime.now().format(DateTimeFormatter.ofPattern(DateUtils.DEFAULT_DATE_TIME_FORMAT)));
@@ -353,6 +355,7 @@ public static DownloadVO download(ProjectGeneratorVO vo, DatabaseProperties data
         String serviceName = vo.getServiceName();
         String serviceNameUpper = StrUtil.upperFirst(serviceName);
 
+        vo.setApplicationName(StrUtil.format("{}-{}-server", vo.getProjectPrefix(), serviceName));
         Map<String, Object> objectMap = buildObjectMap(vo, databaseProperties, serviceName, serviceNameUpper);
 
         ProjectTypeEnum type = vo.getType();

File: lamp-generator/lamp-generator-entity/src/main/java/top/tangyh/lamp/generator/vo/save/ProjectGeneratorVO.java
Patch:
@@ -98,4 +98,5 @@ public class ProjectGeneratorVO implements Serializable {
     private Integer serverPort;
     @NotNull(message = "接入Seata")
     private Boolean seata;
+    private String applicationName;
 }

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/granter/AbstractTokenGranter.java
Patch:
@@ -442,9 +442,9 @@ public LoginResultVO switchOrg(Long orgId) {
                 }
             }
 
-            employee.setLastCompanyId(companyId);
-            employee.setLastDeptId(deptId);
-            baseEmployeeService.updateAllById(employee);
+            baseEmployeeService.updateOrgInfo(employee.getId(), companyId, deptId);
+        } else {
+            baseEmployeeService.updateOrgInfo(employee.getId(), companyId, deptId);
         }
 
 

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/biz/StpInterfaceBiz.java
Patch:
@@ -31,7 +31,7 @@ public class StpInterfaceBiz {
     private final BaseRoleService baseRoleService;
 
     public List<String> getPermissionList() {
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         long employeeId = tokenSession.getLong(JWT_KEY_EMPLOYEE_ID);
         // 超管 返回 *
 
@@ -53,7 +53,7 @@ public List<String> getPermissionList() {
     }
 
     public List<String> getRoleList() {
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         long employeeId = tokenSession.getLong(JWT_KEY_EMPLOYEE_ID);
         boolean isAdmin = baseRoleService.checkRole(employeeId, RoleConstant.TENANT_ADMIN);
         if (isAdmin) {

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/granter/AbstractTokenGranter.java
Patch:
@@ -348,7 +348,7 @@ protected Org findOrg(Employee employee) {
     protected LoginResultVO buildResult(Employee employee, Org org, DefUser defUser) {
         //此登录接口登录web端
         StpUtil.login(defUser.getId(), "PC");
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         tokenSession.setLoginId(defUser.getId());
         if (org.getCurrentTopCompanyId() != null) {
             tokenSession.set(JWT_KEY_TOP_COMPANY_ID, org.getCurrentTopCompanyId());

File: lamp-public/lamp-sa-token-ext/src/main/java/top/tangyh/lamp/satoken/interceptor/HeaderThreadLocalInterceptor.java
Patch:
@@ -60,8 +60,8 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
             log.debug("access filter not execute");
             return true;
         }
-//        SaSession tokenSession = StpUtil.getTokenSession();
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
+//        SaSession tokenSession = StpUtil.getSession();
 
         if (tokenSession != null) {
             Long userId = (Long) tokenSession.getLoginId();

File: lamp-support/lamp-boot-server/src/main/java/top/tangyh/lamp/base/interceptor/AuthenticationSaInterceptor.java
Patch:
@@ -149,7 +149,7 @@ private void parseToken(HttpServletRequest request) {
             log.debug("access filter not execute");
             return;
         }
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         Long userId = (Long) tokenSession.getLoginId();
         long topCompanyId = tokenSession.getLong(JWT_KEY_TOP_COMPANY_ID);
         long companyId = tokenSession.getLong(JWT_KEY_COMPANY_ID);

File: lamp-support/lamp-boot-server/src/main/java/top/tangyh/lamp/base/satoken/StpInterfaceImpl.java
Patch:
@@ -34,7 +34,7 @@ public class StpInterfaceImpl implements StpInterface {
 
     @Override
     public List<String> getPermissionList(Object loginId, String loginType) {
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         long employeeId = tokenSession.getLong(JWT_KEY_EMPLOYEE_ID);
         // 超管 返回 *
         List<DefResource> list;
@@ -56,7 +56,7 @@ public List<String> getPermissionList(Object loginId, String loginType) {
 
     @Override
     public List<String> getRoleList(Object loginId, String loginType) {
-        SaSession tokenSession = StpUtil.getSession();
+        SaSession tokenSession = StpUtil.getTokenSession();
         long employeeId = tokenSession.getLong(JWT_KEY_EMPLOYEE_ID);
         boolean isAdmin = baseRoleService.checkRole(employeeId, RoleConstant.TENANT_ADMIN);
         if (isAdmin) {

File: lamp-generator/lamp-generator-biz/src/main/java/top/tangyh/lamp/generator/service/impl/DefGenTableServiceImpl.java
Patch:
@@ -726,6 +726,7 @@ public ProjectGeneratorVO getDef() {
         vo.setUtilGroupId(generatorConfig.getPackageInfoConfig().getUtilParent());
         vo.setServerPort(8080);
         vo.setVersion(version);
+        vo.setSeata(false);
         return vo;
     }
 

File: lamp-generator/lamp-generator-biz/src/test/java/top/tangyh/lamp/generator/utils/ProjectUtilsTest.java
Patch:
@@ -22,7 +22,7 @@ public static void main(String[] args) {
         vo.setParent("top.tangyh.lamp");
         vo.setGroupId("top.tangyh.lamp");
         vo.setUtilParent("top.tangyh.basic");
-        vo.setVersion("4.22.1-java17");
+        vo.setVersion("5.0.0");
         vo.setDescription("测试服务");
         vo.setServerPort(8080);
         ProjectUtils.generator(vo, new DatabaseProperties());

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/msg/service/impl/ExtendMsgServiceImpl.java
Patch:
@@ -13,7 +13,8 @@
 import top.tangyh.basic.jackson.JsonUtil;
 import top.tangyh.basic.utils.ArgumentAssert;
 import top.tangyh.basic.utils.SpringUtils;
-import top.tangyh.lamp.common.dto.XxlJobInfoVO;
+import top.tangyh.lamp.job.dto.XxlJobInfoVO;
+import top.tangyh.lamp.job.facade.JobFacade;
 import top.tangyh.lamp.model.entity.system.SysUser;
 import top.tangyh.lamp.msg.entity.DefMsgTemplate;
 import top.tangyh.lamp.msg.entity.ExtendMsg;

File: lamp-gateway/lamp-gateway-server/src/main/java/top/tangyh/lamp/gateway/filter/AuthenticationSaInterceptor.java
Patch:
@@ -27,8 +27,8 @@
 import reactor.core.publisher.Mono;
 import top.tangyh.basic.base.R;
 import top.tangyh.lamp.common.properties.IgnoreProperties;
-import top.tangyh.lamp.gateway.service.AuthService;
 import top.tangyh.lamp.model.vo.result.ResourceApiVO;
+import top.tangyh.lamp.system.facade.DefResourceFacade;
 
 import java.util.List;
 import java.util.Map;

File: lamp-generator/lamp-generator-biz/src/main/java/top/tangyh/lamp/generator/manager/impl/DefGenTableManagerImpl.java
Patch:
@@ -15,7 +15,6 @@
 import top.tangyh.lamp.generator.mapper.DefGenTableMapper;
 import top.tangyh.lamp.generator.mapper.GenDefDatasourceConfigMapper;
 import top.tangyh.lamp.system.entity.tenant.DefDatasourceConfig;
-import top.tangyh.lamp.system.manager.tenant.DefDatasourceConfigManager;
 
 import javax.sql.DataSource;
 import java.util.HashMap;

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/service/user/BaseOrgService.java
Patch:
@@ -39,13 +39,14 @@ public interface BaseOrgService extends SuperCacheService<Long, BaseOrg> {
      */
     boolean check(String name, Long parentId, Long id);
 
+
     /**
-     * 查询机构树
+     * 查询机构
      *
      * @param query 参数
      * @return 机构树
      */
-    List<BaseOrgResultVO> tree(BaseOrgPageQuery query);
+    List<BaseOrgResultVO> list(BaseOrgPageQuery query);
 
     /**
      * 给机构分配角色

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/msg/strategy/impl/sms/AliSmsMsgStrategyImpl.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.hutool.core.bean.BeanUtil;
 import cn.hutool.core.util.StrUtil;
-import com.alibaba.fastjson.JSONObject;
+import cn.hutool.json.JSONUtil;
 import com.aliyun.dysmsapi20170525.models.SendSmsRequest;
 import com.aliyun.dysmsapi20170525.models.SendSmsResponse;
 import com.aliyun.dysmsapi20170525.models.SendSmsResponseBody;
@@ -106,11 +106,11 @@ public MsgResult exec(MsgParam msgParam) throws Exception {
         //可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者
         request.setOutId(String.valueOf(extendMsg.getId()));
 
-        log.info("阿里短信发送参数={}", JSONObject.toJSONString(request));
+        log.info("阿里短信发送参数={}", JSONUtil.toJsonStr(request));
         //hint 此处可能会抛出异常，注意catch
         SendSmsResponse sendSmsResponse = client.sendSms(request);
 
-        log.info("阿里短信发送结果={}", JSONObject.toJSONString(sendSmsResponse));
+        log.info("阿里短信发送结果={}", JSONUtil.toJsonStr(sendSmsResponse));
         return MsgResult.builder().result(sendSmsResponse).build();
     }
 

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/msg/strategy/impl/sms/BaiduSmsMsgStrategyImpl.java
Patch:
@@ -1,7 +1,7 @@
 package top.tangyh.lamp.msg.strategy.impl.sms;
 
 import cn.hutool.core.bean.BeanUtil;
-import com.alibaba.fastjson.JSONObject;
+import cn.hutool.json.JSONUtil;
 import com.baidubce.auth.DefaultBceCredentials;
 import com.baidubce.services.sms.SmsClient;
 import com.baidubce.services.sms.SmsClientConfiguration;
@@ -74,7 +74,7 @@ public MsgResult exec(MsgParam msgParam) {
         // 发送请求
         SendMessageV3Response response = smsClient.sendMessage(request);
 
-        log.info("百度发送短信返回值={}", JSONObject.toJSONString(response));
+        log.info("百度发送短信返回值={}", JSONUtil.toJsonStr(response));
 
         return MsgResult.builder().result(response).build();
     }

File: lamp-gateway/lamp-gateway-server/src/main/java/top/tangyh/lamp/gateway/filter/AuthenticationSaInterceptor.java
Patch:
@@ -43,7 +43,7 @@
 @Slf4j
 @RequiredArgsConstructor
 public class AuthenticationSaInterceptor implements WebFilter, Ordered {
-    private final AuthService authService;
+    private final DefResourceFacade defResourceFacade;
     private final IgnoreProperties ignoreProperties;
 
     @Override
@@ -110,7 +110,7 @@ public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
 
             // 接口权限
             Map<String, Set<String>> anyone = ignoreProperties.buildAnyone();
-            Map<String, Set<String>> allApi = this.authService.findAllApi();
+            Map<String, Set<String>> allApi = this.defResourceFacade.listAllApi();
 
             allApi.forEach((api, auth) -> {
                 List<String> list = StrUtil.split(api, "###");

File: lamp-generator/lamp-generator-biz/src/main/java/top/tangyh/lamp/generator/manager/impl/DefGenTableManagerImpl.java
Patch:
@@ -13,6 +13,7 @@
 import top.tangyh.lamp.generator.entity.DefGenTable;
 import top.tangyh.lamp.generator.manager.DefGenTableManager;
 import top.tangyh.lamp.generator.mapper.DefGenTableMapper;
+import top.tangyh.lamp.generator.mapper.GenDefDatasourceConfigMapper;
 import top.tangyh.lamp.system.entity.tenant.DefDatasourceConfig;
 import top.tangyh.lamp.system.manager.tenant.DefDatasourceConfigManager;
 
@@ -35,7 +36,7 @@
 @RequiredArgsConstructor
 public class DefGenTableManagerImpl extends SuperManagerImpl<DefGenTableMapper, DefGenTable> implements DefGenTableManager {
 
-    private final DefDatasourceConfigManager defDatasourceConfigManager;
+    private final GenDefDatasourceConfigMapper defDatasourceConfigManager;
     @Value("${spring.datasource.druid.validation-query}")
     private String validationQuery;
     private final DataSource dataSource;
@@ -49,7 +50,7 @@ public DbType getDbType() {
     @Override
     public DataSource getDs(Long dsId) {
         ArgumentAssert.notNull(dsId, "请先选择数据源:{}", dsId);
-        DefDatasourceConfig defDatasourceConfig = defDatasourceConfigManager.getById(dsId);
+        DefDatasourceConfig defDatasourceConfig = defDatasourceConfigManager.selectById(dsId);
         ArgumentAssert.notNull(defDatasourceConfig, "请先配置数据源:{}", dsId);
 
         String key = defDatasourceConfig.getUrl() + defDatasourceConfig.getDriverClassName() + defDatasourceConfig.getUsername() + defDatasourceConfig.getPassword();

File: lamp-generator/lamp-generator-server/src/main/java/top/tangyh/lamp/generator/config/GeneratorWebConfiguration.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.context.annotation.Configuration;
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
-import top.tangyh.lamp.common.api.LogApi;
+import top.tangyh.lamp.oauth.facade.LogFacade;
 
 /**
  * 在线代码生成器模块-Web配置
@@ -21,7 +21,7 @@ public class GeneratorWebConfiguration extends BaseConfig {
      */
     @Bean
     @ConditionalOnExpression("${lamp.log.enabled:true} && 'DB'.equals('${lamp.log.type:LOGGER}')")
-    public SysLogListener sysLogListener(LogApi logApi) {
+    public SysLogListener sysLogListener(LogFacade logApi) {
         return new SysLogListener(logApi::save);
     }
 }

File: lamp-system/lamp-system-biz/src/main/java/top/tangyh/lamp/system/manager/application/impl/DefApplicationManagerImpl.java
Patch:
@@ -7,6 +7,7 @@
 import top.tangyh.basic.model.cache.CacheKeyBuilder;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.lamp.common.cache.tenant.application.ApplicationCacheKeyBuilder;
+import top.tangyh.lamp.model.constant.EchoApi;
 import top.tangyh.lamp.system.entity.application.DefApplication;
 import top.tangyh.lamp.system.manager.application.DefApplicationManager;
 import top.tangyh.lamp.system.mapper.application.DefApplicationMapper;
@@ -28,7 +29,7 @@
  * @create [2021/9/29 1:26 下午 ] [tangyh] [初始创建]
  */
 @RequiredArgsConstructor
-@Service
+@Service(EchoApi.DEF_APPLICATION_SERVICE_IMPL_CLASS)
 public class DefApplicationManagerImpl extends SuperCacheManagerImpl<DefApplicationMapper, DefApplication> implements DefApplicationManager {
 
     @Override

File: lamp-system/lamp-system-server/src/main/java/top/tangyh/lamp/system/config/SystemWebConfiguration.java
Patch:
@@ -5,7 +5,7 @@
 import org.springframework.context.annotation.Configuration;
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
-import top.tangyh.lamp.common.api.LogApi;
+import top.tangyh.lamp.oauth.facade.LogFacade;
 
 /**
  * @author zuihou
@@ -19,7 +19,7 @@ public class SystemWebConfiguration extends BaseConfig {
      */
     @Bean
     @ConditionalOnExpression("${lamp.log.enabled:true} && 'DB'.equals('${lamp.log.type:LOGGER}')")
-    public SysLogListener sysLogListener(LogApi logApi) {
+    public SysLogListener sysLogListener(LogFacade logApi) {
         return new SysLogListener(logApi::save);
     }
 }

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/cache/CacheKeyTable.java
Patch:
@@ -136,6 +136,8 @@ interface System {
          * 资源接口
          */
         String RESOURCE_API = "dra";
+        /** 应用的资源 */
+        String APPLICATION_RESOURCE = "app_res";
         String ALL_RESOURCE_API = "all_dra";
     }
 

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/granter/AbstractTokenGranter.java
Patch:
@@ -61,7 +61,6 @@
 import static top.tangyh.basic.context.ContextConstants.JWT_KEY_DEPT_ID;
 import static top.tangyh.basic.context.ContextConstants.JWT_KEY_EMPLOYEE_ID;
 import static top.tangyh.basic.context.ContextConstants.JWT_KEY_TOP_COMPANY_ID;
-import static top.tangyh.basic.context.ContextConstants.JWT_KEY_USER;
 
 /**
  * 验证码TokenGranter
@@ -369,7 +368,6 @@ protected LoginResultVO buildResult(Employee employee, Org org, DefUser defUser)
         if (employee.getEmployeeId() != null) {
             tokenSession.set(JWT_KEY_EMPLOYEE_ID, employee.getEmployeeId());
         }
-        tokenSession.set(JWT_KEY_USER, defUser);
 
         LoginResultVO resultVO = new LoginResultVO();
         resultVO.setToken(StpUtil.getTokenValue());

File: lamp-generator/lamp-generator-entity/src/main/java/top/tangyh/lamp/generator/vo/save/ProjectGeneratorVO.java
Patch:
@@ -96,4 +96,6 @@ public class ProjectGeneratorVO implements Serializable {
     private String description;
     @NotNull(message = "请填写端口号")
     private Integer serverPort;
+    @NotNull(message = "接入Seata")
+    private Boolean seata;
 }

File: lamp-oauth/lamp-oauth-controller/src/main/java/top/tangyh/lamp/oauth/controller/WebLogController.java
Patch:
@@ -29,7 +29,7 @@
 @Slf4j
 @Validated
 @RestController
-@RequestMapping("/optLog")
+@RequestMapping
 @Tag(name = "系统访问日志")
 @AllArgsConstructor
 @Hidden
@@ -43,7 +43,7 @@ public class WebLogController {
      * @param data 保存对象
      * @return 保存结果
      */
-    @PostMapping
+    @PostMapping("/anyUser/optLog")
     @Operation(summary = "保存系统日志", description = "保存系统日志不为空的字段")
     public R<Boolean> save(@RequestBody OptLogDTO data) {
         baseOperationLogService.save(BeanPlusUtil.toBean(data, BaseOperationLogSaveVO.class));

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/LogApi.java
Patch:
@@ -23,7 +23,7 @@ public interface LogApi {
      * @param log 操作日志
      * @return 操作日志
      */
-    @RequestMapping(value = "/optLog", method = RequestMethod.POST)
+    @RequestMapping(value = "/anyUser/optLog", method = RequestMethod.POST)
     R<Boolean> save(@RequestBody OptLogDTO log);
 
 }

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/entity/base/SysEmployee.java
Patch:
@@ -116,7 +116,4 @@ public class SysEmployee extends Entity<Long> implements Serializable, EchoVO {
     @TableField(value = "created_org_id")
     private Long createdOrgId;
 
-    @Schema(description = "用户信息")
-    @TableField(exist = false)
-    private SysUser defUser;
 }

File: lamp-system/lamp-system-entity/src/main/java/top/tangyh/lamp/system/vo/update/tenant/DefUserAvatarUpdateVO.java
Patch:
@@ -1,7 +1,6 @@
 package top.tangyh.lamp.system.vo.update.tenant;
 
 import io.swagger.v3.oas.annotations.media.Schema;
-import jakarta.validation.Valid;
 import jakarta.validation.constraints.NotNull;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
@@ -41,7 +40,6 @@ public class DefUserAvatarUpdateVO implements Serializable {
      * 上传的头像
      */
     @Schema(description = "上传的头像")
-    @Valid
     private Long appendixAvatar;
 
 }

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/file/strategy/FileContext.java
Patch:
@@ -92,7 +92,7 @@ private FileStrategy getFileStrategy(FileStorageType storageType) {
      */
     public boolean delete(List<File> list) {
         if (!fileServerProperties.getDelFile()) {
-            return false;
+            return true;
         }
 
         list.forEach(item -> {

File: lamp-system/lamp-system-biz/src/main/java/top/tangyh/lamp/msg/service/impl/DefInterfacePropertyServiceImpl.java
Patch:
@@ -60,12 +60,12 @@ public Boolean batchSave(DefInterfacePropertyBatchSaveVO saveVO) {
         List<Long> pendingList = pendingRecords.stream().map(DefInterfacePropertyUpdateVO::getId).toList();
         superManager.removeByIds(pendingList);
 
-        List<DefInterfaceProperty> saveList = BeanUtil.copyToList(insertRecords, DefInterfaceProperty.class);
-        superManager.saveBatch(saveList);
-
         List<DefInterfaceProperty> updateList = BeanUtil.copyToList(updateRecords, DefInterfaceProperty.class);
         superManager.updateBatchById(updateList);
 
+        List<DefInterfaceProperty> saveList = BeanUtil.copyToList(insertRecords, DefInterfaceProperty.class);
+        superManager.saveBatch(saveList);
+
         return true;
     }
 }

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/biz/user/BaseEmployeeBiz.java
Patch:
@@ -60,8 +60,8 @@ public BaseEmployee save(BaseEmployeeSaveVO saveVO) {
         }
         String username = StrUtil.isBlank(saveVO.getUsername()) ? IdUtil.simpleUUID() : saveVO.getUsername();
         // 保存 用户表 和 员工表
-        DefUserSaveVO userSaveVO = DefUserSaveVO.builder().username(username).nickName(saveVO.getRealName()).build();
-        BeanUtil.copyProperties(saveVO, userSaveVO);
+        DefUserSaveVO userSaveVO = BeanUtil.toBean(saveVO, DefUserSaveVO.class);
+        userSaveVO.setUsername(username).setNickName(saveVO.getRealName());
         DefUser defUser = defUserService.save(userSaveVO);
 
         // 保存员工表

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/service/user/impl/BaseEmployeeServiceImpl.java
Patch:
@@ -67,8 +67,8 @@ public IPage<BaseEmployeeResultVO> findPageResultVO(PageParams<BaseEmployeePageQ
         BaseEmployeePageQuery model = params.getModel();
         LbQueryWrap<BaseEmployee> wrap = Wraps.lbQ();
         wrap.like(BaseEmployee::getRealName, model.getRealName())
-                .in(BaseEmployee::getPositionStatus, model.getPositionStatus())
-                .in(BaseEmployee::getPositionId, model.getPositionId())
+                .eq(BaseEmployee::getPositionStatus, model.getPositionStatus())
+                .eq(BaseEmployee::getPositionId, model.getPositionId())
                 .eq(BaseEmployee::getActiveStatus, model.getActiveStatus())
                 .eq(BaseEmployee::getState, model.getState())
                 .in(BaseEmployee::getUserId, model.getUserIdList());

File: lamp-base/lamp-base-entity/src/main/java/top/tangyh/lamp/base/vo/query/user/BaseEmployeePageQuery.java
Patch:
@@ -48,7 +48,7 @@ public class BaseEmployeePageQuery implements Serializable {
      * 岗位Id
      */
     @Schema(description = "岗位Id")
-    private List<Long> positionId;
+    private Long positionId;
     /**
      * 机构ID
      */
@@ -63,7 +63,7 @@ public class BaseEmployeePageQuery implements Serializable {
      * 职位状态;[10-在职 20-离职]@Echo(api = EchoApi.DICTIONARY_ITEM_FEIGN_CLASS, dictType = EchoDictType.Base.POSITION_STATUS)
      */
     @Schema(description = "职位状态")
-    private List<String> positionStatus;
+    private String positionStatus;
     /**
      * 状态;[0-禁用 1-启用]
      */

File: lamp-system/lamp-system-biz/src/main/java/top/tangyh/lamp/system/manager/tenant/impl/DefUserManagerImpl.java
Patch:
@@ -159,7 +159,8 @@ public boolean removeBatchByIds(Collection<?> list, boolean useFill) {
     }
 
 
-    private void delUserCache(Collection<?> list) {
+    @Override
+    public void delUserCache(Collection<?> list) {
         if (CollUtil.isEmpty(list)) {
             return;
         }

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/manager/user/impl/BaseEmployeeManagerImpl.java
Patch:
@@ -12,6 +12,7 @@
 import top.tangyh.lamp.base.entity.user.BaseEmployee;
 import top.tangyh.lamp.base.manager.user.BaseEmployeeManager;
 import top.tangyh.lamp.base.mapper.user.BaseEmployeeMapper;
+import top.tangyh.lamp.base.vo.query.user.BaseEmployeePageQuery;
 import top.tangyh.lamp.base.vo.result.user.BaseEmployeeResultVO;
 import top.tangyh.lamp.common.cache.base.user.EmployeeCacheKeyBuilder;
 
@@ -43,8 +44,8 @@ public List<BaseEmployeeResultVO> listEmployeeByUserId(Long userId) {
     }
 
     @Override
-    public IPage<BaseEmployeeResultVO> selectPageResultVO(IPage<BaseEmployee> page, Wrapper<BaseEmployee> wrapper) {
-        return baseMapper.selectPageResultVO(page, wrapper);
+    public IPage<BaseEmployeeResultVO> selectPageResultVO(IPage<BaseEmployee> page, Wrapper<BaseEmployee> wrapper, BaseEmployeePageQuery model) {
+        return baseMapper.selectPageResultVO(page, wrapper, model);
     }
 
     @Override

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/manager/system/impl/BaseRoleResourceRelManagerImpl.java
Patch:
@@ -45,6 +45,7 @@ public void deleteByRole(Collection<Long> roleIdList) {
         List<CacheKey> keys = new ArrayList<>();
         for (BaseRoleResourceRel rr : roleResourceRelList) {
             keys.add(RoleResourceCacheKeyBuilder.build(rr.getApplicationId(), rr.getRoleId()));
+            keys.add(RoleResourceCacheKeyBuilder.build(null, rr.getRoleId()));
         }
         cacheOps.del(keys);
     }

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/ali/AliFileChunkStrategyImpl.java
Patch:
@@ -1,6 +1,7 @@
 package top.tangyh.lamp.file.strategy.impl.ali;
 
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.core.util.URLUtil;
 import com.aliyun.oss.OSS;
 import com.aliyun.oss.OSSClientBuilder;
 import com.aliyun.oss.model.CompleteMultipartUploadRequest;
@@ -70,7 +71,7 @@ protected void copyFile(File file) {
         log.info("total part count:{}", partCount);
 
         ObjectMetadata metadata = new ObjectMetadata();
-        metadata.setContentDisposition("attachment;fileName=" + file.getOriginalFileName());
+        metadata.setContentDisposition("attachment;fileName=" + URLUtil.encode(file.getOriginalFileName()));
         metadata.setContentType(file.getContentType());
         // 初始化拷贝任务。可以通过InitiateMultipartUploadRequest指定目标文件元信息。
         InitiateMultipartUploadRequest initiateMultipartUploadRequest = new InitiateMultipartUploadRequest(destinationBucketName, destinationObjectName, metadata);
@@ -123,7 +124,7 @@ protected R<File> merge(List<java.io.File> files, String path, String fileName,
         String relativeFileName = relativePath + StrPool.SLASH + fileName;
 
         ObjectMetadata metadata = new ObjectMetadata();
-        metadata.setContentDisposition("attachment;fileName=" + info.getSubmittedFileName());
+        metadata.setContentDisposition("attachment;fileName=" + URLUtil.encode(info.getSubmittedFileName()));
         metadata.setContentType(info.getContextType());
         //步骤1：初始化一个分片上传事件。
         InitiateMultipartUploadRequest request = new InitiateMultipartUploadRequest(bucketName, relativeFileName, metadata);

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/ali/AliFileStrategyImpl.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.core.util.URLUtil;
 import com.aliyun.oss.OSS;
 import com.aliyun.oss.OSSClientBuilder;
 import com.aliyun.oss.model.ObjectMetadata;
@@ -59,7 +60,7 @@ protected void uploadFile(File file, MultipartFile multipartFile, String bucket)
         String path = getPath(file.getBizType(), uniqueFileName);
 
         ObjectMetadata metadata = new ObjectMetadata();
-        metadata.setContentDisposition("attachment;fileName=" + file.getOriginalFileName());
+        metadata.setContentDisposition("attachment;fileName=" + URLUtil.encode(file.getOriginalFileName()));
         metadata.setContentType(file.getContentType());
         PutObjectRequest request = new PutObjectRequest(bucket, path, multipartFile.getInputStream(), metadata);
         PutObjectResult result = ossClient.putObject(request);

File: lamp-base/lamp-base-biz/src/main/java/top/tangyh/lamp/base/service/system/impl/BaseRoleServiceImpl.java
Patch:
@@ -163,6 +163,7 @@ public Boolean saveRoleResource(BaseRoleResourceRelSaveVO saveVO) {
             }
             keys.add(RoleResourceCacheKeyBuilder.build(applicationId, saveVO.getRoleId()));
         });
+        keys.add(RoleResourceCacheKeyBuilder.build(null, saveVO.getRoleId()));
         boolean flag = baseRoleResourceRelManager.saveBatch(list);
 
         cacheOps.del(keys);

File: lamp-system/lamp-system-biz/src/main/java/top/tangyh/lamp/system/service/application/impl/DefResourceServiceImpl.java
Patch:
@@ -38,6 +38,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.stream.Collectors;
 
 /**
  * <p>
@@ -216,7 +217,7 @@ public void moveResource(Long id, Long parentId) {
         superManager.updateById(current);
 
         // 只修改了 父ID、path等字段，清理资源缓存，无需清理 资源API的缓存
-        List<Long> allIdList = childrenList.stream().map(DefResource::getId).toList();
+        List<Long> allIdList = childrenList.stream().map(DefResource::getId).collect(Collectors.toList());
         allIdList.add(current.getId());
         superManager.delCache(allIdList);
     }

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/biz/ResourceBiz.java
Patch:
@@ -207,13 +207,13 @@ public Boolean checkUri(String path, String method) {
         if (isAdmin) {
             // 方案2 查db
             long queryResStart = System.currentTimeMillis();
-            apiList = defResourceService.findResourceApi(applicationId != null ? Collections.singletonList(applicationId) : Collections.emptyList(), Collections.emptyList());
+            apiList = defResourceService.findResourceApi(Collections.emptyList(), Collections.emptyList());
             long queryResEnd = System.currentTimeMillis();
             log.info("biz query 校验api权限:{} - {}  耗时:{}", path, method, (queryResEnd - queryResStart));
         } else {
             // 普通用户 需要校验 uri + method 的权限
             long queryResStart = System.currentTimeMillis();
-            List<Long> resourceIdList = baseRoleService.findResourceIdByEmployeeId(applicationId, employeeId);
+            List<Long> resourceIdList = baseRoleService.findResourceIdByEmployeeId(null, employeeId);
             if (resourceIdList.isEmpty()) {
                 return false;
             }

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/event/model/LoginStatusDTO.java
Patch:
@@ -113,7 +113,7 @@ private LoginStatusDTO setInfo() {
             return this;
         }
         String tempUa = StrUtil.sub(request.getHeader("user-agent"), 0, 500);
-        String tempIp = JakartaServletUtil.getClientIPByHeader(request);
+        String tempIp = JakartaServletUtil.getClientIP(request);
         String tempLocation = AddressUtil.getRegion(tempIp);
         this.ua = tempUa;
         this.ip = tempIp;

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/event/model/LoginStatusDTO.java
Patch:
@@ -113,7 +113,7 @@ private LoginStatusDTO setInfo() {
             return this;
         }
         String tempUa = StrUtil.sub(request.getHeader("user-agent"), 0, 500);
-        String tempIp = JakartaServletUtil.getClientIP(request);
+        String tempIp = JakartaServletUtil.getClientIPByHeader(request);
         String tempLocation = AddressUtil.getRegion(tempIp);
         this.ua = tempUa;
         this.ip = tempIp;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/system/TenantConnectTypeEnum.java
Patch:
@@ -53,7 +53,7 @@ public boolean eq(TenantConnectTypeEnum val) {
     }
 
     @Override
-    @Schema(description = "编码", allowableValues = "LOCAL,REMOTE", example = "LOCAL")
+    @Schema(description = "编码", allowableValues = "SYSTEM,CUSTOM", example = "SYSTEM")
     public String getCode() {
         return this.name();
     }

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/dto/TenantPageQuery.java
Patch:
@@ -54,7 +54,7 @@ public class TenantPageQuery implements Serializable {
     private TenantTypeEnum type;
     /**
      * 连接类型
-     * #TenantConnectTypeEnum{LOCAL:本地;REMOTE:远程}
+     * #TenantConnectTypeEnum{SYSTEM:系统;CUSTOM:自定义}
      */
     @Schema(description = "连接类型")
     private TenantConnectTypeEnum connectType;

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/dto/TenantUpdateDTO.java
Patch:
@@ -67,7 +67,7 @@ public class TenantUpdateDTO implements Serializable {
     private TenantTypeEnum type;
     /**
      * 连接类型
-     * #TenantConnectTypeEnum{LOCAL:本地;REMOTE:远程}
+     * #TenantConnectTypeEnum{SYSTEM:系统;CUSTOM:自定义}
      */
     @Schema(description = "连接类型")
     private TenantConnectTypeEnum connectType;

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/entity/Tenant.java
Patch:
@@ -75,11 +75,11 @@ public class Tenant extends Entity<Long> {
 
     /**
      * 连接类型
-     * #TenantConnectTypeEnum{LOCAL:本地;REMOTE:远程}
+     * #TenantConnectTypeEnum{SYSTEM:系统;CUSTOM:自定义}
      */
     @Schema(description = "连接类型")
     @TableField("connect_type")
-    @Excel(name = "连接类型", width = 20, replace = {"本地_LOCAL", "远程_REMOTE", "_null"})
+    @Excel(name = "连接类型", width = 20, replace = {"系统_SYSTEM", "自定义_CUSTOM", "_null"})
     private TenantConnectTypeEnum connectType;
 
     /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/dao/common/LoginLogMapper.java
Patch:
@@ -77,8 +77,8 @@ public interface LoginLogMapper extends SuperMapper<LoginLog> {
      * 清理日志
      *
      * @param clearBeforeTime 多久之前的
-     * @param clearBeforeNum  多少条
+     * @param idList          待删除id
      * @return 是否成功
      */
-    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("clearBeforeNum") Integer clearBeforeNum);
+    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("idList") List<Long> idList);
 }

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/dao/common/OptLogExtMapper.java
Patch:
@@ -6,6 +6,7 @@
 import top.tangyh.lamp.authority.entity.common.OptLogExt;
 
 import java.time.LocalDateTime;
+import java.util.List;
 
 /**
  * <p>
@@ -22,8 +23,8 @@ public interface OptLogExtMapper extends SuperMapper<OptLogExt> {
      * 清理日志
      *
      * @param clearBeforeTime 多久之前的
-     * @param clearBeforeNum  多少条
+     * @param idList  待删除
      * @return 是否成功
      */
-    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("clearBeforeNum") Integer clearBeforeNum);
+    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("idList") List<Long> idList);
 }

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/dao/common/OptLogMapper.java
Patch:
@@ -6,6 +6,7 @@
 import top.tangyh.lamp.authority.entity.common.OptLog;
 
 import java.time.LocalDateTime;
+import java.util.List;
 
 /**
  * <p>
@@ -22,8 +23,8 @@ public interface OptLogMapper extends SuperMapper<OptLog> {
      * 清理日志
      *
      * @param clearBeforeTime 多久之前的
-     * @param clearBeforeNum  多少条
+     * @param idList  待删除
      * @return 是否成功
      */
-    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("clearBeforeNum") Integer clearBeforeNum);
+    Long clearLog(@Param("clearBeforeTime") LocalDateTime clearBeforeTime, @Param("idList") List<Long> idList);
 }

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/auth/UserController.java
Patch:
@@ -325,7 +325,7 @@ public IPage<User> query(PageParams<UserPageQuery> params) {
                 .eq(User::getState, userPage.getState());
 
         if (StrUtil.equalsAny(userPage.getScope(), BizConstant.SCOPE_BIND, BizConstant.SCOPE_UN_BIND) && userPage.getRoleId() != null) {
-            String sql = " select ur.employee_id from c_user_role ura where ura.user_id = s.id \n" +
+            String sql = " select ura.employee_id from c_user_role ura where ura.user_id = s.id \n" +
                     "  and ura.role_id =   " + userPage.getRoleId();
             if (BizConstant.SCOPE_BIND.equals(userPage.getScope())) {
                 wrapper.inSql(User::getId, sql);
@@ -375,7 +375,7 @@ public R<IPage<User>> pageAll(@RequestBody @Validated PageParams<UserPageQuery>
                 .eq(User::getState, userPage.getState());
 
         if (StrUtil.equalsAny(userPage.getScope(), BizConstant.SCOPE_BIND, BizConstant.SCOPE_UN_BIND) && userPage.getRoleId() != null) {
-            String sql = " select ur.user_id from c_user_role ura where ura.user_id = s.id \n" +
+            String sql = " select ura.user_id from c_user_role ura where ura.user_id = s.id \n" +
                     "  and ura.role_id =   " + userPage.getRoleId();
             if (BizConstant.SCOPE_BIND.equals(userPage.getScope())) {
                 wrapper.inSql(User::getId, sql);

File: lamp-authority/lamp-authority-api/src/main/java/top/tangyh/lamp/authority/api/RoleApi.java
Patch:
@@ -14,7 +14,7 @@
  * @author zuihou
  * @date 2019/08/02
  */
-@FeignClient(name = "${lamp.feign.oauth-server:lamp-oauth-server}", path = "/role", fallback = RoleApiFallback.class)
+@FeignClient(name = "${lamp.feign.authority-server:lamp-authority-server}", path = "/role", fallback = RoleApiFallback.class)
 public interface RoleApi {
     /**
      * 根据角色编码，查找用户id

File: lamp-authority/lamp-authority-api/src/main/java/top/tangyh/lamp/authority/api/RoleApi.java
Patch:
@@ -1,7 +1,7 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.authority.api;
 
 import top.tangyh.basic.base.R;
-import top.tangyh.lamp.oauth.api.hystrix.RoleApiFallback;
+import top.tangyh.lamp.authority.api.hystrix.RoleApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;

File: lamp-authority/lamp-authority-api/src/main/java/top/tangyh/lamp/authority/api/hystrix/RoleApiFallback.java
Patch:
@@ -1,6 +1,6 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.authority.api.hystrix;
 
-import top.tangyh.lamp.oauth.api.RoleApi;
+import top.tangyh.lamp.authority.api.RoleApi;
 import top.tangyh.basic.base.R;
 import org.springframework.stereotype.Component;
 

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/dao/auth/ResourceMapper.java
Patch:
@@ -1,7 +1,7 @@
 package top.tangyh.lamp.authority.dao.auth;
 
 import top.tangyh.basic.base.mapper.SuperMapper;
-import top.tangyh.lamp.authority.dto.auth.ResourceQueryDTO;
+import top.tangyh.lamp.model.vo.query.ResourceQueryDTO;
 import top.tangyh.lamp.authority.entity.auth.Resource;
 import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/dao/core/StationMapper.java
Patch:
@@ -7,6 +7,8 @@
 import org.springframework.stereotype.Repository;
 import top.tangyh.basic.base.mapper.SuperMapper;
 import top.tangyh.lamp.authority.entity.core.Station;
+import top.tangyh.lamp.common.annotation.DataField;
+import top.tangyh.lamp.common.annotation.DataScope;
 
 /**
  * <p>
@@ -26,5 +28,6 @@ public interface StationMapper extends SuperMapper<Station> {
      * @param queryWrapper 参数包装器
      * @return 分页数据
      */
+    @DataScope(value = {@DataField(alias = "s")})
     IPage<Station> findStationPage(IPage<Station> page, @Param(Constants.WRAPPER) Wrapper<Station> queryWrapper);
 }

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/MenuService.java
Patch:
@@ -24,6 +24,7 @@ public interface MenuService extends SuperCacheService<Menu> {
      * @param path   前端页面路径
      * @return
      */
+    @Deprecated
     ResourceDataScope getDataScopeByPath(String path, List<Long> idList);
 
     /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/ResourceService.java
Patch:
@@ -1,7 +1,7 @@
 package top.tangyh.lamp.authority.service.auth;
 
 import top.tangyh.basic.base.service.SuperCacheService;
-import top.tangyh.lamp.authority.dto.auth.ResourceQueryDTO;
+import top.tangyh.lamp.model.vo.query.ResourceQueryDTO;
 import top.tangyh.lamp.authority.entity.auth.Resource;
 
 import java.util.List;
@@ -23,6 +23,7 @@ public interface ResourceService extends SuperCacheService<Resource> {
      * @param resource 查询条件
      * @return 资源
      */
+    @Deprecated
     List<Resource> findVisibleResource(ResourceQueryDTO resource);
 
     /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/ApplicationServiceImpl.java
Patch:
@@ -15,6 +15,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 
+
 import java.util.function.Function;
 
 /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/MenuServiceImpl.java
Patch:
@@ -35,6 +35,7 @@
 import top.tangyh.lamp.common.cache.auth.UserMenuCacheKeyBuilder;
 import top.tangyh.lamp.common.constant.DefValConstants;
 
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/OnlineServiceImpl.java
Patch:
@@ -12,6 +12,7 @@
 import top.tangyh.lamp.common.cache.common.OnlineCacheKeyBuilder;
 import top.tangyh.lamp.common.cache.common.TokenUserIdCacheKeyBuilder;
 import top.tangyh.lamp.common.constant.BizConstant;
+
 import top.tangyh.lamp.common.constant.ParameterKey;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -10,7 +10,8 @@
 import top.tangyh.basic.exception.BizException;
 import top.tangyh.basic.utils.StrHelper;
 import top.tangyh.lamp.authority.dao.auth.ResourceMapper;
-import top.tangyh.lamp.authority.dto.auth.ResourceQueryDTO;
+
+import top.tangyh.lamp.model.vo.query.ResourceQueryDTO;
 import top.tangyh.lamp.authority.entity.auth.Resource;
 import top.tangyh.lamp.authority.service.auth.ResourceService;
 import top.tangyh.lamp.authority.service.auth.RoleAuthorityService;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/RoleAuthorityServiceImpl.java
Patch:
@@ -28,6 +28,7 @@
 import top.tangyh.lamp.common.cache.auth.UserResourceCacheKeyBuilder;
 import top.tangyh.lamp.common.cache.auth.UserRoleCacheKeyBuilder;
 
+
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/RoleOrgServiceImpl.java
Patch:
@@ -9,6 +9,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 
+
 import java.util.List;
 import java.util.stream.Collectors;
 

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/RoleServiceImpl.java
Patch:
@@ -12,7 +12,6 @@
 import top.tangyh.basic.model.cache.CacheKey;
 import top.tangyh.basic.model.cache.CacheKeyBuilder;
 import top.tangyh.basic.database.mybatis.conditions.Wraps;
-import top.tangyh.basic.security.constant.RoleConstant;
 import top.tangyh.basic.utils.ArgumentAssert;
 import top.tangyh.basic.utils.BeanPlusUtil;
 import top.tangyh.basic.utils.StrHelper;
@@ -32,6 +31,8 @@
 import top.tangyh.lamp.common.cache.auth.UserResourceCacheKeyBuilder;
 import top.tangyh.lamp.common.cache.auth.UserRoleCacheKeyBuilder;
 
+import top.tangyh.lamp.security.constant.RoleConstant;
+
 import java.util.ArrayList;
 import java.util.List;
 import java.util.stream.Collectors;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/UserRoleServiceImpl.java
Patch:
@@ -14,6 +14,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
+
 import static top.tangyh.lamp.common.constant.BizConstant.INIT_ROLE_CODE;
 
 /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/AreaServiceImpl.java
Patch:
@@ -13,6 +13,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
+
 import java.util.List;
 
 /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/DictionaryServiceImpl.java
Patch:
@@ -28,6 +28,7 @@
 import top.tangyh.lamp.common.cache.common.DictionaryTypeCacheKeyBuilder;
 import top.tangyh.lamp.common.constant.DefValConstants;
 
+
 import java.io.Serializable;
 import java.util.Collection;
 import java.util.Collections;
@@ -176,7 +177,7 @@ public boolean removeByIds(Collection<?> idList) {
         if (idList.isEmpty()) {
             return true;
         }
-        List<Dictionary> list = listByIds((Collection<Long>)idList);
+        List<Dictionary> list = listByIds((Collection<Long>)  idList);
         boolean remove = super.removeByIds(idList);
         CacheHashKey[] hashKeys = list.stream().map(model -> new DictionaryTypeCacheKeyBuilder().hashKey(model.getType())).toArray(CacheHashKey[]::new);
         cachePlusOps.del(hashKeys);

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/LoginLogServiceImpl.java
Patch:
@@ -30,6 +30,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
 
+
 import java.time.LocalDate;
 import java.time.LocalDateTime;
 import java.time.LocalTime;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/OptLogServiceImpl.java
Patch:
@@ -15,6 +15,7 @@
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
 
+
 import java.time.LocalDateTime;
 
 /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/ParameterServiceImpl.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.util.StrUtil;
+
 import com.baomidou.mybatisplus.core.toolkit.CollectionUtils;
 import com.baomidou.mybatisplus.extension.toolkit.SqlHelper;
 import lombok.RequiredArgsConstructor;
@@ -22,6 +23,7 @@
 import top.tangyh.lamp.authority.service.common.ParameterService;
 import top.tangyh.lamp.common.cache.common.ParameterKeyCacheKeyBuilder;
 
+
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashMap;

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -27,6 +27,7 @@
 import top.tangyh.lamp.common.cache.core.OrgCacheKeyBuilder;
 import top.tangyh.lamp.common.constant.DefValConstants;
 
+
 import java.io.Serializable;
 import java.util.Collections;
 import java.util.List;
@@ -169,6 +170,7 @@ public Org getMainCompanyByUserId(Long userId) {
         return getMainCompany(map, baseOrg.getParentId());
     }
 
+
     private static Org getMainCompany(ImmutableMap<Long, Org> map, Long parentId) {
         Org parent = map.get(parentId);
         if (parent == null) {

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/core/impl/StationServiceImpl.java
Patch:
@@ -22,6 +22,7 @@
 import top.tangyh.lamp.authority.service.core.StationService;
 import top.tangyh.lamp.common.cache.core.StationCacheKeyBuilder;
 
+
 import java.io.Serializable;
 import java.util.List;
 import java.util.Map;

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/auth/RoleController.java
Patch:
@@ -82,7 +82,6 @@ public IPage<Role> query(PageParams<RolePageQuery> params) {
                 .in(Role::getReadonly, roleQuery.getReadonly())
                 .in(Role::getCategory, roleQuery.getCategory());
         baseService.page(page, wrapper);
-
         handlerResult(page);
         return page;
     }

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/auth/UserController.java
Patch:
@@ -369,7 +369,7 @@ public R<IPage<User>> pageAll(@RequestBody @Validated PageParams<UserPageQuery>
                 .eq(User::getState, userPage.getState());
 
         if (StrUtil.equalsAny(userPage.getScope(), BizConstant.SCOPE_BIND, BizConstant.SCOPE_UN_BIND) && userPage.getRoleId() != null) {
-            String sql = " select ur.user_id from c_user_role ur where ur.user_id = c_user.id \n" +
+            String sql = " select ur.user_id from c_user_role ur where ur.user_id = s.id \n" +
                     "  and ur.role_id =   " + userPage.getRoleId();
             if (BizConstant.SCOPE_BIND.equals(userPage.getScope())) {
                 wrapper.inSql(User::getId, sql);
@@ -378,7 +378,7 @@ public R<IPage<User>> pageAll(@RequestBody @Validated PageParams<UserPageQuery>
             }
         }
 
-        baseService.page(page, wrapper);
+        baseService.findPage(page, wrapper);
         // 手动注入
         echoService.action(page);
 

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/common/DashboardController.java
Patch:
@@ -3,7 +3,7 @@
 import com.baidu.fsg.uid.UidGenerator;
 import top.tangyh.basic.annotation.user.LoginUser;
 import top.tangyh.basic.base.R;
-import top.tangyh.basic.security.model.SysUser;
+import top.tangyh.lamp.model.entity.base.SysUser;
 import top.tangyh.lamp.authority.service.auth.UserService;
 import top.tangyh.lamp.authority.service.common.LoginLogService;
 import io.swagger.annotations.Api;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/GlobalUserSaveDTO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.authority.dto.auth;
 
-import top.tangyh.lamp.authority.enumeration.auth.Sex;
+import top.tangyh.lamp.model.enumeration.Sex;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/GlobalUserUpdateDTO.java
Patch:
@@ -1,7 +1,7 @@
 package top.tangyh.lamp.authority.dto.auth;
 
 import top.tangyh.basic.base.entity.SuperEntity;
-import top.tangyh.lamp.authority.enumeration.auth.Sex;
+import top.tangyh.lamp.model.enumeration.Sex;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserDTO.java
Patch:
@@ -1,5 +1,6 @@
 package top.tangyh.lamp.authority.dto.auth;
 
+import top.tangyh.lamp.model.enumeration.Sex;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
@@ -9,7 +10,6 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import top.tangyh.lamp.authority.enumeration.auth.Sex;
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.Size;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserExcelVO.java
Patch:
@@ -3,7 +3,7 @@
 import cn.afterturn.easypoi.excel.annotation.Excel;
 import cn.afterturn.easypoi.handler.inter.IExcelDataModel;
 import cn.afterturn.easypoi.handler.inter.IExcelModel;
-import top.tangyh.lamp.authority.enumeration.auth.Sex;
+import top.tangyh.lamp.model.enumeration.Sex;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserUpdateAvatarDTO.java
Patch:
@@ -10,7 +10,7 @@
 import lombok.ToString;
 import lombok.experimental.Accessors;
 import top.tangyh.basic.base.entity.SuperEntity;
-import top.tangyh.lamp.common.vo.save.AppendixSaveVO;
+import top.tangyh.lamp.model.vo.save.AppendixSaveVO;
 
 import javax.validation.Valid;
 import javax.validation.constraints.NotNull;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserUpdateBaseInfoDTO.java
Patch:
@@ -1,7 +1,7 @@
 package top.tangyh.lamp.authority.dto.auth;
 
 import top.tangyh.basic.base.entity.SuperEntity;
-import top.tangyh.lamp.authority.enumeration.auth.Sex;
+import top.tangyh.lamp.model.enumeration.Sex;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/common/AreaPageQuery.java
Patch:
@@ -67,7 +67,7 @@ public class AreaPageQuery implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     private String level;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/common/AreaSaveDTO.java
Patch:
@@ -82,7 +82,7 @@ public class AreaSaveDTO implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     @Size(max = 10, message = "行政区级长度不能超过10")

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/common/AreaUpdateDTO.java
Patch:
@@ -88,7 +88,7 @@ public class AreaUpdateDTO implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     @Size(max = 10, message = "行政区级长度不能超过10")

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/core/OrgPageQuery.java
Patch:
@@ -62,7 +62,7 @@ public class OrgPageQuery implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     private String type;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/core/OrgSaveDTO.java
Patch:
@@ -57,7 +57,7 @@ public class OrgSaveDTO implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     @Size(max = 2, message = "类型长度不能超过2")

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/core/OrgUpdateDTO.java
Patch:
@@ -64,7 +64,7 @@ public class OrgUpdateDTO implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = EchoDictType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     @Size(max = 2, message = "类型长度不能超过2")

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/entity/auth/Menu.java
Patch:
@@ -14,14 +14,14 @@
 import lombok.experimental.Accessors;
 import top.tangyh.basic.annotation.echo.Echo;
 import top.tangyh.basic.base.entity.TreeEntity;
-import top.tangyh.lamp.common.constant.DictionaryType;
+import top.tangyh.lamp.model.constant.EchoDictType;
 
 import javax.validation.constraints.Size;
 import java.time.LocalDateTime;
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.EQUAL;
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
-import static top.tangyh.lamp.common.constant.EchoConstants.DICTIONARY_ITEM_FEIGN_CLASS;
+import static top.tangyh.lamp.model.constant.EchoApi.DICTIONARY_ITEM_FEIGN_CLASS;
 
 /**
  * <p>
@@ -59,7 +59,7 @@ public class Menu extends TreeEntity<Menu, Long> {
     @Size(max = 2, message = "类型长度不能超过{max}")
     @TableField(value = "resource_type", condition = LIKE)
     @Excel(name = "类型")
-    @Echo(api = DICTIONARY_ITEM_FEIGN_CLASS, dictType = DictionaryType.RESOURCE_TYPE)
+    @Echo(api = DICTIONARY_ITEM_FEIGN_CLASS, dictType = EchoDictType.RESOURCE_TYPE)
     private String resourceType;
 
     /**

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/entity/auth/Role.java
Patch:
@@ -15,7 +15,7 @@
 import top.tangyh.basic.annotation.echo.Echo;
 import top.tangyh.basic.base.entity.Entity;
 import top.tangyh.basic.interfaces.echo.EchoVO;
-import top.tangyh.lamp.common.constant.DictionaryType;
+import top.tangyh.lamp.model.constant.EchoDictType;
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.Size;
@@ -24,7 +24,7 @@
 import java.util.Map;
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
-import static top.tangyh.lamp.common.constant.EchoConstants.DICTIONARY_ITEM_CLASS;
+import static top.tangyh.lamp.model.constant.EchoApi.DICTIONARY_ITEM_CLASS;
 
 /**
  * <p>
@@ -54,7 +54,7 @@ public class Role extends Entity<Long> implements EchoVO {
     @ApiModelProperty(value = "角色类别")
     @TableField(value = "`category`", condition = LIKE)
     @Size(max = 2, message = "角色类别长度不能超过{max}")
-    @Echo(api = DICTIONARY_ITEM_CLASS, dictType = DictionaryType.ROLE_CATEGORY)
+    @Echo(api = DICTIONARY_ITEM_CLASS, dictType = EchoDictType.ROLE_CATEGORY)
     private String category;
     /**
      * 名称

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/entity/common/OptLog.java
Patch:
@@ -5,7 +5,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.SuperEntity;
 import top.tangyh.lamp.authority.enumeration.common.LogType;
-import top.tangyh.lamp.common.enumeration.HttpMethod;
+import top.tangyh.lamp.model.enumeration.HttpMethod;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/entity/core/Station.java
Patch:
@@ -23,7 +23,7 @@
 import java.util.Map;
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
-import static top.tangyh.lamp.common.constant.EchoConstants.ORG_ID_CLASS;
+import static top.tangyh.lamp.model.constant.EchoApi.ORG_ID_CLASS;
 
 /**
  * <p>

File: lamp-authority/lamp-authority-server/src/main/java/top/tangyh/lamp/AuthorityServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp;
 
-import top.tangyh.basic.security.annotation.EnableLoginArgResolver;
 import top.tangyh.basic.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
@@ -38,7 +37,6 @@
 })
 @Slf4j
 @EnableAspectJAutoProxy(proxyTargetClass = true, exposeProxy = true)
-@EnableLoginArgResolver
 @EnableFormValidator
 public class AuthorityServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/service/impl/FileServiceImpl.java
Patch:
@@ -10,6 +10,7 @@
 import top.tangyh.basic.base.service.SuperServiceImpl;
 import top.tangyh.basic.utils.ArgumentAssert;
 import top.tangyh.basic.utils.BeanPlusUtil;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.entity.File;
 import top.tangyh.lamp.file.service.FileService;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/ali/AliFileStrategyImpl.java
Patch:
@@ -14,6 +14,7 @@
 import top.tangyh.basic.jackson.JsonUtil;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/fastdfs/FastDfsFileStrategyImpl.java
Patch:
@@ -7,6 +7,7 @@
 import org.springframework.web.multipart.MultipartFile;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/huawei/HuaweiFileStrategyImpl.java
Patch:
@@ -22,6 +22,7 @@
 import org.springframework.web.multipart.MultipartFile;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/local/LocalFileStrategyImpl.java
Patch:
@@ -8,6 +8,7 @@
 import org.springframework.web.multipart.MultipartFile;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/minio/MinIoFileStrategyImpl.java
Patch:
@@ -16,6 +16,7 @@
 import org.springframework.web.multipart.MultipartFile;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/qiniu/QiNiuFileStrategyImpl.java
Patch:
@@ -17,6 +17,7 @@
 import top.tangyh.basic.jackson.JsonUtil;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.file.dao.FileMapper;
 import top.tangyh.lamp.file.domain.FileDeleteBO;
 import top.tangyh.lamp.file.domain.FileGetUrlBO;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/utils/FileTypeUtil.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import cn.hutool.core.util.StrUtil;
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.File;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/entity/File.java
Patch:
@@ -3,7 +3,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 import top.tangyh.lamp.file.enumeration.FileStorageType;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/vo/param/FileParamVO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.file.vo.param;
 
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 import top.tangyh.lamp.file.enumeration.FileStorageType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/vo/result/FileResultVO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.file.vo.result;
 
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-file/lamp-file-server/src/main/java/top/tangyh/lamp/FileServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp;
 
-import top.tangyh.basic.security.annotation.EnableLoginArgResolver;
 import top.tangyh.basic.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
@@ -31,7 +30,6 @@
 })
 @EnableTransactionManagement
 @Slf4j
-@EnableLoginArgResolver
 @EnableFormValidator
 public class FileServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: lamp-file/lamp-file-server/src/main/java/top/tangyh/lamp/file/config/FileWebConfiguration.java
Patch:
@@ -2,10 +2,11 @@
 
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
-import top.tangyh.lamp.oauth.api.LogApi;
+
 import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import top.tangyh.lamp.common.api.LogApi;
 
 /**
  * @author zuihou

File: lamp-file/lamp-file-server/src/main/java/top/tangyh/lamp/file/config/datasource/FileMybatisAutoConfiguration.java
Patch:
@@ -6,10 +6,10 @@
 import top.tangyh.basic.database.mybatis.auth.DataScopeInnerInterceptor;
 import top.tangyh.basic.database.properties.DatabaseProperties;
 import top.tangyh.basic.utils.SpringUtils;
-import top.tangyh.lamp.oauth.api.UserApi;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;
+import top.tangyh.lamp.common.api.UserApi;
 
 import java.util.ArrayList;
 import java.util.List;

File: lamp-msg/lamp-msg-biz/src/main/java/top/tangyh/lamp/msg/service/impl/MsgReceiveServiceImpl.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import top.tangyh.basic.base.service.SuperServiceImpl;
+
 import top.tangyh.lamp.msg.dao.MsgReceiveMapper;
 import top.tangyh.lamp.msg.entity.MsgReceive;
 import top.tangyh.lamp.msg.service.MsgReceiveService;

File: lamp-msg/lamp-msg-biz/src/main/java/top/tangyh/lamp/msg/service/impl/MsgServiceImpl.java
Patch:
@@ -12,6 +12,7 @@
 import top.tangyh.basic.context.ContextUtil;
 import top.tangyh.basic.database.mybatis.conditions.Wraps;
 import top.tangyh.basic.utils.BeanPlusUtil;
+
 import top.tangyh.lamp.msg.dao.MsgMapper;
 import top.tangyh.lamp.msg.dto.MsgPageResult;
 import top.tangyh.lamp.msg.dto.MsgQuery;

File: lamp-msg/lamp-msg-controller/src/main/java/top/tangyh/lamp/msg/controller/MsgController.java
Patch:
@@ -41,7 +41,7 @@
 import top.tangyh.lamp.msg.entity.Msg;
 import top.tangyh.lamp.msg.enumeration.MsgType;
 import top.tangyh.lamp.msg.service.MsgService;
-import top.tangyh.lamp.oauth.api.RoleApi;
+import top.tangyh.lamp.authority.api.RoleApi;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;

File: lamp-msg/lamp-msg-entity/src/main/java/top/tangyh/lamp/sms/entity/SmsTask.java
Patch:
@@ -26,7 +26,7 @@
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
 import static top.tangyh.basic.utils.DateUtils.DEFAULT_DATE_TIME_FORMAT;
-import static top.tangyh.lamp.common.constant.EchoConstants.SMS_TEMPLATE_ID_CLASS;
+import static top.tangyh.lamp.model.constant.EchoApi.SMS_TEMPLATE_ID_CLASS;
 
 /**
  * <p>

File: lamp-msg/lamp-msg-entity/src/main/java/top/tangyh/lamp/sms/enumeration/TemplateCodeType.java
Patch:
@@ -1,6 +1,6 @@
 //package top.tangyh.lamp.sms.enumeration;
 //
-//import top.tangyh.basic.interfaces.BaseEnum;
+//import top.tangyh.basic.base.BaseEnum;
 //import io.swagger.annotations.ApiModel;
 //import io.swagger.annotations.ApiModelProperty;
 //import lombok.AllArgsConstructor;

File: lamp-msg/lamp-msg-server/src/main/java/top/tangyh/lamp/MsgServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp;
 
-import top.tangyh.basic.security.annotation.EnableLoginArgResolver;
 import top.tangyh.basic.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
@@ -34,7 +33,6 @@
         UTIL_PACKAGE, BUSINESS_PACKAGE
 })
 @Slf4j
-@EnableLoginArgResolver
 @EnableFormValidator
 public class MsgServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: lamp-msg/lamp-msg-server/src/main/java/top/tangyh/lamp/msg/config/MsgWebConfiguration.java
Patch:
@@ -2,10 +2,10 @@
 
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
-import top.tangyh.lamp.oauth.api.LogApi;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import top.tangyh.lamp.common.api.LogApi;
 
 /**
  * @author zuihou

File: lamp-msg/lamp-msg-server/src/main/java/top/tangyh/lamp/msg/config/datasource/MsgMybatisAutoConfiguration.java
Patch:
@@ -6,7 +6,7 @@
 import top.tangyh.basic.database.mybatis.auth.DataScopeInnerInterceptor;
 import top.tangyh.basic.database.properties.DatabaseProperties;
 import top.tangyh.basic.utils.SpringUtils;
-import top.tangyh.lamp.oauth.api.UserApi;
+import top.tangyh.lamp.common.api.UserApi;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;

File: lamp-msg/lamp-sms-biz/src/main/java/top/tangyh/lamp/sms/service/impl/SmsSendStatusServiceImpl.java
Patch:
@@ -3,6 +3,7 @@
 
 import top.tangyh.basic.base.service.SuperServiceImpl;
 import top.tangyh.basic.database.mybatis.conditions.Wraps;
+
 import top.tangyh.lamp.sms.dao.SmsSendStatusMapper;
 import top.tangyh.lamp.sms.entity.SmsSendStatus;
 import top.tangyh.lamp.sms.service.SmsSendStatusService;

File: lamp-msg/lamp-sms-biz/src/main/java/top/tangyh/lamp/sms/service/impl/SmsTaskServiceImpl.java
Patch:
@@ -22,6 +22,7 @@
 import top.tangyh.basic.utils.BeanPlusUtil;
 import top.tangyh.basic.utils.StrPool;
 import top.tangyh.lamp.common.api.JobApi;
+
 import top.tangyh.lamp.common.constant.JobConstant;
 import top.tangyh.lamp.common.dto.XxlJobInfoVO;
 import top.tangyh.lamp.sms.dao.SmsTaskMapper;

File: lamp-msg/lamp-sms-biz/src/main/java/top/tangyh/lamp/sms/service/impl/SmsTemplateServiceImpl.java
Patch:
@@ -8,6 +8,7 @@
 import top.tangyh.basic.model.Kv;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
+
 import top.tangyh.lamp.sms.dao.SmsTemplateMapper;
 import top.tangyh.lamp.sms.entity.SmsTemplate;
 import top.tangyh.lamp.sms.service.SmsTemplateService;

File: lamp-msg/lamp-sms-biz/src/main/java/top/tangyh/lamp/sms/strategy/SmsContext.java
Patch:
@@ -5,6 +5,7 @@
 import org.springframework.stereotype.Component;
 import org.springframework.transaction.annotation.Transactional;
 import top.tangyh.basic.utils.ArgumentAssert;
+
 import top.tangyh.lamp.sms.dao.SmsTaskMapper;
 import top.tangyh.lamp.sms.dao.SmsTemplateMapper;
 import top.tangyh.lamp.sms.entity.SmsTask;

File: lamp-msg/lamp-sms-biz/src/main/java/top/tangyh/lamp/sms/strategy/impl/AbstractSmsStrategy.java
Patch:
@@ -2,6 +2,7 @@
 
 
 import top.tangyh.basic.base.R;
+
 import top.tangyh.lamp.sms.dao.SmsTaskMapper;
 import top.tangyh.lamp.sms.entity.SmsSendStatus;
 import top.tangyh.lamp.sms.entity.SmsTask;

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/granter/AbstractTokenGranter.java
Patch:
@@ -43,12 +43,12 @@
 import top.tangyh.lamp.authority.service.auth.UserService;
 import top.tangyh.lamp.common.constant.AppendixType;
 import top.tangyh.lamp.common.properties.SystemProperties;
-import top.tangyh.lamp.common.vo.result.AppendixResultVO;
+import top.tangyh.lamp.model.vo.result.AppendixResultVO;
 import top.tangyh.lamp.file.service.AppendixService;
 import top.tangyh.lamp.oauth.event.LoginEvent;
 import top.tangyh.lamp.oauth.event.model.LoginStatusDTO;
 import top.tangyh.lamp.tenant.entity.Tenant;
-import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantStatusEnum;
 import top.tangyh.lamp.tenant.service.TenantService;
 
 import java.time.LocalDateTime;

File: lamp-oauth/lamp-oauth-controller/src/main/java/top/tangyh/lamp/oauth/controller/OauthGeneralController.java
Patch:
@@ -11,7 +11,7 @@
 import top.tangyh.lamp.authority.entity.common.Dictionary;
 import top.tangyh.lamp.authority.service.common.DictionaryService;
 import top.tangyh.lamp.authority.service.common.ParameterService;
-import top.tangyh.lamp.oauth.controller.model.Option;
+import top.tangyh.lamp.model.vo.result.Option;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
 import lombok.AllArgsConstructor;

File: lamp-oauth/lamp-oauth-controller/src/main/java/top/tangyh/lamp/oauth/controller/OauthMenuResourceController.java
Patch:
@@ -4,13 +4,12 @@
 import top.tangyh.basic.annotation.user.LoginUser;
 import top.tangyh.basic.base.R;
 import top.tangyh.basic.dozer.DozerUtils;
-import top.tangyh.basic.security.model.SysUser;
-import top.tangyh.basic.security.properties.SecurityProperties;
+import top.tangyh.lamp.model.entity.base.SysUser;
 import top.tangyh.basic.utils.CollHelper;
 import top.tangyh.basic.utils.StrPool;
 import top.tangyh.basic.utils.TreeUtil;
 import top.tangyh.lamp.authority.dto.auth.AuthorityResourceDTO;
-import top.tangyh.lamp.authority.dto.auth.ResourceQueryDTO;
+import top.tangyh.lamp.model.vo.query.ResourceQueryDTO;
 import top.tangyh.lamp.authority.dto.auth.RouterMeta;
 import top.tangyh.lamp.authority.dto.auth.VueRouter;
 import top.tangyh.lamp.authority.entity.auth.Menu;
@@ -29,6 +28,7 @@
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;
 import springfox.documentation.annotations.ApiIgnore;
+import top.tangyh.lamp.security.properties.SecurityProperties;
 
 import java.util.ArrayList;
 import java.util.List;

File: lamp-oauth/lamp-oauth-server/src/main/java/top/tangyh/lamp/OauthServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp;
 
-import top.tangyh.basic.security.annotation.EnableLoginArgResolver;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -31,7 +30,6 @@
         UTIL_PACKAGE, BUSINESS_PACKAGE
 })
 @Slf4j
-@EnableLoginArgResolver
 public class OauthServerApplication {
     public static void main(String[] args) throws UnknownHostException {
         ConfigurableApplicationContext application = SpringApplication.run(OauthServerApplication.class, args);

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/DictionaryApi.java
Patch:
@@ -1,10 +1,10 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
 import top.tangyh.basic.interfaces.echo.LoadService;
-import top.tangyh.lamp.oauth.api.hystrix.DictionaryApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
+import top.tangyh.lamp.common.api.fallback.DictionaryApiFallback;
 
 import java.io.Serializable;
 import java.util.Map;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/LogApi.java
Patch:
@@ -1,20 +1,20 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
 import top.tangyh.basic.base.R;
 import top.tangyh.basic.model.log.OptLogDTO;
-import top.tangyh.lamp.oauth.api.hystrix.LogApiHystrix;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
+import top.tangyh.lamp.common.api.fallback.LogApiHystrix;
 
 /**
  * 操作日志保存 API
  *
  * @author zuihou
  * @date 2019/07/02
  */
-@FeignClient(name = "${lamp.feign.oauth-server:lamp-oauth-server}", fallback = LogApiHystrix.class, qualifier = "logApi")
+@FeignClient(name = "${lamp.feign.oauth-server:lamp-oauth-server}", fallback = LogApiHystrix.class)
 public interface LogApi {
 
     /**

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/OrgApi.java
Patch:
@@ -1,10 +1,10 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
-import top.tangyh.basic.interfaces.echo.LoadService;
-import top.tangyh.lamp.oauth.api.hystrix.OrgApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
+import top.tangyh.basic.interfaces.echo.LoadService;
+import top.tangyh.lamp.common.api.fallback.OrgApiFallback;
 
 import java.io.Serializable;
 import java.util.Map;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/ParameterApi.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
 
 import top.tangyh.basic.base.R;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/StationApi.java
Patch:
@@ -1,10 +1,10 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
 import top.tangyh.basic.interfaces.echo.LoadService;
-import top.tangyh.lamp.oauth.api.hystrix.StationApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
+import top.tangyh.lamp.common.api.fallback.StationApiFallback;
 
 import java.io.Serializable;
 import java.util.Map;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/UserApi.java
Patch:
@@ -1,13 +1,13 @@
-package top.tangyh.lamp.oauth.api;
+package top.tangyh.lamp.common.api;
 
 import top.tangyh.basic.interfaces.echo.LoadService;
-import top.tangyh.lamp.oauth.api.hystrix.UserApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.bind.annotation.RequestParam;
+import top.tangyh.lamp.common.api.fallback.UserApiFallback;
 
 import java.io.Serializable;
 import java.util.Map;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/fallback/DictionaryApiFallback.java
Patch:
@@ -1,7 +1,7 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.common.api.fallback;
 
-import top.tangyh.lamp.oauth.api.DictionaryApi;
 import org.springframework.stereotype.Component;
+import top.tangyh.lamp.common.api.DictionaryApi;
 
 import java.io.Serializable;
 import java.util.Collections;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/fallback/LogApiHystrix.java
Patch:
@@ -1,9 +1,9 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.common.api.fallback;
 
-import top.tangyh.lamp.oauth.api.LogApi;
 import top.tangyh.basic.base.R;
 import top.tangyh.basic.model.log.OptLogDTO;
 import org.springframework.stereotype.Component;
+import top.tangyh.lamp.common.api.LogApi;
 
 /**
  * 日志操作 熔断

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/fallback/OrgApiFallback.java
Patch:
@@ -1,7 +1,7 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.common.api.fallback;
 
-import top.tangyh.lamp.oauth.api.OrgApi;
 import org.springframework.stereotype.Component;
+import top.tangyh.lamp.common.api.OrgApi;
 
 import java.io.Serializable;
 import java.util.Collections;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/fallback/StationApiFallback.java
Patch:
@@ -1,7 +1,7 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.common.api.fallback;
 
-import top.tangyh.lamp.oauth.api.StationApi;
 import org.springframework.stereotype.Component;
+import top.tangyh.lamp.common.api.StationApi;
 
 import java.io.Serializable;
 import java.util.Collections;

File: lamp-public/lamp-common-api/src/main/java/top/tangyh/lamp/common/api/fallback/UserApiFallback.java
Patch:
@@ -1,7 +1,7 @@
-package top.tangyh.lamp.oauth.api.hystrix;
+package top.tangyh.lamp.common.api.fallback;
 
-import top.tangyh.lamp.oauth.api.UserApi;
 import org.springframework.stereotype.Component;
+import top.tangyh.lamp.common.api.UserApi;
 
 import java.io.Serializable;
 import java.util.Collections;

File: lamp-public/lamp-file-sdk/src/main/java/top/tangyh/lamp/file/controller/AppendixController.java
Patch:
@@ -11,7 +11,7 @@
 import top.tangyh.basic.annotation.log.SysLog;
 import top.tangyh.basic.base.R;
 import top.tangyh.basic.base.controller.SuperSimpleController;
-import top.tangyh.lamp.common.vo.result.AppendixResultVO;
+import top.tangyh.lamp.model.vo.result.AppendixResultVO;
 import top.tangyh.lamp.file.entity.Appendix;
 import top.tangyh.lamp.file.service.AppendixService;
 

File: lamp-public/lamp-file-sdk/src/main/java/top/tangyh/lamp/file/entity/Appendix.java
Patch:
@@ -3,7 +3,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;

File: lamp-public/lamp-file-sdk/src/main/java/top/tangyh/lamp/file/service/AppendixService.java
Patch:
@@ -12,8 +12,8 @@
 import top.tangyh.basic.base.entity.SuperEntity;
 import top.tangyh.basic.base.service.SuperService;
 import top.tangyh.basic.interfaces.echo.EchoVO;
-import top.tangyh.lamp.common.vo.result.AppendixResultVO;
-import top.tangyh.lamp.common.vo.save.AppendixSaveVO;
+import top.tangyh.lamp.model.vo.result.AppendixResultVO;
+import top.tangyh.lamp.model.vo.save.AppendixSaveVO;
 import top.tangyh.lamp.file.entity.Appendix;
 
 import java.io.Serializable;

File: lamp-public/lamp-file-sdk/src/main/java/top/tangyh/lamp/file/service/impl/AppendixServiceImpl.java
Patch:
@@ -17,13 +17,13 @@
 import top.tangyh.basic.utils.ArgumentAssert;
 import top.tangyh.basic.utils.BeanPlusUtil;
 import top.tangyh.basic.utils.CollHelper;
-import top.tangyh.lamp.common.vo.result.AppendixResultVO;
-import top.tangyh.lamp.common.vo.save.AppendixSaveVO;
+
 import top.tangyh.lamp.file.entity.Appendix;
 import top.tangyh.lamp.file.mapper.AppendixMapper;
 import top.tangyh.lamp.file.service.AppendixService;
+import top.tangyh.lamp.model.vo.result.AppendixResultVO;
+import top.tangyh.lamp.model.vo.save.AppendixSaveVO;
 
-import java.util.Collection;
 import java.util.List;
 import java.util.Set;
 import java.util.stream.Collectors;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/HttpMethod.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enumeration;
+package top.tangyh.lamp.model.enumeration;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/Sex.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.authority.enumeration.auth;
+package top.tangyh.lamp.model.enumeration;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/base/DateType.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enumeration;
+package top.tangyh.lamp.model.enumeration.base;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/base/FileType.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enumeration;
+package top.tangyh.lamp.model.enumeration.base;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/base/RoleCategoryEnum.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.authority.enumeration.auth;
+package top.tangyh.lamp.model.enumeration.base;
 
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/system/TenantStatusEnum.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.tenant.enumeration;
+package top.tangyh.lamp.model.enumeration.system;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/enumeration/system/TenantTypeEnum.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.tenant.enumeration;
+package top.tangyh.lamp.model.enumeration.system;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/vo/query/ResourceQueryDTO.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.authority.dto.auth;
+package top.tangyh.lamp.model.vo.query;
 
 
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/vo/result/AppendixResultVO.java
Patch:
@@ -1,6 +1,5 @@
-package top.tangyh.lamp.common.vo.result;
+package top.tangyh.lamp.model.vo.result;
 
-import top.tangyh.lamp.common.enumeration.FileType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
@@ -10,6 +9,7 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 
 import java.io.Serializable;
 import java.time.LocalDateTime;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/vo/result/Option.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.oauth.controller.model;
+package top.tangyh.lamp.model.vo.result;
 
 import top.tangyh.basic.interfaces.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-model/src/main/java/top/tangyh/lamp/model/vo/save/AppendixSaveVO.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.vo.save;
+package top.tangyh.lamp.model.vo.save;
 
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
@@ -9,7 +9,7 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import top.tangyh.lamp.common.enumeration.FileType;
+import top.tangyh.lamp.model.enumeration.base.FileType;
 
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Size;

File: lamp-tenant/lamp-tenant-biz/src/main/java/top/tangyh/lamp/tenant/service/TenantService.java
Patch:
@@ -5,7 +5,7 @@
 import top.tangyh.lamp.tenant.dto.TenantSaveDTO;
 import top.tangyh.lamp.tenant.dto.TenantUpdateDTO;
 import top.tangyh.lamp.tenant.entity.Tenant;
-import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantStatusEnum;
 
 import java.util.List;
 

File: lamp-tenant/lamp-tenant-controller/src/main/java/top/tangyh/lamp/tenant/controller/TenantController.java
Patch:
@@ -23,13 +23,13 @@
 import top.tangyh.lamp.tenant.dto.TenantSaveDTO;
 import top.tangyh.lamp.tenant.dto.TenantUpdateDTO;
 import top.tangyh.lamp.tenant.entity.Tenant;
-import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantStatusEnum;
 import top.tangyh.lamp.tenant.service.TenantService;
 
 import javax.validation.constraints.NotNull;
 import java.util.List;
 
-import static top.tangyh.lamp.tenant.enumeration.TenantStatusEnum.NORMAL;
+import static top.tangyh.lamp.model.enumeration.system.TenantStatusEnum.NORMAL;
 
 /**
  * <p>

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/dto/TenantPageQuery.java
Patch:
@@ -1,8 +1,8 @@
 package top.tangyh.lamp.tenant.dto;
 
-import top.tangyh.lamp.tenant.enumeration.TenantConnectTypeEnum;
-import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
-import top.tangyh.lamp.tenant.enumeration.TenantTypeEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantConnectTypeEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantStatusEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantTypeEnum;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/dto/TenantSaveDTO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.tenant.dto;
 
-import top.tangyh.lamp.common.vo.save.AppendixSaveVO;
+import top.tangyh.lamp.model.vo.save.AppendixSaveVO;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/entity/DatasourceConfig.java
Patch:
@@ -4,7 +4,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.tenant.enumeration.TenantConnectTypeEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantConnectTypeEnum;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-tenant/lamp-tenant-entity/src/main/java/top/tangyh/lamp/tenant/entity/Tenant.java
Patch:
@@ -5,9 +5,9 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.tenant.enumeration.TenantConnectTypeEnum;
-import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
-import top.tangyh.lamp.tenant.enumeration.TenantTypeEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantConnectTypeEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantStatusEnum;
+import top.tangyh.lamp.model.enumeration.system.TenantTypeEnum;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-tenant/lamp-tenant-server/src/main/java/top/tangyh/lamp/TenantServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp;
 
-import top.tangyh.basic.security.annotation.EnableLoginArgResolver;
 import top.tangyh.basic.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
@@ -38,7 +37,6 @@
 })
 @Slf4j
 @EnableAspectJAutoProxy(proxyTargetClass = true, exposeProxy = true)
-@EnableLoginArgResolver
 @EnableFormValidator
 public class TenantServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: lamp-tenant/lamp-tenant-biz/src/main/java/top/tangyh/lamp/tenant/strategy/impl/ColumnInitSystemStrategy.java
Patch:
@@ -125,7 +125,8 @@ public boolean initConnect(TenantConnectDTO tenantConnect) {
 
     private boolean initApplication() {
         List<Application> list = new ArrayList<>();
-        list.add(Application.builder().clientId("lamp_web").clientSecret("lamp_web_secret").website("http://tangyh.top:10000/lamp-web/").name("微服务快速开发管理后台").appType(ApplicationAppTypeEnum.PC).state(true).build());
+        list.add(Application.builder().clientId("lamp_web").clientSecret("lamp_web_secret").website("https://tangyh.top").name("微服务快速开发管理后台").appType(ApplicationAppTypeEnum.PC).state(true).build());
+        list.add(Application.builder().clientId("lamp_web_plus").clientSecret("lamp_web_plus_secret").website("https://tangyh.top").name("微服务快速开发管理后台").appType(ApplicationAppTypeEnum.PC).state(true).build());
         return applicationService.saveBatch(list);
     }
 

File: lamp-tenant/lamp-tenant-biz/src/main/java/top/tangyh/lamp/tenant/service/impl/TenantServiceImpl.java
Patch:
@@ -20,6 +20,7 @@
 import top.tangyh.lamp.tenant.dto.TenantSaveDTO;
 import top.tangyh.lamp.tenant.dto.TenantUpdateDTO;
 import top.tangyh.lamp.tenant.entity.Tenant;
+import top.tangyh.lamp.tenant.enumeration.TenantConnectTypeEnum;
 import top.tangyh.lamp.tenant.enumeration.TenantStatusEnum;
 import top.tangyh.lamp.tenant.enumeration.TenantTypeEnum;
 import top.tangyh.lamp.tenant.service.TenantService;
@@ -77,6 +78,7 @@ public Tenant save(TenantSaveDTO data) {
         Tenant tenant = BeanPlusUtil.toBean(data, Tenant.class);
         tenant.setStatus(TenantStatusEnum.WAIT_INIT);
         tenant.setType(TenantTypeEnum.CREATE);
+        tenant.setConnectType(TenantConnectTypeEnum.LOCAL);
         // defaults 库
         save(tenant);
 

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/core/OrgController.java
Patch:
@@ -82,12 +82,12 @@ public R<Org> handlerUpdate(OrgUpdateDTO model) {
     private void fillOrg(Org org) {
         if (org.getParentId() == null || org.getParentId() <= 0) {
             org.setParentId(DEF_PARENT_ID);
-            org.setTreePath(EMPTY);
+            org.setTreePath(DEF_ROOT_PATH);
         } else {
             Org parent = this.baseService.getByIdCache(org.getParentId());
             ArgumentAssert.notNull(parent, "请正确填写父级组织");
 
-            org.setTreePath(StrUtil.join(DEF_ROOT_PATH, parent.getTreePath(), parent.getId()));
+            org.setTreePath(TreeUtil.getTreePath(parent.getTreePath(), parent.getId()));
         }
     }
 

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserUpdatePasswordDTO.java
Patch:
@@ -53,15 +53,15 @@ public class UserUpdatePasswordDTO implements Serializable {
      */
     @ApiModelProperty(value = "密码")
     @NotEmpty(message = "密码不能为空")
-    @Size(min = 6, max = 64, message = "密码长度不能超过64")
+    @Size(min = 6, max = 64, message = "密码长度不能小于6且超过64个字符")
     private String password;
 
     /**
      * 密码
      */
     @ApiModelProperty(value = "确认密码")
     @NotEmpty(message = "确认密码不能为空")
-    @Size(min = 6, max = 64, message = "确认密码长度不能超过64")
+    @Size(min = 6, max = 64, message = "密码长度不能小于6且超过64个字符")
     private String confirmPassword;
     /**
      * 租户编码

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -120,6 +120,7 @@ public IPage<User> findPage(IPage<User> page, LbqWrapper<User> wrapper) {
     @Override
     @Transactional(rollbackFor = Exception.class)
     public Boolean updatePassword(UserUpdatePasswordDTO data) {
+        ArgumentAssert.notEmpty(data.getOldPassword(), "当前密码不能为空");
         User user = getById(data.getId());
         ArgumentAssert.notNull(user, "用户不存在");
         ArgumentAssert.equals(user.getId(), ContextUtil.getUserId(), "只能修改自己的密码");

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/dto/auth/UserUpdatePasswordDTO.java
Patch:
@@ -45,7 +45,7 @@ public class UserUpdatePasswordDTO implements Serializable {
      * 密码
      */
     @ApiModelProperty(value = "当前密码")
-    @NotEmpty(message = "当前密码不能为空")
+//    @NotEmpty(message = "当前密码不能为空")
     @Size(max = 64, message = "当前密码长度不能超过64")
     private String oldPassword;
     /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/UserService.java
Patch:
@@ -193,5 +193,5 @@ public interface UserService extends SuperCacheService<User>, LoadService {
      *
      * @return
      */
-    Integer todayUserCount();
+    Long todayUserCount();
 }

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -330,7 +330,7 @@ public boolean initUser(User user) {
 
     @Override
     @Transactional(readOnly = true)
-    public Integer todayUserCount() {
+    public Long todayUserCount() {
         return count(Wraps.<User>lbQ().leFooter(User::getCreateTime, LocalDateTime.now()).geHeader(User::getCreateTime, LocalDateTime.now()));
     }
 

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/DictionaryServiceImpl.java
Patch:
@@ -62,7 +62,7 @@ public class DictionaryServiceImpl extends SuperServiceImpl<DictionaryMapper, Di
     @Override
     @Transactional(rollbackFor = Exception.class)
     public Dictionary saveType(DictionaryTypeSaveDTO dictType) {
-        int typeCount = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, dictType.getType()));
+        long typeCount = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, dictType.getType()));
         if (typeCount > 0) {
             throw BizException.validFail("字典类型[%s]已存在", dictType.getType());
         }
@@ -118,7 +118,7 @@ public IPage<Dictionary> pageType(IPage<Dictionary> page, DictionaryPageQuery qu
     @Override
     @Transactional(rollbackFor = Exception.class)
     public boolean save(Dictionary model) {
-        int count = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, model.getType()).eq(Dictionary::getCode, model.getCode()));
+        long count = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, model.getType()).eq(Dictionary::getCode, model.getCode()));
         ArgumentAssert.isFalse(count > 0, StrUtil.format("字典[{}]已经存在，请勿重复创建", model.getCode()));
 
         Dictionary type = getOne(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, model.getType()).eq(Dictionary::getCode, DefValConstants.DICT_PLACEHOLDER));
@@ -148,7 +148,7 @@ public boolean updateById(Dictionary model) {
     }
 
     private boolean update(Dictionary model, Function<Dictionary, Boolean> function) {
-        int count = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, model.getType())
+        long count = count(Wraps.<Dictionary>lbQ().eq(Dictionary::getType, model.getType())
                 .eq(Dictionary::getCode, model.getCode()).ne(Dictionary::getId, model.getId()));
         ArgumentAssert.isFalse(count > 0, StrUtil.format("字典[{}]已经存在，请勿重复创建", model.getCode()));
         Dictionary old = getById(model.getId());

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/ParameterServiceImpl.java
Patch:
@@ -69,7 +69,7 @@ public boolean check(String key) {
     @Override
     @Transactional(rollbackFor = Exception.class)
     public boolean updateById(Parameter model) {
-        int count = count(Wraps.<Parameter>lbQ().eq(Parameter::getKey, model.getKey()).ne(Parameter::getId, model.getId()));
+        long count = count(Wraps.<Parameter>lbQ().eq(Parameter::getKey, model.getKey()).ne(Parameter::getId, model.getId()));
         ArgumentAssert.isFalse(count > 0, StrUtil.format("参数key[{}]已经存在，请勿重复创建", model.getKey()));
 
         boolean bool = SqlHelper.retBool(getBaseMapper().updateById(model));

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -92,7 +92,7 @@ public boolean remove(List<Long> ids) {
         if (ids.isEmpty()) {
             return true;
         }
-        Integer userCount = userMapper.selectCount(Wraps.<User>lbQ().in(User::getOrgId, ids));
+        Long userCount = userMapper.selectCount(Wraps.<User>lbQ().in(User::getOrgId, ids));
         ArgumentAssert.isFalse(userCount > 0, "您选择的组织下还存在用户，禁止删除！请先情况改组织下所有用户后，在进行删除！");
 
         List<Org> list = this.findChildren(ids);

File: lamp-authority/lamp-authority-controller/src/main/java/top/tangyh/lamp/authority/controller/common/AreaController.java
Patch:
@@ -45,7 +45,7 @@ public class AreaController extends SuperCacheController<AreaService, Long, Area
     @GetMapping("/check/{code}")
     @SysLog("检测地区编码是否重复")
     public R<Boolean> check(@RequestParam(required = false) Long id, @PathVariable String code) {
-        int count = baseService.count(Wraps.<Area>lbQ().eq(Area::getCode, code).ne(Area::getId, id));
+        long count = baseService.count(Wraps.<Area>lbQ().eq(Area::getCode, code).ne(Area::getId, id));
         return success(count > 0);
     }
 

File: lamp-authority/lamp-authority-entity/src/main/java/top/tangyh/lamp/authority/entity/common/OptLog.java
Patch:
@@ -5,7 +5,7 @@
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.SuperEntity;
 import top.tangyh.lamp.authority.enumeration.common.LogType;
-import top.tangyh.lamp.common.enums.HttpMethod;
+import top.tangyh.lamp.common.enumeration.HttpMethod;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/utils/FileTypeUtil.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import cn.hutool.core.util.StrUtil;
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.File;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/entity/File.java
Patch:
@@ -3,7 +3,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import top.tangyh.lamp.file.enumeration.FileStorageType;
 import lombok.AllArgsConstructor;
 import lombok.Builder;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/vo/param/FileParamVO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.file.vo.param;
 
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import top.tangyh.lamp.file.enumeration.FileStorageType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;

File: lamp-file/lamp-file-entity/src/main/java/top/tangyh/lamp/file/vo/result/FileResultVO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.file.vo.result;
 
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-msg/lamp-msg-biz/src/main/java/top/tangyh/lamp/msg/service/impl/MsgServiceImpl.java
Patch:
@@ -77,8 +77,7 @@ public boolean delete(List<Long> ids, Long userId) {
                 .in(MsgReceive::getMsgId, ids));
 
         for (Long msgCenterId : ids) {
-            int count = msgReceiveService.count(Wraps.<MsgReceive>lbQ()
-                    .eq(MsgReceive::getMsgId, msgCenterId));
+            long count = msgReceiveService.count(Wraps.<MsgReceive>lbQ().eq(MsgReceive::getMsgId, msgCenterId));
             log.info("count={}", count);
             if (count <= 0) {
                 super.remove(Wraps.<Msg>lbQ().eq(Msg::getId, msgCenterId));

File: lamp-oauth/lamp-oauth-biz/src/main/java/top/tangyh/lamp/oauth/granter/AbstractTokenGranter.java
Patch:
@@ -215,7 +215,7 @@ protected R<User> getUser(String account, String password) {
     protected AuthInfo createToken(User user) {
         JwtUserInfo userInfo = new JwtUserInfo(user.getId(), user.getAccount(), user.getName());
         AuthInfo authInfo = tokenUtil.createAuthInfo(userInfo, null);
-        AppendixResultVO appendixResultVO = appendixService.getBiz(user.getId(), AppendixType.Authority.BASE_USER_AVATAR);
+        AppendixResultVO appendixResultVO = appendixService.getByBiz(user.getId(), AppendixType.Authority.BASE_USER_AVATAR);
         authInfo.setAvatarId(appendixResultVO != null ? appendixResultVO.getId() : null);
         authInfo.setWorkDescribe(user.getWorkDescribe());
         return authInfo;

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/enumeration/DateType.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enums;
+package top.tangyh.lamp.common.enumeration;
 
 import top.tangyh.basic.base.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/enumeration/FileType.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enums;
+package top.tangyh.lamp.common.enumeration;
 
 import top.tangyh.basic.base.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/enumeration/HttpMethod.java
Patch:
@@ -1,4 +1,4 @@
-package top.tangyh.lamp.common.enums;
+package top.tangyh.lamp.common.enumeration;
 
 import top.tangyh.basic.base.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/vo/result/AppendixResultVO.java
Patch:
@@ -1,6 +1,6 @@
 package top.tangyh.lamp.common.vo.result;
 
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/vo/save/AppendixSaveVO.java
Patch:
@@ -9,7 +9,7 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Size;

File: lamp-public/lamp-file-sdk/src/main/java/top/tangyh/lamp/file/entity/Appendix.java
Patch:
@@ -3,7 +3,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import top.tangyh.basic.base.entity.Entity;
-import top.tangyh.lamp.common.enums.FileType;
+import top.tangyh.lamp.common.enumeration.FileType;
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;

File: lamp-oauth/lamp-oauth-server/src/main/java/top/tangyh/lamp/oauth/config/OauthWebConfiguration.java
Patch:
@@ -1,17 +1,20 @@
 package top.tangyh.lamp.oauth.config;
 
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
 import top.tangyh.lamp.authority.service.common.OptLogService;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import top.tangyh.lamp.common.properties.SystemProperties;
 
 /**
  * @author zuihou
  * @date 2017-12-15 14:42
  */
 @Configuration
+@EnableConfigurationProperties({SystemProperties.class})
 public class OauthWebConfiguration extends BaseConfig {
 
     /**

File: lamp-oauth/lamp-oauth-server/src/main/java/top/tangyh/lamp/oauth/config/OauthWebConfiguration.java
Patch:
@@ -1,17 +1,20 @@
 package top.tangyh.lamp.oauth.config;
 
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import top.tangyh.basic.boot.config.BaseConfig;
 import top.tangyh.basic.log.event.SysLogListener;
 import top.tangyh.lamp.authority.service.common.OptLogService;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import top.tangyh.lamp.common.properties.SystemProperties;
 
 /**
  * @author zuihou
  * @date 2017-12-15 14:42
  */
 @Configuration
+@EnableConfigurationProperties(SystemProperties.class)
 public class OauthWebConfiguration extends BaseConfig {
 
     /**

File: lamp-authority/lamp-authority-biz/src/main/java/top/tangyh/lamp/authority/service/common/impl/AreaServiceImpl.java
Patch:
@@ -1,6 +1,7 @@
 package top.tangyh.lamp.authority.service.common.impl;
 
 import cn.hutool.core.convert.Convert;
+
 import top.tangyh.basic.base.service.SuperCacheServiceImpl;
 import top.tangyh.basic.cache.model.CacheKeyBuilder;
 import top.tangyh.basic.database.mybatis.conditions.Wraps;

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/fastdfs/FastDfsFileChunkStrategyImpl.java
Patch:
@@ -35,7 +35,7 @@ protected void copyFile(File file) {
 //            byte[] content = storageClient.downloadFile(file.getGroup(), file.getPath(), callback);
 //            InputStream in = new ByteArrayInputStream(content);
 //            StorePath storePath = storageClient.uploadFile(file.getGroup(), in, file.getSize(), file.getExt());
-//            file.setUrl(fileProperties.getUriPrefix() + storePath.getFullPath());
+//            file.setUrl(fileProperties.getUrlPrefix() + storePath.getFullPath());
 //            file.setGroup(storePath.getGroup());
 //            file.setPath(storePath.getPath());
     }
@@ -63,8 +63,7 @@ protected R<File> merge(List<java.io.File> files, String path, String fileName,
 
         long end = System.currentTimeMillis();
         log.info("上传耗时={}", (end - start));
-        String url = fileProperties.getLocal().getEndpoint() +
-                storePath.getFullPath();
+        String url = fileProperties.getFastDfs().getUrlPrefix() + storePath.getFullPath();
         File filePo = File.builder()
                 .url(url)
                 .bucket(storePath.getGroup())

File: lamp-file/lamp-file-biz/src/main/java/top/tangyh/lamp/file/strategy/impl/local/LocalFileChunkStrategyImpl.java
Patch:
@@ -102,7 +102,7 @@ protected R<File> merge(List<java.io.File> files, String path, String fileName,
 
         String relativePath = FileTypeUtil.getRelativePath(Paths.get(fileProperties.getLocal().getStoragePath()).toString(), outputFile.getAbsolutePath());
         log.info("relativePath={}, getStoragePath={}, getAbsolutePath={}", relativePath, fileProperties.getLocal().getStoragePath(), outputFile.getAbsolutePath());
-        String url = fileProperties.getLocal().getEndpoint() +
+        String url = fileProperties.getLocal().getUrlPrefix() +
                 relativePath +
                 StrPool.SLASH +
                 fileName;

File: lamp-gateway/lamp-gateway-server/src/main/java/top/tangyh/lamp/gateway/filter/TokenContextFilter.java
Patch:
@@ -122,9 +122,9 @@ public Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain) {
                 return token;
             }
         } catch (BizException e) {
-            return errorResponse(response, e.getMessage(), e.getCode(), HttpStatus.UNAUTHORIZED);
+            return errorResponse(response, e.getMessage(), e.getCode(), HttpStatus.BAD_REQUEST);
         } catch (Exception e) {
-            return errorResponse(response, "验证token出错", R.FAIL_CODE, HttpStatus.UNAUTHORIZED);
+            return errorResponse(response, "验证token出错", R.FAIL_CODE, HttpStatus.BAD_REQUEST);
         }
 
         ServerHttpRequest build = mutate.build();

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/constant/SwaggerConstants.java
Patch:
@@ -6,6 +6,7 @@
  */
 public class SwaggerConstants {
     public static final String PARAM_TYPE_QUERY = "query";
+    public static final String PARAM_TYPE_PATH = "path";
 
     public static final String DATA_TYPE_BOOLEAN = "boolean";
     public static final String DATA_TYPE_LONG = "long";

File: lamp-public/lamp-common/src/main/java/top/tangyh/lamp/common/vo/save/AppendixSaveVO.java
Patch:
@@ -1,6 +1,5 @@
 package top.tangyh.lamp.common.vo.save;
 
-import top.tangyh.lamp.common.enums.FileType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
@@ -10,6 +9,7 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
+import top.tangyh.lamp.common.enums.FileType;
 
 import javax.validation.constraints.NotBlank;
 import javax.validation.constraints.Size;
@@ -53,7 +53,6 @@ public class AppendixSaveVO implements Serializable {
      * 文件类型
      */
     @ApiModelProperty(value = "文件类型")
-    @Size(max = 255, message = "文件类型长度不能超过255")
     private FileType fileType;
     /**
      * 桶

File: lamp-public/lamp-common/src/main/java/com/tangyh/lamp/common/constant/EchoConstants.java
Patch:
@@ -12,8 +12,6 @@ public class EchoConstants {
     private EchoConstants() {
     }
 
-    public static final String FIND_BY_IDS = "findByIds";
-
     /**
      * 数据字典项 feign查询类 全类名
      */

File: lamp-file/lamp-file-biz/src/main/java/com/tangyh/lamp/file/strategy/FileChunkStrategy.java
Patch:
@@ -3,7 +3,7 @@
 
 import com.tangyh.basic.base.R;
 import com.tangyh.lamp.file.dto.chunk.FileChunksMergeDTO;
-import com.tangyh.lamp.file.entity.Attachment;
+import com.tangyh.lamp.file.entity.File;
 
 /**
  * 文件分片处理策略类
@@ -20,13 +20,13 @@ public interface FileChunkStrategy {
      * @param userId 用户id
      * @return 附件
      */
-    Attachment md5Check(String md5, Long userId);
+    File md5Check(String md5, Long userId);
 
     /**
      * 合并文件
      *
      * @param merge 合并参数
      * @return 附件
      */
-    R<Attachment> chunksMerge(FileChunksMergeDTO merge);
+    R<File> chunksMerge(FileChunksMergeDTO merge);
 }

File: lamp-file/lamp-file-biz/src/main/java/com/tangyh/lamp/file/utils/FileTypeUtil.java
Patch:
@@ -2,7 +2,7 @@
 
 
 import cn.hutool.core.util.StrUtil;
-import com.tangyh.lamp.file.enumeration.FileType;
+import com.tangyh.lamp.common.enums.FileType;
 import lombok.extern.slf4j.Slf4j;
 
 import java.io.File;

File: lamp-file/lamp-file-entity/src/main/java/com/tangyh/lamp/file/enumeration/FileStorageType.java
Patch:
@@ -32,8 +32,9 @@ public enum FileStorageType implements BaseEnum {
      * minIO
      */
     MIN_IO("MinIO"),
-    ALI("阿里云OSS"),
-    QINIU("七牛云OSS"),
+    ALI_OSS("阿里云OSS"),
+    QINIU_OSS("七牛云OSS"),
+    HUAWEI_OSS("华为云OSS"),
     ;
 
     @ApiModelProperty(value = "描述")

File: lamp-gateway/lamp-gateway-server/src/main/java/com/tangyh/lamp/gateway/filter/TokenContextFilter.java
Patch:
@@ -191,6 +191,7 @@ private void parseTenant(ServerHttpRequest request, ServerHttpRequest.Builder mu
         // 判断是否忽略tenant
         if ("NONE".equals(multiTenantType)) {
             addHeader(mutate, JWT_KEY_TENANT, "_NONE");
+            ContextUtil.setTenant("_NONE");
             MDC.put(JWT_KEY_TENANT, StrPool.EMPTY);
             return;
         }

File: lamp-msg/lamp-msg-entity/src/main/java/com/tangyh/lamp/sms/dto/SmsTaskSaveDTO.java
Patch:
@@ -1,5 +1,6 @@
 package com.tangyh.lamp.sms.dto;
 
+import com.tangyh.basic.model.Kv;
 import com.tangyh.lamp.sms.enumeration.SourceType;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
@@ -16,7 +17,6 @@
 import java.io.Serializable;
 import java.time.LocalDateTime;
 import java.util.Arrays;
-import java.util.LinkedHashMap;
 import java.util.List;
 
 /**
@@ -66,7 +66,7 @@ public class SmsTaskSaveDTO implements Serializable {
      * 需要封装为{‘key’:’value’, ...}格式且key必须有序
      */
     @ApiModelProperty(value = "参数")
-    private LinkedHashMap<String, String> templateParam;
+    private List<Kv> templateParam;
 
     /**
      * 发送时间
@@ -93,7 +93,7 @@ public class SmsTaskSaveDTO implements Serializable {
      * @param templateParam 模版参数
      * @return 短信任务
      */
-    public SmsTaskSaveDTO build(Long templateId, LinkedHashMap templateParam, String... telNum) {
+    public SmsTaskSaveDTO build(Long templateId, List<Kv> templateParam, String... telNum) {
         return SmsTaskSaveDTO.builder()
                 .sourceType(SourceType.SERVICE)
                 .templateId(templateId)

File: lamp-msg/lamp-msg-entity/src/main/java/com/tangyh/lamp/sms/dto/SmsTemplateSaveDTO.java
Patch:
@@ -70,6 +70,7 @@ public class SmsTemplateSaveDTO implements Serializable {
      * 模板名称
      */
     @ApiModelProperty(value = "模板名称")
+    @NotEmpty(message = "请填写模板名称")
     @Size(max = 255, message = "模板名称长度不能超过255")
     private String name;
     /**

File: lamp-msg/lamp-msg-entity/src/main/java/com/tangyh/lamp/sms/dto/SmsTemplateUpdateDTO.java
Patch:
@@ -75,6 +75,7 @@ public class SmsTemplateUpdateDTO implements Serializable {
      */
     @ApiModelProperty(value = "模板名称")
     @Size(max = 255, message = "模板名称长度不能超过255")
+    @NotEmpty(message = "请填写模板名称")
     private String name;
     /**
      * 模板内容

File: lamp-msg/lamp-sms-biz/src/main/java/com/tangyh/lamp/sms/strategy/SmsContext.java
Patch:
@@ -8,6 +8,7 @@
 import com.tangyh.lamp.sms.entity.SmsTemplate;
 import org.springframework.scheduling.annotation.Async;
 import org.springframework.stereotype.Component;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
@@ -45,6 +46,7 @@ public SmsContext(
      * @return 任务id
      */
     @Async
+    @Transactional(rollbackFor = Exception.class)
     public void smsSend(Long taskId) {
         SmsTask smsTask = smsTaskMapper.selectById(taskId);
         BizAssert.notNull(smsTask, "短信任务尚未保存成功");

File: lamp-msg/lamp-sms-biz/src/main/java/com/tangyh/lamp/sms/strategy/impl/AbstractSmsStrategy.java
Patch:
@@ -56,6 +56,8 @@ public R<String> sendSms(SmsTask task, SmsTemplate template) {
                         .taskId(task.getId()).telNum(smsSendStatus.getTelNum()).appId(appId).appSecret(appSecret)
                         .signName(signName).templateCode(templateCode).endPoint(endPoint)
                         .templateParams(templateParam)
+                        .templateContent(template.getContent())
+                        .smsContent(task.getContent())
                         .build());
 
                 log.info("phone={}, result={}", smsSendStatus.getTelNum(), result);

File: lamp-msg/lamp-sms-controller/src/main/java/com/tangyh/lamp/sms/controller/SmsTaskController.java
Patch:
@@ -65,6 +65,9 @@ public class SmsTaskController extends SuperController<SmsTaskService, Long, Sms
     @PreAuth("hasAnyPermission('{}view')")
     public R<SmsTaskResultVO> detail(@PathVariable Long id) {
         SmsTaskResultVO resultVO = BeanUtil.toBean(getBaseService().getById(id), SmsTaskResultVO.class);
+        if (resultVO == null) {
+            return R.success(null);
+        }
         List<SmsSendStatus> list = smsSendStatusService.list(Wraps.<SmsSendStatus>lbQ()
                 .eq(SmsSendStatus::getTaskId, id));
         resultVO.setTelNumList(list.stream().map(SmsSendStatus::getTelNum).collect(Collectors.toList()));

File: lamp-oauth/lamp-oauth-api/src/main/java/com/tangyh/lamp/oauth/api/ParameterApi.java
Patch:
@@ -2,7 +2,6 @@
 
 
 import com.tangyh.basic.base.R;
-import com.tangyh.lamp.oauth.api.hystrix.ParameterApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
@@ -13,8 +12,7 @@
  * @author zuihou
  * @date 2020年04月02日22:53:56
  */
-@FeignClient(name = "${lamp.feign.oauth-server:lamp-oauth-server}", path = "/parameter",
-        qualifier = "parameterApi", fallback = ParameterApiFallback.class)
+@FeignClient(name = "${lamp.feign.oauth-server:lamp-oauth-server}", path = "/parameter" /* ,fallback = ParameterApiFallback.class*/)
 public interface ParameterApi {
 
     /**

File: lamp-oauth/lamp-oauth-controller/src/main/java/com/tangyh/lamp/oauth/controller/OauthOptLogController.java
Patch:
@@ -1,11 +1,11 @@
 package com.tangyh.lamp.oauth.controller;
 
 
-import com.tangyh.lamp.authority.entity.common.OptLog;
-import com.tangyh.lamp.authority.service.common.OptLogService;
 import com.tangyh.basic.base.R;
 import com.tangyh.basic.log.entity.OptLogDTO;
 import com.tangyh.basic.utils.BeanPlusUtil;
+import com.tangyh.lamp.authority.entity.common.OptLog;
+import com.tangyh.lamp.authority.service.common.OptLogService;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
 import lombok.AllArgsConstructor;

File: lamp-public/lamp-common/src/main/java/com/tangyh/lamp/common/enums/FileType.java
Patch:
@@ -1,4 +1,4 @@
-package com.tangyh.lamp.file.enumeration;
+package com.tangyh.lamp.common.enums;
 
 import com.tangyh.basic.base.BaseEnum;
 import io.swagger.annotations.ApiModel;

File: lamp-tenant/lamp-tenant-entity/src/main/java/com/tangyh/lamp/tenant/dto/TenantConnectDTO.java
Patch:
@@ -26,6 +26,7 @@
 @ApiModel(value = "TenantConnectDTO", description = "租户连接")
 public class TenantConnectDTO {
     @ApiModelProperty(value = "企业ID")
+    @NotNull(message = "ID不能为空")
     private Long id;
     @NotEmpty(message = "企业编码不能为空")
     private String tenant;
@@ -34,10 +35,10 @@ public class TenantConnectDTO {
      * REMOTE： 不同的数据库(物理)，需要先在DatasourceConfig表配置链接源信息，然后指定以下字段（xxxDatasource）
      */
     @ApiModelProperty(value = "连接类型", example = "LOCAL,REMOTE")
+    @NotNull(message = "连接类型不能为空")
     private TenantConnectTypeEnum connectType;
 
     @ApiModelProperty(value = "权限服务连接源")
-    @NotNull(message = "权限服务连接源不能为空")
     private Long authorityDatasource;
     @ApiModelProperty(value = "文件服务连接源")
     private Long fileDatasource;

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/service/auth/impl/RoleAuthorityServiceImpl.java
Patch:
@@ -44,6 +44,7 @@
  */
 @Slf4j
 @Service
+
 @RequiredArgsConstructor
 public class RoleAuthorityServiceImpl extends SuperServiceImpl<RoleAuthorityMapper, RoleAuthority> implements RoleAuthorityService {
 

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/service/common/impl/AreaServiceImpl.java
Patch:
@@ -1,7 +1,6 @@
 package com.tangyh.lamp.authority.service.common.impl;
 
 import cn.hutool.core.convert.Convert;
-
 import com.tangyh.basic.base.service.SuperCacheServiceImpl;
 import com.tangyh.basic.cache.model.CacheKeyBuilder;
 import com.tangyh.basic.database.mybatis.conditions.Wraps;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/auth/LoginParamDTO.java
Patch:
@@ -31,6 +31,7 @@ public class LoginParamDTO {
     private String key;
     @ApiModelProperty(value = "验证码")
     private String code;
+
     @ApiModelProperty(value = "账号")
     private String account;
     @ApiModelProperty(value = "密码")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/common/AreaPageQuery.java
Patch:
@@ -67,7 +67,7 @@ public class AreaPageQuery implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     private String level;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/common/AreaSaveDTO.java
Patch:
@@ -82,7 +82,7 @@ public class AreaSaveDTO implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     @Size(max = 10, message = "行政区级长度不能超过10")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/common/AreaUpdateDTO.java
Patch:
@@ -88,7 +88,7 @@ public class AreaUpdateDTO implements Serializable {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     @Size(max = 10, message = "行政区级长度不能超过10")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/OrgPageQuery.java
Patch:
@@ -62,7 +62,7 @@ public class OrgPageQuery implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     private String type;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/OrgSaveDTO.java
Patch:
@@ -57,7 +57,7 @@ public class OrgSaveDTO implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     @Size(max = 2, message = "类型长度不能超过2")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/OrgUpdateDTO.java
Patch:
@@ -64,7 +64,7 @@ public class OrgUpdateDTO implements Serializable {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     @Size(max = 2, message = "类型长度不能超过2")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/StationPageQuery.java
Patch:
@@ -42,7 +42,7 @@ public class StationPageQuery implements Serializable {
      * 组织
      * #c_org
      *
-     * @Echo(api = ORG_ID_CLASS, method = FIND_BY_IDS, beanClass = Org.class)
+     * @Echo(api = ORG_ID_CLASS,  beanClass = Org.class)
      */
     @ApiModelProperty(value = "组织")
     private Long orgId;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/StationSaveDTO.java
Patch:
@@ -46,7 +46,7 @@ public class StationSaveDTO implements Serializable {
      * 组织
      * #c_org
      *
-     * @Echo(api = ORG_ID_CLASS, method = FIND_BY_IDS, beanClass = Org.class)
+     * @Echo(api = ORG_ID_CLASS,  beanClass = Org.class)
      */
     @ApiModelProperty(value = "组织")
     private Long orgId;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/core/StationUpdateDTO.java
Patch:
@@ -52,7 +52,7 @@ public class StationUpdateDTO implements Serializable {
      * 组织
      * #c_org
      *
-     * @Echo(api = ORG_ID_CLASS, method = FIND_BY_IDS, beanClass = Org.class)
+     * @Echo(api = ORG_ID_CLASS,  beanClass = Org.class)
      */
     @ApiModelProperty(value = "组织")
     private Long orgId;

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/entity/common/Area.java
Patch:
@@ -25,7 +25,7 @@
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
 import static com.tangyh.lamp.common.constant.EchoConstants.DICTIONARY_ITEM_CLASS;
-import static com.tangyh.lamp.common.constant.EchoConstants.FIND_NAME_BY_IDS;
+
 
 /**
  * <p>
@@ -89,12 +89,12 @@ public class Area extends TreeEntity<Area, Long> implements EchoVO {
     /**
      * 行政区级
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.AREA_LEVEL)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.AREA_LEVEL)
      */
     @ApiModelProperty(value = "行政区级")
     @Size(max = 10, message = "行政区级长度不能超过10")
     @TableField(value = "level", condition = LIKE)
-    @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.AREA_LEVEL)
+    @Echo(api = DICTIONARY_ITEM_CLASS, dictType = DictionaryType.AREA_LEVEL)
     @Excel(name = "行政区级")
     private String level;
 

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/entity/core/Org.java
Patch:
@@ -24,7 +24,7 @@
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
 import static com.tangyh.lamp.common.constant.EchoConstants.DICTIONARY_ITEM_CLASS;
-import static com.tangyh.lamp.common.constant.EchoConstants.FIND_NAME_BY_IDS;
+
 
 /**
  * <p>
@@ -51,12 +51,12 @@ public class Org extends TreeEntity<Org, Long> implements EchoVO {
     /**
      * 类型
      *
-     * @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.ORG_TYPE)
+     * @Echo(api = DICTIONARY_ITEM_CLASS,  dictType = DictionaryType.ORG_TYPE)
      */
     @ApiModelProperty(value = "类型")
     @Size(max = 2, message = "类型长度不能超过2")
     @TableField(value = "type_", condition = LIKE)
-    @Echo(api = DICTIONARY_ITEM_CLASS, method = FIND_NAME_BY_IDS, dictType = DictionaryType.ORG_TYPE)
+    @Echo(api = DICTIONARY_ITEM_CLASS, dictType = DictionaryType.ORG_TYPE)
     @Excel(name = "类型")
     private String type;
 

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/entity/core/Station.java
Patch:
@@ -23,7 +23,6 @@
 import java.util.Map;
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
-import static com.tangyh.lamp.common.constant.EchoConstants.FIND_BY_IDS;
 import static com.tangyh.lamp.common.constant.EchoConstants.ORG_ID_CLASS;
 
 /**
@@ -62,11 +61,11 @@ public class Station extends Entity<Long> implements EchoVO {
      * 组织
      * #c_org
      *
-     * @Echo(api = ORG_ID_CLASS, method = FIND_BY_IDS, beanClass = Org.class)
+     * @Echo(api = ORG_ID_CLASS,  beanClass = Org.class)
      */
     @ApiModelProperty(value = "组织")
     @TableField("org_id")
-    @Echo(api = ORG_ID_CLASS, method = FIND_BY_IDS, beanClass = Org.class)
+    @Echo(api = ORG_ID_CLASS, beanClass = Org.class)
     @Excel(name = "组织")
     private Long orgId;
 

File: lamp-authority/lamp-authority-server/src/main/java/com/tangyh/lamp/authority/config/datasource/AuthorityDatabaseAutoConfiguration.java
Patch:
@@ -47,7 +47,7 @@
         annotationClass = Repository.class,
         sqlSessionFactoryRef = BaseMasterDatabaseConfiguration.DATABASE_PREFIX + "SqlSessionFactory")
 @EnableConfigurationProperties({MybatisPlusProperties.class})
-@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}')")
+@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}') && !'DATASOURCE_COLUMN'.equals('${lamp.database.multiTenantType}') ")
 public class AuthorityDatabaseAutoConfiguration extends BaseMasterDatabaseConfiguration {
 
     public AuthorityDatabaseAutoConfiguration(MybatisPlusProperties properties,

File: lamp-file/lamp-file-biz/src/main/java/com/tangyh/lamp/file/strategy/impl/local/LocalFileChunkStrategyImpl.java
Patch:
@@ -41,8 +41,8 @@ public LocalFileChunkStrategyImpl(AttachmentService fileService, FileServerPrope
      * @return 随机名
      */
     private String randomFileName(String originalName) {
-        String[] ext = StrUtil.split(originalName, ".");
-        return UUID.randomUUID().toString() + StrPool.DOT + ext[ext.length - 1];
+        String[] ext = StrUtil.splitToArray(originalName, StrPool.DOT);
+        return UUID.randomUUID() + StrPool.DOT + ext[ext.length - 1];
     }
 
     @Override

File: lamp-file/lamp-file-server/src/main/java/com/tangyh/lamp/file/config/datasource/FileDatabaseAutoConfiguration.java
Patch:
@@ -48,7 +48,7 @@
         annotationClass = Repository.class,
         sqlSessionFactoryRef = FileDatabaseAutoConfiguration.DATABASE_PREFIX + "SqlSessionFactory")
 @EnableConfigurationProperties({MybatisPlusProperties.class})
-@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}')")
+@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}') && !'DATASOURCE_COLUMN'.equals('${lamp.database.multiTenantType}') ")
 public class FileDatabaseAutoConfiguration extends BaseMasterDatabaseConfiguration {
 
     public FileDatabaseAutoConfiguration(MybatisPlusProperties properties,

File: lamp-msg/lamp-msg-entity/src/main/java/com/tangyh/lamp/sms/entity/SmsTask.java
Patch:
@@ -26,7 +26,6 @@
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
 import static com.tangyh.basic.utils.DateUtils.DEFAULT_DATE_TIME_FORMAT;
-import static com.tangyh.lamp.common.constant.EchoConstants.FIND_NAME_BY_IDS;
 import static com.tangyh.lamp.common.constant.EchoConstants.SMS_TEMPLATE_ID_CLASS;
 
 /**
@@ -59,7 +58,7 @@ public class SmsTask extends Entity<Long> implements EchoVO {
     @NotNull(message = "请填写短信模板")
     @TableField(value = "template_id")
     @Excel(name = "短信模板")
-    @Echo(api = SMS_TEMPLATE_ID_CLASS, method = FIND_NAME_BY_IDS)
+    @Echo(api = SMS_TEMPLATE_ID_CLASS)
     private Long templateId;
 
     /**

File: lamp-msg/lamp-msg-server/src/main/java/com/tangyh/lamp/msg/config/datasource/MsgDatabaseAutoConfiguration.java
Patch:
@@ -48,7 +48,7 @@
         annotationClass = Repository.class,
         sqlSessionFactoryRef = MsgDatabaseAutoConfiguration.DATABASE_PREFIX + "SqlSessionFactory")
 @EnableConfigurationProperties({MybatisPlusProperties.class})
-@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}')")
+@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}') && !'DATASOURCE_COLUMN'.equals('${lamp.database.multiTenantType}') ")
 public class MsgDatabaseAutoConfiguration extends BaseMasterDatabaseConfiguration {
 
 

File: lamp-msg/lamp-sms-biz/src/main/java/com/tangyh/lamp/sms/util/PhoneUtils.java
Patch:
@@ -41,7 +41,7 @@ public static Set<String> getPhone(String receiverPhone) {
     public static Set<String> getPhone(String receiverPhone, String regEx) {
         //判断参数类型
         if (!receiverPhone.contains(PHONE_SEPARATOR)) {
-            String[] list = StrUtil.split(receiverPhone, CONTACTS_SEPARATOR);
+            String[] list = StrUtil.splitToArray(receiverPhone, CONTACTS_SEPARATOR);
             return new LinkedHashSet<>(Arrays.asList(list));
         }
 

File: lamp-oauth/lamp-oauth-controller/src/main/java/com/tangyh/lamp/oauth/controller/OauthGeneralController.java
Patch:
@@ -1,6 +1,6 @@
 package com.tangyh.lamp.oauth.controller;
 
-import cn.hutool.core.collection.CollUtil;
+import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
 import com.tangyh.basic.base.BaseEnum;
 import com.tangyh.basic.base.R;
@@ -147,7 +147,7 @@ public R<Map<String, List<Dictionary>>> list(@RequestBody String[] types) {
     }
 
     private static Map<String, List<Option>> mapOptionByDict(Map<String, List<Dictionary>> map) {
-        if (CollUtil.isEmpty(map)) {
+        if (MapUtil.isEmpty(map)) {
             return Collections.emptyMap();
         }
         Map<String, List<Option>> newMap = new HashMap<>();

File: lamp-oauth/lamp-oauth-server/src/main/java/com/tangyh/lamp/oauth/config/datasource/OauthDatabaseAutoConfiguration.java
Patch:
@@ -48,7 +48,7 @@
         annotationClass = Repository.class,
         sqlSessionFactoryRef = OauthDatabaseAutoConfiguration.DATABASE_PREFIX + "SqlSessionFactory")
 @EnableConfigurationProperties({MybatisPlusProperties.class})
-@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}')")
+@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}') && !'DATASOURCE_COLUMN'.equals('${lamp.database.multiTenantType}') ")
 public class OauthDatabaseAutoConfiguration extends BaseMasterDatabaseConfiguration {
 
     public OauthDatabaseAutoConfiguration(MybatisPlusProperties properties,

File: lamp-public/lamp-common/src/main/java/com/tangyh/lamp/common/constant/EchoConstants.java
Patch:
@@ -12,7 +12,6 @@ public class EchoConstants {
     private EchoConstants() {
     }
 
-    public static final String FIND_NAME_BY_IDS = "findNameByIds";
     public static final String FIND_BY_IDS = "findByIds";
 
     /**
@@ -51,7 +50,6 @@ private EchoConstants() {
      */
     public static final String STATION_ID_FEIGN_CLASS = "com.tangyh.lamp.oauth.api.StationApi";
 
-
     /**
      * 短信模板 service查询类
      */

File: lamp-tenant/lamp-tenant-server/src/main/java/com/tangyh/lamp/tenant/config/datasource/TenantDatabaseAutoConfiguration.java
Patch:
@@ -47,7 +47,7 @@
         annotationClass = Repository.class,
         sqlSessionFactoryRef = BaseMasterDatabaseConfiguration.DATABASE_PREFIX + "SqlSessionFactory")
 @EnableConfigurationProperties({MybatisPlusProperties.class})
-@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}')")
+@ConditionalOnExpression("!'DATASOURCE'.equals('${lamp.database.multiTenantType}') && !'DATASOURCE_COLUMN'.equals('${lamp.database.multiTenantType}') ")
 public class TenantDatabaseAutoConfiguration extends BaseMasterDatabaseConfiguration {
 
     public TenantDatabaseAutoConfiguration(MybatisPlusProperties properties,

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/service/auth/impl/RoleAuthorityServiceImpl.java
Patch:
@@ -2,11 +2,11 @@
 
 import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.convert.Convert;
-
 import com.tangyh.basic.base.service.SuperServiceImpl;
 import com.tangyh.basic.cache.model.CacheKey;
 import com.tangyh.basic.cache.repository.CacheOps;
 import com.tangyh.basic.database.mybatis.conditions.Wraps;
+import com.tangyh.basic.utils.BizAssert;
 import com.tangyh.lamp.authority.dao.auth.ResourceMapper;
 import com.tangyh.lamp.authority.dao.auth.RoleAuthorityMapper;
 import com.tangyh.lamp.authority.dto.auth.RoleAuthoritySaveDTO;
@@ -44,7 +44,6 @@
  */
 @Slf4j
 @Service
-
 @RequiredArgsConstructor
 public class RoleAuthorityServiceImpl extends SuperServiceImpl<RoleAuthorityMapper, RoleAuthority> implements RoleAuthorityService {
 
@@ -87,6 +86,8 @@ public boolean saveUserRole(UserRoleSaveDTO userRole) {
     @Override
     @Transactional(rollbackFor = Exception.class)
     public boolean saveRoleAuthority(RoleAuthoritySaveDTO dto) {
+        BizAssert.isTrue(dto.getRoleId() != null, "请选择角色");
+
         //删除角色和资源的关联
         super.remove(Wraps.<RoleAuthority>lbQ().eq(RoleAuthority::getRoleId, dto.getRoleId()));
 

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/auth/GlobalUserController.java
Patch:
@@ -89,7 +89,8 @@ public R<Boolean> check(@RequestParam String tenantCode, @RequestParam String ac
     }
 
     @Override
-    public void query(PageParams<GlobalUserPageDTO> params, IPage<User> page, Long defSize) {
+    public IPage<User> query(PageParams<GlobalUserPageDTO> params) {
+        IPage<User> page = params.buildPage();
         GlobalUserPageDTO model = params.getModel();
         ContextUtil.setTenant(model.getTenantCode());
 
@@ -99,6 +100,7 @@ public void query(PageParams<GlobalUserPageDTO> params, IPage<User> page, Long d
             item.setPassword(null);
             item.setSalt(null);
         });
+        return page;
     }
 
 

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/auth/RoleController.java
Patch:
@@ -63,7 +63,8 @@ public class RoleController extends SuperCacheController<RoleService, Long, Role
     private final UserRoleService userRoleService;
 
     @Override
-    public void query(PageParams<RolePageQuery> params, IPage<Role> page, Long defSize) {
+    public IPage<Role> query(PageParams<RolePageQuery> params) {
+        IPage<Role> page = params.buildPage();
         RolePageQuery roleQuery = params.getModel();
 
         QueryWrap<Role> wrap = handlerWrapper(null, params);
@@ -76,6 +77,7 @@ public void query(PageParams<RolePageQuery> params, IPage<Role> page, Long defSi
                 .in(Role::getReadonly, roleQuery.getReadonly())
                 .in(Role::getDsType, roleQuery.getDsType());
         baseService.page(page, wrapper);
+        return page;
     }
 
     /**

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/common/OptLogController.java
Patch:
@@ -53,8 +53,7 @@ public class OptLogController extends SuperSimpleController<OptLogService, OptLo
     @PostMapping(value = "/page")
     @PreAuth("hasAnyPermission('{}view')")
     public R<IPage<OptLog>> page(@RequestBody @Validated PageParams<OptLog> params) {
-        IPage<OptLog> page = params.buildPage();
-        query(params, page, null);
+        IPage<OptLog> page = query(params);
         return R.success(page);
     }
 

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/core/StationController.java
Patch:
@@ -57,8 +57,10 @@ public R<Boolean> check(@RequestParam(required = false) Long id, @RequestParam S
     }
 
     @Override
-    public void query(PageParams<StationPageQuery> params, IPage<Station> page, Long defSize) {
+    public IPage<Station> query(PageParams<StationPageQuery> params) {
+        IPage<Station> page = params.buildPage();
         baseService.findStationPage(page, params);
+        return page;
     }
 
     @Override

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/auth/LoginParamDTO.java
Patch:
@@ -31,9 +31,6 @@ public class LoginParamDTO {
     private String key;
     @ApiModelProperty(value = "验证码")
     private String code;
-
-    //    @ApiModelProperty(value = "企业编号", example = "MDAwMA==")
-//    private String tenant;
     @ApiModelProperty(value = "账号")
     private String account;
     @ApiModelProperty(value = "密码")

File: lamp-file/lamp-file-biz/src/main/java/com/tangyh/lamp/file/storage/MinIoAutoConfigure.java
Patch:
@@ -25,7 +25,7 @@
 @EnableConfigurationProperties(FileServerProperties.class)
 @Configuration
 @RequiredArgsConstructor
-@ConditionalOnProperty(prefix = FileServerProperties.PREFIX, name = "type", havingValue = "MIN_IO", matchIfMissing = true)
+@ConditionalOnProperty(prefix = FileServerProperties.PREFIX, name = "type", havingValue = "MIN_IO")
 @Slf4j
 public class MinIoAutoConfigure {
 

File: lamp-file/lamp-file-controller/src/main/java/com/tangyh/lamp/file/controller/AttachmentController.java
Patch:
@@ -65,8 +65,10 @@ public class AttachmentController extends SuperSimpleController<AttachmentServic
         implements QueryController<Attachment, Long, FilePageReqDTO>, DeleteController<Attachment, Long> {
 
     @Override
-    public void query(PageParams<FilePageReqDTO> params, IPage<Attachment> page, Long defSize) {
+    public IPage<Attachment> query(PageParams<FilePageReqDTO> params) {
+        IPage<Attachment> page = params.buildPage();
         baseService.page(page, params.getModel());
+        return page;
     }
 
     @Override

File: lamp-msg/lamp-sms-controller/src/main/java/com/tangyh/lamp/sms/controller/SmsTaskController.java
Patch:
@@ -71,11 +71,12 @@ public R<SmsTaskResultVO> detail(@PathVariable Long id) {
         return success(resultVO);
     }
 
-
     @Override
-    public void query(PageParams<SmsTaskPageQuery> params, IPage<SmsTask> page, Long defSize) {
+    public IPage<SmsTask> query(PageParams<SmsTaskPageQuery> params) {
+        IPage<SmsTask> page = params.buildPage();
         baseService.pageSmsTask(page, params);
         echoService.action(page);
+        return page;
     }
 
 

File: lamp-msg/lamp-msg-controller/src/main/java/com/tangyh/lamp/msg/controller/MsgController.java
Patch:
@@ -169,8 +169,8 @@ public R<String> preview(@RequestBody @Validated PageParams<MsgQuery> params) {
      * @return 是否成功
      */
     @ApiOperation(value = "标记消息为已读", notes = "标记消息为已读")
-    @GetMapping(value = "/mark")
-    public R<Boolean> mark(@RequestParam(value = "msgCenterIds[]") List<Long> msgCenterIds) {
+    @PostMapping(value = "/mark")
+    public R<Boolean> mark(@RequestBody List<Long> msgCenterIds) {
         return R.success(msgService.mark(msgCenterIds, ContextUtil.getUserId()));
     }
 

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/strategy/impl/CustomizeDataScope.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.tangyh.basic.exception.BizException;
 import com.tangyh.basic.exception.code.ExceptionCode;
-import com.tangyh.lamp.authority.service.core.OrgService;
 import com.tangyh.lamp.authority.strategy.AbstractDataScopeHandler;
 import lombok.RequiredArgsConstructor;
 import org.springframework.stereotype.Component;
@@ -19,7 +18,6 @@
 @Component("CUSTOMIZE")
 @RequiredArgsConstructor
 public class CustomizeDataScope implements AbstractDataScopeHandler {
-    private final OrgService orgService;
 
     @Override
     public List<Long> getOrgIds(List<Long> orgList, Long userId) {

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/strategy/impl/ThisLevelChildrenDataScope.java
Patch:
@@ -1,6 +1,5 @@
 package com.tangyh.lamp.authority.strategy.impl;
 
-import com.tangyh.basic.model.RemoteData;
 import com.tangyh.lamp.authority.dao.auth.UserMapper;
 import com.tangyh.lamp.authority.entity.auth.User;
 import com.tangyh.lamp.authority.entity.core.Org;
@@ -33,7 +32,7 @@ public List<Long> getOrgIds(List<Long> orgList, Long userId) {
         if (user == null) {
             return Collections.emptyList();
         }
-        Long orgId = RemoteData.getKey(user.getOrg());
+        Long orgId = user.getOrgId();
         List<Org> children = orgService.findChildren(Arrays.asList(orgId));
         return children.stream().mapToLong(Org::getId).boxed().collect(Collectors.toList());
     }

File: lamp-authority/lamp-authority-biz/src/main/java/com/tangyh/lamp/authority/strategy/impl/ThisLevelDataScope.java
Patch:
@@ -1,6 +1,5 @@
 package com.tangyh.lamp.authority.strategy.impl;
 
-import com.tangyh.basic.model.RemoteData;
 import com.tangyh.lamp.authority.dao.auth.UserMapper;
 import com.tangyh.lamp.authority.entity.auth.User;
 import com.tangyh.lamp.authority.strategy.AbstractDataScopeHandler;
@@ -29,7 +28,7 @@ public List<Long> getOrgIds(List<Long> orgList, Long userId) {
         if (user == null) {
             return Collections.emptyList();
         }
-        Long orgId = RemoteData.getKey(user.getOrg());
+        Long orgId = user.getOrgId();
         return Arrays.asList(orgId);
     }
 }

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/core/StationController.java
Patch:
@@ -6,7 +6,6 @@
 import com.tangyh.basic.base.R;
 import com.tangyh.basic.base.controller.SuperCacheController;
 import com.tangyh.basic.base.request.PageParams;
-import com.tangyh.basic.model.RemoteData;
 import com.tangyh.lamp.authority.dto.core.StationPageQuery;
 import com.tangyh.lamp.authority.dto.core.StationSaveDTO;
 import com.tangyh.lamp.authority.dto.core.StationUpdateDTO;
@@ -48,8 +47,8 @@ public R<Boolean> handlerImport(List<Map<String, String>> list) {
             Station item = new Station();
             item.setDescribe(map.getOrDefault("描述", ""));
             item.setName(map.getOrDefault("名称", ""));
-            item.setOrg(new RemoteData<>(Convert.toLong(map.getOrDefault("组织", ""))));
-            item.setState(Convert.toBool(map.getOrDefault("状态", "")));
+            item.setOrgId(Convert.toLong(map.getOrDefault("组织", "0")));
+            item.setState(Convert.toBool(map.getOrDefault("状态", "false")));
             return item;
         }).collect(Collectors.toList());
 

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/auth/LoginParamDTO.java
Patch:
@@ -33,7 +33,7 @@ public class LoginParamDTO {
     private String code;
 
     //    @ApiModelProperty(value = "企业编号", example = "MDAwMA==")
-    //    private String tenant;
+//    private String tenant;
     @ApiModelProperty(value = "账号")
     private String account;
     @ApiModelProperty(value = "密码")

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/dto/common/DictionaryTypeSaveDTO.java
Patch:
@@ -9,9 +9,9 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import org.hibernate.validator.constraints.Length;
 
 import javax.validation.constraints.NotEmpty;
+import javax.validation.constraints.Size;
 import java.io.Serializable;
 
 /**
@@ -40,15 +40,15 @@ public class DictionaryTypeSaveDTO implements Serializable {
      */
     @ApiModelProperty(value = "类型")
     @NotEmpty(message = "类型不能为空")
-    @Length(max = 255, message = "类型长度不能超过255")
+    @Size(max = 255, message = "类型长度不能超过255")
     private String type;
 
     /**
      * 类型标签
      */
     @ApiModelProperty(value = "类型标签")
     @NotEmpty(message = "类型标签不能为空")
-    @Length(max = 255, message = "类型标签长度不能超过255")
+    @Size(max = 255, message = "类型标签长度不能超过255")
     private String label;
 
     /**

File: lamp-authority/lamp-authority-entity/src/main/java/com/tangyh/lamp/authority/enumeration/auth/Sex.java
Patch:
@@ -16,7 +16,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2020-11-20
+ * @date 2021-04-01
  */
 @Getter
 @AllArgsConstructor

File: lamp-demo/lamp-demo-controller/src/main/java/com/tangyh/lamp/demo/controller/ProductController.java
Patch:
@@ -4,7 +4,7 @@
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.tangyh.basic.annotation.security.PreAuth;
 import com.tangyh.basic.base.controller.SuperController;
-import com.tangyh.basic.injection.core.InjectionCore;
+import com.tangyh.basic.echo.core.EchoService;
 import com.tangyh.lamp.demo.dto.ProductPageQuery;
 import com.tangyh.lamp.demo.dto.ProductSaveDTO;
 import com.tangyh.lamp.demo.dto.ProductUpdateDTO;
@@ -34,10 +34,10 @@
 @PreAuth(replace = "demo:product:", enabled = false)
 @RequiredArgsConstructor
 public class ProductController extends SuperController<ProductService, Long, Product, ProductPageQuery, ProductSaveDTO, ProductUpdateDTO> {
-    private final InjectionCore injectionCore;
+    private final EchoService echoService;
 
     @Override
     public void handlerResult(IPage<Product> page) {
-        injectionCore.injection(page);
+        echoService.action(page);
     }
 }

File: lamp-example/lamp-example-controller/src/main/java/com/tangyh/lamp/example/controller/injection/InjectionController.java
Patch:
@@ -1,7 +1,7 @@
 package com.tangyh.lamp.example.controller.injection;
 
 import com.tangyh.basic.base.R;
-import com.tangyh.basic.injection.core.InjectionCore;
+import com.tangyh.basic.echo.core.EchoService;
 import com.tangyh.lamp.example.entity.Order;
 import com.tangyh.lamp.example.service.OrderService;
 import io.swagger.annotations.Api;
@@ -25,7 +25,7 @@
 @Api(value = "injection", tags = "injection")
 public class InjectionController {
     private final OrderService orderService;
-    private final InjectionCore injectionCore;
+    private final EchoService echoService;
 
 
     /**
@@ -39,7 +39,7 @@ public class InjectionController {
     @PostMapping("/injection")
     public R injection(@RequestBody Order data) {
         List<Order> orders = orderService.find(data);
-        injectionCore.injection(orders, false, "education");
+        echoService.action(orders, "education");
         return R.success(orders);
     }
 

File: lamp-example/lamp-example-entity/src/main/java/com/tangyh/lamp/example/dto/RestTestDTO.java
Patch:
@@ -11,8 +11,8 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import org.hibernate.validator.constraints.Length;
 
+import javax.validation.constraints.Size;
 import java.io.Serializable;
 import java.math.BigDecimal;
 import java.time.LocalDate;
@@ -45,13 +45,13 @@ public class RestTestDTO implements Serializable {
      * 名称
      */
     @ApiModelProperty(value = "名称")
-    @Length(max = 255, message = "名称长度不能超过255")
+    @Size(max = 255, message = "名称长度不能超过255")
     private String name;
     /**
      * 编号
      */
     @ApiModelProperty(value = "编号")
-    @Length(max = 255, message = "编号长度不能超过255")
+    @Size(max = 255, message = "编号长度不能超过255")
     private String code;
 
     private Long id;

File: lamp-file/lamp-file-biz/src/main/java/com/tangyh/lamp/file/storage/LocalAutoConfigure.java
Patch:
@@ -35,4 +35,5 @@ public FileStrategy getFileStrategy(FileServerProperties fileProperties) {
     public FileChunkStrategy getFileChunkStrategy(AttachmentService fileService, FileServerProperties fileProperties) {
         return new LocalFileChunkStrategyImpl(fileService, fileProperties);
     }
+
 }

File: lamp-file/lamp-file-entity/src/main/java/com/tangyh/lamp/file/domain/FileDO.java
Patch:
@@ -30,4 +30,6 @@ public class FileDO {
      * 文件大小
      */
     private Long size;
+
+    private String path;
 }

File: lamp-oauth/lamp-oauth-api/src/main/java/com/tangyh/lamp/oauth/api/hystrix/OrgApiFallback.java
Patch:
@@ -17,12 +17,12 @@
 @Component
 public class OrgApiFallback implements OrgApi {
     @Override
-    public Map<Serializable, Object> findOrgByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findNameByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 
     @Override
-    public Map<Serializable, Object> findOrgNameByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 }

File: lamp-oauth/lamp-oauth-api/src/main/java/com/tangyh/lamp/oauth/api/hystrix/StationApiFallback.java
Patch:
@@ -17,12 +17,12 @@
 @Component
 public class StationApiFallback implements StationApi {
     @Override
-    public Map<Serializable, Object> findStationByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findNameByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 
     @Override
-    public Map<Serializable, Object> findStationNameByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 }

File: lamp-oauth/lamp-oauth-api/src/main/java/com/tangyh/lamp/oauth/api/hystrix/UserApiFallback.java
Patch:
@@ -26,12 +26,12 @@ public Map<String, Object> getDataScopeById(Long id) {
     }
 
     @Override
-    public Map<Serializable, Object> findUserByIds(Set<Serializable> codes) {
+    public Map<Serializable, Object> findNameByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 
     @Override
-    public Map<Serializable, Object> findUserNameByIds(Set<Serializable> codes) {
+    public Map<Serializable, Object> findByIds(Set<Serializable> ids) {
         return Collections.emptyMap();
     }
 }

File: lamp-public/lamp-common-api/src/main/java/com/tangyh/lamp/common/dto/XxlJobInfoVO.java
Patch:
@@ -13,12 +13,12 @@
  */
 public class XxlJobInfoVO implements Serializable {
 
-    private final static DateTimeFormatter DTF = DateTimeFormatter.ofPattern(DateUtils.DEFAULT_DATE_TIME_FORMAT);
     /**
      * 执行器 名
      */
     private String jobGroupName;
     private String jobDesc;
+
     /**
      * 负责人
      */
@@ -35,6 +35,7 @@ public class XxlJobInfoVO implements Serializable {
      * 调度配置，值含义取决于调度类型
      */
     private String scheduleConf;
+    private final static DateTimeFormatter DTF = DateTimeFormatter.ofPattern(DateUtils.DEFAULT_DATE_TIME_FORMAT);
     /**
      * 调度过期策略
      */

File: lamp-tenant/lamp-tenant-entity/src/main/java/com/tangyh/lamp/tenant/entity/TenantDatasourceConfig.java
Patch:
@@ -13,10 +13,10 @@
 import lombok.NoArgsConstructor;
 import lombok.ToString;
 import lombok.experimental.Accessors;
-import org.hibernate.validator.constraints.Length;
 
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
+import javax.validation.constraints.Size;
 import java.time.LocalDateTime;
 
 import static com.baomidou.mybatisplus.annotation.SqlCondition.LIKE;
@@ -65,7 +65,7 @@ public class TenantDatasourceConfig extends SuperEntity<Long> {
      */
     @ApiModelProperty(value = "服务")
     @NotEmpty(message = "服务不能为空")
-    @Length(max = 100, message = "服务长度不能超过100")
+    @Size(max = 100, message = "服务长度不能超过100")
     @TableField(value = "application", condition = LIKE)
     @Excel(name = "服务")
     private String application;

File: lamp-oauth/lamp-oauth-controller/src/main/java/com/tangyh/lamp/oauth/controller/InjectionController.java
Patch:
@@ -1,5 +1,6 @@
 package com.tangyh.lamp.oauth.controller;
 
+import com.tangyh.basic.annotation.base.IgnoreResponseBodyAdvice;
 import com.tangyh.lamp.authority.service.auth.UserService;
 import com.tangyh.lamp.authority.service.common.DictionaryService;
 import com.tangyh.lamp.authority.service.core.OrgService;
@@ -25,6 +26,7 @@
 @Slf4j
 @RestController
 @AllArgsConstructor
+@IgnoreResponseBodyAdvice
 @Api(value = "数据注入查询接口", tags = "数据注入查询接口， 不建议前端调用")
 public class InjectionController {
     private final DictionaryService dictionaryService;

File: lamp-oauth/lamp-oauth-controller/src/main/java/com/tangyh/lamp/oauth/controller/OauthController.java
Patch:
@@ -1,5 +1,6 @@
 package com.tangyh.lamp.oauth.controller;
 
+import com.tangyh.basic.annotation.base.IgnoreResponseBodyAdvice;
 import com.tangyh.basic.base.R;
 import com.tangyh.basic.exception.BizException;
 import com.tangyh.basic.jwt.TokenUtil;
@@ -70,6 +71,7 @@ public R<Boolean> check(@RequestParam(value = "key") String key, @RequestParam(v
 
     @ApiOperation(value = "验证码", notes = "验证码")
     @GetMapping(value = "/anno/captcha", produces = "image/png")
+    @IgnoreResponseBodyAdvice
     public void captcha(@RequestParam(value = "key") String key, HttpServletResponse response) throws IOException {
         this.validateCodeService.create(key, response);
     }

File: lamp-oauth/lamp-oauth-controller/src/main/java/com/tangyh/lamp/oauth/controller/OauthUserController.java
Patch:
@@ -1,5 +1,6 @@
 package com.tangyh.lamp.oauth.controller;
 
+import com.tangyh.basic.annotation.base.IgnoreResponseBodyAdvice;
 import com.tangyh.basic.base.R;
 import com.tangyh.basic.security.feign.UserQuery;
 import com.tangyh.basic.security.model.SysUser;
@@ -55,6 +56,7 @@ public R<SysUser> getById(@PathVariable Long id, @RequestBody UserQuery query) {
      */
     @ApiOperation(value = "查询用户权限范围", notes = "根据用户id，查询用户权限范围")
     @GetMapping(value = "/ds/{id}")
+    @IgnoreResponseBodyAdvice
     public Map<String, Object> getDataScopeById(@PathVariable("id") Long id) {
         return userService.getDataScopeById(id);
     }

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/auth/GlobalUserController.java
Patch:
@@ -35,7 +35,6 @@
 
 import java.util.List;
 
-import static com.tangyh.lamp.common.constant.SwaggerConstants.DATA_TYPE_ARRAY;
 import static com.tangyh.lamp.common.constant.SwaggerConstants.DATA_TYPE_STRING;
 import static com.tangyh.lamp.common.constant.SwaggerConstants.PARAM_TYPE_QUERY;
 
@@ -102,11 +101,11 @@ public void query(PageParams<GlobalUserPageDTO> params, IPage<User> page, Long d
     }
 
 
-    @ApiOperation(value = "删除")
+    @ApiOperation(value = "删除用户")
     @DeleteMapping("/delete")
     @ApiImplicitParams({
             @ApiImplicitParam(name = "tenantCode", value = "企业编码", dataType = DATA_TYPE_STRING, paramType = PARAM_TYPE_QUERY),
-            @ApiImplicitParam(name = "ids[]", value = "主键id", dataType = DATA_TYPE_ARRAY, paramType = PARAM_TYPE_QUERY),
+            @ApiImplicitParam(name = "ids[]", value = "主键id", dataType = DATA_TYPE_STRING, allowMultiple = true, paramType = PARAM_TYPE_QUERY),
     })
     public R<Boolean> delete(@RequestParam String tenantCode, @RequestParam("ids[]") List<Long> ids) {
         ContextUtil.setTenant(tenantCode);

File: lamp-public/lamp-common/src/main/java/com/tangyh/lamp/common/constant/SwaggerConstants.java
Patch:
@@ -14,5 +14,4 @@ public class SwaggerConstants {
 //    public static final String DATA_TYPE_LONG = "java.lang.Long";
 //    public static final String DATA_TYPE_STRING = "java.lang.String";
     public static final String DATA_TYPE_MULTIPART_FILE = "MultipartFile";
-    public static final String DATA_TYPE_ARRAY = "array";
 }

File: lamp-authority/lamp-authority-controller/src/main/java/com/tangyh/lamp/authority/controller/common/DictionaryController.java
Patch:
@@ -76,7 +76,7 @@ public R<IPage<Dictionary>> pageType(@RequestBody @Validated PageParams<Dictiona
 
     @ApiOperation(value = "保存-字典类型")
     @PostMapping(value = "/type")
-    @PreAuth("hasAnyPermission('{}save')")
+    @PreAuth("hasAnyPermission('{}add')")
     public R<Dictionary> saveType(@RequestBody @Validated DictionaryTypeSaveDTO dictType) {
         return R.success(baseService.saveType(dictType));
     }

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsTaskServiceImpl.java
Patch:
@@ -3,7 +3,6 @@
 import cn.hutool.core.util.StrUtil;
 import com.alibaba.fastjson.JSONObject;
 import com.alibaba.fastjson.parser.Feature;
-import com.baomidou.dynamic.datasource.annotation.DS;
 import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.github.zuihou.base.service.SuperServiceImpl;
 import com.github.zuihou.common.constant.BizConstant;
@@ -52,7 +51,6 @@
  */
 @Slf4j
 @Service
-@DS("#thread.tenant")
 public class SmsTaskServiceImpl extends SuperServiceImpl<SmsTaskMapper, SmsTask> implements SmsTaskService {
     @Resource
     private JobsTimingApi jobsTimingApi;

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.authority.service.core.impl;
 
+import cn.hutool.core.collection.CollUtil;
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.convert.Convert;
 import com.github.zuihou.authority.dao.core.OrgMapper;
@@ -13,7 +14,6 @@
 import com.github.zuihou.utils.MapHelper;
 import com.google.common.collect.ImmutableMap;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -55,7 +55,7 @@ public List<Org> findChildren(List<Long> ids) {
             return Collections.emptyList();
         }
         // MySQL 全文索引
-        String applySql = String.format(" MATCH(tree_path) AGAINST('%s' IN BOOLEAN MODE) ", StringUtils.join(ids, " "));
+        String applySql = String.format(" MATCH(tree_path) AGAINST('%s' IN BOOLEAN MODE) ", CollUtil.join(ids, " "));
 
         return super.list(Wraps.<Org>lbQ().in(Org::getId, ids).or(query -> query.apply(applySql)));
     }

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/AttachmentServiceImpl.java
Patch:
@@ -2,6 +2,7 @@
 
 import cn.hutool.core.collection.CollectionUtil;
 import cn.hutool.core.util.IdUtil;
+import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.github.zuihou.base.service.SuperServiceImpl;
@@ -26,7 +27,6 @@
 import com.github.zuihou.utils.BeanPlusUtil;
 import com.github.zuihou.utils.DateUtils;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.web.multipart.MultipartFile;
@@ -78,7 +78,7 @@ public IPage<Attachment> page(IPage<Attachment> page, FilePageReqDTO data) {
     @Override
     public AttachmentDTO upload(MultipartFile multipartFile, String tenant, Long id, String bizType, String bizId, Boolean isSingle) {
         //根据业务类型来判断是否生成业务id
-        if (StringUtils.isNotEmpty(bizType) && StringUtils.isEmpty(bizId)) {
+        if (StrUtil.isNotEmpty(bizType) && StrUtil.isEmpty(bizId)) {
             DatabaseProperties.HutoolId idPro = databaseProperties.getHutoolId();
             bizId = IdUtil.getSnowflake(idPro.getWorkerId(), idPro.getDataCenterId()).nextIdStr();
         }
@@ -174,7 +174,7 @@ public void downloadByBiz(HttpServletRequest request, HttpServletResponse respon
 
     @Override
     public void downloadByUrl(HttpServletRequest request, HttpServletResponse response, String url, String filename) throws Exception {
-        if (StringUtils.isEmpty(filename)) {
+        if (StrUtil.isEmpty(filename)) {
             filename = "未知文件名.txt";
         }
         List<Attachment> list = Arrays.asList(Attachment.builder()

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/FileServiceImpl.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.zuihou.file.service.impl;
 
 import cn.hutool.core.collection.CollectionUtil;
+import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.github.zuihou.base.service.SuperServiceImpl;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
@@ -25,7 +26,6 @@
 import com.github.zuihou.utils.DateUtils;
 import lombok.Getter;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.web.multipart.MultipartFile;
@@ -95,7 +95,7 @@ public FileAttrDO getFileAttrDo(Long folderId) {
 
         if (folder != null && !folder.getIsDelete() && DataType.DIR.eq(folder.getDataType())) {
             folderName = folder.getSubmittedFileName();
-            treePath = StringUtils.join(folder.getTreePath(), folder.getId(), DEF_ROOT_PATH);
+            treePath = StrUtil.join(DEF_ROOT_PATH, folder.getTreePath(), folder.getId());
             grade = folder.getGrade() + 1;
         }
         BizAssert.isTrue(grade <= 10, BASE_VALID_PARAM.build("文件夹层级不能超过10层"));
@@ -117,7 +117,7 @@ public FolderDTO saveFolder(FolderSaveDTO folderSaveDto) {
             BizAssert.equals(DataType.DIR.name(), parent.getDataType().name(), BASE_VALID_PARAM.build("父文件夹不存在"));
             BizAssert.isTrue(parent.getGrade() < 10, BASE_VALID_PARAM.build("文件夹层级不能超过10层"));
             folder.setFolderName(parent.getSubmittedFileName());
-            folder.setTreePath(StringUtils.join(parent.getTreePath(), parent.getId(), DEF_ROOT_PATH));
+            folder.setTreePath(StrUtil.join(DEF_ROOT_PATH, parent.getTreePath(), parent.getId()));
             folder.setGrade(parent.getGrade() + 1);
         }
         if (folderSaveDto.getOrderNum() == null) {

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/storage/AliOssAutoConfigure.java
Patch:
@@ -27,7 +27,6 @@
 import com.github.zuihou.utils.StrPool;
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.io.FileUtils;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;
@@ -175,7 +174,7 @@ protected void copyFile(File file) {
                     .append(StrPool.SLASH)
                     .append(fileName)
                     .toString();
-            file.setUrl(StringUtils.replace(url, "\\\\", StrPool.SLASH));
+            file.setUrl(StrUtil.replace(url, "\\\\", StrPool.SLASH));
             file.setFilename(fileName);
 
             // 关闭OSSClient。
@@ -245,7 +244,7 @@ protected R<File> merge(List<java.io.File> files, String path, String fileName,
                     .relativePath(relativePath)
                     .group(uploadResult.getETag())
                     .path(uploadResult.getRequestId())
-                    .url(StringUtils.replace(url, "\\\\", StrPool.SLASH))
+                    .url(StrUtil.replace(url, "\\\\", StrPool.SLASH))
                     .build();
 
             // 关闭OSSClient。

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/storage/LocalAutoConfigure.java
Patch:
@@ -15,7 +15,6 @@
 import com.github.zuihou.file.utils.FileDataTypeUtil;
 import com.github.zuihou.utils.StrPool;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;
@@ -163,7 +162,7 @@ protected R<File> merge(List<java.io.File> files, String path, String fileName,
                     .toString();
             File filePo = File.builder()
                     .relativePath(relativePath)
-                    .url(StringUtils.replace(url, "\\\\", StrPool.SLASH))
+                    .url(StrUtil.replace(url, "\\\\", StrPool.SLASH))
                     .build();
             return R.success(filePo);
         }

File: zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/AttachmentController.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.zuihou.file.controller;
 
 
+import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.toolkit.Wrappers;
 import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
@@ -28,7 +29,6 @@
 import lombok.extern.slf4j.Slf4j;
 import org.apache.commons.collections.MapUtils;
 import org.apache.commons.lang3.ArrayUtils;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.validation.annotation.Validated;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
@@ -217,7 +217,7 @@ public void downloadByBiz(
     @SysLog("根据文件连接下载文件")
     public void downloadUrl(@RequestParam(value = "url") String url, @RequestParam(value = "filename", required = false) String filename,
                             HttpServletRequest request, HttpServletResponse response) throws Exception {
-        BizAssert.isTrue(StringUtils.isNotEmpty(url), BASE_VALID_PARAM.build("附件下载地址不能为空"));
+        BizAssert.isTrue(StrUtil.isNotEmpty(url), BASE_VALID_PARAM.build("附件下载地址不能为空"));
         log.info("name={}, url={}", filename, url);
         baseService.downloadByUrl(request, response, url, filename);
     }

File: zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/manager/FileRestManager.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.file.manager;
 
+import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
 import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
@@ -8,7 +9,6 @@
 import com.github.zuihou.file.dto.FilePageReqDTO;
 import com.github.zuihou.file.entity.File;
 import com.github.zuihou.file.service.FileService;
-import org.apache.commons.lang3.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;
 
@@ -43,7 +43,7 @@ public IPage<File> page(IPage<File> page, FilePageReqDTO filePageReq) {
                 .eq(File::getIsDelete, false)
                 .eq(filePageReq.getDataType() != null, File::getDataType, filePageReq.getDataType())
                 .eq(filePageReq.getFolderId() != null, File::getFolderId, filePageReq.getFolderId())
-                .like(StringUtils.isNotEmpty(filePageReq.getSubmittedFileName()), File::getSubmittedFileName, filePageReq.getSubmittedFileName())
+                .like(StrUtil.isNotEmpty(filePageReq.getSubmittedFileName()), File::getSubmittedFileName, filePageReq.getSubmittedFileName())
                 .eq(userId != null && userId != 0, File::getCreateUser, userId);
 
         query.orderByDesc(String.format("case when %s='DIR' THEN 1 else 0 end", FileConstants.DATA_TYPE));

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/controller/JobLogController.java
Patch:
@@ -1,5 +1,6 @@
 package com.xxl.job.admin.controller;
 
+import cn.hutool.core.util.StrUtil;
 import com.xxl.job.admin.core.model.XxlJobGroup;
 import com.xxl.job.admin.core.model.XxlJobInfo;
 import com.xxl.job.admin.core.model.XxlJobLog;
@@ -11,7 +12,6 @@
 import com.xxl.job.core.biz.ExecutorBiz;
 import com.xxl.job.core.biz.model.LogResult;
 import com.xxl.job.core.biz.model.ReturnT;
-import org.apache.commons.lang3.StringUtils;
 import org.apache.commons.lang3.time.DateUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -76,7 +76,7 @@ public Map<String, Object> pageList(@RequestParam(required = false, defaultValue
         // parse param
         Date triggerTimeStart = null;
         Date triggerTimeEnd = null;
-        if (StringUtils.isNotBlank(filterTime)) {
+        if (StrUtil.isNotBlank(filterTime)) {
             String[] temp = filterTime.split(" - ");
             if (temp != null && temp.length == 2) {
                 try {

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/core/model/XxlJobGroup.java
Patch:
@@ -1,6 +1,6 @@
 package com.xxl.job.admin.core.model;
 
-import org.apache.commons.lang3.StringUtils;
+import cn.hutool.core.util.StrUtil;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -48,7 +48,7 @@ public class XxlJobGroup {
     private List<String> registryList;
 
     public List<String> getRegistryList() {
-        if (StringUtils.isNotBlank(addressList)) {
+        if (StrUtil.isNotBlank(addressList)) {
             registryList = new ArrayList<String>(Arrays.asList(addressList.split(",")));
         }
         return registryList;

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/core/thread/JobRegistryMonitorHelper.java
Patch:
@@ -1,11 +1,11 @@
 package com.xxl.job.admin.core.thread;
 
+import cn.hutool.core.collection.CollUtil;
 import com.xxl.job.admin.core.conf.XxlJobAdminConfig;
 import com.xxl.job.admin.core.model.XxlJobGroup;
 import com.xxl.job.admin.core.model.XxlJobRegistry;
 import com.xxl.job.core.enums.RegistryConfig;
 import org.apache.commons.collections4.CollectionUtils;
-import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -70,7 +70,7 @@ public void run() {
                                 String addressListStr = null;
                                 if (CollectionUtils.isNotEmpty(registryList)) {
                                     Collections.sort(registryList);
-                                    addressListStr = StringUtils.join(registryList, ",");
+                                    addressListStr = CollUtil.join(registryList, ",");
                                 }
                                 group.setAddressList(addressListStr);
                                 XxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().update(group);

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/core/util/I18nUtil.java
Patch:
@@ -1,8 +1,8 @@
 package com.xxl.job.admin.core.util;
 
+import cn.hutool.core.util.StrUtil;
 import com.xxl.job.admin.core.conf.XxlJobAdminConfig;
 import com.xxl.job.core.util.JacksonUtil;
-import org.apache.commons.lang3.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.core.io.ClassPathResource;
@@ -33,7 +33,7 @@ public static Properties loadI18nProp() {
         try {
             // build i18n prop
             String i18n = XxlJobAdminConfig.getAdminConfig().getI18n();
-            i18n = StringUtils.isNotBlank(i18n) ? ("_" + i18n) : i18n;
+            i18n = StrUtil.isNotBlank(i18n) ? ("_" + i18n) : i18n;
             String i18nFile = MessageFormat.format("i18n/message{0}.properties", i18n);
 
             // load prop

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/dao/XxlJobGroupDao.java
Patch:
@@ -1,6 +1,6 @@
 package com.xxl.job.admin.dao;
 
-import com.baomidou.mybatisplus.annotation.SqlParser;
+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;
 import com.xxl.job.admin.core.model.XxlJobGroup;
 import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
@@ -11,7 +11,7 @@
  * Created by xuxueli on 16/9/30.
  */
 @Repository
-@SqlParser(filter = true)
+@InterceptorIgnore(tenantLine = "true", dynamicTableName = "true")
 public interface XxlJobGroupDao {
 
     List<XxlJobGroup> findAll();

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/dao/XxlJobRegistryDao.java
Patch:
@@ -1,6 +1,6 @@
 package com.xxl.job.admin.dao;
 
-import com.baomidou.mybatisplus.annotation.SqlParser;
+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;
 import com.xxl.job.admin.core.model.XxlJobRegistry;
 import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
@@ -10,7 +10,7 @@
 /**
  * Created by xuxueli on 16/9/30.
  */
-@SqlParser(filter = true)
+@InterceptorIgnore(tenantLine = "true", dynamicTableName = "true")
 @Repository
 public interface XxlJobRegistryDao {
 

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/service/impl/AdminBizImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.xxl.job.admin.service.impl;
 
+import cn.hutool.core.util.StrUtil;
 import com.xxl.job.admin.core.model.XxlJobInfo;
 import com.xxl.job.admin.core.model.XxlJobLog;
 import com.xxl.job.admin.core.thread.JobTriggerPoolHelper;
@@ -63,12 +64,12 @@ private ReturnT<String> callback(HandleCallbackParam handleCallbackParam) {
         String callbackMsg = null;
         if (IJobHandler.SUCCESS.getCode() == handleCallbackParam.getExecuteResult().getCode()) {
             XxlJobInfo xxlJobInfo = xxlJobInfoDao.loadById(log.getJobId());
-            if (xxlJobInfo != null && StringUtils.isNotBlank(xxlJobInfo.getChildJobId())) {
+            if (xxlJobInfo != null && StrUtil.isNotBlank(xxlJobInfo.getChildJobId())) {
                 callbackMsg = "<br><br><span style=\"color:#00c0ef;\" > >>>>>>>>>>>" + I18nUtil.getString("jobconf_trigger_child_run") + "<<<<<<<<<<< </span><br>";
 
                 String[] childJobIds = xxlJobInfo.getChildJobId().split(",");
                 for (int i = 0; i < childJobIds.length; i++) {
-                    int childJobId = (StringUtils.isNotBlank(childJobIds[i]) && StringUtils.isNumeric(childJobIds[i])) ? Integer.valueOf(childJobIds[i]) : -1;
+                    int childJobId = (StrUtil.isNotBlank(childJobIds[i]) && StringUtils.isNumeric(childJobIds[i])) ? Integer.valueOf(childJobIds[i]) : -1;
                     if (childJobId > 0) {
 
                         JobTriggerPoolHelper.trigger(childJobId, TriggerTypeEnum.PARENT, -1, null, null);

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/util/PhoneUtils.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou.sms.util;
 
+import cn.hutool.core.util.StrUtil;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang3.StringUtils;
 
 import java.util.Arrays;
 import java.util.LinkedHashSet;
@@ -39,7 +39,7 @@ public static Set<String> getPhone(String receiverPhone) {
     public static Set<String> getPhone(String receiverPhone, String regEx) {
         //判断参数类型
         if (!receiverPhone.contains(PHONE_SEPARATOR)) {
-            String[] list = StringUtils.split(receiverPhone, CONTACTS_SEPARATOR);
+            String[] list = StrUtil.split(receiverPhone, CONTACTS_SEPARATOR);
             return new LinkedHashSet<>(Arrays.asList(list));
         }
 

File: zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/datasource/AuthorityDatabaseAutoConfiguration.java
Patch:
@@ -35,8 +35,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/demo/config/datasource/DemoDatabaseAutoConfiguration.java
Patch:
@@ -35,8 +35,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/file/config/datasource/FileDatabaseAutoConfiguration.java
Patch:
@@ -36,8 +36,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/filter/BaseFilter.java
Patch:
@@ -2,7 +2,7 @@
 
 import cn.hutool.core.util.StrUtil;
 import com.github.zuihou.base.R;
-import com.github.zuihou.common.properties.IgnoreTokenProperties;
+import com.github.zuihou.common.properties.IgnoreProperties;
 import com.github.zuihou.utils.StrPool;
 import com.netflix.zuul.ZuulFilter;
 import com.netflix.zuul.context.RequestContext;
@@ -32,7 +32,7 @@ public abstract class BaseFilter extends ZuulFilter {
     @Value("${spring.profiles.active:dev}")
     protected String profiles;
     @Autowired
-    protected IgnoreTokenProperties ignoreTokenProperties;
+    protected IgnoreProperties ignoreTokenProperties;
     @Autowired
     protected RouteLocator routeLocator;
 

File: zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/msgs/config/datasource/MsgsDatabaseAutoConfiguration.java
Patch:
@@ -36,8 +36,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-oauth/zuihou-oauth-server/src/main/java/com/github/zuihou/oauth/config/datasource/OauthDatabaseAutoConfiguration.java
Patch:
@@ -36,8 +36,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/order/config/datasource/OrderDatabaseAutoConfiguration.java
Patch:
@@ -36,8 +36,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-tenant/zuihou-tenant-server/src/main/java/com/github/zuihou/tenant/config/datasource/TenantDatabaseAutoConfiguration.java
Patch:
@@ -35,8 +35,8 @@
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
  * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
- * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
- * @see com.github.zuihou.database.parsers.DynamicTableNameParser
+ * @see com.github.zuihou.boot.interceptor.HeaderThreadLocalInterceptor
+ *
  */
 @Configuration
 @Slf4j

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -83,7 +83,7 @@ public List<Resource> findVisibleResource(ResourceQueryDTO resource) {
             return resourceListFilterGroup(resource.getMenuId(), visibleResource);
         }
 
-        // 若list里面的值过多，而资源又均没有缓存（或者缓存击穿），则这里的效率并不高
+        // 若list里面的值过多，而资源又均没有缓存（或者缓存穿透），则这里的效率并不高
 
         List<Long> list = (List<Long>) cacheObject.getValue();
         List<Resource> resourceList = list.stream().map(this::getByIdCache).filter(Objects::nonNull).collect(Collectors.toList());

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/DemoServerApplication.java
Patch:
@@ -6,7 +6,6 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
 import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
 import org.springframework.cloud.netflix.hystrix.EnableHystrix;
 import org.springframework.cloud.openfeign.EnableFeignClients;
@@ -19,7 +18,7 @@
 /**
  * @author zuihou
  */
-@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, SeataFeignClientAutoConfiguration.class})
+@SpringBootApplication(exclude = {SeataFeignClientAutoConfiguration.class})
 @EnableDiscoveryClient
 @EnableHystrix
 @EnableFeignClients(value = {

File: zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/OrderServerApplication.java
Patch:
@@ -6,7 +6,6 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
 import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
 import org.springframework.cloud.netflix.hystrix.EnableHystrix;
 import org.springframework.cloud.openfeign.EnableFeignClients;
@@ -21,7 +20,7 @@
  *
  * @author zuihou
  */
-@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, SeataFeignClientAutoConfiguration.class})
+@SpringBootApplication(exclude = {SeataFeignClientAutoConfiguration.class})
 @EnableDiscoveryClient
 @EnableHystrix
 @EnableFeignClients(value = {

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserService.java
Patch:
@@ -176,4 +176,6 @@ public interface UserService extends SuperCacheService<User> {
      * @return
      */
     List<User> findUser(Set<Serializable> ids);
+
+    List<User> findUserById(List<Long> ids);
 }

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/StationService.java
Patch:
@@ -3,6 +3,7 @@
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.github.zuihou.authority.dto.core.StationPageDTO;
 import com.github.zuihou.authority.entity.core.Station;
+import com.github.zuihou.base.request.PageParams;
 import com.github.zuihou.base.service.SuperCacheService;
 
 import java.io.Serializable;
@@ -23,10 +24,10 @@ public interface StationService extends SuperCacheService<Station> {
      * 按权限查询岗位的分页信息
      *
      * @param page
-     * @param data
+     * @param params
      * @return
      */
-    IPage<Station> findStationPage(IPage page, StationPageDTO data);
+    IPage<Station> findStationPage(IPage page, PageParams<StationPageDTO> params);
 
     /**
      * 根据id 查询

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/core/StationController.java
Patch:
@@ -39,7 +39,7 @@ public class StationController extends SuperCacheController<StationService, Long
 
     @Override
     public void query(PageParams<StationPageDTO> params, IPage<Station> page, Long defSize) {
-        baseService.findStationPage(page, params.getModel());
+        baseService.findStationPage(page, params);
     }
 
     @Override

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/RoleServiceImpl.java
Patch:
@@ -100,8 +100,8 @@ public boolean removeByIdWithCache(List<Long> ids) {
         userRoleService.remove(Wraps.<UserRole>lbQ().in(UserRole::getRoleId, ids));
 
         ids.forEach((id) -> {
-            cacheChannel.evict(CacheKey.ROLE_MENU, String.valueOf(id));
-            cacheChannel.evict(CacheKey.ROLE_RESOURCE, String.valueOf(id));
+            cacheChannel.evict(CacheKey.ROLE_MENU, key(id));
+            cacheChannel.evict(CacheKey.ROLE_RESOURCE, key(id));
         });
 
         if (!userIds.isEmpty()) {
@@ -163,7 +163,7 @@ public void saveRole(RoleSaveDTO data, Long userId) {
 
         saveRoleOrg(userId, role, data.getOrgList());
 
-        cacheChannel.set(CacheKey.ROLE, String.valueOf(role.getId()), role);
+        cacheChannel.set(CacheKey.ROLE, key(role.getId()), role);
     }
 
     @Override

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/UserRoleServiceImpl.java
Patch:
@@ -12,6 +12,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import static com.github.zuihou.common.constant.BizConstant.INIT_ROLE_CODE;
 
@@ -34,6 +35,7 @@ public class UserRoleServiceImpl extends SuperServiceImpl<UserRoleMapper, UserRo
     private RoleMapper roleMapper;
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public boolean initAdmin(Long userId) {
         Role role = roleMapper.selectOne(Wraps.<Role>lbQ().eq(Role::getCode, INIT_ROLE_CODE));
         if (role == null) {

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/service/impl/TenantServiceImpl.java
Patch:
@@ -112,6 +112,7 @@ public Boolean delete(List<Long> ids) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public Boolean connect(TenantConnectDTO tenantConnect) {
         boolean flag = initSystemContext.initConnect(tenantConnect);
         if (flag) {
@@ -122,6 +123,7 @@ public Boolean connect(TenantConnectDTO tenantConnect) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public Boolean updateStatus(List<Long> ids, TenantStatusEnum status) {
         boolean update = super.update(Wraps.<Tenant>lbU().set(Tenant::getStatus, status)
                 .in(Tenant::getId, ids));

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/strategy/impl/ColumnInitSystemStrategy.java
Patch:
@@ -32,6 +32,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -96,6 +97,7 @@ public class ColumnInitSystemStrategy implements InitSystemStrategy {
      * @return
      */
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public boolean initConnect(TenantConnectDTO tenantConnect) {
         String tenant = tenantConnect.getTenant();
         // 初始化数据

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/strategy/impl/SchemaInitSystemStrategy.java
Patch:
@@ -13,6 +13,7 @@
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import javax.sql.DataSource;
 import java.io.StringReader;
@@ -61,6 +62,7 @@ public class SchemaInitSystemStrategy implements InitSystemStrategy {
 
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public boolean initConnect(TenantConnectDTO tenantConnect) {
         String tenant = tenantConnect.getTenant();
         this.initDatabases(tenant);

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/LoginLogController.java
Patch:
@@ -35,14 +35,14 @@
 @RestController
 @RequestMapping("/loginLog")
 @Api(value = "LoginLog", tags = "登录日志")
-@PreAuth(value = "hasPermit('loginLog:add')", replace = "loginLog:")
+@PreAuth(enabled = false, replace = "loginLog:")
 public class LoginLogController extends SuperController<LoginLogService, Long, LoginLog, LoginLog, LoginLog, LoginLogUpdateDTO> {
 
     /**
      * 分页查询登录日志
      *
-     * @param wrapper 分页查询条件
-     * @param params  分页查询参数
+     * @param model  对象
+     * @param params 分页查询参数
      * @return 查询结果
      */
     @Override

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/AttachmentServiceImpl.java
Patch:
@@ -79,7 +79,7 @@ public IPage<Attachment> page(IPage<Attachment> page, FilePageReqDTO data) {
     public AttachmentDTO upload(MultipartFile multipartFile, String tenant, Long id, String bizType, String bizId, Boolean isSingle) {
         //根据业务类型来判断是否生成业务id
         if (StringUtils.isNotEmpty(bizType) && StringUtils.isEmpty(bizId)) {
-            DatabaseProperties.Id idPro = databaseProperties.getId();
+            DatabaseProperties.HutoolId idPro = databaseProperties.getHutoolId();
             bizId = IdUtil.getSnowflake(idPro.getWorkerId(), idPro.getDataCenterId()).nextIdStr();
         }
         File file = fileStrategy.upload(multipartFile);

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/strategy/impl/ColumnInitSystemStrategy.java
Patch:
@@ -100,7 +100,7 @@ public boolean initConnect(TenantConnectDTO tenantConnect) {
         String tenant = tenantConnect.getTenant();
         // 初始化数据
         //1, 生成并关联 ID TENANT
-        DatabaseProperties.Id id = databaseProperties.getId();
+        DatabaseProperties.HutoolId id = databaseProperties.getHutoolId();
         Snowflake snowflake = IdUtil.getSnowflake(id.getWorkerId(), id.getDataCenterId());
 
         BaseContextHandler.setTenant(tenant);

File: zuihou-public/zuihou-common/src/main/java/com/github/zuihou/common/constant/BizConstant.java
Patch:
@@ -61,7 +61,7 @@ public interface BizConstant {
     String FILE = "zuihou-file-server";
     String MSGS = "zuihou-msgs-server";
     String OAUTH = "zuihou-oauth-server";
-    String GATE = "zuihou-gate-server";
+    String GATE = "zuihou-gateway-server";
     String ORDER = "zuihou-order-server";
     String DEMO = "zuihou-demo-server";
 

File: zuihou-tenant/zuihou-tenant-controller/src/main/java/com/github/zuihou/tenant/controller/TenantController.java
Patch:
@@ -92,7 +92,7 @@ public R<Boolean> handlerDelete(List<Long> ids) {
     @PostMapping("/status")
     public R<Boolean> updateStatus(@RequestParam("ids[]") List<Long> ids,
                                    @RequestParam(defaultValue = "FORBIDDEN") @NotNull(message = "状态不能为空") TenantStatusEnum status) {
-        return success(baseService.update(Wraps.<Tenant>lbU().set(Tenant::getStatus, status).in(Tenant::getId, ids)));
+        return success(baseService.updateStatus(ids, status));
     }
 
     /**

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/strategy/impl/ColumnInitSystemStrategy.java
Patch:
@@ -145,6 +145,7 @@ private boolean initUser() {
         User user = User.builder()
                 .account("admin").name("内置超级管理员").password("admin")
                 .readonly(true).sex(Sex.M).avatar("cnrhVkzwxjPwAaCfPbdc.png")
+                .status(true).passwordErrorNum(0)
                 .build();
         return userService.initUser(user);
     }

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserService.java
Patch:
@@ -84,10 +84,10 @@ public interface UserService extends SuperCacheService<User> {
     /**
      * 重置密码
      *
-     * @param data
+     * @param ids
      * @return
      */
-    boolean reset(UserUpdatePasswordDTO data);
+    boolean reset(UserUpdatePasswordDTO model);
 
     /**
      * 修改

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/MenuServiceImpl.java
Patch:
@@ -75,7 +75,7 @@ public List<Menu> findVisibleMenu(String group, Long userId) {
         }
 
         if (!visibleMenu.isEmpty()) {
-            // TODO 异步性能 更加
+            // TODO 异步性能 更佳
             visibleMenu.forEach((menu) -> {
                 String menuKey = key(menu.getId());
                 cacheChannel.set(MENU, menuKey, menu);

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/RoleServiceImpl.java
Patch:
@@ -129,7 +129,7 @@ public List<Role> findRoleByUserId(Long userId) {
 
 
         if (!roleList.isEmpty()) {
-            // TODO 异步性能 更加
+            // TODO 异步性能 更佳
             roleList.forEach((item) -> {
                 String itemKey = key(item.getId());
                 cacheChannel.set(ROLE, itemKey, item);

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/ApplicationController.java
Patch:
@@ -8,7 +8,7 @@
 import com.github.zuihou.authority.entity.auth.Application;
 import com.github.zuihou.authority.service.auth.ApplicationService;
 import com.github.zuihou.base.R;
-import com.github.zuihou.base.controller.SuperController;
+import com.github.zuihou.base.controller.SuperCacheController;
 import com.github.zuihou.security.annotation.PreAuth;
 import io.swagger.annotations.Api;
 import lombok.extern.slf4j.Slf4j;
@@ -31,7 +31,7 @@
 @RequestMapping("/application")
 @Api(value = "Application", tags = "应用")
 @PreAuth(replace = "application:")
-public class ApplicationController extends SuperController<ApplicationService, Long, Application, ApplicationPageDTO, ApplicationSaveDTO, ApplicationUpdateDTO> {
+public class ApplicationController extends SuperCacheController<ApplicationService, Long, Application, ApplicationPageDTO, ApplicationSaveDTO, ApplicationUpdateDTO> {
 
     @Override
     public R<Application> handlerSave(ApplicationSaveDTO applicationSaveDTO) {

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/UserController.java
Patch:
@@ -31,7 +31,6 @@
 import com.github.zuihou.log.annotation.SysLog;
 import com.github.zuihou.model.RemoteData;
 import com.github.zuihou.security.annotation.PreAuth;
-import com.github.zuihou.utils.BizAssert;
 import com.github.zuihou.utils.MapHelper;
 import com.github.zuihou.utils.StrPool;
 import io.swagger.annotations.Api;
@@ -89,6 +88,7 @@ public class UserController extends SuperCacheController<UserService, Long, User
     @Override
     public R<User> handlerSave(UserSaveDTO data) {
         User user = BeanUtil.toBean(data, User.class);
+        user.setReadonly(false);
         baseService.saveUser(user);
         return success(user);
     }
@@ -159,7 +159,6 @@ public R<User> avatar(@RequestBody @Validated(SuperEntity.Update.class) UserUpda
     @PutMapping("/password")
     @SysLog("'修改密码:' + #p0.id")
     public R<Boolean> updatePassword(@RequestBody @Validated(SuperEntity.Update.class) UserUpdatePasswordDTO data) {
-        BizAssert.notEmpty(data.getOldPassword(), "请输入旧密码");
         return success(baseService.updatePassword(data));
     }
 
@@ -193,7 +192,6 @@ public R<UserRoleDTO> findUserByRoleId(@PathVariable("roleId") Long roleId, @Req
     }
 
 
-
     @ApiOperation(value = "查询所有用户", notes = "查询所有用户")
     @GetMapping("/find")
     @SysLog("查询所有用户")
@@ -272,6 +270,7 @@ public void query(PageParams<UserPageDTO> params, IPage<User> page, Long defSize
         }
         wrapper.like(User::getName, userPage.getName())
                 .like(User::getAccount, userPage.getAccount())
+                .eq(User::getReadonly, false)
                 .like(User::getEmail, userPage.getEmail())
                 .like(User::getMobile, userPage.getMobile())
                 .eq(User::getStation, userPage.getStation())

File: zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/datasource/AuthorityDatabaseAutoConfiguration.java
Patch:
@@ -34,7 +34,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/demo/config/datasource/DemoDatabaseAutoConfiguration.java
Patch:
@@ -34,7 +34,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/file/config/datasource/FileDatabaseAutoConfiguration.java
Patch:
@@ -35,7 +35,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/msgs/config/datasource/MsgsDatabaseAutoConfiguration.java
Patch:
@@ -35,7 +35,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/strategy/impl/SmsTencentStrategy.java
Patch:
@@ -41,7 +41,7 @@ public class SmsTencentStrategy extends AbstractSmsStrategy {
         ERROR_CODE_MAP.put("1012", "签名格式错误或者签名未审批");
         ERROR_CODE_MAP.put("1013", "下发短信/语音命中了频率限制策略");
         ERROR_CODE_MAP.put("1014", "模版未审批或请求的内容与审核通过的模版内容不匹配");
-        ERROR_CODE_MAP.put("1015", "手机号在黑名单库中，通常是用户退订或者命中运营商黑名单导致的");
+        ERROR_CODE_MAP.put("1015", "手机号在阻止列表库中，通常是用户退订或者命中运营商阻止列表导致的");
         ERROR_CODE_MAP.put("1016", "手机号格式错误");
         ERROR_CODE_MAP.put("1017", "请求的短信内容太长");
         ERROR_CODE_MAP.put("1018", "语音验证码格式错误");

File: zuihou-oauth/zuihou-oauth-biz/src/main/java/com/github/zuihou/oauth/event/LoginEvent.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.event;
+package com.github.zuihou.oauth.event;
 
-import com.github.zuihou.authority.event.model.LoginStatusDTO;
+import com.github.zuihou.oauth.event.model.LoginStatusDTO;
 import org.springframework.context.ApplicationEvent;
 
 /**

File: zuihou-oauth/zuihou-oauth-biz/src/main/java/com/github/zuihou/oauth/granter/CaptchaTokenGranter.java
Patch:
@@ -1,12 +1,12 @@
 package com.github.zuihou.oauth.granter;
 
 import com.github.zuihou.authority.dto.auth.LoginParamDTO;
-import com.github.zuihou.authority.event.LoginEvent;
-import com.github.zuihou.authority.event.model.LoginStatusDTO;
 import com.github.zuihou.base.R;
 import com.github.zuihou.context.BaseContextHandler;
 import com.github.zuihou.exception.BizException;
 import com.github.zuihou.jwt.model.AuthInfo;
+import com.github.zuihou.oauth.event.LoginEvent;
+import com.github.zuihou.oauth.event.model.LoginStatusDTO;
 import com.github.zuihou.oauth.service.ValidateCodeService;
 import com.github.zuihou.utils.SpringUtils;
 import lombok.extern.slf4j.Slf4j;

File: zuihou-oauth/zuihou-oauth-biz/src/main/java/com/github/zuihou/oauth/granter/RefreshTokenGranter.java
Patch:
@@ -2,11 +2,11 @@
 
 import com.github.zuihou.authority.dto.auth.LoginParamDTO;
 import com.github.zuihou.authority.entity.auth.User;
-import com.github.zuihou.authority.event.LoginEvent;
-import com.github.zuihou.authority.event.model.LoginStatusDTO;
 import com.github.zuihou.base.R;
 import com.github.zuihou.context.BaseContextConstants;
 import com.github.zuihou.jwt.model.AuthInfo;
+import com.github.zuihou.oauth.event.LoginEvent;
+import com.github.zuihou.oauth.event.model.LoginStatusDTO;
 import com.github.zuihou.utils.SpringUtils;
 import com.github.zuihou.utils.StrHelper;
 import org.springframework.stereotype.Component;

File: zuihou-oauth/zuihou-oauth-server/src/main/java/com/github/zuihou/oauth/config/datasource/OauthDatabaseAutoConfiguration.java
Patch:
@@ -35,7 +35,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-order/zuihou-order-biz/src/main/java/com/github/zuihou/order/service/OrderService.java
Patch:
@@ -2,7 +2,7 @@
 
 import com.baomidou.mybatisplus.core.conditions.Wrapper;
 import com.baomidou.mybatisplus.core.metadata.IPage;
-import com.github.zuihou.base.service.SuperService;
+import com.github.zuihou.base.service.SuperCacheService;
 import com.github.zuihou.order.entity.Order;
 
 import java.util.List;
@@ -16,7 +16,7 @@
  * @author zuihou
  * @date 2019-08-13
  */
-public interface OrderService extends SuperService<Order> {
+public interface OrderService extends SuperCacheService<Order> {
 
     List<Order> find(Order data);
 

File: zuihou-order/zuihou-order-controller/src/main/java/com/github/zuihou/order/controller/OrderController.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou.order.controller;
 
 
-import com.github.zuihou.base.controller.SuperController;
+import com.github.zuihou.base.controller.SuperCacheController;
 import com.github.zuihou.order.dto.OrderPageDTO;
 import com.github.zuihou.order.dto.OrderSaveDTO;
 import com.github.zuihou.order.dto.OrderUpdateDTO;
@@ -29,6 +29,6 @@
 @RequestMapping("/order")
 @Api(value = "Order", tags = "订单")
 @PreAuth(replace = "order:", enabled = false)
-public class OrderController extends SuperController<OrderService, Long, Order, OrderPageDTO, OrderSaveDTO, OrderUpdateDTO> {
+public class OrderController extends SuperCacheController<OrderService, Long, Order, OrderPageDTO, OrderSaveDTO, OrderUpdateDTO> {
 
 }

File: zuihou-order/zuihou-order-controller/src/main/java/com/github/zuihou/order/controller/cloud/RestTemplateController.java
Patch:
@@ -39,8 +39,11 @@
 @RequestMapping("/restTemplate")
 @Api(value = "restTemplate", tags = "RestTemplate演示")
 public class RestTemplateController {
+
     @Resource(name = "lbRestTemplate")
     RestTemplate restTemplate;
+//    @Autowired
+//RestTemplate restTemplate;
 
 
     @GetMapping("/get")

File: zuihou-order/zuihou-order-entity/src/main/java/com/github/zuihou/order/entity/Order.java
Patch:
@@ -86,7 +86,6 @@ public class Order extends Entity<Long> {
     /**
      * 组织ID
      * #c_core_org
-     *
      * @InjectionField(api = ORG_ID_FEIGN_CLASS, method = ORG_ID_NAME_METHOD) RemoteData<Long, String>
      */
     @ApiModelProperty(value = "组织ID")

File: zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/order/config/datasource/OrderDatabaseAutoConfiguration.java
Patch:
@@ -35,7 +35,7 @@
  * @author zuihou
  * @createTime 2017-11-18 0:34
  * 断点查看原理：👇👇👇
- * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#paginationInterceptor()
+ * @see com.github.zuihou.database.datasource.BaseMybatisConfiguration#mybatisPlusInterceptor()
  * @see com.github.zuihou.database.servlet.TenantContextHandlerInterceptor
  * @see com.github.zuihou.database.parsers.DynamicTableNameParser
  */

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/dao/GlobalUserMapper.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou.tenant.dao;
 
-import com.baomidou.mybatisplus.annotation.SqlParser;
+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;
 import com.github.zuihou.base.mapper.SuperMapper;
 import com.github.zuihou.tenant.entity.GlobalUser;
 import org.springframework.stereotype.Repository;
@@ -15,7 +15,7 @@
  * @date 2019-10-25
  */
 @Repository
-@SqlParser(filter = true)
+@InterceptorIgnore(tenantLine = "true", dynamicTableName = "true")
 public interface GlobalUserMapper extends SuperMapper<GlobalUser> {
 
 }

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/dao/InitDbMapper.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou.tenant.dao;
 
-import com.baomidou.mybatisplus.annotation.SqlParser;
+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;
 import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
 
@@ -11,7 +11,7 @@
  * @date 2019/09/02
  */
 @Repository
-@SqlParser(filter = true)
+@InterceptorIgnore(tenantLine = "true", dynamicTableName = "true")
 public interface InitDbMapper {
     /**
      * 创建数据库

File: zuihou-tenant/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/dao/TenantMapper.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou.tenant.dao;
 
-import com.baomidou.mybatisplus.annotation.SqlParser;
+import com.baomidou.mybatisplus.annotation.InterceptorIgnore;
 import com.github.zuihou.base.mapper.SuperMapper;
 import com.github.zuihou.tenant.entity.Tenant;
 import org.apache.ibatis.annotations.Param;
@@ -16,7 +16,7 @@
  * @date 2019-10-25
  */
 @Repository
-@SqlParser(filter = true)
+@InterceptorIgnore(tenantLine = "true", dynamicTableName = "true")
 public interface TenantMapper extends SuperMapper<Tenant> {
 
     /**

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserService.java
Patch:
@@ -84,10 +84,10 @@ public interface UserService extends SuperCacheService<User> {
     /**
      * 重置密码
      *
-     * @param ids
+     * @param data
      * @return
      */
-    boolean reset(List<Long> ids);
+    boolean reset(UserUpdatePasswordDTO data);
 
     /**
      * 修改

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/auth/UserUpdatePasswordDTO.java
Patch:
@@ -45,7 +45,6 @@ public class UserUpdatePasswordDTO implements Serializable {
      * 密码
      */
     @ApiModelProperty(value = "旧密码")
-    @NotEmpty(message = "旧密码不能为空")
     @Length(max = 64, message = "旧密码长度不能超过64")
     private String oldPassword;
     /**

File: zuihou-authority/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/service/impl/GlobalUserServiceImpl.java
Patch:
@@ -80,8 +80,6 @@ public Boolean updatePassword(UserUpdatePasswordDTO data) {
 
         GlobalUser user = getById(data.getId());
         BizAssert.notNull(user, "用户不存在");
-        String oldPassword = SecureUtil.md5(data.getOldPassword());
-        BizAssert.equals(user.getPassword(), oldPassword, "旧密码错误");
 
         GlobalUser build = GlobalUser.builder().password(SecureUtil.md5(data.getPassword())).id(data.getId()).build();
         return updateById(build);

File: zuihou-authority/zuihou-tenant-controller/src/main/java/com/github/zuihou/tenant/controller/GlobalUserController.java
Patch:
@@ -183,13 +183,13 @@ public R<Boolean> delete(@RequestParam String tenantCode, @RequestParam("ids[]")
      * @return
      */
     @ApiOperation(value = "修改密码", notes = "修改密码")
-    @PutMapping("/password")
+    @PutMapping("/reset")
     public R<Boolean> updatePassword(@RequestBody @Validated(SuperEntity.Update.class) UserUpdatePasswordDTO model) {
         if (StrUtil.isEmpty(model.getTenantCode()) || BizConstant.SUPER_TENANT.equals(model.getTenantCode())) {
             return success(baseService.updatePassword(model));
         } else {
             BaseContextHandler.setTenant(model.getTenantCode());
-            return success(userService.updatePassword(model));
+            return success(userService.reset(model));
         }
     }
 }

File: zuihou-gateway/zuihou-gateway-server/src/main/java/com/github/zuihou/gateway/config/SwaggerResourceConfig.java
Patch:
@@ -13,6 +13,7 @@
 import springfox.documentation.swagger.web.SwaggerResource;
 import springfox.documentation.swagger.web.SwaggerResourcesProvider;
 
+import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -29,7 +30,7 @@ public class SwaggerResourceConfig implements SwaggerResourcesProvider {
 
     @Autowired
     RouteLocator routeLocator;
-    @Autowired
+    @Resource(name = "lbRestTemplate")
     RestTemplate restTemplate;
     @Autowired
     private GatewayProperties gatewayProperties;

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/config/SwaggerResourceConfig.java
Patch:
@@ -13,6 +13,7 @@
 import springfox.documentation.swagger.web.SwaggerResource;
 import springfox.documentation.swagger.web.SwaggerResourcesProvider;
 
+import javax.annotation.Resource;
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
@@ -30,7 +31,7 @@
 public class SwaggerResourceConfig implements SwaggerResourcesProvider {
     @Autowired
     RouteLocator routeLocator;
-    @Autowired
+    @Resource(name = "lbRestTemplate")
     RestTemplate restTemplate;
     @Autowired
     private SwaggerProperties swaggerProperties;

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/config/zipkin/OkhttpTraceInterceptor.java
Patch:
@@ -1,8 +1,8 @@
 package com.github.zuihou.zuul.config.zipkin;
 
 import brave.Tracer;
-import brave.internal.HexCodec;
 import brave.internal.Platform;
+import brave.internal.codec.HexCodec;
 import brave.propagation.TraceContext;
 import lombok.extern.slf4j.Slf4j;
 import okhttp3.Headers;

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/filter/BaseFilter.java
Patch:
@@ -7,7 +7,6 @@
 import com.netflix.zuul.ZuulFilter;
 import com.netflix.zuul.context.RequestContext;
 import lombok.extern.slf4j.Slf4j;
-import org.apache.commons.lang.StringUtils;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.cloud.netflix.zuul.filters.Route;
@@ -72,7 +71,7 @@ protected boolean isIgnoreToken() {
 
     protected String getHeader(String headerName, HttpServletRequest request) {
         String token = request.getHeader(headerName);
-        if (StringUtils.isBlank(token)) {
+        if (StrUtil.isBlank(token)) {
             token = request.getParameter(headerName);
         }
         return token;

File: zuihou-order/zuihou-order-controller/src/main/java/com/github/zuihou/order/controller/cloud/RestTemplateController.java
Patch:
@@ -6,7 +6,6 @@
 import com.github.zuihou.order.entity.Order;
 import io.swagger.annotations.Api;
 import lombok.extern.slf4j.Slf4j;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.core.ParameterizedTypeReference;
 import org.springframework.http.HttpEntity;
 import org.springframework.http.HttpMethod;
@@ -19,6 +18,7 @@
 import org.springframework.web.bind.annotation.RestController;
 import org.springframework.web.client.RestTemplate;
 
+import javax.annotation.Resource;
 import java.math.BigDecimal;
 import java.time.LocalDate;
 import java.time.LocalDateTime;
@@ -39,8 +39,7 @@
 @RequestMapping("/restTemplate")
 @Api(value = "restTemplate", tags = "RestTemplate演示")
 public class RestTemplateController {
-
-    @Autowired
+    @Resource(name = "lbRestTemplate")
     RestTemplate restTemplate;
 
 

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/auth/User.java
Patch:
@@ -4,6 +4,7 @@
 import cn.afterturn.easypoi.excel.annotation.ExcelEntity;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
+import com.fasterxml.jackson.annotation.JsonIgnore;
 import com.github.zuihou.authority.entity.core.Org;
 import com.github.zuihou.authority.enumeration.auth.Sex;
 import com.github.zuihou.base.entity.Entity;
@@ -222,6 +223,7 @@ public class User extends Entity<Long> {
     @NotEmpty(message = "密码不能为空")
     @Length(max = 64, message = "密码长度不能超过64")
     @TableField(value = "password", condition = LIKE)
+    @JsonIgnore
     private String password;
 
     /**

File: zuihou-authority/zuihou-tenant-controller/src/main/java/com/github/zuihou/tenant/controller/TenantController.java
Patch:
@@ -62,16 +62,17 @@ public R<Boolean> check(@PathVariable("code") String code) {
         return success(baseService.check(code));
     }
 
+
     @Override
     public R<Boolean> handlerDelete(List<Long> ids) {
-        // 这个操作相当的危险，请谨慎操作！！
+        // 这个操作相当的危险，请谨慎操作！！!
         return success(baseService.delete(ids));
     }
 
     @ApiOperation(value = "修改租户状态", notes = "修改租户状态")
     @PostMapping("/status")
     public R<Boolean> updateStatus(@RequestParam("ids[]") List<Long> ids,
-                                   @RequestParam @NotNull(message = "状态不能为空") TenantStatusEnum status) {
+                                   @RequestParam(defaultValue = "FORBIDDEN") @NotNull(message = "状态不能为空") TenantStatusEnum status) {
         return success(baseService.update(Wraps.<Tenant>lbU().set(Tenant::getStatus, status).in(Tenant::getId, ids)));
     }
 }

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.authority.service.auth.impl;
 
+
 import com.github.zuihou.authority.dao.auth.ResourceMapper;
 import com.github.zuihou.authority.dto.auth.ResourceQueryDTO;
 import com.github.zuihou.authority.entity.auth.Resource;
@@ -36,6 +37,7 @@
  */
 @Slf4j
 @Service
+
 public class ResourceServiceImpl extends SuperCacheServiceImpl<ResourceMapper, Resource> implements ResourceService {
 
     @Autowired

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/RoleAuthorityServiceImpl.java
Patch:
@@ -35,6 +35,7 @@
  */
 @Slf4j
 @Service
+
 public class RoleAuthorityServiceImpl extends SuperServiceImpl<RoleAuthorityMapper, RoleAuthority> implements RoleAuthorityService {
 
     @Autowired

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/common/DictionaryItemService.java
Patch:
@@ -27,7 +27,6 @@ public interface DictionaryItemService extends SuperCacheService<DictionaryItem>
 
     /**
      * 根据类型编码查询字典项
-     *
      * @param codes
      * @return
      */

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/DictionaryItemController.java
Patch:
@@ -32,11 +32,11 @@
 @PreAuth(replace = "dict:")
 public class DictionaryItemController extends SuperCacheController<DictionaryItemService, Long, DictionaryItem, DictionaryItem, DictionaryItemSaveDTO, DictionaryItemUpdateDTO> {
     @Override
-    public void handlerWrapper(QueryWrap<DictionaryItem> wrapper, PageParams<DictionaryItem> params) {
-        super.handlerWrapper(wrapper, params);
-        DictionaryItem model = params.getModel();
+    public QueryWrap<DictionaryItem> handlerWrapper(DictionaryItem model, PageParams<DictionaryItem> params) {
+        QueryWrap<DictionaryItem> wrapper = super.handlerWrapper(model, params);
         wrapper.lambda().ignore(DictionaryItem::setDictionaryType)
                 .eq(DictionaryItem::getDictionaryType, model.getDictionaryType());
+        return wrapper;
     }
 
 }

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/LoginLogController.java
Patch:
@@ -46,9 +46,8 @@ public class LoginLogController extends SuperController<LoginLogService, Long, L
      * @return 查询结果
      */
     @Override
-    public void handlerWrapper(QueryWrap<LoginLog> wrapper, PageParams<LoginLog> params) {
-        super.handlerWrapper(wrapper, params);
-        LoginLog model = params.getModel();
+    public QueryWrap<LoginLog> handlerWrapper(LoginLog model, PageParams<LoginLog> params) {
+        QueryWrap<LoginLog> wrapper = super.handlerWrapper(model, params);
 
         wrapper.lambda()
                 // 忽略 Wraps.q(model); 时， account  和 requestIp 字段的默认查询规则，
@@ -57,6 +56,7 @@ public void handlerWrapper(QueryWrap<LoginLog> wrapper, PageParams<LoginLog> par
                 // 使用 自定义的查询规则
                 .likeRight(LoginLog::getAccount, model.getAccount())
                 .likeRight(LoginLog::getRequestIp, model.getRequestIp());
+        return wrapper;
     }
 
     @ApiOperation("清空日志")

File: zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/AuthorityApplication.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou;
 
 import com.github.zuihou.security.annotation.EnableLoginArgResolver;
-import com.github.zuihou.validator.config.EnableFormValidator;
+import com.github.zuihou.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;

File: zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/area2/ICityParser.java
Patch:
@@ -7,10 +7,8 @@
 
 public interface ICityParser {
 
-    String PATH = "/Users/tangyh/githubspace/zuihou-admin-cloud";
-
     /**
-     * *解析得到省市区数据
+     * 解析得到省市区数据
      *
      * @param url 请求url
      * @return 城市

File: zuihou-authority/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/service/impl/GlobalUserServiceImpl.java
Patch:
@@ -29,6 +29,7 @@
  */
 @Slf4j
 @Service
+
 public class GlobalUserServiceImpl extends SuperServiceImpl<GlobalUserMapper, GlobalUser> implements GlobalUserService {
 
     @Override

File: zuihou-authority/zuihou-tenant-biz/src/main/java/com/github/zuihou/tenant/service/impl/TenantServiceImpl.java
Patch:
@@ -32,6 +32,7 @@
  */
 @Slf4j
 @Service
+
 public class TenantServiceImpl extends SuperCacheServiceImpl<TenantMapper, Tenant> implements TenantService {
 
     @Autowired

File: zuihou-demo/zuihou-demo-biz/src/main/java/com/github/zuihou/demo/service/impl/CCommonAreaServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.demo.service.impl;
 
+
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import com.github.zuihou.demo.dao.CCommonAreaMapper;
 import com.github.zuihou.demo.entity.CCommonArea;
@@ -18,6 +19,7 @@
  */
 @Slf4j
 @Service
+
 public class CCommonAreaServiceImpl extends ServiceImpl<CCommonAreaMapper, CCommonArea> implements CCommonAreaService {
 
 }

File: zuihou-demo/zuihou-demo-biz/src/main/java/com/github/zuihou/demo/service/impl/ProductServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.demo.service.impl;
 
+
 import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
 import com.github.zuihou.demo.dao.ProductMapper;
 import com.github.zuihou.demo.entity.Product;
@@ -19,6 +20,7 @@
  */
 @Slf4j
 @Service
+
 public class ProductServiceImpl extends ServiceImpl<ProductMapper, Product> implements ProductService {
 
     @Override

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/DemoServerApplication.java
Patch:
@@ -1,7 +1,8 @@
 package com.github.zuihou;
 
+import com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration;
 import com.github.zuihou.security.annotation.EnableLoginArgResolver;
-import com.github.zuihou.validator.config.EnableFormValidator;
+import com.github.zuihou.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -18,7 +19,7 @@
 /**
  * @author zuihou
  */
-@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, SeataFeignClientAutoConfiguration.class})
 @EnableDiscoveryClient
 @EnableHystrix
 @EnableFeignClients(value = {

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/properties/FileServerProperties.java
Patch:
@@ -17,9 +17,10 @@
  */
 @Setter
 @Getter
-@ConfigurationProperties(prefix = "zuihou.file")
+@ConfigurationProperties(prefix = FileServerProperties.PREFIX)
 @RefreshScope
 public class FileServerProperties {
+    public static final String PREFIX = "zuihou.file";
     /**
      * 为以下3个值，指定不同的自动化配置
      * qiniu：七牛oss

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/AttachmentServiceImpl.java
Patch:
@@ -50,6 +50,7 @@
  */
 @Slf4j
 @Service
+
 public class AttachmentServiceImpl extends SuperServiceImpl<AttachmentMapper, Attachment> implements AttachmentService {
     @Autowired
     private DatabaseProperties databaseProperties;

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/FileServiceImpl.java
Patch:
@@ -59,6 +59,7 @@
  */
 @Slf4j
 @Service
+
 public class FileServiceImpl extends SuperServiceImpl<FileMapper, File> implements FileService {
 
     @Autowired

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/storage/FastDfsAutoConfigure.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.file.storage;
 
+
 import com.github.tobato.fastdfs.domain.fdfs.StorePath;
 import com.github.tobato.fastdfs.service.AppendFileStorageClient;
 import com.github.tobato.fastdfs.service.FastFileStorageClient;
@@ -33,9 +34,10 @@
 @EnableConfigurationProperties(FileServerProperties.class)
 @Configuration
 @Slf4j
-@ConditionalOnProperty(name = "zuihou.file.type", havingValue = "FAST_DFS")
+@ConditionalOnProperty(prefix = FileServerProperties.PREFIX, name = "type", havingValue = "FAST_DFS")
 public class FastDfsAutoConfigure {
     @Service
+
     public class FastDfsServiceImpl extends AbstractFileStrategy {
         @Autowired
         private FastFileStorageClient storageClient;

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/storage/LocalAutoConfigure.java
Patch:
@@ -45,7 +45,7 @@
 
 @EnableConfigurationProperties(FileServerProperties.class)
 @Configuration
-@ConditionalOnProperty(name = "zuihou.file.type", havingValue = "LOCAL")
+@ConditionalOnProperty(prefix = FileServerProperties.PREFIX, name = "type", havingValue = "LOCAL", matchIfMissing = true)
 @Slf4j
 public class LocalAutoConfigure {
 

File: zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/FileServerApplication.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou;
 
 import com.github.zuihou.security.annotation.EnableLoginArgResolver;
-import com.github.zuihou.validator.config.EnableFormValidator;
+import com.github.zuihou.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;

File: zuihou-gateway/zuihou-gateway-server/src/main/java/com/github/zuihou/gateway/filter/MySwaggerXForwardedHeadersFilter.java
Patch:
@@ -15,7 +15,8 @@
 import static org.springframework.cloud.gateway.support.ServerWebExchangeUtils.GATEWAY_REQUEST_URL_ATTR;
 
 /**
- * This is a Description
+ * 1, spring.cloud.gateway.x-forwarded.prefixEnabled: false ， 仅供官方 XForwardedHeadersFilter 的部分功能
+ * 2，重写 XForwardedHeadersFilter 禁用掉的部分功能
  *
  * @author zuihou
  * @date 2019/08/13
@@ -59,6 +60,7 @@ public HttpHeaders filter(HttpHeaders input, ServerWebExchange exchange) {
                         prefix = originalUriPath.replace(requestUriPath, "");
                         if (prefix != null && prefix.length() > 0 &&
                                 prefix.length() <= originalUri.getPath().length()) {
+                            // 就是这里跟官方的XForwardedHeadersFilter 不同，多了：contextPath
                             updated.set(X_FORWARDED_PREFIX_HEADER, contextPath + prefix);
                         }
                     }

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/filter/BaseFilter.java
Patch:
@@ -38,7 +38,7 @@ public abstract class BaseFilter extends ZuulFilter {
     protected RouteLocator routeLocator;
 
     protected boolean isDev(String token) {
-        return !StrPool.PROD.equalsIgnoreCase(profiles) && StrPool.TEST.equalsIgnoreCase(token);
+        return !StrPool.PROD.equalsIgnoreCase(profiles) && (StrPool.TEST_TOKEN.equalsIgnoreCase(token) || StrPool.TEST.equalsIgnoreCase(token));
     }
 
     /**

File: zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/Demo2JobHandler.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou.executor.jobhandler;
 
-import com.github.zuihou.authority.dao.auth.UserMapper;
 import com.github.zuihou.authority.entity.auth.User;
+import com.github.zuihou.authority.service.auth.UserService;
 import com.github.zuihou.context.BaseContextHandler;
 import com.xxl.job.core.biz.model.ReturnT;
 import com.xxl.job.core.handler.IJobHandler;
@@ -28,14 +28,14 @@
 public class Demo2JobHandler extends IJobHandler {
 
     @Autowired
-    private UserMapper userMapper;
+    private UserService userService;
 
     @Override
     public ReturnT<String> execute2(String param) throws Exception {
 
         BaseContextHandler.setTenant("0000");
 
-        User user = userMapper.selectById(3);
+        User user = userService.getByIdCache(3);
         //记录日志的方法推荐使用这个:XxlJobLogger.log ，因为这个记录的日志，可以在zuihou-jobs-server管理后台查看
         XxlJobLogger.log("执行结果--->param={}, user={} ", param, user);
         log.info("执行结果--->hello:{}, user:[{}] ", "hello local", user);

File: zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/tenant/RestBase0000JobHandler.java
Patch:
@@ -31,7 +31,6 @@ public ReturnT<String> execute2(String param) throws Exception {
         XxlJobLogger.log("执行参数--->param={} ", param);
 
         initSystemContext.reset(DEF_TENANT);
-
         return SUCCESS;
     }
 }

File: zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/tenant/RestTenantJobHandler.java
Patch:
@@ -43,7 +43,7 @@ public class RestTenantJobHandler extends IJobHandler {
     @Autowired
     private InitDbMapper initDbMapper;
 
-    @Value("${zuihou.database.tenantDatabasePrefix:zuihou_base}")
+    @Value("${zuihou.database.tenantDatabasePrefix}")
     private String database;
 
     @Override

File: zuihou-msgs/zuihou-msgs-biz/src/main/java/com/github/zuihou/msgs/service/impl/MsgsCenterInfoReceiveServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.msgs.service.impl;
 
+
 import com.github.zuihou.base.service.SuperServiceImpl;
 import com.github.zuihou.msgs.dao.MsgsCenterInfoReceiveMapper;
 import com.github.zuihou.msgs.entity.MsgsCenterInfoReceive;
@@ -19,6 +20,7 @@
  */
 @Slf4j
 @Service
+
 public class MsgsCenterInfoReceiveServiceImpl extends SuperServiceImpl<MsgsCenterInfoReceiveMapper, MsgsCenterInfoReceive> implements MsgsCenterInfoReceiveService {
 
 }

File: zuihou-msgs/zuihou-msgs-biz/src/main/java/com/github/zuihou/msgs/service/impl/MsgsCenterInfoServiceImpl.java
Patch:
@@ -37,6 +37,7 @@
  */
 @Slf4j
 @Service
+
 public class MsgsCenterInfoServiceImpl extends SuperServiceImpl<MsgsCenterInfoMapper, MsgsCenterInfo> implements MsgsCenterInfoService {
     @Autowired
     private MsgsCenterInfoReceiveService msgsCenterInfoReceiveService;

File: zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/MsgsServerApplication.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou;
 
 import com.github.zuihou.security.annotation.EnableLoginArgResolver;
-import com.github.zuihou.validator.config.EnableFormValidator;
+import com.github.zuihou.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;

File: zuihou-msgs/zuihou-msgs-server/src/test/java/com/github/zuihou/NoBootTest.java
Patch:
@@ -21,16 +21,16 @@ public void test() {
                 .maximumSize(100)
                 .build();
 
-        Object val = cache.get("zuihouaa", (key) -> "延迟加载" + key);
+        Object val = cache.get("hello", (key) -> "延迟加载" + key);
         System.out.println(val);
 
-        System.out.println(cache.getIfPresent("zuihouaa"));
+        System.out.println(cache.getIfPresent("hello"));
 
     }
 
     @Test
     public void test2() {
-        String data = "zuihou:\n" +
+        String data = "hello:\n" +
                 "  swagger:\n" +
                 "    enabled: true\n" +
                 "    title: 网关模块\n" +

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsSendStatusServiceImpl.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.sms.service.impl;
 
+
 import com.github.zuihou.base.service.SuperServiceImpl;
 import com.github.zuihou.sms.dao.SmsSendStatusMapper;
 import com.github.zuihou.sms.entity.SmsSendStatus;
@@ -18,6 +19,7 @@
  */
 @Slf4j
 @Service
+
 public class SmsSendStatusServiceImpl extends SuperServiceImpl<SmsSendStatusMapper, SmsSendStatus> implements SmsSendStatusService {
 
 }

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsTaskServiceImpl.java
Patch:
@@ -51,6 +51,7 @@
  */
 @Slf4j
 @Service
+
 public class SmsTaskServiceImpl extends SuperServiceImpl<SmsTaskMapper, SmsTask> implements SmsTaskService {
     @Resource
     private JobsTimingApi jobsTimingApi;
@@ -93,7 +94,7 @@ private static String processTemplate(String template, String regex, JSONObject
     @Override
     @Transactional(rollbackFor = Exception.class)
     public void saveTask(SmsTask smsTask, TemplateCodeType type) {
-        validAndInit(smsTask, null);
+        validAndInit(smsTask, type);
 
         send(smsTask, (task) -> save(task));
     }

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsTemplateServiceImpl.java
Patch:
@@ -31,6 +31,7 @@
  */
 @Slf4j
 @Service
+
 public class SmsTemplateServiceImpl extends SuperServiceImpl<SmsTemplateMapper, SmsTemplate> implements SmsTemplateService {
 
     @Autowired

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/strategy/SmsContext.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.sms.strategy;
 
+
 import com.github.zuihou.base.R;
 import com.github.zuihou.sms.dao.SmsTaskMapper;
 import com.github.zuihou.sms.dao.SmsTemplateMapper;
@@ -19,6 +20,7 @@
  * @date 2019-05-15
  */
 @Component
+
 public class SmsContext {
     private final Map<String, SmsStrategy> smsContextStrategyMap = new ConcurrentHashMap<>();
 

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/strategy/impl/AbstractSmsStrategy.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.sms.strategy.impl;
 
+
 import com.github.zuihou.base.R;
 import com.github.zuihou.sms.dao.SmsTaskMapper;
 import com.github.zuihou.sms.entity.SmsSendStatus;
@@ -26,6 +27,7 @@
  * @date 2018/12/20
  */
 @Slf4j
+
 public abstract class AbstractSmsStrategy implements SmsStrategy {
 
     @Autowired

File: zuihou-msgs/zuihou-sms-controller/src/main/java/com/github/zuihou/sms/controller/VerificationCodeController.java
Patch:
@@ -58,7 +58,8 @@ public R<Boolean> send(@Validated @RequestBody VerificationCodeDTO data) {
         param.put("1", code);
         smsTask.setTemplateParams(param.toString());
         smsTask.setReceiver(data.getMobile());
-        smsTaskService.saveTask(smsTask, TemplateCodeType.ZUIHOU_COMMON);
+        smsTask.setDraft(false);
+        smsTaskService.saveTask(smsTask, TemplateCodeType.COMMON_SMS);
 
         String key = CacheKey.buildTenantKey(CacheKey.REGISTER_USER, data.getType().name(), data.getMobile());
         cacheRepository.setExpire(key, code, CacheRepository.DEF_TIMEOUT_5M);

File: zuihou-oauth/zuihou-oauth-biz/src/main/java/com/github/zuihou/oauth/granter/RefreshTokenGranter.java
Patch:
@@ -34,7 +34,7 @@ public R<AuthInfo> grant(LoginParamDTO loginParam) {
             return R.fail("加载用户信息失败");
         }
 
-        AuthInfo authInfo = tokenUtil.parseJWT(refreshTokenStr);
+        AuthInfo authInfo = tokenUtil.parseRefreshToken(refreshTokenStr);
 
         if (!BaseContextConstants.REFRESH_TOKEN_KEY.equals(authInfo.getTokenType())) {
             return R.fail("refreshToken无效，无法加载用户信息");

File: zuihou-order/zuihou-order-controller/src/main/java/com/github/zuihou/order/api/TestDateApi.java
Patch:
@@ -32,6 +32,7 @@ public interface TestDateApi {
 
     /**
      * 测试
+     * 调用这个接口会报错，原因是FeignClient 不支持GET请求，传复杂对象。
      *
      * @param data
      * @return

File: zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/OrderServerApplication.java
Patch:
@@ -1,7 +1,8 @@
 package com.github.zuihou;
 
+import com.alibaba.cloud.seata.feign.SeataFeignClientAutoConfiguration;
 import com.github.zuihou.security.annotation.EnableLoginArgResolver;
-import com.github.zuihou.validator.config.EnableFormValidator;
+import com.github.zuihou.validator.annotation.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -20,7 +21,7 @@
  *
  * @author zuihou
  */
-@SpringBootApplication(exclude = DataSourceAutoConfiguration.class)
+@SpringBootApplication(exclude = {DataSourceAutoConfiguration.class, SeataFeignClientAutoConfiguration.class})
 @EnableDiscoveryClient
 @EnableHystrix
 @EnableFeignClients(value = {

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.zuihou.authority.service.auth.impl;
 
-
 import com.github.zuihou.authority.dao.auth.ResourceMapper;
 import com.github.zuihou.authority.dto.auth.ResourceQueryDTO;
 import com.github.zuihou.authority.entity.auth.Resource;
@@ -37,7 +36,6 @@
  */
 @Slf4j
 @Service
-
 public class ResourceServiceImpl extends SuperCacheServiceImpl<ResourceMapper, Resource> implements ResourceService {
 
     @Autowired
@@ -86,7 +84,7 @@ public List<Resource> findVisibleResource(ResourceQueryDTO resource) {
         // 若list里面的值过多，而资源又均没有缓存（或者缓存击穿），则这里的效率并不高
 
         List<Long> list = (List<Long>) cacheObject.getValue();
-        List<Resource> resourceList = list.stream().map(this::getByIdCache).collect(Collectors.toList());
+        List<Resource> resourceList = list.stream().map(this::getByIdCache).filter(Objects::nonNull).collect(Collectors.toList());
 
         if (resource.getMenuId() == null) {
             return resourceList;

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/auth/Role.java
Patch:
@@ -84,7 +84,7 @@ public class Role extends Entity<Long> {
 
     /**
      * 数据权限类型
-     * #DataScopeType{ALL:1,全部;THIS_LEVEL:2,本级;THIS_LEVEL_CHILDREN:3,本级以及子级;CUSTOMIZE:4,自定义;SELF:5,个人;}
+     * #DataScopeType{ALL:5,全部;THIS_LEVEL:4,本级;THIS_LEVEL_CHILDREN:3,本级以及子级;CUSTOMIZE:2,自定义;SELF:1,个人;}
      */
     @ApiModelProperty(value = "数据权限类型")
     @NotNull(message = "数据权限类型不能为空")

File: zuihou-msgs/zuihou-msgs-biz/src/main/java/com/github/zuihou/msgs/service/impl/MsgsCenterInfoServiceImpl.java
Patch:
@@ -70,7 +70,7 @@ public MsgsCenterInfo saveMsgs(MsgsCenterInfoSaveDTO data) {
     @Override
     @Transactional(rollbackFor = Exception.class)
     public boolean delete(List<Long> ids, Long userId) {
-        msgsCenterInfoReceiveService.remove(Wraps.<MsgsCenterInfoReceive>lbQ()
+        boolean bool = msgsCenterInfoReceiveService.remove(Wraps.<MsgsCenterInfoReceive>lbQ()
                 .eq(MsgsCenterInfoReceive::getUserId, userId)
                 .in(MsgsCenterInfoReceive::getMsgsCenterId, ids));
 
@@ -82,7 +82,7 @@ public boolean delete(List<Long> ids, Long userId) {
                 super.remove(Wraps.<MsgsCenterInfo>lbQ().eq(MsgsCenterInfo::getId, msgCenterId));
             }
         }
-        return true;
+        return bool;
     }
 
     /**
@@ -106,7 +106,7 @@ public boolean mark(List<Long> msgCenterIds, Long userId) {
         //其他类型的修改状态
         if (!list.isEmpty()) {
             List<Long> idList = list.stream().mapToLong(MsgsCenterInfo::getId).boxed().collect(Collectors.toList());
-            msgsCenterInfoReceiveService.update(Wraps.<MsgsCenterInfoReceive>lbU()
+            return msgsCenterInfoReceiveService.update(Wraps.<MsgsCenterInfoReceive>lbU()
                     .eq(MsgsCenterInfoReceive::getUserId, userId)
                     .in(MsgsCenterInfoReceive::getMsgsCenterId, idList)
                     .set(MsgsCenterInfoReceive::getIsRead, true)

File: zuihou-oauth/zuihou-oauth-controller/src/main/java/com/github/zuihou/oauth/controller/OauthResourceController.java
Patch:
@@ -16,6 +16,7 @@
 import springfox.documentation.annotations.ApiIgnore;
 
 import java.util.List;
+import java.util.Objects;
 import java.util.stream.Collectors;
 
 /**
@@ -55,7 +56,7 @@ public R<List<String>> visible(ResourceQueryDTO resource, @ApiIgnore @LoginUser
             resource.setUserId(sysUser.getId());
         }
         List<Resource> list = resourceService.findVisibleResource(resource);
-        return R.success(list.stream().map(Resource::getCode).collect(Collectors.toList()));
+        return R.success(list.stream().filter(Objects::nonNull).map(Resource::getCode).collect(Collectors.toList()));
     }
 
 

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserRoleService.java
Patch:
@@ -17,7 +17,8 @@ public interface UserRoleService extends SuperService<UserRole> {
     /**
      * 初始化超级管理员角色 权限
      *
-     * @param userId
+     * @param userId 用户id
+     * @return 是否正确
      */
-    void initAdmin(Long userId);
+    boolean initAdmin(Long userId);
 }

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/SystemApiServiceImpl.java
Patch:
@@ -11,8 +11,8 @@
 import com.github.zuihou.database.mybatis.conditions.query.LbqWrapper;
 import com.github.zuihou.utils.BeanPlusUtil;
 import lombok.extern.slf4j.Slf4j;
-import org.springframework.cache.annotation.CacheConfig;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.List;
 
@@ -29,14 +29,14 @@
  */
 @Slf4j
 @Service
-@CacheConfig(cacheNames = SYSTEM_API)
 public class SystemApiServiceImpl extends SuperCacheServiceImpl<SystemApiMapper, SystemApi> implements SystemApiService {
     @Override
     protected String getRegion() {
         return SYSTEM_API;
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public Boolean batchSave(SystemApiScanSaveDTO data) {
         List<SystemApiSaveDTO> list = data.getSystemApiList();
         if (CollUtil.isEmpty(list)) {

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/RoleController.java
Patch:
@@ -14,6 +14,7 @@
 import com.github.zuihou.database.mybatis.auth.DataScopeType;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.log.annotation.SysLog;
+import com.github.zuihou.security.annotation.PreAuth;
 import com.github.zuihou.utils.BeanPlusUtil;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
@@ -39,6 +40,7 @@
 @RestController
 @RequestMapping("/role")
 @Api(value = "Role", tags = "角色")
+@PreAuth(replace = "role:")
 public class RoleController extends SuperCacheController<RoleService, Long, Role, RolePageDTO, RoleSaveDTO, RoleUpdateDTO> {
 
     @Autowired

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/AreaController.java
Patch:
@@ -11,6 +11,7 @@
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.database.mybatis.conditions.query.LbqWrapper;
 import com.github.zuihou.log.annotation.SysLog;
+import com.github.zuihou.security.annotation.PreAuth;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
 import lombok.extern.slf4j.Slf4j;
@@ -33,6 +34,7 @@
 @RestController
 @RequestMapping("/area")
 @Api(value = "Area", tags = "地区表")
+@PreAuth(replace = "area:")
 public class AreaController extends SuperCacheController<AreaService, Long, Area, AreaPageDTO, AreaSaveDTO, AreaUpdateDTO> {
 
     @ApiOperation(value = "检测地区编码是否重复", notes = "检测地区编码是否重复")

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/DashboardController.java
Patch:
@@ -4,8 +4,8 @@
 import com.github.zuihou.authority.service.common.LoginLogService;
 import com.github.zuihou.base.R;
 import com.github.zuihou.database.properties.DatabaseProperties;
-import com.github.zuihou.user.annotation.LoginUser;
-import com.github.zuihou.user.model.SysUser;
+import com.github.zuihou.security.annotation.LoginUser;
+import com.github.zuihou.security.model.SysUser;
 import io.swagger.annotations.Api;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;

File: zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/DictionaryController.java
Patch:
@@ -10,6 +10,7 @@
 import com.github.zuihou.base.R;
 import com.github.zuihou.base.controller.SuperController;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
+import com.github.zuihou.security.annotation.PreAuth;
 import io.swagger.annotations.Api;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -33,6 +34,7 @@
 @RestController
 @RequestMapping("/dictionary")
 @Api(value = "Dictionary", tags = "字典类型")
+@PreAuth(replace = "dict:")
 public class DictionaryController extends SuperController<DictionaryService, Long, Dictionary, Dictionary, DictionarySaveDTO, DictionaryUpdateDTO> {
 
     @Autowired

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/common/ParameterPageDTO.java
Patch:
@@ -56,7 +56,7 @@ public class ParameterPageDTO implements Serializable {
      * 描述
      */
     @ApiModelProperty(value = "描述")
-    @Length(max = 200, message = "描述长度不能超过200")
+    @Length(max = 255, message = "描述长度不能超过255")
     private String describe;
     /**
      * 状态

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/common/ParameterSaveDTO.java
Patch:
@@ -55,7 +55,7 @@ public class ParameterSaveDTO implements Serializable {
      * 描述
      */
     @ApiModelProperty(value = "描述")
-    @Length(max = 200, message = "描述长度不能超过200")
+    @Length(max = 255, message = "描述长度不能超过255")
     private String describe;
     /**
      * 状态

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/common/ParameterUpdateDTO.java
Patch:
@@ -61,7 +61,7 @@ public class ParameterUpdateDTO implements Serializable {
      * 描述
      */
     @ApiModelProperty(value = "描述")
-    @Length(max = 200, message = "描述长度不能超过200")
+    @Length(max = 255, message = "描述长度不能超过255")
     private String describe;
     /**
      * 状态

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/common/Parameter.java
Patch:
@@ -70,7 +70,7 @@ public class Parameter extends Entity<Long> {
      * 描述
      */
     @ApiModelProperty(value = "描述")
-    @Length(max = 200, message = "描述长度不能超过200")
+    @Length(max = 255, message = "描述长度不能超过255")
     @TableField(value = "describe_", condition = LIKE)
     @Excel(name = "描述", width = 40)
     private String describe;

File: zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/enumeration/auth/ApplicationAppTypeEnum.java
Patch:
@@ -15,7 +15,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2019-12-25
+ * @date 2020-04-02
  */
 @Getter
 @AllArgsConstructor
@@ -60,7 +60,7 @@ public static ApplicationAppTypeEnum get(String val) {
     }
 
     public boolean eq(String val) {
-        return name().equalsIgnoreCase(val);
+        return this.name().equalsIgnoreCase(val);
     }
 
     public boolean eq(ApplicationAppTypeEnum val) {
@@ -73,7 +73,7 @@ public boolean eq(ApplicationAppTypeEnum val) {
     @Override
     @ApiModelProperty(value = "编码", allowableValues = "SERVER,APP,PC,WAP", example = "SERVER")
     public String getCode() {
-        return name();
+        return this.name();
     }
 
 }

File: zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/AuthorityApplication.java
Patch:
@@ -1,7 +1,6 @@
 package com.github.zuihou;
 
-import com.github.zuihou.auth.server.EnableAuthServer;
-import com.github.zuihou.user.annotation.EnableLoginArgResolver;
+import com.github.zuihou.security.annotation.EnableLoginArgResolver;
 import com.github.zuihou.validator.config.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
@@ -26,7 +25,6 @@
  */
 @SpringBootApplication
 @EnableDiscoveryClient
-@EnableAuthServer
 @Configuration
 @EnableFeignClients(value = {
         "com.github.zuihou",

File: zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/ExceptionConfiguration.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.zuihou.authority.config;
 
 import com.github.zuihou.boot.handler.DefaultGlobalExceptionHandler;
+import lombok.extern.slf4j.Slf4j;
 import org.springframework.context.annotation.Configuration;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.ControllerAdvice;
@@ -16,5 +17,7 @@
 @Configuration
 @ControllerAdvice(annotations = {RestController.class, Controller.class})
 @ResponseBody
+@Slf4j
 public class ExceptionConfiguration extends DefaultGlobalExceptionHandler {
+
 }

File: zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/RemoteDataMybatisTest.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.zuihou;
 
-import com.github.zuihou.authority.api.OrgApi;
 import com.github.zuihou.authority.dao.auth.MenuMapper;
 import com.github.zuihou.authority.dao.auth.ResourceMapper;
 import com.github.zuihou.authority.dao.auth.RoleMapper;
@@ -18,6 +17,7 @@
 import com.github.zuihou.database.mybatis.conditions.query.LbqWrapper;
 import com.github.zuihou.injection.core.InjectionCore;
 import com.github.zuihou.model.RemoteData;
+import com.github.zuihou.oauth.api.OrgApi;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.Before;
 import org.junit.Test;

File: zuihou-authority/zuihou-tenant-entity/src/main/java/com/github/zuihou/authority/dto/defaults/TenantSaveInitDTO.java
Patch:
@@ -85,5 +85,5 @@ public class TenantSaveInitDTO implements Serializable {
      */
     @ApiModelProperty(value = "手机")
     @Length(max = 20, message = "手机长度不能超过20")
-    private String mainmobile;
+    private String mobile;
 }

File: zuihou-authority/zuihou-tenant-entity/src/main/java/com/github/zuihou/authority/entity/defaults/GlobalUser.java
Patch:
@@ -44,7 +44,6 @@ public class GlobalUser extends Entity<Long> {
     @NotEmpty(message = "租户编号不能为空")
     @Length(max = 10, message = "租户编号长度不能超过10")
     @TableField(value = "tenant_code", condition = LIKE)
-    @Excel(name = "租户编号")
     private String tenantCode;
 
     /**
@@ -63,10 +62,12 @@ public class GlobalUser extends Entity<Long> {
     @ApiModelProperty(value = "手机")
     @Length(max = 20, message = "手机长度不能超过20")
     @TableField(value = "mobile", condition = LIKE)
+    @Excel(name = "手机", width = 20)
     private String mobile;
+
     @ApiModelProperty(value = "是否只读")
     @TableField(value = "readonly")
-    @Excel(name = "手机", width = 20)
+    @Excel(name = "是否只读", width = 20)
     private Boolean readonly;
 
     /**

File: zuihou-authority/zuihou-tenant-entity/src/main/java/com/github/zuihou/authority/enumeration/defaults/TenantStatusEnum.java
Patch:
@@ -40,6 +40,7 @@ public enum TenantStatusEnum implements BaseEnum {
      * REFUSE="拒绝"
      */
     REFUSE("拒绝"),
+    DELETE("已删除"),
     ;
 
     @ApiModelProperty(value = "描述")

File: zuihou-demo/zuihou-demo-biz/src/main/java/com/github/zuihou/demo/service/ProductService.java
Patch:
@@ -14,4 +14,5 @@
  */
 public interface ProductService extends IService<Product> {
 
+    boolean saveEx(Product data);
 }

File: zuihou-demo/zuihou-demo-controller/src/main/java/com/github/zuihou/demo/controller/test/SeataTxController.java
Patch:
@@ -39,8 +39,7 @@ public R<Product> save(@RequestBody Product data) {
     @PostMapping("/saveEx")
     public R<Product> saveEx(@RequestBody Product data) {
         log.info("data={}", data);
-        productService.save(data);
-        int i = 1 / 0;
+        productService.saveEx(data);
         return R.success(data);
     }
 }

File: zuihou-demo/zuihou-demo-controller/src/main/java/com/github/zuihou/demo/controller/test/TestController.java
Patch:
@@ -5,8 +5,8 @@
 import com.github.zuihou.base.R;
 import com.github.zuihou.demo.controller.test.model.EnumDTO;
 import com.github.zuihou.log.entity.OptLogDTO;
-import com.github.zuihou.user.annotation.LoginUser;
-import com.github.zuihou.user.model.SysUser;
+import com.github.zuihou.security.annotation.LoginUser;
+import com.github.zuihou.security.model.SysUser;
 import io.swagger.annotations.Api;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.validation.annotation.Validated;

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/DemoServerApplication.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou;
 
-import com.github.zuihou.user.annotation.EnableLoginArgResolver;
+import com.github.zuihou.security.annotation.EnableLoginArgResolver;
 import com.github.zuihou.validator.config.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;

File: zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/demo/config/DemoWebConfiguration.java
Patch:
@@ -1,8 +1,8 @@
 package com.github.zuihou.demo.config;
 
-import com.github.zuihou.authority.api.LogApi;
 import com.github.zuihou.boot.config.BaseConfig;
 import com.github.zuihou.log.event.SysLogListener;
+import com.github.zuihou.oauth.api.LogApi;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;

File: zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/AttachmentServiceImpl.java
Patch:
@@ -103,12 +103,11 @@ public AttachmentDTO upload(MultipartFile multipartFile, String tenant, Long id,
 
         AttachmentDTO dto = BeanPlusUtil.toBean(attachment, AttachmentDTO.class);
         dto.setDownloadUrlByBizId(fileProperties.getDownByBizId(bizId));
-        dto.setDownloadUrlById(fileProperties.getDownById(file.getId()));
-        dto.setDownloadUrlByUrl(fileProperties.getDownByUrl(file.getUrl(), file.getSubmittedFileName()));
+        dto.setDownloadUrlById(fileProperties.getDownById(attachment.getId()));
+        dto.setDownloadUrlByUrl(fileProperties.getDownByUrl(attachment.getUrl(), attachment.getSubmittedFileName()));
         return dto;
     }
 
-
     private void setDate(Attachment file) {
         LocalDateTime now = LocalDateTime.now();
         file.setCreateMonth(DateUtils.formatAsYearMonthEn(now));

File: zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/AttachmentController.java
Patch:
@@ -48,6 +48,7 @@
 @Slf4j
 @Api(value = "附件", tags = "附件")
 @Validated
+@SysLog(enabled = false)
 public class AttachmentController extends SuperSimpleController<AttachmentService, Attachment>
         implements QueryController<Attachment, Long, FilePageReqDTO>, DeleteController<Attachment, Long> {
 

File: zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/StatisticsController.java
Patch:
@@ -5,8 +5,8 @@
 import com.github.zuihou.file.dto.FileOverviewDTO;
 import com.github.zuihou.file.dto.FileStatisticsAllDTO;
 import com.github.zuihou.file.service.FileService;
-import com.github.zuihou.user.annotation.LoginUser;
-import com.github.zuihou.user.model.SysUser;
+import com.github.zuihou.security.annotation.LoginUser;
+import com.github.zuihou.security.model.SysUser;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiOperation;
 import lombok.extern.slf4j.Slf4j;

File: zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/FileServerApplication.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou;
 
-import com.github.zuihou.user.annotation.EnableLoginArgResolver;
+import com.github.zuihou.security.annotation.EnableLoginArgResolver;
 import com.github.zuihou.validator.config.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;

File: zuihou-gateway/zuihou-gateway-server/src/main/java/com/github/zuihou/GatewayServerApplication.java
Patch:
@@ -1,7 +1,6 @@
 package com.github.zuihou;
 
 
-import com.github.zuihou.auth.client.EnableAuthClient;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -20,7 +19,6 @@
 @SpringBootApplication
 @EnableDiscoveryClient
 @EnableFeignClients({"com.github.zuihou"})
-@EnableAuthClient
 @Slf4j
 public class GatewayServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/ZuulServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.zuihou;
 
-import com.github.zuihou.auth.client.EnableAuthClient;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -21,7 +20,6 @@
 @EnableDiscoveryClient
 @EnableFeignClients({"com.github.zuihou"})
 @EnableZuulProxy
-@EnableAuthClient
 @Slf4j
 public class ZuulServerApplication {
     public static void main(String[] args) throws UnknownHostException {

File: zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/filter/pre/MultiVersionServerSupportFilter.java
Patch:
@@ -1,8 +1,8 @@
 package com.github.zuihou.zuul.filter.pre;
 
 import cn.hutool.core.util.StrUtil;
-import com.github.zuihou.filter.BaseFilter;
 import com.github.zuihou.utils.StrPool;
+import com.github.zuihou.zuul.filter.BaseFilter;
 import com.netflix.zuul.context.RequestContext;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;

File: zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/SmsSendJobHandler.java
Patch:
@@ -35,7 +35,7 @@ public class SmsSendJobHandler extends IJobHandler {
     public ReturnT<String> execute2(String param) throws Exception {
         XxlJobLogger.log("执行参数--->param={} ", param);
         JSONObject map = JSONObject.parseObject(param);
-        BaseContextHandler.setTenant(map.getString(BaseContextConstants.TENANT));
+        BaseContextHandler.setTenant(map.getString(BaseContextConstants.JWT_KEY_TENANT));
 
         smsContext.smsSend(map.getLong("id"));
         return SUCCESS;

File: zuihou-jobs/zuihou-jobs-core/src/main/java/com/xxl/job/core/handler/IJobHandler.java
Patch:
@@ -2,12 +2,14 @@
 
 import com.xxl.job.core.biz.model.ReturnT;
 import com.xxl.job.core.log.XxlJobLogger;
+import lombok.extern.slf4j.Slf4j;
 
 /**
  * job handler
  *
  * @author xuxueli 2015-12-19 19:06:38
  */
+@Slf4j
 public abstract class IJobHandler {
 
 
@@ -36,6 +38,7 @@ public ReturnT<String> execute(String param) {
         try {
             return execute2(param);
         } catch (Exception e) {
+            log.warn("job 任务处理器执行失败：", e);
             XxlJobLogger.log("任务处理器执行失败", e.getMessage());
             return new ReturnT<>(IJobHandler.FAIL.getCode(), e.getMessage());
         }

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/github/zuihou/JobsServerApplication.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.zuihou;
 
-import com.github.zuihou.auth.server.EnableAuthServer;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
@@ -22,7 +21,6 @@
         "com.xxl.job.admin",
 })
 @Slf4j
-@EnableAuthServer
 public class JobsServerApplication {
     public static void main(String[] args) throws Exception {
         ConfigurableApplicationContext application = SpringApplication.run(JobsServerApplication.class, args);

File: zuihou-jobs/zuihou-jobs-server/src/main/java/com/github/zuihou/datasource/JobsMybatisAutoConfiguration.java
Patch:
@@ -4,6 +4,7 @@
 import com.github.zuihou.database.datasource.BaseMybatisConfiguration;
 import com.github.zuihou.database.properties.DatabaseProperties;
 import lombok.extern.slf4j.Slf4j;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Configuration;
 
 /**
@@ -14,6 +15,7 @@
  */
 @Configuration
 @Slf4j
+@EnableConfigurationProperties({DatabaseProperties.class})
 public class JobsMybatisAutoConfiguration extends BaseMybatisConfiguration {
 
 

File: zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/MsgsServerApplication.java
Patch:
@@ -1,6 +1,6 @@
 package com.github.zuihou;
 
-import com.github.zuihou.user.annotation.EnableLoginArgResolver;
+import com.github.zuihou.security.annotation.EnableLoginArgResolver;
 import com.github.zuihou.validator.config.EnableFormValidator;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.boot.SpringApplication;

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsTemplateServiceImpl.java
Patch:
@@ -13,6 +13,7 @@
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -63,6 +64,7 @@ private void buildParams(SmsTemplate smsTemplate) {
     }
 
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public void saveTemplate(SmsTemplate smsTemplate) {
         buildParams(smsTemplate);
         int count = super.count(Wrappers.<SmsTemplate>lambdaQuery().eq(SmsTemplate::getCustomCode, smsTemplate.getCustomCode()));
@@ -73,6 +75,7 @@ public void saveTemplate(SmsTemplate smsTemplate) {
         super.save(smsTemplate);
     }
 
+    @Transactional(rollbackFor = Exception.class)
     @Override
     public void updateTemplate(SmsTemplate smsTemplate) {
         buildParams(smsTemplate);

File: zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/strategy/impl/AbstractSmsStrategy.java
Patch:
@@ -13,6 +13,7 @@
 import com.github.zuihou.sms.util.PhoneUtils;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.transaction.annotation.Transactional;
 
 import java.util.List;
 import java.util.Set;
@@ -27,14 +28,13 @@
 @Slf4j
 public abstract class AbstractSmsStrategy implements SmsStrategy {
 
-
     @Autowired
     private SmsTaskMapper smsTaskMapper;
     @Autowired
     private SmsSendStatusService smsSendStatusService;
 
-
     @Override
+    @Transactional(rollbackFor = Exception.class)
     public R<String> sendSms(SmsTask task, SmsTemplate template) {
         String appId = template.getAppId();
         String appSecret = template.getAppSecret();

File: zuihou-msgs/zuihou-sms-controller/src/main/java/com/github/zuihou/sms/controller/SmsTaskController.java
Patch:
@@ -4,6 +4,7 @@
 import com.github.zuihou.base.R;
 import com.github.zuihou.base.controller.SuperController;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
+import com.github.zuihou.security.annotation.PreAuth;
 import com.github.zuihou.sms.dto.SmsSendTaskDTO;
 import com.github.zuihou.sms.dto.SmsTaskPageDTO;
 import com.github.zuihou.sms.dto.SmsTaskSaveDTO;
@@ -42,6 +43,7 @@
 @RestController
 @RequestMapping("/smsTask")
 @Api(value = "SmsTask", tags = "发送任务")
+@PreAuth(replace = "sms:manage:")
 public class SmsTaskController extends SuperController<SmsTaskService, Long, SmsTask, SmsTaskPageDTO, SmsTaskSaveDTO, SmsTaskUpdateDTO> {
 
     @Autowired
@@ -50,6 +52,7 @@ public class SmsTaskController extends SuperController<SmsTaskService, Long, Sms
 
     @ApiOperation(value = "发送短信", notes = "短信发送，需要先在短信系统，或者短信数据库中进行配置供应商和模板")
     @RequestMapping(value = "/send", method = RequestMethod.POST)
+    @PreAuth("hasPermit('{}add')")
     public R<SmsTask> save(@RequestBody SmsSendTaskDTO smsTaskDTO) {
         SmsTask smsTask = BeanPlusUtil.toBean(smsTaskDTO, SmsTask.class);
         smsTask.setSourceType(SourceType.SERVICE);

File: zuihou-msgs/zuihou-sms-controller/src/main/java/com/github/zuihou/sms/controller/SmsTemplateController.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.zuihou.base.controller.SuperController;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.log.annotation.SysLog;
+import com.github.zuihou.security.annotation.PreAuth;
 import com.github.zuihou.sms.dto.SmsTemplateSaveDTO;
 import com.github.zuihou.sms.dto.SmsTemplateUpdateDTO;
 import com.github.zuihou.sms.entity.SmsTemplate;
@@ -33,6 +34,7 @@
 @RestController
 @RequestMapping("/smsTemplate")
 @Api(value = "SmsTemplate", tags = "短信模板")
+@PreAuth(replace = "sms:template:")
 public class SmsTemplateController extends SuperController<SmsTemplateService, Long, SmsTemplate, SmsTemplate, SmsTemplateSaveDTO, SmsTemplateUpdateDTO> {
 
     @Override
@@ -52,6 +54,7 @@ public R<SmsTemplate> handlerUpdate(SmsTemplateUpdateDTO model) {
     @ApiOperation(value = "检测自定义编码是否存在", notes = "检测自定义编码是否存在")
     @GetMapping("/check")
     @SysLog("检测自定义编码是否存在")
+    @PreAuth("hasPermit('{}view')")
     public R<Boolean> check(@RequestParam(value = "customCode") String customCode) {
         int count = baseService.count(Wraps.<SmsTemplate>lbQ().eq(SmsTemplate::getCustomCode, customCode));
         return success(count > 0);

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/OrgApi.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.api;
+package com.github.zuihou.oauth.api;
 
-import com.github.zuihou.authority.api.hystrix.OrgApiFallback;
+import com.github.zuihou.oauth.api.hystrix.OrgApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
@@ -15,7 +15,7 @@
  * @author zuihou
  * @date 2019/08/02
  */
-@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", path = "/org",
+@FeignClient(name = "${zuihou.feign.oauth-server:zuihou-oauth-server}", path = "/org",
         qualifier = "orgApi", fallback = OrgApiFallback.class)
 public interface OrgApi {
 

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/RoleApi.java
Patch:
@@ -1,7 +1,7 @@
-package com.github.zuihou.authority.api;
+package com.github.zuihou.oauth.api;
 
-import com.github.zuihou.authority.api.hystrix.RoleApiFallback;
 import com.github.zuihou.base.R;
+import com.github.zuihou.oauth.api.hystrix.RoleApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
@@ -14,7 +14,7 @@
  * @author zuihou
  * @date 2019/08/02
  */
-@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", path = "/role", fallback = RoleApiFallback.class)
+@FeignClient(name = "${zuihou.feign.oauth-server:zuihou-oauth-server}", path = "/role", fallback = RoleApiFallback.class)
 public interface RoleApi {
     /**
      * 根据角色编码，查找用户id

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/StationApi.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.api;
+package com.github.zuihou.oauth.api;
 
-import com.github.zuihou.authority.api.hystrix.StationApiFallback;
+import com.github.zuihou.oauth.api.hystrix.StationApiFallback;
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
@@ -15,7 +15,7 @@
  * @author zuihou
  * @date 2019/08/02
  */
-@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", path = "/station",
+@FeignClient(name = "${zuihou.feign.oauth-server:zuihou-oauth-server}", path = "/station",
         qualifier = "stationApi", fallback = StationApiFallback.class)
 public interface StationApi {
 

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/hystrix/DictionaryItemApiFallback.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.api.hystrix;
+package com.github.zuihou.oauth.api.hystrix;
 
-import com.github.zuihou.authority.api.DictionaryItemApi;
+import com.github.zuihou.oauth.api.DictionaryItemApi;
 import org.springframework.stereotype.Component;
 
 import java.io.Serializable;

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/hystrix/LogApiHystrix.java
Patch:
@@ -1,8 +1,8 @@
-package com.github.zuihou.authority.api.hystrix;
+package com.github.zuihou.oauth.api.hystrix;
 
-import com.github.zuihou.authority.api.LogApi;
 import com.github.zuihou.base.R;
 import com.github.zuihou.log.entity.OptLogDTO;
+import com.github.zuihou.oauth.api.LogApi;
 import org.springframework.stereotype.Component;
 
 /**

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/hystrix/OrgApiFallback.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.api.hystrix;
+package com.github.zuihou.oauth.api.hystrix;
 
-import com.github.zuihou.authority.api.OrgApi;
+import com.github.zuihou.oauth.api.OrgApi;
 import org.springframework.stereotype.Component;
 
 import java.io.Serializable;

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/hystrix/RoleApiFallback.java
Patch:
@@ -1,7 +1,7 @@
-package com.github.zuihou.authority.api.hystrix;
+package com.github.zuihou.oauth.api.hystrix;
 
-import com.github.zuihou.authority.api.RoleApi;
 import com.github.zuihou.base.R;
+import com.github.zuihou.oauth.api.RoleApi;
 import org.springframework.stereotype.Component;
 
 import java.util.List;

File: zuihou-oauth/zuihou-oauth-api/src/main/java/com/github/zuihou/oauth/api/hystrix/StationApiFallback.java
Patch:
@@ -1,6 +1,6 @@
-package com.github.zuihou.authority.api.hystrix;
+package com.github.zuihou.oauth.api.hystrix;
 
-import com.github.zuihou.authority.api.StationApi;
+import com.github.zuihou.oauth.api.StationApi;
 import org.springframework.stereotype.Component;
 
 import java.io.Serializable;

File: zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/dao/defaults/TenantMapper.java
Patch:
@@ -3,6 +3,7 @@
 import com.baomidou.mybatisplus.annotation.SqlParser;
 import com.github.zuihou.authority.entity.defaults.Tenant;
 import com.github.zuihou.base.mapper.SuperMapper;
+import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
 
 /**
@@ -18,4 +19,5 @@
 @SqlParser(filter = true)
 public interface TenantMapper extends SuperMapper<Tenant> {
 
+    Tenant getByCode(@Param("tenant") String tenant);
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/AuthManager.java
Patch:
@@ -78,7 +78,7 @@ public R<LoginDTO> adminLogin(String account, String password) {
 
         String passwordMd5 = SecureUtil.md5(password);
         if (!user.getPassword().equalsIgnoreCase(passwordMd5)) {
-            this.userService.updatePasswordErrorNumById(user.getId());
+//            this.userService.updatePasswordErrorNumById(user.getId());
             return R.fail("用户名或密码错误!");
         }
         JwtUserInfo userInfo = new JwtUserInfo(user.getId(), user.getAccount(), user.getName(), 0L, 0L);

File: zuihou-commons/zuihou-boot/src/main/java/com/github/zuihou/base/service/SuperServiceCacheImpl.java
Patch:
@@ -81,7 +81,7 @@ protected String getRegion() {
      *
      * @return
      */
-    protected String getClassTypeName() {
+    protected String getClassSimpleName() {
         return SuperServiceCacheImpl.class.getSimpleName();
     }
 
@@ -92,7 +92,7 @@ protected String getClassTypeName() {
      * @return
      */
     protected String key(Object... args) {
-        return buildKey(getClassTypeName(), args);
+        return buildKey(getClassSimpleName(), args);
     }
 
     @Override

File: zuihou-backend/zuihou-api/zuihou-authority-api/src/main/java/com/github/zuihou/authority/api/OrgApi.java
Patch:
@@ -36,4 +36,5 @@ public interface OrgApi {
      */
     @GetMapping("/findOrgNameByIds")
     Map<Serializable, Object> findOrgNameByIds(@RequestParam(value = "ids") Set<Serializable> ids);
+
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserService.java
Patch:
@@ -133,13 +133,13 @@ public interface UserService extends IService<User> {
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findUserByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findUserByIds(Set<Long> ids);
 
     /**
      * 根据 id 查询用户名称
      *
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findUserNameByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findUserNameByIds(Set<Long> ids);
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -5,10 +5,10 @@
 import com.github.zuihou.authority.dto.auth.ResourceQueryDTO;
 import com.github.zuihou.authority.entity.auth.Resource;
 import com.github.zuihou.authority.service.auth.ResourceService;
-import com.github.zuihou.base.id.CodeGenerate;
 import com.github.zuihou.common.constant.CacheKey;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.exception.BizException;
+import com.github.zuihou.utils.CodeGenerate;
 import com.github.zuihou.utils.StrHelper;
 import lombok.extern.slf4j.Slf4j;
 import net.oschina.j2cache.CacheChannel;

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/RoleServiceImpl.java
Patch:
@@ -9,10 +9,10 @@
 import com.github.zuihou.authority.service.auth.RoleOrgService;
 import com.github.zuihou.authority.service.auth.RoleService;
 import com.github.zuihou.authority.strategy.DataScopeContext;
-import com.github.zuihou.base.id.CodeGenerate;
 import com.github.zuihou.common.constant.CacheKey;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.utils.BeanPlusUtil;
+import com.github.zuihou.utils.CodeGenerate;
 import com.github.zuihou.utils.StrHelper;
 import lombok.extern.slf4j.Slf4j;
 import net.oschina.j2cache.CacheChannel;

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -217,7 +217,7 @@ public boolean remove(List<Long> ids) {
     }
 
     @Override
-    public Map<Serializable, Object> findUserByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findUserByIds(Set<Long> ids) {
 
         LbqWrapper<User> query = Wraps.<User>lbQ()
                 .in(User::getId, ids)
@@ -230,7 +230,7 @@ public Map<Serializable, Object> findUserByIds(Set<Serializable> ids) {
     }
 
     @Override
-    public Map<Serializable, Object> findUserNameByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findUserNameByIds(Set<Long> ids) {
 
         LbqWrapper<User> query = Wraps.<User>lbQ()
                 .in(User::getId, ids)

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/OrgService.java
Patch:
@@ -40,13 +40,13 @@ public interface OrgService extends IService<Org> {
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findOrgByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findOrgByIds(Set<Long> ids);
 
     /**
      * 根据 id 查询名称，并转换成Map结构
      *
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findOrgNameByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findOrgNameByIds(Set<Long> ids);
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/StationService.java
Patch:
@@ -34,13 +34,13 @@ public interface StationService extends IService<Station> {
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findStationByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findStationByIds(Set<Long> ids);
 
     /**
      * 根据id 查询 岗位名称
      *
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findStationNameByIds(Set<Serializable> ids);
+    Map<Serializable, Object> findStationNameByIds(Set<Long> ids);
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -63,7 +63,7 @@ public boolean remove(List<Long> ids) {
      * @return
      */
     @Override
-    public Map<Serializable, Object> findOrgByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findOrgByIds(Set<Long> ids) {
         LbqWrapper<Org> query = Wraps.<Org>lbQ()
                 .in(Org::getId, ids)
                 .eq(Org::getStatus, true);
@@ -81,7 +81,7 @@ public Map<Serializable, Object> findOrgByIds(Set<Serializable> ids) {
      * @return
      */
     @Override
-    public Map<Serializable, Object> findOrgNameByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findOrgNameByIds(Set<Long> ids) {
         LbqWrapper<Org> query = Wraps.<Org>lbQ()
                 .in(Org::getId, ids)
                 .eq(Org::getStatus, true);

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/impl/StationServiceImpl.java
Patch:
@@ -69,7 +69,7 @@ public IPage<Station> findStationPage(IPage page, StationPageDTO data) {
      * @return
      */
     @Override
-    public Map<Serializable, Object> findStationByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findStationByIds(Set<Long> ids) {
         LbqWrapper<Station> query = Wraps.<Station>lbQ()
                 .in(Station::getId, ids)
                 .eq(Station::getStatus, true);
@@ -87,7 +87,7 @@ public Map<Serializable, Object> findStationByIds(Set<Serializable> ids) {
      * @return
      */
     @Override
-    public Map<Serializable, Object> findStationNameByIds(Set<Serializable> ids) {
+    public Map<Serializable, Object> findStationNameByIds(Set<Long> ids) {
         LbqWrapper<Station> query = Wraps.<Station>lbQ()
                 .in(Station::getId, ids)
                 .eq(Station::getStatus, true);

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/defaults/TenantController.java
Patch:
@@ -14,7 +14,6 @@
 import com.github.zuihou.base.entity.SuperEntity;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.database.mybatis.conditions.query.LbqWrapper;
-import com.github.zuihou.dozer.DozerUtils;
 import com.github.zuihou.utils.BeanPlusUtil;
 import io.swagger.annotations.Api;
 import io.swagger.annotations.ApiImplicitParam;
@@ -47,8 +46,6 @@ public class TenantController extends BaseController {
 
     @Autowired
     private TenantService tenantService;
-    @Autowired
-    private DozerUtils dozer;
 
     /**
      * 分页查询企业

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/enumeration/auth/Sex.java
Patch:
@@ -15,7 +15,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2020-02-12
+ * @date 2020-02-14
  */
 @Getter
 @AllArgsConstructor

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/NoBootTest.java
Patch:
@@ -46,6 +46,7 @@
 @Slf4j
 public class NoBootTest {
 
+
     @Test
     public void test() {
         TestModel obj = new TestModel();

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/RemoteDataMybatisTest.java
Patch:
@@ -13,7 +13,6 @@
 import com.github.zuihou.authority.service.core.OrgService;
 import com.github.zuihou.authority.service.core.impl.StationServiceImpl;
 import com.github.zuihou.context.BaseContextHandler;
-import com.github.zuihou.dozer.DozerUtils;
 import com.github.zuihou.injection.core.InjectionCore;
 import com.github.zuihou.model.RemoteData;
 import lombok.extern.slf4j.Slf4j;
@@ -51,8 +50,6 @@ public class RemoteDataMybatisTest {
     @Autowired
     private UserService userService;
     @Autowired
-    private DozerUtils dozer;
-    @Autowired
     private AreaMapper areaMapper;
     @Autowired
     private StationMapper stationMapper;

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/constant/InjectionFieldConstants.java
Patch:
@@ -41,6 +41,7 @@ public abstract class InjectionFieldConstants {
      * 组织 查询方法
      */
     public static final String ORG_ID_METHOD = "findOrgByIds";
+    public static final String ORG_ID_NAME_METHOD = "findOrgNameByIds";
 
 
     /**
@@ -72,4 +73,5 @@ public abstract class InjectionFieldConstants {
      * 组织 查询方法
      */
     public static final String STATION_ID_METHOD = "findStationByIds";
+    public static final String STATION_ID_NAME_METHOD = "findStationNameByIds";
 }

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/handler/DefaultGlobalExceptionHandler.java
Patch:
@@ -39,8 +39,6 @@
  * @author zuihou
  * @createTime 2017-12-13 17:04
  */
-//@ControllerAdvice(annotations = {RestController.class, Controller.class})
-//@ResponseBody
 @Slf4j
 public abstract class DefaultGlobalExceptionHandler {
     @ExceptionHandler(BizException.class)

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/converter/BaseDateConverter.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.zuihou.common.converter;
+package com.github.zuihou.converter;
 
 import java.util.Map;
 import java.util.Set;

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/converter/String2LocalDateConverter.java
Patch:
@@ -1,12 +1,12 @@
-package com.github.zuihou.common.converter;
+package com.github.zuihou.converter;
+
+import org.springframework.core.convert.converter.Converter;
 
 import java.time.LocalDate;
 import java.time.format.DateTimeFormatter;
 import java.util.LinkedHashMap;
 import java.util.Map;
 
-import org.springframework.core.convert.converter.Converter;
-
 import static com.github.zuihou.utils.DateUtils.DEFAULT_DATE_FORMAT;
 
 /**

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/converter/String2LocalDateTimeConverter.java
Patch:
@@ -1,12 +1,12 @@
-package com.github.zuihou.common.converter;
+package com.github.zuihou.converter;
+
+import org.springframework.core.convert.converter.Converter;
 
 import java.time.LocalDateTime;
 import java.time.format.DateTimeFormatter;
 import java.util.LinkedHashMap;
 import java.util.Map;
 
-import org.springframework.core.convert.converter.Converter;
-
 import static com.github.zuihou.utils.DateUtils.DEFAULT_DATE_TIME_FORMAT;
 
 /**

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/converter/String2LocalTimeConverter.java
Patch:
@@ -1,12 +1,12 @@
-package com.github.zuihou.common.converter;
+package com.github.zuihou.converter;
+
+import org.springframework.core.convert.converter.Converter;
 
 import java.time.LocalTime;
 import java.time.format.DateTimeFormatter;
 import java.util.LinkedHashMap;
 import java.util.Map;
 
-import org.springframework.core.convert.converter.Converter;
-
 import static com.github.zuihou.utils.DateUtils.DEFAULT_TIME_FORMAT;
 
 /**

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/utils/CodeGenerate.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.zuihou.base.id;
+package com.github.zuihou.utils;
 
 import java.util.concurrent.atomic.AtomicLong;
 

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/InjectionDataAutoConfiguration.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.injection;
 
+import com.fasterxml.jackson.databind.ObjectMapper;
 import com.github.zuihou.injection.aspect.InjectionResultAspect;
 import com.github.zuihou.injection.configuration.InjectionProperties;
 import com.github.zuihou.injection.core.InjectionCore;
@@ -47,8 +48,8 @@ public InjectionResultAspect getRemoteAspect(InjectionCore injectionCore) {
 
     @Bean
     @ConditionalOnMissingBean
-    public InjectionCore getInjectionCore() {
-        return new InjectionCore(remoteProperties);
+    public InjectionCore getInjectionCore(ObjectMapper mapper) {
+        return new InjectionCore(mapper, remoteProperties);
     }
 
     /**

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/core/InjectionFieldExtPo.java
Patch:
@@ -38,6 +38,7 @@ public InjectionFieldExtPo(InjectionFieldPo po, Set<Serializable> keys) {
         this.feign = po.getFeign();
         this.key = po.getKey();
         this.method = po.getMethod();
+        this.beanClass = po.getBeanClass();
         this.keys = keys;
         this.tenant = BaseContextHandler.getTenant();
         this.database = BaseContextHandler.getDatabase();

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/core/InjectionFieldPo.java
Patch:
@@ -43,6 +43,8 @@ public class InjectionFieldPo {
      */
     protected Class<? extends Object> feign;
 
+    protected Class<? extends Object> beanClass;
+
     /**
      * 调用方法
      *
@@ -55,6 +57,7 @@ public InjectionFieldPo(InjectionField rf) {
         this.feign = rf.feign();
         this.key = rf.key();
         this.method = rf.method();
+        this.beanClass = rf.beanClass();
     }
 
     @Override

File: zuihou-commons/zuihou-openfeign-starter/src/main/java/com/github/zuihou/openfeign/OpenFeignAutoConfiguration.java
Patch:
@@ -1,10 +1,7 @@
 package com.github.zuihou.openfeign;
 
-import java.util.List;
-
 import com.github.zuihou.openfeign.hystrix.ThreadLocalHystrixConcurrencyStrategy;
 import com.github.zuihou.openfeign.interceptor.FeignAddHeaderRequestInterceptor;
-
 import feign.codec.Encoder;
 import feign.form.spring.SpringFormEncoder;
 import org.springframework.beans.factory.ObjectFactory;
@@ -14,6 +11,8 @@
 import org.springframework.http.converter.HttpMessageConverter;
 import org.springframework.web.client.RestTemplate;
 
+import java.util.List;
+
 /**
  * OpenFeign 配置
  *
@@ -63,4 +62,5 @@ public ThreadLocalHystrixConcurrencyStrategy getThreadLocalHystrixConcurrencyStr
         return new ThreadLocalHystrixConcurrencyStrategy();
     }
 
+
 }

File: zuihou-commons/zuihou-openfeign-starter/src/main/java/com/github/zuihou/openfeign/interceptor/FeignAddHeaderRequestInterceptor.java
Patch:
@@ -24,7 +24,7 @@ public class FeignAddHeaderRequestInterceptor implements RequestInterceptor {
 
     private static final List<String> HEADER_NAME_LIST = Arrays.asList(
             BaseContextConstants.TENANT, BaseContextConstants.JWT_KEY_USER_ID,
-            BaseContextConstants.JWT_KEY_ACCOUNT, BaseContextConstants.JWT_KEY_NAME,
+            BaseContextConstants.JWT_KEY_ACCOUNT, BaseContextConstants.JWT_KEY_NAME, BaseContextConstants.GRAY_VERSION,
             BaseContextConstants.JWT_KEY_STATION_ID, BaseContextConstants.JWT_KEY_ORG_ID
     );
 

File: zuihou-commons/zuihou-user-starter/src/main/java/com/github/zuihou/user/interceptor/ContextHandlerInterceptor.java
Patch:
@@ -37,11 +37,13 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
             String userId = this.getHeader(request, BaseContextConstants.JWT_KEY_USER_ID);
             String account = this.getHeader(request, BaseContextConstants.JWT_KEY_ACCOUNT);
             String name = this.getHeader(request, BaseContextConstants.JWT_KEY_NAME);
+            String grayVersion = this.getHeader(request, BaseContextConstants.GRAY_VERSION);
             String orgId = this.getHeader(request, BaseContextConstants.JWT_KEY_ORG_ID);
             String stationId = this.getHeader(request, BaseContextConstants.JWT_KEY_STATION_ID);
             BaseContextHandler.setUserId(userId);
             BaseContextHandler.setAccount(account);
             BaseContextHandler.setName(name);
+            BaseContextHandler.setGrayVersion(grayVersion);
             BaseContextHandler.setOrgId(orgId);
             BaseContextHandler.setStationId(stationId);
         } catch (Exception e) {

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/MenuServiceImpl.java
Patch:
@@ -72,6 +72,7 @@ public List<Menu> findVisibleMenu(String group, Long userId) {
         }
 
         if (!visibleMenu.isEmpty()) {
+            // TODO 异步性能 更加
             visibleMenu.forEach((menu) -> {
                 String menuKey = CacheKey.buildKey(menu.getId());
                 cache.set(CacheKey.MENU, menuKey, menu);

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -88,7 +88,7 @@ public Map<Serializable, Object> findOrgNameByIds(Set<Serializable> ids) {
         List<Org> list = super.list(query);
 
         //key 是 组织id， value 是org 对象
-        ImmutableMap<Serializable, Object> typeMap = MapHelper.uniqueIndex(list, Org::getId, Org::getName);
+        ImmutableMap<Serializable, Object> typeMap = MapHelper.uniqueIndex(list, Org::getId, Org::getLabel);
         return typeMap;
     }
 

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/LoginController.java
Patch:
@@ -84,7 +84,7 @@ public R<LoginDTO> loginTx(@Validated @RequestBody LoginParamDTO login) throws B
      * @return
      * @throws Exception
      */
-    @ApiOperation(value = "仅供测试使用", notes = "仅供测试使用")
+    @ApiOperation(value = "仅供测试使用的登录方法", notes = "仅供测试使用的登录方法")
     @GetMapping(value = "/token")
     @Deprecated
     public R<LoginDTO> tokenTx(

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/AuthorityWebConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  */
 @Configuration
 public class AuthorityWebConfiguration extends BaseConfig {
-    @Value("${zuihou.mysql.biz-database:zuihou_defaults}")
+    @Value("${zuihou.database.bizDatabase:zuihou_defaults}")
     private String database;
 
     @Bean

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/mq/AuthorityMqAutoConfiguration.java
Patch:
@@ -25,7 +25,7 @@
 @Slf4j
 @ConditionalOnProperty(prefix = "zuihou.rabbitmq", name = "enabled", havingValue = "true")
 public class AuthorityMqAutoConfiguration {
-    @Value("${zuihou.mysql.biz-database:zuihou_default}")
+    @Value("${zuihou.database.bizDatabase:zuihou_default}")
     private String databaseName;
     @Autowired
     private SystemApiService systemApiService;

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/TestResource.java
Patch:
@@ -94,7 +94,7 @@ public void testDozer() {
     @Test
     public void testDozer3333() {
         Org org = Org.builder()
-                .name("string")
+                .label("string")
                 .id(123L)
                 .build();
         Station station = Station.builder().id(1L).orgId(new RemoteData(12L, org)).build();
@@ -118,7 +118,7 @@ public void testDozerAndBean() {
         TimeInterval timer = DateUtil.timer();
         for (int i = 0; i <= 1000000; i++) {
             Org org = Org.builder()
-                    .name("string")
+                    .label("string")
                     .id(123L + i)
                     .createTime(LocalDateTime.now())
                     .build();

File: zuihou-backend/zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/demo/config/DemoWebConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  */
 @Configuration
 public class DemoWebConfiguration extends BaseConfig {
-    @Value("${zuihou.mysql.biz-database:zuihou_defaults}")
+    @Value("${zuihou.database.bizDatabase:zuihou_defaults}")
     private String database;
 
     @Bean

File: zuihou-backend/zuihou-demo/zuihou-demo-server/src/test/java/com/github/zuihou/NoBootTest.java
Patch:
@@ -1,7 +1,7 @@
 package com.github.zuihou;
 
 import cn.hutool.core.io.FileUtil;
-import com.github.zuihou.database.parsers.TableNameParser;
+import com.baomidou.mybatisplus.core.toolkit.TableNameParser;
 import org.apache.commons.io.FileUtils;
 import org.junit.Test;
 

File: zuihou-backend/zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/file/config/FileWebConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  */
 @Configuration
 public class FileWebConfiguration extends BaseConfig {
-    @Value("${zuihou.mysql.biz-database:zuihou_defaults}")
+    @Value("${zuihou.database.bizDatabase:zuihou_defaults}")
     private String database;
 
     @Bean

File: zuihou-backend/zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/fallback/ServiceFallbackProvider.java
Patch:
@@ -13,7 +13,6 @@ public class ServiceFallbackProvider extends AbstractServiceFallbackProvider {
     @Override
     public String getRoute() {
         //Zuul 目前只支持服务级别的熔断，不支持具体到某个URL进行熔断 ， 所以，在响应时只需给出大概提示即可
-//        return "zuihou-authority-server";
         return "*";
     }
 

File: zuihou-backend/zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/RestBase0000JobHandler.java
Patch:
@@ -32,7 +32,7 @@ public class RestBase0000JobHandler extends IJobHandler {
     private final static String SQL_RESOURCE_PATH = "sqls/%s.sql";
     @Autowired
     private InitSystemService initSystemService;
-    @Value("${zuihou.mysql.biz-database:zuihou_base}")
+    @Value("${zuihou.database.bizDatabase:zuihou_base}")
     private String database;
 
     @Override

File: zuihou-backend/zuihou-jobs/zuihou-executor/src/main/java/com/github/zuihou/executor/jobhandler/RestTenantJobHandler.java
Patch:
@@ -43,7 +43,7 @@ public class RestTenantJobHandler extends IJobHandler {
     @Autowired
     private InitDbMapper initDbMapper;
 
-    @Value("${zuihou.mysql.biz-database:zuihou_base}")
+    @Value("${zuihou.database.bizDatabase:zuihou_base}")
     private String database;
 
     @Override

File: zuihou-backend/zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/msgs/config/MsgsWebConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  */
 @Configuration
 public class MsgsWebConfiguration extends BaseConfig {
-    @Value("${zuihou.mysql.biz-database:zuihou_defaults}")
+    @Value("${zuihou.database.bizDatabase:zuihou_defaults}")
     private String database;
 
     @Bean

File: zuihou-backend/zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/order/config/OrderWebConfiguration.java
Patch:
@@ -13,7 +13,7 @@
  */
 @Configuration
 public class OrderWebConfiguration extends BaseConfig {
-    @Value("${zuihou.mysql.biz-database:zuihou_defaults}")
+    @Value("${zuihou.database.bizDatabase:zuihou_defaults}")
     private String database;
 
     @Bean

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/undertow/UndertowServerFactoryCustomizer.java
Patch:
@@ -1,7 +1,5 @@
 package com.github.zuihou.common.undertow;
 
-import java.io.IOException;
-
 import io.undertow.connector.ByteBufferPool;
 import io.undertow.server.DefaultByteBufferPool;
 import io.undertow.websockets.jsr.WebSocketDeploymentInfo;
@@ -13,9 +11,11 @@
 import org.xnio.Xnio;
 import org.xnio.XnioWorker;
 
+import java.io.IOException;
+
 /**
  * 设置Undertow服务器 XnioWorker Buffers
- *
+ * <p>
  * 解决启动时警告：[io.undertow.websockets.jsr.handleDeployment:68] --> UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
  *
  * @author zuihou

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/datasource/BaseMybatisConfiguration.java
Patch:
@@ -93,7 +93,7 @@ public MetaObjectHandler getMyMetaObjectHandler() {
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isMultiTenant", havingValue = "true", matchIfMissing = true)
     public TenantWebMvcConfigurer getTenantWebMvcConfigurer() {
-        return new TenantWebMvcConfigurer();
+        return new TenantWebMvcConfigurer(databaseProperties.getBizDatabase(), null, null);
     }
 
     /**

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/properties/DatabaseProperties.java
Patch:
@@ -45,6 +45,8 @@ public class DatabaseProperties {
      */
     private int txTimeout = 60 * 60;
 
+    private String bizDatabase = "zuihou_base";
+
     /**
      * Id 生成策略
      */

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -148,7 +148,6 @@ public void updatePasswordErrorNumById(Long id) {
 
     @Override
     public void updateLoginTime(String account) {
-//        baseMapper.update(User.builder().lastLoginTime(LocalDateTime.now()).build(), Wraps.<User>lbQ().eq(User::getAccount, account));
         baseMapper.updateLastLoginTime(account, LocalDateTime.now());
     }
 

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/utils/TimeUtils.java
Patch:
@@ -1,11 +1,11 @@
 package com.github.zuihou.authority.utils;
 
+import cn.hutool.core.convert.Convert;
+
 import java.time.LocalDate;
 import java.time.LocalDateTime;
 import java.time.LocalTime;
 
-import com.github.zuihou.utils.NumberHelper;
-
 /**
  * This is a Description
  *
@@ -26,7 +26,7 @@ public static LocalDateTime getPasswordErrorLockTime(String time) {
         if (time.length() == 1) {
             unit = 'd';
         }
-        Long lastTime = NumberHelper.longValueOf0(time.substring(0, time.length() - 1));
+        Long lastTime = Convert.toLong(time.substring(0, time.length() - 1));
 
         LocalDateTime passwordErrorLastTime = LocalDateTime.MAX;
         switch (unit) {

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/enumeration/auth/Sex.java
Patch:
@@ -15,7 +15,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2020-01-31
+ * @date 2020-02-12
  */
 @Getter
 @AllArgsConstructor

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/main/java/com/github/zuihou/authority/config/datasource/AuthorityMybatisAutoConfiguration.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 
 /**
  * 配置一些拦截器
@@ -32,6 +33,7 @@ public AuthorityMybatisAutoConfiguration(DatabaseProperties databaseProperties)
      *
      * @return DataScopeInterceptor
      */
+    @Order(10)
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isDataScope", havingValue = "true", matchIfMissing = true)
     public DataScopeInterceptor dataScopeInterceptor() {

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/TestResource.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.zuihou;
 
 import cn.hutool.core.bean.BeanUtil;
+import cn.hutool.core.convert.Convert;
 import cn.hutool.core.date.DateUtil;
 import cn.hutool.core.date.TimeInterval;
 import cn.hutool.log.StaticLog;
@@ -26,7 +27,6 @@
 import com.github.zuihou.dozer.DozerUtils;
 import com.github.zuihou.log.entity.OptLogDTO;
 import com.github.zuihou.model.RemoteData;
-import com.github.zuihou.utils.NumberHelper;
 import lombok.extern.slf4j.Slf4j;
 import org.junit.Before;
 import org.junit.Test;
@@ -175,7 +175,7 @@ public void testfindChildren() {
     @Test
     public void testObjlist() {
         for (int i = 0; i < 20; i++) {
-            List<Long> list = orgService.listObjs(NumberHelper::longValueOf0);
+            List<Long> list = orgService.listObjs(Convert::toLong);
             log.info("listsize={}", list.size());
         }
         log.info("endendendendend");

File: zuihou-backend/zuihou-demo/zuihou-demo-server/src/main/java/com/github/zuihou/demo/config/datasource/DemoMybatisAutoConfiguration.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 
 /**
  * 配置一些拦截器
@@ -32,6 +33,7 @@ public DemoMybatisAutoConfiguration(DatabaseProperties databaseProperties) {
      *
      * @return DataScopeInterceptor
      */
+    @Order(10)
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isDataScope", havingValue = "true", matchIfMissing = true)
     public DataScopeInterceptor dataScopeInterceptor() {

File: zuihou-backend/zuihou-file/zuihou-file-server/src/main/java/com/github/zuihou/file/config/datasource/FileMybatisAutoConfiguration.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 
 /**
  * 配置一些拦截器
@@ -32,6 +33,7 @@ public FileMybatisAutoConfiguration(DatabaseProperties databaseProperties) {
      *
      * @return DataScopeInterceptor
      */
+    @Order(10)
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isDataScope", havingValue = "true", matchIfMissing = true)
     public DataScopeInterceptor dataScopeInterceptor() {

File: zuihou-backend/zuihou-msgs/zuihou-msgs-server/src/main/java/com/github/zuihou/msgs/config/datasource/MsgsMybatisAutoConfiguration.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 
 /**
  * 配置一些拦截器
@@ -32,6 +33,7 @@ public MsgsMybatisAutoConfiguration(DatabaseProperties databaseProperties) {
      *
      * @return DataScopeInterceptor
      */
+    @Order(10)
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isDataScope", havingValue = "true", matchIfMissing = true)
     public DataScopeInterceptor dataScopeInterceptor() {

File: zuihou-backend/zuihou-order/zuihou-order-server/src/main/java/com/github/zuihou/order/config/datasource/OrderMybatisAutoConfiguration.java
Patch:
@@ -10,6 +10,7 @@
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
+import org.springframework.core.annotation.Order;
 
 /**
  * 配置一些拦截器
@@ -32,6 +33,7 @@ public OrderMybatisAutoConfiguration(DatabaseProperties databaseProperties) {
      *
      * @return DataScopeInterceptor
      */
+    @Order(10)
     @Bean
     @ConditionalOnProperty(name = "zuihou.database.isDataScope", havingValue = "true", matchIfMissing = true)
     public DataScopeInterceptor dataScopeInterceptor() {

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/constant/InjectionFieldConstants.java
Patch:
@@ -56,6 +56,7 @@ public abstract class InjectionFieldConstants {
      * 用户 查询方法
      */
     public static final String USER_ID_METHOD = "findUserByIds";
+    public static final String USER_ID_NAME_METHOD = "findUserNameByIds";
 
 
     /**

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/base/BaseController.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.base;
 
+import cn.hutool.core.convert.Convert;
 import cn.hutool.core.util.StrUtil;
 import com.baomidou.mybatisplus.core.metadata.IPage;
 import com.baomidou.mybatisplus.core.metadata.OrderItem;
@@ -8,7 +9,6 @@
 import com.github.zuihou.exception.BizException;
 import com.github.zuihou.exception.code.BaseExceptionCode;
 import com.github.zuihou.utils.AntiSqlFilter;
-import com.github.zuihou.utils.NumberHelper;
 
 import javax.annotation.Resource;
 import javax.servlet.http.HttpServletRequest;
@@ -146,11 +146,11 @@ protected <T> IPage<T> getPage() {
     }
 
     protected Integer getCurrent() {
-        return NumberHelper.intValueOf(request.getParameter(CURRENT), 1);
+        return Convert.toInt(request.getParameter(CURRENT), 1);
     }
 
     protected Integer getSize() {
-        return NumberHelper.intValueOf(request.getParameter(SIZE), DEFAULT_LIMIT);
+        return Convert.toInt(request.getParameter(SIZE), DEFAULT_LIMIT);
     }
 
     /**

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/parsers/TenantContextHandlerInterceptor.java
Patch:
@@ -1,9 +1,9 @@
 package com.github.zuihou.database.parsers;
 
 import cn.hutool.core.util.StrUtil;
+import cn.hutool.core.util.URLUtil;
 import com.github.zuihou.context.BaseContextConstants;
 import com.github.zuihou.context.BaseContextHandler;
-import com.github.zuihou.utils.StrHelper;
 import lombok.AllArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.web.method.HandlerMethod;
@@ -44,7 +44,7 @@ private String getHeader(HttpServletRequest request, String name) {
         if (StrUtil.isEmpty(value)) {
             return StrUtil.EMPTY;
         }
-        return StrHelper.decode(value);
+        return URLUtil.decode(value);
     }
 
     @Override

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/annonation/InjectionField.java
Patch:
@@ -32,6 +32,7 @@
      * 如： @InjectionField(api="userServiceImpl") 等价于 @InjectionField(feign=UserService.class)
      * 如： @InjectionField(api="userController") 等价于 @InjectionField(feign=UserApi.class)
      * <p>
+     * 注意：若使用feignclient调用， 则一定要加上 @FeignClient(qualifier = "xxxApi"), 否则会注入失败
      *
      * @return
      */
@@ -43,6 +44,8 @@
      * api()  和 feign() 任选其一,  使用 api时，请填写实现类， 使用feign时，填写接口即可
      * 如： @InjectionField(api="userServiceImpl") 等价于 @InjectionField(feign=UserService.class)
      * 如： @InjectionField(api="userController") 等价于 @InjectionField(feign=UserApi.class)
+     * <p>
+     * 注意： 本系统中，最好不要使用feign 方式调用，否则 entity 会依赖 api 模块，造成依赖冲突！
      *
      * @return
      */

File: zuihou-commons/zuihou-user-starter/src/main/java/com/github/zuihou/user/interceptor/ContextHandlerInterceptor.java
Patch:
@@ -1,8 +1,8 @@
 package com.github.zuihou.user.interceptor;
 
+import cn.hutool.core.util.URLUtil;
 import com.github.zuihou.context.BaseContextConstants;
 import com.github.zuihou.context.BaseContextHandler;
-import com.github.zuihou.utils.StrHelper;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.util.StringUtils;
 import org.springframework.web.method.HandlerMethod;
@@ -55,7 +55,7 @@ private String getHeader(HttpServletRequest request, String name) {
         if (StringUtils.isEmpty(value)) {
             return null;
         }
-        return StrHelper.decode(value);
+        return URLUtil.decode(value);
     }
 
     @Override

File: zuihou-commons/zuihou-user-starter/src/main/java/com/github/zuihou/user/resolver/ContextArgumentResolver.java
Patch:
@@ -1,13 +1,12 @@
 package com.github.zuihou.user.resolver;
 
+import cn.hutool.core.convert.Convert;
 import com.github.zuihou.base.R;
 import com.github.zuihou.context.BaseContextHandler;
 import com.github.zuihou.user.annotation.LoginUser;
 import com.github.zuihou.user.feign.UserQuery;
 import com.github.zuihou.user.feign.UserResolveApi;
 import com.github.zuihou.user.model.SysUser;
-import com.github.zuihou.utils.NumberHelper;
-
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.core.MethodParameter;
 import org.springframework.web.bind.support.WebDataBinderFactory;
@@ -73,7 +72,7 @@ public Object resolveArgument(MethodParameter methodParameter,
             boolean isFull = loginUser.isFull();
 
             if (isFull || loginUser.isStation() || loginUser.isOrg() || loginUser.isRoles()) {
-                R<SysUser> result = userResolveApi.getById(NumberHelper.longValueOf0(userId),
+                R<SysUser> result = userResolveApi.getById(Convert.toLong(userId),
                         UserQuery.builder()
                                 .full(isFull)
                                 .org(loginUser.isOrg())

File: zuihou-backend/zuihou-api/zuihou-authority-api/src/main/java/com/github/zuihou/authority/api/LogApi.java
Patch:
@@ -3,7 +3,6 @@
 import com.github.zuihou.authority.api.hystrix.LogApiHystrix;
 import com.github.zuihou.base.R;
 import com.github.zuihou.log.entity.OptLogDTO;
-
 import org.springframework.cloud.openfeign.FeignClient;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
@@ -15,7 +14,7 @@
  * @author zuihou
  * @date 2019/07/02
  */
-@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", fallback = LogApiHystrix.class)
+@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", fallback = LogApiHystrix.class, qualifier = "logApi")
 public interface LogApi {
     /**
      * 保存日志

File: zuihou-backend/zuihou-api/zuihou-authority-api/src/main/java/com/github/zuihou/authority/api/StationApi.java
Patch:
@@ -15,7 +15,8 @@
  * @author zuihou
  * @date 2019/08/02
  */
-@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", path = "/station", fallback = StationApiFallback.class)
+@FeignClient(name = "${zuihou.feign.authority-server:zuihou-authority-server}", path = "/station",
+        qualifier = "stationApi", fallback = StationApiFallback.class)
 public interface StationApi {
 
     /**

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/UserService.java
Patch:
@@ -133,5 +133,5 @@ public interface UserService extends IService<User> {
      * @param ids
      * @return
      */
-    Map<Serializable, Object> findUser(Set<Serializable> ids);
+    Map<Serializable, Object> findUserByIds(Set<Serializable> ids);
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -218,7 +218,7 @@ public boolean remove(List<Long> ids) {
     }
 
     @Override
-    public Map<Serializable, Object> findUser(Set<Serializable> ids) {
+    public Map<Serializable, Object> findUserByIds(Set<Serializable> ids) {
 
         LbqWrapper<User> query = Wraps.<User>lbQ()
                 .in(User::getId, ids)

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/utils/NumberHelper.java
Patch:
@@ -5,10 +5,13 @@
 
 /**
  * 数字类型 帮助类
+ * <p>
+ * 请使用 Convert.toXxx()
  *
  * @author zuihou
  * @date 2018/11/20
  */
+@Deprecated
 public class NumberHelper {
 
     private static <T, R> R valueOfDef(T t, Function<T, R> function, R def) {

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/annonation/InjectionField.java
Patch:
@@ -19,7 +19,7 @@
 @Target(value = {ElementType.METHOD, ElementType.TYPE, ElementType.FIELD})
 public @interface InjectionField {
     /**
-     * 查询值
+     * 固定查询值
      *
      * @return
      */

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/aspect/InjectionResultAspect.java
Patch:
@@ -10,7 +10,7 @@
 import org.aspectj.lang.annotation.Pointcut;
 
 /**
- * AOP
+ * InjectionResult 注解的 AOP 工具
  *
  * @author zuihou
  * @create 2020年01月19日09:27:41

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/dao/core/StationMapper.java
Patch:
@@ -7,7 +7,6 @@
 import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
 import com.github.zuihou.authority.entity.core.Station;
 import com.github.zuihou.database.mybatis.auth.DataScope;
-
 import org.apache.ibatis.annotations.Param;
 import org.springframework.stereotype.Repository;
 

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/core/StationSaveDTO.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.authority.dto.core;
 
+import com.github.zuihou.authority.entity.core.Org;
 import com.github.zuihou.model.RemoteData;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
@@ -41,7 +42,7 @@ public class StationSaveDTO implements Serializable {
      * #c_core_org
      */
     @ApiModelProperty(value = "组织ID")
-    private RemoteData orgId;
+    private RemoteData<Long, Org> org;
     /**
      * 状态
      */

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/core/StationUpdateDTO.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.zuihou.authority.dto.core;
 
+import com.github.zuihou.authority.entity.core.Org;
 import com.github.zuihou.base.entity.SuperEntity;
 import com.github.zuihou.model.RemoteData;
 import io.swagger.annotations.ApiModel;
@@ -47,7 +48,7 @@ public class StationUpdateDTO implements Serializable {
      * #c_core_org
      */
     @ApiModelProperty(value = "组织ID")
-    private RemoteData orgId;
+    private RemoteData<Long, Org> org;
     /**
      * 状态
      */

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/enumeration/auth/Sex.java
Patch:
@@ -2,7 +2,6 @@
 
 import com.fasterxml.jackson.annotation.JsonFormat;
 import com.github.zuihou.base.BaseEnum;
-
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.AllArgsConstructor;
@@ -16,7 +15,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2019-11-04
+ * @date 2020-01-31
  */
 @Getter
 @AllArgsConstructor

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/core/StationController.java
Patch:
@@ -55,7 +55,7 @@ public class StationController extends BaseController {
             @ApiImplicitParam(name = "size", value = "每页显示几条", dataType = "long", paramType = "query", defaultValue = "10"),
     })
     @GetMapping("/page")
-//    @SysLog("分页查询岗位")
+    @SysLog("分页查询岗位")
     public R<IPage<Station>> page(StationPageDTO data) {
 
         Page<Station> page = getPage();

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/mybatis/typehandler/RemoteDataTypeHandler.java
Patch:
@@ -8,6 +8,8 @@
 
 /**
  * 远程数据 类型转换器
+ * <p>
+ * 借鉴Hibernate的外键字段的思想，自定义一个类型处理器，将
  *
  * @author zuihou
  * @date 2020年01月18日17:20:34

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/common/AreaSaveDTO.java
Patch:
@@ -1,9 +1,9 @@
 package com.github.zuihou.authority.dto.common;
 
 import com.baomidou.mybatisplus.annotation.TableField;
-import com.github.zuihou.common.constant.RemoteDataConstants;
+import com.github.zuihou.common.constant.InjectionFieldConstants;
+import com.github.zuihou.injection.annonation.InjectionField;
 import com.github.zuihou.model.RemoteData;
-import com.github.zuihou.remotedata.annonation.RemoteField;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.*;
@@ -86,7 +86,7 @@ public class AreaSaveDTO implements Serializable {
     @ApiModelProperty(value = "行政区级")
     @NotNull(message = "行政区级不能为空")
     @TableField("level")
-    @RemoteField(api = RemoteDataConstants.DICTIONARY_ITEM_CLASS, method = RemoteDataConstants.DICTIONARY_ITEM_METHOD)
+    @InjectionField(api = InjectionFieldConstants.DICTIONARY_ITEM_CLASS, method = InjectionFieldConstants.DICTIONARY_ITEM_METHOD)
     private RemoteData<String, String> level;
     /**
      * 父CODE

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/dto/common/AreaUpdateDTO.java
Patch:
@@ -2,9 +2,9 @@
 
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.github.zuihou.base.entity.SuperEntity;
-import com.github.zuihou.common.constant.RemoteDataConstants;
+import com.github.zuihou.common.constant.InjectionFieldConstants;
+import com.github.zuihou.injection.annonation.InjectionField;
 import com.github.zuihou.model.RemoteData;
-import com.github.zuihou.remotedata.annonation.RemoteField;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.*;
@@ -91,7 +91,7 @@ public class AreaUpdateDTO implements Serializable {
     @ApiModelProperty(value = "行政区级")
     @NotNull(message = "行政区级不能为空")
     @TableField("level")
-    @RemoteField(api = RemoteDataConstants.DICTIONARY_ITEM_CLASS, method = RemoteDataConstants.DICTIONARY_ITEM_METHOD)
+    @InjectionField(api = InjectionFieldConstants.DICTIONARY_ITEM_CLASS, method = InjectionFieldConstants.DICTIONARY_ITEM_METHOD)
     private RemoteData<String, String> level;
 
     /**

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/common/Area.java
Patch:
@@ -3,9 +3,9 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import com.github.zuihou.base.entity.TreeEntity;
-import com.github.zuihou.common.constant.RemoteDataConstants;
+import com.github.zuihou.common.constant.InjectionFieldConstants;
+import com.github.zuihou.injection.annonation.InjectionField;
 import com.github.zuihou.model.RemoteData;
-import com.github.zuihou.remotedata.annonation.RemoteField;
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
 import lombok.*;
@@ -83,7 +83,7 @@ public class Area extends TreeEntity<Area, Long> {
     @ApiModelProperty(value = "行政区级")
     @NotNull(message = "行政区级不能为空")
     @TableField("level")
-    @RemoteField(api = RemoteDataConstants.DICTIONARY_ITEM_CLASS, method = RemoteDataConstants.DICTIONARY_ITEM_METHOD)
+    @InjectionField(api = InjectionFieldConstants.DICTIONARY_ITEM_CLASS, method = InjectionFieldConstants.DICTIONARY_ITEM_METHOD)
     private RemoteData<String, String> level;
 
 

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/TestRemoteData.java
Patch:
@@ -25,8 +25,8 @@
 //import com.github.zuihou.dozer.DozerUtils;
 //import com.github.zuihou.log.entity.OptLogDTO;
 //import com.github.zuihou.model.RemoteData;
-//import com.github.zuihou.remotedata.core.InjectionCore;
-//import com.github.zuihou.remotedata.core.RemoteCore;
+//import com.github.zuihou.injection.core.InjectionCore;
+//import com.github.zuihou.injection.core.;
 //import com.github.zuihou.utils.NumberHelper;
 //import lombok.extern.slf4j.Slf4j;
 //import org.junit.Before;

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/mybatis/conditions/update/LbuWrapper.java
Patch:
@@ -88,7 +88,7 @@ public String getSqlSet() {
 
     @Override
     protected LbuWrapper<T> instance() {
-        return new LbuWrapper<>(this.entity, this.sqlSet, this.paramNameSeq, this.paramNameValuePairs, new MergeSegments(),
+        return new LbuWrapper<>(this.getEntity(), this.sqlSet, this.paramNameSeq, this.paramNameValuePairs, new MergeSegments(),
                 SharedString.emptyString(), SharedString.emptyString());
     }
 

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/facade/DefaultRemoteResultParser.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.zuihou.remotedata.facade;
+package com.github.zuihou.injection.facade;
 
 import java.util.List;
 

File: zuihou-commons/zuihou-injection-starter/src/main/java/com/github/zuihou/injection/facade/RemoteResultParser.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.zuihou.remotedata.facade;
+package com.github.zuihou.injection.facade;
 
 import java.util.List;
 

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/LoginController.java
Patch:
@@ -24,7 +24,7 @@
  * 客户端获取token
  * jwt token管理
  *
- * @author luosh
+ * @author zuihou
  * @date Created on 2019/5/28 9:17
  */
 @RestController

File: zuihou-backend/zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/StatisticsController.java
Patch:
@@ -23,7 +23,7 @@
  * 文件用户大小表 前端控制器
  * </p>
  *
- * @author luosh
+ * @author zuihou
  * @since 2019-05-07
  */
 @Slf4j

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/utils/ZipUtils.java
Patch:
@@ -244,6 +244,9 @@ public static void zipFilesByInputStream(Map<String, String> fileMap, Long fileS
                     if (bis != null) {
                         bis.close();
                     }
+                    if (zos != null) {
+                        zos.closeEntry();
+                    }
                 }
             }
         }

File: zuihou-support/zuihou-zipkin/src/main/java/com/github/zuihou/zipkin/ZipkinApplication.java
Patch:
@@ -11,6 +11,8 @@
  * 指定URL使用不同的采样率
  * https://blog.csdn.net/u012394095/article/details/82785745
  *
+ * http://c.biancheng.net/view/5496.html
+ *
  * @author zuihou
  * @createTime 2018-01-14 12:04
  */

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/storage/LocalAutoConfigure.java
Patch:
@@ -73,7 +73,9 @@ protected void uploadFile(File file, MultipartFile multipartFile) throws Excepti
                     .append(fileName)
                     .toString();
             //替换掉windows环境的\路径
-            file.setUrl(StrUtil.replace(url, "\\\\", StrPool.SLASH));
+            url = StrUtil.replace(url, "\\\\", StrPool.SLASH);
+            url = StrUtil.replace(url, "\\", StrPool.SLASH);
+            file.setUrl(url);
             file.setFilename(fileName);
             file.setRelativePath(relativePath);
         }

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/J2CacheController.java
Patch:
@@ -33,7 +33,7 @@ public class J2CacheController {
 
     @ApiOperation(value = "数据写入", notes = "数据写入")
     @GetMapping("/set")
-    public R<Object> set(String region, String key, Object value) {
+    public R<Object> set(String region, String key, String value) {
         cache.set(region, key, value);
         return R.success(String.format("%s:%s", region, key));
     }
@@ -88,7 +88,7 @@ public R<Object> regions() {
         return R.success(regions);
     }
 
-    @ApiOperation(value = "删除缓存 Region", notes = "删除缓存 Region")
+    @ApiOperation(value = "删除1级缓存 Region", notes = "删除1级缓存 Region")
     @GetMapping("/removeRegion")
     public R<Object> regions(String region) {
         cache.removeRegion(region);

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/defaults/impl/GlobalUserServiceImpl.java
Patch:
@@ -79,8 +79,9 @@ public GlobalUser save(GlobalUserSaveDTO data) {
         // 1，保存租户用户 // 租户库
         User user = dozer.map(data, User.class);
         user.setId(globalAccount.getId());
-        user.setPassword(md5Password);
-        user.setName(StrHelper.getOrDef(data.getName(), data.getAccount()));
+        user.setPassword(md5Password)
+                .setName(StrHelper.getOrDef(data.getName(), data.getAccount()))
+                .setStatus(true);
         userService.save(user);
 
         userRoleService.initAdmin(user.getId());

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/MenuController.java
Patch:
@@ -177,7 +177,7 @@ private List<VueRouter> buildSuperAdminRouter() {
         tenant.setComponent("zuihou/defaults/tenant/Index");
         tenant.setHidden(false);
         tenant.setMeta(RouterMeta.builder()
-                .title("租户管理").breadcrumb(true)
+                .title("租户管理").breadcrumb(true).icon("")
                 .build());
         tenant.setId(-2L);
         tenant.setParentId(-1L);
@@ -188,7 +188,7 @@ private List<VueRouter> buildSuperAdminRouter() {
         globalUser.setComponent("zuihou/defaults/globaluser/Index");
         globalUser.setHidden(false);
         globalUser.setMeta(RouterMeta.builder()
-                .title("全局用户").breadcrumb(true)
+                .title("全局用户").breadcrumb(true).icon("")
                 .build());
         globalUser.setId(-3L);
         globalUser.setParentId(-1L);

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/mybatis/WriteInterceptor.java
Patch:
@@ -49,7 +49,7 @@ public Object intercept(Invocation invocation) {
             return invocation.proceed();
         }
         // 记录日志相关的 放行
-        if (StrUtil.containsAnyIgnoreCase(mappedStatement.getId(), "OptLog", "File", "xxl")) {
+        if (StrUtil.containsAnyIgnoreCase(mappedStatement.getId(), "OptLog", "LoginLog", "File", "xxl")) {
             return invocation.proceed();
         }
         // userId=1 的超级管理员 放行
@@ -71,7 +71,7 @@ public Object intercept(Invocation invocation) {
 
         // 你还可以自定义其他限制规则， 比如：IP 等
 
-        //内置的超管
+        //其他用户
         return invocation.proceed();
     }
 

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/MenuServiceImpl.java
Patch:
@@ -11,6 +11,7 @@
 import com.github.zuihou.authority.service.auth.ResourceService;
 import com.github.zuihou.base.id.CodeGenerate;
 import com.github.zuihou.common.constant.CacheKey;
+import com.github.zuihou.context.BaseContextHandler;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.exception.BizException;
 import com.github.zuihou.utils.NumberHelper;
@@ -59,7 +60,8 @@ public class MenuServiceImpl extends ServiceImpl<MenuMapper, Menu> implements Me
      */
     @Override
     public List<Menu> findVisibleMenu(String group, Long userId) {
-        CacheObject cacheObject = cache.get(CacheKey.USER_MENU, String.valueOf(userId), (key) -> {
+        String key = CacheKey.build(BaseContextHandler.getTenant(), userId);
+        CacheObject cacheObject = cache.get(CacheKey.USER_MENU, key, (k) -> {
             List<Menu> visibleMenu = baseMapper.findVisibleMenu(group, userId);
             return visibleMenu.stream().mapToLong(Menu::getId).boxed().collect(Collectors.toList());
         });

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/MenuController.java
Patch:
@@ -11,7 +11,6 @@
 import com.github.zuihou.authority.dto.auth.VueRouter;
 import com.github.zuihou.authority.entity.auth.Menu;
 import com.github.zuihou.authority.service.auth.MenuService;
-import com.github.zuihou.authority.service.auth.RoleService;
 import com.github.zuihou.base.BaseController;
 import com.github.zuihou.base.R;
 import com.github.zuihou.base.entity.SuperEntity;
@@ -57,8 +56,6 @@ public class MenuController extends BaseController {
 
     @Autowired
     private MenuService menuService;
-    @Autowired
-    private RoleService roleService;
 
     @Autowired
     private DozerUtils dozer;

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/constant/CacheKey.java
Patch:
@@ -87,7 +87,7 @@ public interface CacheKey {
      * @param args
      * @return
      */
-    static String build(String... args) {
+    static String build(Object... args) {
         return Joiner.on(StrPool.COLON).join(args);
     }
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/ResourceServiceImpl.java
Patch:
@@ -108,7 +108,7 @@ public Resource getByIdWithCache(Long id) {
     @CacheEvict(value = CacheKey.RESOURCE, key = "#id")
     public boolean removeByIdWithCache(Long id) {
         Resource resource = super.getById(id);
-        BizAssert.assertNotNull(resource);
+        BizAssert.notNull(resource);
         if (ResourceType.URI.eq(resource.getResourceType())) {
             //TODO 注意这里有没有必要
             return super.update(Wraps.<Resource>lbU().set(Resource::getMenuId, null).eq(Resource::getId, id));
@@ -126,8 +126,8 @@ public boolean updateWithCache(Resource resource) {
     @Override
     public boolean saveWithCache(Resource resource) {
         if (ResourceType.URI.eq(resource.getResourceType())) {
-            BizAssert.assertNotNull(resource.getId(), "URI资源不能为空");
-            BizAssert.assertNotNull(resource.getMenuId(), "URI资源必须关联菜单");
+            BizAssert.notNull(resource.getId(), "URI资源不能为空");
+            BizAssert.notNull(resource.getMenuId(), "URI资源必须关联菜单");
         }
 
         resource.setCode(StrHelper.getOrDef(resource.getCode(), codeGenerate.next()));

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/core/OrgController.java
Patch:
@@ -110,7 +110,7 @@ public R<Org> save(@RequestBody @Validated OrgSaveDTO data) {
             org.setTreePath(DEF_ROOT_PATH);
         } else {
             Org parent = orgService.getById(org.getParentId());
-            BizAssert.assertNotNull(parent, "父组织不能为空");
+            BizAssert.notNull(parent, "父组织不能为空");
 
             org.setTreePath(StringUtils.join(parent.getTreePath(), parent.getId(), DEF_ROOT_PATH));
         }

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/enumeration/auth/Sex.java
Patch:
@@ -16,7 +16,7 @@
  * </p>
  *
  * @author zuihou
- * @date 2019-10-22
+ * @date 2019-10-25
  */
 @Getter
 @AllArgsConstructor

File: zuihou-backend/zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/service/impl/SmsTemplateServiceImpl.java
Patch:
@@ -19,7 +19,7 @@
 import org.springframework.stereotype.Service;
 
 import static com.github.zuihou.exception.code.ExceptionCode.BASE_VALID_PARAM;
-import static com.github.zuihou.utils.BizAssert.assertNotNull;
+import static com.github.zuihou.utils.BizAssert.notNull;
 
 /**
  * <p>
@@ -54,7 +54,7 @@ private static String getParamByContent(String content, String regEx) {
 
     private void buildParams(SmsTemplate smsTemplate) {
         SmsProvider smsProvider = smsProviderService.getById(smsTemplate.getProviderId());
-        assertNotNull(smsProvider, "短信供应商不存在");
+        notNull(smsProvider, "短信供应商不存在");
         String content = smsTemplate.getContent();
         if (StrUtil.isNotEmpty(content)) {
             String param = getParamByContent(content, smsProvider.getProviderType().getRegex());

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/constant/AttachmentType.java
Patch:
@@ -32,7 +32,7 @@ private AttachmentType() {
 
     public static boolean assertType(String type) {
         boolean flag = Arrays.asList(ALL_TYPES).contains(type);
-        BizAssert.assertTrue(ExceptionCode.BAD_GATEWAY, flag);
+        BizAssert.isTrue(flag, ExceptionCode.BAD_GATEWAY);
         return flag;
     }
 

File: zuihou-commons/zuihou-log-starter/src/main/java/com/github/zuihou/log/entity/OptLogDTO.java
Patch:
@@ -32,6 +32,7 @@ public class OptLogDTO {
      * 操作IP
      */
     private String requestIp;
+    private String tenantCode;
 
     /**
      * 日志类型

File: zuihou-commons/zuihou-user-starter/src/main/java/com/github/zuihou/user/interceptor/ContextHandlerInterceptor.java
Patch:
@@ -35,8 +35,6 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons
                 log.info("not exec!!! url={}", request.getRequestURL());
                 return super.preHandle(request, response, handler);
             }
-//            HandlerMethod handlerMethod = (HandlerMethod) handler;
-
             String userId = getHeader(request, BaseContextConstants.JWT_KEY_USER_ID);
             String account = getHeader(request, BaseContextConstants.JWT_KEY_ACCOUNT);
             String name = getHeader(request, BaseContextConstants.JWT_KEY_NAME);

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/auth/Resource.java
Patch:
@@ -5,6 +5,7 @@
 import javax.validation.constraints.NotEmpty;
 import javax.validation.constraints.NotNull;
 
+import com.baomidou.mybatisplus.annotation.SqlCondition;
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import com.github.zuihou.authority.enumeration.auth.ResourceType;
@@ -61,7 +62,7 @@ public class Resource extends Entity<Long> {
      */
     @ApiModelProperty(value = "资源类型")
     @NotNull(message = "资源类型不能为空")
-    @TableField("resource_type")
+    @TableField(value = "resource_type")
     private ResourceType resourceType;
 
     /**
@@ -70,7 +71,7 @@ public class Resource extends Entity<Long> {
     @ApiModelProperty(value = "接口名称")
     @NotEmpty(message = "接口名称不能为空")
     @Length(max = 255, message = "接口名称长度不能超过255")
-    @TableField("name")
+    @TableField(value = "name", condition = SqlCondition.LIKE)
     private String name;
 
     /**
@@ -124,7 +125,6 @@ public class Resource extends Entity<Long> {
     /**
      * 请求方式
      * #HttpMethod{GET:GET请求;POST:POST请求;PUT:PUT请求;DELETE:DELETE请求;PATCH:PATCH请求;TRACE:TRACE请求;HEAD:HEAD请求;OPTIONS:OPTIONS请求;}
-     *
      */
     @ApiModelProperty(value = "请求方式")
     @TableField("http_method")

File: zuihou-backend/zuihou-authority/zuihou-authority-server/src/test/java/com/github/zuihou/TestResource.java
Patch:
@@ -137,13 +137,12 @@ public void dozer2Test() {
     @Test
     public void test3() {
 
-
-        LbqWrapper<Resource> query2 = Wraps.lbQ(Resource.builder().name("新增").build());
+        LbqWrapper<Resource> query2 = Wraps.<Resource>lbQ().eq(Resource::getName, "xiz");
         List<Resource> resources2 = resourceMapper.selectList(query2);
         log.info("{}", resources2.size());
 
 
-        LbqWrapper<Resource> query = Wraps.lbQ(Resource.builder().name("%").resourceType(ResourceType.BUTTON).build());
+        LbqWrapper<Resource> query = Wraps.lbQ(Resource.builder().name("新增%").resourceType(ResourceType.BUTTON).build());
         List<Resource> resources = resourceMapper.selectList(query);
         log.info("{}", resources.size());
 

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/AuthTokenController.java
Patch:
@@ -61,6 +61,7 @@ public R<Token> token(@RequestParam(value = "account") String account,
     @RequestMapping(value = "/login", method = RequestMethod.POST)
     public R<LoginDTO> login(@RequestParam(value = "account") String account,
                              @RequestParam(value = "password") String password) throws BizException {
+        log.info("account={}", account);
         return success(authManager.login(account, password));
     }
 

File: zuihou-backend/zuihou-gateway/zuihou-gateway-server/src/main/java/com/github/zuihou/gateway/filter/ZuihouXForwardedHeadersFilter.java
Patch:
@@ -42,6 +42,9 @@ public HttpHeaders filter(HttpHeaders input, ServerWebExchange exchange) {
         HttpHeaders original = input;
         HttpHeaders updated = new HttpHeaders();
 
+        original.entrySet().stream()
+                .forEach(entry -> updated.addAll(entry.getKey(), entry.getValue()));
+
         LinkedHashSet<URI> originalUris = exchange.getAttribute(GATEWAY_ORIGINAL_REQUEST_URL_ATTR);
         URI requestUri = exchange.getAttribute(GATEWAY_REQUEST_URL_ATTR);
 

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/mybatis/conditions/query/LbqWrapper.java
Patch:
@@ -17,9 +17,9 @@
 import com.baomidou.mybatisplus.core.conditions.query.Query;
 import com.baomidou.mybatisplus.core.conditions.segments.MergeSegments;
 import com.baomidou.mybatisplus.core.metadata.TableFieldInfo;
+import com.baomidou.mybatisplus.core.metadata.TableInfoHelper;
 import com.baomidou.mybatisplus.core.toolkit.ArrayUtils;
 import com.baomidou.mybatisplus.core.toolkit.StringUtils;
-import com.baomidou.mybatisplus.core.toolkit.TableInfoHelper;
 import com.baomidou.mybatisplus.core.toolkit.support.SFunction;
 import com.github.zuihou.base.entity.SuperEntity;
 import com.github.zuihou.database.mybatis.typehandler.BaseLikeTypeHandler;

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/utils/FileDataTypeUtil.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.zuihou.file.utils;
 
 
+import java.io.File;
 import java.nio.file.Paths;
 import java.time.LocalDate;
 import java.time.format.DateTimeFormatter;
@@ -71,7 +72,7 @@ public static String getUploadPathPrefix(String uploadPathPrefix) {
     }
 
     public static String getRelativePath(String pathPrefix, String path) {
-        String remove = StringUtils.remove(path, pathPrefix);
+        String remove = StringUtils.remove(path, pathPrefix + File.separator);
 
         log.info("remove={}, index={}", remove, remove.lastIndexOf(java.io.File.separator));
         String relativePath = StringUtils.substring(remove, 0, remove.lastIndexOf(java.io.File.separator));

File: zuihou-backend/zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/FileChunkController.java
Patch:
@@ -23,7 +23,6 @@
 import io.swagger.annotations.ApiOperation;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.web.bind.annotation.CrossOrigin;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
@@ -113,7 +112,6 @@ public R<String> uploadFile(FileUploadDTO info, @RequestParam(value = "file", re
         /*
         将MD5签名和合并后的文件path存入持久层，注意这里这个需求导致需要修改webuploader.js源码3170行
         因为原始webuploader.js不支持为formData设置函数类型参数，这将导致不能在控件初始化后修改该参数
-
         文件大小 小于 单个分片时，会执行这里的代码
         */
         if (info.getChunks() == null || info.getChunks() <= 0) {

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/strategy/impl/AbstractFileChunkStrategy.java
Patch:
@@ -142,8 +142,10 @@ private R<File> chunksMerge(FileChunksMergeDTO info, String fileName) {
         String folder = info.getName();
         String md5 = info.getMd5();
 
+        int chunksNum = this.getChunksNum(Paths.get(path, folder).toString());
+        log.info("chunks={}, chunksNum={}", chunks, chunksNum);
         //检查是否满足合并条件：分片数量是否足够
-        if (chunks == this.getChunksNum(Paths.get(path, folder).toString())) {
+        if (chunks == chunksNum) {
             //同步指定合并的对象
             Lock lock = FileLock.getLock(folder);
             try {

File: zuihou-backend/zuihou-file/zuihou-file-controller/src/main/java/com/github/zuihou/file/controller/FileChunkController.java
Patch:
@@ -41,7 +41,6 @@
  */
 @RestController
 @Slf4j
-@CrossOrigin
 @RequestMapping("/chunk")
 @Api(value = "文件续传+秒传", tags = "文件续传+秒传功能，所有方法均需要webuploder.js插件进行配合使用， 且4个方法需要配合使用，单核接口没有意义")
 public class FileChunkController extends BaseController {
@@ -131,7 +130,7 @@ public R<String> uploadFile(FileUploadDTO info, @RequestParam(value = "file", re
         } else {
             //为上传的文件准备好对应的位置
             java.io.File target = wu.getReadySpace(info, uploadFolder);
-
+            log.info("target={}", target.getAbsolutePath());
             if (target == null) {
                 return fail(wu.getErrorMsg());
             }

File: zuihou-backend/zuihou-gateway/zuihou-zuul-server/src/main/java/com/github/zuihou/zuul/fallback/AuthorityServiceFallbackProvider.java
Patch:
@@ -13,7 +13,8 @@ public class AuthorityServiceFallbackProvider extends AbstractServiceFallbackPro
     @Override
     public String getRoute() {
         //Zuul 目前只支持服务级别的熔断，不支持具体到某个URL进行熔断 ， 所以，在响应时只需给出大概提示即可
-        return "zuihou-authority-server";
+//        return "zuihou-authority-server";
+        return "*";
     }
 
 

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/UserController.java
Patch:
@@ -255,11 +255,10 @@ public R<Boolean> register(@RequestBody @Validated UserRegisterDTO data) {
         User user = User.builder()
                 .account(data.getMobile())
                 .name(data.getMobile()).orgId(DEMO_ORG_ID).stationId(DEMO_STATION_ID)
-                .mobile(data.getMobile()).workDescribe("演示账号")
+                .mobile(data.getMobile())
                 .password(DigestUtils.md5Hex(data.getPassword()))
                 .build();
         return success(userService.save(user));
     }
 
-
 }

File: zuihou-backend/zuihou-msgs/zuihou-msgs-entity/src/main/java/com/github/zuihou/msgs/dto/MsgsCenterInfoDTO.java
Patch:
@@ -47,7 +47,6 @@ public class MsgsCenterInfoDTO implements Serializable {
      * #MsgsBizType.code
      */
     @ApiModelProperty(value = "业务类型")
-    @NotNull(message = "业务类型不能为空")
     @Length(max = 64, message = "业务类型长度不能超过64")
     private MsgsBizType bizType;
     /**
@@ -67,7 +66,7 @@ public class MsgsCenterInfoDTO implements Serializable {
      * 内容
      */
     @ApiModelProperty(value = "内容")
-    @Length(max = 500, message = "内容长度不能超过500")
+    @Length(max = 65535, message = "内容长度不能超过65535")
     private String content;
     /**
      * 作者名称

File: zuihou-backend/zuihou-msgs/zuihou-sms-biz/src/main/java/com/github/zuihou/sms/strategy/impl/SmsTencentStrategy.java
Patch:
@@ -86,7 +86,7 @@ protected SmsResult send(SmsDO smsDO) {
 
             SmsSingleSenderResult singleSenderResult = singleSender.sendWithParam("86", smsDO.getPhone(),
                     NumberHelper.intValueOf0(smsDO.getTemplateCode()), paramList, smsDO.getSignName(), "", "");
-            log.info(singleSenderResult.toString());
+            log.info("tencent result={}", singleSenderResult.toString());
             return SmsResult.build(ProviderType.TENCENT, String.valueOf(singleSenderResult.result),
                     singleSenderResult.sid, singleSenderResult.ext,
                     ERROR_CODE_MAP.getOrDefault(String.valueOf(singleSenderResult.result), singleSenderResult.errMsg), singleSenderResult.fee);

File: zuihou-backend/zuihou-api/zuihou-authority-api/src/main/java/com/github/zuihou/authority/api/LogApi.java
Patch:
@@ -23,7 +23,7 @@ public interface LogApi {
      * @param log 日志
      * @return
      */
-    @RequestMapping(value = "/log", method = RequestMethod.POST)
+    @RequestMapping(value = "/optLog", method = RequestMethod.POST)
     R<OptLogDTO> save(@RequestBody OptLogDTO log);
 
 }

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/common/OptLogController.java
Patch:
@@ -57,11 +57,10 @@ public class OptLogController extends BaseController {
     })
     @ApiOperation(value = "分页查询系统日志", notes = "分页查询系统日志")
     @GetMapping("/page")
-    @SysLog("分页查询系统日志")
     public R<IPage<OptLog>> page(OptLog data) {
         IPage<OptLog> page = getPage();
         // 构建值不为null的查询条件
-        LbqWrapper<OptLog> query = Wraps.lbQ(data);
+        LbqWrapper<OptLog> query = Wraps.lbQ(data).orderByDesc(OptLog::getCreateTime);
         optLogService.page(page, query);
         return success(page);
     }
@@ -74,7 +73,6 @@ public R<IPage<OptLog>> page(OptLog data) {
      */
     @ApiOperation(value = "查询系统日志", notes = "查询系统日志")
     @GetMapping("/{id}")
-    @SysLog("查询系统日志")
     public R<OptLog> get(@PathVariable Long id) {
         return success(optLogService.getById(id));
     }

File: zuihou-backend/zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/controller/interceptor/WebMvcConfig.java
Patch:
@@ -14,11 +14,14 @@
 @Configuration
 public class WebMvcConfig implements WebMvcConfigurer {
 
+    @Resource
+    private PermissionInterceptor permissionInterceptor;
     @Resource
     private CookieInterceptor cookieInterceptor;
 
     @Override
     public void addInterceptors(InterceptorRegistry registry) {
+        registry.addInterceptor(permissionInterceptor).addPathPatterns("/**");
         registry.addInterceptor(cookieInterceptor).addPathPatterns("/**");
         WebMvcConfigurer.super.addInterceptors(registry);
     }

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/auth/impl/UserServiceImpl.java
Patch:
@@ -59,11 +59,11 @@ public Map<String, Object> getDataScopeById(Long userId) {
         DataScopeType dsType = DataScopeType.SELF;
 
         List<Role> list = roleService.findRoleByUserId(userId);
-        Optional<Role> min = list.stream().min(Comparator.comparingInt(Role::getDsType));
+        Optional<Role> min = list.stream().min(Comparator.comparingInt((item) -> item.getDsType().getVal()));
 
         if (min.isPresent()) {
             Role role = min.get();
-            dsType = DataScopeType.get(role.getDsType());
+            dsType = role.getDsType();
 
             if (DataScopeType.CUSTOMIZE.eq(dsType)) {
                 LbqWrapper<RoleOrg> wrapper = Wraps.<RoleOrg>lbQ().select(RoleOrg::getOrgId).eq(RoleOrg::getRoleId, role.getId());

File: zuihou-backend/zuihou-authority/zuihou-authority-biz/src/main/java/com/github/zuihou/authority/service/core/impl/OrgServiceImpl.java
Patch:
@@ -32,6 +32,7 @@ public List<Org> findChildren(List<Long> ids) {
         if (CollectionUtil.isEmpty(ids)) {
             return Collections.emptyList();
         }
+        // MySQL 全文索引
         String applySql = String.format(" MATCH(tree_path) AGAINST('%s' IN BOOLEAN MODE) ", StringUtils.join(ids, " "));
 
 

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/auth/RoleController.java
Patch:
@@ -21,7 +21,6 @@
 import com.github.zuihou.base.entity.SuperEntity;
 import com.github.zuihou.database.mybatis.conditions.Wraps;
 import com.github.zuihou.database.mybatis.conditions.query.LbqWrapper;
-import com.github.zuihou.dozer.DozerUtils;
 import com.github.zuihou.log.annotation.SysLog;
 
 import io.swagger.annotations.Api;
@@ -63,8 +62,6 @@ public class RoleController extends BaseController {
     private UserRoleService userRoleService;
     @Autowired
     private RoleAuthorityService roleAuthorityService;
-    @Autowired
-    private DozerUtils dozer;
 
     /**
      * 分页查询角色

File: zuihou-backend/zuihou-authority/zuihou-authority-entity/src/main/java/com/github/zuihou/authority/entity/auth/Role.java
Patch:
@@ -5,6 +5,7 @@
 import com.baomidou.mybatisplus.annotation.TableField;
 import com.baomidou.mybatisplus.annotation.TableName;
 import com.github.zuihou.base.entity.Entity;
+import com.github.zuihou.database.mybatis.auth.DataScopeType;
 
 import io.swagger.annotations.ApiModel;
 import io.swagger.annotations.ApiModelProperty;
@@ -82,12 +83,12 @@ public class Role extends Entity<Long> {
      */
     @ApiModelProperty(value = "数据权限类型")
     @TableField("ds_type")
-    private Integer dsType;
+    private DataScopeType dsType;
 
 
     @Builder
     public Role(Long id, Long createUser, LocalDateTime createTime, Long updateUser, LocalDateTime updateTime,
-                String name, String code, String describe, Boolean isEnable, Boolean isReadonly, Integer dsType) {
+                String name, String code, String describe, Boolean isEnable, Boolean isReadonly, DataScopeType dsType) {
         this.id = id;
         this.createUser = createUser;
         this.createTime = createTime;

File: zuihou-commons/zuihou-log-starter/src/main/java/com/github/zuihou/log/aspect/SysLogAspect.java
Patch:
@@ -70,7 +70,7 @@ private OptLogDTO get() {
     public void recordLog(JoinPoint joinPoint) throws Throwable {
         log.info("当前线程id={}", Thread.currentThread().getId());
 
-        tryCatch((aaa) -> {
+        tryCatch((val) -> {
             // 开始时间
             OptLogDTO sysLog = get();
             sysLog.setCreateUser(BaseContextHandler.getUserId());

File: zuihou-backend/zuihou-msgs/zuihou-msgs-entity/src/main/java/com/github/zuihou/sms/dto/SmsTemplateSaveDTO.java
Patch:
@@ -69,7 +69,6 @@ public class SmsTemplateSaveDTO implements Serializable {
      * 模板参数
      */
     @ApiModelProperty(value = "模板参数")
-    @NotEmpty(message = "模板参数不能为空")
     @Length(max = 255, message = "模板参数长度不能超过255")
     private String templateParams;
     /**

File: zuihou-backend/zuihou-msgs/zuihou-msgs-entity/src/main/java/com/github/zuihou/sms/dto/SmsTemplateUpdateDTO.java
Patch:
@@ -75,7 +75,6 @@ public class SmsTemplateUpdateDTO implements Serializable {
      * 模板参数
      */
     @ApiModelProperty(value = "模板参数")
-    @NotEmpty(message = "模板参数不能为空")
     @Length(max = 255, message = "模板参数长度不能超过255")
     private String templateParams;
     /**

File: zuihou-backend/zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/controller/IndexController.java
Patch:
@@ -17,6 +17,8 @@
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.ResponseBody;
 
+import static com.github.zuihou.common.adapter.BaseConfig.DEFAULT_DATE_TIME_FORMAT;
+
 /**
  * index controller
  *
@@ -98,7 +100,7 @@ public String help() {
 
     @InitBinder
     public void initBinder(WebDataBinder binder) {
-        SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_TIME_FORMAT);
+        SimpleDateFormat dateFormat = new SimpleDateFormat(DEFAULT_DATE_TIME_FORMAT);
         dateFormat.setLenient(false);
         binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));
     }

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/adapter/BaseConfig.java
Patch:
@@ -100,8 +100,8 @@ public ObjectMapper jacksonObjectMapper(Jackson2ObjectMapperBuilder builder) {
         //在进出前后台的时候，设置BigDecimal和字符串之间转换
         simpleModule.addSerializer(BigDecimal.class, ToStringSerializer.instance);
         simpleModule.addDeserializer(Enum.class, EnumDeserializer.instance);
-
         simpleModule.addDeserializer(String.class, new XssStringDeserializer());
+
         objectMapper.registerModule(simpleModule);
 
         return objectMapper;

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/utils/DateUtils.java
Patch:
@@ -21,7 +21,7 @@
 
 /**
  * 描述：日期工具类
- * 修改人：zhaopengfei
+ * @author tangyh
  * 修改时间：2018/4/24
  */
 @Slf4j

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/controller/core/OrgController.java
Patch:
@@ -93,7 +93,7 @@ public R<Org> get(@PathVariable Long id) {
     @SysLog("新增组织")
     public R<Org> save(@RequestBody @Validated OrgSaveDTO data) {
         Org org = dozer.map(data, Org.class);
-        if (org.getParentId() == null) {
+        if (org.getParentId() == null || org.getParentId() <= 0) {
             org.setParentId(PARENT_ID_DEF);
             org.setTreePath(ROOT_PATH_DEF);
         } else {

File: zuihou-backend/zuihou-jobs/zuihou-jobs-server/src/main/java/com/github/zuihou/config/String2DateConverter.java
Patch:
@@ -38,7 +38,8 @@ protected static Date parseDate(String dateStr, String format) {
         Date date = null;
         try {
             DateFormat dateFormat = new SimpleDateFormat(format);
-            dateFormat.setLenient(false); //严格模式
+            //严格模式
+            dateFormat.setLenient(false);
             date = dateFormat.parse(dateStr);
         } catch (Exception e) {
 

File: zuihou-backend/zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/controller/IndexController.java
Patch:
@@ -98,7 +98,7 @@ public String help() {
 
     @InitBinder
     public void initBinder(WebDataBinder binder) {
-        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_TIME_FORMAT);
         dateFormat.setLenient(false);
         binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));
     }

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/adapter/BaseConfig.java
Patch:
@@ -101,11 +101,9 @@ public ObjectMapper jacksonObjectMapper(Jackson2ObjectMapperBuilder builder) {
         simpleModule.addSerializer(BigDecimal.class, ToStringSerializer.instance);
         simpleModule.addDeserializer(Enum.class, EnumDeserializer.instance);
 
-//        simpleModule.addSerializer(new XssStringJsonSerializer());
         simpleModule.addDeserializer(String.class, new XssStringDeserializer());
         objectMapper.registerModule(simpleModule);
 
-
         return objectMapper;
     }
 

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/adapter/IgnoreTokenConfig.java
Patch:
@@ -11,6 +11,7 @@
  * @author zuihou
  * @date 2019/01/03
  */
+@Deprecated
 public class IgnoreTokenConfig {
     public static final List<String> LIST = Arrays.asList(
             "/error",

File: zuihou-backend/zuihou-jobs/zuihou-jobs-core/src/main/java/com/xxl/job/core/thread/ExecutorRegistryThread.java
Patch:
@@ -14,7 +14,7 @@
 /**
  * Created by xuxueli on 17/3/2.
  */
-public class ExecutorRegistryThread extends Thread {
+public class ExecutorRegistryThread /*extends Thread*/ {
     private static Logger logger = LoggerFactory.getLogger(ExecutorRegistryThread.class);
 
     private static ExecutorRegistryThread instance = new ExecutorRegistryThread();

File: zuihou-backend/zuihou-jobs/zuihou-jobs-core/src/main/java/com/xxl/job/core/thread/JobLogFileCleanThread.java
Patch:
@@ -19,7 +19,7 @@
  *
  * @author xuxueli 2017-12-29 16:23:43
  */
-public class JobLogFileCleanThread extends Thread {
+public class JobLogFileCleanThread /*extends Thread */ {
     private static Logger logger = LoggerFactory.getLogger(JobLogFileCleanThread.class);
 
     private static JobLogFileCleanThread instance = new JobLogFileCleanThread();

File: zuihou-backend/zuihou-jobs/zuihou-jobs-core/src/main/java/com/xxl/job/core/thread/JobThread.java
Patch:
@@ -153,7 +153,9 @@ public ReturnT<String> call() throws Exception {
 
                             executeResult = new ReturnT<String>(IJobHandler.FAIL_TIMEOUT.getCode(), "job execute timeout ");
                         } finally {
-                            futureThread.interrupt();
+                            if (futureThread != null) {
+                                futureThread.interrupt();
+                            }
                         }
                     } else {
                         // just execute

File: zuihou-backend/zuihou-authority/zuihou-authority-controller/src/main/java/com/github/zuihou/authority/mananger/AuthManager.java
Patch:
@@ -31,7 +31,7 @@ public class AuthManager {
     public LoginDTO login(String account, String password) {
         User user = getUser(account, password);
         Token token = getToken(user);
-        log.info("account={}, password={}", account, password);
+        log.info("account={}", account);
         return LoginDTO.builder().user(user).token(token).build();
     }
 

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/mybatis/auth/DataScope.java
Patch:
@@ -23,7 +23,7 @@
 import lombok.EqualsAndHashCode;
 
 /**
- * @author lengleng
+ * @author zuihou
  * @date 2019/2/1
  * 数据权限查询参数
  */

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/service/impl/FileServiceImpl.java
Patch:
@@ -190,8 +190,7 @@ public Boolean removeList(Long userId, Long[] ids) {
         List<File> list = super.list(query);
         List<Recycle> recycles = dozerUtils.mapList(list, Recycle.class);
 
-        recycleService.saveBatch(recycles);
-        return Boolean.TRUE;
+        return recycleService.saveBatch(recycles);
     }
 
     @Override

File: zuihou-backend/zuihou-file/zuihou-file-biz/src/main/java/com/github/zuihou/file/utils/ZipUtils.java
Patch:
@@ -1 +1 @@
-package com.github.zuihou.file.utils;import java.io.BufferedInputStream;import java.io.BufferedOutputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLEncoder;import java.util.Enumeration;import java.util.Map;import java.util.zip.ZipEntry;import java.util.zip.ZipException;import java.util.zip.ZipFile;import java.util.zip.ZipOutputStream;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import lombok.extern.slf4j.Slf4j;import org.apache.commons.codec.binary.Base64;/** * ZipUtils on spring-boot-filemanager * * @author <a href="mailto:akhuting@hotmail.com">Alex Yang</a> * @date 2016年08月25日 10:08 */@Slf4jpublic class ZipUtils {    public static void zipFiles(ZipOutputStream out, String path, File... srcFiles) {        path = path.replaceAll("\\*", "/");        if (!path.endsWith("/")) {            path += "/";        }        byte[] buf = new byte[1024];        try {            for (File srcFile : srcFiles) {                if (srcFile.isDirectory()) {                    File[] files = srcFile.listFiles();                    String srcPath = srcFile.getName();                    srcPath = srcPath.replaceAll("\\*", "/");                    if (!srcPath.endsWith("/")) {                        srcPath += "/";                    }                    out.putNextEntry(new ZipEntry(path + srcPath));                    zipFiles(out, path + srcPath, files);                } else {                    try (FileInputStream in = new FileInputStream(srcFile)) {                        out.putNextEntry(new ZipEntry(path + srcFile.getName()));                        int len;                        while ((len = in.read(buf)) > 0) {                            out.write(buf, 0, len);                        }                        out.closeEntry();                    }                }            }        } catch (Exception e) {            log.info("ZipUtils error {} ", e);        }    }    public static void unZipFiles(File zipFile, String descDir) throws IOException {        if (!descDir.endsWith("/")) {            descDir += "/";        }        File pathFile = new File(descDir);        if (!pathFile.exists()) {            pathFile.mkdirs();        }        try (ZipFile zip = new ZipFile(zipFile)) {            for (Enumeration entries = zip.entries(); entries.hasMoreElements(); ) {                ZipEntry entry = (ZipEntry) entries.nextElement();                String zipEntryName = entry.getName();                InputStream in = zip.getInputStream(entry);                String outPath = (descDir + zipEntryName).replaceAll("\\*", "/");                //判断路径是否存在,不存在则创建文件路径                File file = new File(outPath.substring(0, outPath.lastIndexOf('/')));                if (!file.exists()) {                    file.mkdirs();                }                //判断文件全路径是否为文件夹,如果是上面已经上传,不需要解压                if (new File(outPath).isDirectory()) {                    continue;                }                OutputStream out = new FileOutputStream(outPath);                byte[] buf1 = new byte[1024];                int len;                while ((len = in.read(buf1)) > 0) {                    out.write(buf1, 0, len);                }                in.close();                out.close();            }        } catch (ZipException e) {            throw e;        }    }    /**     * 通过流打包下载文件     *     * @param out     * @param fileName     * @param     */    public static void zipFilesByInputStream(ZipOutputStream out, String fileName, InputStream is) throws Exception {        byte[] buf = new byte[1024];        try {            out.putNextEntry(new ZipEntry(fileName));            int len;            while ((len = is.read(buf)) > 0) {                out.write(buf, 0, len);            }            is.close();//            out.closeEntry();        } catch (Exception e) {            throw e;        } finally {            if (is != null) {                is.close();            }        }    }    /**     * 下载指定输入流的图片     *     * @param     * @param     * @param     * @throws Exception     */    public static void downloadFile(InputStream is, OutputStream out) throws Exception {        try {            byte[] b = new byte[2048];            int length;            while ((length = is.read(b)) > 0) {                out.write(b, 0, length);            }        } catch (Exception e) {            throw e;        } finally {            if (out != null) {                out.close();            }            if (is != null) {                is.close();            }        }    }    public static void zipFilesByInputStream(Map<String, String> fileMap, Long fileSize, String extName, HttpServletRequest request, HttpServletResponse response) throws Exception {        HttpURLConnection connection = null;        response.setContentType("application/octet-stream; charset=utf-8");        String downloadFileName;        String agent = request.getHeader("USER-AGENT");        if (agent != null && agent.toLowerCase().indexOf("firefox") > 0) {            downloadFileName = "=?UTF-8?B?" + (new String(Base64.encodeBase64((extName).getBytes("UTF-8")))) + "?=";        } else {            //~ \ / |:"<>?   这些字符不能被替换，因为系统允许文件名有这些字符！！            downloadFileName = URLEncoder.encode(extName, "UTF-8")                    .replaceAll("\\+", "%20").replaceAll("%28", "\\(")                    .replaceAll("%29", "\\)")                    .replaceAll("%3B", ";")                    .replaceAll("%40", "@").replaceAll("%23", "\\#")                    .replaceAll("%26", "\\&").replaceAll("%2C", "\\,")                    .replaceAll("%2B", "+").replaceAll("%25", "%")                    .replaceAll("%21", "!").replaceAll("%5E", "^")                    .replaceAll("%24", "\\$").replaceAll("%7E", "~")                    .replaceAll("%60", "`").replaceAll("%5B", "[")                    .replaceAll("%3D", "=")                    .replaceAll("%5D", "]").replaceAll("%5C", "\\\\")                    .replaceAll("%27", "'").replaceAll("%2F", "/")                    .replaceAll("%7B", "{").replaceAll("%7D", "}")                    .replaceAll("%7C", "\\|").replaceAll("%3A", "\\:")                    .replaceAll("%22", "\\\"").replaceAll("%3C", "\\<")                    .replaceAll("%3E", "\\>").replaceAll("%3F", "\\?")            ;            log.info("downloadFileName={}", downloadFileName);        }        response.setHeader("Content-Disposition", "attachment;fileName=" + downloadFileName);        if (fileSize != null && fileSize > 0) {            response.setHeader("Content-Length", String.valueOf(fileSize));        }        ServletOutputStream out = response.getOutputStream();        if (fileMap.size() == 1) {            String url = null;            for (Map.Entry<String, String> entry : fileMap.entrySet()) {                url = entry.getValue();            }            connection = getConnection(url);            ZipUtils.downloadFile(connection.getInputStream(), out);            return;        }        ZipOutputStream zos = new ZipOutputStream(out);        BufferedOutputStream bos = new BufferedOutputStream(zos);        for (Map.Entry<String, String> entry : fileMap.entrySet()) {            String fileName = entry.getKey();            String url = entry.getValue();            try {                connection = getConnection(url);                BufferedInputStream bis = new BufferedInputStream(connection.getInputStream());                zos.putNextEntry(new ZipEntry(fileName));                int len;                byte[] buf = new byte[10 * 1024];                while ((len = bis.read(buf, 0, buf.length)) != -1) {                    bos.write(buf, 0, len);                }                bis.close();                bos.flush();            } catch (Exception e) {                log.warn("打包下载多个文件异常, fileName=" + fileName + ",url=" + url, e);            } finally {                if (connection != null) {                    connection.disconnect();                }            }        }        if (bos != null) {            bos.close();        }    }    private static HttpURLConnection getConnection(String url) throws Exception {        URL conURL = new URL(url);        HttpURLConnection connection = (HttpURLConnection) conURL.openConnection();        connection.connect();        return connection;    }}
\ No newline at end of file
+package com.github.zuihou.file.utils;import java.io.BufferedInputStream;import java.io.BufferedOutputStream;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.URL;import java.net.URLEncoder;import java.util.Enumeration;import java.util.Map;import java.util.zip.ZipEntry;import java.util.zip.ZipException;import java.util.zip.ZipFile;import java.util.zip.ZipOutputStream;import javax.servlet.ServletOutputStream;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import lombok.extern.slf4j.Slf4j;import org.apache.commons.codec.binary.Base64;/** * ZipUtils on spring-boot-filemanager * * @author <a href="mailto:akhuting@hotmail.com">Alex Yang</a> * @date 2016年08月25日 10:08 */@Slf4jpublic class ZipUtils {    public static void zipFiles(ZipOutputStream out, String path, File... srcFiles) {        path = path.replaceAll("\\*", "/");        if (!path.endsWith("/")) {            path += "/";        }        byte[] buf = new byte[1024];        try {            for (File srcFile : srcFiles) {                if (srcFile.isDirectory()) {                    File[] files = srcFile.listFiles();                    String srcPath = srcFile.getName();                    srcPath = srcPath.replaceAll("\\*", "/");                    if (!srcPath.endsWith("/")) {                        srcPath += "/";                    }                    out.putNextEntry(new ZipEntry(path + srcPath));                    zipFiles(out, path + srcPath, files);                } else {                    try (FileInputStream in = new FileInputStream(srcFile)) {                        out.putNextEntry(new ZipEntry(path + srcFile.getName()));                        int len;                        while ((len = in.read(buf)) > 0) {                            out.write(buf, 0, len);                        }                        out.closeEntry();                    }                }            }        } catch (Exception e) {            log.info("ZipUtils error {} ", e);        }    }    public static void unZipFiles(File zipFile, String descDir) throws IOException {        if (!descDir.endsWith("/")) {            descDir += "/";        }        File pathFile = new File(descDir);        if (!pathFile.exists()) {            pathFile.mkdirs();        }        try (ZipFile zip = new ZipFile(zipFile)) {            for (Enumeration entries = zip.entries(); entries.hasMoreElements(); ) {                ZipEntry entry = (ZipEntry) entries.nextElement();                String zipEntryName = entry.getName();                String outPath = (descDir + zipEntryName).replaceAll("\\*", "/");                //判断路径是否存在,不存在则创建文件路径                File file = new File(outPath.substring(0, outPath.lastIndexOf('/')));                if (!file.exists()) {                    file.mkdirs();                }                //判断文件全路径是否为文件夹,如果是上面已经上传,不需要解压                if (new File(outPath).isDirectory()) {                    continue;                }                try (InputStream in = zip.getInputStream(entry); OutputStream out = new FileOutputStream(outPath)) {                    byte[] buf1 = new byte[1024];                    int len;                    while ((len = in.read(buf1)) > 0) {                        out.write(buf1, 0, len);                    }                }            }        } catch (ZipException e) {            throw e;        }    }    /**     * 通过流打包下载文件     *     * @param out     * @param fileName     * @param     */    public static void zipFilesByInputStream(ZipOutputStream out, String fileName, InputStream is) throws Exception {        byte[] buf = new byte[1024];        try {            out.putNextEntry(new ZipEntry(fileName));            int len;            while ((len = is.read(buf)) > 0) {                out.write(buf, 0, len);            }            is.close();//            out.closeEntry();        } catch (Exception e) {            throw e;        } finally {            if (is != null) {                is.close();            }        }    }    /**     * 下载指定输入流的图片     *     * @param     * @param     * @param     * @throws Exception     */    public static void downloadFile(InputStream is, OutputStream out) throws Exception {        try {            byte[] b = new byte[2048];            int length;            while ((length = is.read(b)) > 0) {                out.write(b, 0, length);            }        } catch (Exception e) {            throw e;        } finally {            if (out != null) {                out.close();            }            if (is != null) {                is.close();            }        }    }    public static void zipFilesByInputStream(Map<String, String> fileMap, Long fileSize, String extName, HttpServletRequest request, HttpServletResponse response) throws Exception {        HttpURLConnection connection = null;        response.setContentType("application/octet-stream; charset=utf-8");        String downloadFileName;        String agent = request.getHeader("USER-AGENT");        if (agent != null && agent.toLowerCase().indexOf("firefox") > 0) {            downloadFileName = "=?UTF-8?B?" + (new String(Base64.encodeBase64((extName).getBytes("UTF-8")))) + "?=";        } else {            //~ \ / |:"<>?   这些字符不能被替换，因为系统允许文件名有这些字符！！            downloadFileName = URLEncoder.encode(extName, "UTF-8")                    .replaceAll("\\+", "%20").replaceAll("%28", "\\(")                    .replaceAll("%29", "\\)")                    .replaceAll("%3B", ";")                    .replaceAll("%40", "@").replaceAll("%23", "\\#")                    .replaceAll("%26", "\\&").replaceAll("%2C", "\\,")                    .replaceAll("%2B", "+").replaceAll("%25", "%")                    .replaceAll("%21", "!").replaceAll("%5E", "^")                    .replaceAll("%24", "\\$").replaceAll("%7E", "~")                    .replaceAll("%60", "`").replaceAll("%5B", "[")                    .replaceAll("%3D", "=")                    .replaceAll("%5D", "]").replaceAll("%5C", "\\\\")                    .replaceAll("%27", "'").replaceAll("%2F", "/")                    .replaceAll("%7B", "{").replaceAll("%7D", "}")                    .replaceAll("%7C", "\\|").replaceAll("%3A", "\\:")                    .replaceAll("%22", "\\\"").replaceAll("%3C", "\\<")                    .replaceAll("%3E", "\\>").replaceAll("%3F", "\\?")            ;            log.info("downloadFileName={}", downloadFileName);        }        response.setHeader("Content-Disposition", "attachment;fileName=" + downloadFileName);        if (fileSize != null && fileSize > 0) {            response.setHeader("Content-Length", String.valueOf(fileSize));        }        ServletOutputStream out = response.getOutputStream();        if (fileMap.size() == 1) {            String url = null;            for (Map.Entry<String, String> entry : fileMap.entrySet()) {                url = entry.getValue();            }            connection = getConnection(url);            ZipUtils.downloadFile(connection.getInputStream(), out);            return;        }        try (ZipOutputStream zos = new ZipOutputStream(out); BufferedOutputStream bos = new BufferedOutputStream(zos)) {            for (Map.Entry<String, String> entry : fileMap.entrySet()) {                String fileName = entry.getKey();                String url = entry.getValue();                BufferedInputStream bis = null;                try {                    connection = getConnection(url);                    bis = new BufferedInputStream(connection.getInputStream());                    zos.putNextEntry(new ZipEntry(fileName));                    int len;                    byte[] buf = new byte[10 * 1024];                    while ((len = bis.read(buf, 0, buf.length)) != -1) {                        bos.write(buf, 0, len);                    }                    bos.flush();                } catch (Exception e) {                    log.warn("打包下载多个文件异常, fileName=" + fileName + ",url=" + url, e);                } finally {                    if (connection != null) {                        connection.disconnect();                    }                    if (bis != null) {                        bis.close();                    }                }            }        }    }    private static HttpURLConnection getConnection(String url) throws Exception {        URL conURL = new URL(url);        HttpURLConnection connection = (HttpURLConnection) conURL.openConnection();        connection.connect();        return connection;    }}
\ No newline at end of file

File: zuihou-backend/zuihou-file/zuihou-file-entity/src/main/java/com/github/zuihou/file/enumeration/FileStorageType.java
Patch:
@@ -19,7 +19,7 @@ public enum FileStorageType {
 
     public boolean eq(FileStorageType type) {
         for (FileStorageType t : FileStorageType.values()) {
-            return t.name().equals(type);
+            return t.equals(type);
         }
         return false;
     }

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/base/entity/SuperEntity.java
Patch:
@@ -33,7 +33,7 @@
 @AllArgsConstructor
 @ToString
 public class SuperEntity<T> implements Serializable, Cloneable {
-    public static final String ID = "id";
+    public static final String FIELD_ID = "id";
     public static final String CREATE_TIME = "createTime";
     public static final String CREATE_USER = "createUser";
 

File: zuihou-commons/zuihou-databases/src/main/java/com/github/zuihou/database/datasource/MyMetaObjectHandler.java
Patch:
@@ -62,10 +62,10 @@ public void insertFill(MetaObject metaObject) {
 
         if (flag) {
             Long id = idGenerator.generate();
-            if (ID_TYPE.equals(metaObject.getGetterType(SuperEntity.ID).getName())) {
-                this.setFieldValByName(SuperEntity.ID, String.valueOf(id), metaObject);
+            if (ID_TYPE.equals(metaObject.getGetterType(SuperEntity.FIELD_ID).getName())) {
+                this.setFieldValByName(SuperEntity.FIELD_ID, String.valueOf(id), metaObject);
             } else {
-                this.setFieldValByName(SuperEntity.ID, id, metaObject);
+                this.setFieldValByName(SuperEntity.FIELD_ID, id, metaObject);
             }
         }
 

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/base/entity/Entity.java
Patch:
@@ -8,6 +8,7 @@
 import io.swagger.annotations.ApiModelProperty;
 import lombok.Getter;
 import lombok.Setter;
+import lombok.ToString;
 import lombok.experimental.Accessors;
 
 /**
@@ -19,6 +20,7 @@
 @Getter
 @Setter
 @Accessors(chain = true)
+@ToString
 public class Entity<T> extends SuperEntity<T> {
 
     public static final String UPDATE_TIME = "updateTime";
@@ -41,4 +43,4 @@ public Entity(T id, LocalDateTime createTime, T createUser, LocalDateTime update
     public Entity() {
     }
 
-}
\ No newline at end of file
+}

File: zuihou-commons/zuihou-core/src/main/java/com/github/zuihou/base/entity/SuperEntity.java
Patch:
@@ -17,6 +17,7 @@
 import lombok.Getter;
 import lombok.NoArgsConstructor;
 import lombok.Setter;
+import lombok.ToString;
 import lombok.experimental.Accessors;
 
 /**
@@ -30,7 +31,8 @@
 @Accessors(chain = true)
 @NoArgsConstructor
 @AllArgsConstructor
-public class SuperEntity<T> implements Serializable {
+@ToString
+public class SuperEntity<T> implements Serializable, Cloneable {
     public static final String ID = "id";
     public static final String CREATE_TIME = "createTime";
     public static final String CREATE_USER = "createUser";

File: zuihou-commons/zuihou-common/src/main/java/com/github/zuihou/common/config/LoginArgResolverConfig.java
Patch:
@@ -4,7 +4,7 @@
 
 import com.github.zuihou.common.feign.UserResolveApi;
 import com.github.zuihou.common.interceptor.ContextHandlerInterceptor;
-import com.github.zuihou.common.resolver.TokenArgumentResolver;
+import com.github.zuihou.common.resolver.ContextArgumentResolver;
 
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.context.annotation.Lazy;
@@ -31,7 +31,7 @@ public class LoginArgResolverConfig implements WebMvcConfigurer {
      */
     @Override
     public void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) {
-        argumentResolvers.add(new TokenArgumentResolver(userResolveApi));
+        argumentResolvers.add(new ContextArgumentResolver(userResolveApi));
     }
 
 

File: zuihou-backend/zuihou-client/zuihou-authority-api/src/main/java/com/github/zuihou/authority/api/hystrix/LogApiHystrix.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.zuihou.authority.api.hystrix;
 
-import com.github.zuihou.auth.utils.Token;
 import com.github.zuihou.authority.api.LogApi;
 import com.github.zuihou.base.R;
 import com.github.zuihou.log.entity.OptLogDTO;
@@ -16,7 +15,7 @@
 @Component
 public class LogApiHystrix implements LogApi {
     @Override
-    public R<Token> save(OptLogDTO log) {
+    public R<OptLogDTO> save(OptLogDTO log) {
         return R.timeout();
     }
 }

File: zuihou-backend/zuihou-jobs/zuihou-jobs-server/src/main/java/com/xxl/job/admin/dao/XxlJobRegistryDao.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.util.List;
 
-import com.baomidou.mybatisplus.core.mapper.BaseMapper;
 import com.xxl.job.admin.core.model.XxlJobRegistry;
 
 import org.apache.ibatis.annotations.Param;
@@ -12,7 +11,7 @@
  * Created by xuxueli on 16/9/30.
  */
 @Repository
-public interface XxlJobRegistryDao extends BaseMapper<XxlJobRegistry> {
+public interface XxlJobRegistryDao {
 
 
     int removeDead(@Param("timeout") Integer timeout);

File: zuihou-commons/zuihou-swagger2-starter/src/main/java/com/github/zuihou/swagger2/SwaggerAutoConfiguration.java
Patch:
@@ -41,6 +41,7 @@
 import springfox.documentation.spring.web.plugins.Docket;
 
 /**
+ * swagger 包扫描配置
  * @author zuihou
  * @date 2018/11/18 9:22
  */
@@ -57,7 +58,7 @@ public class SwaggerAutoConfiguration implements BeanFactoryAware {
 
     @Bean
     @ConditionalOnMissingBean
-    @ConditionalOnProperty(name = "zuihou.swagger.enabled", matchIfMissing = true)
+    @ConditionalOnProperty(name = "zuihou.swagger.enabled", havingValue = "true", matchIfMissing = true)
     public List<Docket> createRestApi() {
         ConfigurableBeanFactory configurableBeanFactory = (ConfigurableBeanFactory) beanFactory;
         List<Docket> docketList = new LinkedList<>();

File: zuihou-commons/zuihou-swagger2-starter/src/main/java/com/github/zuihou/swagger2/SwaggerProperties.java
Patch:
@@ -53,7 +53,7 @@ public class SwaggerProperties {
     /**
      * swagger会解析的包路径
      **/
-    private String basePackage = "";
+    private String basePackage = "com.github.zuihou";
 
     /**
      * swagger会解析的url规则

File: zuihou-service/zuihou-zipkin/src/main/java/com/github/zuihou/zipkin/ZipkinApplication.java
Patch:
@@ -3,7 +3,7 @@
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
-import org.springframework.cloud.sleuth.zipkin.stream.EnableZipkinStreamServer;
+import zipkin.server.EnableZipkinServer;
 
 /**
  * https://my.oschina.net/roccn/blog/834278
@@ -13,7 +13,8 @@
  */
 @SpringBootApplication
 @EnableDiscoveryClient //注册到eureka
-@EnableZipkinStreamServer //使用Stream方式启动ZipkinServer
+//@EnableZipkinStreamServer //使用Stream方式启动ZipkinServer
+@EnableZipkinServer  // 新版本使用这个即可使用rabbitmq
 public class ZipkinApplication {
     public static void main(String[] args) {
         SpringApplication.run(ZipkinApplication.class, args);

File: zuihou-backend/zuihou-auth/zuihou-auth-client/src/main/java/com/github/zuihou/auth/client/EnableZuihouAuthClient.java
Patch:
@@ -11,7 +11,7 @@
 import java.lang.annotation.Target;
 
 /**
- * 启用高新区授权client
+ * 启用授权client
  * @author zuihou
  * @createTime 2017-12-13 15:26
  */

File: zuihou-backend/zuihou-auth/zuihou-auth-server/src/main/java/com/github/zuihou/auth/config/datasource/AuthDbConfiguration.java
Patch:
@@ -16,7 +16,7 @@
 import javax.sql.DataSource;
 
 /**
- * 一体化平台 中心数据库配置
+ * 统一平台 中心数据库配置
  *
  * @author zuihou
  * @createTime 2017-11-18 0:34

File: zuihou-backend/zuihou-file/src/main/java/com/github/zuihou/file/config/FileProperties.java
Patch:
@@ -3,6 +3,7 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 import org.springframework.boot.context.properties.ConfigurationProperties;
+import org.springframework.context.annotation.Configuration;
 
 import static com.github.zuihou.file.config.FileProperties.FILE_PREFIX;
 
@@ -15,7 +16,7 @@
 @ConfigurationProperties(prefix = FILE_PREFIX)
 @Data
 @NoArgsConstructor
-//@Configuration
+@Configuration
 public class FileProperties {
     public static final String FILE_PREFIX = "zuihou.file";
     /**

File: zuihou-backend/zuihou-auth/zuihou-auth-server/src/main/java/com/github/zuihou/auth/config/datasource/AuthDbConfiguration.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.zuihou.auth.configuration.datasource;
+package com.github.zuihou.auth.config.datasource;
 
 
 import com.github.zuihou.core.spring.autoconfigure.datasource.DataSourceFactory;

File: zuihou-backend/zuihou-auth/zuihou-auth-server/src/main/java/com/github/zuihou/auth/controller/ApplicationController.java
Patch:
@@ -5,6 +5,7 @@
 import com.github.zuihou.auth.service.ApplicationService;
 import com.github.zuihou.base.Result;
 import com.github.zuihou.exception.BizException;
+import io.swagger.annotations.Api;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestMethod;
@@ -16,6 +17,7 @@
  */
 @RestController
 @RequestMapping("app")
+@Api(value = "应用token申请", description = "对外第三方应用的token申请")
 public class ApplicationController {
     @Autowired
     private ApplicationService applicationService;

File: zuihou-backend/zuihou-auth/zuihou-auth-server/src/main/java/com/github/zuihou/auth/controller/AuthController.java
Patch:
@@ -6,6 +6,7 @@
 import com.github.zuihou.auth.service.AuthService;
 import com.github.zuihou.base.Result;
 import com.github.zuihou.exception.BizException;
+import io.swagger.annotations.Api;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.beans.factory.annotation.Value;
 import org.springframework.web.bind.annotation.RequestBody;
@@ -21,6 +22,7 @@
  */
 @RestController
 @RequestMapping("client")
+@Api(value = "客服端token申请", description = "客服端token申请， 用于各个内部微服务之间的token申请")
 public class AuthController {
     @Value("${jwt.token-header}")
     private String tokenHeader;

File: zuihou-backend/zuihou-gateway/zuihou-gateway-server/src/main/java/com/github/zuihou/gateway/GatewayServerApplication.java
Patch:
@@ -12,8 +12,7 @@
  */
 @SpringBootApplication
 @EnableDiscoveryClient
-@EnableFeignClients({"com.github.zuihou.geteway.feign",
-        "com.github.zuihou.auth.client.feign"})
+@EnableFeignClients({"com.github.zuihou.gateway.feign"})
 @EnableZuulProxy
 //@EnableScheduling
 //@EnableZuihouAuthClient

