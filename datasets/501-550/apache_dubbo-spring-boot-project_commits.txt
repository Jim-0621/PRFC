File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboConfigurationProperties.java
Patch:
@@ -45,7 +45,7 @@
  * @since 2.7.1
  */
 @ConfigurationProperties(DUBBO_PREFIX)
-class DubboConfigurationProperties {
+public class DubboConfigurationProperties {
 
     @NestedConfigurationProperty
     private Config config = new Config();

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/context/DubboApplicationContextInitializer.java
Patch:
@@ -16,8 +16,6 @@
  */
 package org.apache.dubbo.spring.boot.context;
 
-import org.apache.dubbo.spring.boot.beans.factory.config.OverrideBeanDefinitionRegistryPostProcessor;
-
 import org.springframework.context.ApplicationContextInitializer;
 import org.springframework.context.ConfigurableApplicationContext;
 import org.springframework.core.Ordered;
@@ -36,10 +34,12 @@ public void initialize(ConfigurableApplicationContext applicationContext) {
     }
 
     private void overrideBeanDefinitions(ConfigurableApplicationContext applicationContext) {
-        applicationContext.addBeanFactoryPostProcessor(new OverrideBeanDefinitionRegistryPostProcessor());
+        // @since 2.7.8 OverrideBeanDefinitionRegistryPostProcessor has been removed
+        // applicationContext.addBeanFactoryPostProcessor(new OverrideBeanDefinitionRegistryPostProcessor());
         // @since 2.7.5 DubboConfigBeanDefinitionConflictProcessor has been removed
         // @see {@link DubboConfigBeanDefinitionConflictApplicationListener}
         // applicationContext.addBeanFactoryPostProcessor(new DubboConfigBeanDefinitionConflictProcessor());
+        // TODO Add some components in the future ( after 2.7.8 )
     }
 
     @Override

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboConfigsMetadataEndpoint.java
Patch:
@@ -18,6 +18,7 @@
 
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.AbstractDubboMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboConfigsMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboMetadataEndpoint.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.actuate.endpoint;
 
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboPropertiesMetadataEndpoint.java
Patch:
@@ -18,6 +18,7 @@
 
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.AbstractDubboMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboPropertiesMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboReferencesMetadataEndpoint.java
Patch:
@@ -16,17 +16,18 @@
  */
 package org.apache.dubbo.spring.boot.actuate.endpoint;
 
-import org.apache.dubbo.config.annotation.Reference;
+import org.apache.dubbo.config.annotation.DubboReference;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.AbstractDubboMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboReferencesMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
 
 import java.util.Map;
 
 /**
- * Dubbo {@link Reference} Metadata {@link Endpoint}
+ * {@link DubboReference} Metadata {@link Endpoint}
  *
  * @since 2.7.0
  */

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboServicesMetadataEndpoint.java
Patch:
@@ -16,17 +16,18 @@
  */
 package org.apache.dubbo.spring.boot.actuate.endpoint;
 
-import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.DubboService;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.AbstractDubboMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboServicesMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
 
 import java.util.Map;
 
 /**
- * Dubbo {@link Service} Metadata {@link Endpoint}
+ * {@link DubboService} Metadata {@link Endpoint}
  *
  * @since 2.7.0
  */

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -18,6 +18,7 @@
 
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.AbstractDubboMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboShutdownMetadata;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.WriteOperation;

File: dubbo-spring-boot-actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAnnotationAutoConfigurationTest.java
Patch:
@@ -16,7 +16,7 @@
  */
 package org.apache.dubbo.spring.boot.actuate.autoconfigure;
 
-import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.DubboService;
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboConfigsMetadataEndpoint;
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboMetadataEndpoint;
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboPropertiesMetadataEndpoint;
@@ -214,7 +214,7 @@ interface DemoService {
         String sayHello(String name);
     }
 
-    @Service(
+    @DubboService(
             version = "${dubbo.service.version}",
             application = "${dubbo.application.id}",
             protocol = "${dubbo.protocol.id}",

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/metadata/DubboReferencesMetadata.java
Patch:
@@ -16,17 +16,18 @@
  */
 package org.apache.dubbo.spring.boot.actuate.endpoint.metadata;
 
-import org.apache.dubbo.config.annotation.Reference;
+import org.apache.dubbo.config.annotation.DubboReference;
 import org.apache.dubbo.config.spring.ReferenceBean;
 import org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
+
 import org.springframework.beans.factory.annotation.InjectionMetadata;
 import org.springframework.stereotype.Component;
 
 import java.util.LinkedHashMap;
 import java.util.Map;
 
 /**
- * Dubbo {@link Reference} Metadata
+ * {@link DubboReference} Metadata
  *
  * @since 2.7.0
  */

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/metadata/DubboServicesMetadata.java
Patch:
@@ -16,15 +16,16 @@
  */
 package org.apache.dubbo.spring.boot.actuate.endpoint.metadata;
 
-import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.DubboService;
 import org.apache.dubbo.config.spring.ServiceBean;
+
 import org.springframework.stereotype.Component;
 
 import java.util.LinkedHashMap;
 import java.util.Map;
 
 /**
- * Dubbo {@link Service} Metadata
+ *  {@link DubboService} Metadata
  *
  * @since 2.7.0
  */

File: dubbo-spring-boot-compatible/actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAutoConfigurationTest.java
Patch:
@@ -16,7 +16,7 @@
  */
 package org.apache.dubbo.spring.boot.actuate.autoconfigure;
 
-import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.DubboService;
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboEndpoint;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboConfigsMetadata;
 import org.apache.dubbo.spring.boot.actuate.endpoint.metadata.DubboPropertiesMetadata;
@@ -220,7 +220,7 @@ interface DemoService {
         String sayHello(String name);
     }
 
-    @Service(
+    @DubboService(
             version = "${dubbo.service.version}",
             application = "${dubbo.application.id}",
             protocol = "${dubbo.protocol.id}",

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/sample/provider/bootstrap/DubboExternalizedConfigurationProviderBootstrap.java
Patch:
@@ -14,9 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.sample.provider.bootstrap;
+
+import org.apache.dubbo.spring.boot.sample.provider.service.DefaultDemoService;
 
-import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.builder.SpringApplicationBuilder;
 

File: dubbo-spring-boot-samples/registry-samples/nacos-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/sample/provider/bootstrap/DubboRegistryNacosProviderBootstrap.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.sample.provider.bootstrap;
 
-import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
+import org.apache.dubbo.spring.boot.sample.provider.service.DefaultDemoService;
 
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.builder.SpringApplicationBuilder;

File: dubbo-spring-boot-samples/registry-samples/zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/sample/provider/bootstrap/DubboRegistryZooKeeperProviderBootstrap.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.sample.provider.bootstrap;
 
-import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
+import org.apache.dubbo.spring.boot.sample.provider.service.DefaultDemoService;
 
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.builder.SpringApplicationBuilder;

File: dubbo-spring-boot-samples/sample-api/src/main/java/org/apache/dubbo/spring/boot/sample/consumer/DemoService.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package org.apache.dubbo.spring.boot.demo.consumer;
+package org.apache.dubbo.spring.boot.sample.consumer;
 
 /**
  * Demo Service interface

File: dubbo-spring-boot-compatible/actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAutoConfigurationTest.java
Patch:
@@ -27,6 +27,7 @@
 import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.databind.ObjectMapper;
 import org.junit.Assert;
+import org.junit.Ignore;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -78,6 +79,7 @@
                 "endpoints.dubboproperties.enabled = true",
         })
 @EnableAutoConfiguration
+@Ignore
 public class DubboEndpointAutoConfigurationTest {
 
     @Autowired

File: dubbo-spring-boot-compatible/actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicatorTest.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.actuate.health;
 
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -38,6 +39,8 @@
  */
 @RunWith(SpringRunner.class)
 @TestPropertySource(properties = {
+        "dubbo.application.id = my-application-1",
+        "dubbo.application.name = dubbo-demo-application-1",
         "dubbo.protocol.id = dubbo-protocol",
         "dubbo.protocol.name = dubbo",
         "dubbo.protocol.port = 12345",

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/DubboUtils.java
Patch:
@@ -19,7 +19,6 @@
 import org.apache.dubbo.config.ApplicationConfig;
 import org.apache.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor;
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig;
-import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfigBinding;
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
 
 import org.springframework.boot.context.ContextIdApplicationContextInitializer;
@@ -143,7 +142,6 @@ public abstract class DubboUtils {
      * The property id of {@link ApplicationConfig} Bean
      *
      * @see EnableDubboConfig
-     * @see EnableDubboConfigBinding
      * @since 2.7.1
      */
     public static final String DUBBO_APPLICATION_ID_PROPERTY = "dubbo.application.id";
@@ -152,7 +150,6 @@ public abstract class DubboUtils {
      * The property name of {@link ApplicationConfig}
      *
      * @see EnableDubboConfig
-     * @see EnableDubboConfigBinding
      * @since 2.7.1
      */
     public static final String DUBBO_APPLICATION_NAME_PROPERTY = "dubbo.application.name";

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/beans/factory/config/OverrideBeanDefinitionRegistryPostProcessor.java
Patch:
@@ -21,8 +21,8 @@
 import org.springframework.beans.factory.support.BeanDefinitionRegistry;
 import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;
 
+import static com.alibaba.spring.util.BeanRegistrar.registerInfrastructureBean;
 import static org.apache.dubbo.config.spring.context.config.NamePropertyDefaultValueDubboConfigBeanCustomizer.BEAN_NAME;
-import static org.apache.dubbo.config.spring.util.BeanRegistrar.registerInfrastructureBean;
 
 /**
  * Override {@link BeanDefinitionRegistryPostProcessor}

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/context/DubboApplicationContextInitializer.java
Patch:
@@ -16,7 +16,6 @@
  */
 package org.apache.dubbo.spring.boot.context;
 
-import org.apache.dubbo.spring.boot.beans.factory.config.DubboConfigBeanDefinitionConflictProcessor;
 import org.apache.dubbo.spring.boot.beans.factory.config.OverrideBeanDefinitionRegistryPostProcessor;
 
 import org.springframework.context.ApplicationContextInitializer;
@@ -38,7 +37,9 @@ public void initialize(ConfigurableApplicationContext applicationContext) {
 
     private void overrideBeanDefinitions(ConfigurableApplicationContext applicationContext) {
         applicationContext.addBeanFactoryPostProcessor(new OverrideBeanDefinitionRegistryPostProcessor());
-        applicationContext.addBeanFactoryPostProcessor(new DubboConfigBeanDefinitionConflictProcessor());
+        // @since 2.7.5 DubboConfigBeanDefinitionConflictProcessor has been removed
+        // @see {@link DubboConfigBeanDefinitionConflictApplicationListener}
+        // applicationContext.addBeanFactoryPostProcessor(new DubboConfigBeanDefinitionConflictProcessor());
     }
 
     @Override

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/autoconfigure/CompatibleDubboAutoConfigurationTest.java
Patch:
@@ -18,18 +18,19 @@
 
 import org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
 import org.apache.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationBeanPostProcessor;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.ObjectProvider;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
 import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.context.annotation.PropertySource;
 import org.springframework.test.context.junit4.SpringRunner;
 
 /**
  * {@link DubboAutoConfiguration} Test
- *
  * @see DubboAutoConfiguration
  */
 @RunWith(SpringRunner.class)
@@ -39,6 +40,7 @@
         "dubbo.scan.base-packages = org.apache.dubbo.spring.boot.autoconfigure"
 })
 @EnableAutoConfiguration
+@PropertySource(value = "classpath:/META-INF/dubbo.properties")
 public class CompatibleDubboAutoConfigurationTest {
 
     @Autowired

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBinding2AutoConfiguration.java
Patch:
@@ -17,7 +17,7 @@
 package org.apache.dubbo.spring.boot.autoconfigure;
 
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
-import org.apache.dubbo.config.spring.util.PropertySourcesUtils;
+
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
@@ -34,6 +34,7 @@
 
 import java.util.Map;
 
+import static org.apache.dubbo.config.spring.util.PropertySourcesUtils.getPrefixedProperties;
 import static org.apache.dubbo.spring.boot.util.DubboUtils.BASE_PACKAGES_PROPERTY_RESOLVER_BEAN_NAME;
 import static org.apache.dubbo.spring.boot.util.DubboUtils.DUBBO_PREFIX;
 import static org.apache.dubbo.spring.boot.util.DubboUtils.DUBBO_SCAN_PREFIX;
@@ -57,7 +58,7 @@ public PropertyResolver dubboScanBasePackagesPropertyResolver(ConfigurableEnviro
         ConfigurableEnvironment propertyResolver = new AbstractEnvironment() {
             @Override
             protected void customizePropertySources(MutablePropertySources propertySources) {
-                Map<String, Object> dubboScanProperties = PropertySourcesUtils.getSubProperties(environment, DUBBO_SCAN_PREFIX);
+                Map<String, Object> dubboScanProperties = getPrefixedProperties(environment.getPropertySources(), DUBBO_SCAN_PREFIX);
                 propertySources.addLast(new MapPropertySource("dubboScanProperties", dubboScanProperties));
             }
         };

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBinding2AutoConfigurationTest.java
Patch:
@@ -94,4 +94,4 @@ public void testBeans() {
         assertTrue(environments.containsValue(environment));
     }
 
-}
+}
\ No newline at end of file

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/RelaxedDubboConfigBinder.java
Patch:
@@ -19,12 +19,13 @@
 import org.apache.dubbo.config.AbstractConfig;
 import org.apache.dubbo.config.spring.context.properties.AbstractDubboConfigBinder;
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
+
 import org.springframework.beans.MutablePropertyValues;
 import org.springframework.boot.bind.RelaxedDataBinder;
 
 import java.util.Map;
 
-import static org.apache.dubbo.config.spring.util.PropertySourcesUtils.getSubProperties;
+import static org.apache.dubbo.config.spring.util.PropertySourcesUtils.getPrefixedProperties;
 
 /**
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
@@ -40,7 +41,7 @@ public <C extends AbstractConfig> void bind(String prefix, C dubboConfig) {
         relaxedDataBinder.setIgnoreInvalidFields(isIgnoreInvalidFields());
         relaxedDataBinder.setIgnoreUnknownFields(isIgnoreUnknownFields());
         // Get properties under specified prefix from PropertySources
-        Map<String, Object> properties = getSubProperties(getPropertySources(), prefix);
+        Map<String, Object> properties = getPrefixedProperties(getPropertySources(), prefix);
         // Convert Map to MutablePropertyValues
         MutablePropertyValues propertyValues = new MutablePropertyValues(properties);
         // Bind

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBinding2AutoConfiguration.java
Patch:
@@ -55,6 +55,7 @@ public class DubboRelaxedBinding2AutoConfiguration {
     @Bean(name = BASE_PACKAGES_PROPERTY_RESOLVER_BEAN_NAME)
     public PropertyResolver dubboScanBasePackagesPropertyResolver(ConfigurableEnvironment environment) {
         ConfigurableEnvironment propertyResolver = new AbstractEnvironment() {
+            @Override
             protected void customizePropertySources(MutablePropertySources propertySources) {
                 Map<String, Object> dubboScanProperties = PropertySourcesUtils.getSubProperties(environment, DUBBO_SCAN_PREFIX);
                 propertySources.addLast(new MapPropertySource("dubboScanProperties", dubboScanProperties));

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessor.java
Patch:
@@ -70,7 +70,7 @@ public int getOrder() {
     }
 
     private Map<String, Object> createDefaultProperties(ConfigurableEnvironment environment) {
-        Map<String, Object> defaultProperties = new HashMap<String, Object>();
+        Map<String, Object> defaultProperties = new HashMap<>();
         setDubboApplicationNameProperty(environment, defaultProperties);
         setDubboConfigMultipleProperty(defaultProperties);
         setDubboApplicationQosEnableProperty(defaultProperties);

File: dubbo-spring-boot-samples/dubbo-registry-nacos-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboRegistryNacosConsumerBootstrap.java
Patch:
@@ -27,7 +27,7 @@
 import org.springframework.context.annotation.Bean;
 
 /**
- * Dubbo Registry ZooKeeper Nacos Bootstrap
+ * Dubbo Registry Nacos Consumer Bootstrap
  */
 @EnableAutoConfiguration
 public class DubboRegistryNacosConsumerBootstrap {

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/DubboUtils.java
Patch:
@@ -189,13 +189,12 @@ public static SortedMap<String, Object> filterDubboProperties(ConfigurableEnviro
 
             if (propertyName.startsWith(DUBBO_PREFIX + PROPERTY_NAME_SEPARATOR)
                     && entry.getValue() != null) {
-                dubboProperties.put(propertyName, entry.getValue().toString());
+                dubboProperties.put(propertyName, environment.resolvePlaceholders(entry.getValue().toString()));
             }
 
         }
 
         return Collections.unmodifiableSortedMap(dubboProperties);
-
     }
 
 }

File: dubbo-spring-boot-actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboEndpointTest.java
Patch:
@@ -65,7 +65,7 @@ public void testInvoke() {
         Assert.assertEquals(getVersion(DubboUtils.class, "1.0.0"), versions.get("dubbo-spring-boot"));
         Assert.assertEquals(getVersion(), versions.get("dubbo"));
 
-        Assert.assertEquals("https://github.com/apache/incubator-dubbo", urls.get("dubbo"));
+        Assert.assertEquals("https://github.com/apache/dubbo", urls.get("dubbo"));
         Assert.assertEquals("dev@dubbo.apache.org", urls.get("mailing-list"));
         Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project", urls.get("github"));
         Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project/issues", urls.get("issues"));

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/DubboUtils.java
Patch:
@@ -114,7 +114,7 @@ public abstract class DubboUtils {
     /**
      * The github URL of Dubbo
      */
-    public static final String DUBBO_GITHUB_URL = "https://github.com/apache/incubator-dubbo";
+    public static final String DUBBO_GITHUB_URL = "https://github.com/apache/dubbo";
 
     /**
      * The google group URL of Dubbo

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/DubboUtilsTest.java
Patch:
@@ -69,7 +69,7 @@ public void testConstants() {
         Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project.git", DUBBO_SPRING_BOOT_GIT_URL);
         Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project/issues", DUBBO_SPRING_BOOT_ISSUES_URL);
 
-        Assert.assertEquals("https://github.com/apache/incubator-dubbo", DUBBO_GITHUB_URL);
+        Assert.assertEquals("https://github.com/apache/dubbo", DUBBO_GITHUB_URL);
 
         Assert.assertEquals("dev@dubbo.apache.org", DUBBO_MAILING_LIST);
 

File: dubbo-spring-boot-actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAnnotationAutoConfigurationTest.java
Patch:
@@ -160,7 +160,7 @@ public void testServices() {
 
         Assert.assertEquals(1, services.size());
 
-        Map<String, Object> demoServiceMeta = services.get("providers:my-protocol:org.apache.dubbo.spring.boot.actuate.autoconfigure.DubboEndpointAnnotationAutoConfigurationTest$DemoService:1.0.0");
+        Map<String, Object> demoServiceMeta = services.get("ServiceBean:org.apache.dubbo.spring.boot.actuate.autoconfigure.DubboEndpointAnnotationAutoConfigurationTest$DemoService:1.0.0");
 
         Assert.assertEquals("1.0.0", demoServiceMeta.get("version"));
 

File: dubbo-spring-boot-compatible/actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAutoConfigurationTest.java
Patch:
@@ -164,7 +164,7 @@ public void testServices() {
 
         Assert.assertEquals(1, services.size());
 
-        Map<String, Object> demoServiceMeta = services.get("providers:my-protocol:org.apache.dubbo.spring.boot.actuate.autoconfigure.DubboEndpointAutoConfigurationTest$DemoService:1.0.0");
+        Map<String, Object> demoServiceMeta = services.get("ServiceBean:org.apache.dubbo.spring.boot.actuate.autoconfigure.DubboEndpointAutoConfigurationTest$DemoService:1.0.0");
 
         Assert.assertEquals("1.0.0", demoServiceMeta.get("version"));
 

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBindingAutoConfiguration.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.autoconfigure;
 
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
+
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
@@ -52,4 +53,5 @@ public PropertyResolver dubboScanBasePackagesPropertyResolver(Environment enviro
     public DubboConfigBinder relaxedDubboConfigBinder() {
         return new RelaxedDubboConfigBinder();
     }
+
 }

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/DubboUtils.java
Patch:
@@ -99,17 +99,17 @@ public abstract class DubboUtils {
     /**
      * The github URL of Dubbo Spring Boot
      */
-    public static final String DUBBO_SPRING_BOOT_GITHUB_URL = "https://github.com/apache/incubator-dubbo-spring-boot-project";
+    public static final String DUBBO_SPRING_BOOT_GITHUB_URL = "https://github.com/apache/dubbo-spring-boot-project";
 
     /**
      * The git URL of Dubbo Spring Boot
      */
-    public static final String DUBBO_SPRING_BOOT_GIT_URL = "https://github.com/apache/incubator-dubbo-spring-boot-project.git";
+    public static final String DUBBO_SPRING_BOOT_GIT_URL = "https://github.com/apache/dubbo-spring-boot-project.git";
 
     /**
      * The issues of Dubbo Spring Boot
      */
-    public static final String DUBBO_SPRING_BOOT_ISSUES_URL = "https://github.com/apache/incubator-dubbo-spring-boot-project/issues";
+    public static final String DUBBO_SPRING_BOOT_ISSUES_URL = "https://github.com/apache/dubbo-spring-boot-project/issues";
 
     /**
      * The github URL of Dubbo

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/DubboUtilsTest.java
Patch:
@@ -65,9 +65,9 @@ public void testConstants() {
 
         Assert.assertEquals("dubbo.config.override", OVERRIDE_CONFIG_FULL_PROPERTY_NAME);
 
-        Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project", DUBBO_SPRING_BOOT_GITHUB_URL);
-        Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project.git", DUBBO_SPRING_BOOT_GIT_URL);
-        Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project/issues", DUBBO_SPRING_BOOT_ISSUES_URL);
+        Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project", DUBBO_SPRING_BOOT_GITHUB_URL);
+        Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project.git", DUBBO_SPRING_BOOT_GIT_URL);
+        Assert.assertEquals("https://github.com/apache/dubbo-spring-boot-project/issues", DUBBO_SPRING_BOOT_ISSUES_URL);
 
         Assert.assertEquals("https://github.com/apache/incubator-dubbo", DUBBO_GITHUB_URL);
 

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBinding2AutoConfiguration.java
Patch:
@@ -61,7 +61,7 @@ protected void customizePropertySources(MutablePropertySources propertySources)
             }
         };
         ConfigurationPropertySources.attach(propertyResolver);
-        return propertyResolver;
+        return new DelegatingPropertyResolver(propertyResolver);
     }
 
     @ConditionalOnMissingBean(name = RELAXED_DUBBO_CONFIG_BINDER_BEAN_NAME, value = DubboConfigBinder.class)

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAutoConfiguration.java
Patch:
@@ -20,11 +20,13 @@
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboEndpoint;
 import org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration;
 import org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBindingAutoConfiguration;
+
 import org.springframework.boot.actuate.condition.ConditionalOnEnabledEndpoint;
 import org.springframework.boot.actuate.endpoint.Endpoint;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -41,6 +43,7 @@
         DubboAutoConfiguration.class,
         DubboRelaxedBindingAutoConfiguration.class
 })
+@EnableConfigurationProperties(DubboEndpoint.class)
 public class DubboEndpointAutoConfiguration {
 
     @Bean

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.context.event;
 
 import org.apache.dubbo.common.Version;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -75,7 +76,7 @@ String buildBannerText() {
         bannerTextBuilder
                 .append(LINE_SEPARATOR)
                 .append(LINE_SEPARATOR)
-                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), "1.0.0")).append(") : ")
+                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), Version.getVersion())).append(") : ")
                 .append(DUBBO_SPRING_BOOT_GITHUB_URL)
                 .append(LINE_SEPARATOR)
                 .append(" :: Dubbo (v").append(Version.getVersion()).append(") : ")

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -23,6 +23,7 @@
 import org.apache.dubbo.config.ProtocolConfig;
 import org.apache.dubbo.config.ProviderConfig;
 import org.apache.dubbo.config.RegistryConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -49,7 +50,6 @@
 @TestPropertySource(
         properties = {
                 "dubbo.applications.application1.NAME = dubbo-demo-application",
-                "dubbo.applications.application2.name = dubbo-demo-application2",
                 "dubbo.modules.module1.name = dubbo-demo-module",
                 "dubbo.registries.registry1.address = zookeeper://192.168.99.100:32770",
                 "dubbo.protocols.protocol1.name=dubbo",
@@ -155,7 +155,7 @@ public class DubboAutoConfigurationOnMultipleConfigTest {
     public void testMultipleDubboConfigBindingProperties() {
 
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         Assert.assertEquals(1, modules.size());
 
@@ -179,7 +179,7 @@ public void testApplicationContext() {
          */
         Map<String, ApplicationConfig> applications = beansOfTypeIncludingAncestors(applicationContext, ApplicationConfig.class);
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         /**
          * Multiple {@link ModuleConfig}

File: dubbo-spring-boot-samples/auto-configure-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboAutoConfigurationConsumerBootstrap.java
Patch:
@@ -44,8 +44,6 @@ public static void main(String[] args) {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 }

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/bootstrap/EmbeddedZooKeeper.java
Patch:
@@ -93,6 +93,7 @@ public EmbeddedZooKeeper() {
      * Construct an EmbeddedZooKeeper with the provided port.
      *
      * @param clientPort port for ZooKeeper server to bind to
+     * @param daemon     is daemon or not thread.
      */
     public EmbeddedZooKeeper(int clientPort, boolean daemon) {
         this.clientPort = clientPort;

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/externalized-configuration-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboExternalizedConfigurationConsumerBootstrap.java
Patch:
@@ -51,8 +51,6 @@ public String sayHello(@RequestParam String name) {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 }

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/DubboRelaxedBinding2AutoConfiguration.java
Patch:
@@ -61,7 +61,7 @@ protected void customizePropertySources(MutablePropertySources propertySources)
             }
         };
         ConfigurationPropertySources.attach(propertyResolver);
-        return propertyResolver;
+        return new DelegatingPropertyResolver(propertyResolver);
     }
 
     @ConditionalOnMissingBean(name = RELAXED_DUBBO_CONFIG_BINDER_BEAN_NAME, value = DubboConfigBinder.class)

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/autoconfigure/DubboEndpointAutoConfiguration.java
Patch:
@@ -20,11 +20,13 @@
 import org.apache.dubbo.spring.boot.actuate.endpoint.DubboEndpoint;
 import org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration;
 import org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBindingAutoConfiguration;
+
 import org.springframework.boot.actuate.condition.ConditionalOnEnabledEndpoint;
 import org.springframework.boot.actuate.endpoint.Endpoint;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
+import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
 import org.springframework.context.annotation.Configuration;
 
@@ -41,6 +43,7 @@
         DubboAutoConfiguration.class,
         DubboRelaxedBindingAutoConfiguration.class
 })
+@EnableConfigurationProperties(DubboEndpoint.class)
 public class DubboEndpointAutoConfiguration {
 
     @Bean

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.context.event;
 
 import org.apache.dubbo.common.Version;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -75,7 +76,7 @@ String buildBannerText() {
         bannerTextBuilder
                 .append(LINE_SEPARATOR)
                 .append(LINE_SEPARATOR)
-                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), "1.0.0")).append(") : ")
+                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), Version.getVersion())).append(") : ")
                 .append(DUBBO_SPRING_BOOT_GITHUB_URL)
                 .append(LINE_SEPARATOR)
                 .append(" :: Dubbo (v").append(Version.getVersion()).append(") : ")

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -23,6 +23,7 @@
 import org.apache.dubbo.config.ProtocolConfig;
 import org.apache.dubbo.config.ProviderConfig;
 import org.apache.dubbo.config.RegistryConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -49,7 +50,6 @@
 @TestPropertySource(
         properties = {
                 "dubbo.applications.application1.NAME = dubbo-demo-application",
-                "dubbo.applications.application2.name = dubbo-demo-application2",
                 "dubbo.modules.module1.name = dubbo-demo-module",
                 "dubbo.registries.registry1.address = zookeeper://192.168.99.100:32770",
                 "dubbo.protocols.protocol1.name=dubbo",
@@ -155,7 +155,7 @@ public class DubboAutoConfigurationOnMultipleConfigTest {
     public void testMultipleDubboConfigBindingProperties() {
 
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         Assert.assertEquals(1, modules.size());
 
@@ -179,7 +179,7 @@ public void testApplicationContext() {
          */
         Map<String, ApplicationConfig> applications = beansOfTypeIncludingAncestors(applicationContext, ApplicationConfig.class);
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         /**
          * Multiple {@link ModuleConfig}

File: dubbo-spring-boot-samples/auto-configure-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboAutoConfigurationConsumerBootstrap.java
Patch:
@@ -44,8 +44,6 @@ public static void main(String[] args) {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 }

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/bootstrap/EmbeddedZooKeeper.java
Patch:
@@ -93,6 +93,7 @@ public EmbeddedZooKeeper() {
      * Construct an EmbeddedZooKeeper with the provided port.
      *
      * @param clientPort port for ZooKeeper server to bind to
+     * @param daemon     is daemon or not thread.
      */
     public EmbeddedZooKeeper(int clientPort, boolean daemon) {
         this.clientPort = clientPort;

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/externalized-configuration-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboExternalizedConfigurationConsumerBootstrap.java
Patch:
@@ -51,8 +51,6 @@ public String sayHello(@RequestParam String name) {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 }

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -35,6 +35,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -23,6 +23,7 @@
 import org.apache.dubbo.config.ProtocolConfig;
 import org.apache.dubbo.config.ProviderConfig;
 import org.apache.dubbo.config.RegistryConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -49,7 +50,6 @@
 @TestPropertySource(
         properties = {
                 "dubbo.applications.application1.NAME = dubbo-demo-application",
-                "dubbo.applications.application2.name = dubbo-demo-application2",
                 "dubbo.modules.module1.name = dubbo-demo-module",
                 "dubbo.registries.registry1.address = zookeeper://192.168.99.100:32770",
                 "dubbo.protocols.protocol1.name=dubbo",
@@ -155,7 +155,7 @@ public class DubboAutoConfigurationOnMultipleConfigTest {
     public void testMultipleDubboConfigBindingProperties() {
 
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         Assert.assertEquals(1, modules.size());
 
@@ -179,7 +179,7 @@ public void testApplicationContext() {
          */
         Map<String, ApplicationConfig> applications = beansOfTypeIncludingAncestors(applicationContext, ApplicationConfig.class);
 
-        Assert.assertEquals(3, applications.size());
+        Assert.assertEquals(1, applications.size());
 
         /**
          * Multiple {@link ModuleConfig}

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -17,6 +17,7 @@
 package org.apache.dubbo.spring.boot.context.event;
 
 import org.apache.dubbo.common.Version;
+
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -75,7 +76,7 @@ String buildBannerText() {
         bannerTextBuilder
                 .append(LINE_SEPARATOR)
                 .append(LINE_SEPARATOR)
-                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), "1.0.0")).append(") : ")
+                .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), Version.getVersion())).append(") : ")
                 .append(DUBBO_SPRING_BOOT_GITHUB_URL)
                 .append(LINE_SEPARATOR)
                 .append(" :: Dubbo (v").append(Version.getVersion()).append(") : ")

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/BinderDubboConfigBinder.java
Patch:
@@ -19,7 +19,6 @@
 import org.apache.dubbo.config.AbstractConfig;
 import org.apache.dubbo.config.spring.context.properties.AbstractDubboConfigBinder;
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
-
 import org.springframework.boot.context.properties.bind.BindHandler;
 import org.springframework.boot.context.properties.bind.Bindable;
 import org.springframework.boot.context.properties.bind.Binder;
@@ -36,9 +35,9 @@
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
  * see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  *
- * @since 0.1.1
+ * @since 2.7.0
  */
-public class RelaxedDubboConfigBinder extends AbstractDubboConfigBinder {
+class BinderDubboConfigBinder extends AbstractDubboConfigBinder {
 
     @Override
     public <C extends AbstractConfig> void bind(String prefix, C dubboConfig) {

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/EnvironmentUtilsTest.java
Patch:
@@ -30,7 +30,7 @@
  * {@link EnvironmentUtils} Test
  *
  * @see EnvironmentUtils
- * @since 1.0.0
+ * @since 2.7.0
  */
 public class EnvironmentUtilsTest {
 

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicator.java
Patch:
@@ -20,7 +20,6 @@
 import org.apache.dubbo.common.status.StatusChecker;
 import org.apache.dubbo.config.ProtocolConfig;
 import org.apache.dubbo.config.ProviderConfig;
-
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.health.AbstractHealthIndicator;
 import org.springframework.boot.actuate.health.Health;
@@ -38,7 +37,7 @@
  * Dubbo {@link HealthIndicator}
  *
  * @see HealthIndicator
- * @since 1.0.0
+ * @since 2.7.0
  */
 public class DubboHealthIndicator extends AbstractHealthIndicator {
 

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicatorProperties.java
Patch:
@@ -17,7 +17,6 @@
 package org.apache.dubbo.spring.boot.actuate.health;
 
 import org.apache.dubbo.common.status.StatusChecker;
-
 import org.springframework.boot.actuate.health.HealthIndicator;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -31,7 +30,7 @@
  * Dubbo {@link HealthIndicator} Properties
  *
  * @see HealthIndicator
- * @since 1.0.0
+ * @since 2.7.0
  */
 @ConfigurationProperties(prefix = PREFIX, ignoreUnknownFields = false)
 public class DubboHealthIndicatorProperties {

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessor.java
Patch:
@@ -19,7 +19,6 @@
 import org.apache.dubbo.config.ApplicationConfig;
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig;
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfigBinding;
-
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.context.ContextIdApplicationContextInitializer;
 import org.springframework.boot.env.EnvironmentPostProcessor;

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/EnvironmentUtils.java
Patch:
@@ -32,7 +32,7 @@
  * The utilities class for {@link Environment}
  *
  * @see Environment
- * @since 1.0.0
+ * @since 2.7.0
  */
 public abstract class EnvironmentUtils {
 

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListenerTest.java
Patch:
@@ -21,15 +21,15 @@
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+import org.springframework.test.context.junit4.SpringRunner;
 
 /**
  * {@link WelcomeLogoApplicationListener} Test
  *
  * @see WelcomeLogoApplicationListener
- * @since 1.0.0
+ * @since 2.7.0
  */
-@RunWith(SpringJUnit4ClassRunner.class)
+@RunWith(SpringRunner.class)
 @SpringBootTest(
         classes = {WelcomeLogoApplicationListener.class}
 )

File: dubbo-spring-boot-samples/auto-configure-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboAutoConfigurationConsumerBootstrap.java
Patch:
@@ -18,7 +18,6 @@
 
 import org.apache.dubbo.config.annotation.Reference;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.ApplicationRunner;
@@ -29,7 +28,7 @@
 /**
  * Dubbo Auto Configuration Consumer Bootstrap
  *
- * @since 1.0.0
+ * @since 2.7.0
  */
 @EnableAutoConfiguration
 public class DubboAutoConfigurationConsumerBootstrap {

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "1.0.0")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "${demo.service.version}")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "${demo.service.version}")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/sample-api/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/DemoService.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * Demo Service interface
  *
- * @since 1.0.0
+ * @since 2.7.0
  */
 public interface DemoService {
 

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/autoconfigure/BinderDubboConfigBinder.java
Patch:
@@ -19,7 +19,6 @@
 import org.apache.dubbo.config.AbstractConfig;
 import org.apache.dubbo.config.spring.context.properties.AbstractDubboConfigBinder;
 import org.apache.dubbo.config.spring.context.properties.DubboConfigBinder;
-
 import org.springframework.boot.context.properties.bind.BindHandler;
 import org.springframework.boot.context.properties.bind.Bindable;
 import org.springframework.boot.context.properties.bind.Binder;
@@ -36,9 +35,9 @@
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
  * see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  *
- * @since 0.1.1
+ * @since 2.7.0
  */
-public class RelaxedDubboConfigBinder extends AbstractDubboConfigBinder {
+class BinderDubboConfigBinder extends AbstractDubboConfigBinder {
 
     @Override
     public <C extends AbstractConfig> void bind(String prefix, C dubboConfig) {

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/EnvironmentUtilsTest.java
Patch:
@@ -30,7 +30,7 @@
  * {@link EnvironmentUtils} Test
  *
  * @see EnvironmentUtils
- * @since 1.0.0
+ * @since 2.7.0
  */
 public class EnvironmentUtilsTest {
 

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicator.java
Patch:
@@ -20,7 +20,6 @@
 import org.apache.dubbo.common.status.StatusChecker;
 import org.apache.dubbo.config.ProtocolConfig;
 import org.apache.dubbo.config.ProviderConfig;
-
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.health.AbstractHealthIndicator;
 import org.springframework.boot.actuate.health.Health;
@@ -38,7 +37,7 @@
  * Dubbo {@link HealthIndicator}
  *
  * @see HealthIndicator
- * @since 1.0.0
+ * @since 2.7.0
  */
 public class DubboHealthIndicator extends AbstractHealthIndicator {
 

File: dubbo-spring-boot-compatible/actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicatorProperties.java
Patch:
@@ -17,7 +17,6 @@
 package org.apache.dubbo.spring.boot.actuate.health;
 
 import org.apache.dubbo.common.status.StatusChecker;
-
 import org.springframework.boot.actuate.health.HealthIndicator;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -31,7 +30,7 @@
  * Dubbo {@link HealthIndicator} Properties
  *
  * @see HealthIndicator
- * @since 1.0.0
+ * @since 2.7.0
  */
 @ConfigurationProperties(prefix = PREFIX, ignoreUnknownFields = false)
 public class DubboHealthIndicatorProperties {

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessor.java
Patch:
@@ -19,7 +19,6 @@
 import org.apache.dubbo.config.ApplicationConfig;
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig;
 import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfigBinding;
-
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.context.ContextIdApplicationContextInitializer;
 import org.springframework.boot.env.EnvironmentPostProcessor;

File: dubbo-spring-boot-compatible/autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/EnvironmentUtils.java
Patch:
@@ -32,7 +32,7 @@
  * The utilities class for {@link Environment}
  *
  * @see Environment
- * @since 1.0.0
+ * @since 2.7.0
  */
 public abstract class EnvironmentUtils {
 

File: dubbo-spring-boot-compatible/autoconfigure/src/test/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListenerTest.java
Patch:
@@ -21,15 +21,15 @@
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
+import org.springframework.test.context.junit4.SpringRunner;
 
 /**
  * {@link WelcomeLogoApplicationListener} Test
  *
  * @see WelcomeLogoApplicationListener
- * @since 1.0.0
+ * @since 2.7.0
  */
-@RunWith(SpringJUnit4ClassRunner.class)
+@RunWith(SpringRunner.class)
 @SpringBootTest(
         classes = {WelcomeLogoApplicationListener.class}
 )

File: dubbo-spring-boot-samples/auto-configure-samples/consumer-sample/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/bootstrap/DubboAutoConfigurationConsumerBootstrap.java
Patch:
@@ -18,7 +18,6 @@
 
 import org.apache.dubbo.config.annotation.Reference;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.ApplicationRunner;
@@ -29,7 +28,7 @@
 /**
  * Dubbo Auto Configuration Consumer Bootstrap
  *
- * @since 1.0.0
+ * @since 2.7.0
  */
 @EnableAutoConfiguration
 public class DubboAutoConfigurationConsumerBootstrap {

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "1.0.0")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "${demo.service.version}")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -18,14 +18,13 @@
 
 import org.apache.dubbo.config.annotation.Service;
 import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
-
 import org.springframework.beans.factory.annotation.Value;
 
 /**
  * Default {@link DemoService}
  *
  * @see DemoService
- * @since 1.0.0
+ * @since 2.7.0
  */
 @Service(version = "${demo.service.version}")
 public class DefaultDemoService implements DemoService {

File: dubbo-spring-boot-samples/sample-api/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/DemoService.java
Patch:
@@ -19,7 +19,7 @@
 /**
  * Demo Service interface
  *
- * @since 1.0.0
+ * @since 2.7.0
  */
 public interface DemoService {
 

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpointTest.java
Patch:
@@ -65,7 +65,7 @@ public void testInvoke() {
         Assert.assertEquals(getVersion(), versions.get("dubbo"));
 
         Assert.assertEquals("https://github.com/apache/incubator-dubbo", urls.get("dubbo"));
-        Assert.assertEquals("dev@dubbo.incubator.apache.org", urls.get("mailing-list"));
+        Assert.assertEquals("dev@dubbo.apache.org", urls.get("mailing-list"));
         Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project", urls.get("github"));
         Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project/issues", urls.get("issues"));
         Assert.assertEquals("https://github.com/apache/incubator-dubbo-spring-boot-project.git", urls.get("git"));

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -111,7 +111,7 @@ public abstract class DubboUtils {
     /**
      * The google group URL of Dubbo
      */
-    public static final String DUBBO_MAILING_LIST = "dev@dubbo.incubator.apache.org";
+    public static final String DUBBO_MAILING_LIST = "dev@dubbo.apache.org";
 
     /**
      * Filters Dubbo Properties from {@link ConfigurableEnvironment}

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/util/DubboUtilsTest.java
Patch:
@@ -67,7 +67,7 @@ public void testConstants() {
 
         Assert.assertEquals("https://github.com/apache/incubator-dubbo", DUBBO_GITHUB_URL);
 
-        Assert.assertEquals("dev@dubbo.incubator.apache.org", DUBBO_MAILING_LIST);
+        Assert.assertEquals("dev@dubbo.apache.org", DUBBO_MAILING_LIST);
 
         Assert.assertFalse(DEFAULT_MULTIPLE_CONFIG_PROPERTY_VALUE);
 

File: dubbo-spring-boot-samples/auto-configure-samples/consumer-sample/src/main/java/com/alibaba/boot/dubbo/demo/consumer/bootstrap/DubboAutoConfigurationConsumerBootstrap.java
Patch:
@@ -41,9 +41,7 @@ public class DubboAutoConfigurationConsumerBootstrap {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 
     public static void main(String[] args) {

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/com/alibaba/boot/dubbo/demo/provider/service/DefaultDemoService.java
Patch:
@@ -36,6 +36,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/dubbo-registry-nacos-samples/consumer-sample/src/main/java/com/alibaba/boot/dubbo/demo/consumer/bootstrap/DubboRegistryNacosConsumerBootstrap.java
Patch:
@@ -39,9 +39,7 @@ public class DubboRegistryNacosConsumerBootstrap {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 
     public static void main(String[] args) {

File: dubbo-spring-boot-samples/dubbo-registry-nacos-samples/provider-sample/src/main/java/com/alibaba/boot/dubbo/demo/provider/service/DefaultDemoService.java
Patch:
@@ -36,6 +36,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/consumer-sample/src/main/java/com/alibaba/boot/dubbo/demo/consumer/bootstrap/DubboRegistryZooKeeperConsumerBootstrap.java
Patch:
@@ -39,9 +39,7 @@ public class DubboRegistryZooKeeperConsumerBootstrap {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 
     public static void main(String[] args) {

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/com/alibaba/boot/dubbo/demo/provider/service/DefaultDemoService.java
Patch:
@@ -36,6 +36,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-samples/externalized-configuration-samples/consumer-sample/src/main/java/com/alibaba/boot/dubbo/demo/consumer/bootstrap/DubboExternalizedConfigurationConsumerBootstrap.java
Patch:
@@ -39,9 +39,7 @@ public class DubboExternalizedConfigurationConsumerBootstrap {
 
     @Bean
     public ApplicationRunner runner() {
-        return args -> {
-            logger.info(demoService.sayHello("mercyblitz"));
-        };
+        return args -> logger.info(demoService.sayHello("mercyblitz"));
     }
 
     public static void main(String[] args) {

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/com/alibaba/boot/dubbo/demo/provider/service/DefaultDemoService.java
Patch:
@@ -36,6 +36,7 @@ public class DefaultDemoService implements DemoService {
     @Value("${dubbo.application.name}")
     private String serviceName;
 
+    @Override
     public String sayHello(String name) {
         return String.format("[%s] : Hello, %s", serviceName, name);
     }

File: dubbo-spring-boot-actuator/src/main/java/org/apache/dubbo/spring/boot/actuate/endpoint/DubboPropertiesEndpoint.java
Patch:
@@ -14,19 +14,18 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.actuate.endpoint;
+package org.apache.dubbo.spring.boot.actuate.endpoint;
 
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
 
 import java.util.SortedMap;
 
-import static com.alibaba.boot.dubbo.util.DubboUtils.filterDubboProperties;
+import static org.apache.dubbo.spring.boot.util.DubboUtils.filterDubboProperties;
 
 /**
  * Dubbo Properties {@link Endpoint}
  *
- *
  * @since 1.0.0
  */
 @Endpoint(id = "dubboproperties")

File: dubbo-spring-boot-actuator/src/test/java/org/apache/dubbo/spring/boot/actuate/health/DubboHealthIndicatorTest.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.actuate.health;
+package org.apache.dubbo.spring.boot.actuate.health;
 
-import com.alibaba.dubbo.config.spring.context.annotation.EnableDubboConfig;
+import org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -34,7 +34,6 @@
 /**
  * {@link DubboHealthIndicator} Test
  *
- *
  * @see DubboHealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/DubboUtils.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.util;
+package org.apache.dubbo.spring.boot.util;
 
 import org.springframework.core.env.ConfigurableEnvironment;
 

File: dubbo-spring-boot-autoconfigure/src/main/java/org/apache/dubbo/spring/boot/util/EnvironmentUtils.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.util;
+package org.apache.dubbo.spring.boot.util;
 
 import org.springframework.core.env.CompositePropertySource;
 import org.springframework.core.env.ConfigurableEnvironment;

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/context/event/AwaitingNonWebApplicationListenerTest.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.context.event;
+package org.apache.dubbo.spring.boot.context.event;
 
 import org.junit.Assert;
 import org.junit.Test;

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/context/event/OverrideDubboConfigApplicationListenerDisableTest.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.context.event;
+package org.apache.dubbo.spring.boot.context.event;
 
-import com.alibaba.dubbo.common.utils.ConfigUtils;
+import org.apache.dubbo.common.utils.ConfigUtils;
 
 import org.junit.Assert;
 import org.junit.BeforeClass;
@@ -31,7 +31,6 @@
 /**
  * {@link OverrideDubboConfigApplicationListener} Test
  *
- *
  * @see OverrideDubboConfigApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/context/event/WelcomeLogoApplicationListenerTest.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.context.event;
+package org.apache.dubbo.spring.boot.context.event;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -26,7 +26,6 @@
 /**
  * {@link WelcomeLogoApplicationListener} Test
  *
- *
  * @see WelcomeLogoApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/env/DubboDefaultPropertiesEnvironmentPostProcessorTest.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.env;
+package org.apache.dubbo.spring.boot.env;
 
 import org.junit.Assert;
 import org.junit.Test;

File: dubbo-spring-boot-autoconfigure/src/test/java/org/apache/dubbo/spring/boot/util/EnvironmentUtilsTest.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.util;
+package org.apache.dubbo.spring.boot.util;
 
 import org.junit.Assert;
 import org.junit.Test;
@@ -29,7 +29,6 @@
 /**
  * {@link EnvironmentUtils} Test
  *
- *
  * @see EnvironmentUtils
  * @since 1.0.0
  */

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/bootstrap/DubboAutoConfigurationProviderBootstrap.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
 
-import com.alibaba.boot.dubbo.demo.provider.service.DefaultDemoService;
+import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
 
 import org.springframework.boot.WebApplicationType;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;

File: dubbo-spring-boot-samples/auto-configure-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.service;
+package org.apache.dubbo.spring.boot.demo.provider.service;
 
-import com.alibaba.boot.dubbo.demo.consumer.DemoService;
-import com.alibaba.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
 
 import org.springframework.beans.factory.annotation.Value;
 

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/bootstrap/DubboRegistryZooKeeperProviderBootstrap.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
 
-import com.alibaba.boot.dubbo.demo.provider.service.DefaultDemoService;
+import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
 
 import org.springframework.boot.WebApplicationType;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;

File: dubbo-spring-boot-samples/dubbo-registry-zookeeper-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.service;
+package org.apache.dubbo.spring.boot.demo.provider.service;
 
-import com.alibaba.boot.dubbo.demo.consumer.DemoService;
-import com.alibaba.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
 
 import org.springframework.beans.factory.annotation.Value;
 

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/bootstrap/DubboExternalizedConfigurationProviderBootstrap.java
Patch:
@@ -14,9 +14,9 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.bootstrap;
+package org.apache.dubbo.spring.boot.demo.provider.bootstrap;
 
-import com.alibaba.boot.dubbo.demo.provider.service.DefaultDemoService;
+import org.apache.dubbo.spring.boot.demo.provider.service.DefaultDemoService;
 
 import org.springframework.boot.WebApplicationType;
 import org.springframework.boot.autoconfigure.EnableAutoConfiguration;

File: dubbo-spring-boot-samples/externalized-configuration-samples/provider-sample/src/main/java/org/apache/dubbo/spring/boot/demo/provider/service/DefaultDemoService.java
Patch:
@@ -14,10 +14,10 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.provider.service;
+package org.apache.dubbo.spring.boot.demo.provider.service;
 
-import com.alibaba.boot.dubbo.demo.consumer.DemoService;
-import com.alibaba.dubbo.config.annotation.Service;
+import org.apache.dubbo.config.annotation.Service;
+import org.apache.dubbo.spring.boot.demo.consumer.DemoService;
 
 import org.springframework.beans.factory.annotation.Value;
 

File: dubbo-spring-boot-samples/sample-api/src/main/java/org/apache/dubbo/spring/boot/demo/consumer/DemoService.java
Patch:
@@ -14,7 +14,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.alibaba.boot.dubbo.demo.consumer;
+package org.apache.dubbo.spring.boot.demo.consumer;
 
 /**
  * Demo Service interface

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -153,7 +153,7 @@ public class DubboAutoConfigurationOnMultipleConfigTest {
     public void testMultipleDubboConfigBindingProperties() {
 
 
-        Assert.assertEquals(2, applications.size());
+        Assert.assertEquals(3, applications.size());
 
         Assert.assertEquals(1, modules.size());
 
@@ -177,7 +177,7 @@ public void testApplicationContext() {
          */
         Map<String, ApplicationConfig> applications = beansOfTypeIncludingAncestors(applicationContext, ApplicationConfig.class);
 
-        Assert.assertEquals(2, applications.size());
+        Assert.assertEquals(3, applications.size());
 
         /**
          * Multiple {@link ModuleConfig}

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfigurationOnSingleConfigTest.java
Patch:
@@ -39,7 +39,6 @@
 /**
  * {@link DubboAutoConfiguration} Test On single Dubbo Configuration
  *
- *
  * @since 1.0.0
  */
 @RunWith(SpringJUnit4ClassRunner.class)
@@ -151,7 +150,7 @@ public void testConsumerConfig() {
 
     @Test
     public void testMultipleDubboConfigConfiguration() {
-        Assert.assertNull(multipleDubboConfigConfiguration);
+        Assert.assertNotNull(multipleDubboConfigConfiguration);
     }
 
     @Test
@@ -161,7 +160,7 @@ public void testSingleDubboConfigConfiguration() {
 
     @Test
     public void testServiceAnnotationBeanPostProcessor() {
-        Assert.assertNull(multipleDubboConfigConfiguration);
+        Assert.assertNotNull(multipleDubboConfigConfiguration);
     }
 
 }

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -153,7 +153,7 @@ public class DubboAutoConfigurationOnMultipleConfigTest {
     public void testMultipleDubboConfigBindingProperties() {
 
 
-        Assert.assertEquals(2, applications.size());
+        Assert.assertEquals(3, applications.size());
 
         Assert.assertEquals(1, modules.size());
 
@@ -177,7 +177,7 @@ public void testApplicationContext() {
          */
         Map<String, ApplicationConfig> applications = beansOfTypeIncludingAncestors(applicationContext, ApplicationConfig.class);
 
-        Assert.assertEquals(2, applications.size());
+        Assert.assertEquals(3, applications.size());
 
         /**
          * Multiple {@link ModuleConfig}

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfigurationOnSingleConfigTest.java
Patch:
@@ -39,7 +39,6 @@
 /**
  * {@link DubboAutoConfiguration} Test On single Dubbo Configuration
  *
- *
  * @since 1.0.0
  */
 @RunWith(SpringJUnit4ClassRunner.class)
@@ -151,7 +150,7 @@ public void testConsumerConfig() {
 
     @Test
     public void testMultipleDubboConfigConfiguration() {
-        Assert.assertNull(multipleDubboConfigConfiguration);
+        Assert.assertNotNull(multipleDubboConfigConfiguration);
     }
 
     @Test
@@ -161,7 +160,7 @@ public void testSingleDubboConfigConfiguration() {
 
     @Test
     public void testServiceAnnotationBeanPostProcessor() {
-        Assert.assertNull(multipleDubboConfigConfiguration);
+        Assert.assertNotNull(multipleDubboConfigConfiguration);
     }
 
 }

File: dubbo-spring-boot-samples/sample-api/src/main/java/com/alibaba/boot/dubbo/demo/consumer/DemoService.java
Patch:
@@ -1,4 +1,4 @@
-package com.alibaba.boot.dubbo.demo.consumer;/*
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+package com.alibaba.boot.dubbo.demo.consumer;
 
 /**
  * Demo Service interface
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
 public interface DemoService {

File: dubbo-spring-boot-samples/sample-api/src/main/java/com/alibaba/boot/dubbo/demo/consumer/DemoService.java
Patch:
@@ -1,4 +1,4 @@
-package com.alibaba.boot.dubbo.demo.consumer;/*
+/*
  * Licensed to the Apache Software Foundation (ASF) under one or more
  * contributor license agreements.  See the NOTICE file distributed with
  * this work for additional information regarding copyright ownership.
@@ -14,11 +14,11 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+package com.alibaba.boot.dubbo.demo.consumer;
 
 /**
  * Demo Service interface
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
 public interface DemoService {

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/autoconfigure/DubboHealthIndicatorAutoConfiguration.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.boot.dubbo.actuate.health.DubboHealthIndicator;
 import com.alibaba.boot.dubbo.actuate.health.DubboHealthIndicatorProperties;
 import com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration;
+
 import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration;
 import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
 import org.springframework.boot.actuate.health.HealthIndicator;
@@ -33,7 +34,7 @@
 /**
  * Dubbo {@link DubboHealthIndicator} Auto Configuration
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/AbstractDubboEndpoint.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.spring.ServiceBean;
 import com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
+
 import org.springframework.beans.BeansException;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.context.ApplicationContext;
@@ -45,7 +46,7 @@
 /**
  * Abstract Dubbo {@link Endpoint @Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 public abstract class AbstractDubboEndpoint implements ApplicationContextAware, EnvironmentAware {

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboConfigsMetadataEndpoint.java
Patch:
@@ -40,10 +40,10 @@
 /**
  * Dubbo Configs Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
-@Endpoint(id = "dubboConfigs")
+@Endpoint(id = "dubboconfigs")
 public class DubboConfigsMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpoint.java
Patch:
@@ -34,7 +34,7 @@
 /**
  * Actuator {@link Endpoint} to expose Dubbo Meta Data
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see Endpoint
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboPropertiesEndpoint.java
Patch:
@@ -26,10 +26,10 @@
 /**
  * Dubbo Properties {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 1.0.0
  */
-@Endpoint(id = "dubboProperties")
+@Endpoint(id = "dubboproperties")
 public class DubboPropertiesEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboReferencesMetadataEndpoint.java
Patch:
@@ -30,10 +30,10 @@
 /**
  * Dubbo {@link Reference} Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 1.0.0
  */
-@Endpoint(id = "dubboReferences")
+@Endpoint(id = "dubboreferences")
 public class DubboReferencesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboServicesMetadataEndpoint.java
Patch:
@@ -28,10 +28,10 @@
 /**
  * Dubbo {@link Service} Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
-@Endpoint(id = "dubboServices")
+@Endpoint(id = "dubboservices")
 public class DubboServicesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -32,10 +32,9 @@
 /**
  * Dubbo Shutdown
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.2.0
  */
-@Endpoint(id = "dubboShutdown")
+@Endpoint(id = "dubboshutdown")
 public class DubboShutdownEndpoint extends AbstractDubboEndpoint {
 
 

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicator.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.dubbo.common.status.StatusChecker;
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.ProviderConfig;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.health.AbstractHealthIndicator;
 import org.springframework.boot.actuate.health.Health;
@@ -37,7 +38,7 @@
 /**
  * Dubbo {@link HealthIndicator}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicatorProperties.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * Dubbo {@link HealthIndicator} Properties
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpointTest.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * {@link DubboEndpoint} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboEndpoint
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicatorTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.actuate.health;
 
 import com.alibaba.dubbo.config.spring.context.annotation.EnableDubboConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -33,7 +34,7 @@
 /**
  * {@link DubboHealthIndicator} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboHealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/RelaxedDubboConfigBinder.java
Patch:
@@ -36,7 +36,6 @@
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
  * see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.1.1
  */
 public class RelaxedDubboConfigBinder extends AbstractDubboConfigBinder {

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -35,7 +35,6 @@
 /**
  * Dubbo Welcome Logo {@link ApplicationListener}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -26,7 +26,6 @@
 /**
  * The utilities class for Dubbo
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
 public abstract class DubboUtils {
@@ -130,7 +129,7 @@ public static SortedMap<String, Object> filterDubboProperties(ConfigurableEnviro
             String propertyName = entry.getKey();
 
             if (propertyName.startsWith(DUBBO_PREFIX + PROPERTY_NAME_SEPARATOR)
-                && entry.getValue() != null) {
+                    && entry.getValue() != null) {
                 dubboProperties.put(propertyName, entry.getValue().toString());
             }
 

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/RelaxedDubboConfigBinderTest.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.ApplicationConfig;
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.RegistryConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -30,7 +31,7 @@
 /**
  * {@link RelaxedDubboConfigBinder} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.1.1
  */
 @RunWith(SpringJUnit4ClassRunner.class)

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/OverrideDubboConfigApplicationListenerDisableTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.context.event;
 
 import com.alibaba.dubbo.common.utils.ConfigUtils;
+
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -30,7 +31,7 @@
 /**
  * {@link OverrideDubboConfigApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see OverrideDubboConfigApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/OverrideDubboConfigApplicationListenerTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.context.event;
 
 import com.alibaba.dubbo.common.utils.ConfigUtils;
+
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -30,7 +31,7 @@
 /**
  * {@link OverrideDubboConfigApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see OverrideDubboConfigApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListenerTest.java
Patch:
@@ -26,7 +26,7 @@
 /**
  * {@link WelcomeLogoApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see WelcomeLogoApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/util/DubboUtilsTest.java
Patch:
@@ -40,7 +40,7 @@
 /**
  * {@link DubboUtils} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboUtils
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/util/EnvironmentUtilsTest.java
Patch:
@@ -29,7 +29,7 @@
 /**
  * {@link EnvironmentUtils} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see EnvironmentUtils
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboConfigsMetadataEndpoint.java
Patch:
@@ -43,7 +43,7 @@
  *
  * @since 0.2.0
  */
-@Endpoint(id = "dubboConfigs")
+@Endpoint(id = "dubboconfigs")
 public class DubboConfigsMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboPropertiesEndpoint.java
Patch:
@@ -29,7 +29,7 @@
  *
  * @since 1.0.0
  */
-@Endpoint(id = "dubboProperties")
+@Endpoint(id = "dubboproperties")
 public class DubboPropertiesEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboReferencesMetadataEndpoint.java
Patch:
@@ -33,7 +33,7 @@
  *
  * @since 1.0.0
  */
-@Endpoint(id = "dubboReferences")
+@Endpoint(id = "dubboreferences")
 public class DubboReferencesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboServicesMetadataEndpoint.java
Patch:
@@ -31,7 +31,7 @@
  *
  * @since 0.2.0
  */
-@Endpoint(id = "dubboServices")
+@Endpoint(id = "dubboservices")
 public class DubboServicesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -32,10 +32,9 @@
 /**
  * Dubbo Shutdown
  *
- *
  * @since 0.2.0
  */
-@Endpoint(id = "dubboShutdown")
+@Endpoint(id = "dubboshutdown")
 public class DubboShutdownEndpoint extends AbstractDubboEndpoint {
 
 

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/autoconfigure/DubboHealthIndicatorAutoConfiguration.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.boot.dubbo.actuate.health.DubboHealthIndicator;
 import com.alibaba.boot.dubbo.actuate.health.DubboHealthIndicatorProperties;
 import com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration;
+
 import org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration;
 import org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator;
 import org.springframework.boot.actuate.health.HealthIndicator;
@@ -33,7 +34,7 @@
 /**
  * Dubbo {@link DubboHealthIndicator} Auto Configuration
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/AbstractDubboEndpoint.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.spring.ServiceBean;
 import com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
+
 import org.springframework.beans.BeansException;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.context.ApplicationContext;
@@ -45,7 +46,7 @@
 /**
  * Abstract Dubbo {@link Endpoint @Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 public abstract class AbstractDubboEndpoint implements ApplicationContextAware, EnvironmentAware {

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboConfigsMetadataEndpoint.java
Patch:
@@ -40,7 +40,7 @@
 /**
  * Dubbo Configs Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 @Endpoint(id = "dubboConfigs")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpoint.java
Patch:
@@ -34,7 +34,7 @@
 /**
  * Actuator {@link Endpoint} to expose Dubbo Meta Data
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see Endpoint
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboPropertiesEndpoint.java
Patch:
@@ -26,7 +26,7 @@
 /**
  * Dubbo Properties {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 1.0.0
  */
 @Endpoint(id = "dubboProperties")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboReferencesMetadataEndpoint.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * Dubbo {@link Reference} Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 1.0.0
  */
 @Endpoint(id = "dubboReferences")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboServicesMetadataEndpoint.java
Patch:
@@ -28,7 +28,7 @@
 /**
  * Dubbo {@link Service} Metadata {@link Endpoint}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 @Endpoint(id = "dubboServices")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * Dubbo Shutdown
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 @Endpoint(id = "dubboShutdown")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicator.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.dubbo.common.status.StatusChecker;
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.ProviderConfig;
+
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.actuate.health.AbstractHealthIndicator;
 import org.springframework.boot.actuate.health.Health;
@@ -37,7 +38,7 @@
 /**
  * Dubbo {@link HealthIndicator}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicatorProperties.java
Patch:
@@ -30,7 +30,7 @@
 /**
  * Dubbo {@link HealthIndicator} Properties
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see HealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpointTest.java
Patch:
@@ -32,7 +32,7 @@
 /**
  * {@link DubboEndpoint} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboEndpoint
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpointsAutoConfigurationTest.java
Patch:
@@ -33,7 +33,7 @@
 /**
  * {@link DubboEndpointsAutoConfiguration} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.2.0
  */
 @RunWith(SpringRunner.class)

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicatorTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.actuate.health;
 
 import com.alibaba.dubbo.config.spring.context.annotation.EnableDubboConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -33,7 +34,7 @@
 /**
  * {@link DubboHealthIndicator} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboHealthIndicator
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/RelaxedDubboConfigBinder.java
Patch:
@@ -36,7 +36,6 @@
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
  * see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.1.1
  */
 public class RelaxedDubboConfigBinder extends AbstractDubboConfigBinder {

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -35,7 +35,6 @@
 /**
  * Dubbo Welcome Logo {@link ApplicationListener}
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -26,7 +26,6 @@
 /**
  * The utilities class for Dubbo
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
 public abstract class DubboUtils {
@@ -130,7 +129,7 @@ public static SortedMap<String, Object> filterDubboProperties(ConfigurableEnviro
             String propertyName = entry.getKey();
 
             if (propertyName.startsWith(DUBBO_PREFIX + PROPERTY_NAME_SEPARATOR)
-                && entry.getValue() != null) {
+                    && entry.getValue() != null) {
                 dubboProperties.put(propertyName, entry.getValue().toString());
             }
 

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/RelaxedDubboConfigBinderTest.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.ApplicationConfig;
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.RegistryConfig;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -30,7 +31,7 @@
 /**
  * {@link RelaxedDubboConfigBinder} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @since 0.1.1
  */
 @RunWith(SpringJUnit4ClassRunner.class)

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/OverrideDubboConfigApplicationListenerDisableTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.context.event;
 
 import com.alibaba.dubbo.common.utils.ConfigUtils;
+
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -30,7 +31,7 @@
 /**
  * {@link OverrideDubboConfigApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see OverrideDubboConfigApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/OverrideDubboConfigApplicationListenerTest.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.context.event;
 
 import com.alibaba.dubbo.common.utils.ConfigUtils;
+
 import org.junit.Assert;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -30,7 +31,7 @@
 /**
  * {@link OverrideDubboConfigApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see OverrideDubboConfigApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListenerTest.java
Patch:
@@ -26,7 +26,7 @@
 /**
  * {@link WelcomeLogoApplicationListener} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see WelcomeLogoApplicationListener
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/util/DubboUtilsTest.java
Patch:
@@ -40,7 +40,7 @@
 /**
  * {@link DubboUtils} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see DubboUtils
  * @since 1.0.0
  */

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/util/EnvironmentUtilsTest.java
Patch:
@@ -29,7 +29,7 @@
 /**
  * {@link EnvironmentUtils} Test
  *
- * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
+ *
  * @see EnvironmentUtils
  * @since 1.0.0
  */

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboPropertiesEndpoint.java
Patch:
@@ -21,7 +21,6 @@
 
 import java.util.SortedMap;
 
-import static com.alibaba.boot.dubbo.actuate.endpoint.DubboEndpoint.DUBBO_PROPERTIES_ENDPOINT_ID;
 import static com.alibaba.boot.dubbo.util.DubboUtils.filterDubboProperties;
 
 /**
@@ -30,7 +29,7 @@
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
-@Endpoint(id = DUBBO_PROPERTIES_ENDPOINT_ID)
+@Endpoint(id = "dubboProperties")
 public class DubboPropertiesEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboReferencesMetadataEndpoint.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.annotation.Reference;
 import com.alibaba.dubbo.config.spring.ReferenceBean;
 import com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
+
 import org.springframework.beans.factory.annotation.InjectionMetadata;
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
@@ -32,7 +33,7 @@
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 1.0.0
  */
-@Endpoint(id = "dubbo-references")
+@Endpoint(id = "dubboReferences")
 public class DubboReferencesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboServicesMetadataEndpoint.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.alibaba.dubbo.config.annotation.Service;
 import com.alibaba.dubbo.config.spring.ServiceBean;
+
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.ReadOperation;
 
@@ -30,7 +31,7 @@
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.2.0
  */
-@Endpoint(id = "dubbo-services")
+@Endpoint(id = "dubboServices")
 public class DubboServicesMetadataEndpoint extends AbstractDubboEndpoint {
 
     @ReadOperation

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -19,6 +19,7 @@
 import com.alibaba.dubbo.config.ProtocolConfig;
 import com.alibaba.dubbo.config.spring.ServiceBean;
 import com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
+
 import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.boot.actuate.endpoint.annotation.WriteOperation;
 
@@ -34,7 +35,7 @@
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.2.0
  */
-@Endpoint(id = "dubbo-shutdown")
+@Endpoint(id = "dubboShutdown")
 public class DubboShutdownEndpoint extends AbstractDubboEndpoint {
 
 

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/health/DubboHealthIndicatorProperties.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.actuate.health;
 
 import com.alibaba.dubbo.common.status.StatusChecker;
+
 import org.springframework.boot.actuate.health.HealthIndicator;
 import org.springframework.boot.context.properties.ConfigurationProperties;
 
@@ -53,7 +54,6 @@ public void setStatus(Status status) {
 
     /**
      * The nested class for {@link StatusChecker}'s names
-     * <p>
      * <pre>
      * registry=com.alibaba.dubbo.registry.status.RegistryStatusChecker
      * spring=com.alibaba.dubbo.config.spring.status.SpringStatusChecker

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboEndpointTest.java
Patch:
@@ -17,12 +17,12 @@
 package com.alibaba.boot.dubbo.actuate.endpoint;
 
 import com.alibaba.boot.dubbo.util.DubboUtils;
+
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.test.context.SpringBootTest;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
 import org.springframework.test.context.junit4.SpringRunner;
 
 import java.util.Map;

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -16,11 +16,12 @@
  */
 package com.alibaba.boot.dubbo.util;
 
+import org.springframework.core.env.ConfigurableEnvironment;
+
 import java.util.Collections;
 import java.util.Map;
 import java.util.SortedMap;
 import java.util.TreeMap;
-import org.springframework.core.env.ConfigurableEnvironment;
 
 /**
  * The utilities class for Dubbo
@@ -61,7 +62,7 @@ public abstract class DubboUtils {
      * <p>
      * The default value is empty set.
      */
-    public static final String BASE_PACKAGES_PROPERTY_NAME = DUBBO_SCAN_PREFIX + PROPERTY_NAME_SEPARATOR + "basePackages";
+    public static final String BASE_PACKAGES_PROPERTY_NAME = DUBBO_SCAN_PREFIX + PROPERTY_NAME_SEPARATOR + "base-packages";
 
     /**
      * The property name of multiple properties binding from externalized configuration

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/AbstractDubboEndpoint.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.dubbo.config.spring.ServiceBean;
 import com.alibaba.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor;
 import org.springframework.beans.BeansException;
+import org.springframework.boot.actuate.endpoint.annotation.Endpoint;
 import org.springframework.context.ApplicationContext;
 import org.springframework.context.ApplicationContextAware;
 import org.springframework.context.EnvironmentAware;
@@ -42,7 +43,7 @@
 import static org.springframework.util.ClassUtils.isPrimitiveOrWrapper;
 
 /**
- * Abstract Dubbo {@link @Endpoint}
+ * Abstract Dubbo {@link Endpoint @Endpoint}
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @since 0.2.0

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfiguration.java
Patch:
@@ -70,9 +70,9 @@ protected static class SingleDubboConfigConfiguration {
     }
 
     /**
-     * Multiple Dubbo Config Configuration , equals {@link EnableDubboConfig#multiple()} == <code>true</code>
+     * Multiple Dubbo Config Configuration , equals @EnableDubboConfig.multiple() == <code>true</code>
      *
-     * @see EnableDubboConfig#multiple()
+     * @see EnableDubboConfig
      * @see DubboConfigConfiguration.Multiple
      */
     @ConditionalOnProperty(name = MULTIPLE_CONFIG_PROPERTY_NAME, havingValue = "true")
@@ -83,6 +83,7 @@ protected static class MultipleDubboConfigConfiguration {
     /**
      * Creates {@link ServiceAnnotationBeanPostProcessor} Bean
      *
+     * @param environment {@link Environment} Bean
      * @return {@link ServiceAnnotationBeanPostProcessor}
      */
     @ConditionalOnProperty(name = BASE_PACKAGES_PROPERTY_NAME)

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/RelaxedDubboConfigBinder.java
Patch:
@@ -31,10 +31,9 @@
 
 /**
  * Spring Boot Relaxed {@link DubboConfigBinder} implementation
+ * see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @revision 0.2.0
- * @see org.springframework.boot.context.properties.ConfigurationPropertiesBinder
  * @since 0.1.1
  */
 public class RelaxedDubboConfigBinder extends AbstractDubboConfigBinder {

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/context/event/OverrideDubboConfigApplicationListener.java
Patch:
@@ -17,6 +17,7 @@
 package com.alibaba.boot.dubbo.context.event;
 
 import com.alibaba.dubbo.common.utils.ConfigUtils;
+import com.alibaba.dubbo.config.AbstractConfig;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent;
@@ -32,7 +33,7 @@
 /**
  * {@link ApplicationListener} to override the dubbo properties from {@link Environment}into
  * {@link ConfigUtils#getProperties() Dubbo Config}.
- * {@ConfigUtils Dubbo Config} on {@link ApplicationEnvironmentPreparedEvent}.
+ * {@link AbstractConfig Dubbo Config} on {@link ApplicationEnvironmentPreparedEvent}.
  * <p>
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -31,7 +31,7 @@
  * Dubbo Welcome Logo {@link ApplicationListener}
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @see
+ * @see ApplicationListener
  * @since 1.0.0
  */
 @Order(LoggingApplicationListener.DEFAULT_ORDER + 1)

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -27,7 +27,6 @@
  * The utilities class for Dubbo
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @see
  * @since 1.0.0
  */
 public abstract class DubboUtils {

File: dubbo-spring-boot-samples/dubbo-spring-boot-sample-consumer/src/main/java/com/alibaba/boot/dubbo/demo/consumer/controller/DemoConsumerController.java
Patch:
@@ -25,7 +25,7 @@
  * Demo Consumer Controller (REST)
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @see
+ * @see RestController
  * @since 1.0.0
  */
 @RestController

File: dubbo-spring-boot-autoconfigure/src/test/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfigurationOnMultipleConfigTest.java
Patch:
@@ -266,10 +266,9 @@ public void testMultipleDubboConfigConfiguration() {
         Assert.assertNotNull(multipleDubboConfigConfiguration);
     }
 
-    @Ignore
     @Test
     public void testSingleDubboConfigConfiguration() {
-        Assert.assertNull(singleDubboConfigConfiguration);
+        Assert.assertNotNull(singleDubboConfigConfiguration);
     }
 
 

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfiguration.java
Patch:
@@ -65,7 +65,6 @@ public class DubboAutoConfiguration {
      * @see EnableDubboConfig
      * @see DubboConfigConfiguration.Single
      */
-    @ConditionalOnProperty(name = MULTIPLE_CONFIG_PROPERTY_NAME, havingValue = "false", matchIfMissing = true)
     @EnableDubboConfig
     protected static class SingleDubboConfigConfiguration {
     }

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfiguration.java
Patch:
@@ -65,7 +65,6 @@ public class DubboAutoConfiguration {
      * @see EnableDubboConfig
      * @see DubboConfigConfiguration.Single
      */
-    @ConditionalOnProperty(name = MULTIPLE_CONFIG_PROPERTY_NAME, havingValue = "false", matchIfMissing = true)
     @EnableDubboConfig
     protected static class SingleDubboConfigConfiguration {
     }

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/context/event/WelcomeLogoApplicationListener.java
Patch:
@@ -65,7 +65,6 @@ String buildBannerText() {
         bannerTextBuilder
                 .append(LINE_SEPARATOR)
                 .append(LINE_SEPARATOR)
-                .append(dubbo)
                 .append(" :: Dubbo Spring Boot (v").append(Version.getVersion(getClass(), "1.0.0")).append(") : ")
                 .append(DUBBO_SPRING_BOOT_GITHUB_URL)
                 .append(LINE_SEPARATOR)

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfiguration.java
Patch:
@@ -91,7 +91,7 @@ protected static class MultipleDubboConfigConfiguration {
     @ConditionalOnProperty(name = BASE_PACKAGES_PROPERTY_NAME)
     @Autowired
     @Bean
-    public ServiceAnnotationBeanPostProcessor serviceAnnotationBeanPostProcessor(Environment environment) {
+    public static ServiceAnnotationBeanPostProcessor serviceAnnotationBeanPostProcessor(Environment environment) {
         RelaxedPropertyResolver resolver = new RelaxedPropertyResolver(environment);
         Set<String> packagesToScan = resolver.getProperty(BASE_PACKAGES_PROPERTY_NAME, Set.class, emptySet());
         return new ServiceAnnotationBeanPostProcessor(packagesToScan);

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/DubboAutoConfiguration.java
Patch:
@@ -91,7 +91,7 @@ protected static class MultipleDubboConfigConfiguration {
     @ConditionalOnProperty(name = BASE_PACKAGES_PROPERTY_NAME)
     @Autowired
     @Bean
-    public ServiceAnnotationBeanPostProcessor serviceAnnotationBeanPostProcessor(Environment environment) {
+    public static ServiceAnnotationBeanPostProcessor serviceAnnotationBeanPostProcessor(Environment environment) {
         RelaxedPropertyResolver resolver = new RelaxedPropertyResolver(environment);
         Set<String> packagesToScan = resolver.getProperty(BASE_PACKAGES_PROPERTY_NAME, Set.class, emptySet());
         return new ServiceAnnotationBeanPostProcessor(packagesToScan);

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/endpoint/DubboShutdownEndpoint.java
Patch:
@@ -76,7 +76,7 @@ public Map<String, Object> shutdown() throws Exception {
         shutdownData.put("shutdown.count", shutdownCountData);
 
 
-        return shutdownCountData;
+        return shutdownData;
     }
 
 }

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/autoconfigure/DubboEndpointAutoConfiguration.java
Patch:
@@ -32,7 +32,7 @@
  * @since 1.0.0
  */
 @Configuration
-@ConditionalOnClass(Service.class)
+@ConditionalOnClass({Service.class, Endpoint.class})
 public class DubboEndpointAutoConfiguration {
 
     @Bean

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/autoconfigure/DubboHealthIndicatorAutoConfiguration.java
Patch:
@@ -24,6 +24,7 @@
 import org.springframework.boot.actuate.health.HealthIndicator;
 import org.springframework.boot.autoconfigure.AutoConfigureAfter;
 import org.springframework.boot.autoconfigure.AutoConfigureBefore;
+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
 import org.springframework.boot.context.properties.EnableConfigurationProperties;
 import org.springframework.context.annotation.Bean;
@@ -37,6 +38,7 @@
  * @since 1.0.0
  */
 @Configuration
+@ConditionalOnClass({HealthIndicator.class})
 @AutoConfigureBefore({EndpointAutoConfiguration.class})
 @AutoConfigureAfter(DubboAutoConfiguration.class)
 @ConditionalOnEnabledHealthIndicator("dubbo")

File: dubbo-spring-boot-actuator/src/main/java/com/alibaba/boot/dubbo/actuate/autoconfigure/DubboMvcEndpointManagementContextConfiguration.java
Patch:
@@ -20,6 +20,7 @@
 import com.alibaba.boot.dubbo.actuate.endpoint.mvc.DubboMvcEndpoint;
 import com.alibaba.dubbo.config.annotation.Service;
 import org.springframework.boot.actuate.autoconfigure.ManagementContextConfiguration;
+import org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter;
 import org.springframework.boot.actuate.endpoint.mvc.MvcEndpoint;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;
 import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;
@@ -34,7 +35,7 @@
  * @since 1.0.0
  */
 @ManagementContextConfiguration
-@ConditionalOnClass(Service.class)
+@ConditionalOnClass({Service.class, EndpointMvcAdapter.class})
 @ConditionalOnWebApplication
 public class DubboMvcEndpointManagementContextConfiguration {
 

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/mvc/DubboMvcEndpointTest.java
Patch:
@@ -18,7 +18,6 @@
 
 import com.alibaba.boot.dubbo.actuate.endpoint.DubboEndpoint;
 import com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration;
-import com.alibaba.boot.dubbo.demo.consumer.DemoService;
 import com.alibaba.dubbo.config.annotation.Service;
 import org.junit.Assert;
 import org.junit.Test;

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/MultipleDubboConfigBindingProperties.java
Patch:
@@ -28,7 +28,7 @@
 
 
 /**
- * Multiple Dubbo Config Binding{@link ConfigurationProperties Properties} with prefix "dubbo."
+ * Multiple Dubbo Config Binding {@link ConfigurationProperties Properties} with prefix "dubbo."
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ConfigurationProperties

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/SingleDubboConfigBindingProperties.java
Patch:
@@ -25,7 +25,7 @@
 
 
 /**
- * Single Dubbo Config Binding{@link ConfigurationProperties Properties} with prefix "dubbo."
+ * Single Dubbo Config Binding {@link ConfigurationProperties Properties} with prefix "dubbo."
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ConfigurationProperties

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -35,7 +35,7 @@ public abstract class DubboUtils {
     /**
      * line separator
      */
-    public final static String LINE_SEPARATOR = System.getProperty("line.separator");
+    public static final String LINE_SEPARATOR = System.getProperty("line.separator");
 
 
     /**

File: dubbo-spring-boot-actuator/src/test/java/com/alibaba/boot/dubbo/actuate/endpoint/mvc/DubboMvcEndpointTest.java
Patch:
@@ -18,8 +18,8 @@
 
 import com.alibaba.boot.dubbo.actuate.endpoint.DubboEndpoint;
 import com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration;
+import com.alibaba.boot.dubbo.demo.consumer.DemoService;
 import com.alibaba.dubbo.config.annotation.Service;
-import com.alibaba.dubbo.demo.DemoService;
 import org.junit.Assert;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -137,7 +137,7 @@ public void testServices() {
 
         Assert.assertEquals(1, services.size());
 
-        Map<String, Object> demoServiceMeta = services.get("ServiceBean@com.alibaba.dubbo.demo.DemoService#dubboMvcEndpointTest.DefaultDemoService");
+        Map<String, Object> demoServiceMeta = services.get("ServiceBean@com.alibaba.boot.dubbo.demo.consumer.DemoService#dubboMvcEndpointTest.DefaultDemoService");
 
         Assert.assertEquals("1.0.0", demoServiceMeta.get("version"));
 

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/MultipleDubboConfigBindingProperties.java
Patch:
@@ -28,7 +28,7 @@
 
 
 /**
- * Multiple Dubbo Config Binding{@link ConfigurationProperties Properties} with prefix "dubbo."
+ * Multiple Dubbo Config Binding {@link ConfigurationProperties Properties} with prefix "dubbo."
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ConfigurationProperties

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/autoconfigure/SingleDubboConfigBindingProperties.java
Patch:
@@ -25,7 +25,7 @@
 
 
 /**
- * Single Dubbo Config Binding{@link ConfigurationProperties Properties} with prefix "dubbo."
+ * Single Dubbo Config Binding {@link ConfigurationProperties Properties} with prefix "dubbo."
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
  * @see ConfigurationProperties

File: dubbo-spring-boot-autoconfigure/src/main/java/com/alibaba/boot/dubbo/util/DubboUtils.java
Patch:
@@ -35,7 +35,7 @@ public abstract class DubboUtils {
     /**
      * line separator
      */
-    public final static String LINE_SEPARATOR = System.getProperty("line.separator");
+    public static final String LINE_SEPARATOR = System.getProperty("line.separator");
 
 
     /**

File: dubbo-spring-boot-samples/dubbo-spring-boot-sample-consumer/src/main/java/com/alibaba/boot/dubbo/demo/consumer/bootstrap/DubboConsumerDemo.java
Patch:
@@ -16,14 +16,15 @@
  */
 package com.alibaba.boot.dubbo.demo.consumer.bootstrap;
 
+import com.alibaba.boot.dubbo.demo.consumer.controller.DemoConsumerController;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
 /**
  * Dubbo Consumer Demo
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @see com.alibaba.dubbo.demo.DemoService
+ * @see DemoConsumerController
  * @since 1.0.0
  */
 @SpringBootApplication(scanBasePackages = "com.alibaba.boot.dubbo.demo.consumer.controller")

File: dubbo-spring-boot-samples/dubbo-spring-boot-sample-consumer/src/main/java/com/alibaba/boot/dubbo/demo/consumer/controller/DemoConsumerController.java
Patch:
@@ -15,9 +15,8 @@
  * limitations under the License.
  */
 package com.alibaba.boot.dubbo.demo.consumer.controller;
-
+import com.alibaba.boot.dubbo.demo.consumer.DemoService;
 import com.alibaba.dubbo.config.annotation.Reference;
-import com.alibaba.dubbo.demo.DemoService;
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.RestController;

File: dubbo-spring-boot-samples/dubbo-spring-boot-sample-provider/src/main/java/com/alibaba/boot/dubbo/demo/provider/bootstrap/DubboProviderDemo.java
Patch:
@@ -16,14 +16,15 @@
  */
 package com.alibaba.boot.dubbo.demo.provider.bootstrap;
 
+import com.alibaba.boot.dubbo.demo.provider.service.DefaultDemoService;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
 /**
  * Dubbo Provider Demo
  *
  * @author <a href="mailto:mercyblitz@gmail.com">Mercy</a>
- * @see com.alibaba.dubbo.demo.DemoService
+ * @see DefaultDemoService
  * @since 1.0.0
  */
 @SpringBootApplication

File: dubbo-spring-boot-samples/dubbo-spring-boot-sample-provider/src/main/java/com/alibaba/boot/dubbo/demo/provider/service/DefaultDemoService.java
Patch:
@@ -16,8 +16,8 @@
  */
 package com.alibaba.boot.dubbo.demo.provider.service;
 
+import com.alibaba.boot.dubbo.demo.consumer.DemoService;
 import com.alibaba.dubbo.config.annotation.Service;
-import com.alibaba.dubbo.demo.DemoService;
 
 /**
  * Default {@link DemoService}

