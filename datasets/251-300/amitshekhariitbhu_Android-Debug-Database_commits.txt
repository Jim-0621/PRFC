File: app/src/main/java/com/sample/database/CarDBHelper.java
Patch:
@@ -131,4 +131,4 @@ public int count() {
             return 0;
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/com/sample/database/ContactDBHelper.java
Patch:
@@ -133,4 +133,4 @@ public int count() {
             return 0;
         }
     }
-}
\ No newline at end of file
+}

File: app/src/main/java/com/sample/database/PersonDBHelper.java
Patch:
@@ -133,4 +133,4 @@ public int count() {
             db.close();
         }
     }
-}
\ No newline at end of file
+}

File: app/src/test/java/com/sample/ExampleUnitTest.java
Patch:
@@ -33,4 +33,4 @@ public class ExampleUnitTest {
     public void addition_isCorrect() throws Exception {
         assertEquals(4, 2 + 2);
     }
-}
\ No newline at end of file
+}

File: debug-db/src/test/java/com/amitshekhar/ExampleUnitTest.java
Patch:
@@ -33,4 +33,4 @@ public class ExampleUnitTest {
     public void addition_isCorrect() throws Exception {
         assertEquals(4, 2 + 2);
     }
-}
\ No newline at end of file
+}

File: debug-db/src/main/java/com/amitshekhar/utils/Utils.java
Patch:
@@ -84,7 +84,7 @@ public static byte[] loadContent(String fileName, AssetManager assetManager) thr
     }
 
     public static byte[] getDatabase(String selectedDatabase, HashMap<String, Pair<File, String>> databaseFiles) {
-        if (TextUtils.isEmpty(selectedDatabase)) {
+        if (TextUtils.isEmpty(selectedDatabase) || !databaseFiles.containsKey(selectedDatabase)) {
             return null;
         }
 

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -285,7 +285,7 @@ public static UpdateRowResponse updateRow(SQLiteDatabase db, String tableName, L
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             } else {
@@ -340,7 +340,7 @@ public static UpdateRowResponse deleteRow(SQLiteDatabase db, String tableName,
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             }

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -212,7 +212,7 @@ public static UpdateRowResponse updateRow(SQLiteDatabase db, String tableName, L
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             } else {
@@ -264,7 +264,7 @@ public static UpdateRowResponse deleteRow(SQLiteDatabase db, String tableName, L
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             }

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -212,7 +212,7 @@ public static UpdateRowResponse updateRow(SQLiteDatabase db, String tableName, L
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             } else {

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -264,7 +264,7 @@ public static UpdateRowResponse deleteRow(SQLiteDatabase db, String tableName, L
                 if (whereClause == null) {
                     whereClause = rowDataRequest.title + "=? ";
                 } else {
-                    whereClause = "and " + rowDataRequest.title + "=? ";
+                    whereClause = whereClause + "and " + rowDataRequest.title + "=? ";
                 }
                 whereArgsList.add(rowDataRequest.value);
             }

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -84,5 +84,7 @@ public void run() {
         }
     }
 
-
+    public boolean isRunning() {
+        return mIsRunning;
+    }
 }

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -84,5 +84,7 @@ public void run() {
         }
     }
 
-
+    public boolean isRunning() {
+        return mIsRunning;
+    }
 }

File: debug-db/src/main/java/com/amitshekhar/utils/PrefHelper.java
Patch:
@@ -87,6 +87,7 @@ public static Response getAllPrefTableName(Context context) {
     public static TableDataResponse getAllPrefData(Context context, String tag) {
 
         TableDataResponse response = new TableDataResponse();
+        response.isEditable = true;
         response.isSuccessful = true;
         response.isSelectQuery = true;
 

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -223,8 +223,9 @@ public static UpdateRowResponse addRow(SQLiteDatabase db, String tableName,
             }
         }
 
-        db.insert(tableName, null, contentValues);
-        updateRowResponse.isSuccessful = true;
+        long result = db.insert(tableName, null, contentValues);
+        updateRowResponse.isSuccessful = result > 0;
+
         return updateRowResponse;
 
     }

File: debug-db/src/main/java/com/amitshekhar/utils/DatabaseHelper.java
Patch:
@@ -223,8 +223,9 @@ public static UpdateRowResponse addRow(SQLiteDatabase db, String tableName,
             }
         }
 
-        db.insert(tableName, null, contentValues);
-        updateRowResponse.isSuccessful = true;
+        long result = db.insert(tableName, null, contentValues);
+        updateRowResponse.isSuccessful = result > 0;
+
         return updateRowResponse;
 
     }

File: app/src/main/java/com/sample/MainActivity.java
Patch:
@@ -73,7 +73,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 String email = "email_" + i;
                 String street = "street_" + i;
                 String place = "place_" + i;
-                contactDBHelper.insertContact(name, phone, email, street, place);
+                contactDBHelper.insertContact(name, phone, email, street, null);
             }
         }
 

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -35,6 +35,7 @@
 import com.amitshekhar.utils.PrefHelper;
 import com.amitshekhar.utils.Utils;
 import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
 import com.google.gson.reflect.TypeToken;
 
 import java.io.BufferedReader;
@@ -64,7 +65,7 @@ public class RequestHandler {
     public RequestHandler(Context context) {
         mContext = context;
         mAssets = context.getResources().getAssets();
-        mGson = new Gson();
+        mGson = new GsonBuilder().serializeNulls().create();
     }
 
     public void handle(Socket socket) throws IOException {
@@ -89,7 +90,7 @@ public void handle(Socket socket) throws IOException {
             output = new PrintStream(socket.getOutputStream());
 
             if (route == null || route.isEmpty()) {
-                route = "debugDbHome/index.html";
+                route = "index.html";
             }
 
             byte[] bytes;

File: debug-db/src/main/java/com/amitshekhar/utils/Constants.java
Patch:
@@ -31,7 +31,7 @@ private Constants() {
 
     public static final String APP_SHARED_PREFERENCES = "APP_SHARED_PREFERENCES";
     public static final String PK = "pk";
-    public static final String TYPE = "type";
     public static final String NAME = "name";
+    public static final String NULL = "null";
 
 }

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -90,7 +90,7 @@ public void handle(Socket socket) throws IOException {
             output = new PrintStream(socket.getOutputStream());
 
             if (route == null || route.isEmpty()) {
-                route = "debugDbHome/index.html";
+                route = "index.html";
             }
 
             byte[] bytes;

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -90,7 +90,7 @@ public void handle(Socket socket) throws IOException {
             output = new PrintStream(socket.getOutputStream());
 
             if (route == null || route.isEmpty()) {
-                route = "debugDbHome/index.html";
+                route = "index.html";
             }
 
             byte[] bytes;

File: debug-db/src/main/java/com/amitshekhar/model/TableDataResponse.java
Patch:
@@ -32,6 +32,7 @@ public class TableDataResponse {
     public List<Object> rows;
     public String errorMessage;
     public boolean isEditable;
+    public boolean isSelectQuery;
 
     public static class TableInfo {
         public String title;

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -222,7 +222,7 @@ private String executeQueryAndGetResponse(String route) {
                     TableDataResponse response = DatabaseHelper.getTableData(mDatabase, query, null);
                     data = mGson.toJson(response);
                 } else {
-                    Response response = DatabaseHelper.exec(mDatabase, query);
+                    TableDataResponse response = DatabaseHelper.exec(mDatabase, query);
                     data = mGson.toJson(response);
                 }
             }

File: debug-db/src/main/java/com/amitshekhar/utils/PrefHelper.java
Patch:
@@ -88,6 +88,7 @@ public static TableDataResponse getAllPrefData(Context context, String tag) {
 
         TableDataResponse response = new TableDataResponse();
         response.isSuccessful = true;
+        response.isSelectQuery = true;
 
         TableDataResponse.TableInfo keyInfo = new TableDataResponse.TableInfo();
         keyInfo.isPrimary = true;

File: debug-db/src/main/java/com/amitshekhar/model/TableDataResponse.java
Patch:
@@ -32,6 +32,7 @@ public class TableDataResponse {
     public List<Object> rows;
     public String errorMessage;
     public boolean isEditable;
+    public boolean isSelectQuery;
 
     public static class TableInfo {
         public String title;

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -222,7 +222,7 @@ private String executeQueryAndGetResponse(String route) {
                     TableDataResponse response = DatabaseHelper.getTableData(mDatabase, query, null);
                     data = mGson.toJson(response);
                 } else {
-                    Response response = DatabaseHelper.exec(mDatabase, query);
+                    TableDataResponse response = DatabaseHelper.exec(mDatabase, query);
                     data = mGson.toJson(response);
                 }
             }

File: debug-db/src/main/java/com/amitshekhar/utils/PrefHelper.java
Patch:
@@ -88,6 +88,7 @@ public static TableDataResponse getAllPrefData(Context context, String tag) {
 
         TableDataResponse response = new TableDataResponse();
         response.isSuccessful = true;
+        response.isSelectQuery = true;
 
         TableDataResponse.TableInfo keyInfo = new TableDataResponse.TableInfo();
         keyInfo.isPrimary = true;

File: debug-db/src/main/java/com/amitshekhar/model/TableDataResponse.java
Patch:
@@ -32,6 +32,7 @@ public class TableDataResponse {
     public List<Object> rows;
     public String errorMessage;
     public boolean isEditable;
+    public boolean isSelectQuery;
 
     public static class TableInfo {
         public String title;

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -219,7 +219,7 @@ private String executeQueryAndGetResponse(String route) {
                     TableDataResponse response = DatabaseHelper.getTableData(mDatabase, query, null);
                     data = mGson.toJson(response);
                 } else {
-                    Response response = DatabaseHelper.exec(mDatabase, query);
+                    TableDataResponse response = DatabaseHelper.exec(mDatabase, query);
                     data = mGson.toJson(response);
                 }
             }

File: debug-db/src/main/java/com/amitshekhar/utils/PrefHelper.java
Patch:
@@ -88,6 +88,7 @@ public static TableDataResponse getAllPrefData(Context context, String tag) {
 
         TableDataResponse response = new TableDataResponse();
         response.isSuccessful = true;
+        response.isSelectQuery = true;
 
         TableDataResponse.TableInfo keyInfo = new TableDataResponse.TableInfo();
         keyInfo.isPrimary = true;

File: debug-db/src/main/java/com/amitshekhar/model/TableDataResponse.java
Patch:
@@ -32,6 +32,7 @@ public class TableDataResponse {
     public List<Object> rows;
     public String errorMessage;
     public boolean isEditable;
+    public boolean isSelectQuery;
 
     public static class TableInfo {
         public String title;

File: debug-db/src/main/java/com/amitshekhar/server/RequestHandler.java
Patch:
@@ -219,7 +219,7 @@ private String executeQueryAndGetResponse(String route) {
                     TableDataResponse response = DatabaseHelper.getTableData(mDatabase, query, null);
                     data = mGson.toJson(response);
                 } else {
-                    Response response = DatabaseHelper.exec(mDatabase, query);
+                    TableDataResponse response = DatabaseHelper.exec(mDatabase, query);
                     data = mGson.toJson(response);
                 }
             }

File: debug-db/src/main/java/com/amitshekhar/utils/PrefHelper.java
Patch:
@@ -88,6 +88,7 @@ public static TableDataResponse getAllPrefData(Context context, String tag) {
 
         TableDataResponse response = new TableDataResponse();
         response.isSuccessful = true;
+        response.isSelectQuery = true;
 
         TableDataResponse.TableInfo keyInfo = new TableDataResponse.TableInfo();
         keyInfo.isPrimary = true;

File: debug-db/src/main/java/com/amitshekhar/utils/DataType.java
Patch:
@@ -33,5 +33,8 @@ private DataType() {
     public static final String INTEGER = "integer";
     public static final String REAL = "real";
     public static final String TEXT = "text";
+    public static final String LONG = "long";
+    public static final String FLOAT = "float";
+    public static final String STRING_SET = "string_set";
 
 }

File: debug-db/src/main/java/com/amitshekhar/utils/DataType.java
Patch:
@@ -33,5 +33,8 @@ private DataType() {
     public static final String INTEGER = "integer";
     public static final String REAL = "real";
     public static final String TEXT = "text";
+    public static final String LONG = "long";
+    public static final String FLOAT = "float";
+    public static final String STRING_SET = "string_set";
 
 }

File: debug-db/src/main/java/com/amitshekhar/utils/QueryExecutor.java
Patch:
@@ -90,7 +90,7 @@ public static TableDataResponse getTableData(SQLiteDatabase db, String selectQue
                                 break;
                             case Cursor.FIELD_TYPE_FLOAT:
                                 columnData.dataType = DataType.REAL;
-                                columnData.value = cursor.getFloat(i);
+                                columnData.value = cursor.getDouble(i);
                                 break;
                             case Cursor.FIELD_TYPE_INTEGER:
                                 columnData.dataType = DataType.INTEGER;

File: debug-db/src/main/java/com/amitshekhar/utils/QueryExecutor.java
Patch:
@@ -90,7 +90,7 @@ public static TableDataResponse getTableData(SQLiteDatabase db, String selectQue
                                 break;
                             case Cursor.FIELD_TYPE_FLOAT:
                                 columnData.dataType = DataType.REAL;
-                                columnData.value = cursor.getFloat(i);
+                                columnData.value = cursor.getDouble(i);
                                 break;
                             case Cursor.FIELD_TYPE_INTEGER:
                                 columnData.dataType = DataType.INTEGER;

File: debug-db/src/main/java/com/amitshekhar/utils/DataType.java
Patch:
@@ -29,6 +29,7 @@ private DataType() {
         // This class in not publicly instantiable
     }
 
+    public static final String BOOLEAN = "boolean";
     public static final String INTEGER = "integer";
     public static final String REAL = "real";
     public static final String TEXT = "text";

File: debug-db/src/main/java/com/amitshekhar/utils/DataType.java
Patch:
@@ -29,6 +29,7 @@ private DataType() {
         // This class in not publicly instantiable
     }
 
+    public static final String BOOLEAN = "boolean";
     public static final String INTEGER = "integer";
     public static final String REAL = "real";
     public static final String TEXT = "text";

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -497,10 +497,10 @@ public Response getAllPrefData(String tag) {
         for (Map.Entry<String, ?> entry : allEntries.entrySet()) {
             List<String> row = new ArrayList<>();
             row.add(entry.getKey());
-            row.add(entry.getValue().toString());
+            row.add(entry.getValue() != null ? entry.getValue().toString() : "");
             response.rows.add(row);
         }
         return response;
     }
 
-}
\ No newline at end of file
+}

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -425,7 +425,7 @@ private Response query(String sql) {
                                 row.add(cursor.getFloat(i));
                                 break;
                             case Cursor.FIELD_TYPE_INTEGER:
-                                row.add(cursor.getInt(i));
+                                row.add(cursor.getLong(i));
                                 break;
                             case Cursor.FIELD_TYPE_STRING:
                                 row.add(cursor.getString(i));

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -455,10 +455,10 @@ public Response getAllPrefData(String tag) {
         for (Map.Entry<String, ?> entry : allEntries.entrySet()) {
             List<String> row = new ArrayList<>();
             row.add(entry.getKey());
-            row.add(entry.getValue().toString());
+            row.add(entry.getValue() != null ? entry.getValue().toString() : "");
             response.rows.add(row);
         }
         return response;
     }
 
-}
\ No newline at end of file
+}

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -374,17 +374,17 @@ private Response query(String sql) {
 
             if (cursor.getCount() > 0) {
                 do {
-                    List<Object> row = new ArrayList<>();
+                    List row = new ArrayList();
                     for (int i = 0; i < cursor.getColumnCount(); i++) {
                         switch (cursor.getType(i)) {
                             case Cursor.FIELD_TYPE_BLOB:
                                 row.add(cursor.getBlob(i));
                                 break;
                             case Cursor.FIELD_TYPE_FLOAT:
-                                row.add(cursor.getFloat(i));
+                                row.add(Float.valueOf(cursor.getFloat(i)));
                                 break;
                             case Cursor.FIELD_TYPE_INTEGER:
-                                row.add(cursor.getInt(i));
+                                row.add(Integer.valueOf(cursor.getInt(i)));
                                 break;
                             case Cursor.FIELD_TYPE_STRING:
                                 row.add(cursor.getString(i));

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -407,7 +407,7 @@ private Response query(String sql) {
 
     public Response getDBList() {
         Response response = new Response();
-        if (mDatabaseDir != null) {
+        if (mDatabaseDir != null && mDatabaseDir.list() != null) {
             for (String name : mDatabaseDir.list()) {
                 response.rows.add(name);
             }

File: debug-db/src/main/java/com/amitshekhar/model/Response.java
Patch:
@@ -28,7 +28,7 @@
 
 public class Response {
 
-    public List rows = new ArrayList();
+    public List<Object> rows = new ArrayList<>();
     public List<String> columns = new ArrayList<>();
     public boolean isSuccessful;
     public String error;

File: debug-db/src/main/java/com/amitshekhar/server/ClientServer.java
Patch:
@@ -407,7 +407,7 @@ private Response query(String sql) {
 
     public Response getDBList() {
         Response response = new Response();
-        if (mDatabaseDir != null) {
+        if (mDatabaseDir != null && mDatabaseDir.list() != null) {
             for (String name : mDatabaseDir.list()) {
                 response.rows.add(name);
             }

