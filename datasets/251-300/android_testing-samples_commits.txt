File: runner/AndroidJunitRunnerSample/app/src/androidTest/java/com/example/android/testing/androidjunitrunnersample/CalculatorInstrumentationTest.java
Patch:
@@ -18,7 +18,6 @@
 
 import junit.framework.TestSuite;
 
-
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.internal.builders.AllDefaultPossibilitiesBuilder;

File: ui/espresso/IntentsAdvancedSample/app/src/androidTest/java/com/example/android/testing/espresso/intents/AdvancedSample/ImageViewHasDrawableMatcher.java
Patch:
@@ -21,13 +21,14 @@
 import android.widget.ImageView;
 
 import org.hamcrest.Description;
+import org.hamcrest.Matcher;
 
 /**
  * A Matcher for Espresso that checks if an ImageView has a drawable applied to it.
  */
 public class ImageViewHasDrawableMatcher {
 
-    public static BoundedDiagnosingMatcher<View, ImageView> hasDrawable() {
+    public static Matcher<View> hasDrawable() {
         return new BoundedDiagnosingMatcher<View, ImageView>(ImageView.class) {
              @Override
             protected void describeMoreTo(Description description) {

File: runner/AndroidJunitRunnerSample/app/src/androidTest/java/com/example/android/testing/androidjunitrunnersample/CalculatorInstrumentationTest.java
Patch:
@@ -28,7 +28,6 @@
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
 import androidx.test.runner.AndroidJUnitRunner;
-import android.test.ActivityInstrumentationTestCase2;
 
 import static androidx.test.espresso.Espresso.onView;
 import static androidx.test.espresso.action.ViewActions.click;
@@ -53,7 +52,7 @@ public class CalculatorInstrumentationTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/BasicSample/app/src/androidTest/java/com/example/android/testing/espresso/BasicSample/ChangeTextBehaviorTest.java
Patch:
@@ -27,7 +27,6 @@
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import android.test.ActivityInstrumentationTestCase2;
 
 import static androidx.test.espresso.Espresso.onView;
 import static androidx.test.espresso.action.ViewActions.click;
@@ -52,7 +51,7 @@ public class ChangeTextBehaviorTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/BasicSampleBundled/tests/com/example/android/testing/espresso/basicsamplebundled/tests/ChangeTextBehaviorTest.java
Patch:
@@ -34,8 +34,7 @@
 import androidx.test.espresso.matcher.ViewMatchers;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
-import android.test.suitebuilder.annotation.LargeTest;
+import androidx.test.filters.LargeTest;
 
 import com.example.android.testing.espresso.basicsamplebundled.MainActivity;
 import com.example.android.testing.espresso.basicsamplebundled.R;
@@ -57,7 +56,7 @@ public class ChangeTextBehaviorTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/CustomMatcherSample/app/src/androidTest/java/com/example/android/testing/espresso/CustomMatcherSample/HintMatchersTest.java
Patch:
@@ -24,7 +24,6 @@
 import androidx.test.filters.LargeTest;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 
 import static androidx.test.espresso.Espresso.onView;
 import static androidx.test.espresso.action.ViewActions.click;
@@ -54,7 +53,7 @@ public class HintMatchersTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/DataAdapterSample/app/src/androidTest/java/com/example/android/testing/espresso/DataAdapterSample/LongListActivityTest.java
Patch:
@@ -28,7 +28,6 @@
 import androidx.test.filters.LargeTest;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 
 import static androidx.test.espresso.Espresso.onData;
 import static androidx.test.espresso.Espresso.onView;
@@ -66,7 +65,7 @@ public class LongListActivityTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/MultiWindowSample/app/src/androidTest/java/com/example/android/testing/espresso/MultiWindowSample/MultiWindowTest.java
Patch:
@@ -18,7 +18,6 @@
 import androidx.test.filters.LargeTest;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 
 import org.junit.Before;
 import org.junit.Rule;
@@ -71,7 +70,7 @@ public class MultiWindowTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/WebBasicSample/app/src/androidTest/java/com/example/android/testing/espresso/web/BasicSample/WebViewActivityTest.java
Patch:
@@ -28,7 +28,6 @@
 import androidx.test.filters.LargeTest;
 import androidx.test.rule.ActivityTestRule;
 import androidx.test.runner.AndroidJUnit4;
-import android.test.ActivityInstrumentationTestCase2;
 import android.webkit.WebView;
 
 import static androidx.test.espresso.web.assertion.WebViewAssertions.webMatches;
@@ -54,7 +53,7 @@ public class WebViewActivityTest {
 
     /**
      * A JUnit {@link Rule @Rule} to launch your activity under test. This is a replacement
-     * for {@link ActivityInstrumentationTestCase2}.
+     * for {@link android.test.ActivityInstrumentationTestCase2}.
      * <p>
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.

File: ui/espresso/IntentsBasicSample/app/src/androidTest/java/com/example/android/testing/espresso/BasicSample/DialerActivityTest.java
Patch:
@@ -76,7 +76,7 @@ public class DialerActivityTest {
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.
      * <p>
-     * This rule is based on {@link ActivityTestRule} and will create and launch of the activity
+     * This rule is based on {@link ActivityTestRule} and will create and launch the activity
      * for you and also expose the activity under test.
      */
     @Rule

File: ui/espresso/IntentsBasicSample/app/src/androidTest/java/com/example/android/testing/espresso/BasicSample/DialerActivityTest.java
Patch:
@@ -76,7 +76,7 @@ public class DialerActivityTest {
      * Rules are interceptors which are executed for each test method and will run before
      * any of your setup code in the {@link Before @Before} method.
      * <p>
-     * This rule is based on {@link ActivityTestRule} and will create and launch of the activity
+     * This rule is based on {@link ActivityTestRule} and will create and launch the activity
      * for you and also expose the activity under test.
      */
     @Rule

File: unit/BasicSample/app/src/main/java/com/example/android/testing/unittesting/BasicSample/SharedPreferencesHelper.java
Patch:
@@ -48,7 +48,7 @@ public SharedPreferencesHelper(SharedPreferences sharedPreferences) {
      * {@link SharedPreferences}.
      *
      * @param sharedPreferenceEntry contains data to save to {@link SharedPreferences}.
-     * @return @{code true} if writing to {@link SharedPreferences} succeeded. @{code false}
+     * @return {@code true} if writing to {@link SharedPreferences} succeeded. {@code false}
      *         otherwise.
      */
     public boolean savePersonalInfo(SharedPreferenceEntry sharedPreferenceEntry){

File: unit/BasicSample/app/src/main/java/com/example/android/testing/unittesting/BasicSample/SharedPreferencesHelper.java
Patch:
@@ -48,7 +48,7 @@ public SharedPreferencesHelper(SharedPreferences sharedPreferences) {
      * {@link SharedPreferences}.
      *
      * @param sharedPreferenceEntry contains data to save to {@link SharedPreferences}.
-     * @return @{code true} if writing to {@link SharedPreferences} succeeded. @{code false}
+     * @return {@code true} if writing to {@link SharedPreferences} succeeded. {@code false}
      *         otherwise.
      */
     public boolean savePersonalInfo(SharedPreferenceEntry sharedPreferenceEntry){

File: espresso/BasicSample/app/src/androidTest/java/com/example/android/testing/espresso/BasicSample/ChangeTextBehaviorTest.java
Patch:
@@ -66,7 +66,8 @@ public void testChangeText_sameActivity() {
 
     public void testChangeText_newActivity() {
         // Type text and then press the button.
-        onView(withId(R.id.editTextUserInput)).perform(typeText(STRING_TO_BE_TYPED));
+        onView(withId(R.id.editTextUserInput)).perform(typeText(STRING_TO_BE_TYPED),
+                closeSoftKeyboard());
         onView(withId(R.id.activityChangeTextBtn)).perform(click());
 
         // This view is in a different Activity, no need to tell Espresso.

File: espresso/BasicSampleBundled/tests/com/example/android/testing/espresso/basicsamplebundled/tests/ChangeTextBehaviorTest.java
Patch:
@@ -68,7 +68,8 @@ public void testChangeText_sameActivity() {
 
     public void testChangeText_newActivity() {
         // Type text and then press the button.
-        onView(withId(R.id.editTextUserInput)).perform(typeText(STRING_TO_BE_TYPED));
+        onView(withId(R.id.editTextUserInput)).perform(typeText(STRING_TO_BE_TYPED),
+                closeSoftKeyboard());
         onView(withId(R.id.activityChangeTextBtn)).perform(click());
 
         // This view is in a different Activity, no need to tell Espresso.

File: espresso/CustomMatcherSample/app/src/androidTest/java/com/example/android/testing/espresso/CustomMatcherSample/HintMatchersTest.java
Patch:
@@ -16,8 +16,6 @@
 
 package com.example.android.testing.espresso.CustomMatcherSample;
 
-import com.google.common.annotations.VisibleForTesting;
-
 import android.test.ActivityInstrumentationTestCase2;
 import android.test.suitebuilder.annotation.LargeTest;
 

File: espresso/CustomMatcherSample/app/src/main/java/com/example/android/testing/espresso/CustomMatcherSample/MainActivity.java
Patch:
@@ -16,13 +16,13 @@
 
 package com.example.android.testing.espresso.CustomMatcherSample;
 
-import com.google.common.annotations.VisibleForTesting;
-
 import android.app.Activity;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.EditText;
 
+import com.google.common.annotations.VisibleForTesting;
+
 import java.util.Arrays;
 import java.util.List;
 

File: testrunner/AndroidJunitRunnerSample/app/src/main/java/com/example/android/testing/androidjunitrunnersample/Calculator.java
Patch:
@@ -16,6 +16,8 @@
 
 package com.example.android.testing.androidjunitrunnersample;
 
+import static com.google.common.base.Preconditions.checkArgument;
+
 /**
  * A simple calculator with a basic set of operations.
  */
@@ -41,9 +43,7 @@ public double sub(double firstOperand, double secondOperand) {
      * Divide operation
      */
     public double div(double firstOperand, double secondOperand) {
-        if (secondOperand == 0) {
-            throw new IllegalArgumentException("secondOperand must be != 0, you cannot divide by zero");
-        }
+        checkArgument(secondOperand != 0, "secondOperand must be != 0, you cannot divide by zero");
         return firstOperand / secondOperand;
     }
 

