File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -34,7 +34,7 @@ public final class Action {
     public transient static final int ACTION_FILE = 2;
     public transient static final int ACTION_CAMERA = 3;
     public transient static final int ACTION_VIDEO = 4;
-    private ArrayList mPermissions = new ArrayList();
+    private ArrayList<String> mPermissions = new ArrayList<>();
     private int mAction;
     private int mFromIntention;
     private Intent mIntent;

File: agentweb-core/src/main/java/com/just/agentweb/AgentActionFragment.java
Patch:
@@ -43,10 +43,8 @@
  */
 public final class AgentActionFragment extends Fragment {
 
-    public static final String KEY_ACTION = "KEY_ACTION";
     public static final String KEY_URI = "KEY_URI";
     public static final String KEY_FROM_INTENTION = "KEY_FROM_INTENTION";
-    public static final String KEY_FILE_CHOOSER_INTENT = "KEY_FILE_CHOOSER_INTENT";
     private static final String TAG = AgentActionFragment.class.getSimpleName();
     private Action mAction;
     public static final int REQUEST_CODE = 0x254;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebCompat.java
Patch:
@@ -22,6 +22,7 @@ public class AgentWebCompat {
 
     /**
      * 来之 https://github.com/Justson/AgentWeb/issues/934 建议
+     * https://juejin.cn/post/6950091477192015902
      * fix Using WebView from more than one process
      * @param context
      */

File: sample/src/main/java/com/just/agentweb/sample/app/App.java
Patch:
@@ -49,9 +49,12 @@ public void run() {
         });
     }
 
+    public static Context mContext;
+
     @Override
     protected void attachBaseContext(Context base) {
         super.attachBaseContext(base);
+        mContext = base;
         AgentWebCompat.setDataDirectorySuffix(base);
     }
 

File: agentweb-core/src/main/java/com/just/agentweb/DefaultChromeClient.java
Patch:
@@ -37,7 +37,6 @@
 import android.webkit.WebView;
 
 import java.lang.ref.WeakReference;
-import java.util.Arrays;
 import java.util.List;
 
 import static com.just.agentweb.AgentActionFragment.KEY_FROM_INTENTION;
@@ -274,7 +273,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
 
     @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
     private boolean openFileChooserAboveL(WebView webView, ValueCallback<Uri[]> valueCallbacks, FileChooserParams fileChooserParams) {
-        LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
+//        LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
         Activity mActivity = this.mActivityWeakReference.get();
         if (mActivity == null || mActivity.isFinishing()) {
             return false;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -769,7 +769,7 @@ public static List<String> getDeniedPermissions(Activity activity, String[] perm
 		if (permissions == null || permissions.length == 0) {
 			return null;
 		}
-		List<String> deniedPermissions = new ArrayList<>();
+		List<String> deniedPermissions = new ArrayList<>(permissions.length);
 		for (int i = 0; i < permissions.length; i++) {
 			if (!hasPermission(activity, permissions[i])) {
 				deniedPermissions.add(permissions[i]);

File: sample/src/main/java/com/just/agentweb/sample/activity/CommonActivity.java
Patch:
@@ -76,7 +76,7 @@ private void openFragment(int key) {
             /*Fragment 使用AgenWeb*/
 			case FLAG_GUIDE_DICTIONARY_USE_IN_FRAGMENT: //项目中请使用常量代替0 ， 代码可读性更高
 				ft.add(R.id.container_framelayout, mAgentWebFragment = AgentWebFragment.getInstance(mBundle = new Bundle()), AgentWebFragment.class.getName());
-				mBundle.putString(AgentWebFragment.URL_KEY, "https://m.vip.com/?source=www&jump_https=1");
+				mBundle.putString(AgentWebFragment.URL_KEY, "http://cw.gzyunjuchuang.com/");
 				break;
 			/*下载文件*/
 			case FLAG_GUIDE_DICTIONARY_FILE_DOWNLOAD:
@@ -102,7 +102,7 @@ private void openFragment(int key) {
             /*优酷全屏播放视屏*/
 			case FLAG_GUIDE_DICTIONARY_VIDEO_FULL_SCREEN:
 				ft.add(R.id.container_framelayout, mAgentWebFragment = AgentWebFragment.getInstance(mBundle = new Bundle()), AgentWebFragment.class.getName());
-				mBundle.putString(AgentWebFragment.URL_KEY, "http://m.youku.com/video/id_XODEzMjU1MTI4.html");
+				mBundle.putString(AgentWebFragment.URL_KEY, "https://m.youku.com/alipay_video/id_XNTExMjg3Njg1Mg==.html?spm=a2hww.12630578.drawer1.dzj1_1");
 //                mBundle.putString(AgentWebFragment.URL_KEY, "https://v.qq.com/x/page/i0530nu6z1a.html");
 				break;
             /*淘宝自定义进度条*/

File: sample/src/main/java/com/just/agentweb/sample/activity/CommonActivity.java
Patch:
@@ -102,7 +102,7 @@ private void openFragment(int key) {
             /*优酷全屏播放视屏*/
 			case FLAG_GUIDE_DICTIONARY_VIDEO_FULL_SCREEN:
 				ft.add(R.id.container_framelayout, mAgentWebFragment = AgentWebFragment.getInstance(mBundle = new Bundle()), AgentWebFragment.class.getName());
-				mBundle.putString(AgentWebFragment.URL_KEY, "http://m.youku.com/video/id_XODEzMjU1MTI4.html");
+				mBundle.putString(AgentWebFragment.URL_KEY, "https://m.youku.com/alipay_video/id_XNTExMjg3Njg1Mg==.html?spm=a2hww.12630578.drawer1.dzj1_1");
 //                mBundle.putString(AgentWebFragment.URL_KEY, "https://v.qq.com/x/page/i0530nu6z1a.html");
 				break;
             /*淘宝自定义进度条*/

File: agentweb-core/src/main/java/com/just/agentweb/AbsAgentWebSettings.java
Patch:
@@ -65,7 +65,7 @@ private void settings(WebView webView) {
         mWebSettings.setSupportZoom(true);
         mWebSettings.setBuiltInZoomControls(false);
         mWebSettings.setSavePassword(false);
-        if (AgentWebUtils.checkNetwork(webView.getContext())) {
+        if (AgentWebUtils.checkNetwork(webView.getContext().getApplicationContext())) {
             //根据cache-control获取数据。
             mWebSettings.setCacheMode(WebSettings.LOAD_DEFAULT);
         } else {

File: agentweb-core/src/main/java/com/just/agentweb/DefaultDownloadImpl.java
Patch:
@@ -211,7 +211,7 @@ protected void performDownload(String url) {
         try {
             LogUtils.e(TAG, "performDownload:" + url + " exist:" + DownloadImpl.getInstance(this.mContext).exist(url));
             // 该链接是否正在下载
-            if (DownloadImpl.getInstance(this.mContext).exist(url)) {
+            if (DownloadImpl.getInstance(mContext).exist(url)) {
                 if (null != mAgentWebUIController.get()) {
                     mAgentWebUIController.get().onShowMessage(
                             mActivityWeakReference.get()

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -198,7 +198,6 @@ public WebListenerManager setDownloader(WebView webView, android.webkit.Download
 							@Override
 							protected ResourceRequest createResourceRequest(String url) {
 								return DownloadImpl.getInstance(getActivity())
-										.with(getActivity().getApplicationContext())
 										.url(url)
 										.quickProgress()
 										.addHeader("", "")
@@ -252,7 +251,7 @@ public String getUrl() {
 	protected com.just.agentweb.WebChromeClient mWebChromeClient = new WebChromeClient() {
 		@Override
 		public void onProgressChanged(WebView view, int newProgress) {
-			  super.onProgressChanged(view, newProgress);
+			super.onProgressChanged(view, newProgress);
 			Log.i(TAG, "onProgressChanged:" + newProgress + "  view:" + view);
 		}
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -198,8 +198,7 @@ public WebListenerManager setDownloader(WebView webView, android.webkit.Download
 
 							@Override
 							protected ResourceRequest createResourceRequest(String url) {
-								return DownloadImpl.getInstance()
-										.with(getActivity().getApplicationContext())
+								return DownloadImpl.getInstance(getContext())
 										.url(url)
 										.quickProgress()
 										.addHeader("", "")

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -198,8 +198,7 @@ public WebListenerManager setDownloader(WebView webView, android.webkit.Download
 
 							@Override
 							protected ResourceRequest createResourceRequest(String url) {
-								return DownloadImpl.getInstance()
-										.with(getActivity().getApplicationContext())
+								return DownloadImpl.getInstance(getContext())
 										.url(url)
 										.quickProgress()
 										.addHeader("", "")

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -239,7 +239,7 @@ public String getUrl() {
 	protected com.just.agentweb.WebChromeClient mWebChromeClient = new WebChromeClient() {
 		@Override
 		public void onProgressChanged(WebView view, int newProgress) {
-			//  super.onProgressChanged(view, newProgress);
+			  super.onProgressChanged(view, newProgress);
 			Log.i(TAG, "onProgressChanged:" + newProgress + "  view:" + view);
 		}
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -239,7 +239,7 @@ public String getUrl() {
 	protected com.just.agentweb.WebChromeClient mWebChromeClient = new WebChromeClient() {
 		@Override
 		public void onProgressChanged(WebView view, int newProgress) {
-			//  super.onProgressChanged(view, newProgress);
+			  super.onProgressChanged(view, newProgress);
 			Log.i(TAG, "onProgressChanged:" + newProgress + "  view:" + view);
 		}
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -238,7 +238,7 @@ public String getUrl() {
 	protected com.just.agentweb.WebChromeClient mWebChromeClient = new WebChromeClient() {
 		@Override
 		public void onProgressChanged(WebView view, int newProgress) {
-			//  super.onProgressChanged(view, newProgress);
+			  super.onProgressChanged(view, newProgress);
 			Log.i(TAG, "onProgressChanged:" + newProgress + "  view:" + view);
 		}
 

File: agentweb-core/src/main/java/com/just/agentweb/DefaultChromeClient.java
Patch:
@@ -260,7 +260,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
 
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	private boolean openFileChooserAboveL(WebView webView, ValueCallback<Uri[]> valueCallbacks, FileChooserParams fileChooserParams) {
-		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  :" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
+		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
 		Activity mActivity = this.mActivityWeakReference.get();
 		if (mActivity == null || mActivity.isFinishing()) {
 			return false;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultChromeClient.java
Patch:
@@ -260,7 +260,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
 
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	private boolean openFileChooserAboveL(WebView webView, ValueCallback<Uri[]> valueCallbacks, FileChooserParams fileChooserParams) {
-		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  :" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
+		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
 		Activity mActivity = this.mActivityWeakReference.get();
 		if (mActivity == null || mActivity.isFinishing()) {
 			return false;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultChromeClient.java
Patch:
@@ -260,7 +260,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
 
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	private boolean openFileChooserAboveL(WebView webView, ValueCallback<Uri[]> valueCallbacks, FileChooserParams fileChooserParams) {
-		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  :" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
+		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
 		Activity mActivity = this.mActivityWeakReference.get();
 		if (mActivity == null || mActivity.isFinishing()) {
 			return false;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -481,7 +481,7 @@ public void onReceivedError(WebView view, int errorCode, String description, Str
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	@Override
 	public void onReceivedError(WebView view, WebResourceRequest request, WebResourceError error) {
-		if (request.isForMainFrame()) {
+		if (request.isForMainFrame() && error.getErrorCode() != -1) {
 			onMainFrameError(view,
 					error.getErrorCode(), error.getDescription().toString(),
 					request.getUrl().toString());

File: agentweb-core/src/main/java/com/just/agentweb/DefaultChromeClient.java
Patch:
@@ -260,7 +260,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
 
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	private boolean openFileChooserAboveL(WebView webView, ValueCallback<Uri[]> valueCallbacks, FileChooserParams fileChooserParams) {
-		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  :" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
+		LogUtils.i(TAG, "fileChooserParams:" + fileChooserParams.getAcceptTypes() + "  getTitle:" + fileChooserParams.getTitle() + " accept:" + Arrays.toString(fileChooserParams.getAcceptTypes()) + " length:" + fileChooserParams.getAcceptTypes().length + "  isCaptureEnabled:" + fileChooserParams.isCaptureEnabled() + "  " + fileChooserParams.getFilenameHint() + "  intent:" + fileChooserParams.createIntent().toString() + "   mode:" + fileChooserParams.getMode());
 		Activity mActivity = this.mActivityWeakReference.get();
 		if (mActivity == null || mActivity.isFinishing()) {
 			return false;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -481,7 +481,7 @@ public void onReceivedError(WebView view, int errorCode, String description, Str
 	@RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)
 	@Override
 	public void onReceivedError(WebView view, WebResourceRequest request, WebResourceError error) {
-		if (request.isForMainFrame()) {
+		if (request.isForMainFrame() && error.getErrorCode() != -1) {
 			onMainFrameError(view,
 					error.getErrorCode(), error.getDescription().toString(),
 					request.getUrl().toString());

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -62,7 +62,6 @@ public class AgentWebConfig {
      * 自定义 WebView
      */
     public static final int WEBVIEW_CUSTOM_TYPE = 3;
-    static int WEBVIEW_TYPE = WEBVIEW_DEFAULT_TYPE;
     private static volatile boolean IS_INITIALIZED = false;
     private static final String TAG = AgentWebConfig.class.getSimpleName();
     public static final String AGENTWEB_NAME = "AgentWeb";

File: agentweb-core/src/main/java/com/just/agentweb/WebCreator.java
Patch:
@@ -28,4 +28,6 @@ public interface WebCreator extends IWebIndicator {
     WebView getWebView();
 
     FrameLayout getWebParentLayout();
+
+    int getWebViewType();
 }

File: sample/src/main/java/com/just/agentweb/sample/activity/NativeDownloadActivity.java
Patch:
@@ -140,7 +140,7 @@ public boolean onResult(Throwable throwable, Uri path, String url, Extra extra)
                     }
                 });*/
 
-        DownloadImpl.getInstance()
+       /* DownloadImpl.getInstance()
                 .with(getApplicationContext())
                 .target(new File(Runtime.getInstance().getDir(this, true).getAbsolutePath() + "/" + "com.ss.android.article.news_636.apk"), this.getPackageName() + ".DownloadFileProvider")//自定义路径需指定目录和authority(FileContentProvide),需要相对应匹配才能启动通知，和自动打开文件
                 .setUniquePath(false)//是否唯一路径
@@ -176,7 +176,7 @@ public boolean onResult(Throwable throwable, Uri path, String url, Extra extra)
                         Log.i(TAG, " path:" + path + " url:" + url + " length:" + new File(path.getPath()).length() + " md5:" + md5 + " extra.getFileMD5:" + extra.getFileMD5());
                         return super.onResult(throwable, path, url, extra);
                     }
-                });
+                });*/
 
     }
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/CustomSettingsFragment.java
Patch:
@@ -24,6 +24,6 @@ public static AgentWebFragment getInstance(Bundle bundle) {
 
     @Override
     public IAgentWebSettings getSettings() {
-        return new CustomSettings();
+        return new CustomSettings(getActivity());
     }
 }

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -62,7 +62,6 @@ public class AgentWebConfig {
      * 自定义 WebView
      */
     public static final int WEBVIEW_CUSTOM_TYPE = 3;
-    static int WEBVIEW_TYPE = WEBVIEW_DEFAULT_TYPE;
     private static volatile boolean IS_INITIALIZED = false;
     private static final String TAG = AgentWebConfig.class.getSimpleName();
     public static final String AGENTWEB_NAME = "AgentWeb";

File: agentweb-core/src/main/java/com/just/agentweb/WebCreator.java
Patch:
@@ -28,4 +28,6 @@ public interface WebCreator extends IWebIndicator {
     WebView getWebView();
 
     FrameLayout getWebParentLayout();
+
+    int getWebViewType();
 }

File: sample/src/main/java/com/just/agentweb/sample/activity/NativeDownloadActivity.java
Patch:
@@ -140,7 +140,7 @@ public boolean onResult(Throwable throwable, Uri path, String url, Extra extra)
                     }
                 });*/
 
-        DownloadImpl.getInstance()
+       /* DownloadImpl.getInstance()
                 .with(getApplicationContext())
                 .target(new File(Runtime.getInstance().getDir(this, true).getAbsolutePath() + "/" + "com.ss.android.article.news_636.apk"), this.getPackageName() + ".DownloadFileProvider")//自定义路径需指定目录和authority(FileContentProvide),需要相对应匹配才能启动通知，和自动打开文件
                 .setUniquePath(false)//是否唯一路径
@@ -176,7 +176,7 @@ public boolean onResult(Throwable throwable, Uri path, String url, Extra extra)
                         Log.i(TAG, " path:" + path + " url:" + url + " length:" + new File(path.getPath()).length() + " md5:" + md5 + " extra.getFileMD5:" + extra.getFileMD5());
                         return super.onResult(throwable, path, url, extra);
                     }
-                });
+                });*/
 
     }
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/CustomSettingsFragment.java
Patch:
@@ -24,6 +24,6 @@ public static AgentWebFragment getInstance(Bundle bundle) {
 
     @Override
     public IAgentWebSettings getSettings() {
-        return new CustomSettings();
+        return new CustomSettings(getActivity());
     }
 }

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -440,7 +440,7 @@ static void clearWebViewAllCache(Context context) {
 
 		try {
 
-			clearWebViewAllCache(context, new WebView(context.getApplicationContext()));
+			clearWebViewAllCache(context, new LollipopFixedWebView(context.getApplicationContext()));
 		} catch (Exception e) {
 			e.printStackTrace();
 		}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebView.java
Patch:
@@ -48,7 +48,7 @@
  * @author cenxiaozhong
  * @since 1.0.0
  */
-public class AgentWebView extends WebView {
+public class AgentWebView extends LollipopFixedWebView {
     private static final String TAG = AgentWebView.class.getSimpleName();
     private Map<String, JsCallJava> mJsCallJavas;
     private Map<String, String> mInjectJavaScripts;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebCreator.java
Patch:
@@ -229,7 +229,7 @@ private WebView createWebView() {
             mWebView = new AgentWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE;
         } else {
-            mWebView = new WebView(mActivity);
+            mWebView = new LollipopFixedWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_DEFAULT_TYPE;
         }
         return mWebView;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -440,7 +440,7 @@ static void clearWebViewAllCache(Context context) {
 
 		try {
 
-			clearWebViewAllCache(context, new WebView(context.getApplicationContext()));
+			clearWebViewAllCache(context, new LollipopFixedWebView(context.getApplicationContext()));
 		} catch (Exception e) {
 			e.printStackTrace();
 		}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebView.java
Patch:
@@ -48,7 +48,7 @@
  * @author cenxiaozhong
  * @since 1.0.0
  */
-public class AgentWebView extends WebView {
+public class AgentWebView extends LollipopFixedWebView {
     private static final String TAG = AgentWebView.class.getSimpleName();
     private Map<String, JsCallJava> mJsCallJavas;
     private Map<String, String> mInjectJavaScripts;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebCreator.java
Patch:
@@ -229,7 +229,7 @@ private WebView createWebView() {
             mWebView = new AgentWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE;
         } else {
-            mWebView = new WebView(mActivity);
+            mWebView = new LollipopFixedWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_DEFAULT_TYPE;
         }
         return mWebView;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -440,7 +440,7 @@ static void clearWebViewAllCache(Context context) {
 
 		try {
 
-			clearWebViewAllCache(context, new WebView(context.getApplicationContext()));
+			clearWebViewAllCache(context, new LollipopFixedWebView(context.getApplicationContext()));
 		} catch (Exception e) {
 			e.printStackTrace();
 		}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebView.java
Patch:
@@ -48,7 +48,7 @@
  * @author cenxiaozhong
  * @since 1.0.0
  */
-public class AgentWebView extends WebView {
+public class AgentWebView extends LollipopFixedWebView {
     private static final String TAG = AgentWebView.class.getSimpleName();
     private Map<String, JsCallJava> mJsCallJavas;
     private Map<String, String> mInjectJavaScripts;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebCreator.java
Patch:
@@ -229,7 +229,7 @@ private WebView createWebView() {
             mWebView = new AgentWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE;
         } else {
-            mWebView = new WebView(mActivity);
+            mWebView = new LollipopFixedWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_DEFAULT_TYPE;
         }
         return mWebView;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -440,7 +440,7 @@ static void clearWebViewAllCache(Context context) {
 
 		try {
 
-			clearWebViewAllCache(context, new WebView(context.getApplicationContext()));
+			clearWebViewAllCache(context, new LollipopFixedWebView(context.getApplicationContext()));
 		} catch (Exception e) {
 			e.printStackTrace();
 		}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebView.java
Patch:
@@ -48,7 +48,7 @@
  * @author cenxiaozhong
  * @since 1.0.0
  */
-public class AgentWebView extends WebView {
+public class AgentWebView extends LollipopFixedWebView {
     private static final String TAG = AgentWebView.class.getSimpleName();
     private Map<String, JsCallJava> mJsCallJavas;
     private Map<String, String> mInjectJavaScripts;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebCreator.java
Patch:
@@ -229,7 +229,7 @@ private WebView createWebView() {
             mWebView = new AgentWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE;
         } else {
-            mWebView = new WebView(mActivity);
+            mWebView = new LollipopFixedWebView(mActivity);
             AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_DEFAULT_TYPE;
         }
         return mWebView;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebSettingsImpl.java
Patch:
@@ -42,10 +42,9 @@ public WebListenerManager setDownloader(WebView webView, DownloadListener downlo
             mDefaultDownloadImpl$Extra =
                     clazz.getDeclaredMethod("create", Activity.class, WebView.class,
                             Class.forName("com.just.agentweb.download.DownloadListener"),
-                            Class.forName("com.just.agentweb.download.DownloadingListener"),
                             PermissionInterceptor.class)
                             .invoke(mDefaultDownloadImpl$Extra, (Activity) webView.getContext()
-                                    , webView, null, null, mAgentWeb.getPermissionInterceptor());
+                                    , webView, null, mAgentWeb.getPermissionInterceptor());
 
         } catch (Throwable ignore) {
             if (LogUtils.isDebug()) {

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -102,7 +102,6 @@ public static int dp2px(Context context, float dipValue) {
 		return (int) (dipValue * scale + 0.5f);
 	}
 
-
 	static final void clearWebView(WebView m) {
 		if (m == null) {
 			return;
@@ -756,7 +755,6 @@ public static List<String> getDeniedPermissions(Activity activity, String[] perm
 		}
 		List<String> deniedPermissions = new ArrayList<>();
 		for (int i = 0; i < permissions.length; i++) {
-
 			if (!hasPermission(activity, permissions[i])) {
 				deniedPermissions.add(permissions[i]);
 			}

File: agentweb-core/src/main/java/com/just/agentweb/BaseIndicatorSpec.java
Patch:
@@ -23,9 +23,7 @@
  * @since 1.0.0
  */
 public interface BaseIndicatorSpec {
-    /**
-     * indicator
-     */
+
     void show();
 
     void hide();

File: agentweb-core/src/main/java/com/just/agentweb/LogUtils.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class LogUtils {
 
-    private static final String PREFIX = " agentweb - "; //
+    private static final String PREFIX = " agentweb - ";
 
     public static boolean isDebug() {
         return AgentWebConfig.DEBUG;

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -205,6 +205,7 @@ private void doClick(int position) {
                 break;
             case FLAG_GUIDE_DICTIONARY_LINKAGE_WITH_TOOLBAR:
                 startActivity(new Intent(this, AutoHidenToolbarActivity.class));
+                break;
             case FLAG_GUIDE_DICTIONARY_COMMON_FILE_DOWNLOAD:
                 startActivity(new Intent(this, NativeDownloadActivity.class));
                 break;

File: sample/src/main/java/com/just/agentweb/sample/activity/WebActivity.java
Patch:
@@ -15,7 +15,6 @@ public String getUrl() {
 
     @Override
     protected void onStart() {
-
         super.onStart();
     }
 

File: sample/src/main/java/com/just/agentweb/sample/base/BaseAgentWebActivity.java
Patch:
@@ -11,9 +11,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.webkit.DownloadListener;
-import android.webkit.WebChromeClient;
 import android.webkit.WebView;
-import android.webkit.WebViewClient;
 
 import com.just.agentweb.AgentWeb;
 import com.just.agentweb.AgentWebSettingsImpl;
@@ -24,6 +22,8 @@
 import com.just.agentweb.MiddlewareWebChromeBase;
 import com.just.agentweb.MiddlewareWebClientBase;
 import com.just.agentweb.PermissionInterceptor;
+import com.just.agentweb.WebChromeClient;
+import com.just.agentweb.WebViewClient;
 
 /**
  * Created by cenxiaozhong on 2017/7/22.

File: sample/src/main/java/com/just/agentweb/sample/common/CommonWebChromeClient.java
Patch:
@@ -1,9 +1,10 @@
 package com.just.agentweb.sample.common;
 
 import android.util.Log;
-import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 
+import com.just.agentweb.WebChromeClient;
+
 /**
  * @author cenxiaozhong
  * @date 2019/2/19
@@ -12,7 +13,7 @@
 public class CommonWebChromeClient extends WebChromeClient {
 	@Override
 	public void onProgressChanged(WebView view, int newProgress) {
-		//  super.onProgressChanged(view, newProgress);
+		  super.onProgressChanged(view, newProgress);
 		Log.i("CommonWebChromeClient", "onProgressChanged:" + newProgress + "  view:" + view);
 	}
 }

File: sample/src/main/java/com/just/agentweb/sample/sonic/SonicImpl.java
Patch:
@@ -29,7 +29,6 @@ public SonicImpl(String url , Context context){
      */
     public void onCreateSession() {
 
-
         SonicSessionConfig.Builder sessionConfigBuilder = new SonicSessionConfig.Builder();
         sessionConfigBuilder.setSupportLocalServer(true);
         SonicEngine.createInstance(new DefaultSonicRuntimeImpl(mContext.getApplicationContext()), new SonicConfig.Builder().build());
@@ -41,7 +40,6 @@ public void onCreateSession() {
             // throw new UnknownError("create session fail!");
 //            Toast.makeText(this, "create sonic session fail!", Toast.LENGTH_LONG).show();
         }
-
     }
 
     public SonicSessionClientImpl getSonicSessionClient(){

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebSettingsImpl.java
Patch:
@@ -42,10 +42,9 @@ public WebListenerManager setDownloader(WebView webView, DownloadListener downlo
             mDefaultDownloadImpl$Extra =
                     clazz.getDeclaredMethod("create", Activity.class, WebView.class,
                             Class.forName("com.just.agentweb.download.DownloadListener"),
-                            Class.forName("com.just.agentweb.download.DownloadingListener"),
                             PermissionInterceptor.class)
                             .invoke(mDefaultDownloadImpl$Extra, (Activity) webView.getContext()
-                                    , webView, null, null, mAgentWeb.getPermissionInterceptor());
+                                    , webView, null, mAgentWeb.getPermissionInterceptor());
 
         } catch (Throwable ignore) {
             if (LogUtils.isDebug()) {

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -102,7 +102,6 @@ public static int dp2px(Context context, float dipValue) {
 		return (int) (dipValue * scale + 0.5f);
 	}
 
-
 	static final void clearWebView(WebView m) {
 		if (m == null) {
 			return;
@@ -756,7 +755,6 @@ public static List<String> getDeniedPermissions(Activity activity, String[] perm
 		}
 		List<String> deniedPermissions = new ArrayList<>();
 		for (int i = 0; i < permissions.length; i++) {
-
 			if (!hasPermission(activity, permissions[i])) {
 				deniedPermissions.add(permissions[i]);
 			}

File: agentweb-core/src/main/java/com/just/agentweb/BaseIndicatorSpec.java
Patch:
@@ -23,9 +23,7 @@
  * @since 1.0.0
  */
 public interface BaseIndicatorSpec {
-    /**
-     * indicator
-     */
+
     void show();
 
     void hide();

File: agentweb-core/src/main/java/com/just/agentweb/LogUtils.java
Patch:
@@ -25,7 +25,7 @@
  */
 public class LogUtils {
 
-    private static final String PREFIX = " agentweb - "; //
+    private static final String PREFIX = " agentweb - ";
 
     public static boolean isDebug() {
         return AgentWebConfig.DEBUG;

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -205,6 +205,7 @@ private void doClick(int position) {
                 break;
             case FLAG_GUIDE_DICTIONARY_LINKAGE_WITH_TOOLBAR:
                 startActivity(new Intent(this, AutoHidenToolbarActivity.class));
+                break;
             case FLAG_GUIDE_DICTIONARY_COMMON_FILE_DOWNLOAD:
                 startActivity(new Intent(this, NativeDownloadActivity.class));
                 break;

File: sample/src/main/java/com/just/agentweb/sample/activity/WebActivity.java
Patch:
@@ -15,7 +15,6 @@ public String getUrl() {
 
     @Override
     protected void onStart() {
-
         super.onStart();
     }
 

File: sample/src/main/java/com/just/agentweb/sample/base/BaseAgentWebActivity.java
Patch:
@@ -11,9 +11,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.webkit.DownloadListener;
-import android.webkit.WebChromeClient;
 import android.webkit.WebView;
-import android.webkit.WebViewClient;
 
 import com.just.agentweb.AgentWeb;
 import com.just.agentweb.AgentWebSettingsImpl;
@@ -24,6 +22,8 @@
 import com.just.agentweb.MiddlewareWebChromeBase;
 import com.just.agentweb.MiddlewareWebClientBase;
 import com.just.agentweb.PermissionInterceptor;
+import com.just.agentweb.WebChromeClient;
+import com.just.agentweb.WebViewClient;
 
 /**
  * Created by cenxiaozhong on 2017/7/22.

File: sample/src/main/java/com/just/agentweb/sample/common/CommonWebChromeClient.java
Patch:
@@ -1,9 +1,10 @@
 package com.just.agentweb.sample.common;
 
 import android.util.Log;
-import android.webkit.WebChromeClient;
 import android.webkit.WebView;
 
+import com.just.agentweb.WebChromeClient;
+
 /**
  * @author cenxiaozhong
  * @date 2019/2/19
@@ -12,7 +13,7 @@
 public class CommonWebChromeClient extends WebChromeClient {
 	@Override
 	public void onProgressChanged(WebView view, int newProgress) {
-		//  super.onProgressChanged(view, newProgress);
+		  super.onProgressChanged(view, newProgress);
 		Log.i("CommonWebChromeClient", "onProgressChanged:" + newProgress + "  view:" + view);
 	}
 }

File: sample/src/main/java/com/just/agentweb/sample/sonic/SonicImpl.java
Patch:
@@ -29,7 +29,6 @@ public SonicImpl(String url , Context context){
      */
     public void onCreateSession() {
 
-
         SonicSessionConfig.Builder sessionConfigBuilder = new SonicSessionConfig.Builder();
         sessionConfigBuilder.setSupportLocalServer(true);
         SonicEngine.createInstance(new DefaultSonicRuntimeImpl(mContext.getApplicationContext()), new SonicConfig.Builder().build());
@@ -41,7 +40,6 @@ public void onCreateSession() {
             // throw new UnknownError("create session fail!");
 //            Toast.makeText(this, "create sonic session fail!", Toast.LENGTH_LONG).show();
         }
-
     }
 
     public SonicSessionClientImpl getSonicSessionClient(){

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -882,7 +882,6 @@ static boolean showFileChooserCompat(Activity activity,
             if (valueCallback != null) {
                 valueCallback.onReceiveValue(null);
             }
-            LogUtils.e(TAG, "api 'com.just.agentweb:filechooser:xxx'");
         }
         return true;
     }

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -882,7 +882,6 @@ static boolean showFileChooserCompat(Activity activity,
             if (valueCallback != null) {
                 valueCallback.onReceiveValue(null);
             }
-            LogUtils.e(TAG, "api 'com.just.agentweb:filechooser:xxx'");
         }
         return true;
     }

File: sample/src/main/java/com/just/agentweb/sample/fragment/EasyWebFragment.java
Patch:
@@ -29,7 +29,7 @@ public class EasyWebFragment extends BaseAgentWebFragment {
 
 	public static EasyWebFragment getInstance(Bundle bundle) {
 		EasyWebFragment mEasyWebFragment = new EasyWebFragment();
-		if (bundle == null) {
+		if (bundle != null) {
 			mEasyWebFragment.setArguments(bundle);
 		}
 		return mEasyWebFragment;

File: sample/src/main/java/com/just/agentweb/sample/fragment/EasyWebFragment.java
Patch:
@@ -29,7 +29,7 @@ public class EasyWebFragment extends BaseAgentWebFragment {
 
 	public static EasyWebFragment getInstance(Bundle bundle) {
 		EasyWebFragment mEasyWebFragment = new EasyWebFragment();
-		if (bundle == null) {
+		if (bundle != null) {
 			mEasyWebFragment.setArguments(bundle);
 		}
 		return mEasyWebFragment;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: agentweb-core/src/main/java/com/just/agentweb/Action.java
Patch:
@@ -33,6 +33,7 @@ public class Action implements Parcelable {
 	public transient static final int ACTION_PERMISSION = 1;
 	public transient static final int ACTION_FILE = 2;
 	public transient static final int ACTION_CAMERA = 3;
+	public transient static final int ACTION_VIDEO = 4;
 	private ArrayList<String> mPermissions = new ArrayList();
 	private int mAction;
 	private int mFromIntention;

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -205,6 +205,7 @@ private void doClick(int position) {
                 break;
             case FLAG_GUIDE_DICTIONARY_LINKAGE_WITH_TOOLBAR:
                 startActivity(new Intent(this, AutoHidenToolbarActivity.class));
+                break;
             case FLAG_GUIDE_DICTIONARY_COMMON_FILE_DOWNLOAD:
                 startActivity(new Intent(this, NativeDownloadActivity.class));
                 break;

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -205,6 +205,7 @@ private void doClick(int position) {
                 break;
             case FLAG_GUIDE_DICTIONARY_LINKAGE_WITH_TOOLBAR:
                 startActivity(new Intent(this, AutoHidenToolbarActivity.class));
+                break;
             case FLAG_GUIDE_DICTIONARY_COMMON_FILE_DOWNLOAD:
                 startActivity(new Intent(this, NativeDownloadActivity.class));
                 break;

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -98,7 +98,7 @@ void initBuilder(DownloadTask downloadTask) {
 			title = "..." + title.substring(title.length() - 20, title.length());
 		}
 		mBuilder.setContentIntent(PendingIntent.getActivity(mContext, 200, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT));
-		mBuilder.setSmallIcon(downloadTask.getDrawableRes());
+		mBuilder.setSmallIcon(downloadTask.getIcon());
 		mBuilder.setTicker(mContext.getString(R.string.agentweb_trickter));
 		mBuilder.setContentTitle(title);
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_coming_soon_download));

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -190,7 +190,7 @@ private boolean checkNet() {
 	protected Integer doInBackground(Void... params) {
 		int result = ERROR_LOAD;
 		String name = Thread.currentThread().getName();
-		Thread.currentThread().setName("pool-agentweb-thread-" + ThreadConfig.THREAD_GLOBAL_COUNTER.getAndIncrement());
+		Thread.currentThread().setName("pool-agentweb-thread-" + Config.THREAD_GLOBAL_COUNTER.getAndIncrement());
 		try {
 			this.mBeginTime = SystemClock.elapsedRealtime();
 			if (!checkSpace()) {

File: agentweb-download/src/main/java/com/just/agentweb/download/ExtraServiceImpl.java
Patch:
@@ -102,6 +102,7 @@ protected ExtraServiceImpl setContentLength(long contentLength) {
 
 	ExtraServiceImpl setActivity(Activity activity) {
 		mActivity = activity;
+		this.setContext(mActivity);
 		return this;
 	}
 

File: sample/src/main/java/com/just/agentweb/sample/common/CustomSettings.java
Patch:
@@ -51,6 +51,6 @@ public WebListenerManager setDownloader(WebView webView, DownloadListener downlo
         return super.setDownloader(webView,
                 DefaultDownloadImpl.create((Activity) webView.getContext()
                         , webView, null,
-                        null, mAgentWeb.getPermissionInterceptor()));
+                         mAgentWeb.getPermissionInterceptor()));
     }
 }

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -98,7 +98,7 @@ void initBuilder(DownloadTask downloadTask) {
 			title = "..." + title.substring(title.length() - 20, title.length());
 		}
 		mBuilder.setContentIntent(PendingIntent.getActivity(mContext, 200, new Intent(), PendingIntent.FLAG_UPDATE_CURRENT));
-		mBuilder.setSmallIcon(downloadTask.getDrawableRes());
+		mBuilder.setSmallIcon(downloadTask.getIcon());
 		mBuilder.setTicker(mContext.getString(R.string.agentweb_trickter));
 		mBuilder.setContentTitle(title);
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_coming_soon_download));

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -190,7 +190,7 @@ private boolean checkNet() {
 	protected Integer doInBackground(Void... params) {
 		int result = ERROR_LOAD;
 		String name = Thread.currentThread().getName();
-		Thread.currentThread().setName("pool-agentweb-thread-" + ThreadConfig.THREAD_GLOBAL_COUNTER.getAndIncrement());
+		Thread.currentThread().setName("pool-agentweb-thread-" + Config.THREAD_GLOBAL_COUNTER.getAndIncrement());
 		try {
 			this.mBeginTime = SystemClock.elapsedRealtime();
 			if (!checkSpace()) {

File: agentweb-download/src/main/java/com/just/agentweb/download/ExtraServiceImpl.java
Patch:
@@ -102,6 +102,7 @@ protected ExtraServiceImpl setContentLength(long contentLength) {
 
 	ExtraServiceImpl setActivity(Activity activity) {
 		mActivity = activity;
+		this.setContext(mActivity);
 		return this;
 	}
 

File: sample/src/main/java/com/just/agentweb/sample/common/CustomSettings.java
Patch:
@@ -51,6 +51,6 @@ public WebListenerManager setDownloader(WebView webView, DownloadListener downlo
         return super.setDownloader(webView,
                 DefaultDownloadImpl.create((Activity) webView.getContext()
                         , webView, null,
-                        null, mAgentWeb.getPermissionInterceptor()));
+                         mAgentWeb.getPermissionInterceptor()));
     }
 }

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -42,7 +42,7 @@
  */
 public final class AgentWeb {
 	/**
-	 * AgentWeb TAG
+	 * AgentWeb 's TAG
 	 */
 	private static final String TAG = AgentWeb.class.getSimpleName();
 	/**

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -324,7 +324,7 @@ private HttpURLConnection createUrlConnectionAndSettingHeaders(URL url) throws I
 		mHttpURLConnection.setRequestProperty("Connection", "close");
 		mHttpURLConnection.setRequestProperty("Cookie", AgentWebConfig.getCookiesByUrl(url.toString()));
 		Map<String, String> mHeaders = null;
-		if (null != (mHeaders = mDownloadTask.getExtraServiceImpl().getHeaders()) &&
+		if ((null != mDownloadTask.getExtraServiceImpl()) && null != (mHeaders = mDownloadTask.getExtraServiceImpl().getHeaders()) &&
 				!mHeaders.isEmpty()) {
 			for (Map.Entry<String, String> entry : mHeaders.entrySet()) {
 				if (TextUtils.isEmpty(entry.getKey()) || TextUtils.isEmpty(entry.getValue())) {

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -42,7 +42,7 @@
  */
 public final class AgentWeb {
 	/**
-	 * AgentWeb TAG
+	 * AgentWeb 's TAG
 	 */
 	private static final String TAG = AgentWeb.class.getSimpleName();
 	/**

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -324,7 +324,7 @@ private HttpURLConnection createUrlConnectionAndSettingHeaders(URL url) throws I
 		mHttpURLConnection.setRequestProperty("Connection", "close");
 		mHttpURLConnection.setRequestProperty("Cookie", AgentWebConfig.getCookiesByUrl(url.toString()));
 		Map<String, String> mHeaders = null;
-		if (null != (mHeaders = mDownloadTask.getExtraServiceImpl().getHeaders()) &&
+		if ((null != mDownloadTask.getExtraServiceImpl()) && null != (mHeaders = mDownloadTask.getExtraServiceImpl().getHeaders()) &&
 				!mHeaders.isEmpty()) {
 			for (Map.Entry<String, String> entry : mHeaders.entrySet()) {
 				if (TextUtils.isEmpty(entry.getKey()) || TextUtils.isEmpty(entry.getValue())) {

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -222,7 +222,7 @@ public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request
 			return true;
 		}
 
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept url:" + url);
 			return true;
 		}
@@ -247,7 +247,7 @@ public void onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, Str
 		super.onReceivedHttpAuthRequest(view, handler, host, realm);
 	}
 
-	private boolean urlOpenWays(String url) {
+	private boolean deepLink(String url) {
 
 		switch (mUrlHandleWays) {
 			// 直接打开其他App
@@ -310,7 +310,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 			return true;
 		}
 		//打开url 相对应的页面
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept OtherAppScheme");
 			return true;
 		}

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -222,7 +222,7 @@ public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request
 			return true;
 		}
 
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept url:" + url);
 			return true;
 		}
@@ -247,7 +247,7 @@ public void onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, Str
 		super.onReceivedHttpAuthRequest(view, handler, host, realm);
 	}
 
-	private boolean urlOpenWays(String url) {
+	private boolean deepLink(String url) {
 
 		switch (mUrlHandleWays) {
 			// 直接打开其他App
@@ -310,7 +310,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 			return true;
 		}
 		//打开url 相对应的页面
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept OtherAppScheme");
 			return true;
 		}

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -222,7 +222,7 @@ public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request
 			return true;
 		}
 
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept url:" + url);
 			return true;
 		}
@@ -247,7 +247,7 @@ public void onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, Str
 		super.onReceivedHttpAuthRequest(view, handler, host, realm);
 	}
 
-	private boolean urlOpenWays(String url) {
+	private boolean deepLink(String url) {
 
 		switch (mUrlHandleWays) {
 			// 直接打开其他App
@@ -310,7 +310,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 			return true;
 		}
 		//打开url 相对应的页面
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept OtherAppScheme");
 			return true;
 		}

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -222,7 +222,7 @@ public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request
 			return true;
 		}
 
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept url:" + url);
 			return true;
 		}
@@ -247,7 +247,7 @@ public void onReceivedHttpAuthRequest(WebView view, HttpAuthHandler handler, Str
 		super.onReceivedHttpAuthRequest(view, handler, host, realm);
 	}
 
-	private boolean urlOpenWays(String url) {
+	private boolean deepLink(String url) {
 
 		switch (mUrlHandleWays) {
 			// 直接打开其他App
@@ -310,7 +310,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 			return true;
 		}
 		//打开url 相对应的页面
-		if (queryActiviesNumber(url) > 0 && urlOpenWays(url)) {
+		if (queryActiviesNumber(url) > 0 && deepLink(url)) {
 			LogUtils.i(TAG, "intercept OtherAppScheme");
 			return true;
 		}

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -137,6 +137,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 		//mAgentWeb.getWebCreator().getWebView()  获取WebView .
 
 
+
 //		mAgentWeb.getWebCreator().getWebView().setOnLongClickListener();
 
 	}

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -137,6 +137,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 		//mAgentWeb.getWebCreator().getWebView()  获取WebView .
 
 
+
 //		mAgentWeb.getWebCreator().getWebView().setOnLongClickListener();
 
 	}

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -460,8 +460,8 @@ static ExecuteTasksMap getInstance() {
 
 		void removeTask(String path) {
 
+			writeLock().lock();
 			try {
-				writeLock().lock();
 				int position = -1;
 				if ((position = mTasks.indexOf(path)) == -1) {
 					return;
@@ -476,8 +476,8 @@ void removeTask(String path) {
 
 		void addTask(String url, String path) {
 
+			writeLock().lock();
 			try {
-				writeLock().lock();
 				mTasks.add(url);
 				mTasks.add(path);
 			} finally {
@@ -488,8 +488,8 @@ void addTask(String url, String path) {
 		// 加锁读
 		boolean contains(String url) {
 
+			readLock().lock();
 			try {
-				readLock().lock();
 				return mTasks.contains(url);
 			} finally {
 				readLock().unlock();

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -460,8 +460,8 @@ static ExecuteTasksMap getInstance() {
 
 		void removeTask(String path) {
 
+			writeLock().lock();
 			try {
-				writeLock().lock();
 				int position = -1;
 				if ((position = mTasks.indexOf(path)) == -1) {
 					return;
@@ -476,8 +476,8 @@ void removeTask(String path) {
 
 		void addTask(String url, String path) {
 
+			writeLock().lock();
 			try {
-				writeLock().lock();
 				mTasks.add(url);
 				mTasks.add(path);
 			} finally {
@@ -488,8 +488,8 @@ void addTask(String url, String path) {
 		// 加锁读
 		boolean contains(String url) {
 
+			readLock().lock();
 			try {
-				readLock().lock();
 				return mTasks.contains(url);
 			} finally {
 				readLock().unlock();

File: agentweb-filechooser/src/main/java/com/just/agentweb/filechooser/FileChooser.java
Patch:
@@ -770,6 +770,7 @@ static class CovertFileThread extends Thread {
 		private String[] paths;
 
 		private CovertFileThread(JsChannelCallback JsChannelCallback, String[] paths) {
+			super("agentweb-thread");
 			this.mJsChannelCallback = new WeakReference<JsChannelCallback>(JsChannelCallback);
 			this.paths = paths;
 		}

File: agentweb-filechooser/src/main/java/com/just/agentweb/filechooser/FileChooser.java
Patch:
@@ -770,6 +770,7 @@ static class CovertFileThread extends Thread {
 		private String[] paths;
 
 		private CovertFileThread(JsChannelCallback JsChannelCallback, String[] paths) {
+			super("agentweb-thread");
 			this.mJsChannelCallback = new WeakReference<JsChannelCallback>(JsChannelCallback);
 			this.paths = paths;
 		}

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -108,7 +108,7 @@ void initBuilder(DownloadTask downloadTask) {
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_coming_soon_download));
 		mBuilder.setWhen(System.currentTimeMillis());
 		mBuilder.setAutoCancel(true);
-		mBuilder.setPriority(NotificationCompat.PRIORITY_MAX);
+		mBuilder.setPriority(NotificationCompat.PRIORITY_LOW);
 		int defaults = 0;
 		this.mUrl = downloadTask.getUrl();
 		this.mFile = downloadTask.getFile();

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -108,7 +108,7 @@ void initBuilder(DownloadTask downloadTask) {
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_coming_soon_download));
 		mBuilder.setWhen(System.currentTimeMillis());
 		mBuilder.setAutoCancel(true);
-		mBuilder.setPriority(NotificationCompat.PRIORITY_MAX);
+		mBuilder.setPriority(NotificationCompat.PRIORITY_LOW);
 		int defaults = 0;
 		this.mUrl = downloadTask.getUrl();
 		this.mFile = downloadTask.getFile();

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -68,7 +68,7 @@ public class AgentWebConfig {
 	/**
 	 * AgentWeb 的版本
 	 */
-	public static final String AGENTWEB_VERSION = " agentweb/4.0.1 ";
+	public static final String AGENTWEB_VERSION = " agentweb/4.0.2 ";
 
 	public static final String AGENTWEB_NAME="AgentWeb";
 	/**

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -232,7 +232,6 @@ private int doDownload() throws IOException {
 						mHttpURLConnection.getHeaderField("Transfer-Encoding"));
 				long tmpLength = -1;
 				final boolean hasLength = ((tmpLength = getHeaderFieldLong(mHttpURLConnection, "Content-Length")) == -1);
-				LogUtils.i(TAG, "content-length:" + this.mTotals + "  code:" + mHttpURLConnection.getResponseCode() + " tmpLength:" + tmpLength);
 				// 获取不到文件长度
 				final boolean finishKnown = isEncodingChunked || hasLength;
 				if (finishKnown) {
@@ -251,6 +250,7 @@ private int doDownload() throws IOException {
 								new LoadingRandomAccessFile(mDownloadTask.getFile()),
 								false);
 					case HTTP_PARTIAL:
+						// 服务端响应文件长度不正确，或者本地文件长度被修改。
 						if (tmpLength + mDownloadTask.getFile().length() != this.mTotals) {
 							return ERROR_LOAD;
 						}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -68,7 +68,7 @@ public class AgentWebConfig {
 	/**
 	 * AgentWeb 的版本
 	 */
-	public static final String AGENTWEB_VERSION = " agentweb/4.0.1 ";
+	public static final String AGENTWEB_VERSION = " agentweb/4.0.2 ";
 
 	public static final String AGENTWEB_NAME="AgentWeb";
 	/**

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -232,7 +232,6 @@ private int doDownload() throws IOException {
 						mHttpURLConnection.getHeaderField("Transfer-Encoding"));
 				long tmpLength = -1;
 				final boolean hasLength = ((tmpLength = getHeaderFieldLong(mHttpURLConnection, "Content-Length")) == -1);
-				LogUtils.i(TAG, "content-length:" + this.mTotals + "  code:" + mHttpURLConnection.getResponseCode() + " tmpLength:" + tmpLength);
 				// 获取不到文件长度
 				final boolean finishKnown = isEncodingChunked || hasLength;
 				if (finishKnown) {
@@ -251,6 +250,7 @@ private int doDownload() throws IOException {
 								new LoadingRandomAccessFile(mDownloadTask.getFile()),
 								false);
 					case HTTP_PARTIAL:
+						// 服务端响应文件长度不正确，或者本地文件长度被修改。
 						if (tmpLength + mDownloadTask.getFile().length() != this.mTotals) {
 							return ERROR_LOAD;
 						}

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -185,7 +185,7 @@ public boolean onStart(String url, String userAgent, String contentDisposition,
 					.setEnableIndicator(true)  // false 关闭进度通知
 					.addHeader("Cookie", "xx") // 自定义请求头
 					.setAutoOpen(true) // 下载完成自动打开
-					.setForceDownload(false); // 强制下载，不管网络网络类型
+					.setForceDownload(true); // 强制下载，不管网络网络类型
 			return false;
 		}
 
@@ -517,7 +517,7 @@ public boolean onMenuItemClick(MenuItem item) {
 				case R.id.error_website:
 					loadErrorWebSite();
 					// test DownloadingService
-	                /*LogUtils.i(TAG, " :" + mDownloadingService + "  " + (mDownloadingService == null ? "" : mDownloadingService.isShutdown()) + "  :" + mExtraService);
+		            /*LogUtils.i(TAG, " :" + mDownloadingService + "  " + (mDownloadingService == null ? "" : mDownloadingService.isShutdown()) + "  :" + mExtraService);
                     if (mDownloadingService != null && !mDownloadingService.isShutdown()) {
                         mExtraService = mDownloadingService.shutdownNow();
                         LogUtils.i(TAG, "mExtraService::" + mExtraService);

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -185,7 +185,7 @@ public boolean onStart(String url, String userAgent, String contentDisposition,
 					.setEnableIndicator(true)  // false 关闭进度通知
 					.addHeader("Cookie", "xx") // 自定义请求头
 					.setAutoOpen(true) // 下载完成自动打开
-					.setForceDownload(false); // 强制下载，不管网络网络类型
+					.setForceDownload(true); // 强制下载，不管网络网络类型
 			return false;
 		}
 
@@ -517,7 +517,7 @@ public boolean onMenuItemClick(MenuItem item) {
 				case R.id.error_website:
 					loadErrorWebSite();
 					// test DownloadingService
-	                /*LogUtils.i(TAG, " :" + mDownloadingService + "  " + (mDownloadingService == null ? "" : mDownloadingService.isShutdown()) + "  :" + mExtraService);
+		            /*LogUtils.i(TAG, " :" + mDownloadingService + "  " + (mDownloadingService == null ? "" : mDownloadingService.isShutdown()) + "  :" + mExtraService);
                     if (mDownloadingService != null && !mDownloadingService.isShutdown()) {
                         mExtraService = mDownloadingService.shutdownNow();
                         LogUtils.i(TAG, "mExtraService::" + mExtraService);

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -39,7 +39,7 @@ abstract class Extra implements Serializable {
 		protected boolean mIsForceDownload = false;
 		protected boolean mEnableIndicator = true;
 		@DrawableRes
-		protected int mIcon = -1;
+		protected int mIcon = R.drawable.ic_file_download_black_24dp;
 		protected boolean mIsParallelDownload = true;
 		protected boolean mIsOpenBreakPointDownload = true;
 		protected String mUrl;
@@ -69,7 +69,7 @@ public Extra setHeaders(Map<String, String> headers) {
 		// 连接超时， 默认10s
 		protected int connectTimeOut = 10 * 1000;
 		/**
-		 * 以8KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
+		 * 以8KB位单位，默认60s ，如果60s内无法从网络流中读满8KB数据，则抛出异常 。
 		 */
 		protected int blockMaxTime = 10 * 60 * 1000;
 

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -39,7 +39,7 @@ abstract class Extra implements Serializable {
 		protected boolean mIsForceDownload = false;
 		protected boolean mEnableIndicator = true;
 		@DrawableRes
-		protected int mIcon = -1;
+		protected int mIcon = R.drawable.ic_file_download_black_24dp;
 		protected boolean mIsParallelDownload = true;
 		protected boolean mIsOpenBreakPointDownload = true;
 		protected String mUrl;
@@ -69,7 +69,7 @@ public Extra setHeaders(Map<String, String> headers) {
 		// 连接超时， 默认10s
 		protected int connectTimeOut = 10 * 1000;
 		/**
-		 * 以8KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
+		 * 以8KB位单位，默认60s ，如果60s内无法从网络流中读满8KB数据，则抛出异常 。
 		 */
 		protected int blockMaxTime = 10 * 60 * 1000;
 

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -69,7 +69,7 @@ public Extra setHeaders(Map<String, String> headers) {
 		// 连接超时， 默认10s
 		protected int connectTimeOut = 10 * 1000;
 		/**
-		 * 以1KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
+		 * 以8KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
 		 */
 		protected int blockMaxTime = 10 * 60 * 1000;
 
@@ -172,7 +172,7 @@ public boolean isOpenBreakPointDownload() {
 			return mIsOpenBreakPointDownload;
 		}
 
-		public Extra setopenbreakpointdownload(boolean openBreakPointDownload) {
+		public Extra setOpenBreakPointDownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -652,7 +652,7 @@ public ExtraServiceImpl setParallelDownload(boolean parallelDownload) {
 		}
 
 		@Override
-		public ExtraServiceImpl setopenbreakpointdownload(boolean openBreakPointDownload) {
+		public ExtraServiceImpl setOpenBreakPointDownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -221,7 +221,7 @@ private int doDownload() throws IOException {
 		HttpURLConnection mHttpURLConnection = null;
 		try {
 
-			for (; redirectionCount++ < MAX_REDIRECTS; ) {
+			for (; redirectionCount++ <= MAX_REDIRECTS; ) {
 				if (null != mHttpURLConnection) {
 					mHttpURLConnection.disconnect();
 				}

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -69,7 +69,7 @@ public Extra setHeaders(Map<String, String> headers) {
 		// 连接超时， 默认10s
 		protected int connectTimeOut = 10 * 1000;
 		/**
-		 * 以1KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
+		 * 以8KB位单位，默认60s ， 如果一秒钟无法从网络中读取数据满1KB，则抛出异常 。
 		 */
 		protected int blockMaxTime = 10 * 60 * 1000;
 
@@ -172,7 +172,7 @@ public boolean isOpenBreakPointDownload() {
 			return mIsOpenBreakPointDownload;
 		}
 
-		public Extra setopenbreakpointdownload(boolean openBreakPointDownload) {
+		public Extra setOpenBreakPointDownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -652,7 +652,7 @@ public ExtraServiceImpl setParallelDownload(boolean parallelDownload) {
 		}
 
 		@Override
-		public ExtraServiceImpl setopenbreakpointdownload(boolean openBreakPointDownload) {
+		public ExtraServiceImpl setOpenBreakPointDownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -221,7 +221,7 @@ private int doDownload() throws IOException {
 		HttpURLConnection mHttpURLConnection = null;
 		try {
 
-			for (; redirectionCount++ < MAX_REDIRECTS; ) {
+			for (; redirectionCount++ <= MAX_REDIRECTS; ) {
 				if (null != mHttpURLConnection) {
 					mHttpURLConnection.disconnect();
 				}

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -156,7 +156,7 @@ public final class AgentWeb {
 	/**
 	 * 该变量控制了是否咨询用户页面跳转，或者直接拦截
 	 */
-	private int mOpenOtherAppWays = -1;
+	private int mUrlHandleWays = -1;
 	/**
 	 * MiddlewareWebClientBase WebViewClient 中间件
 	 */
@@ -206,7 +206,7 @@ private AgentWeb(AgentBuilder agentBuilder) {
 		this.mWebClientHelper = agentBuilder.mWebClientHelper;
 		this.mIsInterceptUnkownScheme = agentBuilder.mIsInterceptUnkownScheme;
 		if (agentBuilder.mOpenOtherPage != null) {
-			this.mOpenOtherAppWays = agentBuilder.mOpenOtherPage.code;
+			this.mUrlHandleWays = agentBuilder.mOpenOtherPage.code;
 		}
 		this.mMiddleWrareWebClientBaseHeader = agentBuilder.mMiddlewareWebClientBaseHeader;
 		this.mMiddlewareWebChromeBaseHeader = agentBuilder.mChromeMiddleWareHeader;
@@ -407,7 +407,7 @@ private WebViewClient getWebViewClient() {
 				.setPermissionInterceptor(this.mPermissionInterceptor)
 				.setWebView(this.mWebCreator.getWebView())
 				.setInterceptUnkownScheme(this.mIsInterceptUnkownScheme)
-				.setSchemeHandleType(this.mOpenOtherAppWays)
+				.setUrlHandleWays(this.mUrlHandleWays)
 				.build();
 		MiddlewareWebClientBase header = this.mMiddleWrareWebClientBaseHeader;
 		if (header != null) {

File: agentweb-download/src/main/java/com/just/agentweb/download/ExecutorProvider.java
Patch:
@@ -1,6 +1,5 @@
 package com.just.agentweb.download;
 
-import com.just.agentweb.LogUtils;
 import com.just.agentweb.Provider;
 
 import java.util.concurrent.BlockingQueue;
@@ -39,8 +38,6 @@ public Thread newThread(Runnable r) {
                 mThread.setDaemon(false);
             }
             mThread.setPriority(Thread.MIN_PRIORITY);
-            LogUtils.i(TAG, "Thread Name:" + mThread.getName());
-            LogUtils.i(TAG, "live:" + mThreadPoolExecutor.getActiveCount() + "    getCorePoolSize:" + mThreadPoolExecutor.getCorePoolSize() + "  getPoolSize:" + mThreadPoolExecutor.getPoolSize());
             return mThread;
         }
     };

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -156,7 +156,7 @@ public final class AgentWeb {
 	/**
 	 * 该变量控制了是否咨询用户页面跳转，或者直接拦截
 	 */
-	private int mOpenOtherAppWays = -1;
+	private int mUrlHandleWays = -1;
 	/**
 	 * MiddlewareWebClientBase WebViewClient 中间件
 	 */
@@ -206,7 +206,7 @@ private AgentWeb(AgentBuilder agentBuilder) {
 		this.mWebClientHelper = agentBuilder.mWebClientHelper;
 		this.mIsInterceptUnkownScheme = agentBuilder.mIsInterceptUnkownScheme;
 		if (agentBuilder.mOpenOtherPage != null) {
-			this.mOpenOtherAppWays = agentBuilder.mOpenOtherPage.code;
+			this.mUrlHandleWays = agentBuilder.mOpenOtherPage.code;
 		}
 		this.mMiddleWrareWebClientBaseHeader = agentBuilder.mMiddlewareWebClientBaseHeader;
 		this.mMiddlewareWebChromeBaseHeader = agentBuilder.mChromeMiddleWareHeader;
@@ -407,7 +407,7 @@ private WebViewClient getWebViewClient() {
 				.setPermissionInterceptor(this.mPermissionInterceptor)
 				.setWebView(this.mWebCreator.getWebView())
 				.setInterceptUnkownScheme(this.mIsInterceptUnkownScheme)
-				.setSchemeHandleType(this.mOpenOtherAppWays)
+				.setUrlHandleWays(this.mUrlHandleWays)
 				.build();
 		MiddlewareWebClientBase header = this.mMiddleWrareWebClientBaseHeader;
 		if (header != null) {

File: agentweb-download/src/main/java/com/just/agentweb/download/ExecutorProvider.java
Patch:
@@ -1,6 +1,5 @@
 package com.just.agentweb.download;
 
-import com.just.agentweb.LogUtils;
 import com.just.agentweb.Provider;
 
 import java.util.concurrent.BlockingQueue;
@@ -39,8 +38,6 @@ public Thread newThread(Runnable r) {
                 mThread.setDaemon(false);
             }
             mThread.setPriority(Thread.MIN_PRIORITY);
-            LogUtils.i(TAG, "Thread Name:" + mThread.getName());
-            LogUtils.i(TAG, "live:" + mThreadPoolExecutor.getActiveCount() + "    getCorePoolSize:" + mThreadPoolExecutor.getCorePoolSize() + "  getPoolSize:" + mThreadPoolExecutor.getPoolSize());
             return mThread;
         }
     };

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -172,7 +172,7 @@ public boolean isOpenBreakPointDownload() {
 			return mIsOpenBreakPointDownload;
 		}
 
-		public Extra setOpenBreakPointDownload(boolean openBreakPointDownload) {
+		public Extra setopenbreakpointdownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -94,7 +94,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
 			Log.i("Info", "release 模式");
 		}
 
-//		AgentWebConfig.debug();
+		AgentWebConfig.debug();
 	}
 
 	private void doClick(int position) {

File: agentweb-download/src/main/java/com/just/agentweb/download/AgentWebDownloader.java
Patch:
@@ -172,7 +172,7 @@ public boolean isOpenBreakPointDownload() {
 			return mIsOpenBreakPointDownload;
 		}
 
-		public Extra setOpenBreakPointDownload(boolean openBreakPointDownload) {
+		public Extra setopenbreakpointdownload(boolean openBreakPointDownload) {
 			mIsOpenBreakPointDownload = openBreakPointDownload;
 			return this;
 		}

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -94,7 +94,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
 			Log.i("Info", "release 模式");
 		}
 
-//		AgentWebConfig.debug();
+		AgentWebConfig.debug();
 	}
 
 	private void doClick(int position) {

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -68,7 +68,7 @@ public class AgentWebConfig {
 	/**
 	 * AgentWeb 的版本
 	 */
-	public static final String AGENTWEB_VERSION = " agentweb/4.0.0 ";
+	public static final String AGENTWEB_VERSION = " agentweb/4.0.1 ";
 
 	public static final String AGENTWEB_NAME="AgentWeb";
 	/**

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -68,7 +68,7 @@ public class AgentWebConfig {
 	/**
 	 * AgentWeb 的版本
 	 */
-	public static final String AGENTWEB_VERSION = " agentweb/4.0.0 ";
+	public static final String AGENTWEB_VERSION = " agentweb/4.0.1 ";
 
 	public static final String AGENTWEB_NAME="AgentWeb";
 	/**

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -45,7 +45,7 @@ public class AgentWebConfig {
 	/**
 	 * DEBUG 模式 ， 如果需要查看日志请设置为 true
 	 */
-	public static boolean DEBUG = true;
+	public static boolean DEBUG = false;
 	/**
 	 * 当前操作系统是否低于 KITKAT
 	 */

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -167,10 +167,11 @@ void onDownloading(int progress) {
 		}
 		if (!mAddedCancelAction) {
 			mAddedCancelAction = true;
-			mAction = new NotificationCompat.Action(-1,
+			mAction = new NotificationCompat.Action(R.drawable.ic_cancel_black_24dp,
 					mContext.getString(android.R.string.cancel),
 					buildCancelContent(mContext, mNotificationId, mUrl));
 			mBuilder.addAction(mAction);
+
 		}
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_current_downloading_progress, (progress + "%")));
 		this.setProgress(100, progress, false);

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -94,6 +94,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
 			Log.i("Info", "release 模式");
 		}
 
+//		AgentWebConfig.debug();
 	}
 
 	private void doClick(int position) {

File: sample/src/main/java/com/just/agentweb/sample/activity/WebActivity.java
Patch:
@@ -6,7 +6,6 @@
  *
  */
 
-
 public class WebActivity extends BaseWebActivity {
 
     @Override

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -45,7 +45,7 @@ public class AgentWebConfig {
 	/**
 	 * DEBUG 模式 ， 如果需要查看日志请设置为 true
 	 */
-	public static boolean DEBUG = true;
+	public static boolean DEBUG = false;
 	/**
 	 * 当前操作系统是否低于 KITKAT
 	 */

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadNotifier.java
Patch:
@@ -167,10 +167,11 @@ void onDownloading(int progress) {
 		}
 		if (!mAddedCancelAction) {
 			mAddedCancelAction = true;
-			mAction = new NotificationCompat.Action(-1,
+			mAction = new NotificationCompat.Action(R.drawable.ic_cancel_black_24dp,
 					mContext.getString(android.R.string.cancel),
 					buildCancelContent(mContext, mNotificationId, mUrl));
 			mBuilder.addAction(mAction);
+
 		}
 		mBuilder.setContentText(mContext.getString(R.string.agentweb_current_downloading_progress, (progress + "%")));
 		this.setProgress(100, progress, false);

File: sample/src/main/java/com/just/agentweb/sample/activity/MainActivity.java
Patch:
@@ -94,6 +94,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
 			Log.i("Info", "release 模式");
 		}
 
+//		AgentWebConfig.debug();
 	}
 
 	private void doClick(int position) {

File: sample/src/main/java/com/just/agentweb/sample/activity/WebActivity.java
Patch:
@@ -6,7 +6,6 @@
  *
  */
 
-
 public class WebActivity extends BaseWebActivity {
 
     @Override

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebJsInterfaceCompat.java
Patch:
@@ -45,7 +45,9 @@ public void uploadFile(String acceptType) {
                         @Override
                         public boolean handleMessage(Message msg) {
                             if (mReference.get() != null) {
-                                mReference.get().getJsAccessEntrace().quickCallJs("uploadFileResult", msg.obj instanceof String ? (String) msg.obj : null);
+                                mReference.get().getJsAccessEntrace()
+                                        .quickCallJs("uploadFileResult",
+                                                msg.obj instanceof String ? (String) msg.obj : null);
                             }
                             return true;
                         }

File: sample/src/main/java/com/just/agentweb/sample/common/CustomSettings.java
Patch:
@@ -15,7 +15,7 @@
  * Created by cenxiaozhong on 2017/5/26.
  * source code  https://github.com/Justson/AgentWeb
  */
-
+//WebDefaultSettingsManager 重命名为 AbsAgentWebSettings 并且抽象出bindAgentWebSupport方法
 public class CustomSettings extends AbsAgentWebSettings {
     public CustomSettings() {
         super();

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -107,9 +107,9 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .setMainFrameErrorView(R.layout.agentweb_error_page, -1) //参数1是错误显示的布局，参数2点击刷新控件ID -1表示点击整个布局都刷新， AgentWeb 3.0.0 加入。
                 .useMiddlewareWebChrome(getMiddlewareWebChrome()) //设置WebChromeClient中间件，支持多个WebChromeClient，AgentWeb 3.0.0 加入。
                 .useMiddlewareWebClient(getMiddlewareWebClient()) //设置WebViewClient中间件，支持多个WebViewClient， AgentWeb 3.0.0 加入。
-//                .setDownloadListener(mDownloadListener) 4.0 删除该API//下载回调
-//                .openParallelDownload()// 4.0.0删除该api 打开并行下载 , 默认串行下载。
-//                .setNotifyIcon(R.drawable.ic_file_download_black_24dp) 4.0.0删除该api //下载通知图标。
+//                .setDownloadListener(mDownloadListener) 4.0.0 删除该API//下载回调
+//                .openParallelDownload()// 4.0.0删除该api 打开并行下载 , 默认串行下载。 请通过AgentWebDownloader#Extra实现并行下载
+//                .setNotifyIcon(R.drawable.ic_file_download_black_24dp) 4.0.0删除该api //下载通知图标。4.0.0后的版本请通过AgentWebDownloader#Extra修改icon
                 .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.DISALLOW)//打开其他页面时，弹窗质询用户前往其他应用 AgentWeb 3.0.0 加入。
                 .interceptUnkownUrl() //拦截找不到相关页面的Url AgentWeb 3.0.0 加入。
                 .createAgentWeb()//创建AgentWeb。

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadTask.java
Patch:
@@ -172,7 +172,7 @@ public void destroy() {
     }
 
     @Override
-    public long getConnectTimeOut() {
+    public int getConnectTimeOut() {
         return mExtraServiceImpl.get().getConnectTimeOut();
     }
 

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -433,8 +433,8 @@ private AgentWeb ready() {
             this.mAgentWebSettings = mAgentWebSettings = AgentWebSettingsImpl.getInstance();
         }
 
-        if (mAgentWebSettings instanceof AgentWebSettingsImpl) {
-            ((AgentWebSettingsImpl) mAgentWebSettings).bindAgentWeb(this);
+        if (mAgentWebSettings instanceof AbsAgentWebSettings) {
+            ((AbsAgentWebSettings) mAgentWebSettings).bindAgentWeb(this);
         }
         if (mWebListenerManager == null && mAgentWebSettings instanceof AbsAgentWebSettings) {
             mWebListenerManager = (WebListenerManager) mAgentWebSettings;

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -43,7 +43,6 @@ public class DefaultDownloadImpl extends DownloadListenerAdapter implements andr
     private Context mContext;
     private volatile static AtomicInteger NOTICATION_ID = new AtomicInteger(1);
     private DownloadListener mDownloadListener;
-    private DownloadingListener mDownloadingListener;
     private WeakReference<Activity> mActivityWeakReference = null;
     private static final String TAG = DefaultDownloadImpl.class.getSimpleName();
     private PermissionInterceptor mPermissionListener = null;
@@ -55,6 +54,7 @@ public class DefaultDownloadImpl extends DownloadListenerAdapter implements andr
     private ExtraServiceImpl mExtraServiceImpl;
     private String userAgent;
     private ExtraServiceImpl mCloneExtraServiceImpl = null;
+    private DownloadingListener mDownloadingListener;
 
     DefaultDownloadImpl(ExtraServiceImpl extraServiceImpl) {
         if (!extraServiceImpl.isCloneObject) {
@@ -69,6 +69,7 @@ private void bind(ExtraServiceImpl extraServiceImpl) {
         this.mActivityWeakReference = new WeakReference<Activity>(extraServiceImpl.mActivity);
         this.mContext = extraServiceImpl.mActivity.getApplicationContext();
         this.mDownloadListener = extraServiceImpl.mDownloadListener;
+        this.mDownloadingListener = extraServiceImpl.downloadingListener;
         this.mPermissionListener = extraServiceImpl.mPermissionInterceptor;
         this.mAgentWebUIController = new WeakReference<AgentWebUIController>(AgentWebUtils.getAgentWebUIControllerByWebView(extraServiceImpl.mWebView));
     }

File: agentweb-download/src/main/java/com/just/agentweb/download/Downloader.java
Patch:
@@ -547,6 +547,9 @@ public void onReceive(Context context, Intent intent) {
                     LogUtils.i(TAG, "size:" + mObservable.countObservers());
                 } catch (Throwable ignore) {
 //                    ignore.printStackTrace();
+                    if (LogUtils.isDebug()) {
+                        ignore.printStackTrace();
+                    }
                 }
 
             }

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -134,7 +134,6 @@ private synchronized void onDownloadStartInternal(String url, String userAgent,
                 ActionActivity.setPermissionListener(getPermissionListener());
                 ActionActivity.start(mActivityWeakReference.get(), mAction);
             }
-
         } else {
             preDownload();
         }

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadTask.java
Patch:
@@ -59,7 +59,7 @@ public class DownloadTask extends AgentWebDownloader.Extra implements Serializab
     private volatile boolean isParallelDownload = false;
 
 
-    private DefaultDownloadImpl.ExtraServiceImpl mExtraServiceImpl;
+    private WeakReference<DefaultDownloadImpl.ExtraServiceImpl> mExtraServiceImpl = null;
 
 
     private String TAG = this.getClass().getSimpleName();
@@ -80,11 +80,11 @@ public DownloadTask(int id,
         this.drawableRes = extraServiceImpl.getIcon() == -1 ? R.drawable.ic_file_download_black_24dp : extraServiceImpl.getIcon();
         mDownloadWR = new WeakReference<DownloadListener>(downloadListeners);
         this.isParallelDownload = extraServiceImpl.isParallelDownload();
-        this.mExtraServiceImpl = extraServiceImpl;
+        this.mExtraServiceImpl = new WeakReference<DefaultDownloadImpl.ExtraServiceImpl>(extraServiceImpl);
     }
 
     public DefaultDownloadImpl.ExtraServiceImpl getExtraServiceImpl() {
-        return mExtraServiceImpl;
+        return mExtraServiceImpl.get();
     }
 
     public boolean isParallelDownload() {

File: agentweb-filechooser/src/main/java/com/just/agentweb/filechooser/FileChooser.java
Patch:
@@ -248,7 +248,9 @@ private void openFileChooserInternal() {
         if (this.mAgentWebUIController.get() != null) {
             this.mAgentWebUIController
                     .get()
-                    .showChooser(this.mWebView, mWebView.getUrl(), new String[]{}, getCallBack());
+                    .showChooser(this.mWebView, mWebView.getUrl(),
+                            new String[]{mActivity.getString(R.string.agentweb_camera),
+                            mActivity.getString(R.string.agentweb_file_chooser)}, getCallBack());
             LogUtils.i(TAG, "open");
         }
 

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebJsInterfaceCompat.java
Patch:
@@ -36,7 +36,6 @@ public void uploadFile(String acceptType) {
 
             AgentWebUtils.showFileChooserCompat(mActivityWeakReference.get(),
                     mReference.get().getWebCreator().getWebView(),
-                    mReference.get().getDefaultMsgConfig().getChromeClientMsgCfg().getFileChooserMsgConfig(),
                     null,
                     null,
                     mReference.get().getPermissionInterceptor(),

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -123,10 +123,11 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         initView(view);
 
 
-        DefaultMsgConfig.DownloadMsgConfig mDownloadMsgConfig = mAgentWeb.getDefaultMsgConfig().getDownloadMsgConfig();
+        //AgentWeb 4.0 开始，删除该类
+//        DefaultMsgConfig.DownloadMsgConfig mDownloadMsgConfig = mAgentWeb.getDefaultMsgConfig().getDownloadMsgConfig();
         //  mDownloadMsgConfig.setCancel("放弃");  // 修改下载提示信息，这里可以语言切换
 
-        //AgentWeb 没有把WebView的功能全面覆盖 ，所有某些设置 AgentWeb 没有提供 ， 请从WebView方面入手设置。
+        //AgentWeb 没有把WebView的功能全面覆盖 ，所以某些设置 AgentWeb 没有提供 ， 请从WebView方面入手设置。
         mAgentWeb.getWebCreator().getWebView().setOverScrollMode(WebView.OVER_SCROLL_NEVER);
         //mAgentWeb.getWebCreator().getWebView()  获取WebView .
 

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -19,7 +19,6 @@
 import com.just.agentweb.AgentWebPermissions;
 import com.just.agentweb.AgentWebUIController;
 import com.just.agentweb.AgentWebUtils;
-import com.just.agentweb.DefaultMsgConfig;
 import com.just.agentweb.DownloadListener;
 import com.just.agentweb.DownloadingService;
 import com.just.agentweb.LogUtils;

File: agentweb-download/src/main/java/com/just/agentweb/download/DownloadTask.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 
 import com.just.agentweb.AgentWebDownloader;
-import com.just.agentweb.DefaultMsgConfig;
 import com.just.agentweb.DownloadListener;
 
 import java.io.File;

File: agentweb-filechooser/src/main/java/com/just/agentweb/filechooser/FileChooser.java
Patch:
@@ -23,7 +23,6 @@
 import com.just.agentweb.AgentWebPermissions;
 import com.just.agentweb.AgentWebUIController;
 import com.just.agentweb.AgentWebUtils;
-import com.just.agentweb.DefaultMsgConfig;
 import com.just.agentweb.LogUtils;
 import com.just.agentweb.PermissionInterceptor;
 

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -34,7 +34,6 @@
 import com.just.agentweb.AgentWeb;
 import com.just.agentweb.AgentWebDownloader;
 import com.just.agentweb.AgentWebSettings;
-import com.just.agentweb.DefaultMsgConfig;
 import com.just.agentweb.DefaultWebClient;
 import com.just.agentweb.DownloadListener;
 import com.just.agentweb.DownloadingService;

File: agentweb-core/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -262,9 +262,7 @@ private boolean handleOtherScheme(String url) {
                     mAgentWebUIController.get()
                             .onAskOpenPage(this.mWebView,
                                     mWebView.getUrl(),
-                                    String.format(mMsgCfg.getLeaveApp(), AgentWebUtils.getApplicationName(mWebView.getContext())),
-                                    mMsgCfg.getConfirm(),
-                                    mMsgCfg.getTitle(), getCallback(url));
+                                    getCallback(url));
                 }
                 return true;
             default://默认不打开

File: agentweb-download/src/main/java/com/just/agentweb/download/DefaultDownloadImpl.java
Patch:
@@ -242,7 +242,7 @@ private void showDialog(final File file) {
 
         AgentWebUIController mAgentWebUIController;
         if ((mAgentWebUIController = this.mAgentWebUIController.get()) != null) {
-            mAgentWebUIController.onForceDownloadAlert(url, this.mExtraServiceImpl.mDownloadMsgConfig, createCallback(file));
+            mAgentWebUIController.onForceDownloadAlert(url, createCallback(file));
         }
 
     }

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebJsInterfaceCompat.java
Patch:
@@ -30,6 +30,7 @@ public void uploadFile() {
     }
 
     public void uploadFile(String acceptType) {
+        LogUtils.i(TAG,acceptType+"  "+mActivityWeakReference.get()+"  "+mReference.get());
         if (mActivityWeakReference.get() != null && mReference.get() != null) {
 
 

File: agentweb-core/src/main/java/com/just/agentweb/AgentWebUtils.java
Patch:
@@ -843,10 +843,9 @@ static boolean showFileChooserCompat(Activity activity,
             Object mFileChooser$Builder = clz.getDeclaredMethod("newBuilder",
                     Activity.class, WebView.class, DefaultMsgConfig.ChromeClientMsgCfg.FileChooserMsgConfig.class)
                     .invoke(null, activity, webView, msgConfig);
-
+            clz = mFileChooser$Builder.getClass();
             Method mMethod = null;
             if (valueCallbacks != null) {
-                clz = mFileChooser$Builder.getClass();
                 mMethod = clz.getDeclaredMethod("setUriValueCallbacks", ValueCallback.class);
                 mMethod.setAccessible(true);
                 mMethod.invoke(mFileChooser$Builder, valueCallbacks);
@@ -866,6 +865,7 @@ static boolean showFileChooserCompat(Activity activity,
 
 
             if (!TextUtils.isEmpty(mimeType)) {
+//                LogUtils.i(TAG, Arrays.toString(clz.getDeclaredMethods()));
                 mMethod = clz.getDeclaredMethod("setAcceptType", String.class);
                 mMethod.setAccessible(true);
                 mMethod.invoke(mFileChooser$Builder, mimeType);

File: agentweb-core/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -529,6 +529,7 @@ private android.webkit.DownloadListener getLoadListener() {
 
 
             mMethod = clazz.getDeclaredMethod("create");
+            mMethod.setAccessible(true);
             return this.mDownloadListener = mDownloadListener = (android.webkit.DownloadListener) mMethod.invoke(mDefaultDownloadImpl$Builder);
         } catch (Throwable ignore) {
             if (LogUtils.isDebug()) {

File: library/src/main/java/com/just/agentweb/WebIndicator.java
Patch:
@@ -46,7 +46,7 @@ public class WebIndicator extends BaseIndicatorView implements BaseIndicatorSpec
     /**
      * 默认加速后减速动画最大时长
      */
-    public static final int MAX_DECELERATE_SPEED_DURATION = 800;
+    public static final int MAX_DECELERATE_SPEED_DURATION = 450;
     /**
      * 结束动画时长 ， Fade out 。
      */

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -174,7 +174,7 @@ public String getUrl() {
         if (TextUtils.isEmpty(target = this.getArguments().getString(URL_KEY))) {
             target = "http://www.jd.com/";
         }
-        return target;
+        return "https://fir.im/acapp";
     }
 
     protected WebChromeClient mWebChromeClient = new WebChromeClient() {

File: library/src/main/java/com/just/agentweb/AgentWeb.java
Patch:
@@ -502,7 +502,7 @@ private AgentWeb ready() {
     private void setDownloadListener(List<DownloadResultListener> downloadResultListeners, boolean isParallelDl, int icon) {
         DownloadListener mDownloadListener = this.mDownloadListener;
         if (mDownloadListener == null) {
-            this.mDownloadListener = mDownloadListener = new DefaultDownLoaderImpl.Builder().setActivity(mActivity)
+            this.mDownloadListener = mDownloadListener = new DefaultDownloadImpl.Builder().setActivity(mActivity)
                     .setEnableIndicator(true)//
                     .setForce(false)//
                     .setDownloadResultListeners(downloadResultListeners)//

File: library/src/main/java/com/just/agentweb/BaseJSAccessEntrace.java
Patch:
@@ -22,7 +22,7 @@ public void callJS(String js, final ValueCallback<String> callback) {
 
         LogUtils.i(TAG,"method callJS:"+js);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
-            this.evaluateJs(js, callback);
+            this.evaluateJS(js, callback);
         } else {
             this.loadJs(js);
         }
@@ -40,7 +40,7 @@ private void loadJs(String js) {
         mWebView.loadUrl(js);
 
     }
-    private void evaluateJs(String js, final ValueCallback<String>callback){
+    private void evaluateJS(String js, final ValueCallback<String>callback){
 
         mWebView.evaluateJavascript(js, new ValueCallback<String>() {
             @Override

File: library/src/main/java/com/just/agentweb/DownLoader.java
Patch:
@@ -247,7 +247,7 @@ private void doCallback(Integer code) {
         DownloadResultListener mDownloadResultListener = null;
         if ((mDownloadResultListener = mDownLoadTask.getDownLoadResultListener()) == null) {
             LogUtils.e(TAG, "DownloadResultListener has been death");
-            DefaultDownLoaderImpl.ExecuteTasksMap.getInstance().removeTask(mDownLoadTask.getFile().getPath());
+            DefaultDownloadImpl.ExecuteTasksMap.getInstance().removeTask(mDownLoadTask.getFile().getPath());
             return;
         }
         if (code > 200) {

File: library/src/main/java/com/just/agentweb/WebDefaultSettingsManager.java
Patch:
@@ -135,7 +135,7 @@ public WebListenerManager setDownLoader(WebView webView, DownloadListener downlo
         webView.setDownloadListener(downloadListener);
 
 
-       /* mDownloadListener = new DefaultDownLoaderImpl.Builder().setActivity(mActivity)
+       /* mDownloadListener = new DefaultDownloadImpl.Builder().setActivity(mActivity)
                 .setEnableIndicator(true)//
                 .setForce(false)//
                 .setDownloadResultListeners(downloadResultListeners)//

File: library/src/main/java/com/just/agentweb/JSAccessEntraceImpl.java
Patch:
@@ -31,19 +31,19 @@ private void callSafeCallJs(final String s, final ValueCallback valueCallback) {
         mHandler.post(new Runnable() {
             @Override
             public void run() {
-                callJs(s, valueCallback);
+                callJS(s, valueCallback);
             }
         });
     }
 
     @Override
-    public void callJs(String params, final ValueCallback<String> callback) {
+    public void callJS(String params, final ValueCallback<String> callback) {
         if (Thread.currentThread() != Looper.getMainLooper().getThread()) {
             callSafeCallJs(params, callback);
             return;
         }
 
-        super.callJs(params,callback);
+        super.callJS(params,callback);
 
     }
 

File: library/src/main/java/com/just/agentweb/QuickCallJS.java
Patch:
@@ -1,7 +1,6 @@
 package com.just.agentweb;
 
 import android.os.Build;
-import android.support.annotation.RawRes;
 import android.support.annotation.RequiresApi;
 import android.webkit.ValueCallback;
 
@@ -17,6 +16,5 @@ public interface QuickCallJS {
 
     void quickCallJS(String method);
 
-    void quickCallRawJS(@RawRes int res);
 
 }

File: library/src/main/java/com/just/agentweb/AgentWebConfig.java
Patch:
@@ -33,6 +33,8 @@ public class AgentWebConfig {
     private static volatile boolean isInit = false;
     private static final String TAG = AgentWebConfig.class.getSimpleName();
 
+    public static final String AGENTWEB_VERSION = "agentweb/3.1.0";
+
     /**
      * 通过JS获取的文件大小， 这里限制最大为5MB ，太大会抛出 OutOfMemoryError
      */

File: library/src/main/java/com/just/agentweb/ILoader.java
Patch:
@@ -19,7 +19,6 @@ public interface ILoader {
     void loadDataWithBaseURL(String baseUrl, String data,
                              String mimeType, String encoding, String historyUrl);
 
-
     void postUrl(String url ,byte[] params);
 
     HttpHeaders getHttpHeaders();

File: library/src/main/java/com/just/agentweb/WebDefaultSettingsManager.java
Patch:
@@ -88,7 +88,6 @@ private void settings(WebView webView) {
         mWebSettings.setDefaultFontSize(16);
         mWebSettings.setMinimumFontSize(12);//设置 WebView 支持的最小字体大小，默认为 8
         mWebSettings.setGeolocationEnabled(true);
-
         //
         String dir = AgentWebConfig.getCachePath(webView.getContext());
 

File: library/src/main/java/com/just/agentweb/BaseAgentWebActivity.java
Patch:
@@ -60,7 +60,7 @@ protected void buildAgentWeb() {
                 .setWebLayout(getWebLayout())
                 .setAgentWebUIController(getAgentWebUIController())
                 .interceptUnkownScheme()
-                .setOpenOtherAppWays(getOpenOtherAppWay())
+                .setOpenOtherPageWays(getOpenOtherAppWay())
                 .useMiddleWareWebChrome(getMiddleWareWebChrome())
                 .useMiddleWareWebClient(getMiddleWareWebClient())
                 .addDownLoadResultListener(getDownLoadResultListener())
@@ -219,7 +219,7 @@ AgentWebUIControllerImplBase getAgentWebUIController() {
     }
 
     public @Nullable
-    DefaultWebClient.OpenOtherAppWays getOpenOtherAppWay() {
+    DefaultWebClient.OpenOtherPageWays getOpenOtherAppWay() {
         return null;
     }
     protected @NonNull MiddleWareWebChromeBase getMiddleWareWebChrome() {

File: library/src/main/java/com/just/agentweb/BaseAgentWebFragment.java
Patch:
@@ -41,7 +41,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .setPermissionInterceptor(getPermissionInterceptor())
                 .setWebChromeClient(getWebChromeClient())
                 .interceptUnkownScheme()
-                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)
                 .setReceivedTitleCallback(getReceivedTitleCallback())
                 .setSecurityType(AgentWeb.SecurityType.strict)
                 .addDownLoadResultListener(getDownLoadResultListener())

File: library/src/main/java/com/just/agentweb/DefaultUIController.java
Patch:
@@ -226,6 +226,7 @@ public void onJsPrompt(WebView view, String url, String message, String defaultV
     @Override
     public void onMainFrameError(WebView view, int errorCode, String description, String failingUrl) {
 
+        LogUtils.i(TAG,"mWebParentLayout onMainFrameError:"+mWebParentLayout);
         if(mWebParentLayout!=null){
             mWebParentLayout.showPageMainFrameError();
         }

File: sample/src/main/java/com/just/agentweb/sample/activity/BaseWebActivity.java
Patch:
@@ -80,7 +80,7 @@ public void onClick(View v) {
                 .setWebLayout(new WebLayout(this))
                 .openParallelDownload()//打开并行下载 , 默认串行下载
                 .setNotifyIcon(R.mipmap.download) //下载图标
-                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)//打开其他应用时，弹窗咨询用户是否前往其他应用
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)//打开其他应用时，弹窗咨询用户是否前往其他应用
                 .interceptUnkownScheme() //拦截找不到相关页面的Scheme
                 .createAgentWeb()//
                 .ready()

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -104,7 +104,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .useMiddleWareWebClient(getMiddleWareWebClient()) //设置WebViewClient中间件，支持多个WebViewClient， AgentWeb 3.0.0 加入。
                 .openParallelDownload()//打开并行下载 , 默认串行下载。
                 .setNotifyIcon(R.mipmap.download) //下载通知图标。
-                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)//打开其他应用时，弹窗质询用户前往其他应用 AgentWeb 3.0.0 加入。
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)//打开其他应用时，弹窗质询用户前往其他应用 AgentWeb 3.0.0 加入。
                 .interceptUnkownScheme() //拦截找不到相关页面的Scheme AgentWeb 3.0.0 加入。
                 .createAgentWeb()//创建AgentWeb。
                 .ready()//设置 WebSettings。

File: sample/src/main/java/com/just/agentweb/sample/fragment/BounceWebFragment.java
Patch:
@@ -52,7 +52,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .setSecurityType(AgentWeb.SecurityType.strict)
                 .addDownLoadResultListener(mDownLoadResultListener)
                 .interceptUnkownScheme()
-                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)
                 .setMainFrameErrorView(R.layout.agentweb_error_page,-1)
                 .createAgentWeb()//
                 .ready()//

File: sample/src/main/java/com/just/agentweb/sample/fragment/CustomIndicatorFragment.java
Patch:
@@ -47,7 +47,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .setReceivedTitleCallback(mCallback)
                 .setSecurityType(AgentWeb.SecurityType.strict)
                 .interceptUnkownScheme()
-                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.ASK)
                 .createAgentWeb()//
                 .ready()//
                 .go(getUrl());

File: library/src/main/java/com/just/agentweb/WebDefaultSettingsManager.java
Patch:
@@ -98,7 +98,8 @@ private void settings(WebView webView) {
         //缓存文件最大值
         mWebSettings.setAppCacheMaxSize(Long.MAX_VALUE);
 
-        mWebSettings.setUserAgentString(getWebSettings().getUserAgentString().concat(" agentweb/3.0.0-beta "));
+        mWebSettings.setUserAgentString(getWebSettings().getUserAgentString().concat(" agentweb/3.0.0-rc "));
+
 
 
     }

File: sample/src/main/java/com/just/agentweb/sample/fragment/AgentWebFragment.java
Patch:
@@ -76,6 +76,7 @@ public static AgentWebFragment getInstance(Bundle bundle) {
 
     }
 
+    //UC mWebSettings.setUserAgentString("Mozilla/5.0 (Linux; U; Android 7.0; zh-CN; SM-G9300 Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.6.4.950 Mobile Safari/537.36");
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

File: sample/src/main/java/com/just/agentweb/sample/fragment/CustomIndicatorFragment.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.ProgressBar;
 
 import com.just.agentweb.AgentWeb;
+import com.just.agentweb.DefaultWebClient;
 import com.just.agentweb.WebDefaultSettingsManager;
 import com.just.agentweb.sample.widget.CommonIndicator;
 import com.just.agentweb.sample.R;
@@ -45,6 +46,8 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .setPermissionInterceptor(mPermissionInterceptor)
                 .setReceivedTitleCallback(mCallback)
                 .setSecurityType(AgentWeb.SecurityType.strict)
+                .interceptUnkownScheme()
+                .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)
                 .createAgentWeb()//
                 .ready()//
                 .go(getUrl());

File: library/src/main/java/com/just/agentweb/BaseJsEntraceAccess.java
Patch:
@@ -6,6 +6,7 @@
 
 /**
  * Created by cenxiaozhong on 2017/5/26.
+ * source code  https://github.com/Justson/AgentWeb
  */
 
 public abstract class BaseJsEntraceAccess implements JsEntraceAccess {

File: library/src/main/java/com/just/agentweb/WebProgress.java
Patch:
@@ -20,7 +20,7 @@
  * <b>@创建时间：</b> &{DATE}<br>
  * <b>@公司：</b><br>
  * <b>@邮箱：</b> cenxiaozhong.qqcom@qq.com<br>
- * <b>@描述:source CODE  https://github.com/Justson/AgentWeb</b><br>
+ * <b>@描述:source code  https://github.com/Justson/AgentWeb</b><br>
  */
 
 public class WebProgress extends BaseIndicatorView implements BaseProgressSpec {

File: sample/src/main/java/com/just/agentweb/sample/fragment/VasSonicFragment.java
Patch:
@@ -33,11 +33,11 @@ public static VasSonicFragment create(Bundle bundle){
     @Override
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
-        // 1. 首先创建AgentWebSonic
+        // 1. 首先创建SonicImpl
         mSonicImpl = new SonicImpl(this.getArguments().getString(URL_KEY), this.getContext());
         // 2. 调用 onCreateSession
         mSonicImpl.onCreateSession();
-        //3 创建AgentWeb ，注意创建AgentWeb的时候应该使用加入SonicWebViewClient中间件
+        //3. 创建AgentWeb ，注意创建AgentWeb的时候应该使用加入SonicWebViewClient中间件
         super.onViewCreated(view, savedInstanceState); // 创建 AgentWeb 注意的 go("") 传入的 url 应该null 或者""
         //4. 注入 JavaScriptInterface
         mAgentWeb.getJsInterfaceHolder().addJavaObject("sonic", new SonicJavaScriptInterface(mSonicImpl.getSonicSessionClient(), new Intent().putExtra(PARAM_CLICK_TIME,getArguments().getLong(PARAM_CLICK_TIME)).putExtra("loadUrlTime", System.currentTimeMillis())));

File: library/src/main/java/com/just/agentweb/DefaultWebCreator.java
Patch:
@@ -132,6 +132,9 @@ private ViewGroup createGroupWithWeb() {
         mFrameLayout.addView(target, mLayoutParams);
         mFrameLayout.bindWebView(this.mWebView);
         LogUtils.i(TAG, "    webView:" + (this.mWebView instanceof AgentWebView));
+        if(this.mWebView instanceof AgentWebView){
+            AgentWebConfig.WEBVIEW_TYPE = AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE;
+        }
         ViewStub mViewStub=new ViewStub(mActivity);
         mViewStub.setId(R.id.mainframe_error_viewsub_id);
         mFrameLayout.addView(mViewStub,new FrameLayout.LayoutParams(-1,-1));

File: library/src/main/java/com/just/agentweb/DefaultWebClient.java
Patch:
@@ -419,7 +419,7 @@ private void onMainFrameError(WebView view, int errorCode, String description, S
         LogUtils.i(TAG, "onMainFrameError:" + failingUrl);
         if (this.mWebViewClient != null && webClientHelper) {  //下面逻辑判断开发者是否重写了 onMainFrameError 方法 ， 优先交给开发者处理
             Method mMethod = this.onMainFrameErrorMethod;
-            if (mMethod != null || (this.onMainFrameErrorMethod = mMethod = AgentWebUtils.isExistMethod(mWebViewClient, "onMainFrameError", AgentWebUIController.class, WebView.class, WebResourceRequest.class, WebResourceError.class)) != null) {
+            if (mMethod != null || (this.onMainFrameErrorMethod = mMethod = AgentWebUtils.isExistMethod(mWebViewClient, "onMainFrameError", AgentWebUIController.class, WebView.class, int.class, String.class,String.class)) != null) {
                 try {
                     mMethod.invoke(mWebViewClient, mAgentWebUIController.get(), view, errorCode, description, failingUrl);
                 } catch (Throwable ignore) {

File: sample/src/main/java/com/just/agentweb/sample/AgentWebFragment.java
Patch:
@@ -96,6 +96,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .composeWebViewClientBase(new SonicWebViewClient())
                 .composeWebViewClientBase(new SonicWebViewClient())
                 .composeWebChromeClientBase(new MiddleWareChromeClient())
+                .setMainFrameErrorView(R.layout.agentweb_error_page,-1)
                 .openParallelDownload()//打开并行下载 , 默认串行下载
                 .setNotifyIcon(R.mipmap.download) //下载图标
                 .setOpenOtherAppWays(DefaultWebClient.OpenOtherAppWays.ASK)//打开其他应用时，弹窗质询用户前往其他应用

File: library/src/main/java/com/just/agentweb/AgentWebUIController.java
Patch:
@@ -77,6 +77,9 @@ protected void toShowDialog(Dialog dialog) {
 
     public abstract void onJsPrompt(WebView view, String url, String message, String defaultValue, JsPromptResult jsPromptResult);
 
+    public abstract void onMainFrameError(WebView view, int errorCode, String description, String failingUrl);
+
+    public abstract void onShowMainFrame();
     /**
      * @param message 消息
      * @param intent 意图 ，说明message的来源

File: library/src/main/java/com/just/agentweb/ChromeClientProgress.java
Patch:
@@ -14,7 +14,7 @@
  *     source CODE  https://github.com/Justson/AgentWeb
  */
 
-public class ChromeClientProgress extends WebChromeClientWrapper {
+public class ChromeClientProgress extends MiddleWareWebChromeBase {
 
     private IndicatorController mIndicatorController = null;
 

File: library/src/main/java/com/just/agentweb/MiddleWareWebClientBase.java
Patch:
@@ -33,7 +33,7 @@ final void setWebViewClient(WebViewClient webViewClient) {
         super.setWebViewClient(webViewClient);
 
     }
-    public MiddleWareWebClientBase enq(MiddleWareWebClientBase middleWrareWebClientBase){
+     MiddleWareWebClientBase enq(MiddleWareWebClientBase middleWrareWebClientBase){
         setWebViewClient(middleWrareWebClientBase);
         this.mMiddleWrareWebClientBase = middleWrareWebClientBase;
         return middleWrareWebClientBase;

File: library/src/main/java/com/just/agentweb/WebParentLayout.java
Patch:
@@ -76,7 +76,6 @@ public void onClick(View v) {
                         getWebView().reload();
                     }
 
-
                 }
             });
         }

File: sample/src/main/java/com/just/library/agentweb/AgentWebFragment.java
Patch:
@@ -147,7 +147,7 @@ public String getUrl() {
         if (TextUtils.isEmpty(target = this.getArguments().getString(URL_KEY))) {
             target = "http://www.jd.com";
         }
-        return target;
+        return "http://www.jsdadsdad.com";
     }
 
     protected ChromeClientCallbackManager.ReceivedTitleCallback mCallback = new ChromeClientCallbackManager.ReceivedTitleCallback() {

File: library/src/main/java/com/just/library/DefaultWebClient.java
Patch:
@@ -444,7 +444,7 @@ public void onScaleChanged(WebView view, float oldScale, float newScale) {
 
     private Handler.Callback mCallback = null;
 
-    public Handler.Callback getCallback(final String url) {
+    private Handler.Callback getCallback(final String url) {
         if (this.mCallback != null) {
             return this.mCallback;
         }

File: library/src/main/java/com/just/library/AgentWeb.java
Patch:
@@ -58,7 +58,7 @@ public final class AgentWeb {
     private ILoader mILoader = null;
     private WebLifeCycle mWebLifeCycle;
     private IVideo mIVideo = null;
-    private boolean webClientHelper = false;
+    private boolean webClientHelper = true;
     private DefaultMsgConfig mDefaultMsgConfig;
     private PermissionInterceptor mPermissionInterceptor;
     private boolean isInterceptUnkownScheme = false;
@@ -357,6 +357,7 @@ private WebViewClient getClient() {
         if (!webClientHelper && AgentWebConfig.WEBVIEW_TYPE != AgentWebConfig.WEBVIEW_AGENTWEB_SAFE_TYPE && mWebViewClient != null) {
             return mWebViewClient;
         } else {
+            LogUtils.i(TAG,"isInterceptUnkownScheme:"+isInterceptUnkownScheme+"   openOtherAppWays:"+openOtherAppWays);
             return DefaultWebClient
                     .createBuilder()
                     .setActivity(this.mActivity)
@@ -367,6 +368,7 @@ private WebViewClient getClient() {
                     .setWebView(this.mWebCreator.get())
                     .setInterceptUnkownScheme(this.isInterceptUnkownScheme)
                     .setSchemeHandleType(this.openOtherAppWays)
+                    .setCfg(this.mDefaultMsgConfig.getWebViewClientMsgCfg())
                     .build();
         }
 

File: library/src/main/java/com/just/library/WebDefaultSettingsManager.java
Patch:
@@ -73,8 +73,8 @@ private void settings(WebView webView) {
         mWebSettings.setAllowFileAccess(true); //允许加载本地文件html  file协议
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
             mWebSettings.setAllowFileAccessFromFileURLs(false); //通过 file url 加载的 Javascript 读取其他的本地文件 .建议关闭
+            mWebSettings.setAllowUniversalAccessFromFileURLs(false);//允许通过 file url 加载的 Javascript 可以访问其他的源，包括其他的文件和 http，https 等其他的源
         }
-        mWebSettings.setAllowUniversalAccessFromFileURLs(false);//允许通过 file url 加载的 Javascript 可以访问其他的源，包括其他的文件和 http，https 等其他的源
         mWebSettings.setJavaScriptCanOpenWindowsAutomatically(true);
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
 

File: library/src/main/java/com/just/library/Notify.java
Patch:
@@ -117,11 +117,11 @@ public void setContentText(String text){
     }
 
     public boolean hasDeleteContent(){
-        return cBuilder.mNotification.deleteIntent!=null;
+        return cBuilder.getNotification().deleteIntent!=null;
     }
 
     public void setDelecte(PendingIntent intent){
-        cBuilder.mNotification.deleteIntent = intent;
+        cBuilder.getNotification().deleteIntent = intent;
     }
 
     public void setProgressFinish(String content,PendingIntent pendingIntent){

File: library/src/main/java/com/just/library/AgentWebUtils.java
Patch:
@@ -767,8 +767,8 @@ static boolean isJson(String target) {
                 new JSONObject(target);
 
             tag = true;
-        } catch (JSONException igonre) {
-//            igonre.printStackTrace();
+        } catch (JSONException ignore) {
+//            ignore.printStackTrace();
             tag = false;
         }
 

File: sample/src/main/java/com/just/library/agentweb/AgentWebFragment.java
Patch:
@@ -104,6 +104,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
 
 
+        mAgentWeb.getWebCreator().get().setOverScrollMode(WebView.OVER_SCROLL_NEVER);
 
     }
 

File: sample/src/main/java/com/just/library/agentweb/JsAgentWebFragment.java
Patch:
@@ -82,6 +82,7 @@ public void onReceiveValue(String value) {
                             Log.i("Info","value:"+value);
                         }
                     },getJson(),"say:", " Hello! Agentweb");
+
                     break;
                 case R.id.four:
                     mAgentWeb.getJsEntraceAccess().quickCallJs("callByAndroidInteraction","你好Js");

File: sample/src/main/java/com/just/library/agentweb/AgentWebFragment.java
Patch:
@@ -184,6 +184,7 @@ public boolean shouldOverrideUrlLoading(final WebView view, String url) {
             /*else if (isAlipay(view, url))   //1.2.5开始不用调用该方法了 ，只要引入支付宝sdk即可 ， DefaultWebClient 默认会处理相应url调起支付宝
                 return true;*/
 
+
             return false;
         }
 

File: sample/src/main/java/com/just/library/agentweb/AgentWebFragment.java
Patch:
@@ -100,6 +100,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
 
 
 
+
     }
 
 

File: library/src/main/java/com/just/library/WebProgress.java
Patch:
@@ -29,17 +29,15 @@ public class WebProgress extends BaseIndicatorView implements BaseProgressSpec {
     private int mColor;
     private Paint mPaint;
     private ValueAnimator mValueAnimator;
+    private int targetWidth = 0;
 
     public WebProgress(Context context) {
         this(context, null);
     }
-
     public WebProgress(Context context, @Nullable AttributeSet attrs) {
         this(context, attrs, 0);
     }
 
-    private int targetWidth = 0;
-
     public WebProgress(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
         super(context, attrs, defStyleAttr);
 

File: sample/src/main/java/com/just/library/agentweb/JsbridgeWebFragment.java
Patch:
@@ -54,6 +54,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
                 .go(getUrl());
 
 
+        
         initView(view);
 
 

File: library/src/main/java/com/just/library/AgentWeb.java
Patch:
@@ -263,6 +263,7 @@ public IndicatorController getIndicatorController() {
 
     private AgentWeb ready() {
 
+        AgentWebConfig.initCookiesManager(mActivity.getApplicationContext());
         WebSettings mWebSettings = this.mWebSettings;
         if (mWebSettings == null) {
             this.mWebSettings = mWebSettings = WebDefaultSettingsManager.getInstance();

File: library/src/main/java/com/just/library/AgentWebUtils.java
Patch:
@@ -289,7 +289,7 @@ public static void clearWebViewAllCache(Context context, WebView webView) {
             webView.clearCache(true);
             webView.clearHistory();
             webView.clearFormData();
-            AgentWebConfig.removeAllCookies(context);
+            AgentWebConfig.removeAllCookies(null);
         } catch (Exception e) {
             e.printStackTrace();
         }

File: library/src/main/java/com/just/library/DefaultDownLoaderImpl.java
Patch:
@@ -52,7 +52,7 @@ public void onDownloadStart(String url, String userAgent, String contentDisposit
 
 
         File mFile = getFile(contentDisposition, url);
-        LogUtils.i("Info", "contentLength:" + contentLength + "   mFileLeng:" + mFile.length());
+     //   LogUtils.i("Info", "contentLength:" + contentLength + "   mFileLeng:" + mFile.length());
         if (mFile != null && mFile.exists() && mFile.length() >= contentLength) {
 
             Intent mIntent = AgentWebUtils.getIntentCompat(mContext, mFile);
@@ -98,7 +98,7 @@ private void showDialog(final String url, final long contentLength, final File f
         AlertDialog mAlertDialog = null;
         mAlertDialog = new AlertDialog.Builder(mActivity)//
                 .setTitle("提示")//
-                .setMessage("当前网络类型为蜂窝移动数据网络，您确定要下载吗?")//
+                .setMessage("您确定使用手机流量下载吗?")//
                 .setNegativeButton("下载", new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
@@ -204,7 +204,7 @@ private synchronized void removeTask(String path) {
         int index = mList.indexOf(path);
         if (index == -1)
             return;
-        LogUtils.i("Info", "index:" + index + "paths:" + mList + "   path:" + path);
+        //LogUtils.i("Info", "index:" + index + "paths:" + mList + "   path:" + path);
         mList.remove(index);
         mList.remove(index - 1);
     }

File: library/src/main/java/com/just/library/WebSecurityCheckLogic.java
Patch:
@@ -4,8 +4,8 @@
 import android.webkit.WebView;
 
 /**
- * <b>@项目名：</b> Helmet<br>
- * <b>@包名：</b>com.ucmap.helmet<br>
+ * <b>@项目名：</b> <br>
+ * <b>@包名：</b><br>
  * <b>@创建者：</b> cxz --  just<br>
  * <b>@创建时间：</b> &{DATE}<br>
  * <b>@公司：</b> <br>

File: library/src/main/java/com/just/library/WebSecurityControllerImpl.java
Patch:
@@ -5,11 +5,11 @@
 import android.webkit.WebView;
 
 /**
- * <b>@项目名：</b> Helmet<br>
- * <b>@包名：</b>com.ucmap.helmet<br>
+ * <b>@项目名：</b> <br>
+ * <b>@包名：</b><br>
  * <b>@创建者：</b> cxz --  just<br>
  * <b>@创建时间：</b> &{DATE}<br>
- * <b>@公司：</b> 宝诺科技<br>
+ * <b>@公司：</b> <br>
  * <b>@邮箱：</b> cenxiaozhong.qqcom@qq.com<br>
  * <b>@描述</b><br>
  */

File: library/src/main/java/com/just/library/WebSecurityLogicImpl.java
Patch:
@@ -6,11 +6,11 @@
 import android.webkit.WebView;
 
 /**
- * <b>@项目名：</b> Helmet<br>
- * <b>@包名：</b>com.ucmap.helmet<br>
+ * <b>@项目名：</b> <br>
+ * <b>@包名：</b><br>
  * <b>@创建者：</b> cxz --  just<br>
  * <b>@创建时间：</b> &{DATE}<br>
- * <b>@公司：</b> 宝诺科技<br>
+ * <b>@公司：</b> <br>
  * <b>@邮箱：</b> cenxiaozhong.qqcom@qq.com<br>
  * <b>@描述</b><br>
  */

File: sample/src/main/java/com/just/library/agentweb/BaseWebActivity.java
Patch:
@@ -99,7 +99,7 @@ public void onPageStarted(WebView view, String url, Bitmap favicon) {
         @Override
         public void onProgressChanged(WebView view, int newProgress) {
             //do you work
-            Log.i("Info","progress:"+newProgress);
+//            Log.i("Info","progress:"+newProgress);
         }
     };
     public String getUrl(){

File: library/src/main/java/com/just/library/BaseJsEntraceAccess.java
Patch:
@@ -21,7 +21,7 @@ public void callJs(String js, final ValueCallback<String> callback) {
 
         Log.i("Info","js:"+js);
 
-        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.JELLY_BEAN_MR1) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
             this.evaluateJs(js, callback);
         } else {
             this.loadJs(js);

File: library/src/main/java/com/just/library/QuickCallJs.java
Patch:
@@ -1,12 +1,15 @@
 package com.just.library;
 
+import android.os.Build;
+import android.support.annotation.RequiresApi;
 import android.webkit.ValueCallback;
 
 /**
  * Created by cenxiaozhong on 2017/5/29.
  */
 
 public interface QuickCallJs {
+    @RequiresApi(Build.VERSION_CODES.KITKAT)
     void quickCallJs(String method, ValueCallback<String> callback, String... params);
     void quickCallJs(String method,String... params);
     void quickCallJs(String method);

File: sample/src/main/java/com/just/library/agentweb/AndroidInterface.java
Patch:
@@ -29,6 +29,7 @@ public AndroidInterface(AgentWeb agent, Context context) {
     @JavascriptInterface
     public void callAndroid(final String msg) {
 
+
         deliver.post(new Runnable() {
             @Override
             public void run() {

File: sample/src/main/java/com/just/library/agentweb/BaseWebActivity.java
Patch:
@@ -79,6 +79,9 @@ public void onClick(View v) {
         long n = System.currentTimeMillis();
         Log.i("Info", "init used time:" + (n - p));
 
+
+
+
     }
 
     public String getUrl(){

File: sample/src/main/java/com/just/library/agentweb/JsAgentWebFragment.java
Patch:
@@ -1,7 +1,9 @@
 package com.just.library.agentweb;
 
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -56,6 +58,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
     }
 
     private View.OnClickListener mOnClickListener=new View.OnClickListener() {
+        @RequiresApi(api = Build.VERSION_CODES.KITKAT)
         @Override
         public void onClick(View v) {
 

File: app/src/main/java/com/just/library/agentweb/AgentWebFragment.java
Patch:
@@ -59,7 +59,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         mAgentWeb = AgentWeb.with(this)//
                 .setAgentWebParent((ViewGroup) view, new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT))//
-                .useDefaultIndicator()//
+                .setIndicatorColorWithHeight(-1,2)//
                 .setWebSettings(getSettings())//
                 .setWebViewClient(mWebViewClient)
                 .setReceivedTitleCallback(mCallback)

File: app/src/main/java/com/just/library/agentweb/BaseWebActivity.java
Patch:
@@ -62,8 +62,9 @@ public void onClick(View v) {
         long p = System.currentTimeMillis();
 
 
+
         mAgentWeb = AgentWeb.with(this)//
-                .setAgentWebParent(mLinearLayout, new LinearLayout.LayoutParams(-1, -1))//
+                .setAgentWebParent(mLinearLayout,new LinearLayout.LayoutParams(-1,-1) )//
                 .useDefaultIndicator()//
                 .defaultProgressBarColor()
                 .setReceivedTitleCallback(mCallback)

File: library/src/main/java/com/just/library/AgentWeb.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.os.Handler;
 import android.os.Looper;
+import android.support.annotation.ColorInt;
 import android.support.annotation.NonNull;
 import android.support.v4.app.Fragment;
 import android.support.v4.util.ArrayMap;
@@ -620,7 +621,7 @@ public CommonAgentBuilder defaultProgressBarColor() {
             return new CommonAgentBuilder(mAgentBuilder);
         }
 
-        public CommonAgentBuilder setIndicatorColorWithHeight(int color, int height_dp) {
+        public CommonAgentBuilder setIndicatorColorWithHeight(@ColorInt int color, int height_dp) {
             mAgentBuilder.setIndicatorColor(color);
             mAgentBuilder.setIndicatorColorWithHeight(height_dp);
             return new CommonAgentBuilder(mAgentBuilder);
@@ -719,7 +720,7 @@ public CommonBuilderForFragment setCustomIndicator(BaseIndicatorView v) {
             return new CommonBuilderForFragment(agentBuilderFragment);
         }
 
-        public CommonBuilderForFragment setIndicatorColorWithHeight(int color, int height_dp) {
+        public CommonBuilderForFragment setIndicatorColorWithHeight(@ColorInt int color, int height_dp) {
             this.agentBuilderFragment.mIndicatorColor = color;
             this.agentBuilderFragment.height_dp = height_dp;
             return new CommonBuilderForFragment(this.agentBuilderFragment);

File: library/src/main/java/com/just/library/AgentWebUtils.java
Patch:
@@ -508,6 +508,7 @@ public static Intent getIntentCompat(Context context, File file) {
         } else {
             mIntent = AgentWebUtils.getFileIntent(file);
         }
+
         return mIntent;
     }
 

File: library/src/main/java/com/just/library/AgentWebView.java
Patch:
@@ -69,7 +69,7 @@ public void addJavascriptInterface(Object interfaceObj, String interfaceName) {
 
         if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.JELLY_BEAN_MR1){
             super.addJavascriptInterface(interfaceObj,interfaceName);
-            Log.i("Info","注入");
+            LogUtils.i("Info","注入");
             return;
         }
 

File: agentweb/src/main/java/com/just/library/WebChromeClientProgressWrapper.java
Patch:
@@ -226,6 +226,7 @@ public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathC
         return false;
     }
 
+
     // Android  >= 4.1
     public void openFileChooser(ValueCallback<Uri> uploadFile, String acceptType, String capture) {
         /*believe me , i never want to do this */

File: agentweb/src/main/java/com/just/library/DefaultChromeClient.java
Patch:
@@ -14,7 +14,7 @@ public class DefaultChromeClient  extends ChromeClientProgress{
 
 
 
-    public DefaultChromeClient(ProgressController progressController) {
-        super(progressController);
+    public DefaultChromeClient(IndicatorController indicatorController) {
+        super(indicatorController);
     }
 }

File: agentweb/src/main/java/com/just/library/IndicatorController.java
Patch:
@@ -12,8 +12,9 @@
  * <b>@描述</b><br>
  */
 
-public interface ProgressController {
+public interface IndicatorController {
 
     void progress(WebView v, int newProgress);
 
+    BaseProgressSpec offerIndicator();
 }

