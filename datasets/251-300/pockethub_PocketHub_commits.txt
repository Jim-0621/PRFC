File: app/src/androidTest/java/com/github/pockethub/android/tests/issue/EditIssuesFilterActivityTest.java
Patch:
@@ -23,6 +23,8 @@
 import org.junit.Before;
 import org.junit.Rule;
 
+import java.util.UUID;
+
 /**
  * Tests of {@link EditIssuesFilterActivity}
  */
@@ -35,7 +37,7 @@ public class EditIssuesFilterActivityTest {
     @Before
     public void setUp() {
         Repository repo = InfoUtils.createRepoFromData("owner", "name");
-        IssueFilter filter = new IssueFilter(repo);
+        IssueFilter filter = new IssueFilter(repo, UUID.randomUUID().toString());
         activityTestRule.launchActivity(EditIssuesFilterActivity.Companion.createIntent(filter));
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/issue/FiltersViewActivity.java
Patch:
@@ -87,7 +87,9 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        disposables.dispose();
+        if (disposables != null) {
+            disposables.dispose();
+        }
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueBrowseActivity.java
Patch:
@@ -20,6 +20,7 @@
 import androidx.appcompat.app.ActionBar;
 import android.view.MenuItem;
 
+import com.github.pockethub.android.ui.MainActivity;
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.Intents.Builder;
 import com.github.pockethub.android.R;
@@ -66,7 +67,8 @@ protected void onCreate(Bundle savedInstanceState) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                Intent intent = FiltersViewActivity.createIntent();
+                finish();
+                Intent intent = new Intent(this, MainActivity.class);
                 intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
                 return true;

File: app/src/androidTest/java/com/github/pockethub/android/tests/issue/EditIssuesFilterActivityTest.java
Patch:
@@ -23,6 +23,8 @@
 import org.junit.Before;
 import org.junit.Rule;
 
+import java.util.UUID;
+
 /**
  * Tests of {@link EditIssuesFilterActivity}
  */
@@ -35,7 +37,7 @@ public class EditIssuesFilterActivityTest {
     @Before
     public void setUp() {
         Repository repo = InfoUtils.createRepoFromData("owner", "name");
-        IssueFilter filter = new IssueFilter(repo);
+        IssueFilter filter = new IssueFilter(repo, UUID.randomUUID().toString());
         activityTestRule.launchActivity(EditIssuesFilterActivity.Companion.createIntent(filter));
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/issue/FiltersViewActivity.java
Patch:
@@ -87,7 +87,9 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
     @Override
     protected void onDestroy() {
         super.onDestroy();
-        disposables.dispose();
+        if (disposables != null) {
+            disposables.dispose();
+        }
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueBrowseActivity.java
Patch:
@@ -20,6 +20,7 @@
 import androidx.appcompat.app.ActionBar;
 import android.view.MenuItem;
 
+import com.github.pockethub.android.ui.MainActivity;
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.Intents.Builder;
 import com.github.pockethub.android.R;
@@ -66,7 +67,8 @@ protected void onCreate(Bundle savedInstanceState) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case android.R.id.home:
-                Intent intent = FiltersViewActivity.createIntent();
+                finish();
+                Intent intent = new Intent(this, MainActivity.class);
                 intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);
                 startActivity(intent);
                 return true;

File: app/src/main/java/com/github/pockethub/android/core/issue/IssueFilter.java
Patch:
@@ -480,7 +480,7 @@ public int describeContents() {
     @Override
     public void writeToParcel(Parcel dest, int flags) {
         dest.writeParcelable(repository, flags);
-        dest.writeTypedList(labels);
+        dest.writeList(labels);
         dest.writeParcelable(milestone, flags);
         dest.writeParcelable(assignee, flags);
         dest.writeByte((byte) (open ? 1 : 0));

File: app/src/main/java/com/github/pockethub/android/core/issue/IssueFilter.java
Patch:
@@ -480,7 +480,7 @@ public int describeContents() {
     @Override
     public void writeToParcel(Parcel dest, int flags) {
         dest.writeParcelable(repository, flags);
-        dest.writeTypedList(labels);
+        dest.writeList(labels);
         dest.writeParcelable(milestone, flags);
         dest.writeParcelable(assignee, flags);
         dest.writeByte((byte) (open ? 1 : 0));

File: app/src/main/java/com/github/pockethub/android/ui/issue/AssigneeDialogFragment.java
Patch:
@@ -79,7 +79,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         for (User user : getChoices()) {
             adapter.add(new AssigneeDialogItem(avatars, user, selected));
         }
-
+        adapter.setOnItemClickListener(this);
 
         return createDialogBuilder()
                 .adapter(adapter, null)

File: app/src/main/java/com/github/pockethub/android/ui/issue/AssigneeDialogFragment.java
Patch:
@@ -79,7 +79,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         for (User user : getChoices()) {
             adapter.add(new AssigneeDialogItem(avatars, user, selected));
         }
-
+        adapter.setOnItemClickListener(this);
 
         return createDialogBuilder()
                 .adapter(adapter, null)

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitCompareViewActivity.java
Patch:
@@ -76,7 +76,6 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setSubtitle(InfoUtils.createRepoId(repository));
-        avatars.bind(actionBar, repository.owner());
 
         fragment = getSupportFragmentManager()
             .findFragmentById(R.id.list);

File: app/src/main/java/com/github/pockethub/android/ui/issue/FiltersViewActivity.java
Patch:
@@ -62,7 +62,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(R.string.bookmarks);
-        actionBar.setIcon(R.drawable.ic_bookmark_white_24dp);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         fragment = (FilterListFragment) getSupportFragmentManager()

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueBrowseActivity.java
Patch:
@@ -65,7 +65,6 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setTitle(repo.name());
         actionBar.setSubtitle(repo.owner().login());
         actionBar.setDisplayHomeAsUpEnabled(true);
-        avatars.bind(actionBar, repo.owner());
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchActivity.java
Patch:
@@ -102,7 +102,6 @@ protected void onCreate(Bundle savedInstanceState) {
             if (repository != null) {
                 actionBar.setSubtitle(InfoUtils.createRepoId(repository));
                 actionBar.setDisplayHomeAsUpEnabled(true);
-                avatars.bind(actionBar, repository.owner());
             }
         }
 

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsActivity.java
Patch:
@@ -65,7 +65,6 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         User owner = repository.owner();
-        avatars.bind(getSupportActionBar(), owner);
     }
 
     @Override

File: app/src/test/java/com/github/pockethub/android/ui/MainActivityTest.java
Patch:
@@ -102,8 +102,7 @@ public void testNavigationDrawerClickListenerPos5_ShouldLogoutUser() {
         mainActivity.onNavigationItemSelected(getMockMenuItem(R.id.navigation_log_out, "Logout"));
 
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP_MR1) {
-            verify(AccountManagerShadow.mockManager, times(2)).removeAccount(argumentCaptor.capture(), eq(mainActivity),
-                    any(), any());
+            verify(AccountManagerShadow.mockManager, times(2)).removeAccountExplicitly(argumentCaptor.capture());
         } else {
             verify(AccountManagerShadow.mockManager, times(2)).removeAccount(argumentCaptor.capture(),
                     any(), any());

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitCompareViewActivity.java
Patch:
@@ -76,7 +76,6 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         actionBar.setDisplayHomeAsUpEnabled(true);
         actionBar.setSubtitle(InfoUtils.createRepoId(repository));
-        avatars.bind(actionBar, repository.owner());
 
         fragment = getSupportFragmentManager()
             .findFragmentById(R.id.list);

File: app/src/main/java/com/github/pockethub/android/ui/issue/FiltersViewActivity.java
Patch:
@@ -62,7 +62,6 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(R.string.bookmarks);
-        actionBar.setIcon(R.drawable.ic_bookmark_white_24dp);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         fragment = (FilterListFragment) getSupportFragmentManager()

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueBrowseActivity.java
Patch:
@@ -65,7 +65,6 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setTitle(repo.name());
         actionBar.setSubtitle(repo.owner().login());
         actionBar.setDisplayHomeAsUpEnabled(true);
-        avatars.bind(actionBar, repo.owner());
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchActivity.java
Patch:
@@ -102,7 +102,6 @@ protected void onCreate(Bundle savedInstanceState) {
             if (repository != null) {
                 actionBar.setSubtitle(InfoUtils.createRepoId(repository));
                 actionBar.setDisplayHomeAsUpEnabled(true);
-                avatars.bind(actionBar, repository.owner());
             }
         }
 

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsActivity.java
Patch:
@@ -65,7 +65,6 @@ protected void onCreate(Bundle savedInstanceState) {
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         User owner = repository.owner();
-        avatars.bind(getSupportActionBar(), owner);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/ConfirmDialogFragment.java
Patch:
@@ -23,6 +23,7 @@
 import androidx.fragment.app.FragmentActivity;
 
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.github.pockethub.android.ui.base.DialogFragmentHelper;
 
 import static android.app.Activity.RESULT_CANCELED;
 import static android.app.Activity.RESULT_OK;

File: app/src/main/java/com/github/pockethub/android/ui/SingleChoiceDialogFragment.java
Patch:
@@ -20,6 +20,8 @@
 import androidx.annotation.NonNull;
 import android.view.View;
 
+import com.github.pockethub.android.ui.base.BaseActivity;
+import com.github.pockethub.android.ui.base.DialogFragmentHelper;
 import com.xwray.groupie.Item;
 import com.xwray.groupie.OnItemClickListener;
 

File: app/src/main/java/com/github/pockethub/android/ui/base/DialogFragmentHelper.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.pockethub.android.ui;
+package com.github.pockethub.android.ui.base;
 
 import android.content.DialogInterface;
 import android.os.Bundle;

File: app/src/main/java/com/github/pockethub/android/ui/base/FragmentPagerAdapter.java
Patch:
@@ -13,13 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.pockethub.android.ui;
+package com.github.pockethub.android.ui.base;
 
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 import androidx.appcompat.app.AppCompatActivity;
 import android.view.ViewGroup;
+import com.github.pockethub.android.ui.FragmentProvider;
 
 import java.util.HashSet;
 import java.util.Set;

File: app/src/main/java/com/github/pockethub/android/ui/base/FragmentStatePagerAdapter.java
Patch:
@@ -13,18 +13,19 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.pockethub.android.ui;
+package com.github.pockethub.android.ui.base;
 
 import androidx.fragment.app.Fragment;
 import androidx.appcompat.app.AppCompatActivity;
 import android.view.ViewGroup;
+import com.github.pockethub.android.ui.FragmentProvider;
 
 /**
  * Pager that stores current fragment
  */
 public abstract class FragmentStatePagerAdapter extends
         androidx.fragment.app.FragmentStatePagerAdapter implements
-    FragmentProvider {
+        FragmentProvider {
 
     private final AppCompatActivity activity;
 

File: app/src/main/java/com/github/pockethub/android/ui/comment/CommentPreviewPagerAdapter.java
Patch:
@@ -20,7 +20,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 import com.meisolsson.githubsdk.model.Repository;
 
 /**

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitCompareViewActivity.java
Patch:
@@ -19,14 +19,13 @@
 import android.os.Bundle;
 import androidx.fragment.app.Fragment;
 import androidx.appcompat.app.ActionBar;
-import androidx.appcompat.widget.Toolbar;
 import android.view.Menu;
 import android.view.MenuItem;
 
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.Intents.Builder;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.repo.RepositoryViewActivity;
 import com.github.pockethub.android.util.AvatarLoader;
 import com.github.pockethub.android.util.InfoUtils;

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitPagerAdapter.java
Patch:
@@ -20,7 +20,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.meisolsson.githubsdk.model.Repository;
-import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentStatePagerAdapter;
 
 import static com.github.pockethub.android.Intents.EXTRA_BASE;
 import static com.github.pockethub.android.Intents.EXTRA_REPOSITORY;

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistFilesPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import androidx.fragment.app.Fragment;
 import androidx.appcompat.app.AppCompatActivity;
 
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 import com.meisolsson.githubsdk.model.Gist;
 import com.meisolsson.githubsdk.model.GistFile;
 

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistQueriesPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import androidx.fragment.app.Fragment;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 
 /**
  * Pager adapter for different Gist queries

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsPagerAdapter.java
Patch:
@@ -21,7 +21,7 @@
 import android.util.SparseArray;
 import android.view.ViewGroup;
 
-import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentStatePagerAdapter;
 
 import static com.github.pockethub.android.Intents.EXTRA_GIST_ID;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/AssigneeDialog.java
Patch:
@@ -25,7 +25,7 @@
 import com.meisolsson.githubsdk.model.Repository;
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.ToastUtils;
 import com.meisolsson.githubsdk.service.issues.IssueAssigneeService;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/AssigneeDialogFragment.java
Patch:
@@ -23,7 +23,7 @@
 import com.github.pockethub.android.ui.item.dialog.AssigneeDialogItem;
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.SingleChoiceDialogFragment;
 import com.github.pockethub.android.util.AvatarLoader;
 import com.xwray.groupie.GroupAdapter;

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditAssigneeTask.java
Patch:
@@ -24,9 +24,8 @@
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueStore;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.meisolsson.githubsdk.model.request.issue.IssueRequest;
-import javax.inject.Inject;
 
 import java.util.Collections;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditLabelsTask.java
Patch:
@@ -26,7 +26,7 @@
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueStore;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.meisolsson.githubsdk.model.request.issue.IssueRequest;
 
 import java.util.ArrayList;

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditMilestoneTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.github.pockethub.android.core.issue.IssueStore;
 import com.github.pockethub.android.rx.AutoDisposeUtils;
 import com.github.pockethub.android.rx.RxProgress;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.google.auto.factory.AutoFactory;
 import com.google.auto.factory.Provided;
 import com.meisolsson.githubsdk.model.Issue;

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditStateTask.java
Patch:
@@ -19,7 +19,7 @@
 import com.github.pockethub.android.core.issue.IssueStore;
 import com.github.pockethub.android.rx.AutoDisposeUtils;
 import com.github.pockethub.android.rx.RxProgress;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.ConfirmDialogFragment;
 import com.google.auto.factory.AutoFactory;
 import com.google.auto.factory.Provided;

File: app/src/main/java/com/github/pockethub/android/ui/issue/FiltersViewActivity.java
Patch:
@@ -23,7 +23,7 @@
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueFilter;
 import com.github.pockethub.android.persistence.AccountDataManager;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.MainActivity;
 import io.reactivex.disposables.CompositeDisposable;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueBrowseActivity.java
Patch:
@@ -18,14 +18,13 @@
 import android.content.Intent;
 import android.os.Bundle;
 import androidx.appcompat.app.ActionBar;
-import androidx.appcompat.widget.Toolbar;
 import android.view.MenuItem;
 
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.Intents.Builder;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueFilter;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.AvatarLoader;
 import javax.inject.Inject;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueDashboardPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import android.os.Bundle;
 import androidx.fragment.app.Fragment;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentStatePagerAdapter;
 
 import java.io.Serializable;
 import java.util.HashMap;

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchActivity.java
Patch:
@@ -25,7 +25,7 @@
 import androidx.appcompat.widget.SearchView;
 import androidx.core.view.MenuItemCompat;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.repo.RepositoryViewActivity;
 import com.github.pockethub.android.util.AvatarLoader;
 import com.github.pockethub.android.util.InfoUtils;

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesPagerAdapter.java
Patch:
@@ -25,7 +25,7 @@
 import com.meisolsson.githubsdk.model.Repository;
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.core.issue.IssueStore;
-import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentStatePagerAdapter;
 
 import java.util.List;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/LabelsDialog.java
Patch:
@@ -25,7 +25,7 @@
 import com.meisolsson.githubsdk.model.Page;
 import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.ToastUtils;
 import com.meisolsson.githubsdk.service.issues.IssueLabelService;
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/LabelsDialogFragment.java
Patch:
@@ -21,8 +21,8 @@
 import android.view.View;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
-import com.github.pockethub.android.ui.DialogFragmentHelper;
+import com.github.pockethub.android.ui.base.BaseActivity;
+import com.github.pockethub.android.ui.base.DialogFragmentHelper;
 import com.github.pockethub.android.ui.item.dialog.LabelDialogItem;
 import com.meisolsson.githubsdk.model.Label;
 import com.xwray.groupie.GroupAdapter;

File: app/src/main/java/com/github/pockethub/android/ui/issue/MilestoneDialog.java
Patch:
@@ -20,7 +20,7 @@
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.GitHubRequest;
 import com.github.pockethub.android.rx.RxProgress;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.RxPageUtil;
 import com.github.pockethub.android.util.ToastUtils;
 import com.meisolsson.githubsdk.core.ServiceGenerator;

File: app/src/main/java/com/github/pockethub/android/ui/notification/NotificationPagerAdapter.java
Patch:
@@ -5,7 +5,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 
 class NotificationPagerAdapter extends FragmentPagerAdapter {
 

File: app/src/main/java/com/github/pockethub/android/ui/ref/RefDialog.java
Patch:
@@ -21,7 +21,7 @@
 import com.github.pockethub.android.core.GitHubRequest;
 import com.github.pockethub.android.core.ref.RefUtils;
 import com.github.pockethub.android.rx.RxProgress;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.RxPageUtil;
 import com.github.pockethub.android.util.ToastUtils;
 import com.meisolsson.githubsdk.core.ServiceGenerator;
@@ -35,8 +35,6 @@
 
 import io.reactivex.Observable;
 import io.reactivex.Single;
-import io.reactivex.android.schedulers.AndroidSchedulers;
-import io.reactivex.schedulers.Schedulers;
 import retrofit2.Response;
 
 import static java.lang.String.CASE_INSENSITIVE_ORDER;

File: app/src/main/java/com/github/pockethub/android/ui/ref/RefDialogFragment.java
Patch:
@@ -21,7 +21,7 @@
 import android.view.View;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.ui.SingleChoiceDialogFragment;
 import com.github.pockethub.android.ui.item.dialog.RefDialogItem;
 import com.meisolsson.githubsdk.model.git.GitReference;

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsActivity.java
Patch:
@@ -18,14 +18,13 @@
 import android.content.Intent;
 import android.os.Bundle;
 import androidx.appcompat.app.ActionBar;
-import androidx.appcompat.widget.Toolbar;
 import android.view.MenuItem;
 
 import com.meisolsson.githubsdk.model.Repository;
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.Intents;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.BaseActivity;
+import com.github.pockethub.android.ui.base.BaseActivity;
 import com.github.pockethub.android.util.AvatarLoader;
 import javax.inject.Inject;
 

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryPagerAdapter.java
Patch:
@@ -21,7 +21,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 import com.github.pockethub.android.ui.code.RepositoryCodeFragment;
 import com.github.pockethub.android.ui.commit.CommitListFragment;
 import com.github.pockethub.android.ui.issue.IssuesFragment;

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchPagerAdapter.java
Patch:
@@ -20,7 +20,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 
 /**
  * Adapter to view various pages of search screen

File: app/src/main/java/com/github/pockethub/android/ui/user/HomePagerAdapter.java
Patch:
@@ -23,7 +23,7 @@
 
 import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 import com.github.pockethub.android.ui.repo.RepositoryListFragment;
 
 import java.util.HashSet;

File: app/src/main/java/com/github/pockethub/android/ui/user/UserPagerAdapter.java
Patch:
@@ -20,7 +20,7 @@
 import androidx.appcompat.app.AppCompatActivity;
 
 import com.github.pockethub.android.R;
-import com.github.pockethub.android.ui.FragmentPagerAdapter;
+import com.github.pockethub.android.ui.base.FragmentPagerAdapter;
 import com.github.pockethub.android.ui.repo.UserRepositoryListFragment;
 
 /**

File: app/src/main/java/com/github/pockethub/android/util/MarkdownLoader.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.pockethub.android.ui;
+package com.github.pockethub.android.util;
 
 import android.content.Context;
 import android.text.Html.ImageGetter;

File: app/src/test/java/com/github/pockethub/android/ui/MainActivityTest.java
Patch:
@@ -19,6 +19,7 @@
 import android.accounts.Account;
 import android.os.Build;
 import android.view.MenuItem;
+import androidx.test.core.app.ApplicationProvider;
 import com.github.pockethub.android.AccountManagerShadow;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.gist.GistsPagerFragment;
@@ -32,15 +33,13 @@
 import org.mockito.ArgumentCaptor;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.ArrayList;
 import java.util.List;
 
 import static org.hamcrest.CoreMatchers.*;
 import static org.junit.Assert.assertThat;
-import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.*;
 
@@ -73,7 +72,7 @@ private MenuItem getMockMenuItem(int id, String title) {
     public void testNavigationDrawerClickListenerPos1_ShouldReplaceHomePagerFragmentToContainer() {
         mainActivity.onNavigationItemSelected(getMockMenuItem(R.id.navigation_home, "HomeTitle"));
 
-        String expectedString = RuntimeEnvironment.application.getString(R.string.app_name);
+        String expectedString = ApplicationProvider.getApplicationContext().getString(R.string.app_name);
         assertFragmentInstanceAndSupportActionBarTitle(HomePagerFragment.class, expectedString);
     }
 

File: app/src/test/java/com/github/pockethub/android/ui/MainActivityTest.java
Patch:
@@ -19,6 +19,7 @@
 import android.accounts.Account;
 import android.os.Build;
 import android.view.MenuItem;
+import androidx.test.core.app.ApplicationProvider;
 import com.github.pockethub.android.AccountManagerShadow;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.gist.GistsPagerFragment;
@@ -32,15 +33,13 @@
 import org.mockito.ArgumentCaptor;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.ArrayList;
 import java.util.List;
 
 import static org.hamcrest.CoreMatchers.*;
 import static org.junit.Assert.assertThat;
-import static org.mockito.Matchers.eq;
 import static org.mockito.Mockito.any;
 import static org.mockito.Mockito.*;
 
@@ -73,7 +72,7 @@ private MenuItem getMockMenuItem(int id, String title) {
     public void testNavigationDrawerClickListenerPos1_ShouldReplaceHomePagerFragmentToContainer() {
         mainActivity.onNavigationItemSelected(getMockMenuItem(R.id.navigation_home, "HomeTitle"));
 
-        String expectedString = RuntimeEnvironment.application.getString(R.string.app_name);
+        String expectedString = ApplicationProvider.getApplicationContext().getString(R.string.app_name);
         assertFragmentInstanceAndSupportActionBarTitle(HomePagerFragment.class, expectedString);
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryReadmeFragment.java
Patch:
@@ -24,7 +24,7 @@ public class RepositoryReadmeFragment extends BaseFragment {
 
     private static final String PAGE_START = "<!DOCTYPE html><html lang=\"en\"> <head> <title></title>" +
             "<meta charset=\"UTF-8\"> " +
-            "<meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\"/>" +
+            "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\"/>" +
             "<script src=\"intercept.js\"></script>" +
             "<link href=\"github.css\" rel=\"stylesheet\"> </head> <body>";
 

File: app/src/main/java/com/github/pockethub/android/core/issue/RefreshIssueTask.java
Patch:
@@ -100,7 +100,7 @@ public Single<FullIssue> refresh() {
                 })
                 .flatMap(issue -> getAllComments(repo.owner().login(), repo.name(), issue)
                         .zipWith(Single.just(issue),
-                                (comments, issue1) -> new FullIssue(issue1, comments, null)))
+                                (comments, issue1) -> new FullIssue(issue1, comments, Collections.emptyList())))
                 .zipWith(getAllEvents(repo.owner().login(), repo.name(), issueNumber),
                         (fullIssue, issueEvents) -> new FullIssue(fullIssue.getIssue(),
                                 fullIssue.getComments(), issueEvents))

File: app/src/main/java/com/github/pockethub/android/core/issue/RefreshIssueTask.java
Patch:
@@ -100,7 +100,7 @@ public Single<FullIssue> refresh() {
                 })
                 .flatMap(issue -> getAllComments(repo.owner().login(), repo.name(), issue)
                         .zipWith(Single.just(issue),
-                                (comments, issue1) -> new FullIssue(issue1, comments, null)))
+                                (comments, issue1) -> new FullIssue(issue1, comments, Collections.emptyList())))
                 .zipWith(getAllEvents(repo.owner().login(), repo.name(), issueNumber),
                         (fullIssue, issueEvents) -> new FullIssue(fullIssue.getIssue(),
                                 fullIssue.getComments(), issueEvents))

File: app/src/androidTest/java/com/github/pockethub/android/tests/issue/IssueFilterTest.java
Patch:
@@ -46,7 +46,7 @@ public void testEqualFilter() {
         assertEquals(filter1.hashCode(), filter2.hashCode());
 
         User user = User.builder()
-                .id(2)
+                .id(2L)
                 .build();
 
         filter1.setAssignee(user);

File: app/src/main/java/com/github/pockethub/android/ui/item/news/CreateEventItem.java
Patch:
@@ -25,11 +25,11 @@ public void bind(@NonNull NewsItem.ViewHolder viewHolder, int position) {
         CreatePayload payload = (CreatePayload) getData().payload();
 
         main.append(" created ");
-        String refType = payload.refType().name();
+        String refType = payload.refType().name().toLowerCase();
         main.append(refType);
         main.append(' ');
 
-        if (!"Repository".equals(refType)) {
+        if (!"repository".equals(refType)) {
             main.append(payload.ref());
             main.append(" at ");
             boldRepo(main, getData());

File: app/src/main/java/com/github/pockethub/android/ui/item/news/DeleteEventItem.java
Patch:
@@ -26,7 +26,7 @@ public void bind(@NonNull NewsItem.ViewHolder viewHolder, int position) {
         DeletePayload payload = (DeletePayload) getData().payload();
 
         main.append(" deleted ");
-        main.append(payload.refType().name());
+        main.append(payload.refType().name().toLowerCase());
         main.append(' ');
         main.append(payload.ref());
         main.append(" at ");

File: app/src/main/java/com/github/pockethub/android/ui/item/news/IssuesEventItem.java
Patch:
@@ -44,7 +44,7 @@ public void bind(@NonNull NewsItem.ViewHolder viewHolder, int position) {
 
         Issue issue = payload.issue();
         main.append(' ');
-        main.append(action.name());
+        main.append(action.name().toLowerCase());
         main.append(' ');
         main.bold("issue " + issue.number());
         main.append(" on ");

File: app/src/main/java/com/github/pockethub/android/ui/item/news/PullRequestEventItem.java
Patch:
@@ -28,11 +28,12 @@ public void bind(@NonNull NewsItem.ViewHolder viewHolder, int position) {
         boldActor(main, getData());
 
         PullRequestPayload.Action action = payload.action();
-        main.append(' ');
         if (PullRequestPayload.Action.Synchronized.equals(action)) {
             main.append("updated");
         }
         main.append(' ');
+        main.append(action.name().toLowerCase());
+        main.append(' ');
         main.bold("pull request " + payload.number());
         main.append(" on ");
 

File: app/src/main/java/com/github/pockethub/android/ui/item/GitHubCommentItem.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.pockethub.android.ui.item;
 
 import android.support.annotation.NonNull;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
@@ -87,6 +88,7 @@ public class ViewHolder extends BaseViewHolder {
 
         public ViewHolder(@NonNull View rootView) {
             super(rootView);
+            body.setMovementMethod(LinkMovementMethod.getInstance());
         }
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/item/commit/CommitCommentItem.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.pockethub.android.ui.item.commit;
 
 import android.support.annotation.NonNull;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
@@ -61,6 +62,7 @@ public class ViewHolder extends BaseViewHolder {
 
         public ViewHolder(@NonNull View rootView) {
             super(rootView);
+            body.setMovementMethod(LinkMovementMethod.getInstance());
         }
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/item/commit/CommitHeaderItem.java
Patch:
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
@@ -102,6 +103,7 @@ public class ViewHolder extends BaseViewHolder {
 
         public ViewHolder(@NonNull View rootView) {
             super(rootView);
+            commitMessage.setMovementMethod(LinkMovementMethod.getInstance());
         }
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/item/commit/CommitItem.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.pockethub.android.ui.item.commit;
 
 import android.support.annotation.NonNull;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;

File: app/src/main/java/com/github/pockethub/android/ui/item/gist/GistHeaderItem.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.text.TextUtils;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.TextView;
 
@@ -78,6 +79,7 @@ public class ViewHolder extends BaseViewHolder {
 
         public ViewHolder(@NonNull View rootView) {
             super(rootView);
+            description.setMovementMethod(LinkMovementMethod.getInstance());
         }
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/item/issue/IssueHeaderItem.java
Patch:
@@ -3,14 +3,14 @@
 import android.content.Context;
 import android.support.annotation.NonNull;
 import android.text.TextUtils;
+import android.text.method.LinkMovementMethod;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueUtils;
-import com.github.pockethub.android.ui.SelectableLinkMovementMethod;
 import com.github.pockethub.android.ui.StyledText;
 import com.github.pockethub.android.ui.issue.LabelDrawableSpan;
 import com.github.pockethub.android.ui.item.BaseDataItem;
@@ -178,7 +178,7 @@ public class ViewHolder extends BaseViewHolder {
 
         public ViewHolder(@NonNull View rootView) {
             super(rootView);
-            bodyText.setMovementMethod(SelectableLinkMovementMethod.getInstance());
+            bodyText.setMovementMethod(LinkMovementMethod.getInstance());
         }
     }
 

File: app/src/main/java/com/github/pockethub/android/Intents.java
Patch:
@@ -36,7 +36,7 @@ public class Intents {
     /**
      * Prefix for all intents created
      */
-    public static final String INTENT_PREFIX = "com.github.pockethub.android.";
+    public static final String INTENT_PREFIX = BuildConfig.APPLICATION_ID + ".";
 
     /**
      * Prefix for all extra data added to intents

File: app/src/main/java/com/github/pockethub/android/accounts/AccountAuthenticator.java
Patch:
@@ -24,10 +24,12 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 
+import com.github.pockethub.android.BuildConfig;
+
 import static android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE;
 import static android.accounts.AccountManager.KEY_BOOLEAN_RESULT;
 import static android.accounts.AccountManager.KEY_INTENT;
-import static com.github.pockethub.android.accounts.AccountConstants.ACCOUNT_TYPE;
+import static com.github.pockethub.android.BuildConfig.ACCOUNT_TYPE;
 import static com.github.pockethub.android.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE;
 import static com.github.pockethub.android.accounts.LoginActivity.PARAM_USERNAME;
 

File: app/src/main/java/com/github/pockethub/android/accounts/AccountUtils.java
Patch:
@@ -29,6 +29,7 @@
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.github.pockethub.android.BuildConfig;
 import com.github.pockethub.android.R;
 import com.meisolsson.githubsdk.model.User;
 
@@ -39,7 +40,7 @@
 
 import static android.accounts.AccountManager.KEY_ACCOUNT_NAME;
 import static android.util.Log.DEBUG;
-import static com.github.pockethub.android.accounts.AccountConstants.ACCOUNT_TYPE;
+import static com.github.pockethub.android.BuildConfig.ACCOUNT_TYPE;
 
 /**
  * Helpers for accessing {@link AccountManager}
@@ -74,8 +75,7 @@ public static boolean hasAuthenticator(final AccountManager manager) {
                 for (AuthenticatorDescription descriptor : types) {
                     if (descriptor != null
                             && ACCOUNT_TYPE.equals(descriptor.type)) {
-                        HAS_AUTHENTICATOR = "com.github.pockethub.android"
-                                .equals(descriptor.packageName);
+                        HAS_AUTHENTICATOR = BuildConfig.APPLICATION_ID.equals(descriptor.packageName);
                         break;
                     }
                 }

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchSuggestionsProvider.java
Patch:
@@ -19,13 +19,15 @@
 import android.content.SearchRecentSuggestionsProvider;
 import android.provider.SearchRecentSuggestions;
 
+import com.github.pockethub.android.BuildConfig;
+
 /**
  * Suggestions provider for recently searched for issue queries
  */
 public class IssueSearchSuggestionsProvider extends
         SearchRecentSuggestionsProvider {
 
-    private static final String AUTHORITY = "com.github.search.suggest.recent.issues";
+    private static final String AUTHORITY = BuildConfig.PROVIDER_AUTHORITY_SEARCH_SUGGEST_ISSUES;
 
     /**
      * Save query to history

File: app/src/main/java/com/github/pockethub/android/ui/search/RepositorySearchSuggestionsProvider.java
Patch:
@@ -19,13 +19,15 @@
 import android.content.SearchRecentSuggestionsProvider;
 import android.provider.SearchRecentSuggestions;
 
+import com.github.pockethub.android.BuildConfig;
+
 /**
  * Suggestions provider for recently searched for repository queries
  */
 public class RepositorySearchSuggestionsProvider extends
         SearchRecentSuggestionsProvider {
 
-    private static final String AUTHORITY = "com.github.search.suggest.recent.repos";
+    private static final String AUTHORITY = BuildConfig.PROVIDER_AUTHORITY_SEARCH_SUGGEST_REPOS;
 
     /**
      * Save query to history

File: app/src/main/java/com/github/pockethub/android/Intents.java
Patch:
@@ -36,7 +36,7 @@ public class Intents {
     /**
      * Prefix for all intents created
      */
-    public static final String INTENT_PREFIX = "com.github.pockethub.android.";
+    public static final String INTENT_PREFIX = BuildConfig.APPLICATION_ID + ".";
 
     /**
      * Prefix for all extra data added to intents

File: app/src/main/java/com/github/pockethub/android/accounts/AccountAuthenticator.java
Patch:
@@ -24,10 +24,12 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 
+import com.github.pockethub.android.BuildConfig;
+
 import static android.accounts.AccountManager.KEY_ACCOUNT_AUTHENTICATOR_RESPONSE;
 import static android.accounts.AccountManager.KEY_BOOLEAN_RESULT;
 import static android.accounts.AccountManager.KEY_INTENT;
-import static com.github.pockethub.android.accounts.AccountConstants.ACCOUNT_TYPE;
+import static com.github.pockethub.android.BuildConfig.ACCOUNT_TYPE;
 import static com.github.pockethub.android.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE;
 import static com.github.pockethub.android.accounts.LoginActivity.PARAM_USERNAME;
 

File: app/src/main/java/com/github/pockethub/android/accounts/AccountUtils.java
Patch:
@@ -29,6 +29,7 @@
 import android.util.Log;
 
 import com.afollestad.materialdialogs.MaterialDialog;
+import com.github.pockethub.android.BuildConfig;
 import com.github.pockethub.android.R;
 import com.meisolsson.githubsdk.model.User;
 
@@ -39,7 +40,7 @@
 
 import static android.accounts.AccountManager.KEY_ACCOUNT_NAME;
 import static android.util.Log.DEBUG;
-import static com.github.pockethub.android.accounts.AccountConstants.ACCOUNT_TYPE;
+import static com.github.pockethub.android.BuildConfig.ACCOUNT_TYPE;
 
 /**
  * Helpers for accessing {@link AccountManager}
@@ -74,8 +75,7 @@ public static boolean hasAuthenticator(final AccountManager manager) {
                 for (AuthenticatorDescription descriptor : types) {
                     if (descriptor != null
                             && ACCOUNT_TYPE.equals(descriptor.type)) {
-                        HAS_AUTHENTICATOR = "com.github.pockethub.android"
-                                .equals(descriptor.packageName);
+                        HAS_AUTHENTICATOR = BuildConfig.APPLICATION_ID.equals(descriptor.packageName);
                         break;
                     }
                 }

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchSuggestionsProvider.java
Patch:
@@ -19,13 +19,15 @@
 import android.content.SearchRecentSuggestionsProvider;
 import android.provider.SearchRecentSuggestions;
 
+import com.github.pockethub.android.BuildConfig;
+
 /**
  * Suggestions provider for recently searched for issue queries
  */
 public class IssueSearchSuggestionsProvider extends
         SearchRecentSuggestionsProvider {
 
-    private static final String AUTHORITY = "com.github.search.suggest.recent.issues";
+    private static final String AUTHORITY = BuildConfig.PROVIDER_AUTHORITY_SEARCH_SUGGEST_ISSUES;
 
     /**
      * Save query to history

File: app/src/main/java/com/github/pockethub/android/ui/search/RepositorySearchSuggestionsProvider.java
Patch:
@@ -19,13 +19,15 @@
 import android.content.SearchRecentSuggestionsProvider;
 import android.provider.SearchRecentSuggestions;
 
+import com.github.pockethub.android.BuildConfig;
+
 /**
  * Suggestions provider for recently searched for repository queries
  */
 public class RepositorySearchSuggestionsProvider extends
         SearchRecentSuggestionsProvider {
 
-    private static final String AUTHORITY = "com.github.search.suggest.recent.repos";
+    private static final String AUTHORITY = BuildConfig.PROVIDER_AUTHORITY_SEARCH_SUGGEST_REPOS;
 
     /**
      * Save query to history

File: app/src/main/java/com/github/pockethub/android/ui/TabPagerFragment.java
Patch:
@@ -164,8 +164,8 @@ public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceStat
     }
 
     @Override
-    public void onDestroy() {
-        super.onDestroy();
+    public void onDestroyView() {
+        super.onDestroyView();
         pager.removeOnPageChangeListener(this);
     }
 

File: app/src/main/java/com/github/pockethub/android/ApplicationComponent.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.github.pockethub.android.dagger.ActivityBuilder;
 import com.github.pockethub.android.dagger.DialogFragmentBuilder;
+import com.github.pockethub.android.dagger.ServiceBuilder;
 
 import javax.inject.Singleton;
 
@@ -18,6 +19,7 @@
         ApplicationModule.class,
         PocketHubModule.class,
         ActivityBuilder.class,
+        ServiceBuilder.class,
         DialogFragmentBuilder.class,
         GitHubModule.class
 })

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryViewActivity.java
Patch:
@@ -138,7 +138,8 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         followItem.setTitle(isStarred ? R.string.unstar : R.string.star);
 
         MenuItem parentRepo = menu.findItem(R.id.m_parent_repo);
-        parentRepo.setVisible(repository.isFork());
+        if(repository != null && repository.isFork() != null)
+            parentRepo.setVisible(repository.isFork());
 
         return super.onPrepareOptionsMenu(menu);
     }

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryViewActivity.java
Patch:
@@ -138,6 +138,7 @@ public boolean onPrepareOptionsMenu(Menu menu) {
         followItem.setTitle(isStarred ? R.string.unstar : R.string.star);
 
         MenuItem parentRepo = menu.findItem(R.id.m_parent_repo);
+        if(repository != null && repository.isFork() != null)
         parentRepo.setVisible(repository.isFork());
 
         return super.onPrepareOptionsMenu(menu);

File: app/src/test/java/com/github/pockethub/android/ui/user/IconAndViewTextManagerTest.java
Patch:
@@ -25,15 +25,15 @@
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.RobolectricGradleTestRunner;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
 import static org.junit.Assert.assertEquals;
 import static org.mockito.Mockito.doNothing;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.verify;
 
-@RunWith(RobolectricGradleTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, sdk = 21)
 public class IconAndViewTextManagerTest {
 

File: app/src/test/java/com/github/pockethub/android/ui/user/IconAndViewTextManagerTest.java
Patch:
@@ -25,15 +25,15 @@
 
 import org.junit.Test;
 import org.junit.runner.RunWith;
-import org.robolectric.RobolectricGradleTestRunner;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.annotation.Config;
 
 import static org.junit.Assert.assertEquals;
 import static org.mockito.Mockito.doNothing;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.verify;
 
-@RunWith(RobolectricGradleTestRunner.class)
+@RunWith(RobolectricTestRunner.class)
 @Config(constants = BuildConfig.class, sdk = 21)
 public class IconAndViewTextManagerTest {
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesFragment.java
Patch:
@@ -209,6 +209,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             return false;
         }
         switch (item.getItemId()) {
+            case R.id.m_refresh:
+                forceRefresh();
+            return true;
         case R.id.create_issue:
             startActivityForResult(EditIssueActivity.createIntent(repository),
                     ISSUE_CREATE);

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesFragment.java
Patch:
@@ -209,6 +209,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             return false;
         }
         switch (item.getItemId()) {
+            case R.id.m_refresh:
+                forceRefresh();
+            return true;
         case R.id.create_issue:
             startActivityForResult(EditIssueActivity.createIntent(repository),
                     ISSUE_CREATE);

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistFragment.java
Patch:
@@ -415,8 +415,8 @@ private void refreshGist() {
                     starred = fullGist.isStarred();
                     loadFinished = true;
                     gist = fullGist.getGist();
-                    comments = fullGist;
-                    updateList(fullGist.getGist(), fullGist);
+                    comments = fullGist.getComments();
+                    updateList(fullGist.getGist(), fullGist.getComments());
                 }, e -> ToastUtils.show(getActivity(), e, R.string.error_gist_load));
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -417,7 +417,7 @@ private void refreshIssue() {
                     issue = fullIssue.getIssue();
                     items = new ArrayList<>();
                     items.addAll(fullIssue.getEvents());
-                    items.addAll(fullIssue);
+                    items.addAll(fullIssue.getComments());
                     updateList(fullIssue.getIssue(), items);
                 }, e -> {
                     ToastUtils.show(getActivity(), e, R.string.error_issue_load);

File: app/src/androidTest/java/com/github/pockethub/android/tests/commit/DiffStylerTest.java
Patch:
@@ -61,7 +61,7 @@ public void testEmptyFiles() {
         DiffStyler styler = new DiffStyler(getContext().getResources());
         styler.setFiles(null);
         assertTrue(styler.get("navigation_drawer_header_background").isEmpty());
-        styler.setFiles(Collections.<GitHubFile>emptyList());
+        styler.setFiles(Collections.emptyList());
         assertTrue(styler.get("navigation_drawer_header_background").isEmpty());
     }
 

File: app/src/main/java/com/github/pockethub/android/core/commit/FullCommitFile.java
Patch:
@@ -50,7 +50,7 @@ public FullCommitFile(final GitHubFile file) {
      */
     public List<GitComment> get(final int line) {
         List<GitComment> lineComments = comments.get(line);
-        return lineComments != null ? lineComments : Collections.<GitComment> emptyList();
+        return lineComments != null ? lineComments : Collections.emptyList();
     }
 
     /**

File: app/src/main/java/com/github/pockethub/android/ui/code/RepositoryCodeFragment.java
Patch:
@@ -152,7 +152,7 @@ private void refreshTree(final GitReference reference) {
         Single.create(new RefreshTreeTask(getActivity(), repository, reference))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<FullTree>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(fullTree -> {
                     if (folder == null || folder.parent == null) {
                         setFolder(fullTree, fullTree.root);

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitDiffListFragment.java
Patch:
@@ -241,7 +241,7 @@ private void refreshCommit() {
         Single.create(new RefreshCommitTask(getActivity(), repository, base, commentImageGetter))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<FullCommit>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(full -> {
                     List<GitHubFile> files = full.getCommit().files();
                     diffStyler.setFiles(files);

File: app/src/main/java/com/github/pockethub/android/ui/commit/DiffStyler.java
Patch:
@@ -134,6 +134,6 @@ public List<CharSequence> get(final String file) {
             return Collections.emptyList();
         }
         List<CharSequence> lines = diffs.get(file);
-        return lines != null ? lines : Collections.<CharSequence>emptyList();
+        return lines != null ? lines : Collections.emptyList();
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistFilesViewActivity.java
Patch:
@@ -118,7 +118,7 @@ protected void onCreate(Bundle savedInstanceState) {
             Single.create(new RefreshGistTask(this, gistId, imageGetter))
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<FullGist>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(gist -> {
                         this.gist = gist.getGist();
                         configurePager();

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsViewActivity.java
Patch:
@@ -173,7 +173,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
                     .deleteGist(gistId)
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<Response<Boolean>>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(new ProgressObserverAdapter<Response<Boolean>>(this, R.string.deleting_gist) {
 
                         @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditAssigneeTask.java
Patch:
@@ -121,7 +121,7 @@ public EditAssigneeTask edit(User user) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
 
         return this;

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditIssueActivity.java
Patch:
@@ -523,7 +523,7 @@ private void checkCollaboratorStatus() {
                 .isUserCollaborator(repository.owner().login(), repository.name(), AccountUtils.getLogin(this))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     showMainContent();
                     if (response.code() == 204) {

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditLabelsTask.java
Patch:
@@ -118,7 +118,7 @@ public EditLabelsTask edit(Label[] labels) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
         return this;
     }

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditMilestoneTask.java
Patch:
@@ -110,7 +110,7 @@ public EditMilestoneTask edit(Milestone milestone) {
             Single.create(this)
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(activity.<Issue>bindToLifecycle())
+                    .compose(activity.bindToLifecycle())
                     .subscribe(observer);
         }
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditStateTask.java
Patch:
@@ -113,7 +113,7 @@ public EditStateTask edit(boolean close) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
 
         return this;

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -412,7 +412,7 @@ private void refreshIssue() {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .filter(fullIssue -> isUsable())
-                .compose(this.<FullIssue>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(fullIssue -> {
                     issue = fullIssue.getIssue();
                     items = new ArrayList<>();
@@ -501,7 +501,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
                     .deleteIssueComment(repositoryId.owner().login(), repositoryId.name(), comment.id())
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<Response<Boolean>>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(new ProgressObserverAdapter<Response<Boolean>>(getActivity(), R.string.deleting_comment) {
 
                         @Override

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryViewActivity.java
Patch:
@@ -246,7 +246,7 @@ private void starRepository() {
 
         starSingle.subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(aBoolean -> {
                     isStarred = !isStarred;
                     setResult(RESOURCE_CHANGED);
@@ -259,7 +259,7 @@ private void checkStarredRepositoryStatus() {
                 .checkIfRepositoryIsStarred(repository.owner().login(), repository.name())
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     isStarred = response.code() == 204;
                     starredStatusChecked = true;
@@ -310,7 +310,7 @@ public void onNegative(MaterialDialog dialog) {
                                 .deleteRepository(repository.owner().login(), repository.name())
                                 .subscribeOn(Schedulers.io())
                                 .observeOn(AndroidSchedulers.mainThread())
-                                .compose(RepositoryViewActivity.this.<Response<Boolean>>bindToLifecycle())
+                                .compose(RepositoryViewActivity.this.bindToLifecycle())
                                 .subscribe(response -> {
                                     onBackPressed();
                                     ToastUtils.show(RepositoryViewActivity.this, R.string.delete_successful);

File: app/src/main/java/com/github/pockethub/android/ui/user/UserViewActivity.java
Patch:
@@ -201,7 +201,7 @@ private void followUser() {
 
         followSingle.subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(aBoolean -> isFollowing = !isFollowing,
                         e -> ToastUtils.show(this, isFollowing ? R.string.error_unfollowing_person : R.string.error_following_person));
     }
@@ -212,7 +212,7 @@ private void checkFollowingUserStatus() {
                 .isFollowing(user.login())
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     isFollowing = response.code() == 204;
                     followingStatusChecked = true;

File: app/src/androidTest/java/com/github/pockethub/android/tests/commit/DiffStylerTest.java
Patch:
@@ -61,7 +61,7 @@ public void testEmptyFiles() {
         DiffStyler styler = new DiffStyler(getContext().getResources());
         styler.setFiles(null);
         assertTrue(styler.get("navigation_drawer_header_background").isEmpty());
-        styler.setFiles(Collections.<GitHubFile>emptyList());
+        styler.setFiles(Collections.emptyList());
         assertTrue(styler.get("navigation_drawer_header_background").isEmpty());
     }
 

File: app/src/main/java/com/github/pockethub/android/core/commit/FullCommitFile.java
Patch:
@@ -50,7 +50,7 @@ public FullCommitFile(final GitHubFile file) {
      */
     public List<GitComment> get(final int line) {
         List<GitComment> lineComments = comments.get(line);
-        return lineComments != null ? lineComments : Collections.<GitComment> emptyList();
+        return lineComments != null ? lineComments : Collections.emptyList();
     }
 
     /**

File: app/src/main/java/com/github/pockethub/android/ui/code/RepositoryCodeFragment.java
Patch:
@@ -152,7 +152,7 @@ private void refreshTree(final GitReference reference) {
         Single.create(new RefreshTreeTask(getActivity(), repository, reference))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<FullTree>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(fullTree -> {
                     if (folder == null || folder.parent == null) {
                         setFolder(fullTree, fullTree.root);

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitDiffListFragment.java
Patch:
@@ -241,7 +241,7 @@ private void refreshCommit() {
         Single.create(new RefreshCommitTask(getActivity(), repository, base, commentImageGetter))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<FullCommit>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(full -> {
                     List<GitHubFile> files = full.getCommit().files();
                     diffStyler.setFiles(files);

File: app/src/main/java/com/github/pockethub/android/ui/commit/DiffStyler.java
Patch:
@@ -134,6 +134,6 @@ public List<CharSequence> get(final String file) {
             return Collections.emptyList();
         }
         List<CharSequence> lines = diffs.get(file);
-        return lines != null ? lines : Collections.<CharSequence>emptyList();
+        return lines != null ? lines : Collections.emptyList();
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistFilesViewActivity.java
Patch:
@@ -117,7 +117,7 @@ protected void onCreate(Bundle savedInstanceState) {
             Single.create(new RefreshGistTask(this, gistId, imageGetter))
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<FullGist>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(gist -> {
                         this.gist = gist.getGist();
                         configurePager();

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsViewActivity.java
Patch:
@@ -172,7 +172,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
                     .deleteGist(gistId)
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<Response<Boolean>>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(new ProgressObserverAdapter<Response<Boolean>>(this, R.string.deleting_gist) {
 
                         @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditAssigneeTask.java
Patch:
@@ -121,7 +121,7 @@ public EditAssigneeTask edit(User user) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
 
         return this;

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditIssueActivity.java
Patch:
@@ -522,7 +522,7 @@ private void checkCollaboratorStatus() {
                 .isUserCollaborator(repository.owner().login(), repository.name(), AccountUtils.getLogin(this))
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     showMainContent();
                     if (response.code() == 204) {

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditLabelsTask.java
Patch:
@@ -118,7 +118,7 @@ public EditLabelsTask edit(Label[] labels) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
         return this;
     }

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditMilestoneTask.java
Patch:
@@ -110,7 +110,7 @@ public EditMilestoneTask edit(Milestone milestone) {
             Single.create(this)
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(activity.<Issue>bindToLifecycle())
+                    .compose(activity.bindToLifecycle())
                     .subscribe(observer);
         }
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditStateTask.java
Patch:
@@ -113,7 +113,7 @@ public EditStateTask edit(boolean close) {
         Single.create(this)
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(activity.<Issue>bindToLifecycle())
+                .compose(activity.bindToLifecycle())
                 .subscribe(observer);
 
         return this;

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -412,7 +412,7 @@ private void refreshIssue() {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .filter(fullIssue -> isUsable())
-                .compose(this.<FullIssue>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(fullIssue -> {
                     issue = fullIssue.getIssue();
                     items = new ArrayList<>();
@@ -501,7 +501,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
                     .deleteIssueComment(repositoryId.owner().login(), repositoryId.name(), comment.id())
                     .subscribeOn(Schedulers.io())
                     .observeOn(AndroidSchedulers.mainThread())
-                    .compose(this.<Response<Boolean>>bindToLifecycle())
+                    .compose(this.bindToLifecycle())
                     .subscribe(new ProgressObserverAdapter<Response<Boolean>>(getActivity(), R.string.deleting_comment) {
 
                         @Override

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryViewActivity.java
Patch:
@@ -246,7 +246,7 @@ private void starRepository() {
 
         starSingle.subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(aBoolean -> {
                     isStarred = !isStarred;
                     setResult(RESOURCE_CHANGED);
@@ -259,7 +259,7 @@ private void checkStarredRepositoryStatus() {
                 .checkIfRepositoryIsStarred(repository.owner().login(), repository.name())
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     isStarred = response.code() == 204;
                     starredStatusChecked = true;
@@ -310,7 +310,7 @@ public void onNegative(MaterialDialog dialog) {
                                 .deleteRepository(repository.owner().login(), repository.name())
                                 .subscribeOn(Schedulers.io())
                                 .observeOn(AndroidSchedulers.mainThread())
-                                .compose(RepositoryViewActivity.this.<Response<Boolean>>bindToLifecycle())
+                                .compose(RepositoryViewActivity.this.bindToLifecycle())
                                 .subscribe(response -> {
                                     onBackPressed();
                                     ToastUtils.show(RepositoryViewActivity.this, R.string.delete_successful);

File: app/src/main/java/com/github/pockethub/android/ui/user/UserViewActivity.java
Patch:
@@ -201,7 +201,7 @@ private void followUser() {
 
         followSingle.subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(aBoolean -> isFollowing = !isFollowing,
                         e -> ToastUtils.show(this, isFollowing ? R.string.error_unfollowing_person : R.string.error_following_person));
     }
@@ -212,7 +212,7 @@ private void checkFollowingUserStatus() {
                 .isFollowing(user.login())
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
-                .compose(this.<Response<Boolean>>bindToLifecycle())
+                .compose(this.bindToLifecycle())
                 .subscribe(response -> {
                     isFollowing = response.code() == 204;
                     followingStatusChecked = true;

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -417,7 +417,7 @@ private void refreshIssue() {
                     issue = fullIssue.getIssue();
                     items = new ArrayList<>();
                     items.addAll(fullIssue.getEvents());
-                    items.addAll(fullIssue);
+                    items.addAll(fullIssue.getComments());
                     updateList(fullIssue.getIssue(), items);
                 }, e -> {
                     ToastUtils.show(getActivity(), e, R.string.error_issue_load);

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesFragment.java
Patch:
@@ -219,8 +219,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ISSUE_FILTER_EDIT);
             return true;
         case R.id.m_bookmark:
-            cache.addIssueFilter(filter, response ->
-                    ToastUtils.show(getActivity(), R.string.message_filter_saved));
+            cache.addIssueFilter(filter)
+                .subscribe(response -> ToastUtils.show(getActivity(), R.string.message_filter_saved));
             return true;
         default:
             return super.onOptionsItemSelected(item);

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsFragment.java
Patch:
@@ -111,8 +111,8 @@ public void onListItemClick(ListView l, View v, int position, long id) {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .compose(this.bindToLifecycle())
-                .subscribe(
-                        response -> startActivity(UserViewActivity.createIntent(response.body())));
+                .subscribe(response ->
+                        startActivity(UserViewActivity.createIntent(response.body())));
 
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchUserListFragment.java
Patch:
@@ -122,8 +122,8 @@ public void onListItemClick(ListView l, View v, int position, long id) {
                 .subscribeOn(Schedulers.io())
                 .observeOn(AndroidSchedulers.mainThread())
                 .compose(this.bindToLifecycle())
-                .subscribe(
-                        response -> startActivity(UserViewActivity.createIntent(response.body())));
+                .subscribe(response ->
+                        startActivity(UserViewActivity.createIntent(response.body())));
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesFragment.java
Patch:
@@ -219,8 +219,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ISSUE_FILTER_EDIT);
             return true;
         case R.id.m_bookmark:
-            cache.addIssueFilter(filter, response ->
-                    ToastUtils.show(getActivity(), R.string.message_filter_saved));
+            cache.addIssueFilter(filter)
+                .subscribe(response -> ToastUtils.show(getActivity(), R.string.message_filter_saved));
             return true;
         default:
             return super.onOptionsItemSelected(item);

File: app/src/main/java/com/github/pockethub/android/ui/code/RepositoryCodeFragment.java
Patch:
@@ -48,7 +48,6 @@
 import com.github.pockethub.android.ui.ref.RefDialog;
 import com.github.pockethub.android.ui.ref.RefDialogFragment;
 import com.github.pockethub.android.util.ToastUtils;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.model.Repository;
 import com.meisolsson.githubsdk.model.git.GitReference;
 
@@ -238,8 +237,6 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
             adapter.addHeader(pathHeaderView);
         }
 
-        TypefaceUtils.setOcticons(branchIconView,
-                (TextView) pathHeaderView.findViewById(R.id.tv_folder_icon));
         listView.setAdapter(adapter);
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/comment/CreateCommentActivity.java
Patch:
@@ -29,8 +29,8 @@
 import com.google.inject.Inject;
 
 import static com.github.pockethub.android.Intents.EXTRA_COMMENT;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_EDIT;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_WATCH;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_EDIT;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_WATCH;
 
 /**
  * Base activity for creating comments

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitListFragment.java
Patch:
@@ -46,7 +46,6 @@
 import com.github.pockethub.android.ui.ref.RefDialog;
 import com.github.pockethub.android.ui.ref.RefDialogFragment;
 import com.github.pockethub.android.util.AvatarLoader;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.model.git.GitReference;
 import com.meisolsson.githubsdk.service.repositories.RepositoryCommitService;
 import com.meisolsson.githubsdk.service.repositories.RepositoryService;
@@ -274,7 +273,6 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         branchFooterView = finder.find(R.id.rl_branch);
         branchView = finder.find(R.id.tv_branch);
         branchIconView = finder.find(R.id.tv_branch_icon);
-        TypefaceUtils.setOcticons(branchIconView);
         branchFooterView.setOnClickListener(v -> switchRefs());
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsPagerFragment.java
Patch:
@@ -43,9 +43,9 @@
 import io.reactivex.schedulers.Schedulers;
 
 import static com.github.pockethub.android.RequestCodes.GIST_VIEW;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PERSON;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_STAR;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_TEAM;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PERSON;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_STAR;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_TEAM;
 
 public class GistsPagerFragment extends TabPagerFragment<GistQueriesPagerAdapter> {
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -67,7 +67,6 @@
 import com.github.pockethub.android.util.InfoUtils;
 import com.github.pockethub.android.util.ShareUtils;
 import com.github.pockethub.android.util.ToastUtils;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.service.issues.IssueCommentService;
 import com.google.inject.Inject;
 
@@ -101,7 +100,7 @@
 import static com.github.pockethub.android.RequestCodes.ISSUE_LABELS_UPDATE;
 import static com.github.pockethub.android.RequestCodes.ISSUE_MILESTONE_UPDATE;
 import static com.github.pockethub.android.RequestCodes.ISSUE_REOPEN;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_COMMIT;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_COMMIT;
 
 /**
  * Fragment to display an issue
@@ -339,7 +338,6 @@ private void updateHeader(final Issue issue) {
             ViewUtils.setGone(commitsView, false);
 
             TextView icon = (TextView) headerView.findViewById(R.id.tv_commit_icon);
-            TypefaceUtils.setOcticons(icon);
             icon.setText(ICON_COMMIT);
 
             String commits = getString(R.string.pull_request_commits,

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchActivity.java
Patch:
@@ -37,8 +37,8 @@
 import static android.content.Intent.ACTION_SEARCH;
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PERSON;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PUBLIC;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PERSON;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PUBLIC;
 
 /**
  * Activity to view search results

File: app/src/main/java/com/github/pockethub/android/ui/code/RepositoryCodeFragment.java
Patch:
@@ -48,7 +48,6 @@
 import com.github.pockethub.android.ui.ref.RefDialog;
 import com.github.pockethub.android.ui.ref.RefDialogFragment;
 import com.github.pockethub.android.util.ToastUtils;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.model.Repository;
 import com.meisolsson.githubsdk.model.git.GitReference;
 
@@ -238,8 +237,6 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
             adapter.addHeader(pathHeaderView);
         }
 
-        TypefaceUtils.setOcticons(branchIconView,
-                (TextView) pathHeaderView.findViewById(R.id.tv_folder_icon));
         listView.setAdapter(adapter);
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/comment/CreateCommentActivity.java
Patch:
@@ -29,8 +29,8 @@
 import com.google.inject.Inject;
 
 import static com.github.pockethub.android.Intents.EXTRA_COMMENT;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_EDIT;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_WATCH;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_EDIT;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_WATCH;
 
 /**
  * Base activity for creating comments

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitListFragment.java
Patch:
@@ -46,7 +46,6 @@
 import com.github.pockethub.android.ui.ref.RefDialog;
 import com.github.pockethub.android.ui.ref.RefDialogFragment;
 import com.github.pockethub.android.util.AvatarLoader;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.model.git.GitReference;
 import com.meisolsson.githubsdk.service.repositories.RepositoryCommitService;
 import com.meisolsson.githubsdk.service.repositories.RepositoryService;
@@ -274,7 +273,6 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         branchFooterView = finder.find(R.id.rl_branch);
         branchView = finder.find(R.id.tv_branch);
         branchIconView = finder.find(R.id.tv_branch_icon);
-        TypefaceUtils.setOcticons(branchIconView);
         branchFooterView.setOnClickListener(v -> switchRefs());
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsPagerFragment.java
Patch:
@@ -43,9 +43,9 @@
 import io.reactivex.schedulers.Schedulers;
 
 import static com.github.pockethub.android.RequestCodes.GIST_VIEW;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PERSON;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_STAR;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_TEAM;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PERSON;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_STAR;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_TEAM;
 
 public class GistsPagerFragment extends TabPagerFragment<GistQueriesPagerAdapter> {
 

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueFragment.java
Patch:
@@ -67,7 +67,6 @@
 import com.github.pockethub.android.util.InfoUtils;
 import com.github.pockethub.android.util.ShareUtils;
 import com.github.pockethub.android.util.ToastUtils;
-import com.github.pockethub.android.util.TypefaceUtils;
 import com.meisolsson.githubsdk.service.issues.IssueCommentService;
 import com.google.inject.Inject;
 
@@ -101,7 +100,7 @@
 import static com.github.pockethub.android.RequestCodes.ISSUE_LABELS_UPDATE;
 import static com.github.pockethub.android.RequestCodes.ISSUE_MILESTONE_UPDATE;
 import static com.github.pockethub.android.RequestCodes.ISSUE_REOPEN;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_COMMIT;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_COMMIT;
 
 /**
  * Fragment to display an issue
@@ -339,7 +338,6 @@ private void updateHeader(final Issue issue) {
             ViewUtils.setGone(commitsView, false);
 
             TextView icon = (TextView) headerView.findViewById(R.id.tv_commit_icon);
-            TypefaceUtils.setOcticons(icon);
             icon.setText(ICON_COMMIT);
 
             String commits = getString(R.string.pull_request_commits,

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchActivity.java
Patch:
@@ -37,8 +37,8 @@
 import static android.content.Intent.ACTION_SEARCH;
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PERSON;
-import static com.github.pockethub.android.util.TypefaceUtils.ICON_PUBLIC;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PERSON;
+import static com.github.pockethub.android.ui.view.OcticonTextView.ICON_PUBLIC;
 
 /**
  * Activity to view search results

File: app/src/main/java/com/github/pockethub/android/ui/comment/RawCommentFragment.java
Patch:
@@ -16,6 +16,7 @@
 package com.github.pockethub.android.ui.comment;
 
 import android.Manifest;
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -69,6 +70,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         addImageFab = finder.find(R.id.fab_add_image);
 
         addImageFab.setOnClickListener(new View.OnClickListener() {
+            @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
             @Override
             public void onClick(View v) {
                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {

File: app/src/main/java/com/github/pockethub/android/ui/issue/EditIssueActivity.java
Patch:
@@ -16,6 +16,7 @@
 package com.github.pockethub.android.ui.issue;
 
 import android.Manifest;
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -226,6 +227,7 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
         });
 
         addImageFab.setOnClickListener(new View.OnClickListener() {
+            @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
             @Override
             public void onClick(View v) {
 

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsFragment.java
Patch:
@@ -113,8 +113,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
                     @Override
                     public void onNext(User user) {
                         super.onNext(user);
-                        if (!AccountUtils.isUser(getActivity(), user))
-                            startActivity(UserViewActivity.createIntent(user));
+                        startActivity(UserViewActivity.createIntent(user));
                     }
                 });
 

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchUserListFragment.java
Patch:
@@ -134,8 +134,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
                     @Override
                     public void onNext(User user) {
-                        if (!AccountUtils.isUser(getActivity(), user))
-                            startActivity(UserViewActivity.createIntent(user));
+                        startActivity(UserViewActivity.createIntent(user));
                     }
                 });
     }

File: app/src/main/java/com/github/pockethub/android/ui/user/MembersFragment.java
Patch:
@@ -97,8 +97,7 @@ protected SingleTypeAdapter<User> createAdapter(List<User> items) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         User user = (User) l.getItemAtPosition(position);
-        if (!AccountUtils.isUser(getActivity(), user))
-            startActivity(UserViewActivity.createIntent(user));
+        startActivity(UserViewActivity.createIntent(user));
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/user/PagedUserFragment.java
Patch:
@@ -48,7 +48,6 @@ protected SingleTypeAdapter<User> createAdapter(List<User> items) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         User user = (User) l.getItemAtPosition(position);
-        if (!AccountUtils.isUser(getActivity(), user))
-            startActivity(UserViewActivity.createIntent(user));
+        startActivity(UserViewActivity.createIntent(user));
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/repo/RepositoryContributorsFragment.java
Patch:
@@ -113,8 +113,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
                     @Override
                     public void onNext(User user) {
                         super.onNext(user);
-                        if (!AccountUtils.isUser(getActivity(), user))
-                            startActivity(UserViewActivity.createIntent(user));
+                        startActivity(UserViewActivity.createIntent(user));
                     }
                 });
 

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchUserListFragment.java
Patch:
@@ -134,8 +134,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
                     @Override
                     public void onNext(User user) {
-                        if (!AccountUtils.isUser(getActivity(), user))
-                            startActivity(UserViewActivity.createIntent(user));
+                        startActivity(UserViewActivity.createIntent(user));
                     }
                 });
     }

File: app/src/main/java/com/github/pockethub/android/ui/user/MembersFragment.java
Patch:
@@ -97,8 +97,7 @@ protected SingleTypeAdapter<User> createAdapter(List<User> items) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         User user = (User) l.getItemAtPosition(position);
-        if (!AccountUtils.isUser(getActivity(), user))
-            startActivity(UserViewActivity.createIntent(user));
+        startActivity(UserViewActivity.createIntent(user));
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/user/PagedUserFragment.java
Patch:
@@ -48,7 +48,6 @@ protected SingleTypeAdapter<User> createAdapter(List<User> items) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         User user = (User) l.getItemAtPosition(position);
-        if (!AccountUtils.isUser(getActivity(), user))
-            startActivity(UserViewActivity.createIntent(user));
+        startActivity(UserViewActivity.createIntent(user));
     }
 }

File: app/src/androidTest/java/com/github/pockethub/android/tests/gist/GistUriMatcherTest.java
Patch:
@@ -18,8 +18,8 @@
 import android.net.Uri;
 import android.test.AndroidTestCase;
 
-import com.alorma.github.sdk.bean.dto.response.Gist;
 import com.github.pockethub.android.core.gist.GistUriMatcher;
+import com.meisolsson.githubsdk.model.Gist;
 
 /**
  * Unit tests of {@link GistUriMatcher}
@@ -52,7 +52,7 @@ public void testPublicGist() {
         Gist gist = GistUriMatcher.getGist(Uri
                 .parse("https://gist.github.com/1234"));
         assertNotNull(gist);
-        assertEquals("1234", gist.id);
+        assertEquals("1234", gist.id());
     }
 
     /**
@@ -62,6 +62,6 @@ public void testPrivateGist() {
         Gist gist = GistUriMatcher.getGist(Uri
                 .parse("https://gist.github.com/abcd1234abcd1234abcd"));
         assertNotNull(gist);
-        assertEquals("abcd1234abcd1234abcd", gist.id);
+        assertEquals("abcd1234abcd1234abcd", gist.id());
     }
 }

File: app/src/androidTest/java/com/github/pockethub/android/tests/issue/EditIssueActivityTest.java
Patch:
@@ -18,7 +18,7 @@
 import android.view.View;
 import android.widget.EditText;
 
-import com.alorma.github.sdk.bean.dto.response.Repo;
+import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.R.id;
 import com.github.pockethub.android.tests.ActivityTest;
 import com.github.pockethub.android.ui.issue.EditIssueActivity;
@@ -42,7 +42,7 @@ public EditIssueActivityTest() {
     protected void setUp() throws Exception {
         super.setUp();
 
-        Repo repo = InfoUtils.createRepoFromData("owner", "repo");
+        Repository repo = InfoUtils.createRepoFromData("owner", "repo");
         setActivityIntent(EditIssueActivity.createIntent(repo));
     }
 

File: app/src/androidTest/java/com/github/pockethub/android/tests/issue/EditIssuesFilterActivityTest.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.github.pockethub.android.tests.issue;
 
-import com.alorma.github.sdk.bean.dto.response.Repo;
+import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.core.issue.IssueFilter;
 import com.github.pockethub.android.tests.ActivityTest;
 import com.github.pockethub.android.ui.issue.EditIssuesFilterActivity;
@@ -38,7 +38,7 @@ public EditIssuesFilterActivityTest() {
     protected void setUp() throws Exception {
         super.setUp();
 
-        Repo repo = InfoUtils.createRepoFromData("owner", "name");
+        Repository repo = InfoUtils.createRepoFromData("owner", "name");
         IssueFilter filter = new IssueFilter(repo);
         setActivityIntent(EditIssuesFilterActivity.createIntent(filter));
     }

File: app/src/main/java/com/github/pockethub/android/core/gist/GistPager.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.github.pockethub.android.core.gist;
 
-import com.alorma.github.sdk.bean.dto.response.Gist;
 import com.github.pockethub.android.core.ResourcePager;
+import com.meisolsson.githubsdk.model.Gist;
 
 /**
  * Pager over Gists
@@ -36,7 +36,7 @@ public GistPager(final GistStore store) {
 
     @Override
     protected Object getId(Gist resource) {
-        return resource.id;
+        return resource.id();
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/core/issue/IssuePager.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.github.pockethub.android.core.issue;
 
-import com.alorma.github.sdk.bean.dto.response.Issue;
 import com.github.pockethub.android.core.ResourcePager;
+import com.meisolsson.githubsdk.model.Issue;
 
 /**
  * Helper class for showing more and more pages of issues
@@ -45,6 +45,6 @@ protected Issue register(Issue resource) {
 
     @Override
     protected Object getId(Issue resource) {
-        return resource.id;
+        return resource.id();
     }
 }

File: app/src/main/java/com/github/pockethub/android/core/user/UserPager.java
Patch:
@@ -15,8 +15,8 @@
  */
 package com.github.pockethub.android.core.user;
 
-import com.alorma.github.sdk.bean.dto.response.User;
 import com.github.pockethub.android.core.ResourcePager;
+import com.meisolsson.githubsdk.model.User;
 
 /**
  * Pager over users
@@ -25,6 +25,6 @@ public abstract class UserPager extends ResourcePager<User> {
 
     @Override
     protected Object getId(User resource) {
-        return resource.id;
+        return resource.id();
     }
 }

File: app/src/main/java/com/github/pockethub/android/rx/ProgressObserverAdapter.java
Patch:
@@ -36,8 +36,8 @@ public void setContent(String message){
     }
 
     @Override
-    public void onNext(T t) {
-        super.onNext(t);
+    public void onCompleted() {
+        super.onCompleted();
         dismissProgress();
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/comment/DeleteCommentListener.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.github.pockethub.android.ui.comment;
 
-import com.alorma.github.sdk.bean.dto.response.GithubComment;
+import com.meisolsson.githubsdk.model.GitHubComment;
 
 /**
  * Interface definition for a callback to be invoked when a comment is deleted
@@ -27,5 +27,5 @@ public interface DeleteCommentListener {
      *
      * @param comment
      */
-    void onDeleteComment(GithubComment comment);
+    void onDeleteComment(GitHubComment comment);
 }

File: app/src/main/java/com/github/pockethub/android/ui/comment/EditCommentListener.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.github.pockethub.android.ui.comment;
 
-import com.alorma.github.sdk.bean.dto.response.GithubComment;
+import com.meisolsson.githubsdk.model.GitHubComment;
 
 /**
  * Interface definition for a callback to be invoked when a comment is edited
@@ -27,5 +27,5 @@ public interface EditCommentListener {
      *
      * @param comment
      */
-    void onEditComment(GithubComment comment);
+    void onEditComment(GitHubComment comment);
 }

File: app/src/main/java/com/github/pockethub/android/ui/comment/RenderedCommentFragment.java
Patch:
@@ -24,14 +24,14 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
-import com.alorma.github.sdk.bean.dto.response.Repo;
 import com.github.kevinsawicki.wishlist.Keyboard;
 import com.github.kevinsawicki.wishlist.ViewUtils;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.DialogFragment;
 import com.github.pockethub.android.ui.MarkdownLoader;
 import com.github.pockethub.android.util.HttpImageGetter;
 import com.github.pockethub.android.util.ToastUtils;
+import com.meisolsson.githubsdk.model.Repository;
 import com.google.inject.Inject;
 
 import java.io.Serializable;
@@ -67,7 +67,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
      * @param raw
      * @param repo
      */
-    public void setText(final String raw, final Repo repo) {
+    public void setText(final String raw, final Repository repo) {
         Bundle args = new Bundle();
         args.putCharSequence(ARG_TEXT, raw);
         if (repo instanceof Serializable)
@@ -91,7 +91,7 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
     @Override
     public Loader<CharSequence> onCreateLoader(int loader, Bundle args) {
         final CharSequence raw = args.getCharSequence(ARG_TEXT);
-        final Repo repo = args.getParcelable(ARG_REPO);
+        final Repository repo = args.getParcelable(ARG_REPO);
         return new MarkdownLoader(getActivity(), repo, raw.toString(),
                 imageGetter, true);
     }

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import android.support.v4.app.Fragment;
 import android.support.v7.app.AppCompatActivity;
 
-import com.alorma.github.sdk.bean.dto.response.Repo;
+import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
 
 import static com.github.pockethub.android.Intents.EXTRA_BASE;
@@ -30,7 +30,7 @@
  */
 public class CommitPagerAdapter extends FragmentStatePagerAdapter {
 
-    private final Repo repository;
+    private final Repository repository;
 
     private final CharSequence[] ids;
 
@@ -40,7 +40,7 @@ public class CommitPagerAdapter extends FragmentStatePagerAdapter {
      * @param ids
      */
     public CommitPagerAdapter(AppCompatActivity activity,
-            Repo repository, CharSequence[] ids) {
+            Repository repository, CharSequence[] ids) {
         super(activity);
 
         this.repository = repository;

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistsFragment.java
Patch:
@@ -21,12 +21,12 @@
 import android.view.View;
 import android.widget.ListView;
 
-import com.alorma.github.sdk.bean.dto.response.Gist;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.gist.GistStore;
 import com.github.pockethub.android.ui.PagedItemFragment;
 import com.github.pockethub.android.util.AvatarLoader;
+import com.meisolsson.githubsdk.model.Gist;
 import com.google.inject.Inject;
 
 import java.util.List;

File: app/src/main/java/com/github/pockethub/android/ui/issue/AssigneeDialogFragment.java
Patch:
@@ -28,7 +28,7 @@
 
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.BaseActivity;
@@ -64,7 +64,7 @@ public UserListAdapter(LayoutInflater inflater, User[] users,
 
         @Override
         public long getItemId(int position) {
-            return getItem(position).id;
+            return getItem(position).id();
         }
 
         @Override
@@ -74,7 +74,7 @@ protected int[] getChildViewIds() {
 
         @Override
         protected void update(int position, User item) {
-            setText(0, item.login);
+            setText(0, item.login());
             loader.bind(imageView(1), item);
             setChecked(2, selected == position);
         }

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueDashboardPagerAdapter.java
Patch:
@@ -19,7 +19,6 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 
-import com.alorma.github.sdk.services.issues.IssuesService;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.issue.IssueFilter;
 import com.github.pockethub.android.ui.FragmentStatePagerAdapter;
@@ -56,7 +55,7 @@ public int getCount() {
 
     @Override
     public Fragment getItem(final int position) {
-        String filter = null;
+        String filter;
         switch (position) {
             case 0:
                 filter = FILTER_SUBSCRIBED;
@@ -73,7 +72,7 @@ public Fragment getItem(final int position) {
             default:
                 return null;
         }
-        final Map<String, String> filterData = new HashMap<>();
+        final Map<String, Object> filterData = new HashMap<>();
         filterData.put(FIELD_FILTER, filter);
         filterData.put(FIELD_SORT, SORT_UPDATED);
         filterData.put(FIELD_DIRECTION, DIRECTION_DESCENDING);

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchActivity.java
Patch:
@@ -25,7 +25,7 @@
 import android.view.Menu;
 import android.view.MenuItem;
 
-import com.alorma.github.sdk.bean.dto.response.Repo;
+import com.meisolsson.githubsdk.model.Repository;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.repo.RepositoryViewActivity;
 import com.github.pockethub.android.ui.roboactivities.RoboAppCompatActivity;
@@ -49,7 +49,7 @@ public class IssueSearchActivity extends RoboAppCompatActivity {
     @Inject
     private AvatarLoader avatars;
 
-    private Repo repository;
+    private Repository repository;
 
     private SearchIssueListFragment issueFragment;
 
@@ -100,9 +100,9 @@ protected void onCreate(Bundle savedInstanceState) {
             if (repository != null) {
                 actionBar.setSubtitle(InfoUtils.createRepoId(repository));
                 actionBar.setDisplayHomeAsUpEnabled(true);
+                avatars.bind(actionBar, repository.owner());
             }
         }
-        avatars.bind(actionBar, repository.owner);
 
         issueFragment = (SearchIssueListFragment) getSupportFragmentManager()
             .findFragmentById(android.R.id.list);

File: app/src/main/java/com/github/pockethub/android/ui/issue/LabelsDialogFragment.java
Patch:
@@ -29,11 +29,11 @@
 
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
-import com.alorma.github.sdk.bean.dto.response.Label;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.BaseActivity;
 import com.github.pockethub.android.ui.DialogFragmentHelper;
+import com.meisolsson.githubsdk.model.Label;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -135,7 +135,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         if (selectedChoices != null)
             for (int i = 0; i < choices.size(); i++)
                 if (selectedChoices[i])
-                    selected.add(choices.get(i).name);
+                    selected.add(choices.get(i).name());
         arguments.putStringArrayList(ARG_SELECTED, (ArrayList<String>) selected);
 
         LayoutInflater inflater = activity.getLayoutInflater();

File: app/src/main/java/com/github/pockethub/android/ui/ref/CodeTreeAdapter.java
Patch:
@@ -154,7 +154,7 @@ protected void update(final int position, final Object item, final int type) {
             case TYPE_BLOB:
                 Entry file = (Entry) item;
                 setText(0, file.name);
-                setText(1, Formatter.formatFileSize(context, file.entry.size));
+                setText(1, Formatter.formatFileSize(context, file.entry.size()));
                 break;
             case TYPE_TREE:
                 Folder folder = (Folder) item;

File: app/src/main/java/com/github/pockethub/android/ui/ref/RefDialogFragment.java
Patch:
@@ -28,13 +28,13 @@
 
 import com.afollestad.materialdialogs.DialogAction;
 import com.afollestad.materialdialogs.MaterialDialog;
-import com.alorma.github.sdk.bean.dto.response.GitReference;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.core.ref.RefUtils;
 import com.github.pockethub.android.ui.BaseActivity;
 import com.github.pockethub.android.ui.SingleChoiceDialogFragment;
 import com.github.pockethub.android.util.TypefaceUtils;
+import com.meisolsson.githubsdk.model.git.GitReference;
 
 import java.util.ArrayList;
 
@@ -60,7 +60,7 @@ public RefListAdapter(LayoutInflater inflater, GitReference[] refs,
 
         @Override
         public long getItemId(int position) {
-            return getItem(position).ref.hashCode();
+            return getItem(position).ref().hashCode();
         }
 
         @Override

File: app/src/main/java/com/github/pockethub/android/ui/search/SearchUserListAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import android.content.Context;
 import android.view.LayoutInflater;
 
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.util.AvatarLoader;
@@ -47,7 +47,7 @@ public SearchUserListAdapter(final Context context,
 
     @Override
     public long getItemId(final int position) {
-        String userId = String.valueOf(getItem(position).id);
+        String userId = String.valueOf(getItem(position).id());
         return Long.parseLong(userId.replace("user-", ""));
     }
 
@@ -58,6 +58,6 @@ protected int[] getChildViewIds() {
 
     @Override
     protected void update(final int position, final User user) {
-        setText(1, user.login);
+        setText(1, user.login());
     }
 }

File: app/src/main/java/com/github/pockethub/android/ui/user/HomePagerAdapter.java
Patch:
@@ -21,7 +21,7 @@
 import android.support.v4.app.FragmentManager;
 import android.view.ViewGroup;
 
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.ui.FragmentPagerAdapter;
 import com.github.pockethub.android.ui.repo.RepositoryListFragment;

File: app/src/main/java/com/github/pockethub/android/ui/user/OrganizationSelectionListener.java
Patch:
@@ -15,7 +15,7 @@
  */
 package com.github.pockethub.android.ui.user;
 
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 
 /**
  * Callback interface when the selected organization changes

File: app/src/main/java/com/github/pockethub/android/ui/user/OrganizationSelectionProvider.java
Patch:
@@ -15,6 +15,8 @@
  */
 package com.github.pockethub.android.ui.user;
 
+import com.meisolsson.githubsdk.model.User;
+
 /**
  * Interface to register and unregister a {@link OrganizationSelectionListener}
  */
@@ -26,7 +28,7 @@ public interface OrganizationSelectionProvider {
      * @param listener
      * @return the currently selected organization
      */
-    com.alorma.github.sdk.bean.dto.response.User addListener(OrganizationSelectionListener listener);
+    User addListener(OrganizationSelectionListener listener);
 
     /**
      * Remove selection listener

File: app/src/main/java/com/github/pockethub/android/ui/user/PagedUserFragment.java
Patch:
@@ -18,7 +18,7 @@
 import android.view.View;
 import android.widget.ListView;
 
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.accounts.AccountUtils;
 import com.github.pockethub.android.ui.PagedItemFragment;

File: app/src/main/java/com/github/pockethub/android/ui/user/UserListAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 import android.view.LayoutInflater;
 
-import com.alorma.github.sdk.bean.dto.response.User;
+import com.meisolsson.githubsdk.model.User;
 import com.github.kevinsawicki.wishlist.SingleTypeAdapter;
 import com.github.pockethub.android.R;
 import com.github.pockethub.android.util.AvatarLoader;
@@ -46,7 +46,7 @@ public UserListAdapter(final LayoutInflater inflater,
 
     @Override
     public long getItemId(final int position) {
-        return getItem(position).id;
+        return getItem(position).id();
     }
 
     @Override
@@ -57,6 +57,6 @@ protected int[] getChildViewIds() {
     @Override
     protected void update(final int position, final User user) {
         avatars.bind(imageView(0), user);
-        setText(1, user.login);
+        setText(1, user.login());
     }
 }

File: app/src/main/java/com/github/pockethub/android/util/SourceEditor.java
Patch:
@@ -24,8 +24,8 @@
 import android.webkit.WebView;
 import android.webkit.WebViewClient;
 
-import com.alorma.github.sdk.bean.dto.response.GitBlob;
 import com.github.pockethub.android.ui.user.UriLauncherActivity;
+import com.meisolsson.githubsdk.model.git.GitBlob;
 
 import java.io.UnsupportedEncodingException;
 
@@ -183,10 +183,10 @@ private void loadSource() {
      * @return this editor
      */
     public SourceEditor setSource(final String name, final GitBlob blob) {
-        String content = blob.content;
+        String content = blob.content();
         if (content == null)
             content = "";
-        boolean encoded = !TextUtils.isEmpty(content) && ENCODING_BASE64.equals(blob.encoding);
+        boolean encoded = !TextUtils.isEmpty(content) && ENCODING_BASE64.equals(blob.encoding());
         return setSource(name, content, encoded);
     }
 

File: app/src/main/java/com/github/pockethub/android/ui/commit/CommitDiffListFragment.java
Patch:
@@ -181,7 +181,7 @@ private void addComment(final CommitComment comment) {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (RESULT_OK == resultCode && COMMENT_CREATE == requestCode
                 && data != null) {
-            CommitComment comment = (CommitComment) data
+            CommitComment comment = data
                     .getParcelableExtra(EXTRA_COMMENT);
             addComment(comment);
             return;

File: app/src/main/java/com/github/pockethub/android/ui/gist/GistFragment.java
Patch:
@@ -345,7 +345,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
         switch (requestCode) {
         case COMMENT_CREATE:
-            GithubComment comment = (GithubComment) data
+            GithubComment comment = data
                     .getParcelableExtra(EXTRA_COMMENT);
             if (comments != null) {
                 comments.add(comment);
@@ -355,7 +355,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                 refreshGist();
             return;
         case COMMENT_EDIT:
-            comment = (GithubComment) data.getParcelableExtra(EXTRA_COMMENT);
+            comment = data.getParcelableExtra(EXTRA_COMMENT);
             if (comments != null && comment != null) {
                 int position = Collections.binarySearch(comments, comment,
                         new Comparator<GithubComment>() {

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssueSearchActivity.java
Patch:
@@ -96,7 +96,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         Bundle appData = getIntent().getBundleExtra(APP_DATA);
         if (appData != null) {
-            repository = (Repo) appData.getParcelable(EXTRA_REPOSITORY);
+            repository = appData.getParcelable(EXTRA_REPOSITORY);
             if (repository != null) {
                 actionBar.setSubtitle(InfoUtils.createRepoId(repository));
                 actionBar.setDisplayHomeAsUpEnabled(true);

File: app/src/main/java/com/github/pockethub/android/ui/issue/IssuesFragment.java
Patch:
@@ -230,7 +230,7 @@ public void success(IssueFilter response) {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == RESULT_OK && requestCode == ISSUE_FILTER_EDIT
                 && data != null) {
-            IssueFilter newFilter = (IssueFilter) data
+            IssueFilter newFilter = data
                     .getParcelableExtra(EXTRA_ISSUE_FILTER);
             if (!filter.equals(newFilter)) {
                 filter = newFilter;

File: app/src/main/java/com/github/pockethub/android/ui/issue/SearchIssueListFragment.java
Patch:
@@ -57,7 +57,7 @@ public void onCreate(Bundle savedInstanceState) {
 
         Bundle appData = getActivity().getIntent().getBundleExtra(APP_DATA);
         if (appData != null)
-            repository = (Repo) appData.getParcelable(EXTRA_REPOSITORY);
+            repository = appData.getParcelable(EXTRA_REPOSITORY);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/android/ui/user/MembersFragment.java
Patch:
@@ -54,7 +54,7 @@ public void onSaveInstanceState(Bundle outState) {
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
-        org = (User) getArguments().getParcelable("org");
+        org = getArguments().getParcelable("org");
         if (org == null && savedInstanceState != null)
             org = savedInstanceState.getParcelable(EXTRA_USER);
         setEmptyText(R.string.no_members);

File: app/src/main/java/com/github/pockethub/ui/ref/BranchFileViewActivity.java
Patch:
@@ -218,8 +218,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     @Override
     public Loader<CharSequence> onCreateLoader(int loader, Bundle args) {
         final String raw = args.getString(ARG_TEXT);
-        final Repo repo = (Repo) args
-                .getParcelable(ARG_REPO);
+        final Repo repo = args.getParcelable(ARG_REPO);
         return new MarkdownLoader(this, repo, raw, imageGetter, false);
     }
 
@@ -274,7 +273,7 @@ private void loadContent() {
 
                     @Override
                     public void onNext(GitBlob gitBlob) {
-                        BranchFileViewActivity.this.blob = blob;
+                        BranchFileViewActivity.this.blob = gitBlob;
 
                         if (markdownItem != null)
                             markdownItem.setEnabled(true);

File: app/src/main/java/com/github/pockethub/api/CheckHasReadMeClient.java
Patch:
@@ -20,6 +20,6 @@ public CheckHasReadMeClient(RepoInfo info) {
 
     @Override
     protected Observable<Response> getApiObservable(RestAdapter restAdapter) {
-        return restAdapter.create(ContentService.class).hasReadme(info.owner, info.owner);
+        return restAdapter.create(ContentService.class).hasReadme(info.owner, info.name);
     }
 }

File: app/src/main/java/com/github/pockethub/ui/user/IconAndViewTextManager.java
Patch:
@@ -31,6 +31,7 @@
 import com.github.kevinsawicki.wishlist.ViewUtils;
 import com.github.pockethub.api.FollowEventPayload;
 import com.github.pockethub.api.GistEventPayload;
+import com.github.pockethub.api.MemberEventPayload;
 import com.github.pockethub.core.issue.IssueUtils;
 import com.github.pockethub.ui.StyledText;
 import com.github.pockethub.util.TimeUtils;
@@ -141,7 +142,7 @@ void formatCreate(GithubEvent event, StyledText main,
         String refType = event.payload.ref_type;
         main.append(refType);
         main.append(' ');
-        if (!"repository".equals("")) {
+        if (!"repository".equals(refType)) {
             main.append(event.payload.ref);
             main.append(" at ");
             boldRepo(main, event);

File: app/src/main/java/com/github/pockethub/ui/DotPagerActivity.java
Patch:
@@ -27,7 +27,7 @@ public abstract class DotPagerActivity<V extends PagerAdapter>
         extends PagerActivity{
 
     private ViewPager pager;
-    private DotPageIndicator dotPageIndicator;
+    protected DotPageIndicator dotPageIndicator;
 
     /**
      * Pager adapter

File: app/src/main/java/com/github/pockethub/accounts/LoginActivity.java
Patch:
@@ -266,7 +266,7 @@ private void endAuth(String accessToken, String scope) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu optionMenu) {
-        getMenuInflater().inflate(R.menu.login, optionMenu);
+        getMenuInflater().inflate(R.menu.activity_login, optionMenu);
         return true;
     }
 }

File: app/src/main/java/com/github/pockethub/ui/MainActivity.java
Patch:
@@ -174,7 +174,7 @@ private void reloadOrgs() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu optionMenu) {
-        getMenuInflater().inflate(R.menu.home, optionMenu);
+        getMenuInflater().inflate(R.menu.activity_main, optionMenu);
 
         SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
         MenuItem searchItem = optionMenu.findItem(R.id.m_search);

File: app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java
Patch:
@@ -115,7 +115,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
     @Override
     public void onCreateOptionsMenu(Menu optionsMenu, MenuInflater inflater) {
-        inflater.inflate(R.menu.refresh, optionsMenu);
+        inflater.inflate(R.menu.fragment_refresh, optionsMenu);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/comment/CreateCommentActivity.java
Patch:
@@ -140,7 +140,7 @@ protected CommentPreviewPagerAdapter createAdapter() {
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.comment, options);
+        getMenuInflater().inflate(R.menu.activity_comment, options);
         applyItem = options.findItem(R.id.m_apply);
         return true;
     }

File: app/src/main/java/com/github/pockethub/ui/commit/CommitCompareListFragment.java
Patch:
@@ -105,7 +105,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onCreateOptionsMenu(final Menu optionsMenu,
             final MenuInflater inflater) {
-        inflater.inflate(R.menu.refresh, optionsMenu);
+        inflater.inflate(R.menu.fragment_refresh, optionsMenu);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java
Patch:
@@ -187,9 +187,8 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
     }
 
     @Override
-    public void onCreateOptionsMenu(final Menu optionsMenu,
-                                    final MenuInflater inflater) {
-        inflater.inflate(R.menu.commit_view, optionsMenu);
+    public void onCreateOptionsMenu(final Menu optionsMenu, final MenuInflater inflater) {
+        inflater.inflate(R.menu.fragment_commit_view, optionsMenu);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/commit/CommitFileViewActivity.java
Patch:
@@ -157,7 +157,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean onCreateOptionsMenu(final Menu optionsMenu) {
-        getMenuInflater().inflate(R.menu.file_view, optionsMenu);
+        getMenuInflater().inflate(R.menu.activity_file_view, optionsMenu);
 
         MenuItem wrapItem = optionsMenu.findItem(R.id.m_wrap);
         if (PreferenceUtils.getCodePreferences(this).getBoolean(WRAP, false))

File: app/src/main/java/com/github/pockethub/ui/gist/CreateGistActivity.java
Patch:
@@ -97,7 +97,7 @@ private void updateCreateMenu(CharSequence text) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.gist_create, options);
+        getMenuInflater().inflate(R.menu.activity_gist_create, options);
         createItem = options.findItem(R.id.m_apply);
         updateCreateMenu();
         return true;

File: app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java
Patch:
@@ -105,7 +105,7 @@ public void onDestroyView() {
 
     @Override
     public void onCreateOptionsMenu(Menu optionsMenu, MenuInflater inflater) {
-        inflater.inflate(R.menu.code_view, optionsMenu);
+        inflater.inflate(R.menu.fragment_code_view, optionsMenu);
 
         wrapItem = optionsMenu.findItem(R.id.m_wrap);
         updateWrapItem();

File: app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java
Patch:
@@ -229,7 +229,7 @@ private void updateHeader(Gist gist) {
 
     @Override
     public void onCreateOptionsMenu(Menu options, MenuInflater inflater) {
-        inflater.inflate(R.menu.gist_view, options);
+        inflater.inflate(R.menu.fragment_gist_view, options);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/gist/GistsPagerFragment.java
Patch:
@@ -44,7 +44,7 @@ private void randomGist() {
 
     @Override
     public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
-        inflater.inflate(R.menu.gists, menu);
+        inflater.inflate(R.menu.fragment_gists, menu);
         super.onCreateOptionsMenu(menu, inflater);
     }
 

File: app/src/main/java/com/github/pockethub/ui/issue/EditIssueActivity.java
Patch:
@@ -327,7 +327,7 @@ private void updateSaveMenu(final CharSequence text) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.issue_edit, options);
+        getMenuInflater().inflate(R.menu.activity_issue_edit, options);
         saveItem = options.findItem(R.id.m_apply);
         updateSaveMenu();
         return super.onCreateOptionsMenu(options);

File: app/src/main/java/com/github/pockethub/ui/issue/EditIssuesFilterActivity.java
Patch:
@@ -204,7 +204,7 @@ public void onCheckedChanged(CompoundButton buttonView,
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.issue_filter, options);
+        getMenuInflater().inflate(R.menu.activity_issue_filter, options);
         return true;
     }
 

File: app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java
Patch:
@@ -549,7 +549,7 @@ public void onPrepareOptionsMenu(Menu menu) {
 
     @Override
     public void onCreateOptionsMenu(Menu optionsMenu, MenuInflater inflater) {
-        inflater.inflate(R.menu.issue_view, optionsMenu);
+        inflater.inflate(R.menu.fragment_issue_view, optionsMenu);
         stateItem = optionsMenu.findItem(R.id.m_state);
         updateStateItem(issue);
     }

File: app/src/main/java/com/github/pockethub/ui/issue/IssueSearchActivity.java
Patch:
@@ -55,7 +55,7 @@ public class IssueSearchActivity extends RoboAppCompatActivity {
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.search, options);
+        getMenuInflater().inflate(R.menu.activity_search, options);
 
         SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
         MenuItem searchItem = options.findItem(R.id.m_search);

File: app/src/main/java/com/github/pockethub/ui/issue/IssuesFragment.java
Patch:
@@ -187,7 +187,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
     @Override
     public void onCreateOptionsMenu(Menu optionsMenu, MenuInflater inflater) {
-        inflater.inflate(R.menu.issues, optionsMenu);
+        inflater.inflate(R.menu.fragment_issues, optionsMenu);
 
         SearchManager searchManager = (SearchManager) getActivity().getSystemService(Context.SEARCH_SERVICE);
         MenuItem searchItem = optionsMenu.findItem(R.id.m_search);

File: app/src/main/java/com/github/pockethub/ui/ref/BranchFileViewActivity.java
Patch:
@@ -151,7 +151,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean onCreateOptionsMenu(final Menu optionsMenu) {
-        getMenuInflater().inflate(R.menu.file_view, optionsMenu);
+        getMenuInflater().inflate(R.menu.activity_file_view, optionsMenu);
 
         MenuItem wrapItem = optionsMenu.findItem(R.id.m_wrap);
         if (PreferenceUtils.getCodePreferences(this).getBoolean(WRAP, false))

File: app/src/main/java/com/github/pockethub/ui/repo/RepositoryViewActivity.java
Patch:
@@ -129,7 +129,7 @@ public void onFail(RetrofitError error) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu optionsMenu) {
-        getMenuInflater().inflate(R.menu.repository, optionsMenu);
+        getMenuInflater().inflate(R.menu.activity_repository, optionsMenu);
         return super.onCreateOptionsMenu(optionsMenu);
     }
 

File: app/src/main/java/com/github/pockethub/ui/search/SearchActivity.java
Patch:
@@ -66,7 +66,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu options) {
-        getMenuInflater().inflate(R.menu.search, options);
+        getMenuInflater().inflate(R.menu.activity_search, options);
 
         SearchManager searchManager = (SearchManager) getSystemService(Context.SEARCH_SERVICE);
         MenuItem searchItem = options.findItem(R.id.m_search);

File: app/src/main/java/com/github/pockethub/ui/user/UserViewActivity.java
Patch:
@@ -116,7 +116,7 @@ public void onFail(RetrofitError error) {
 
     @Override
     public boolean onCreateOptionsMenu(Menu optionsMenu) {
-        getMenuInflater().inflate(R.menu.user_follow, optionsMenu);
+        getMenuInflater().inflate(R.menu.activity_user_follow, optionsMenu);
 
         return super.onCreateOptionsMenu(optionsMenu);
     }

File: app/src/main/java/com/github/pockethub/ui/ItemListFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.item_list, container, false);
+        return inflater.inflate(R.layout.fragment_item_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java
Patch:
@@ -208,7 +208,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.repo_code, container, false);
+        return inflater.inflate(R.layout.fragment_repo_code, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/comment/RawCommentFragment.java
Patch:
@@ -68,7 +68,7 @@ public boolean onTouch(View v, MotionEvent event) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_create, container, false);
+        return inflater.inflate(R.layout.fragment_comment_create, container, false);
     }
 
     /**

File: app/src/main/java/com/github/pockethub/ui/comment/RenderedCommentFragment.java
Patch:
@@ -85,7 +85,7 @@ private void showLoading(final boolean loading) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_preview, null);
+        return inflater.inflate(R.layout.fragment_comment_preview, null);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/commit/CommitCompareListFragment.java
Patch:
@@ -214,7 +214,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_diff_list, container);
+        return inflater.inflate(R.layout.fragment_commit_diff_list, container);
     }
 
     private void openCommit(final Commit commit) {

File: app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java
Patch:
@@ -406,9 +406,8 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     }
 
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_diff_list, container, false);
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.fragment_commit_diff_list, container, false);
     }
 
     private void showFileOptions(CharSequence line, final int position,

File: app/src/main/java/com/github/pockethub/ui/commit/CommitFileViewActivity.java
Patch:
@@ -123,7 +123,7 @@ public static Intent createIntent(Repo repository, String commit,
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.commit_file_view);
+        setContentView(R.layout.activity_commit_file_view);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/commit/CommitListFragment.java
Patch:
@@ -278,6 +278,6 @@ public void onClick(View v) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_list, container, false);
+        return inflater.inflate(R.layout.fragment_commit_list, container, false);
     }
 }

File: app/src/main/java/com/github/pockethub/ui/commit/CommitViewActivity.java
Patch:
@@ -109,7 +109,7 @@ public static Intent createIntent(final Repo repository,
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.pager);
+        setContentView(R.layout.activity_pager);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/gist/CreateGistActivity.java
Patch:
@@ -53,7 +53,7 @@ public class CreateGistActivity extends BaseActivity {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.gist_create);
+        setContentView(R.layout.activity_gist_create);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java
Patch:
@@ -184,7 +184,7 @@ private void showSource() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.gist_file_view, container, false);
+        return inflater.inflate(R.layout.fragment_gist_file_view, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/gist/GistFilesViewActivity.java
Patch:
@@ -89,7 +89,7 @@ protected void onCreate(Bundle savedInstanceState) {
         gistId = getStringExtra(EXTRA_GIST_ID);
         initialPosition = getIntExtra(EXTRA_POSITION);
 
-        setContentView(R.layout.pager_with_title);
+        setContentView(R.layout.activity_pager_with_title);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        View root = inflater.inflate(R.layout.comment_list, container, false);
+        View root = inflater.inflate(R.layout.fragment_comment_list, container, false);
 
         headerView = inflater.inflate(R.layout.gist_header, null);
         created = (TextView) headerView.findViewById(R.id.tv_gist_creation);

File: app/src/main/java/com/github/pockethub/ui/gist/GistsViewActivity.java
Patch:
@@ -100,7 +100,7 @@ public static Intent createIntent(List<Gist> gists, int position) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.pager);
+        setContentView(R.layout.activity_pager);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/issue/EditIssueActivity.java
Patch:
@@ -133,7 +133,7 @@ public static Intent createIntent(final Issue issue,
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.issue_edit);
+        setContentView(R.layout.activity_issue_edit);
 
         titleText = finder.find(R.id.et_issue_title);
         bodyText = finder.find(R.id.et_issue_body);

File: app/src/main/java/com/github/pockethub/ui/issue/EditIssuesFilterActivity.java
Patch:
@@ -103,7 +103,7 @@ public static Intent createIntent(IssueFilter filter) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.issues_filter_edit);
+        setContentView(R.layout.activity_issues_filter_edit);
 
         labelsText = finder.find(R.id.tv_labels);
         milestoneText = finder.find(R.id.tv_milestone);

File: app/src/main/java/com/github/pockethub/ui/issue/IssueBrowseActivity.java
Patch:
@@ -60,7 +60,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         repo = getParcelableExtra(EXTRA_REPOSITORY);
 
-        setContentView(R.layout.repo_issue_list);
+        setContentView(R.layout.activity_repo_issue_list);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java
Patch:
@@ -260,7 +260,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_list, container, false);
+        return inflater.inflate(R.layout.fragment_comment_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/issue/IssueSearchActivity.java
Patch:
@@ -89,7 +89,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.issue_search);
+        setContentView(R.layout.activity_issue_search);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/issue/IssuesViewActivity.java
Patch:
@@ -188,7 +188,7 @@ protected void onCreate(Bundle savedInstanceState) {
         repoIds = getIntent().getParcelableArrayListExtra(EXTRA_REPOSITORIES);
         repo = getParcelableExtra(EXTRA_REPOSITORY);
 
-        setContentView(R.layout.pager);
+        setContentView(R.layout.activity_pager);
 
         setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
 

File: app/src/main/java/com/github/pockethub/ui/ref/BranchFileViewActivity.java
Patch:
@@ -120,7 +120,7 @@ public static Intent createIntent(Repo repository, String branch,
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.commit_file_view);
+        setContentView(R.layout.activity_commit_file_view);
 
         repo = getParcelableExtra(EXTRA_REPOSITORY);
         sha = getStringExtra(EXTRA_BASE);

File: app/src/main/java/com/github/pockethub/ui/repo/RepositoryContributorsActivity.java
Patch:
@@ -56,7 +56,7 @@ public static Intent createIntent(Repo repository) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(R.layout.repo_contributors);
+        setContentView(R.layout.activity_repo_contributors);
 
         repository = getParcelableExtra(EXTRA_REPOSITORY);
 

File: app/src/main/java/com/github/pockethub/PocketHub.java
Patch:
@@ -4,12 +4,15 @@
 
 import com.alorma.github.basesdk.client.credentials.GithubDeveloperCredentials;
 import com.alorma.github.basesdk.client.credentials.MetaDeveloperCredentialsProvider;
+import com.bugsnag.android.Bugsnag;
 
 public class PocketHub extends Application {
 
     @Override
     public void onCreate() {
         super.onCreate();
         GithubDeveloperCredentials.init(new MetaDeveloperCredentialsProvider(getApplicationContext()));
+        Bugsnag.init(this);
+        Bugsnag.setNotifyReleaseStages("production");
     }
 }

File: app/src/main/java/com/github/pockethub/ui/MainActivity.java
Patch:
@@ -38,6 +38,7 @@
 import com.alorma.github.sdk.bean.dto.response.UserType;
 import com.alorma.github.sdk.login.AccountsHelper;
 import com.bugsnag.android.Bugsnag;
+import com.github.pockethub.BuildConfig;
 import com.github.pockethub.R;
 import com.github.pockethub.accounts.AccountUtils;
 import com.github.pockethub.accounts.LoginActivity;
@@ -86,7 +87,7 @@ public class MainActivity extends BaseActivity implements
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        Bugsnag.init(this);
+
         setContentView(R.layout.activity_main);
 
         SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(this);

File: app/src/main/java/com/github/pockethub/PocketHub.java
Patch:
@@ -4,12 +4,15 @@
 
 import com.alorma.github.basesdk.client.credentials.GithubDeveloperCredentials;
 import com.alorma.github.basesdk.client.credentials.MetaDeveloperCredentialsProvider;
+import com.bugsnag.android.Bugsnag;
 
 public class PocketHub extends Application {
 
     @Override
     public void onCreate() {
         super.onCreate();
         GithubDeveloperCredentials.init(new MetaDeveloperCredentialsProvider(getApplicationContext()));
+        Bugsnag.init(this);
+        Bugsnag.setNotifyReleaseStages("production");
     }
 }

File: app/src/main/java/com/github/pockethub/ui/issue/LabelsDialogFragment.java
Patch:
@@ -100,7 +100,7 @@ protected void update(int position, Label item) {
      */
     @SuppressWarnings("unchecked")
     public static ArrayList<Label> getSelected(Bundle arguments) {
-        return (ArrayList<Label>) arguments.getParcelable(ARG_SELECTED);
+        return arguments.getParcelableArrayList(ARG_SELECTED);
     }
 
     /**

File: app/src/main/java/com/github/pockethub/ui/issue/LabelsDialogFragment.java
Patch:
@@ -100,7 +100,7 @@ protected void update(int position, Label item) {
      */
     @SuppressWarnings("unchecked")
     public static ArrayList<Label> getSelected(Bundle arguments) {
-        return (ArrayList<Label>) arguments.getParcelable(ARG_SELECTED);
+        return arguments.getParcelableArrayList(ARG_SELECTED);
     }
 
     /**

File: app/src/main/java/com/github/pockethub/ui/issue/DeleteCommentTask.java
Patch:
@@ -62,7 +62,7 @@ public DeleteCommentTask(final Context context,
 
     @Override
     protected GithubComment run(Account account) throws Exception {
-        new DeleteIssueCommentClient(context, InfoUtils.createRepoInfo(repository), comment.id);
+        new DeleteIssueCommentClient(context, InfoUtils.createRepoInfo(repository), comment.id).executeSync();
         return comment;
     }
 

File: app/src/main/java/com/github/pockethub/PocketHub.java
Patch:
@@ -5,7 +5,7 @@
 import com.alorma.github.basesdk.client.credentials.GithubDeveloperCredentials;
 import com.alorma.github.basesdk.client.credentials.MetaDeveloperCredentialsProvider;
 
-public class GitHub extends Application {
+public class PocketHub extends Application {
 
     @Override
     public void onCreate() {

File: app/src/main/java/com/github/pockethub/PocketHubModule.java
Patch:
@@ -44,7 +44,7 @@
 /**
  * Main module provide services and clients
  */
-public class GitHubModule extends AbstractModule {
+public class PocketHubModule extends AbstractModule {
 
     private WeakReference<IssueStore> issues;
 

File: app/src/main/java/com/github/pockethub/ui/ItemListFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.item_list, null);
+        return inflater.inflate(R.layout.item_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java
Patch:
@@ -206,7 +206,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.repo_code, null);
+        return inflater.inflate(R.layout.repo_code, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/comment/RawCommentFragment.java
Patch:
@@ -69,7 +69,7 @@ public boolean onTouch(View v, MotionEvent event) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_create, null);
+        return inflater.inflate(R.layout.comment_create, container, false);
     }
 
     /**

File: app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java
Patch:
@@ -418,7 +418,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_diff_list, null);
+        return inflater.inflate(R.layout.commit_diff_list, container, false);
     }
 
     private void showFileOptions(CharSequence line, final int position,

File: app/src/main/java/com/github/pockethub/ui/commit/CommitListFragment.java
Patch:
@@ -280,6 +280,6 @@ public void onClick(View v) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_list, null);
+        return inflater.inflate(R.layout.commit_list, container, false);
     }
 }

File: app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java
Patch:
@@ -184,7 +184,7 @@ private void showSource() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.gist_file_view, null);
+        return inflater.inflate(R.layout.gist_file_view, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        View root = inflater.inflate(R.layout.comment_list, null);
+        View root = inflater.inflate(R.layout.comment_list, container, false);
 
         headerView = inflater.inflate(R.layout.gist_header, null);
         created = (TextView) headerView.findViewById(R.id.tv_gist_creation);

File: app/src/main/java/com/github/pockethub/ui/issue/FiltersViewFragment.java
Patch:
@@ -66,7 +66,7 @@ public static Intent createIntent() {
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         @Nullable Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.issues_filter_list, null);
+        return inflater.inflate(R.layout.issues_filter_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java
Patch:
@@ -267,7 +267,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_list, null);
+        return inflater.inflate(R.layout.comment_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/ItemListFragment.java
Patch:
@@ -103,7 +103,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.item_list, null);
+        return inflater.inflate(R.layout.item_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/code/RepositoryCodeFragment.java
Patch:
@@ -206,7 +206,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.repo_code, null);
+        return inflater.inflate(R.layout.repo_code, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/comment/RawCommentFragment.java
Patch:
@@ -69,7 +69,7 @@ public boolean onTouch(View v, MotionEvent event) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_create, null);
+        return inflater.inflate(R.layout.comment_create, container, false);
     }
 
     /**

File: app/src/main/java/com/github/pockethub/ui/commit/CommitDiffListFragment.java
Patch:
@@ -418,7 +418,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_diff_list, null);
+        return inflater.inflate(R.layout.commit_diff_list, container, false);
     }
 
     private void showFileOptions(CharSequence line, final int position,

File: app/src/main/java/com/github/pockethub/ui/commit/CommitListFragment.java
Patch:
@@ -280,6 +280,6 @@ public void onClick(View v) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.commit_list, null);
+        return inflater.inflate(R.layout.commit_list, container, false);
     }
 }

File: app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java
Patch:
@@ -184,7 +184,7 @@ private void showSource() {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.gist_file_view, null);
+        return inflater.inflate(R.layout.gist_file_view, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/gist/GistFragment.java
Patch:
@@ -130,7 +130,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        View root = inflater.inflate(R.layout.comment_list, null);
+        View root = inflater.inflate(R.layout.comment_list, container, false);
 
         headerView = inflater.inflate(R.layout.gist_header, null);
         created = (TextView) headerView.findViewById(R.id.tv_gist_creation);

File: app/src/main/java/com/github/pockethub/ui/issue/FiltersViewFragment.java
Patch:
@@ -66,7 +66,7 @@ public static Intent createIntent() {
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
         @Nullable Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.issues_filter_list, null);
+        return inflater.inflate(R.layout.issues_filter_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java
Patch:
@@ -267,7 +267,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.comment_list, null);
+        return inflater.inflate(R.layout.comment_list, container, false);
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/NavigationDrawerFragment.java
Patch:
@@ -12,8 +12,8 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.widget.DrawerLayout;
 import android.support.v7.app.ActionBar;
-import android.support.v7.app.ActionBarActivity;
 import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
 import android.view.Display;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
@@ -214,7 +214,7 @@ public void onConfigurationChanged(Configuration newConfig) {
     }
 
     private ActionBar getActionBar() {
-        return ((ActionBarActivity) getActivity()).getSupportActionBar();
+        return ((AppCompatActivity) getActivity()).getSupportActionBar();
     }
 
     @Override

File: app/src/main/java/com/github/pockethub/ui/TabPagerFragment.java
Patch:
@@ -4,7 +4,7 @@
 import android.support.annotation.Nullable;
 import android.support.design.widget.TabLayout;
 import android.support.v4.view.PagerAdapter;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -137,7 +137,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         view.findViewById(R.id.toolbar).setVisibility(View.GONE);
 
         // On Lollipop, the action bar shadow is provided by default, so have to remove it explicitly
-        ((ActionBarActivity) getActivity()).getSupportActionBar().setElevation(0);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setElevation(0);
 
         pager = (ViewPager) view.findViewById(R.id.vp_pages);
         pager.setOnPageChangeListener(this);

File: app/src/main/java/com/github/pockethub/ui/comment/CommentPreviewPagerAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 import android.content.Context;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.github.pockethub.R;
 import com.github.pockethub.ui.FragmentPagerAdapter;
@@ -46,7 +46,7 @@ public class CommentPreviewPagerAdapter extends FragmentPagerAdapter {
      * @param activity
      * @param repo
      */
-    public CommentPreviewPagerAdapter(ActionBarActivity activity,
+    public CommentPreviewPagerAdapter(AppCompatActivity activity,
             Repo repo) {
         super(activity);
         this.context = activity.getApplicationContext();

File: app/src/main/java/com/github/pockethub/ui/commit/CommitPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import static com.github.pockethub.Intents.EXTRA_REPOSITORY;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.alorma.github.sdk.bean.dto.response.Repo;
 import com.github.pockethub.ui.FragmentStatePagerAdapter;
@@ -40,7 +40,7 @@ public class CommitPagerAdapter extends FragmentStatePagerAdapter {
      * @param repository
      * @param ids
      */
-    public CommitPagerAdapter(ActionBarActivity activity,
+    public CommitPagerAdapter(AppCompatActivity activity,
             Repo repository, CharSequence[] ids) {
         super(activity);
 

File: app/src/main/java/com/github/pockethub/ui/gist/GistFilesPagerAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import static com.github.pockethub.Intents.EXTRA_GIST_FILE;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.alorma.github.sdk.bean.dto.response.GistFile;
 import com.github.pockethub.ui.FragmentPagerAdapter;
@@ -38,7 +38,7 @@ public class GistFilesPagerAdapter extends FragmentPagerAdapter {
      * @param activity
      * @param gist
      */
-    public GistFilesPagerAdapter(ActionBarActivity activity, Gist gist) {
+    public GistFilesPagerAdapter(AppCompatActivity activity, Gist gist) {
         super(activity);
 
         Map<String, GistFile> gistFiles = gist.files;

File: app/src/main/java/com/github/pockethub/ui/gist/GistsPagerAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import static com.github.pockethub.Intents.EXTRA_GIST_ID;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.SparseArray;
 import android.view.ViewGroup;
 
@@ -37,7 +37,7 @@ public class GistsPagerAdapter extends FragmentStatePagerAdapter {
      * @param activity
      * @param gistIds
      */
-    public GistsPagerAdapter(ActionBarActivity activity, String[] gistIds) {
+    public GistsPagerAdapter(AppCompatActivity activity, String[] gistIds) {
         super(activity);
 
         this.ids = gistIds;

File: app/src/main/java/com/github/pockethub/ui/issue/IssueSearchActivity.java
Patch:
@@ -33,7 +33,7 @@
 
 import com.github.pockethub.R;
 import com.github.pockethub.ui.repo.RepositoryViewActivity;
-import com.github.pockethub.ui.roboactivities.RoboActionBarActivity;
+import com.github.pockethub.ui.roboactivities.RoboAppCompatActivity;
 import com.github.pockethub.util.AvatarLoader;
 import com.github.pockethub.util.InfoUtils;
 import com.github.pockethub.util.ToastUtils;
@@ -44,7 +44,7 @@
 /**
  * Activity to search issues
  */
-public class IssueSearchActivity extends RoboActionBarActivity {
+public class IssueSearchActivity extends RoboAppCompatActivity {
 
     @Inject
     private AvatarLoader avatars;

File: app/src/main/java/com/github/pockethub/ui/issue/IssuesPagerAdapter.java
Patch:
@@ -23,7 +23,7 @@
 import static com.github.pockethub.Intents.EXTRA_USER;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 import android.util.SparseArray;
 import android.view.ViewGroup;
 
@@ -63,7 +63,7 @@ public class IssuesPagerAdapter extends FragmentStatePagerAdapter {
      * @param issueStore
      * @param collaborator
      */
-    public IssuesPagerAdapter(ActionBarActivity activity,
+    public IssuesPagerAdapter(AppCompatActivity activity,
             List<Repo> repoIds, int[] issueNumbers,
             IssueStore issueStore, boolean collaborator, boolean owner) {
         super(activity);
@@ -82,7 +82,7 @@ public IssuesPagerAdapter(ActionBarActivity activity,
      * @param issueNumbers
      * @param collaborator
      */
-    public IssuesPagerAdapter(ActionBarActivity activity,
+    public IssuesPagerAdapter(AppCompatActivity activity,
             Repo repository, int[] issueNumbers,
             boolean collaborator, boolean owner) {
         super(activity);

File: app/src/main/java/com/github/pockethub/ui/repo/RepositoryPagerAdapter.java
Patch:
@@ -18,7 +18,7 @@
 import android.content.res.Resources;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.github.pockethub.R;
 import com.github.pockethub.ui.FragmentPagerAdapter;
@@ -55,7 +55,7 @@ public class RepositoryPagerAdapter extends FragmentPagerAdapter {
      * @param activity
      * @param hasIssues
      */
-    public RepositoryPagerAdapter(ActionBarActivity activity,
+    public RepositoryPagerAdapter(AppCompatActivity activity,
             boolean hasIssues) {
         super(activity);
 

File: app/src/main/java/com/github/pockethub/ui/roboactivities/AccountAuthenticatorAppCompatActivity.java
Patch:
@@ -3,7 +3,7 @@
 import android.accounts.AccountAuthenticatorResponse;
 import android.accounts.AccountManager;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 /**
  * Base class for implementing an Activity that is used to help implement an
@@ -21,7 +21,7 @@
  *
  * Based on <a href="https://github.com/mccrajs">@mccrajs's</a> implementation <a href="https://github.com/rtyley/roboguice-sherlock/blob/master/src/main/java/com/github/rtyley/android/sherlock/android/accounts/SherlockAccountAuthenticatorActivity.java">here</a>.
  */
-public class ActionBarAccountAuthenticatorActivity extends ActionBarActivity {
+public class AccountAuthenticatorAppCompatActivity extends AppCompatActivity {
     private AccountAuthenticatorResponse mAccountAuthenticatorResponse = null;
     private Bundle mResultBundle = null;
 

File: app/src/main/java/com/github/pockethub/ui/roboactivities/RoboAccountAuthenticatorAppCompatActivity.java
Patch:
@@ -32,7 +32,7 @@
  *
  * @author Marcus Better
  */
-public class RoboActionBarAccountAuthenticatorActivity extends ActionBarAccountAuthenticatorActivity implements RoboContext {
+public class RoboAccountAuthenticatorAppCompatActivity extends AccountAuthenticatorAppCompatActivity implements RoboContext {
     protected EventManager eventManager;
     protected HashMap<Key<?>, Object> scopedObjects = new HashMap<>();
 

File: app/src/main/java/com/github/pockethub/ui/roboactivities/RoboAppCompatActivity.java
Patch:
@@ -3,7 +3,7 @@
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.os.Bundle;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.google.inject.Key;
 
@@ -27,11 +27,11 @@
 import roboguice.util.RoboContext;
 
 /**
- * This is a base activity that adds Roboguice support for AppCompat's ActionBarActivity
+ * This is a base activity that adds Roboguice support for AppCompat's AppCompatActivity
  * <p>
  * Based on <a href="https://github.com/mccrajs">@mccrajs's</a> implementation <a href="https://github.com/metova/roboguice-appcompat/blob/master/src/com/metova/roboguice/appcompat/RoboActionBarActivity.java">here</a>.
  */
-public class RoboActionBarActivity extends ActionBarActivity implements RoboContext {
+public class RoboAppCompatActivity extends AppCompatActivity implements RoboContext {
 
     protected EventManager eventManager;
     protected HashMap<Key<?>, Object> scopedObjects = new HashMap<>();

File: app/src/main/java/com/github/pockethub/ui/search/SearchPagerAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 import android.content.res.Resources;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.github.pockethub.R;
 import com.github.pockethub.ui.FragmentPagerAdapter;
@@ -34,7 +34,7 @@ public class SearchPagerAdapter extends FragmentPagerAdapter {
      *
      * @param activity
      */
-    public SearchPagerAdapter(ActionBarActivity activity) {
+    public SearchPagerAdapter(AppCompatActivity activity) {
         super(activity);
 
         resources = activity.getResources();

File: app/src/main/java/com/github/pockethub/ui/user/UserPagerAdapter.java
Patch:
@@ -17,7 +17,7 @@
 
 import android.content.res.Resources;
 import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBarActivity;
+import android.support.v7.app.AppCompatActivity;
 
 import com.github.pockethub.R;
 import com.github.pockethub.ui.FragmentPagerAdapter;
@@ -33,7 +33,7 @@ public class UserPagerAdapter extends FragmentPagerAdapter {
     /**
      * @param activity
      */
-    public UserPagerAdapter(final ActionBarActivity activity) {
+    public UserPagerAdapter(final AppCompatActivity activity) {
         super(activity);
 
         resources = activity.getResources();

File: app/src/main/java/com/github/pockethub/ui/gist/GistFileFragment.java
Patch:
@@ -19,6 +19,7 @@
 import static com.github.pockethub.Intents.EXTRA_GIST_ID;
 import static com.github.pockethub.util.PreferenceUtils.WRAP;
 import android.accounts.Account;
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.SharedPreferences;
 import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
@@ -118,6 +119,7 @@ private void updateWrapItem() {
                 wrapItem.setTitle(R.string.enable_wrapping);
     }
 
+    @SuppressLint("CommitPrefEdits")
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {

File: app/src/main/java/com/github/pockethub/ui/user/HomePagerFragment.java
Patch:
@@ -1,5 +1,6 @@
 package com.github.pockethub.ui.user;
 
+import android.annotation.SuppressLint;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
@@ -38,6 +39,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         setOrg((Organization) getArguments().getParcelable("org"));
     }
 
+    @SuppressLint("CommitPrefEdits")
     private void setOrg(Organization org) {
         PreferenceUtils.save(sharedPreferences.edit().putInt(PREF_ORG_ID, org.id));
         this.org = org;

File: app/src/main/java/com/github/pockethub/ui/issue/DeleteCommentTask.java
Patch:
@@ -62,7 +62,7 @@ public DeleteCommentTask(final Context context,
 
     @Override
     protected GithubComment run(Account account) throws Exception {
-        new DeleteIssueCommentClient(context, InfoUtils.createRepoInfo(repository), comment.id);
+        new DeleteIssueCommentClient(context, InfoUtils.createRepoInfo(repository), comment.id).executeSync();
         return comment;
     }
 

File: app/src/main/java/com/github/pockethub/ui/issue/IssueFragment.java
Patch:
@@ -515,6 +515,7 @@ protected void onSuccess(GithubComment comment) throws Exception {
                     if (items != null && comment != null) {
                         int commentPosition = findCommentPositionInItems(comment);
                         if (commentPosition >= 0) {
+                            issue.comments--;
                             items.remove(commentPosition);
                             updateList(issue, items);
                         }
@@ -575,7 +576,8 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
             GithubComment comment = data
                     .getParcelableExtra(EXTRA_COMMENT);
             if (items != null) {
-                items.add(comment);
+                IssueStoryComment storyComment = new IssueStoryComment(comment);
+                items.add(storyComment);
                 issue.comments = issue.comments + 1;
                 updateList(issue, items);
             } else

File: app/src/androidTest/java/com/github/mobile/tests/ActivityTest.java
Patch:
@@ -96,6 +96,8 @@ protected void ui(Runnable runnable) throws Throwable {
      * @param text
      */
     protected void send(final String text) {
+        getInstrumentation().waitForIdleSync();
         getInstrumentation().sendStringSync(text);
+        getInstrumentation().waitForIdleSync();
     }
 }

File: app/src/androidTest/java/com/github/mobile/tests/gist/CreateCommentActivityTest.java
Patch:
@@ -52,7 +52,7 @@ protected void setUp() throws Exception {
      *
      * @throws Throwable
      */
-    public void testEmptyCommentIsProhitibed() throws Throwable {
+    public void testEmptyCommentIsProhibited() throws Throwable {
         View createMenu = view(id.m_apply);
         assertFalse(createMenu.isEnabled());
         final EditText comment = editText(id.et_comment);

File: app/src/main/java/com/github/mobile/GitHubModule.java
Patch:
@@ -77,7 +77,7 @@ IssueStore issueStore(IssueService issueService,
         IssueStore store = issues != null ? issues.get() : null;
         if (store == null) {
             store = new IssueStore(issueService, pullService);
-            issues = new WeakReference<IssueStore>(store);
+            issues = new WeakReference<>(store);
         }
         return store;
     }
@@ -87,7 +87,7 @@ GistStore gistStore(GistService service) {
         GistStore store = gists != null ? gists.get() : null;
         if (store == null) {
             store = new GistStore(service);
-            gists = new WeakReference<GistStore>(store);
+            gists = new WeakReference<>(store);
         }
         return store;
     }
@@ -97,7 +97,7 @@ CommitStore commitStore(CommitService service) {
         CommitStore store = commits != null ? commits.get() : null;
         if (store == null) {
             store = new CommitStore(service);
-            commits = new WeakReference<CommitStore>(store);
+            commits = new WeakReference<>(store);
         }
         return store;
     }

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -48,7 +48,7 @@
 
 public class AccountAuthenticator extends AbstractAccountAuthenticator {
 
-    private static final String TAG = "GitHubAccountAuthenticator";
+    private static final String TAG = "GHAccountAuthenticator";
 
     private static final List<String> SCOPES = Arrays.asList("repo", "user", "gist");
 

File: app/src/main/java/com/github/mobile/accounts/AccountScope.java
Patch:
@@ -54,9 +54,9 @@ AccountScope.<GitHubAccount> seededKeyProvider()).in(
         };
     }
 
-    private final ThreadLocal<GitHubAccount> currentAccount = new ThreadLocal<GitHubAccount>();
+    private final ThreadLocal<GitHubAccount> currentAccount = new ThreadLocal<>();
 
-    private final Map<GitHubAccount, Map<Key<?>, Object>> repoScopeMaps = new ConcurrentHashMap<GitHubAccount, Map<Key<?>, Object>>();
+    private final Map<GitHubAccount, Map<Key<?>, Object>> repoScopeMaps = new ConcurrentHashMap<>();
 
     /**
      * Enters scope using a GitHubAccount derived from the supplied account
@@ -101,7 +101,7 @@ protected <T> Map<Key<?>, Object> getScopedObjectMap(final Key<T> key) {
 
         Map<Key<?>, Object> scopeMap = repoScopeMaps.get(account);
         if (scopeMap == null) {
-            scopeMap = new ConcurrentHashMap<Key<?>, Object>();
+            scopeMap = new ConcurrentHashMap<>();
             scopeMap.put(GITHUB_ACCOUNT_KEY, account);
             repoScopeMaps.put(account, scopeMap);
         }

File: app/src/main/java/com/github/mobile/core/ItemStore.java
Patch:
@@ -57,8 +57,8 @@ protected static class ItemReferences<V> {
          * Create reference store
          */
         public ItemReferences() {
-            queue = new ReferenceQueue<V>();
-            items = new ConcurrentHashMap<Object, ItemReference<V>>();
+            queue = new ReferenceQueue<>();
+            items = new ConcurrentHashMap<>();
         }
 
         @SuppressWarnings("rawtypes")
@@ -88,7 +88,7 @@ public V get(final Object id) {
          */
         public void put(Object id, V item) {
             expungeEntries();
-            items.put(id, new ItemReference<V>(item, id, queue));
+            items.put(id, new ItemReference<>(item, id, queue));
         }
     }
 }

File: app/src/main/java/com/github/mobile/core/ResourcePager.java
Patch:
@@ -45,7 +45,7 @@ public abstract class ResourcePager<E> {
     /**
      * All resources retrieved
      */
-    protected final Map<Object, E> resources = new LinkedHashMap<Object, E>();
+    protected final Map<Object, E> resources = new LinkedHashMap<>();
 
     /**
      * Are more pages available?
@@ -92,7 +92,7 @@ public int size() {
      * @return resources
      */
     public List<E> getResources() {
-        return new ArrayList<E>(resources.values());
+        return new ArrayList<>(resources.values());
     }
 
     /**

File: app/src/main/java/com/github/mobile/core/code/FullTree.java
Patch:
@@ -82,13 +82,13 @@ public static class Folder extends Entry {
         /**
          * Sub folders
          */
-        public final Map<String, Folder> folders = new TreeMap<String, Folder>(
+        public final Map<String, Folder> folders = new TreeMap<>(
                 CASE_INSENSITIVE_ORDER);
 
         /**
          * Files
          */
-        public final Map<String, Entry> files = new TreeMap<String, Entry>(
+        public final Map<String, Entry> files = new TreeMap<>(
                 CASE_INSENSITIVE_ORDER);
 
         private Folder() {

File: app/src/main/java/com/github/mobile/core/commit/CommitStore.java
Patch:
@@ -30,7 +30,7 @@
  */
 public class CommitStore extends ItemStore {
 
-    private final Map<String, ItemReferences<RepositoryCommit>> commits = new HashMap<String, ItemReferences<RepositoryCommit>>();
+    private final Map<String, ItemReferences<RepositoryCommit>> commits = new HashMap<>();
 
     private final CommitService service;
 
@@ -81,7 +81,7 @@ public RepositoryCommit addCommit(IRepositoryIdProvider repo,
             String repoId = repo.generateId();
             ItemReferences<RepositoryCommit> repoCommits = commits.get(repoId);
             if (repoCommits == null) {
-                repoCommits = new ItemReferences<RepositoryCommit>();
+                repoCommits = new ItemReferences<>();
                 commits.put(repoId, repoCommits);
             }
             repoCommits.put(commit.getSha(), commit);

File: app/src/main/java/com/github/mobile/core/commit/FullCommit.java
Patch:
@@ -49,7 +49,7 @@ public FullCommit(final RepositoryCommit commit) {
         this.commit = commit;
         List<CommitFile> rawFiles = commit.getFiles();
         if (rawFiles != null && !rawFiles.isEmpty()) {
-            files = new ArrayList<FullCommitFile>(rawFiles.size());
+            files = new ArrayList<>(rawFiles.size());
             for (CommitFile file : rawFiles)
                 files.add(new FullCommitFile(file));
         } else
@@ -70,7 +70,7 @@ public FullCommit(final RepositoryCommit commit,
         boolean hasComments = comments != null && !comments.isEmpty();
         boolean hasFiles = rawFiles != null && !rawFiles.isEmpty();
         if (hasFiles) {
-            files = new ArrayList<FullCommitFile>(rawFiles.size());
+            files = new ArrayList<>(rawFiles.size());
             if (hasComments) {
                 for (CommitFile file : rawFiles) {
                     Iterator<CommitComment> iterator = comments.iterator();

File: app/src/main/java/com/github/mobile/core/commit/FullCommitFile.java
Patch:
@@ -29,7 +29,7 @@
  */
 public class FullCommitFile {
 
-    private final SparseArray<List<CommitComment>> comments = new SparseArray<List<CommitComment>>(
+    private final SparseArray<List<CommitComment>> comments = new SparseArray<>(
             4);
 
     private final CommitFile file;
@@ -66,7 +66,7 @@ public FullCommitFile add(final CommitComment comment) {
         if (line >= 0) {
             List<CommitComment> lineComments = comments.get(line);
             if (lineComments == null) {
-                lineComments = new ArrayList<CommitComment>(4);
+                lineComments = new ArrayList<>(4);
                 comments.put(line, lineComments);
             }
             lineComments.add(comment);

File: app/src/main/java/com/github/mobile/core/gist/GistStore.java
Patch:
@@ -32,7 +32,7 @@
  */
 public class GistStore extends ItemStore {
 
-    private final ItemReferences<Gist> gists = new ItemReferences<Gist>();
+    private final ItemReferences<Gist> gists = new ItemReferences<>();
 
     private final GistService service;
 
@@ -66,7 +66,7 @@ protected Map<String, GistFile> sortFiles(final Gist gist) {
         if (files == null || files.size() < 2)
             return files;
 
-        Map<String, GistFile> sorted = new TreeMap<String, GistFile>(
+        Map<String, GistFile> sorted = new TreeMap<>(
                 CASE_INSENSITIVE_ORDER);
         sorted.putAll(files);
         return sorted;

File: app/src/main/java/com/github/mobile/core/issue/IssueStore.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class IssueStore extends ItemStore {
 
-    private final Map<String, ItemReferences<RepositoryIssue>> repos = new HashMap<String, ItemReferences<RepositoryIssue>>();
+    private final Map<String, ItemReferences<RepositoryIssue>> repos = new HashMap<>();
 
     private final IssueService issueService;
 
@@ -137,7 +137,7 @@ public RepositoryIssue addIssue(IRepositoryIdProvider repository,
             String repoId = repository.generateId();
             ItemReferences<RepositoryIssue> repoIssues = repos.get(repoId);
             if (repoIssues == null) {
-                repoIssues = new ItemReferences<RepositoryIssue>();
+                repoIssues = new ItemReferences<>();
                 repos.put(repoId, repoIssues);
             }
             RepositoryIssue repoIssue = createRepositoryIssue(issue);

File: app/src/main/java/com/github/mobile/core/repo/DeleteRepositoryTask.java
Patch:
@@ -13,6 +13,7 @@
 import com.google.inject.Inject;
 
 import java.util.Arrays;
+import java.util.Collections;
 import java.util.List;
 
 import org.eclipse.egit.github.core.IRepositoryIdProvider;
@@ -94,7 +95,7 @@ protected Void run(Account account) throws Exception {
         } else {
             Authorization authorization = new Authorization();
             authorization.setNote("Token for deleting repositories");
-            authorization.setScopes(Arrays.asList("delete_repo"));
+            authorization.setScopes(Collections.singletonList("delete_repo"));
 
             Authorization authorizationResponse = GitHubClientV2.getServiceClient().
                     createDeleteAuthorization(credentials, authorization);

File: app/src/main/java/com/github/mobile/core/search/SearchUserService.java
Patch:
@@ -100,7 +100,7 @@ public List<SearchUser> searchUsers(final String query,
 
         PagedRequest<SearchUser> request = createPagedRequest();
 
-        Map<String, String> params = new HashMap<String, String>(2, 1);
+        Map<String, String> params = new HashMap<>(2, 1);
         if (startPage > 0)
             params.put(PARAM_START_PAGE, Integer.toString(startPage));
         if (!params.isEmpty())

File: app/src/main/java/com/github/mobile/model/App.java
Patch:
@@ -8,7 +8,7 @@ public class App {
     private String name;
     private String url;
     private String clientId;
-    private Map<String, Object> additionalProperties = new HashMap<String, Object>();
+    private Map<String, Object> additionalProperties = new HashMap<>();
 
     /**
      *

File: app/src/main/java/com/github/mobile/model/Authorization.java
Patch:
@@ -15,8 +15,8 @@ public class Authorization {
     private Object noteUrl;
     private String createdAt;
     private String updatedAt;
-    private List<String> scopes = new ArrayList<String>();
-    private Map<String, Object> additionalProperties = new HashMap<String, Object>();
+    private List<String> scopes = new ArrayList<>();
+    private Map<String, Object> additionalProperties = new HashMap<>();
 
     /**
      *

File: app/src/main/java/com/github/mobile/persistence/AccountDataManager.java
Patch:
@@ -229,7 +229,7 @@ public void addIssueFilter(IssueFilter filter) {
         final File cache = new File(root, "issue_filters.ser");
         Collection<IssueFilter> filters = read(cache);
         if (filters == null)
-            filters = new HashSet<IssueFilter>();
+            filters = new HashSet<>();
         if (filters.add(filter))
             write(cache, filters);
     }

File: app/src/main/java/com/github/mobile/persistence/DatabaseCache.java
Patch:
@@ -147,7 +147,7 @@ private <E> List<E> loadFromDB(final SQLiteOpenHelper helper,
             if (!cursor.moveToFirst())
                 return null;
 
-            List<E> cached = new ArrayList<E>();
+            List<E> cached = new ArrayList<>();
             do
                 cached.add(persistableResource.loadFrom(cursor));
             while (cursor.moveToNext());

File: app/src/main/java/com/github/mobile/persistence/OrganizationRepositories.java
Patch:
@@ -159,7 +159,7 @@ public void store(SQLiteDatabase db, List<Repository> repos) {
     @Override
     public List<Repository> request() throws IOException {
         if (isAuthenticatedUser()) {
-            Set<Repository> all = new TreeSet<Repository>(
+            Set<Repository> all = new TreeSet<>(
                     new Comparator<Repository>() {
 
                         @Override
@@ -176,7 +176,7 @@ public int compare(final Repository repo1,
                     });
             all.addAll(repos.getRepositories());
             all.addAll(watcher.getWatched());
-            return new ArrayList<Repository>(all);
+            return new ArrayList<>(all);
         } else
             return repos.getOrgRepositories(org.getLogin());
     }

File: app/src/main/java/com/github/mobile/persistence/Organizations.java
Patch:
@@ -93,7 +93,7 @@ public void store(SQLiteDatabase db, List<User> orgs) {
     public List<User> request() throws IOException {
         User user = userService.getUser();
         List<User> orgs = orgService.getOrganizations();
-        List<User> all = new ArrayList<User>(orgs.size() + 1);
+        List<User> all = new ArrayList<>(orgs.size() + 1);
         all.add(user);
         all.addAll(orgs);
         return all;

File: app/src/main/java/com/github/mobile/ui/ItemListFragment.java
Patch:
@@ -232,7 +232,7 @@ public void onLoadFinished(Loader<List<E>> loader, List<E> items) {
      */
     protected HeaderFooterListAdapter<SingleTypeAdapter<E>> createAdapter() {
         SingleTypeAdapter<E> wrapped = createAdapter(items);
-        return new HeaderFooterListAdapter<SingleTypeAdapter<E>>(getListView(),
+        return new HeaderFooterListAdapter<>(getListView(),
                 wrapped);
     }
 

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerAdapter.java
Patch:
@@ -70,7 +70,7 @@ public int getCount() {
 
     @Override
     public NavigationDrawerObject getItem(int position) {
-        return data.get(position);
+        return data.get(position-1);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/code/RepositoryCodeFragment.java
Patch:
@@ -149,7 +149,7 @@ protected void onSuccess(final FullTree fullTree) throws Exception {
                 else {
                     // Look for current folder in new tree or else reset to root
                     Folder current = folder;
-                    LinkedList<Folder> stack = new LinkedList<Folder>();
+                    LinkedList<Folder> stack = new LinkedList<>();
                     while (current != null && current.parent != null) {
                         stack.addFirst(current);
                         current = current.parent;
@@ -216,7 +216,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         listView.setOnItemClickListener(this);
 
         Activity activity = getActivity();
-        adapter = new HeaderFooterListAdapter<CodeTreeAdapter>(listView,
+        adapter = new HeaderFooterListAdapter<>(listView,
                 new CodeTreeAdapter(activity));
 
         branchFooterView = finder.find(R.id.rl_branch);

File: app/src/main/java/com/github/mobile/ui/commit/CommitCompareListFragment.java
Patch:
@@ -211,7 +211,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
         list.setOnItemClickListener(this);
 
-        adapter = new HeaderFooterListAdapter<CommitFileListAdapter>(list,
+        adapter = new HeaderFooterListAdapter<>(list,
                 new CommitFileListAdapter(inflater, diffStyler, null, null));
         adapter.addFooter(inflater.inflate(R.layout.footer_separator, null));
         list.setAdapter(adapter);

File: app/src/main/java/com/github/mobile/ui/commit/CommitDiffListFragment.java
Patch:
@@ -389,7 +389,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
         LayoutInflater inflater = getActivity().getLayoutInflater();
 
-        adapter = new HeaderFooterListAdapter<CommitFileListAdapter>(list,
+        adapter = new HeaderFooterListAdapter<>(list,
                 new CommitFileListAdapter(inflater, diffStyler, avatars,
                         commentImageGetter));
         adapter.addFooter(inflater.inflate(R.layout.footer_separator, null));

File: app/src/main/java/com/github/mobile/ui/commit/CommitFileListAdapter.java
Patch:
@@ -206,7 +206,6 @@ protected void update(final int position, final Object item, final int type) {
             setText(3, TimeUtils.getRelativeTime(comment.getUpdatedAt()));
             imageGetter.bind(textView(0), comment.getBodyHtml(),
                     comment.getId());
-            return;
         }
     }
 }

File: app/src/main/java/com/github/mobile/ui/commit/CommitPagerAdapter.java
Patch:
@@ -48,9 +48,9 @@ public CommitPagerAdapter(ActionBarActivity activity,
     }
 
     @Override
-    public Fragment getItem(final int item) {
+    public Fragment getItem(final int position) {
         Bundle arguments = new Bundle();
-        arguments.putString(EXTRA_BASE, ids[item].toString());
+        arguments.putString(EXTRA_BASE, ids[position].toString());
         arguments.putSerializable(EXTRA_REPOSITORY, repository);
         CommitDiffListFragment fragment = new CommitDiffListFragment();
         fragment.setArguments(arguments);

File: app/src/main/java/com/github/mobile/ui/commit/DiffStyler.java
Patch:
@@ -35,7 +35,7 @@
  */
 public class DiffStyler {
 
-    private final Map<String, List<CharSequence>> diffs = new HashMap<String, List<CharSequence>>();
+    private final Map<String, List<CharSequence>> diffs = new HashMap<>();
 
     private final int markerColor;
 
@@ -110,7 +110,7 @@ public DiffStyler setFiles(final Collection<CommitFile> files) {
             int start = 0;
             int length = patch.length();
             int end = nextLine(patch, start, length);
-            List<CharSequence> lines = new ArrayList<CharSequence>();
+            List<CharSequence> lines = new ArrayList<>();
             while (start < length) {
                 lines.add(patch.substring(start, end));
                 start = end + 1;

File: app/src/main/java/com/github/mobile/ui/gist/CreateGistActivity.java
Patch:
@@ -65,7 +65,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(R.string.new_gist);
-        actionBar.setIcon(R.drawable.action_gist);
+        actionBar.setIcon(R.drawable.ic_github_gist_white_32dp);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         String text = ShareUtils.getBody(getIntent());

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -119,7 +119,7 @@ public class GistFragment extends DialogFragment implements OnItemClickListener
     @Inject
     private AvatarLoader avatars;
 
-    private List<View> fileHeaders = new ArrayList<View>();
+    private List<View> fileHeaders = new ArrayList<>();
 
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -158,7 +158,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         User user = gist.getUser();
         String userName = null;
         if(user != null) userName = user.getLogin();
-        adapter = new HeaderFooterListAdapter<CommentListAdapter>(list,
+        adapter = new HeaderFooterListAdapter<>(list,
                 new CommentListAdapter(activity.getLayoutInflater(), null, avatars,
                         imageGetter, editCommentListener, deleteCommentListener, userName, false, null));
         list.setAdapter(adapter);
@@ -495,7 +495,7 @@ public void onDeleteComment(Comment comment) {
             Bundle args = new Bundle();
             args.putSerializable(EXTRA_COMMENT, comment);
             ConfirmDialogFragment.show(
-                    (DialogFragmentActivity) getActivity(),
+                    getActivity(),
                     COMMENT_DELETE,
                     getActivity()
                             .getString(R.string.confirm_comment_delete_title),

File: app/src/main/java/com/github/mobile/ui/gist/GistsPagerAdapter.java
Patch:
@@ -31,7 +31,7 @@ public class GistsPagerAdapter extends FragmentStatePagerAdapter {
 
     private final String[] ids;
 
-    private final SparseArray<GistFragment> fragments = new SparseArray<GistFragment>();
+    private final SparseArray<GistFragment> fragments = new SparseArray<>();
 
     /**
      * @param activity

File: app/src/main/java/com/github/mobile/ui/issue/AssigneeDialog.java
Patch:
@@ -73,7 +73,7 @@ private void load(final User selectedAssignee) {
             @Override
             public List<User> run(Account account) throws Exception {
                 List<User> users = service.getCollaborators(repository);
-                Map<String, User> loadedCollaborators = new TreeMap<String, User>(
+                Map<String, User> loadedCollaborators = new TreeMap<>(
                         CASE_INSENSITIVE_ORDER);
                 for (User user : users)
                     loadedCollaborators.put(user.getLogin(), user);
@@ -116,7 +116,7 @@ public void show(User selectedAssignee) {
             return;
         }
 
-        final ArrayList<User> users = new ArrayList<User>(
+        final ArrayList<User> users = new ArrayList<>(
                 collaborators.values());
         int checked = -1;
         if (selectedAssignee != null)

File: app/src/main/java/com/github/mobile/ui/issue/FilterListFragment.java
Patch:
@@ -45,7 +45,7 @@ public Loader<List<IssueFilter>> onCreateLoader(int id, Bundle args) {
 
             @Override
             public List<IssueFilter> loadInBackground() {
-                List<IssueFilter> filters = new ArrayList<IssueFilter>(
+                List<IssueFilter> filters = new ArrayList<>(
                         cache.getIssueFilters());
                 Collections.sort(filters, FilterListFragment.this);
                 return filters;

File: app/src/main/java/com/github/mobile/ui/issue/FiltersViewActivity.java
Patch:
@@ -20,6 +20,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v7.app.ActionBar;
+import android.util.TypedValue;
 import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
@@ -69,7 +70,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(R.string.bookmarks);
-        actionBar.setIcon(R.drawable.action_bookmark);
+        actionBar.setIcon(R.drawable.ic_bookmark_white_24dp);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         fragment = (FilterListFragment) getSupportFragmentManager()

File: app/src/main/java/com/github/mobile/ui/issue/IssuesPagerAdapter.java
Patch:
@@ -49,7 +49,7 @@ public class IssuesPagerAdapter extends FragmentStatePagerAdapter {
 
     private final int[] issues;
 
-    private final SparseArray<IssueFragment> fragments = new SparseArray<IssueFragment>();
+    private final SparseArray<IssueFragment> fragments = new SparseArray<>();
 
     private final IssueStore store;
 

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDialog.java
Patch:
@@ -76,7 +76,7 @@ private void load(final Collection<Label> selectedLabels) {
             @Override
             public List<Label> run(Account account) throws Exception {
                 List<Label> repositoryLabels = service.getLabels(repository);
-                Map<String, Label> loadedLabels = new TreeMap<String, Label>(
+                Map<String, Label> loadedLabels = new TreeMap<>(
                         CASE_INSENSITIVE_ORDER);
                 for (Label label : repositoryLabels)
                     loadedLabels.put(label.getName(), label);
@@ -119,10 +119,10 @@ public void show(Collection<Label> selectedLabels) {
             return;
         }
 
-        final ArrayList<Label> names = new ArrayList<Label>(labels.values());
+        final ArrayList<Label> names = new ArrayList<>(labels.values());
         final boolean[] checked = new boolean[names.size()];
         if (selectedLabels != null && !selectedLabels.isEmpty()) {
-            Set<String> selectedNames = new HashSet<String>();
+            Set<String> selectedNames = new HashSet<>();
             for (Label label : selectedLabels)
                 selectedNames.add(label.getName());
             for (int i = 0; i < checked.length; i++)

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDialogFragment.java
Patch:
@@ -130,7 +130,7 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         ArrayList<Label> choices = getChoices();
         boolean[] selectedChoices = arguments
                 .getBooleanArray(ARG_SELECTED_CHOICES);
-        HashSet<String> selected = new HashSet<String>();
+        HashSet<String> selected = new HashSet<>();
         if (selectedChoices != null)
             for (int i = 0; i < choices.size(); i++)
                 if (selectedChoices[i])
@@ -167,7 +167,7 @@ private ArrayList<Label> getChoices() {
     @Override
     protected void onResult(int resultCode) {
         Bundle arguments = getArguments();
-        ArrayList<Label> selected = new ArrayList<Label>();
+        ArrayList<Label> selected = new ArrayList<>();
         boolean[] selectedChoices = arguments
                 .getBooleanArray(ARG_SELECTED_CHOICES);
         ArrayList<Label> choices = getChoices();

File: app/src/main/java/com/github/mobile/ui/issue/MilestoneDialog.java
Patch:
@@ -83,7 +83,7 @@ private void load(final Milestone selectedMilestone) {
 
             @Override
             public ArrayList<Milestone> run(Account account) throws Exception {
-                ArrayList<Milestone> milestones = new ArrayList<Milestone>();
+                ArrayList<Milestone> milestones = new ArrayList<>();
                 milestones
                         .addAll(service.getMilestones(repository, STATE_OPEN));
                 milestones.addAll(service.getMilestones(repository,

File: app/src/main/java/com/github/mobile/ui/issue/SearchIssueListFragment.java
Patch:
@@ -96,7 +96,7 @@ public Loader<List<SearchIssue>> onCreateLoader(int id, Bundle args) {
             public List<SearchIssue> loadData() throws Exception {
                 if (repository == null)
                     return Collections.emptyList();
-                List<SearchIssue> matches = new ArrayList<SearchIssue>();
+                List<SearchIssue> matches = new ArrayList<>();
                 /** TODO
                  *  This request is using a legacy API that is not working properly
                  *  it needs to be fixed

File: app/src/main/java/com/github/mobile/ui/ref/RefDialog.java
Patch:
@@ -74,7 +74,7 @@ private void load(final Reference selectedRef) {
             @Override
             public List<Reference> run(Account account) throws Exception {
                 List<Reference> allRefs = service.getReferences(repository);
-                Map<String, Reference> loadedRefs = new TreeMap<String, Reference>(
+                Map<String, Reference> loadedRefs = new TreeMap<>(
                         CASE_INSENSITIVE_ORDER);
                 for (Reference ref : allRefs)
                     if (RefUtils.isValid(ref))
@@ -118,7 +118,7 @@ public void show(Reference selectedRef) {
             return;
         }
 
-        final ArrayList<Reference> refList = new ArrayList<Reference>(
+        final ArrayList<Reference> refList = new ArrayList<>(
                 refs.values());
         int checked = -1;
         if (selectedRef != null) {

File: app/src/main/java/com/github/mobile/ui/repo/DefaultRepositoryListAdapter.java
Patch:
@@ -42,9 +42,9 @@ public class DefaultRepositoryListAdapter extends
 
     private final AtomicReference<User> account;
 
-    private final Map<Long, String> headers = new HashMap<Long, String>();
+    private final Map<Long, String> headers = new HashMap<>();
 
-    private final Set<Long> noSeparators = new HashSet<Long>();
+    private final Set<Long> noSeparators = new HashSet<>();
 
     /**
      * Create list adapter for repositories

File: app/src/main/java/com/github/mobile/ui/repo/RecentRepositories.java
Patch:
@@ -70,7 +70,7 @@ public RecentRepositories(final Context context, final User organization) {
     private void load() {
         LinkedHashSet<Long> loaded = new RequestReader(file, VERSION).read();
         if (loaded == null)
-            loaded = new LinkedHashSet<Long>();
+            loaded = new LinkedHashSet<>();
         ids = loaded;
         trim();
     }

File: app/src/main/java/com/github/mobile/ui/search/SearchUserListAdapter.java
Patch:
@@ -58,7 +58,6 @@ protected int[] getChildViewIds() {
 
     @Override
     protected void update(final int position, final SearchUser user) {
-        avatars.bind(imageView(0), user);
         setText(1, user.getLogin());
     }
 }

File: app/src/main/java/com/github/mobile/util/GravatarUtils.java
Patch:
@@ -77,8 +77,7 @@ private static String digest(final String value) {
 
         char[] zeros = new char[padding];
         Arrays.fill(zeros, '0');
-        return new StringBuilder(HASH_LENGTH).append(zeros).append(hashed)
-                .toString();
+        return String.valueOf(zeros) + hashed;
     }
 
     /**

File: app/src/main/java/com/github/mobile/util/HttpImageGetter.java
Patch:
@@ -81,9 +81,9 @@ private static boolean containsImages(final String html) {
 
     private final int width;
 
-    private final Map<Object, CharSequence> rawHtmlCache = new HashMap<Object, CharSequence>();
+    private final Map<Object, CharSequence> rawHtmlCache = new HashMap<>();
 
-    private final Map<Object, CharSequence> fullHtmlCache = new HashMap<Object, CharSequence>();
+    private final Map<Object, CharSequence> fullHtmlCache = new HashMap<>();
 
     private final ContentsService service;
 

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -48,7 +48,7 @@
 
 public class AccountAuthenticator extends AbstractAccountAuthenticator {
 
-    private static final String TAG = "GitHubAccountAuthenticator";
+    private static final String TAG = "GHAccountAuthenticator";
 
     private static final List<String> SCOPES = Arrays.asList("repo", "user", "gist");
 

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -48,7 +48,7 @@
 
 public class AccountAuthenticator extends AbstractAccountAuthenticator {
 
-    private static final String TAG = "GitHubAccountAuthenticator";
+    private static final String TAG = "GHAccountAuthenticator";
 
     private static final List<String> SCOPES = Arrays.asList("repo", "user", "gist");
 

File: app/src/main/java/com/github/mobile/ui/SlidingTabStrip.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.github.mobile.ui;
 
-import android.R;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Color;
@@ -65,7 +64,7 @@ class SlidingTabStrip extends LinearLayout {
         final float density = getResources().getDisplayMetrics().density;
 
         TypedValue outValue = new TypedValue();
-        context.getTheme().resolveAttribute(R.attr.colorForeground, outValue, true);
+        context.getTheme().resolveAttribute(android.R.attr.colorForeground, outValue, true);
         final int themeForegroundColor =  outValue.data;
 
         mDefaultBottomBorderColor = setColorAlpha(themeForegroundColor,

File: app/src/main/java/com/github/mobile/ui/ViewPager.java
Patch:
@@ -112,7 +112,7 @@ public void run() {
     protected boolean canScroll(final View v, final boolean checkV,
             final int dx, final int x, final int y) {
         if (SDK_INT < ICE_CREAM_SANDWICH && v instanceof WebView)
-            return ((WebView) v).canScrollHorizontally(-dx);
+            return v.canScrollHorizontally(-dx);
         else
             return super.canScroll(v, checkV, dx, x, y);
     }

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -495,7 +495,7 @@ public void onDeleteComment(Comment comment) {
             Bundle args = new Bundle();
             args.putSerializable(EXTRA_COMMENT, comment);
             ConfirmDialogFragment.show(
-                    (DialogFragmentActivity) getActivity(),
+                    getActivity(),
                     COMMENT_DELETE,
                     getActivity()
                             .getString(R.string.confirm_comment_delete_title),

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -701,7 +701,7 @@ public void onDeleteComment(Comment comment) {
             Bundle args = new Bundle();
             args.putSerializable(EXTRA_COMMENT, comment);
             ConfirmDialogFragment.show(
-                    (DialogFragmentActivity) getActivity(),
+                    getActivity(),
                     COMMENT_DELETE,
                     getActivity()
                             .getString(R.string.confirm_comment_delete_title),

File: app/src/main/java/com/github/mobile/ui/SlidingTabStrip.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.github.mobile.ui;
 
-import android.R;
 import android.content.Context;
 import android.graphics.Canvas;
 import android.graphics.Color;
@@ -65,7 +64,7 @@ class SlidingTabStrip extends LinearLayout {
         final float density = getResources().getDisplayMetrics().density;
 
         TypedValue outValue = new TypedValue();
-        context.getTheme().resolveAttribute(R.attr.colorForeground, outValue, true);
+        context.getTheme().resolveAttribute(android.R.attr.colorForeground, outValue, true);
         final int themeForegroundColor =  outValue.data;
 
         mDefaultBottomBorderColor = setColorAlpha(themeForegroundColor,

File: integration-tests/src/main/java/com/github/mobile/tests/ActivityTest.java
Patch:
@@ -96,6 +96,8 @@ protected void ui(Runnable runnable) throws Throwable {
      * @param text
      */
     protected void send(final String text) {
+        getInstrumentation().waitForIdleSync();
         getInstrumentation().sendStringSync(text);
+        getInstrumentation().waitForIdleSync();
     }
 }

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateCommentActivityTest.java
Patch:
@@ -52,7 +52,7 @@ protected void setUp() throws Exception {
      *
      * @throws Throwable
      */
-    public void testEmptyCommentIsProhitibed() throws Throwable {
+    public void testEmptyCommentIsProhibited() throws Throwable {
         View createMenu = view(id.m_apply);
         assertFalse(createMenu.isEnabled());
         final EditText comment = editText(id.et_comment);

File: app/src/main/java/com/github/mobile/util/AvatarLoader.java
Patch:
@@ -197,6 +197,9 @@ private void bind(final ImageView view, String url) {
     }
 
     private String getAvatarUrl(User user) {
+        if (user == null)
+            return null;
+
         String avatarUrl = user.getAvatarUrl();
         if (TextUtils.isEmpty(avatarUrl)) {
             avatarUrl = getAvatarUrl(GravatarUtils.getHash(user.getEmail()));

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateCommentActivityTest.java
Patch:
@@ -52,7 +52,7 @@ protected void setUp() throws Exception {
      *
      * @throws Throwable
      */
-    public void testEmptyCommentIsProhitibed() throws Throwable {
+    public void testEmptyCommentIsProhibited() throws Throwable {
         View createMenu = view(id.m_apply);
         assertFalse(createMenu.isEnabled());
         final EditText comment = editText(id.et_comment);

File: app/src/main/java/com/github/mobile/ui/user/IconAndViewTextManager.java
Patch:
@@ -445,9 +445,9 @@ else if ("closed".equals(action))
         } else if (Event.TYPE_MEMBER.equals(type)) {
             icon = TypefaceUtils.ICON_ADD_MEMBER;
             formatAddMember(event, main, details);
-        } else if (Event.TYPE_PUBLIC.equals(type))
+        } else if (Event.TYPE_PUBLIC.equals(type)) {
             formatPublic(event, main, details);
-        else if (Event.TYPE_PULL_REQUEST.equals(type)) {
+        } else if (Event.TYPE_PULL_REQUEST.equals(type)) {
             icon = TypefaceUtils.ICON_PULL_REQUEST;
             formatPullRequest(event, main, details);
         } else if (Event.TYPE_PULL_REQUEST_REVIEW_COMMENT.equals(type)) {

File: app/src/main/java/com/github/mobile/ui/user/IconAndViewTextManager.java
Patch:
@@ -15,7 +15,7 @@ public IconAndViewTextManager(NewsListAdapter newsListAdapter) {
 
     @Override
     protected void update(int position, Event event) {
-        newsListAdapter.getAvatars().bind(newsListAdapter.imageView(0), event.getActor());
+        newsListAdapter.getAvatars().bind(newsListAdapter.imageViewAgent(0), event.getActor());
 
         StyledText main = new StyledText();
         StyledText details = new StyledText();

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerAdapter.java
Patch:
@@ -70,7 +70,7 @@ public int getCount() {
 
     @Override
     public NavigationDrawerObject getItem(int position) {
-        return data.get(position);
+        return data.get(position-1);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java
Patch:
@@ -42,7 +42,7 @@ public class NavigationDrawerFragment extends Fragment implements AdapterView.On
     private ListView mDrawerListView;
     private View mFragmentContainerView;
 
-    private int mCurrentSelectedPosition = 0;
+    private int mCurrentSelectedPosition = 1;
     private boolean mFromSavedInstanceState;
     private boolean mUserLearnedDrawer;
 

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerAdapter.java
Patch:
@@ -70,7 +70,7 @@ public int getCount() {
 
     @Override
     public NavigationDrawerObject getItem(int position) {
-        return data.get(position);
+        return data.get(position-1);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java
Patch:
@@ -42,7 +42,7 @@ public class NavigationDrawerFragment extends Fragment implements AdapterView.On
     private ListView mDrawerListView;
     private View mFragmentContainerView;
 
-    private int mCurrentSelectedPosition = 0;
+    private int mCurrentSelectedPosition = 1;
     private boolean mFromSavedInstanceState;
     private boolean mUserLearnedDrawer;
 

File: app/src/main/java/com/github/mobile/DefaultClient.java
Patch:
@@ -52,7 +52,7 @@ protected HttpURLConnection configureRequest(HttpURLConnection request) {
         super.configureRequest(request);
 
         request.setRequestProperty(HEADER_ACCEPT,
-                "application/vnd.github.v3.full+json");
+                "application/vnd.github.beta.full+json");
 
         return request;
     }

File: app/src/main/java/com/github/mobile/DefaultClient.java
Patch:
@@ -52,7 +52,7 @@ protected HttpURLConnection configureRequest(HttpURLConnection request) {
         super.configureRequest(request);
 
         request.setRequestProperty(HEADER_ACCEPT,
-                "application/vnd.github.v3.full+json");
+                "application/vnd.github.beta.full+json");
 
         return request;
     }

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -46,7 +46,7 @@
 import org.eclipse.egit.github.core.Authorization;
 import org.eclipse.egit.github.core.service.OAuthService;
 
-class AccountAuthenticator extends AbstractAccountAuthenticator {
+public class AccountAuthenticator extends AbstractAccountAuthenticator {
 
     private static final String TAG = "GitHubAccountAuthenticator";
 

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -46,7 +46,7 @@
 import org.eclipse.egit.github.core.Authorization;
 import org.eclipse.egit.github.core.service.OAuthService;
 
-class AccountAuthenticator extends AbstractAccountAuthenticator {
+public class AccountAuthenticator extends AbstractAccountAuthenticator {
 
     private static final String TAG = "GitHubAccountAuthenticator";
 

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -160,7 +160,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         if(user != null) userName = user.getLogin();
         adapter = new HeaderFooterListAdapter<CommentListAdapter>(list,
                 new CommentListAdapter(activity.getLayoutInflater(), null, avatars,
-                        imageGetter, editCommentListener, deleteCommentListener, userName, false));
+                        imageGetter, editCommentListener, deleteCommentListener, userName, false, null));
         list.setAdapter(adapter);
     }
 

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -160,7 +160,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         if(user != null) userName = user.getLogin();
         adapter = new HeaderFooterListAdapter<CommentListAdapter>(list,
                 new CommentListAdapter(activity.getLayoutInflater(), null, avatars,
-                        imageGetter, editCommentListener, deleteCommentListener, userName, false));
+                        imageGetter, editCommentListener, deleteCommentListener, userName, false, null));
         list.setAdapter(adapter);
     }
 

File: app/src/main/java/com/github/mobile/ui/MainActivity.java
Patch:
@@ -104,6 +104,9 @@ public Loader<List<User>> onCreateLoader(int i, Bundle bundle) {
 
     @Override
     public void onLoadFinished(Loader<List<User>> listLoader, final List<User> orgs) {
+        if (orgs.isEmpty())
+            return;
+
         org = orgs.get(0);
         this.orgs = orgs;
 

File: app/src/main/java/com/github/mobile/ui/ref/BranchFileViewActivity.java
Patch:
@@ -129,6 +129,8 @@ protected void onCreate(Bundle savedInstanceState) {
         loadingBar = finder.find(R.id.pb_loading);
         codeView = finder.find(R.id.wv_code);
 
+        codeView.getSettings().setBuiltInZoomControls(true);
+
         file = CommitUtils.getName(path);
         isMarkdownFile = MarkdownUtils.isMarkdown(file);
         editor = new SourceEditor(codeView);

File: app/src/main/java/com/github/mobile/ui/ref/BranchFileViewActivity.java
Patch:
@@ -129,6 +129,8 @@ protected void onCreate(Bundle savedInstanceState) {
         loadingBar = finder.find(R.id.pb_loading);
         codeView = finder.find(R.id.wv_code);
 
+        codeView.getSettings().setBuiltInZoomControls(true);
+
         file = CommitUtils.getName(path);
         isMarkdownFile = MarkdownUtils.isMarkdown(file);
         editor = new SourceEditor(codeView);

File: app/src/main/java/com/github/mobile/ui/ConfirmDialogFragment.java
Patch:
@@ -24,6 +24,7 @@
 import android.content.DialogInterface;
 import android.content.DialogInterface.OnClickListener;
 import android.os.Bundle;
+import android.support.v4.app.FragmentActivity;
 
 /**
  * Helper to display a confirmation dialog
@@ -41,7 +42,7 @@ public class ConfirmDialogFragment extends DialogFragmentHelper implements
      * @param title
      * @param message
      */
-    public static void show(final DialogFragmentActivity activity,
+    public static void show(final FragmentActivity activity,
             final int requestCode, final String title, final String message) {
         show(activity, requestCode, title, message, null);
     }
@@ -55,7 +56,7 @@ public static void show(final DialogFragmentActivity activity,
      * @param message
      * @param bundle
      */
-    public static void show(final DialogFragmentActivity activity,
+    public static void show(final FragmentActivity activity,
             final int requestCode, final String title, final String message,
             final Bundle bundle) {
         Bundle arguments = createArguments(title, message, requestCode);

File: app/src/main/java/com/github/mobile/ui/TabPagerActivity.java
Patch:
@@ -156,6 +156,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(getContentView());
 
+        setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
+
         // On Lollipop, the action bar shadow is provided by default, so have to remove it explicitly
         getSupportActionBar().setElevation(0);
 

File: integration-tests/src/main/java/com/github/mobile/tests/FiltersViewActivityTest.java
Patch:
@@ -23,7 +23,7 @@
 public class FiltersViewActivityTest extends ActivityTest<FiltersViewActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public FiltersViewActivityTest() {
         super(FiltersViewActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/commit/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);
@@ -44,7 +44,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         setActivityIntent(CreateCommentActivity.createIntent(new Gist().setId(
-                "123").setUser(new User().setLogin("abc"))));
+            "123").setUser(new User().setLogin("abc"))));
     }
 
     /**

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateGistActivityTest.java
Patch:
@@ -30,7 +30,7 @@
 public class CreateGistActivityTest extends ActivityTest<CreateGistActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateGistActivityTest() {
         super(CreateGistActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/issue/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);
@@ -44,7 +44,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         setActivityIntent(CreateCommentActivity.createIntent(new RepositoryId(
-                "o", "n"), 1, new User().setLogin("u")));
+            "o", "n"), 1, new User().setLogin("u")));
     }
 
     /**

File: integration-tests/src/main/java/com/github/mobile/tests/issue/EditIssueActivityTest.java
Patch:
@@ -32,7 +32,7 @@
 public class EditIssueActivityTest extends ActivityTest<EditIssueActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public EditIssueActivityTest() {
         super(EditIssueActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/issue/EditIssuesFilterActivityTest.java
Patch:
@@ -26,10 +26,10 @@
  * Tests of {@link EditIssuesFilterActivity}
  */
 public class EditIssuesFilterActivityTest extends
-        ActivityTest<EditIssuesFilterActivity> {
+    ActivityTest<EditIssuesFilterActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public EditIssuesFilterActivityTest() {
         super(EditIssuesFilterActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/repo/SearchActivityTest.java
Patch:
@@ -26,10 +26,10 @@
  * Tests of {@link SearchActivity}
  */
 public class SearchActivityTest extends
-        ActivityTest<SearchActivity> {
+    ActivityTest<SearchActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public SearchActivityTest() {
         super(SearchActivity.class);
@@ -39,6 +39,6 @@ public SearchActivityTest() {
     protected void setUp() throws Exception {
         super.setUp();
 
-        setActivityIntent(new Intent(ACTION_SEARCH).putExtra(QUERY, "test"));
+        setActivityIntent(new Intent(ACTION_SEARCH).putExtra(QUERY, "navigation_drawer_header_background"));
     }
 }

File: integration-tests/src/main/java/com/github/mobile/tests/user/LoginActivityTest.java
Patch:
@@ -30,7 +30,7 @@
 public class LoginActivityTest extends ActivityTest<LoginActivity> {
 
     /**
-     * Create test for {@link LoginActivity}
+     * Create navigation_drawer_header_background for {@link LoginActivity}
      */
     public LoginActivityTest() {
         super(LoginActivity.class);
@@ -41,7 +41,7 @@ public LoginActivityTest() {
      */
     public void testHasAuthenticator() {
         assertTrue(AccountUtils.hasAuthenticator(AccountManager
-                .get(getActivity())));
+            .get(getActivity())));
     }
 
     /**

File: app/src/main/java/com/github/mobile/ui/user/HomeActivity.java
Patch:
@@ -189,6 +189,7 @@ else if (changed) {
             if (item >= adapter.getCount())
                 item = adapter.getCount() - 1;
             pager.setItem(item);
+            updateTabs();
         }
 
         for (OrganizationSelectionListener listener : orgSelectionListeners)

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java
Patch:
@@ -45,7 +45,6 @@ public class NavigationDrawerFragment extends Fragment implements AdapterView.On
 
     private ImageView userImage;
     private TextView userName;
-    private TextView userExtra;
 
     public NavigationDrawerFragment() {
     }
@@ -89,7 +88,6 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         userImage = (ImageView) view.findViewById(R.id.user_picture);
         userName = (TextView) view.findViewById(R.id.user_name);
-        userExtra = (TextView) view.findViewById(R.id.user_extra);
         mDrawerListView = (ListView) view.findViewById(R.id.navigation_drawer_list);
         mDrawerListView.setOnItemClickListener(this);
     }
@@ -106,7 +104,6 @@ public void setUp(int fragmentId, DrawerLayout drawerLayout, NavigationDrawerAda
 
         avatar.bind(userImage, user);
         userName.setText(user.getLogin());
-        userExtra.setText(user.getEmail());
 
         mDrawerListView.setAdapter(adapter);
         mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);

File: app/src/main/java/com/github/mobile/ui/gist/GistsPagerFragment.java
Patch:
@@ -44,7 +44,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     protected GistQueriesPagerAdapter createAdapter() {
-        return new GistQueriesPagerAdapter((android.support.v7.app.ActionBarActivity) getActivity());
+        return new GistQueriesPagerAdapter(this);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/issue/IssueDashboardPagerFragment.java
Patch:
@@ -57,7 +57,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     protected IssueDashboardPagerAdapter createAdapter() {
-        return new IssueDashboardPagerAdapter((android.support.v7.app.ActionBarActivity) getActivity());
+        return new IssueDashboardPagerAdapter(this);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/user/HomePagerFragment.java
Patch:
@@ -41,6 +41,6 @@ private void setOrg(User org) {
 
     @Override
     protected HomePagerAdapter createAdapter() {
-        return new HomePagerAdapter((android.support.v7.app.ActionBarActivity) getActivity(), isDefaultUser, org);
+        return new HomePagerAdapter(this, isDefaultUser, org);
     }
 }

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java
Patch:
@@ -45,7 +45,7 @@ public class NavigationDrawerFragment extends Fragment implements AdapterView.On
 
     private ImageView userImage;
     private TextView userName;
-    private TextView userEmail;
+    private TextView userExtra;
 
     public NavigationDrawerFragment() {
     }
@@ -89,7 +89,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         super.onViewCreated(view, savedInstanceState);
         userImage = (ImageView) view.findViewById(R.id.user_picture);
         userName = (TextView) view.findViewById(R.id.user_name);
-        userEmail = (TextView) view.findViewById(R.id.user_email);
+        userExtra = (TextView) view.findViewById(R.id.user_extra);
         mDrawerListView = (ListView) view.findViewById(R.id.navigation_drawer_list);
         mDrawerListView.setOnItemClickListener(this);
     }
@@ -106,7 +106,7 @@ public void setUp(int fragmentId, DrawerLayout drawerLayout, NavigationDrawerAda
 
         avatar.bind(userImage, user);
         userName.setText(user.getLogin());
-        userEmail.setText(user.getEmail());
+        userExtra.setText(user.getEmail());
 
         mDrawerListView.setAdapter(adapter);
         mDrawerListView.setItemChecked(mCurrentSelectedPosition, true);

File: app/src/main/java/com/github/mobile/ui/NavigationDrawerFragment.java
Patch:
@@ -162,11 +162,11 @@ public void run() {
     }
 
     private void selectItem(int position) {
-        mCurrentSelectedPosition = position;
-        if (mCallbacks != null && mDrawerListView != null)
+        if (mCallbacks != null && mDrawerListView != null && position != mCurrentSelectedPosition)
             mCallbacks.onNavigationDrawerItemSelected(position);
         if (mDrawerListView != null) mDrawerListView.setItemChecked(position, true);
         if (mDrawerLayout != null) mDrawerLayout.closeDrawer(mFragmentContainerView);
+        mCurrentSelectedPosition = position;
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/TabPagerActivity.java
Patch:
@@ -152,6 +152,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(getContentView());
 
+        setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
+
         // On Lollipop, the action bar shadow is provided by default, so have to remove it explicitly
         getSupportActionBar().setElevation(0);
 

File: app/src/main/java/com/github/mobile/ui/issue/FiltersViewActivity.java
Patch:
@@ -65,6 +65,8 @@ protected void onCreate(Bundle savedInstanceState) {
 
         setContentView(R.layout.issues_filter_list);
 
+        setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
+
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(R.string.bookmarks);
         actionBar.setIcon(R.drawable.action_bookmark);

File: integration-tests/src/main/java/com/github/mobile/tests/FiltersViewActivityTest.java
Patch:
@@ -23,7 +23,7 @@
 public class FiltersViewActivityTest extends ActivityTest<FiltersViewActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public FiltersViewActivityTest() {
         super(FiltersViewActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/commit/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);
@@ -44,7 +44,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         setActivityIntent(CreateCommentActivity.createIntent(new Gist().setId(
-                "123").setUser(new User().setLogin("abc"))));
+            "123").setUser(new User().setLogin("abc"))));
     }
 
     /**

File: integration-tests/src/main/java/com/github/mobile/tests/gist/CreateGistActivityTest.java
Patch:
@@ -30,7 +30,7 @@
 public class CreateGistActivityTest extends ActivityTest<CreateGistActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateGistActivityTest() {
         super(CreateGistActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/issue/CreateCommentActivityTest.java
Patch:
@@ -30,10 +30,10 @@
  * Tests of {@link CreateCommentActivity}
  */
 public class CreateCommentActivityTest extends
-        ActivityTest<CreateCommentActivity> {
+    ActivityTest<CreateCommentActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public CreateCommentActivityTest() {
         super(CreateCommentActivity.class);
@@ -44,7 +44,7 @@ protected void setUp() throws Exception {
         super.setUp();
 
         setActivityIntent(CreateCommentActivity.createIntent(new RepositoryId(
-                "o", "n"), 1, new User().setLogin("u")));
+            "o", "n"), 1, new User().setLogin("u")));
     }
 
     /**

File: integration-tests/src/main/java/com/github/mobile/tests/issue/EditIssueActivityTest.java
Patch:
@@ -32,7 +32,7 @@
 public class EditIssueActivityTest extends ActivityTest<EditIssueActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public EditIssueActivityTest() {
         super(EditIssueActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/issue/EditIssuesFilterActivityTest.java
Patch:
@@ -26,10 +26,10 @@
  * Tests of {@link EditIssuesFilterActivity}
  */
 public class EditIssuesFilterActivityTest extends
-        ActivityTest<EditIssuesFilterActivity> {
+    ActivityTest<EditIssuesFilterActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public EditIssuesFilterActivityTest() {
         super(EditIssuesFilterActivity.class);

File: integration-tests/src/main/java/com/github/mobile/tests/repo/SearchActivityTest.java
Patch:
@@ -26,10 +26,10 @@
  * Tests of {@link SearchActivity}
  */
 public class SearchActivityTest extends
-        ActivityTest<SearchActivity> {
+    ActivityTest<SearchActivity> {
 
     /**
-     * Create test
+     * Create navigation_drawer_header_background
      */
     public SearchActivityTest() {
         super(SearchActivity.class);
@@ -39,6 +39,6 @@ public SearchActivityTest() {
     protected void setUp() throws Exception {
         super.setUp();
 
-        setActivityIntent(new Intent(ACTION_SEARCH).putExtra(QUERY, "test"));
+        setActivityIntent(new Intent(ACTION_SEARCH).putExtra(QUERY, "navigation_drawer_header_background"));
     }
 }

File: integration-tests/src/main/java/com/github/mobile/tests/user/LoginActivityTest.java
Patch:
@@ -30,7 +30,7 @@
 public class LoginActivityTest extends ActivityTest<LoginActivity> {
 
     /**
-     * Create test for {@link LoginActivity}
+     * Create navigation_drawer_header_background for {@link LoginActivity}
      */
     public LoginActivityTest() {
         super(LoginActivity.class);
@@ -41,7 +41,7 @@ public LoginActivityTest() {
      */
     public void testHasAuthenticator() {
         assertTrue(AccountUtils.hasAuthenticator(AccountManager
-                .get(getActivity())));
+            .get(getActivity())));
     }
 
     /**

File: app/src/main/java/com/github/mobile/ui/user/HomeActivity.java
Patch:
@@ -39,11 +39,11 @@
 import android.view.View;
 import android.view.Window;
 
-import com.github.mobile.ui.MainActivity;
 import com.github.mobile.R;
 import com.github.mobile.accounts.AccountUtils;
 import com.github.mobile.core.user.UserComparator;
 import com.github.mobile.persistence.AccountDataManager;
+import com.github.mobile.ui.MainActivity;
 import com.github.mobile.ui.TabPagerActivity;
 import com.github.mobile.ui.gist.GistsActivity;
 import com.github.mobile.ui.issue.FiltersViewActivity;
@@ -84,7 +84,7 @@ public class HomeActivity extends TabPagerActivity<HomePagerAdapter> implements
 
     private HomeDropdownListAdapter homeAdapter;
 
-    private Set<OrganizationSelectionListener> orgSelectionListeners = new LinkedHashSet<OrganizationSelectionListener>();
+    private Set<OrganizationSelectionListener> orgSelectionListeners = new LinkedHashSet<>();
 
     private User org;
 
@@ -284,7 +284,7 @@ public OrganizationSelectionProvider removeListener(
 
     @Override
     protected HomePagerAdapter createAdapter() {
-        return new HomePagerAdapter(this, isDefaultUser);
+        return new HomePagerAdapter(this, isDefaultUser, org);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/TabPagerActivity.java
Patch:
@@ -151,8 +151,6 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(getContentView());
-        setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
-
         pager = (ViewPager) findViewById(R.id.vp_pages);
         pager.setOnPageChangeListener(this);
         slidingTabsLayout = (SlidingTabLayout) findViewById(R.id.sliding_tabs_layout);

File: app/src/main/java/com/github/mobile/ui/TabPagerActivity.java
Patch:
@@ -151,6 +151,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(getContentView());
+        setSupportActionBar((android.support.v7.widget.Toolbar) findViewById(R.id.toolbar));
+
         pager = (ViewPager) findViewById(R.id.vp_pages);
         pager.setOnPageChangeListener(this);
         slidingTabsLayout = (SlidingTabLayout) findViewById(R.id.sliding_tabs_layout);

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -65,8 +65,8 @@
 import com.github.mobile.R;
 import com.github.mobile.persistence.AccountDataManager;
 import com.github.mobile.ui.LightProgressDialog;
-import com.github.mobile.ui.roboactivities.ActionBarAccountAuthenticatorActivity;
 import com.github.mobile.ui.TextWatcherAdapter;
+import com.github.mobile.ui.roboactivities.RoboActionBarAccountAuthenticatorActivity;
 import com.github.mobile.util.ToastUtils;
 import com.google.inject.Inject;
 
@@ -84,7 +84,7 @@
 /**
  * Activity to login
  */
-public class LoginActivity extends ActionBarAccountAuthenticatorActivity {
+public class LoginActivity extends RoboActionBarAccountAuthenticatorActivity {
 
     /**
      * Auth token type parameter

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -478,6 +478,6 @@ private void handleLoginException(final Exception e) {
         if (AccountUtils.isUnauthorized(e))
             onAuthenticationResult(false);
         else
-            ToastUtils.show(LoginActivity.this, e, string.connection_failed);
+            ToastUtils.show(LoginActivity.this, e, string.code_authentication_failed);
     }
 }
\ No newline at end of file

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -478,6 +478,6 @@ private void handleLoginException(final Exception e) {
         if (AccountUtils.isUnauthorized(e))
             onAuthenticationResult(false);
         else
-            ToastUtils.show(LoginActivity.this, e, string.connection_failed);
+            ToastUtils.show(LoginActivity.this, e, string.code_authentication_failed);
     }
 }
\ No newline at end of file

File: app/src/main/java/com/github/mobile/core/commit/CommitUriMatcher.java
Patch:
@@ -16,7 +16,6 @@
 package com.github.mobile.core.commit;
 
 import android.net.Uri;
-import android.text.TextUtils;
 
 import com.github.mobile.core.repo.RepositoryUtils;
 
@@ -40,7 +39,7 @@ public static CommitMatch getCommit(Uri uri) {
         List<String> segments = uri.getPathSegments();
         if (segments == null)
             return null;
-        if (segments.size() != 4)
+        if (segments.size() < 4)
             return null;
         if (!"commit".equals(segments.get(2)))
             return null;
@@ -50,7 +49,7 @@ public static CommitMatch getCommit(Uri uri) {
             return null;
 
         String repoName = segments.get(1);
-        if (TextUtils.isEmpty(repoName))
+        if (!RepositoryUtils.isValidRepo(repoName))
             return null;
 
         String commit = segments.get(3);

File: app/src/main/java/com/github/mobile/core/repo/RepositoryUriMatcher.java
Patch:
@@ -16,7 +16,6 @@
 package com.github.mobile.core.repo;
 
 import android.net.Uri;
-import android.text.TextUtils;
 
 import java.util.List;
 
@@ -38,15 +37,15 @@ public static Repository getRepository(Uri uri) {
         List<String> segments = uri.getPathSegments();
         if (segments == null)
             return null;
-        if (segments.size() != 2)
+        if (segments.size() < 2)
             return null;
 
         String repoOwner = segments.get(0);
         if (!RepositoryUtils.isValidOwner(repoOwner))
             return null;
 
         String repoName = segments.get(1);
-        if (TextUtils.isEmpty(repoName))
+        if (!RepositoryUtils.isValidRepo(repoName))
             return null;
 
         Repository repository = new Repository();

File: app/src/main/java/com/github/mobile/core/user/UserUriMatcher.java
Patch:
@@ -38,7 +38,7 @@ public static User getUser(Uri uri) {
         List<String> segments = uri.getPathSegments();
         if (segments == null)
             return null;
-        if (segments.size() != 1)
+        if (segments.size() < 1)
             return null;
 
         String login = segments.get(0);

File: app/src/main/java/com/github/mobile/core/repo/ForkRepositoryTask.java
Patch:
@@ -49,9 +49,7 @@ public void start() {
 
     @Override
     protected Repository run(Account account) throws Exception {
-        service.forkRepository(repo);
-
-        return null;
+        return service.forkRepository(repo);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/gist/GistsViewActivity.java
Patch:
@@ -160,6 +160,9 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
             return;
         }
 
+        adapter.onDialogResult(pager.getCurrentItem(), requestCode, resultCode,
+                arguments);
+
         super.onDialogResult(requestCode, resultCode, arguments);
     }
 

File: app/src/main/java/com/github/mobile/util/SourceEditor.java
Patch:
@@ -169,7 +169,7 @@ public SourceEditor setSource(final String name, final String content,
     private void loadSource() {
         if (name != null && content != null)
             if (markdown)
-                view.loadData(content, "text/html; charset=utf-8", null);
+                view.loadDataWithBaseURL(null, content, "text/html", CHARSET_UTF8, null);
             else
                 view.loadUrl(URL_PAGE);
     }

File: app/src/main/java/com/github/mobile/util/SourceEditor.java
Patch:
@@ -169,7 +169,7 @@ public SourceEditor setSource(final String name, final String content,
     private void loadSource() {
         if (name != null && content != null)
             if (markdown)
-                view.loadData(content, "text/html; charset=utf-8", null);
+                view.loadDataWithBaseURL(null, content, "text/html", CHARSET_UTF8, null);
             else
                 view.loadUrl(URL_PAGE);
     }

File: app/src/main/java/com/github/mobile/util/SourceEditor.java
Patch:
@@ -169,7 +169,7 @@ public SourceEditor setSource(final String name, final String content,
     private void loadSource() {
         if (name != null && content != null)
             if (markdown)
-                view.loadData(content, "text/html", null);
+                view.loadData(content, "text/html; charset=utf-8", null);
             else
                 view.loadUrl(URL_PAGE);
     }

File: app/src/main/java/com/github/mobile/util/SourceEditor.java
Patch:
@@ -169,7 +169,7 @@ public SourceEditor setSource(final String name, final String content,
     private void loadSource() {
         if (name != null && content != null)
             if (markdown)
-                view.loadData(content, "text/html", null);
+                view.loadData(content, "text/html; charset=utf-8", null);
             else
                 view.loadUrl(URL_PAGE);
     }

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -52,6 +52,7 @@
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.kevinsawicki.wishlist.ViewUtils;
+import com.github.mobile.R;
 import com.github.mobile.R.drawable;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
@@ -356,13 +357,13 @@ private void updateHeader(final Issue issue) {
         if (IssueUtils.isPullRequest(issue) && issue.getPullRequest().getCommits() > 0) {
             ViewUtils.setGone(commitsView, false);
 
-            TextView icon = finder.textView(id.tv_commit_icon);
+            TextView icon = (TextView) headerView.findViewById(id.tv_commit_icon);
             TypefaceUtils.setOcticons(icon);
             icon.setText(ICON_COMMIT);
 
             String commits = getString(string.pull_request_commits,
                 issue.getPullRequest().getCommits());
-            finder.setText(id.tv_pull_request_commits, commits);
+            ((TextView) headerView.findViewById(id.tv_pull_request_commits)).setText(commits);
         } else
             ViewUtils.setGone(commitsView, true);
 

File: app/src/main/java/com/github/mobile/core/commit/CommitUtils.java
Patch:
@@ -152,13 +152,13 @@ public static Date getAuthorDate(final RepositoryCommit commit) {
      * @param commit
      * @return author name or null if missing
      */
-    public static Date getCommiterDate(final RepositoryCommit commit) {
+    public static Date getCommitterDate(final RepositoryCommit commit) {
         Commit rawCommit = commit.getCommit();
         if (rawCommit == null)
             return null;
 
-        CommitUser commitCommiter = rawCommit.getCommitter();
-        return commitCommiter != null ? commitCommiter.getDate() : null;
+        CommitUser commitCommitter = rawCommit.getCommitter();
+        return commitCommitter != null ? commitCommitter.getDate() : null;
     }
 
     /**

File: app/src/main/java/com/github/mobile/ui/commit/CommitDiffListFragment.java
Patch:
@@ -294,7 +294,7 @@ private void addCommitDetails(RepositoryCommit commit) {
             StyledText styledCommitter = new StyledText();
             styledCommitter.append(getString(string.committed));
 
-            Date commitCommitterDate = CommitUtils.getCommiterDate(commit);
+            Date commitCommitterDate = CommitUtils.getCommitterDate(commit);
             if (commitCommitterDate != null)
                 styledCommitter.append(' ').append(commitCommitterDate);
 

File: app/src/main/java/com/github/mobile/core/issue/IssueStore.java
Patch:
@@ -159,6 +159,9 @@ public RepositoryIssue refreshIssue(IRepositoryIdProvider repository,
         Issue issue;
         try {
             issue = issueService.getIssue(repository, number);
+            if (IssueUtils.isPullRequest(issue))
+                issue = IssueUtils.toIssue(pullService.getPullRequest(
+                    repository, number));
         } catch (IOException e) {
             if (e instanceof RequestException
                     && 410 == ((RequestException) e).getStatus())

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -231,7 +231,10 @@ public void onCheckedChanged(CompoundButton buttonView,
                     type |= TYPE_TEXT_VARIATION_VISIBLE_PASSWORD;
                 else
                     type |= TYPE_TEXT_VARIATION_PASSWORD;
+                int selection = passwordText.getSelectionStart();
                 passwordText.setInputType(type);
+                if (selection > 0)
+                    passwordText.setSelection(selection);
             }
         });
 

File: app/src/main/java/com/github/mobile/ui/commit/CommitDiffListFragment.java
Patch:
@@ -124,6 +124,7 @@ public class CommitDiffListFragment extends DialogFragment implements
 
     private HeaderFooterListAdapter<CommitFileListAdapter> adapter;
 
+    @Inject
     private HttpImageGetter commentImageGetter;
 
     @Override
@@ -139,8 +140,6 @@ public void onCreate(Bundle savedInstanceState) {
     public void onActivityCreated(Bundle savedInstanceState) {
         super.onActivityCreated(savedInstanceState);
 
-        commentImageGetter = new HttpImageGetter(getActivity());
-
         commit = store.getCommit(repository, base);
 
         ((TextView) loadingView.findViewById(id.tv_loading))
@@ -371,7 +370,7 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
         adapter = new HeaderFooterListAdapter<CommitFileListAdapter>(list,
                 new CommitFileListAdapter(inflater, diffStyler, avatars,
-                        new HttpImageGetter(getActivity())));
+                        commentImageGetter));
         adapter.addFooter(inflater.inflate(layout.footer_separator, null));
         list.setAdapter(adapter);
 

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -152,8 +152,10 @@ public class IssueFragment extends DialogFragment {
 
     private MenuItem stateItem;
 
+    @Inject
     private HttpImageGetter bodyImageGetter;
 
+    @Inject
     private HttpImageGetter commentImageGetter;
 
     @Override
@@ -169,9 +171,6 @@ public void onCreate(Bundle savedInstanceState) {
 
         DialogFragmentActivity dialogActivity = (DialogFragmentActivity) getActivity();
 
-        bodyImageGetter = new HttpImageGetter(dialogActivity);
-        commentImageGetter = new HttpImageGetter(dialogActivity);
-
         milestoneTask = new EditMilestoneTask(dialogActivity, repositoryId,
                 issueNumber) {
 

File: app/src/main/java/com/github/mobile/ui/StyledText.java
Patch:
@@ -29,6 +29,7 @@
 import com.github.mobile.util.TimeUtils;
 
 import java.util.Date;
+import java.util.Locale;
 
 /**
  * Helpers on top of {@link SpannableStringBuilder}
@@ -177,7 +178,8 @@ public StyledText append(final Date date) {
         final int timeLength = time.length();
         if (length() > 0 && timeLength > 0
                 && Character.isUpperCase(time.charAt(0))) {
-            append(time.subSequence(0, 1).toString().toLowerCase());
+            append(time.subSequence(0, 1).toString()
+                    .toLowerCase(Locale.getDefault()));
             append(time.subSequence(1, timeLength));
         } else
             append(time);

File: app/src/main/java/com/github/mobile/ui/code/RepositoryCodeFragment.java
Patch:
@@ -31,12 +31,12 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
-import com.actionbarsherlock.R.color;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.kevinsawicki.wishlist.ViewFinder;
 import com.github.kevinsawicki.wishlist.ViewUtils;
+import com.github.mobile.R.color;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;

File: app/src/main/java/com/github/mobile/ui/comment/CreateCommentActivity.java
Patch:
@@ -25,11 +25,11 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mobile.R.id;
+import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
 import com.github.mobile.ui.TabPagerActivity;
 import com.github.mobile.util.AvatarLoader;
 import com.google.inject.Inject;
-import com.viewpagerindicator.R.menu;
 
 import org.eclipse.egit.github.core.Comment;
 

File: app/src/main/java/com/github/mobile/ui/comment/RenderedCommentFragment.java
Patch:
@@ -25,9 +25,9 @@
 import android.widget.ProgressBar;
 import android.widget.TextView;
 
-import com.actionbarsherlock.R.id;
 import com.github.kevinsawicki.wishlist.ViewFinder;
 import com.github.kevinsawicki.wishlist.ViewUtils;
+import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
 import com.github.mobile.ui.MarkdownLoader;

File: app/src/main/java/com/github/mobile/ui/commit/DiffStyler.java
Patch:
@@ -19,7 +19,7 @@
 import android.text.TextUtils;
 import android.widget.TextView;
 
-import com.actionbarsherlock.R.color;
+import com.github.mobile.R.color;
 import com.github.mobile.R.drawable;
 
 import java.util.ArrayList;

File: app/src/main/java/com/github/mobile/ui/gist/CreateGistActivity.java
Patch:
@@ -24,10 +24,10 @@
 import android.widget.CheckBox;
 import android.widget.EditText;
 
-import com.actionbarsherlock.R.drawable;
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
+import com.github.mobile.R.drawable;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -39,6 +39,7 @@
 
 import com.github.mobile.DefaultClient;
 
+import java.io.IOException;
 import java.util.Arrays;
 import java.util.List;
 
@@ -167,10 +168,10 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
             // Clear password from account
             am.clearPassword(account);
             return bundle;
-        } catch (Exception e) {
+        } catch (IOException e) {
             Log.e(TAG, e.getMessage());
+            throw new NetworkErrorException(e);
         }
-        return bundle;
     }
 
     @Override

File: app/src/main/java/com/github/mobile/core/user/UserComparator.java
Patch:
@@ -39,7 +39,7 @@ public class UserComparator implements Comparator<User> {
      */
     @Inject
     public UserComparator(final GitHubAccount account) {
-        login = account.username;
+        login = account.getUsername();
     }
 
     @Override

File: app/src/main/java/com/github/mobile/persistence/OrganizationRepositories.java
Patch:
@@ -181,7 +181,7 @@ public int compare(final Repository repo1,
     }
 
     private boolean isAuthenticatedUser() {
-        return org.getLogin().equals(accountProvider.get().username);
+        return org.getLogin().equals(accountProvider.get().getUsername());
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/gist/MyGistsFragment.java
Patch:
@@ -54,8 +54,8 @@ protected ResourcePager<Gist> createPager() {
 
             @Override
             public PageIterator<Gist> createIterator(int page, int size) {
-                return service.pageGists(accountProvider.get().username, page,
-                        size);
+                return service.pageGists(accountProvider.get().getUsername(),
+                        page, size);
             }
         };
     }

File: app/src/main/java/com/github/mobile/GitHubModule.java
Patch:
@@ -40,6 +40,9 @@
 import org.eclipse.egit.github.core.service.IssueService;
 import org.eclipse.egit.github.core.service.PullRequestService;
 
+import static com.github.mobile.accounts.AccountConstants.ACCOUNT_NAME;
+import static com.github.mobile.accounts.AccountConstants.APP_URL;
+
 /**
  * Main module provide services and clients
  */

File: app/src/main/java/com/github/mobile/ServicesModule.java
Patch:
@@ -31,6 +31,7 @@
 import org.eclipse.egit.github.core.service.LabelService;
 import org.eclipse.egit.github.core.service.MilestoneService;
 import org.eclipse.egit.github.core.service.OrganizationService;
+import org.eclipse.egit.github.core.service.OAuthService;
 import org.eclipse.egit.github.core.service.PullRequestService;
 import org.eclipse.egit.github.core.service.RepositoryService;
 import org.eclipse.egit.github.core.service.UserService;

File: integration-tests/src/main/java/com/github/mobile/tests/user/UserComparatorTest.java
Patch:
@@ -31,7 +31,7 @@ public class UserComparatorTest extends AndroidTestCase {
      * Test sorting of users that match login
      */
     public void testLoginMatch() {
-        GitHubAccount account = new GitHubAccount("m", "n");
+        GitHubAccount account = new GitHubAccount("m", "n", "a");
         UserComparator comparator = new UserComparator(account);
 
         assertTrue(comparator.compare(new User().setLogin("m"),
@@ -52,7 +52,7 @@ public void testLoginMatch() {
      * Test sorting of users that don't match login
      */
     public void testNoLoginMatch() {
-        GitHubAccount account = new GitHubAccount("m", "n");
+        GitHubAccount account = new GitHubAccount("m", "n", "a");
         UserComparator comparator = new UserComparator(account);
 
         assertTrue(comparator.compare(new User().setLogin("a"),

File: app/src/main/java/com/github/mobile/ui/user/UserViewActivity.java
Patch:
@@ -76,7 +76,7 @@ public static Intent createIntent(User user) {
 
     private boolean isFollowing;
 
-    private boolean followingStatusChecked = false;
+    private boolean followingStatusChecked;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/com/github/mobile/core/ref/RefUtils.java
Patch:
@@ -26,9 +26,9 @@ public class RefUtils {
 
     private static final String PREFIX_REFS = "refs/";
 
-    private static final String PREFIX_TAG = "refs/tags/";
+    private static final String PREFIX_TAG = PREFIX_REFS + "tags/";
 
-    private static final String PREFIX_HEADS = "refs/heads/";
+    private static final String PREFIX_HEADS = PREFIX_REFS + "heads/";
 
     /**
      * Is reference a branch?

File: app/src/main/java/com/github/mobile/ui/user/HomeActivity.java
Patch:
@@ -102,8 +102,10 @@ protected void onCreate(Bundle savedInstanceState) {
         User org = (User) getIntent().getSerializableExtra(EXTRA_USER);
         if (org == null && savedInstanceState != null)
             org = (User) savedInstanceState.getSerializable(EXTRA_USER);
-        if (org != null)
+        if (org != null) {
+            isDefaultUser = AccountUtils.isUser(this, org);
             setOrg(org);
+        }
     }
 
     private void reloadOrgs() {

File: app/src/main/java/com/github/mobile/ui/commit/CommitCompareListFragment.java
Patch:
@@ -92,7 +92,6 @@ public class CommitCompareListFragment extends DialogFragment implements
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
         diffStyler = new DiffStyler(getResources());
         compareCommits();
     }

File: app/src/main/java/com/github/mobile/ui/commit/CommitDiffListFragment.java
Patch:
@@ -133,7 +133,6 @@ public class CommitDiffListFragment extends DialogFragment implements
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
         Bundle args = getArguments();
         base = args.getString(EXTRA_BASE);
         repository = (Repository) args.getSerializable(EXTRA_REPOSITORY);

File: app/src/main/java/com/github/mobile/ui/gist/GistFileFragment.java
Patch:
@@ -80,8 +80,6 @@ public class GistFileFragment extends RoboSherlockFragment implements
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
-
         file = (GistFile) getArguments().get(EXTRA_GIST_FILE);
         gist = store.getGist(gistId);
         if (gist == null)

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -120,8 +120,6 @@ public class GistFragment extends DialogFragment implements OnItemClickListener
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
-
         gistId = getArguments().getString(EXTRA_GIST_ID);
     }
 

File: app/src/main/java/com/github/mobile/ui/gist/GistsActivity.java
Patch:
@@ -57,7 +57,8 @@ private void randomGist() {
     @Override
     public boolean onCreateOptionsMenu(Menu optionsMenu) {
         getSupportMenuInflater().inflate(menu.gists, optionsMenu);
-        return true;
+
+        return super.onCreateOptionsMenu(optionsMenu);
     }
 
     @Override
@@ -78,8 +79,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     protected GistQueriesPagerAdapter createAdapter() {
-        return new GistQueriesPagerAdapter(getResources(),
-                getSupportFragmentManager());
+        return new GistQueriesPagerAdapter(this);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/gist/GistsViewActivity.java
Patch:
@@ -124,8 +124,7 @@ protected void onCreate(Bundle savedInstanceState) {
             gists = new String[] { gist.getId() };
         }
 
-        pager.setAdapter(new GistsPagerAdapter(getSupportFragmentManager(),
-                gists));
+        pager.setAdapter(new GistsPagerAdapter(this, gists));
         pager.setOnPageChangeListener(this);
         pager.setCurrentItem(initialPosition);
         onPageSelected(initialPosition);

File: app/src/main/java/com/github/mobile/ui/issue/IssueDashboardActivity.java
Patch:
@@ -64,8 +64,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     @Override
     protected IssueDashboardPagerAdapter createAdapter() {
-        return new IssueDashboardPagerAdapter(getResources(),
-                getSupportFragmentManager());
+        return new IssueDashboardPagerAdapter(this);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -164,8 +164,6 @@ public class IssueFragment extends DialogFragment {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
-
         Bundle args = getArguments();
         repositoryId = RepositoryId.create(
                 args.getString(EXTRA_REPOSITORY_OWNER),

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -105,8 +105,6 @@ public class IssuesFragment extends PagedItemFragment<Issue> {
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setHasOptionsMenu(true);
-
         if (filter == null)
             filter = new IssueFilter(repository);
     }

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryViewActivity.java
Patch:
@@ -160,8 +160,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
 
     @Override
     protected RepositoryPagerAdapter createAdapter() {
-        return new RepositoryPagerAdapter(getSupportFragmentManager(),
-                getResources(), repository.isHasIssues());
+        return new RepositoryPagerAdapter(this, repository.isHasIssues());
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/user/UserViewActivity.java
Patch:
@@ -118,7 +118,7 @@ public OrganizationSelectionProvider removeListener(
 
     @Override
     protected UserPagerAdapter createAdapter() {
-        return new UserPagerAdapter(getSupportFragmentManager(), getResources());
+        return new UserPagerAdapter(this);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/repo/OrganizationLoader.java
Patch:
@@ -70,7 +70,7 @@ protected List<User> getAccountFailureData() {
     public List<User> load(final Account account) {
         List<User> orgs;
         try {
-            orgs = accountDataManager.getOrgs();
+            orgs = accountDataManager.getOrgs(false);
         } catch (final IOException e) {
             Log.e(TAG, "Exception loading organizations", e);
             ToastUtils.show(activity, e, string.error_orgs_load);

File: app/src/main/java/com/github/mobile/ui/user/HomeDropdownListAdapter.java
Patch:
@@ -140,6 +140,8 @@ public int getAction(final int position) {
      */
     public HomeDropdownListAdapter setOrgs(final List<User> orgs) {
         User[] orgItems = orgs.toArray(new User[orgs.size()]);
+        if (selected >= orgItems.length)
+            selected = 0;
         listAdapter.setItems(orgItems);
         dropdownAdapter.setItems(orgItems);
         notifyDataSetChanged();

File: app/src/main/java/com/github/mobile/ui/repo/DefaultRepositoryListAdapter.java
Patch:
@@ -112,7 +112,7 @@ public DefaultRepositoryListAdapter registerNoSeparator(
     protected View initialize(View view) {
         view = super.initialize(view);
 
-        TypefaceUtils.setOcticons(textView(view, 3),
+        TypefaceUtils.setOcticons(textView(view, 0),
                 (TextView) view.findViewById(id.tv_forks_icon),
                 (TextView) view.findViewById(id.tv_watchers_icon));
         descriptionColor = view.getResources().getColor(color.text_description);

File: app/src/main/java/com/github/mobile/ui/code/RepositoryCodeFragment.java
Patch:
@@ -174,7 +174,7 @@ protected void onException(Exception e) throws RuntimeException {
                 super.onException(e);
 
                 showLoading(false);
-                ToastUtils.show(getActivity(), e, string.error_file_load);
+                ToastUtils.show(getActivity(), e, string.error_code_load);
             }
 
         }.execute();
@@ -225,12 +225,12 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
         pathView.setMovementMethod(LinkMovementMethod.getInstance());
         branchView = finder.find(id.tv_branch);
         branchIconView = finder.find(id.tv_branch_icon);
-        finder.onClick(id.rl_branch, new Runnable() {
+        finder.onClick(new Runnable() {
 
             public void run() {
                 switchBranches();
             }
-        });
+        }, id.rl_branch, id.tv_branch_icon);
         TypefaceUtils.setOcticons(branchIconView,
                 (TextView) pathHeaderView.findViewById(id.tv_folder_icon));
         listView.setAdapter(adapter);

File: app/src/main/java/com/github/mobile/util/TypefaceUtils.java
Patch:
@@ -90,7 +90,7 @@ public class TypefaceUtils {
     /**
      * Follow icon
      */
-    public static final String ICON_FOLLOW = "\uf228";
+    public static final String ICON_FOLLOW = "\uf21C";
 
     /**
      * Watch icon

File: app/src/main/java/com/github/mobile/ui/issue/IssueListAdapter.java
Patch:
@@ -18,6 +18,7 @@
 import static android.graphics.Paint.STRIKE_THRU_TEXT_FLAG;
 import static android.view.View.GONE;
 import static android.view.View.VISIBLE;
+import static org.eclipse.egit.github.core.service.IssueService.STATE_CLOSED;
 import android.graphics.Color;
 import android.text.TextUtils;
 import android.view.LayoutInflater;
@@ -36,7 +37,6 @@
 import java.util.List;
 
 import org.eclipse.egit.github.core.Label;
-import org.eclipse.egit.github.core.service.IssueService;
 
 /**
  * Base list adapter to display issues
@@ -122,7 +122,7 @@ public ItemListAdapter<I, V> setItems(final Object[] items) {
     protected void updateNumber(int number, String state, int flags,
             TextView view) {
         view.setText(Integer.toString(number));
-        if (IssueService.STATE_CLOSED.equals(state))
+        if (STATE_CLOSED.equals(state))
             view.setPaintFlags(flags | STRIKE_THRU_TEXT_FLAG);
         else
             view.setPaintFlags(flags);

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryNewsFragment.java
Patch:
@@ -60,7 +60,7 @@ protected void viewRepository(Repository repository) {
     }
 
     @Override
-    protected void viewIssue(Issue issue) {
+    protected void viewIssue(Issue issue, Repository repository) {
         startActivity(IssuesViewActivity.createIntent(issue, repo));
     }
 }

File: app/src/main/java/com/github/mobile/core/issue/IssueUtils.java
Patch:
@@ -31,7 +31,7 @@ public class IssueUtils {
      * @param issue
      * @return true if pull request, false otherwise
      */
-    public static boolean isPullRequest(Issue issue) {
+    public static boolean isPullRequest(final Issue issue) {
         return issue != null && issue.getPullRequest() != null
                 && !TextUtils.isEmpty(issue.getPullRequest().getHtmlUrl());
     }

File: app/src/main/java/com/github/mobile/ui/WebView.java
Patch:
@@ -16,7 +16,6 @@
 package com.github.mobile.ui;
 
 import static android.os.Build.VERSION.SDK_INT;
-import android.annotation.SuppressLint;
 import android.content.Context;
 import android.util.AttributeSet;
 
@@ -41,7 +40,6 @@ public WebView(final Context context, final AttributeSet attrs,
      * @param attrs
      * @param defStyle
      */
-    @SuppressLint("NewApi")
     public WebView(final Context context, final AttributeSet attrs,
             final int defStyle) {
         super(context, attrs, defStyle);
@@ -74,7 +72,6 @@ private boolean canScrollCodeHorizontally(final int direction) {
             return computeHorizontalScrollOffset() < range - 1;
     }
 
-    @SuppressLint("NewApi")
     @Override
     public boolean canScrollHorizontally(final int direction) {
         if (SDK_INT >= 14)

File: app/src/main/java/com/github/mobile/core/issue/IssueUrlMatcher.java
Patch:
@@ -27,7 +27,7 @@
  */
 public class IssueUrlMatcher extends UrlMatcher {
 
-    private static final String REGEX = "https?://.+/[^/]+/[^/]+/issues/(issue/)?(\\d+)";
+    private static final String REGEX = "https?://.+/[^/]+/[^/]+/(issues|pull)/(issue/)?(\\d+)";
 
     private static final Pattern PATTERN = Pattern.compile(REGEX);
 
@@ -44,7 +44,7 @@ public int getNumber(final String url) {
             return -1;
 
         try {
-            return Integer.parseInt(matcher.group(2));
+            return Integer.parseInt(matcher.group(3));
         } catch (NumberFormatException nfe) {
             return -1;
         }

File: app/src/test/java/com/github/mobile/core/issue/IssueUrlMatcherTest.java
Patch:
@@ -48,6 +48,8 @@ public void urlsWithNumbers() {
 
         assertEquals(5, matcher.getNumber("http://github.com/r/o/issues/5"));
         assertEquals(17, matcher.getNumber("https://github.com/r/o/issues/17"));
-        assertEquals(75, matcher.getNumber("http://github.com/r/o/issues/issue/75"));
+        assertEquals(75,
+                matcher.getNumber("http://github.com/r/o/issues/issue/75"));
+        assertEquals(1234, matcher.getNumber("http://github.com/r/o/pull/1234"));
     }
 }

File: app/src/main/java/com/github/mobile/ui/commit/CommitCompareListFragment.java
Patch:
@@ -224,7 +224,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position,
             startActivity(CommitViewActivity.createIntent(repository,
                     ((RepositoryCommit) item).getSha()));
         else if (item instanceof CommitFile)
-            startActivity(CommitFileViewActivity.createIntent(repository, base,
+            startActivity(CommitFileViewActivity.createIntent(repository, head,
                     (CommitFile) item));
     }
 }

File: app/src/main/java/com/github/mobile/ui/commit/CommitFileListAdapter.java
Patch:
@@ -195,8 +195,6 @@ protected void update(int position, Object item, int type) {
             imageGetter.bind(textView(id.tv_comment_body),
                     comment.getBodyHtml(), comment.getId());
             return;
-        default:
-            return;
         }
     }
 }

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryListFragment.java
Patch:
@@ -58,6 +58,7 @@ protected void configureList(Activity activity, ListView listView) {
         super.configureList(activity, listView);
 
         listView.setDividerHeight(0);
+        updateHeaders(items);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryListFragment.java
Patch:
@@ -111,7 +111,6 @@ public void onListItemClick(ListView list, View v, int position, long id) {
         if (recentRepos != null)
             recentRepos.add(repo);
         startActivity(RepositoryViewActivity.createIntent(repo));
-        refresh();
     }
 
     @Override

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -220,7 +220,7 @@ protected void onResume() {
 
     private boolean loginEnabled() {
         return !TextUtils.isEmpty(loginText.getText())
-                && !TextUtils.isDigitsOnly(passwordText.getText());
+                && !TextUtils.isEmpty(passwordText.getText());
     }
 
     private void updateEnablement() {

File: app/src/main/java/com/github/mobile/util/HtmlUtils.java
Patch:
@@ -171,7 +171,7 @@ public void handleTag(final boolean opening, final String tag,
 
             if (TAG_UL.equalsIgnoreCase(tag)) {
                 if (opening) {
-                    listElements.push(new ListSeparator(false));
+                    listElements.addFirst(new ListSeparator(false));
                     indentLevel++;
                 } else {
                     listElements.removeFirst();
@@ -185,7 +185,7 @@ public void handleTag(final boolean opening, final String tag,
 
             if (TAG_OL.equalsIgnoreCase(tag)) {
                 if (opening) {
-                    listElements.push(new ListSeparator(true));
+                    listElements.addFirst(new ListSeparator(true));
                     indentLevel++;
                 } else {
                     listElements.removeFirst();

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDialogFragment.java
Patch:
@@ -16,6 +16,7 @@
 package com.github.mobile.ui.issue;
 
 import static android.app.Activity.RESULT_OK;
+import static android.content.DialogInterface.BUTTON_NEGATIVE;
 import static android.content.DialogInterface.BUTTON_NEUTRAL;
 import static android.content.DialogInterface.BUTTON_POSITIVE;
 import android.app.Activity;
@@ -167,6 +168,8 @@ public Dialog onCreateDialog(final Bundle savedInstanceState) {
         AlertDialog dialog = LightAlertDialog.create(activity);
         dialog.setCancelable(true);
         dialog.setOnCancelListener(this);
+        dialog.setButton(BUTTON_NEGATIVE, activity.getString(string.cancel),
+                this);
         dialog.setButton(BUTTON_NEUTRAL, activity.getString(string.clear), this);
         dialog.setButton(BUTTON_POSITIVE, activity.getString(string.apply),
                 this);

File: app/src/main/java/com/github/mobile/core/issue/IssueUtils.java
Patch:
@@ -47,6 +47,7 @@ public static Issue toIssue(final PullRequest pullRequest) {
             return null;
 
         Issue issue = new Issue();
+        issue.setAssignee(pullRequest.getAssignee());
         issue.setBody(pullRequest.getBody());
         issue.setBodyHtml(pullRequest.getBodyHtml());
         issue.setBodyText(pullRequest.getBodyText());
@@ -55,6 +56,7 @@ public static Issue toIssue(final PullRequest pullRequest) {
         issue.setCreatedAt(pullRequest.getCreatedAt());
         issue.setHtmlUrl(pullRequest.getHtmlUrl());
         issue.setId(pullRequest.getId());
+        issue.setMilestone(pullRequest.getMilestone());
         issue.setNumber(pullRequest.getNumber());
         issue.setPullRequest(pullRequest);
         issue.setState(pullRequest.getState());

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -126,7 +126,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        View root = inflater.inflate(layout.comment_list_view, null);
+        View root = inflater.inflate(layout.comment_list, null);
 
         headerView = inflater.inflate(layout.gist_header, null);
         created = (TextView) headerView.findViewById(id.tv_gist_creation);

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -246,7 +246,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
             Bundle savedInstanceState) {
-        return inflater.inflate(layout.comment_list_view, null);
+        return inflater.inflate(layout.comment_list, null);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/issue/FilterListAdapter.java
Patch:
@@ -49,7 +49,7 @@ public class FilterListAdapter extends
      */
     public FilterListAdapter(LayoutInflater inflater, IssueFilter[] elements,
             AvatarLoader avatars) {
-        super(layout.issue_filter_item, inflater, elements);
+        super(layout.issues_filter_item, inflater, elements);
 
         this.avatars = avatars;
     }

File: app/src/main/java/com/github/mobile/ui/issue/FiltersViewActivity.java
Patch:
@@ -64,7 +64,7 @@ public static Intent createIntent() {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(layout.issue_filter_list);
+        setContentView(layout.issues_filter_list);
 
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(string.bookmarks);

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -115,7 +115,7 @@ public void onCreate(Bundle savedInstanceState) {
     @Override
     public void onViewCreated(View view, Bundle savedInstanceState) {
         filterHeader = getLayoutInflater(savedInstanceState).inflate(
-                layout.issue_filter_header, null);
+                layout.issues_filter_header, null);
         state = (TextView) filterHeader.findViewById(id.tv_filter_state);
         labels = (TextView) filterHeader.findViewById(id.tv_filter_labels);
         milestone = (TextView) filterHeader
@@ -194,7 +194,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ISSUE_CREATE);
             return true;
         case id.m_filter:
-            startActivityForResult(EditIssuesFilterActivity.createIntent(filter),
+            startActivityForResult(
+                    EditIssuesFilterActivity.createIntent(filter),
                     ISSUE_FILTER_EDIT);
             return true;
         case id.m_bookmark:

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -194,7 +194,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     ISSUE_CREATE);
             return true;
         case id.m_filter:
-            startActivityForResult(FilterIssuesActivity.createIntent(filter),
+            startActivityForResult(EditIssuesFilterActivity.createIntent(filter),
                     ISSUE_FILTER_EDIT);
             return true;
         case id.m_bookmark:

File: integration-tests/src/main/java/com/github/mobile/tests/tests/issue/IssueStoreTest.java
Patch:
@@ -23,6 +23,7 @@
 import org.eclipse.egit.github.core.RepositoryIssue;
 import org.eclipse.egit.github.core.User;
 import org.eclipse.egit.github.core.service.IssueService;
+import org.eclipse.egit.github.core.service.PullRequestService;
 
 /**
  * Unit tests of {@link IssueStore}
@@ -33,7 +34,8 @@ public class IssueStoreTest extends AndroidTestCase {
      * Verify issue is updated when re-added
      */
     public void testReuseIssue() {
-        IssueStore store = new IssueStore(new IssueService());
+        IssueStore store = new IssueStore(new IssueService(),
+                new PullRequestService());
         Repository repo = new Repository();
         repo.setName("name");
         repo.setOwner(new User().setLogin("owner"));

File: app/src/main/java/com/github/mobile/core/issue/IssueUtils.java
Patch:
@@ -56,6 +56,7 @@ public static Issue toIssue(final PullRequest pullRequest) {
         issue.setHtmlUrl(pullRequest.getHtmlUrl());
         issue.setId(pullRequest.getId());
         issue.setNumber(pullRequest.getNumber());
+        issue.setPullRequest(pullRequest);
         issue.setState(pullRequest.getState());
         issue.setTitle(pullRequest.getTitle());
         issue.setUpdatedAt(pullRequest.getUpdatedAt());

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -28,7 +28,6 @@
 import com.github.mobile.R.string;
 import com.github.mobile.core.gist.GistEventMatcher;
 import com.github.mobile.core.issue.IssueEventMatcher;
-import com.github.mobile.core.issue.IssueUtils;
 import com.github.mobile.core.repo.RepositoryEventMatcher;
 import com.github.mobile.core.user.UserEventMatcher;
 import com.github.mobile.core.user.UserEventMatcher.UserPair;
@@ -101,7 +100,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         }
 
         Issue issue = issueMatcher.getIssue(event);
-        if (issue != null && !IssueUtils.isPullRequest(issue)) {
+        if (issue != null) {
             viewIssue(issue);
             return;
         }

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -101,7 +101,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         }
 
         Issue issue = issueMatcher.getIssue(event);
-        if (!IssueUtils.isPullRequest(issue)) {
+        if (issue != null && !IssueUtils.isPullRequest(issue)) {
             viewIssue(issue);
             return;
         }

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -28,6 +28,7 @@
 import com.github.mobile.R.string;
 import com.github.mobile.core.gist.GistEventMatcher;
 import com.github.mobile.core.issue.IssueEventMatcher;
+import com.github.mobile.core.issue.IssueUtils;
 import com.github.mobile.core.repo.RepositoryEventMatcher;
 import com.github.mobile.core.user.UserEventMatcher;
 import com.github.mobile.core.user.UserEventMatcher.UserPair;
@@ -100,9 +101,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         }
 
         Issue issue = issueMatcher.getIssue(event);
-        if (issue != null
-                && (issue.getPullRequest() == null || issue.getPullRequest()
-                        .getHtmlUrl() == null)) {
+        if (!IssueUtils.isPullRequest(issue)) {
             viewIssue(issue);
             return;
         }

File: app/src/main/java/com/github/mobile/ui/user/NewsListAdapter.java
Patch:
@@ -55,6 +55,7 @@
 import android.view.LayoutInflater;
 import android.view.View;
 
+import com.github.mobile.core.issue.IssueUtils;
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.StyledText;
 import com.github.mobile.util.AvatarLoader;
@@ -298,8 +299,7 @@ private static void formatIssueComment(Event event, StyledText main,
 
         Issue issue = payload.getIssue();
         String number;
-        if (issue.getPullRequest() != null
-                && issue.getPullRequest().getHtmlUrl() != null)
+        if (IssueUtils.isPullRequest(issue))
             number = "pull request " + issue.getNumber();
         else
             number = "issue " + issue.getNumber();

File: app/src/main/java/com/github/mobile/core/repo/RepositoryEventMatcher.java
Patch:
@@ -69,7 +69,7 @@ private Repository getRepository(final EventRepository repo,
         full.setName(id.substring(slash + 1));
         String login = id.substring(0, slash);
         // Use actor if it matches login parsed from repository id
-        if (actor != null && login.equals(actor))
+        if (actor != null && login.equals(actor.getLogin()))
             full.setOwner(actor);
         else
             full.setOwner(new User().setLogin(id.substring(0, slash)));

File: app/src/main/java/com/github/mobile/ui/issue/CreateCommentActivity.java
Patch:
@@ -18,7 +18,6 @@
 import static com.github.mobile.Intents.EXTRA_ISSUE_NUMBER;
 import static com.github.mobile.Intents.EXTRA_REPOSITORY_NAME;
 import static com.github.mobile.Intents.EXTRA_REPOSITORY_OWNER;
-import static com.github.mobile.Intents.EXTRA_SUBTITLE;
 import static com.github.mobile.Intents.EXTRA_USER;
 import android.content.Intent;
 import android.os.Bundle;
@@ -73,7 +72,7 @@ protected void onCreate(Bundle savedInstanceState) {
                 intent.getStringExtra(EXTRA_REPOSITORY_NAME));
         actionBar.setTitle(getString(string.issue_title) + issueNumber);
 
-        actionBar.setSubtitle(intent.getStringExtra(EXTRA_SUBTITLE));
+        actionBar.setSubtitle(repositoryId.generateId());
         avatars.bind(actionBar, (User) intent.getSerializableExtra(EXTRA_USER));
     }
 

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -530,9 +530,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case id.m_edit:
             startActivityForResult(EditIssueActivity.createIntent(issue,
-                    repositoryId.getOwner(), repositoryId.getName(),
-                    getString(string.issue_title) + issueNumber,
-                    repositoryId.generateId(), user), ISSUE_EDIT);
+                    repositoryId.getOwner(), repositoryId.getName(), user),
+                    ISSUE_EDIT);
             return true;
         case id.m_comment:
             startActivityForResult(CreateCommentActivity.createIntent(

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -190,8 +190,8 @@ public boolean onOptionsItemSelected(MenuItem item) {
             return false;
         switch (item.getItemId()) {
         case id.create_issue:
-            startActivityForResult(EditIssueActivity.createIntent(repository,
-                    getString(string.new_issue)), ISSUE_CREATE);
+            startActivityForResult(EditIssueActivity.createIntent(repository),
+                    ISSUE_CREATE);
             return true;
         case id.m_filter:
             startActivityForResult(FilterIssuesActivity.createIntent(filter),

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -146,8 +146,8 @@ public void onViewCreated(View view, Bundle savedInstanceState) {
 
         Activity activity = getActivity();
         adapter = new HeaderFooterListAdapter<CommentListAdapter>(list,
-                new CommentListAdapter(activity.getLayoutInflater(),
-                        avatars, new HttpImageGetter(activity)));
+                new CommentListAdapter(activity.getLayoutInflater(), avatars,
+                        new HttpImageGetter(activity)));
         list.setAdapter(adapter);
     }
 
@@ -198,7 +198,7 @@ private void updateHeader(Gist gist) {
         Date updatedAt = gist.getUpdatedAt();
         if (updatedAt != null && !updatedAt.equals(createdAt)) {
             StyledText text = new StyledText();
-            text.append(getString(string.updated_prefix));
+            text.append(getString(string.prefix_updated));
             text.append(updatedAt);
             updated.setText(text);
             updated.setVisibility(VISIBLE);

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -19,7 +19,7 @@
 import static android.accounts.AccountManager.KEY_BOOLEAN_RESULT;
 import static android.accounts.AccountManager.KEY_INTENT;
 import static com.github.mobile.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE;
-import static com.github.mobile.accounts.AccountConstants.GITHUB_ACCOUNT_TYPE;
+import static com.github.mobile.accounts.AccountConstants.ACCOUNT_TYPE;
 import android.accounts.AbstractAccountAuthenticator;
 import android.accounts.Account;
 import android.accounts.AccountAuthenticatorResponse;
@@ -78,7 +78,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
 
     @Override
     public String getAuthTokenLabel(String authTokenType) {
-        if (authTokenType.equals(GITHUB_ACCOUNT_TYPE))
+        if (authTokenType.equals(ACCOUNT_TYPE))
             return authTokenType;
         return null;
     }

File: app/src/main/java/com/github/mobile/accounts/AccountConstants.java
Patch:
@@ -23,15 +23,15 @@ public interface AccountConstants {
     /**
      * Account type
      */
-    String GITHUB_ACCOUNT_TYPE = "com.github";
+    String ACCOUNT_TYPE = "com.github";
 
     /**
      * Account name
      */
-    String GITHUB_ACCOUNT_NAME = "GitHub";
+    String ACCOUNT_NAME = "GitHub";
 
     /**
      * Provider authority
      */
-    String GITHUB_PROVIDER_AUTHORITY = "com.github.sync";
+    String PROVIDER_AUTHORITY = "com.github.sync";
 }

File: app/src/main/java/com/github/mobile/accounts/AccountAuthenticator.java
Patch:
@@ -19,7 +19,7 @@
 import static android.accounts.AccountManager.KEY_BOOLEAN_RESULT;
 import static android.accounts.AccountManager.KEY_INTENT;
 import static com.github.mobile.accounts.LoginActivity.PARAM_AUTHTOKEN_TYPE;
-import static com.github.mobile.accounts.Constants.AUTH_TOKEN_TYPE;
+import static com.github.mobile.accounts.AccountConstants.GITHUB_ACCOUNT_TYPE;
 import android.accounts.AbstractAccountAuthenticator;
 import android.accounts.Account;
 import android.accounts.AccountAuthenticatorResponse;
@@ -78,7 +78,7 @@ public Bundle getAuthToken(AccountAuthenticatorResponse response,
 
     @Override
     public String getAuthTokenLabel(String authTokenType) {
-        if (authTokenType.equals(AUTH_TOKEN_TYPE))
+        if (authTokenType.equals(GITHUB_ACCOUNT_TYPE))
             return authTokenType;
         return null;
     }

File: app/src/main/java/com/github/mobile/accounts/AccountUtils.java
Patch:
@@ -17,7 +17,7 @@
 
 import static android.accounts.AccountManager.KEY_ACCOUNT_NAME;
 import static android.util.Log.DEBUG;
-import static com.github.mobile.accounts.Constants.GITHUB_ACCOUNT_TYPE;
+import static com.github.mobile.accounts.AccountConstants.GITHUB_ACCOUNT_TYPE;
 import android.accounts.Account;
 import android.accounts.AccountManager;
 import android.accounts.AccountManagerFuture;

File: app/src/main/java/com/github/mobile/accounts/LoginActivity.java
Patch:
@@ -22,9 +22,9 @@
 import static android.view.KeyEvent.ACTION_DOWN;
 import static android.view.KeyEvent.KEYCODE_ENTER;
 import static android.view.inputmethod.EditorInfo.IME_ACTION_DONE;
-import static com.github.mobile.accounts.Constants.AUTH_TOKEN_TYPE;
-import static com.github.mobile.accounts.Constants.GITHUB_ACCOUNT_TYPE;
-import static com.github.mobile.accounts.Constants.GITHUB_PROVIDER_AUTHORITY;
+import static com.github.mobile.accounts.AccountConstants.AUTH_TOKEN_TYPE;
+import static com.github.mobile.accounts.AccountConstants.GITHUB_ACCOUNT_TYPE;
+import static com.github.mobile.accounts.AccountConstants.GITHUB_PROVIDER_AUTHORITY;
 import android.accounts.Account;
 import android.accounts.AccountManager;
 import android.app.ProgressDialog;

File: app/src/main/java/com/github/mobile/ui/issue/SearchIssueListAdapter.java
Patch:
@@ -25,7 +25,6 @@
 import com.github.mobile.R.id;
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.StyledText;
-import com.github.mobile.ui.repo.RepositoryListAdapter;
 import com.github.mobile.util.AvatarLoader;
 import com.github.mobile.util.TypefaceUtils;
 import com.viewpagerindicator.R.layout;
@@ -38,7 +37,7 @@
  * Adapter for a list of searched for issues
  */
 public class SearchIssueListAdapter extends
-        RepositoryListAdapter<SearchIssue, RepositoryIssueItemView> {
+        ItemListAdapter<SearchIssue, RepositoryIssueItemView> {
 
     private final AvatarLoader avatars;
 

File: app/src/main/java/com/github/mobile/core/repo/RefreshRepositoryTask.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.ui.repo;
+package com.github.mobile.core.repo;
 
 import android.content.Context;
 import android.util.Log;

File: app/src/main/java/com/github/mobile/core/user/RefreshUserTask.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.ui.user;
+package com.github.mobile.core.user;
 
 import android.content.Context;
 import android.util.Log;

File: app/src/main/java/com/github/mobile/ui/issue/IssuesViewActivity.java
Patch:
@@ -30,9 +30,9 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
 import com.github.mobile.core.issue.IssueStore;
+import com.github.mobile.core.repo.RefreshRepositoryTask;
 import com.github.mobile.ui.DialogFragmentActivity;
 import com.github.mobile.ui.UrlLauncher;
-import com.github.mobile.ui.repo.RefreshRepositoryTask;
 import com.github.mobile.util.AvatarLoader;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryViewActivity.java
Patch:
@@ -31,6 +31,7 @@
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
+import com.github.mobile.core.repo.RefreshRepositoryTask;
 import com.github.mobile.ui.user.HomeActivity;
 import com.github.mobile.util.AvatarLoader;
 import com.github.mobile.util.ToastUtils;

File: app/src/main/java/com/github/mobile/ui/user/UserViewActivity.java
Patch:
@@ -27,6 +27,7 @@
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
+import com.github.mobile.core.user.RefreshUserTask;
 import com.github.mobile.util.AvatarLoader;
 import com.github.mobile.util.ToastUtils;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;

File: app/src/main/java/com/github/mobile/ui/gist/GistsActivity.java
Patch:
@@ -24,6 +24,7 @@
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuItem;
+import com.github.mobile.R.drawable;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
@@ -47,6 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(string.gists_title);
         actionBar.setSubtitle(AccountUtils.getLogin(this));
+        actionBar.setIcon(drawable.action_gist);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         ViewPager pager = (ViewPager) findViewById(id.vp_pages);

File: app/src/main/java/com/github/mobile/ui/issue/IssueDashboardActivity.java
Patch:
@@ -23,6 +23,7 @@
 
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.view.MenuItem;
+import com.github.mobile.R.drawable;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
@@ -53,6 +54,7 @@ protected void onCreate(Bundle savedInstanceState) {
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(string.dashboard_issues_title);
         actionBar.setSubtitle(AccountUtils.getLogin(this));
+        actionBar.setIcon(drawable.action_dashboard);
         actionBar.setDisplayHomeAsUpEnabled(true);
 
         pager.setAdapter(new IssueDashboardPagerAdapter(getResources(),

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -192,8 +192,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
                     getString(string.new_issue)), ISSUE_CREATE);
             return true;
         case id.m_filter:
-            startActivityForResult(
-                    FilterIssuesActivity.createIntent(repository, filter),
+            startActivityForResult(FilterIssuesActivity.createIntent(filter),
                     ISSUE_FILTER_EDIT);
             return true;
         case id.m_bookmark:

File: app/src/main/java/com/github/mobile/ui/repo/RepositorySearchActivity.java
Patch:
@@ -53,7 +53,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             onSearchRequested();
             return true;
         case id.m_clear:
-            RepositorySearchSuggestionsProvider.clearRepoQueryHistory(this);
+            RepositorySearchSuggestionsProvider.clear(this);
             ToastUtils.show(this, string.search_history_cleared);
             return true;
         case android.R.id.home:
@@ -97,7 +97,7 @@ private void handleIntent(Intent intent) {
 
     private void search(final String query) {
         getSupportActionBar().setTitle(query);
-        RepositorySearchSuggestionsProvider.saveRecentRepoQuery(this, query);
+        RepositorySearchSuggestionsProvider.save(this, query);
         repoFragment.setQuery(query);
     }
 }

File: app/src/main/java/com/github/mobile/ui/repo/RepositorySearchSuggestionsProvider.java
Patch:
@@ -33,7 +33,7 @@ public class RepositorySearchSuggestionsProvider extends
      * @param context
      * @param query
      */
-    public static void saveRecentRepoQuery(Context context, String query) {
+    public static void save(Context context, String query) {
         suggestions(context).saveRecentQuery(query, null);
     }
 
@@ -42,7 +42,7 @@ public static void saveRecentRepoQuery(Context context, String query) {
      *
      * @param context
      */
-    public static void clearRepoQueryHistory(Context context) {
+    public static void clear(Context context) {
         suggestions(context).clearHistory();
     }
 

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -226,7 +226,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == ISSUE_CREATE && resultCode == RESULT_OK) {
             Issue created = (Issue) data.getSerializableExtra(EXTRA_ISSUE);
             forceRefresh();
-            startActivityForResult(IssuesViewActivity.createIntent(created), ISSUE_VIEW);
+            startActivityForResult(IssuesViewActivity.createIntent(created, repository), ISSUE_VIEW);
             return;
         }
 

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryNewsFragment.java
Patch:
@@ -69,6 +69,6 @@ protected void viewRepository(Repository repository) {
 
     @Override
     protected void viewIssue(Issue issue) {
-        startActivity(IssuesViewActivity.createIntent(Collections.singletonList(issue), repo, 0));
+        startActivity(IssuesViewActivity.createIntent(issue, repo));
     }
 }

File: app/src/main/java/com/github/mobile/ui/user/UriLauncherActivity.java
Patch:
@@ -32,7 +32,6 @@
 
 import java.net.URI;
 import java.text.MessageFormat;
-import java.util.Collections;
 
 import org.eclipse.egit.github.core.Repository;
 import org.eclipse.egit.github.core.RepositoryIssue;
@@ -50,7 +49,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         RepositoryIssue issue = IssueUriMatcher.getIssue(data);
         if (issue != null) {
-            startActivity(IssuesViewActivity.createIntent(Collections.singleton(issue), issue.getRepository(), 0));
+            startActivity(IssuesViewActivity.createIntent(issue, issue.getRepository()));
             finish();
             return;
         }

File: app/src/main/java/com/github/mobile/ui/user/NewsListAdapter.java
Patch:
@@ -117,7 +117,7 @@ public static boolean isValid(final Event event) {
                 || TYPE_GIST.equals(type) && ((GistPayload) payload).getGist() != null //
                 || TYPE_GOLLUM.equals(type) //
                 || TYPE_ISSUE_COMMENT.equals(type) && ((IssueCommentPayload) payload).getIssue() != null //
-                || TYPE_ISSUES.equals(type) //
+                || TYPE_ISSUES.equals(type) && ((IssuesPayload) payload).getIssue() != null //
                 || TYPE_MEMBER.equals(type) //
                 || TYPE_PUBLIC.equals(type) //
                 || TYPE_PULL_REQUEST.equals(type) //

File: app/src/main/java/com/github/mobile/ui/user/NewsListAdapter.java
Patch:
@@ -107,7 +107,7 @@ public static boolean isValid(final Event event) {
             return false;
 
         return TYPE_COMMIT_COMMENT.equals(type) //
-                || TYPE_CREATE.equals(type) //
+                || TYPE_CREATE.equals(type) && ((CreatePayload) payload).getRefType() != null //
                 || TYPE_DELETE.equals(type) //
                 || TYPE_DOWNLOAD.equals(type) //
                 || TYPE_FOLLOW.equals(type) //

File: app/src/main/java/com/github/mobile/persistence/CacheHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CacheHelper extends SQLiteOpenHelper {
     /**
      * Version constant to increment when the database should be rebuilt
      */
-    private static final int VERSION = 6;
+    private static final int VERSION = 7;
 
     /**
      * Name of database file
@@ -48,7 +48,7 @@ public CacheHelper(final Context context) {
     public void onCreate(final SQLiteDatabase db) {
         db.execSQL("CREATE TABLE orgs (id INTEGER PRIMARY KEY);");
         db.execSQL("CREATE TABLE users (id INTEGER PRIMARY KEY, name TEXT, avatarurl TEXT);");
-        db.execSQL("CREATE TABLE repos (id INTEGER PRIMARY KEY, repoId INTEGER, orgId INTEGER, name TEXT, ownerId INTEGER, private INTEGER, fork INTEGER, description TEXT, forks INTEGER, watchers INTEGER, language TEXT);");
+        db.execSQL("CREATE TABLE repos (id INTEGER PRIMARY KEY, repoId INTEGER, orgId INTEGER, name TEXT, ownerId INTEGER, private INTEGER, fork INTEGER, description TEXT, forks INTEGER, watchers INTEGER, language TEXT, hasIssues INTEGER);");
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryViewActivity.java
Patch:
@@ -71,7 +71,7 @@ protected void onCreate(Bundle savedInstanceState) {
         avatarHelper.bind(actionBar, repository.getOwner());
 
         ViewPager pager = (ViewPager) findViewById(id.vp_pages);
-        pager.setAdapter(new RepositoryPagerAdapter(getSupportFragmentManager()));
+        pager.setAdapter(new RepositoryPagerAdapter(getSupportFragmentManager(), repository.isHasIssues()));
         ((TitlePageIndicator) findViewById(id.tpi_header)).setViewPager(pager);
     }
 

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryViewActivity.java
Patch:
@@ -63,6 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
         setContentView(layout.pager_with_title);
+
         ActionBar actionBar = getSupportActionBar();
         actionBar.setTitle(repository.getName());
         actionBar.setSubtitle(repository.getOwner().getLogin());

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -31,7 +31,7 @@
 import com.github.mobile.core.user.UserEventMatcher;
 import com.github.mobile.core.user.UserEventMatcher.UserPair;
 import com.github.mobile.ui.gist.ViewGistsActivity;
-import com.github.mobile.ui.issue.ViewIssuesActivity;
+import com.github.mobile.ui.issue.IssuesViewActivity;
 import com.github.mobile.ui.repo.RepositoryViewActivity;
 import com.github.mobile.ui.user.NewsListAdapter;
 import com.github.mobile.util.AvatarLoader;
@@ -100,7 +100,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
 
         Issue issue = issueMatcher.getIssue(event);
         if (issue != null && (issue.getPullRequest() == null || issue.getPullRequest().getHtmlUrl() == null)) {
-            startActivity(ViewIssuesActivity.createIntent(issue));
+            startActivity(IssuesViewActivity.createIntent(issue));
             return;
         }
 

File: app/src/main/java/com/github/mobile/ui/UrlLauncher.java
Patch:
@@ -22,7 +22,7 @@
 import com.github.mobile.core.gist.GistUrlMatcher;
 import com.github.mobile.core.issue.IssueUrlMatcher;
 import com.github.mobile.ui.gist.ViewGistsActivity;
-import com.github.mobile.ui.issue.ViewIssuesActivity;
+import com.github.mobile.ui.issue.IssuesViewActivity;
 
 import org.eclipse.egit.github.core.Gist;
 import org.eclipse.egit.github.core.Issue;
@@ -58,7 +58,7 @@ private Intent createIssueIntent(final String uri, final int number) {
         Issue issue = new Issue();
         issue.setNumber(number);
         issue.setHtmlUrl(uri);
-        return ViewIssuesActivity.createIntent(issue);
+        return IssuesViewActivity.createIntent(issue);
     }
 
     private Intent createGistIntent(final String uri, final String id) {

File: app/src/main/java/com/github/mobile/ui/issue/DashboardIssueFragment.java
Patch:
@@ -86,7 +86,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
-        startActivityForResult(ViewIssuesActivity.createIntent(items, position - getListAdapter().getHeadersCount()),
+        startActivityForResult(IssuesViewActivity.createIntent(items, position - getListAdapter().getHeadersCount()),
                 ISSUE_VIEW);
     }
 

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -172,7 +172,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         startActivityForResult(
-                ViewIssuesActivity.createIntent(items, repository, position - getListAdapter().getHeadersCount()),
+                IssuesViewActivity.createIntent(items, repository, position - getListAdapter().getHeadersCount()),
                 ISSUE_VIEW);
     }
 
@@ -226,7 +226,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == ISSUE_CREATE && resultCode == RESULT_OK) {
             Issue created = (Issue) data.getSerializableExtra(EXTRA_ISSUE);
             forceRefresh();
-            startActivityForResult(ViewIssuesActivity.createIntent(created), ISSUE_VIEW);
+            startActivityForResult(IssuesViewActivity.createIntent(created), ISSUE_VIEW);
             return;
         }
 

File: app/src/main/java/com/github/mobile/ui/issue/IssuesViewActivity.java
Patch:
@@ -60,7 +60,7 @@
 /**
  * Activity display a collection of issues in a pager
  */
-public class ViewIssuesActivity extends DialogFragmentActivity implements OnPageChangeListener {
+public class IssuesViewActivity extends DialogFragmentActivity implements OnPageChangeListener {
 
     /**
      * Create an intent to show a single issue

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -52,6 +52,7 @@
 import com.actionbarsherlock.view.Menu;
 import com.actionbarsherlock.view.MenuInflater;
 import com.actionbarsherlock.view.MenuItem;
+import com.github.mobile.R.drawable;
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
@@ -377,9 +378,9 @@ private void updateHeader(final Issue issue) {
 
         if (stateItem != null)
             if (STATE_OPEN.equals(issue.getState()))
-                stateItem.setTitle(string.close);
+                stateItem.setTitle(string.close).setIcon(drawable.menu_issue_close);
             else
-                stateItem.setTitle(string.reopen);
+                stateItem.setTitle(string.reopen).setIcon(drawable.menu_issue_open);
     }
 
     private void refreshIssue() {

File: app/src/main/java/com/github/mobile/ui/gist/GistsPagerAdapter.java
Patch:
@@ -19,12 +19,12 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
+import android.support.v4.app.FragmentStatePagerAdapter;
 
 /**
  * Adapter to page through an array of Gists
  */
-public class GistsPagerAdapter extends FragmentPagerAdapter {
+public class GistsPagerAdapter extends FragmentStatePagerAdapter {
 
     private final String[] ids;
 

File: app/src/main/java/com/github/mobile/ui/issue/IssuesPagerAdapter.java
Patch:
@@ -22,7 +22,7 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
+import android.support.v4.app.FragmentStatePagerAdapter;
 import android.util.SparseArray;
 import android.view.ViewGroup;
 
@@ -36,7 +36,7 @@
 /**
  * Adapter to page through an {@link Issue} array
  */
-public class IssuesPagerAdapter extends FragmentPagerAdapter {
+public class IssuesPagerAdapter extends FragmentStatePagerAdapter {
 
     private final Repository repo;
 

File: app/src/main/java/com/github/mobile/ui/user/HomeActivity.java
Patch:
@@ -149,8 +149,7 @@ private void setOrg(User org) {
         } else if (this.isDefaultUser != isDefaultUser) {
             int item = pager.getCurrentItem();
             ((HomePagerAdapter) pagerAdater).clearAdapter();
-            HomePagerAdapter adapter = new HomePagerAdapter(getSupportFragmentManager(), getResources(),
-                    isDefaultUser(org));
+            HomePagerAdapter adapter = new HomePagerAdapter(getSupportFragmentManager(), getResources(), isDefaultUser);
             pager.setAdapter(adapter);
             indicator.setViewPager(pager);
             if (item >= adapter.getCount())

File: app/src/main/java/com/github/mobile/accounts/AuthenticatedUserLoader.java
Patch:
@@ -35,7 +35,7 @@ public abstract class AuthenticatedUserLoader<D> extends AsyncLoader<D> {
     private ContextScope contextScope;
 
     @Inject
-    private AccountScope gitHubAccountScope;
+    private AccountScope accountScope;
 
     /**
      * Activity using this loader
@@ -56,7 +56,7 @@ public AuthenticatedUserLoader(final Context context) {
 
     @Override
     public final D loadInBackground() {
-        gitHubAccountScope.enterWith(activity);
+        accountScope.enterWith(activity);
         try {
             contextScope.enter(getContext());
             try {
@@ -65,7 +65,7 @@ public final D loadInBackground() {
                 contextScope.exit(getContext());
             }
         } finally {
-            gitHubAccountScope.exit();
+            accountScope.exit();
         }
     }
 

File: app/src/main/java/com/github/mobile/accounts/AuthenticatedUserTask.java
Patch:
@@ -36,7 +36,7 @@ public abstract class AuthenticatedUserTask<ResultT> extends RoboAsyncTask<Resul
     private ContextScope contextScope;
 
     @Inject
-    private AccountScope gitHubAccountScope;
+    private AccountScope accountScope;
 
     @Inject
     private Activity activity;
@@ -62,7 +62,7 @@ public AuthenticatedUserTask(final Context context, final Executor executor) {
 
     @Override
     public final ResultT call() throws Exception {
-        gitHubAccountScope.enterWith(activity);
+        accountScope.enterWith(activity);
         try {
             contextScope.enter(getContext());
             try {
@@ -71,7 +71,7 @@ public final ResultT call() throws Exception {
                 contextScope.exit(getContext());
             }
         } finally {
-            gitHubAccountScope.exit();
+            accountScope.exit();
         }
     }
 

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryPagerAdapter.java
Patch:
@@ -20,12 +20,11 @@
 import android.support.v4.app.FragmentPagerAdapter;
 
 import com.github.mobile.ui.issue.IssuesFragment;
-import com.viewpagerindicator.TitleProvider;
 
 /**
  * Adapter to view a repository's various pages
  */
-public class RepositoryPagerAdapter extends FragmentPagerAdapter implements TitleProvider {
+public class RepositoryPagerAdapter extends FragmentPagerAdapter {
 
     /**
      * @param fm
@@ -34,7 +33,8 @@ public RepositoryPagerAdapter(FragmentManager fm) {
         super(fm);
     }
 
-    public String getTitle(int position) {
+    @Override
+    public CharSequence getPageTitle(int position) {
         switch (position) {
         case 0:
             return "News";

File: app/src/main/java/com/github/mobile/ui/user/HomePagerAdapter.java
Patch:
@@ -24,15 +24,14 @@
 
 import com.github.mobile.R.string;
 import com.github.mobile.ui.repo.RepositoryListFragment;
-import com.viewpagerindicator.TitleProvider;
 
 import java.util.HashSet;
 import java.util.Set;
 
 /**
  * Pager adapter for a user's different views
  */
-public class HomePagerAdapter extends FragmentPagerAdapter implements TitleProvider {
+public class HomePagerAdapter extends FragmentPagerAdapter {
 
     private final boolean defaultUser;
 
@@ -104,7 +103,7 @@ public int getCount() {
     }
 
     @Override
-    public String getTitle(int position) {
+    public CharSequence getPageTitle(int position) {
         switch (position) {
         case 0:
             return resources.getString(string.news);

File: app/src/main/java/com/github/mobile/ui/user/UserPagerAdapter.java
Patch:
@@ -22,12 +22,11 @@
 
 import com.github.mobile.R.string;
 import com.github.mobile.ui.repo.UserRepositoryListFragment;
-import com.viewpagerindicator.TitleProvider;
 
 /**
  * Pager adapter for a user's different views
  */
-public class UserPagerAdapter extends FragmentPagerAdapter implements TitleProvider {
+public class UserPagerAdapter extends FragmentPagerAdapter {
 
     private final Resources resources;
 
@@ -63,7 +62,7 @@ public int getCount() {
     }
 
     @Override
-    public String getTitle(final int position) {
+    public CharSequence getPageTitle(int position) {
         switch (position) {
         case 0:
             return resources.getString(string.news);

File: app/src/main/java/com/github/mobile/ui/issue/FilterIssuesActivity.java
Patch:
@@ -123,7 +123,7 @@ protected void onCreate(Bundle savedInstanceState) {
             filter = (IssueFilter) savedInstanceState.getSerializable(EXTRA_ISSUE_FILTER);
 
         if (filter == null)
-            filter = ((IssueFilter) getIntent().getSerializableExtra(EXTRA_ISSUE_FILTER)).clone();
+            filter = (IssueFilter) getIntent().getSerializableExtra(EXTRA_ISSUE_FILTER);
 
         OnClickListener assigneeListener = new OnClickListener() {
 

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -209,7 +209,7 @@ public void success(IssueFilter response) {
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (resultCode == RESULT_OK && requestCode == ISSUE_FILTER_EDIT && data != null) {
-            IssueFilter newFilter = ((IssueFilter) data.getSerializableExtra(EXTRA_ISSUE_FILTER)).clone();
+            IssueFilter newFilter = (IssueFilter) data.getSerializableExtra(EXTRA_ISSUE_FILTER);
             if (!filter.equals(newFilter)) {
                 filter = newFilter;
                 updateFilterSummary();

File: app/src/main/java/com/github/mobile/ui/repo/DefaultRepositoryListAdapter.java
Patch:
@@ -72,7 +72,7 @@ protected void update(final int position, final RecentRepositoryItemView view, f
 
         StyledText name = new StyledText();
         if (!account.get().getLogin().equals(repository.getOwner().getLogin())) {
-            int prefixColor = view.repoName.getResources().getColor(color.repo_description);
+            int prefixColor = view.repoName.getResources().getColor(color.text_description_selector);
             name.foreground(repository.getOwner().getLogin(), prefixColor).foreground('/', prefixColor);
         }
         name.bold(repository.getName());

File: app/src/main/java/com/github/mobile/ui/repo/UserRepositoryListAdapter.java
Patch:
@@ -59,7 +59,7 @@ public UserRepositoryListAdapter(LayoutInflater inflater, User user) {
     protected void update(final int position, final RepositoryItemView view, final Repository repository) {
         StyledText name = new StyledText();
         if (!login.equals(repository.getOwner().getLogin())) {
-            int prefixColor = view.repoName.getResources().getColor(color.repo_description);
+            int prefixColor = view.repoName.getResources().getColor(color.text_description_selector);
             name.foreground(repository.getOwner().getLogin(), prefixColor).foreground('/', prefixColor);
         }
         name.bold(repository.getName());

File: app/src/main/java/com/github/mobile/persistence/CacheHelper.java
Patch:
@@ -29,7 +29,7 @@ public class CacheHelper extends SQLiteOpenHelper {
     /**
      * Version constant to increment when the database should be rebuilt
      */
-    private static final int VERSION = 5;
+    private static final int VERSION = 6;
 
     /**
      * Name of database file
@@ -48,7 +48,7 @@ public CacheHelper(final Context context) {
     public void onCreate(final SQLiteDatabase db) {
         db.execSQL("CREATE TABLE orgs (id INTEGER PRIMARY KEY);");
         db.execSQL("CREATE TABLE users (id INTEGER PRIMARY KEY, name TEXT, avatarurl TEXT);");
-        db.execSQL("CREATE TABLE repos (id INTEGER PRIMARY KEY, orgId INTEGER, name TEXT, ownerId INTEGER, private INTEGER, fork INTEGER, description TEXT, forks INTEGER, watchers INTEGER, language TEXT);");
+        db.execSQL("CREATE TABLE repos (id INTEGER PRIMARY KEY, repoId INTEGER, orgId INTEGER, name TEXT, ownerId INTEGER, private INTEGER, fork INTEGER, description TEXT, forks INTEGER, watchers INTEGER, language TEXT);");
     }
 
     @Override

File: app/src/main/java/com/github/mobile/persistence/OrganizationRepositories.java
Patch:
@@ -85,7 +85,7 @@ public OrganizationRepositories(@Assisted User orgs, RepositoryService repos, Wa
     public Cursor getCursor(SQLiteDatabase readableDatabase) {
         SQLiteQueryBuilder builder = new SQLiteQueryBuilder();
         builder.setTables("repos JOIN users ON (repos.ownerId = users.id)");
-        return builder.query(readableDatabase, new String[] { "repos.id, repos.name", "users.id", "users.name",
+        return builder.query(readableDatabase, new String[] { "repos.repoId, repos.name", "users.id", "users.name",
                 "users.avatarurl", "repos.private", "repos.fork", "repos.description", "repos.forks", "repos.watchers",
                 "repos.language" }, "repos.orgId=?", new String[] { Integer.toString(org.getId()) }, null, null, null);
     }
@@ -119,7 +119,7 @@ public void store(SQLiteDatabase db, List<Repository> repos) {
             User owner = repo.getOwner();
             ContentValues values = new ContentValues(10);
 
-            values.put("id", repo.getId());
+            values.put("repoId", repo.getId());
             values.put("name", repo.getName());
             values.put("orgId", org.getId());
             values.put("ownerId", owner.getId());

File: app/src/main/java/com/github/mobile/util/AvatarLoader.java
Patch:
@@ -17,6 +17,7 @@
 
 import static android.graphics.Bitmap.CompressFormat.PNG;
 import static android.graphics.Bitmap.Config.ARGB_8888;
+import static android.view.View.VISIBLE;
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
@@ -259,6 +260,7 @@ private AvatarLoader setImage(final Drawable image, final ImageView view) {
     private AvatarLoader setImage(final Drawable image, final ImageView view, Object tag) {
         view.setImageDrawable(image);
         view.setTag(id.iv_avatar, tag);
+        view.setVisibility(VISIBLE);
         return this;
     }
 

File: app/src/main/java/com/github/mobile/ui/issue/LabelDrawableSpan.java
Patch:
@@ -15,7 +15,6 @@
 import static android.graphics.Paint.Style.FILL;
 import static android.graphics.Paint.Style.STROKE;
 import static android.graphics.Typeface.DEFAULT_BOLD;
-import static android.graphics.Typeface.MONOSPACE;
 import static android.util.TypedValue.COMPLEX_UNIT_DIP;
 import static java.lang.String.CASE_INSENSITIVE_ORDER;
 import static java.util.Locale.US;
@@ -114,8 +113,7 @@ public LabelDrawable(final Resources resources, final float textSize, Label labe
             Paint p = getPaint();
             p.setAntiAlias(true);
             p.setColor(resources.getColor(android.R.color.transparent));
-            // Measure with monospace to ensure they are all the same height
-            p.setTypeface(MONOSPACE);
+            p.setTypeface(DEFAULT_BOLD);
             p.setTextSize(textSize);
 
             final Rect bounds = new Rect();

File: app/src/main/java/com/github/mobile/ui/issue/CreateIssueActivity.java
Patch:
@@ -182,7 +182,7 @@ private void updateHeader(Issue issue) {
 
         List<Label> labels = issue.getLabels();
         if (labels != null && !labels.isEmpty()) {
-            labelsArea.setText(LabelDrawableSpan.create(labelsArea, labels));
+            LabelDrawableSpan.setText(labelsArea, labels);
             labelsArea.setVisibility(VISIBLE);
         } else
             labelsArea.setVisibility(GONE);

File: app/src/main/java/com/github/mobile/ui/issue/FilterListAdapter.java
Patch:
@@ -73,7 +73,7 @@ protected void update(final int position, final FilterItemView view, final Issue
 
         Collection<Label> labels = filter.getLabels();
         if (labels != null && !labels.isEmpty()) {
-            view.labelsText.setText(LabelDrawableSpan.create(view.labelsText, labels));
+            LabelDrawableSpan.setText(view.labelsText, labels);
             view.labelsText.setVisibility(VISIBLE);
         } else
             view.labelsText.setVisibility(GONE);

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -331,7 +331,7 @@ private void updateHeader(final Issue issue) {
 
         List<Label> labels = issue.getLabels();
         if (labels != null && !labels.isEmpty()) {
-            labelsArea.setText(LabelDrawableSpan.create(labelsArea, labels));
+            LabelDrawableSpan.setText(labelsArea, labels);
             labelsArea.setVisibility(VISIBLE);
         } else
             labelsArea.setVisibility(GONE);

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -133,7 +133,7 @@ private void updateFilterSummary() {
 
         Collection<Label> filterLabels = filter.getLabels();
         if (filterLabels != null && !filterLabels.isEmpty()) {
-            labels.setText(LabelDrawableSpan.create(labels, filterLabels));
+            LabelDrawableSpan.setText(labels, filterLabels);
             labels.setVisibility(VISIBLE);
         } else
             labels.setVisibility(GONE);

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -123,7 +123,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
-        startActivityForResult(ViewIssuesActivity.createIntent(items, position - l.getHeaderViewsCount()), ISSUE_VIEW);
+        startActivityForResult(ViewIssuesActivity.createIntent(items, repository, position - l.getHeaderViewsCount()),
+                ISSUE_VIEW);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/persistence/AccountDataManager.java
Patch:
@@ -55,7 +55,7 @@ public class AccountDataManager {
     /**
      * Format version to bump if serialization format changes and cache should be ignored
      */
-    private static final int FORMAT_VERSION = 2;
+    private static final int FORMAT_VERSION = 4;
 
     @Inject
     private Context context;

File: app/src/main/java/com/github/mobile/ui/issue/AssigneeDialog.java
Patch:
@@ -65,7 +65,7 @@ public AssigneeDialog(final DialogFragmentActivity activity, final int requestCo
         this.service = service;
     }
 
-    private void load(final String selectedAssignee) {
+    private void load(final User selectedAssignee) {
         new ProgressDialogTask<List<User>>(activity) {
 
             @Override
@@ -122,7 +122,7 @@ public User getCollaborator(String login) {
      *
      * @param selectedAssignee
      */
-    public void show(String selectedAssignee) {
+    public void show(User selectedAssignee) {
         if (collaborators == null) {
             load(selectedAssignee);
             return;
@@ -132,7 +132,7 @@ public void show(String selectedAssignee) {
         int checked = -1;
         if (selectedAssignee != null)
             for (int i = 0; i < users.size(); i++)
-                if (selectedAssignee.equals(users.get(i).getLogin()))
+                if (selectedAssignee.getLogin().equals(users.get(i).getLogin()))
                     checked = i;
         AssigneeDialogFragment.show(activity, requestCode, activity.getString(string.select_assignee), null, users,
                 checked);

File: app/src/main/java/com/github/mobile/ui/issue/EditAssigneeTask.java
Patch:
@@ -70,7 +70,7 @@ public EditAssigneeTask(final DialogFragmentActivity activity, final IRepository
      *            current assignee
      * @return this task
      */
-    public EditAssigneeTask prompt(String assignee) {
+    public EditAssigneeTask prompt(User assignee) {
         assigneeDialog.show(assignee);
         return this;
     }

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDialog.java
Patch:
@@ -25,6 +25,7 @@
 import com.github.mobile.util.ToastUtils;
 
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
@@ -68,7 +69,7 @@ public LabelsDialog(final DialogFragmentActivity activity, final int requestCode
         this.service = service;
     }
 
-    private void load(final List<Label> selectedLabels) {
+    private void load(final Collection<Label> selectedLabels) {
         new ProgressDialogTask<List<Label>>(activity) {
 
             @Override
@@ -125,7 +126,7 @@ public Label getLabel(String name) {
      *
      * @param selectedLabels
      */
-    public void show(List<Label> selectedLabels) {
+    public void show(Collection<Label> selectedLabels) {
         if (labels == null) {
             load(selectedLabels);
             return;

File: app/src/main/java/com/github/mobile/ui/issue/CreateIssueActivity.java
Patch:
@@ -38,7 +38,6 @@
 import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
 import com.github.mobile.ui.DialogFragmentActivity;
-import com.github.mobile.ui.MultiChoiceDialogFragment;
 import com.github.mobile.ui.SingleChoiceDialogFragment;
 import com.github.mobile.ui.TextWatcherAdapter;
 import com.github.mobile.util.AvatarLoader;
@@ -214,7 +213,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
 
         switch (requestCode) {
         case REQUEST_CODE_LABELS:
-            String[] labelNames = arguments.getStringArray(MultiChoiceDialogFragment.ARG_SELECTED);
+            String[] labelNames = arguments.getStringArray(LabelsDialogFragment.ARG_SELECTED);
             if (labelNames != null && labelNames.length > 0) {
                 List<Label> labels = new ArrayList<Label>(labelNames.length);
                 for (String name : labelNames)
@@ -234,7 +233,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
             updateHeader(newIssue);
             break;
         case REQUEST_CODE_ASSIGNEE:
-            String login = arguments.getString(SingleChoiceDialogFragment.ARG_SELECTED);
+            String login = arguments.getString(AssigneeDialogFragment.ARG_SELECTED);
 
             if (login != null) {
                 User assignee = assigneeDialog.getCollaborator(login);

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -414,7 +414,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
             milestoneTask.edit(arguments.getString(SingleChoiceDialogFragment.ARG_SELECTED));
             break;
         case ISSUE_ASSIGNEE_UPDATE:
-            assigneeTask.edit(arguments.getString(SingleChoiceDialogFragment.ARG_SELECTED));
+            assigneeTask.edit(arguments.getString(AssigneeDialogFragment.ARG_SELECTED));
             break;
         case ISSUE_LABELS_UPDATE:
             labelsTask.edit(arguments.getStringArray(LabelsDialogFragment.ARG_SELECTED));

File: app/src/main/java/com/github/mobile/ui/ItemListAdapter.java
Patch:
@@ -104,10 +104,11 @@ public ItemListAdapter<I, V> setItems(final Object[] items) {
     /**
      * Update view to display item
      *
+     * @param position
      * @param view
      * @param item
      */
-    protected abstract void update(V view, I item);
+    protected abstract void update(int position, V view, I item);
 
     /**
      * Create empty item view
@@ -125,7 +126,7 @@ public View getView(final int position, View convertView, final ViewGroup parent
             view = createView(convertView);
             convertView.setTag(view);
         }
-        update(view, getItem(position));
+        update(position, view, getItem(position));
         return convertView;
     }
 }

File: app/src/main/java/com/github/mobile/ui/comment/CommentListAdapter.java
Patch:
@@ -63,7 +63,7 @@ public CommentListAdapter(LayoutInflater inflater, AvatarLoader avatars, HttpIma
     }
 
     @Override
-    protected void update(final CommentItemView view, final Comment comment) {
+    protected void update(final int position, final CommentItemView view, final Comment comment) {
         imageGetter.bind(view.bodyView, comment.getBodyHtml(), comment.getId());
         avatars.bind(view.avatarView, comment.getUser());
 

File: app/src/main/java/com/github/mobile/ui/gist/GistListAdapter.java
Patch:
@@ -59,7 +59,7 @@ public GistListAdapter(AvatarLoader avatarHelper, LayoutInflater inflater) {
     }
 
     @Override
-    protected void update(final GistView view, final Gist gist) {
+    protected void update(final int position, final GistView view, final Gist gist) {
         view.gistId.setText(gist.getId());
 
         String description = gist.getDescription();

File: app/src/main/java/com/github/mobile/ui/issue/DashboardIssueListAdapter.java
Patch:
@@ -98,7 +98,7 @@ public long getItemId(int position) {
     }
 
     @Override
-    protected void update(final DashboardIssueView view, final RepositoryIssue issue) {
+    protected void update(final int position, final DashboardIssueView view, final RepositoryIssue issue) {
         view.number.setText(Integer.toString(issue.getNumber()));
         if (issue.getClosedAt() != null)
             view.number.setPaintFlags(view.numberPaintFlags | STRIKE_THRU_TEXT_FLAG);

File: app/src/main/java/com/github/mobile/ui/issue/FilterListAdapter.java
Patch:
@@ -54,7 +54,7 @@ public FilterListAdapter(LayoutInflater inflater, AvatarLoader avatars) {
     }
 
     @Override
-    protected void update(final FilterItemView view, final IssueFilter filter) {
+    protected void update(final int position, final FilterItemView view, final IssueFilter filter) {
         avatars.bind(view.avatarView, filter.getRepository().getOwner());
         view.repoText.setText(filter.getRepository().generateId());
         view.filterText.setText(filter.toDisplay());

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -60,7 +60,6 @@
 import com.github.mobile.core.issue.RefreshIssueTask;
 import com.github.mobile.ui.DialogFragmentActivity;
 import com.github.mobile.ui.DialogResultListener;
-import com.github.mobile.ui.MultiChoiceDialogFragment;
 import com.github.mobile.ui.SingleChoiceDialogFragment;
 import com.github.mobile.ui.comment.CommentListAdapter;
 import com.github.mobile.ui.comment.CreateCommentActivity;
@@ -418,7 +417,7 @@ public void onDialogResult(int requestCode, int resultCode, Bundle arguments) {
             assigneeTask.edit(arguments.getString(SingleChoiceDialogFragment.ARG_SELECTED));
             break;
         case ISSUE_LABELS_UPDATE:
-            labelsTask.edit(arguments.getStringArray(MultiChoiceDialogFragment.ARG_SELECTED));
+            labelsTask.edit(arguments.getStringArray(LabelsDialogFragment.ARG_SELECTED));
             break;
         case ISSUE_CLOSE:
             stateTask.edit(true);

File: app/src/main/java/com/github/mobile/ui/issue/RepositoryIssueListAdapter.java
Patch:
@@ -92,7 +92,7 @@ public long getItemId(int position) {
     }
 
     @Override
-    protected void update(RepositoryIssueItemView view, Issue issue) {
+    protected void update(final int position, final RepositoryIssueItemView view, final Issue issue) {
         view.number.setText(Integer.toString(issue.getNumber()));
         if (issue.getClosedAt() != null)
             view.number.setPaintFlags(view.numberPaintFlags | STRIKE_THRU_TEXT_FLAG);

File: app/src/main/java/com/github/mobile/ui/repo/DefaultRepositoryListAdapter.java
Patch:
@@ -65,7 +65,7 @@ public DefaultRepositoryListAdapter(LayoutInflater inflater, AtomicReference<Use
     }
 
     @Override
-    protected void update(final RecentRepositoryItemView view, final Repository repository) {
+    protected void update(final int position, final RecentRepositoryItemView view, final Repository repository) {
         final String id = repository.generateId();
         view.recentLabel.setVisibility(recent.get().contains(id) ? VISIBLE : GONE);
         view.repoName.setText(account.get().getLogin().equals(repository.getOwner().getLogin()) ? repository.getName()

File: app/src/main/java/com/github/mobile/ui/repo/SearchRepositoryListAdapter.java
Patch:
@@ -49,7 +49,7 @@ public SearchRepositoryListAdapter(LayoutInflater inflater) {
     }
 
     @Override
-    protected void update(final RepositoryItemView view, final SearchRepository repository) {
+    protected void update(final int position, final RepositoryItemView view, final SearchRepository repository) {
         view.repoName.setText(repository.generateId());
 
         updateDetails(view, repository.getDescription(), repository.getLanguage(), repository.getWatchers(),

File: app/src/main/java/com/github/mobile/ui/repo/UserRepositoryListAdapter.java
Patch:
@@ -54,7 +54,7 @@ public UserRepositoryListAdapter(LayoutInflater inflater, User user) {
     }
 
     @Override
-    protected void update(final RepositoryItemView view, final Repository repository) {
+    protected void update(final int position, final RepositoryItemView view, final Repository repository) {
         view.repoName.setText(login.equals(repository.getOwner().getLogin()) ? repository.getName() : repository
                 .generateId());
 

File: app/src/main/java/com/github/mobile/ui/user/HomeDropdownListAdapter.java
Patch:
@@ -80,7 +80,7 @@ public OrgListAdapter(final int viewId, final LayoutInflater inflater, final Use
         }
 
         @Override
-        protected void update(final OrgItemView view, final User user) {
+        protected void update(final int position, final OrgItemView view, final User user) {
             view.nameText.setText(user.getLogin());
             avatars.bind(view.avatarView, user);
         }

File: app/src/main/java/com/github/mobile/ui/user/NewsListAdapter.java
Patch:
@@ -440,7 +440,7 @@ public long getItemId(final int position) {
     }
 
     @Override
-    protected void update(final NewsItemView view, final Event event) {
+    protected void update(final int position, final NewsItemView view, final Event event) {
         avatars.bind(view.avatarView, event.getActor());
 
         SpannableStringBuilder main = new SpannableStringBuilder();

File: app/src/main/java/com/github/mobile/ui/user/UserListAdapter.java
Patch:
@@ -55,7 +55,7 @@ public UserListAdapter(final LayoutInflater inflater, final AvatarLoader avatarH
     }
 
     @Override
-    protected void update(final UserItemView view, final User user) {
+    protected void update(final int position, final UserItemView view, final User user) {
         avatarHelper.bind(view.avatarView, user);
         view.loginText.setText(user.getLogin());
     }

File: app/src/main/java/com/github/mobile/ui/issue/AssigneeDialog.java
Patch:
@@ -86,7 +86,7 @@ protected void onSuccess(List<User> all) throws Exception {
             protected void onException(Exception e) throws RuntimeException {
                 super.onException(e);
 
-                ToastUtils.show(activity, e, string.error_assignee_update);
+                ToastUtils.show(activity, e, string.error_collaborators_load);
             }
 
             @Override

File: app/src/main/java/com/github/mobile/ui/issue/AssigneeDialog.java
Patch:
@@ -86,7 +86,7 @@ protected void onSuccess(List<User> all) throws Exception {
             protected void onException(Exception e) throws RuntimeException {
                 super.onException(e);
 
-                ToastUtils.show(activity, e.getMessage());
+                ToastUtils.show(activity, e, string.error_assignee_update);
             }
 
             @Override

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -37,7 +37,6 @@
 import android.text.Html;
 import android.text.TextUtils;
 import android.text.method.LinkMovementMethod;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.View.OnClickListener;
@@ -356,7 +355,6 @@ private void updateHeader(final Issue issue) {
     }
 
     private void refreshIssue() {
-        Log.d("TEST", "Refresh called");
         new RefreshIssueTask(getActivity(), repositoryId, issueNumber) {
 
             @Override

File: app/src/main/java/com/github/mobile/ui/issue/DashboardIssueListAdapter.java
Patch:
@@ -80,7 +80,7 @@ private void computeNumberWidth(final Object[] items) {
         int[] numbers = new int[items.length];
         for (int i = 0; i < numbers.length; i++)
             numbers[i] = ((Issue) items[i]).getNumber();
-        int digits = TypefaceUtils.getMaxDigits(numbers);
+        int digits = Math.max(TypefaceUtils.getMaxDigits(numbers), 4);
         numberWidth = TypefaceUtils.getWidth(numberView, digits) + numberView.getPaddingLeft()
                 + numberView.getPaddingRight();
     }

File: app/src/main/java/com/github/mobile/ui/issue/RepositoryIssueListAdapter.java
Patch:
@@ -74,7 +74,7 @@ private void computeNumberWidth(final Object[] items) {
         int[] numbers = new int[items.length];
         for (int i = 0; i < numbers.length; i++)
             numbers[i] = ((Issue) items[i]).getNumber();
-        int digits = TypefaceUtils.getMaxDigits(numbers);
+        int digits = Math.max(TypefaceUtils.getMaxDigits(numbers), 4);
         numberWidth = TypefaceUtils.getWidth(numberView, digits) + numberView.getPaddingLeft()
                 + numberView.getPaddingRight();
     }

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -189,8 +189,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         if (gist != null && comments != null)
             updateList(gist, comments);
-
-        refreshGist();
+        else
+            refreshGist();
     }
 
     private boolean isOwner() {

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -241,8 +241,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
         if (issue != null && comments != null)
             updateList(issue, comments);
-
-        refreshIssue();
+        else
+            refreshIssue();
     }
 
     @Override

File: app/src/main/java/com/github/mobile/ui/gist/ViewGistsActivity.java
Patch:
@@ -169,14 +169,14 @@ public void onPageSelected(int position) {
         if (gist == null) {
             actionBar.setSubtitle(null);
             actionBar.setLogo(null);
-            actionBar.setIcon(drawable.github_app_icon);
+            actionBar.setIcon(drawable.app_icon);
         } else if (gist.getUser() != null) {
             avatarHelper.bind(actionBar, gist.getUser());
             actionBar.setSubtitle(gist.getUser().getLogin());
         } else {
             actionBar.setSubtitle(string.anonymous);
             actionBar.setLogo(null);
-            actionBar.setIcon(drawable.github_app_icon);
+            actionBar.setIcon(drawable.app_icon);
         }
         actionBar.setTitle(getString(string.gist_title) + gistId);
     }

File: app/src/main/java/com/github/mobile/ui/gist/GistFileFragment.java
Patch:
@@ -110,7 +110,7 @@ public String toString() {
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        return inflater.inflate(layout.gist_view_content_item, null);
+        return inflater.inflate(layout.gist_file_view, null);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/accounts/AuthenticatorActivity.java
Patch:
@@ -129,7 +129,7 @@ public void onCreate(Bundle icicle) {
         requestNewAccount = username == null;
         confirmCredentials = intent.getBooleanExtra(PARAM_CONFIRMCREDENTIALS, false);
 
-        setContentView(layout.login_activity);
+        setContentView(layout.login);
 
         TextView signupText = (TextView) findViewById(id.tv_signup);
         signupText.setMovementMethod(LinkMovementMethod.getInstance());

File: app/src/main/java/com/github/mobile/ui/gist/CreateGistActivity.java
Patch:
@@ -56,7 +56,7 @@ public class CreateGistActivity extends RoboSherlockFragmentActivity {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        setContentView(layout.create_gist);
+        setContentView(layout.gist_create);
         setTitle(string.new_gist);
 
         String text = getIntent().getStringExtra(EXTRA_TEXT);

File: app/src/main/java/com/github/mobile/core/gist/FullGist.java
Patch:
@@ -15,8 +15,6 @@
  */
 package com.github.mobile.core.gist;
 
-import static com.google.common.collect.Lists.newArrayList;
-
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -79,6 +77,6 @@ public Gist getGist() {
      * @return list of files
      */
     public List<GistFile> getFiles() {
-        return newArrayList(gist.getFiles().values());
+        return new ArrayList<GistFile>(gist.getFiles().values());
     }
 }

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -24,7 +24,6 @@
 import static com.github.mobile.Intents.EXTRA_COMMENT_BODY;
 import static com.github.mobile.Intents.EXTRA_GIST_ID;
 import static com.github.mobile.RequestCodes.COMMENT_CREATE;
-import static com.google.common.collect.Lists.newArrayList;
 import android.app.Activity;
 import android.app.ProgressDialog;
 import android.content.Intent;
@@ -68,6 +67,7 @@
 import com.github.rtyley.android.sherlock.roboguice.fragment.RoboSherlockFragment;
 import com.google.inject.Inject;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Date;
 import java.util.List;
@@ -135,7 +135,7 @@ public class GistFragment extends RoboSherlockFragment implements OnItemClickLis
 
     private Executor executor = Executors.newFixedThreadPool(1);
 
-    private List<View> fileHeaders = newArrayList();
+    private List<View> fileHeaders = new ArrayList<View>();
 
     @SuppressWarnings("unchecked")
     public void onCreate(Bundle savedInstanceState) {

File: app/src/main/java/com/github/mobile/ui/issue/FilterListFragment.java
Patch:
@@ -1,6 +1,5 @@
 package com.github.mobile.ui.issue;
 
-import static com.google.common.collect.Lists.newArrayList;
 import android.os.Bundle;
 import android.support.v4.content.Loader;
 import android.view.View;
@@ -17,6 +16,7 @@
 import com.github.mobile.util.ListViewUtils;
 import com.google.inject.Inject;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
@@ -45,7 +45,7 @@ public Loader<List<IssueFilter>> onCreateLoader(int id, Bundle args) {
         return new AuthenticatedUserLoader<List<IssueFilter>>(getActivity()) {
 
             public List<IssueFilter> load() {
-                List<IssueFilter> filters = newArrayList(cache.getIssueFilters());
+                List<IssueFilter> filters = new ArrayList<IssueFilter>(cache.getIssueFilters());
                 Collections.sort(filters, new Comparator<IssueFilter>() {
 
                     public int compare(IssueFilter lhs, IssueFilter rhs) {

File: app/src/main/java/com/github/mobile/ui/issue/MilestoneDialog.java
Patch:
@@ -15,7 +15,6 @@
  */
 package com.github.mobile.ui.issue;
 
-import static com.google.common.collect.Lists.newArrayList;
 import static org.eclipse.egit.github.core.service.IssueService.STATE_CLOSED;
 import static org.eclipse.egit.github.core.service.IssueService.STATE_OPEN;
 import android.app.ProgressDialog;
@@ -26,6 +25,7 @@
 import com.github.mobile.R.string;
 import com.github.mobile.accounts.AuthenticatedUserTask;
 
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
@@ -83,7 +83,7 @@ private void load(final Milestone selectedMilestone) {
         new AuthenticatedUserTask<List<Milestone>>(activity) {
 
             public List<Milestone> run() throws Exception {
-                List<Milestone> milestones = newArrayList();
+                List<Milestone> milestones = new ArrayList<Milestone>();
                 milestones.addAll(service.getMilestones(repository, STATE_OPEN));
                 milestones.addAll(service.getMilestones(repository, STATE_CLOSED));
                 Collections.sort(milestones, new Comparator<Milestone>() {

File: app/src/main/java/com/github/mobile/ui/user/NewsEventListAdapter.java
Patch:
@@ -395,9 +395,9 @@ private static CharSequence formatPullRequest(Event event) {
         builder.append(' ');
         builder.append(action);
         builder.append(' ');
-        String issueNumber = "pull request " + payload.getNumber();
-        builder.append(issueNumber);
-        builder.setSpan(new StyleSpan(BOLD), builder.length() - issueNumber.length(), builder.length(),
+        String prNumber = "pull request " + payload.getNumber();
+        builder.append(prNumber);
+        builder.setSpan(new StyleSpan(BOLD), builder.length() - prNumber.length(), builder.length(),
                 SPAN_EXCLUSIVE_EXCLUSIVE);
         builder.append(" on ");
 

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -62,7 +62,7 @@ public abstract class NewsFragment extends PagedItemFragment<Event> {
     public void onListItemClick(ListView l, View v, int position, long id) {
         Event event = (Event) l.getItemAtPosition(position);
         Issue issue = issueMatcher.getIssue(event);
-        if (issue != null)
+        if (issue != null && (issue.getPullRequest() == null || issue.getPullRequest().getHtmlUrl() == null))
             startActivity(ViewIssuesActivity.createIntent(issue));
 
         Gist gist = gistMatcher.getGist(event);

File: app/src/main/java/com/github/mobile/GitHubModule.java
Patch:
@@ -20,7 +20,7 @@
 
 import com.github.mobile.accounts.AccountGitHubClient;
 import com.github.mobile.accounts.GitHubAccount;
-import com.github.mobile.accounts.GitHubAccountScope;
+import com.github.mobile.accounts.AccountScope;
 import com.github.mobile.core.gist.GistStore;
 import com.github.mobile.core.issue.IssueStore;
 import com.github.mobile.persistence.OrganizationRepositories;
@@ -57,7 +57,7 @@ protected void configure() {
         install(new ServicesModule());
         install(new FactoryModuleBuilder().build(SyncCampaign.Factory.class));
         install(new FactoryModuleBuilder().build(OrganizationRepositories.Factory.class));
-        install(GitHubAccountScope.module());
+        install(AccountScope.module());
     }
 
     private GitHubClient configureClient(GitHubClient client) {

File: app/src/main/java/com/github/mobile/async/AuthenticatedUserLoader.java
Patch:
@@ -19,7 +19,7 @@
 import android.content.Context;
 
 import com.github.mobile.AsyncLoader;
-import com.github.mobile.accounts.GitHubAccountScope;
+import com.github.mobile.accounts.AccountScope;
 import com.google.inject.Inject;
 
 import roboguice.RoboGuice;
@@ -36,7 +36,7 @@ public abstract class AuthenticatedUserLoader<D> extends AsyncLoader<D> {
     private ContextScope contextScope;
 
     @Inject
-    private GitHubAccountScope gitHubAccountScope;
+    private AccountScope gitHubAccountScope;
 
     /**
      * Activity using this loader

File: app/src/main/java/com/github/mobile/async/AuthenticatedUserTask.java
Patch:
@@ -18,7 +18,7 @@
 import android.app.Activity;
 import android.content.Context;
 
-import com.github.mobile.accounts.GitHubAccountScope;
+import com.github.mobile.accounts.AccountScope;
 import com.google.inject.Inject;
 
 import java.util.concurrent.Executor;
@@ -37,7 +37,7 @@ public abstract class AuthenticatedUserTask<ResultT> extends RoboAsyncTask<Resul
     private ContextScope contextScope;
 
     @Inject
-    private GitHubAccountScope gitHubAccountScope;
+    private AccountScope gitHubAccountScope;
 
     @Inject
     private Activity activity;

File: app/src/main/java/com/github/mobile/sync/GitHubSyncAdapter.java
Patch:
@@ -23,7 +23,7 @@
 import android.content.SyncResult;
 import android.os.Bundle;
 
-import com.github.mobile.accounts.GitHubAccountScope;
+import com.github.mobile.accounts.AccountScope;
 import com.google.inject.Inject;
 
 import roboguice.inject.ContextScope;
@@ -36,7 +36,7 @@ class GitHubSyncAdapter extends AbstractThreadedSyncAdapter {
     private ContextScope contextScope;
 
     @Inject
-    private GitHubAccountScope gitHubAccountScope;
+    private AccountScope gitHubAccountScope;
 
     @Inject
     private SyncCampaign.Factory syncCampaignFactory;

File: app/src/main/java/com/github/mobile/HomeActivity.java
Patch:
@@ -38,11 +38,11 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
 import com.github.mobile.core.user.UserComparator;
-import com.github.mobile.gist.GistsActivity;
-import com.github.mobile.issue.IssueDashboardActivity;
 import com.github.mobile.persistence.AccountDataManager;
-import com.github.mobile.repo.OrgLoader;
+import com.github.mobile.ui.gist.GistsActivity;
+import com.github.mobile.ui.issue.IssueDashboardActivity;
 import com.github.mobile.ui.issue.ViewFiltersActivity;
+import com.github.mobile.ui.repo.OrgLoader;
 import com.github.mobile.ui.user.UserPagerAdapter;
 import com.github.mobile.util.AccountUtils;
 import com.github.mobile.util.AvatarUtils;

File: app/src/main/java/com/github/mobile/ui/NewsFragment.java
Patch:
@@ -21,7 +21,7 @@
 import com.github.mobile.core.gist.GistEventMatcher;
 import com.github.mobile.core.issue.IssueEventMatcher;
 import com.github.mobile.core.repo.RepositoryEventMatcher;
-import com.github.mobile.gist.ViewGistsActivity;
+import com.github.mobile.ui.gist.ViewGistsActivity;
 import com.github.mobile.ui.issue.ViewIssuesActivity;
 import com.github.mobile.ui.repo.RepositoryViewActivity;
 import com.github.mobile.ui.user.NewsEventListAdapter;

File: app/src/main/java/com/github/mobile/ui/UrlLauncher.java
Patch:
@@ -21,7 +21,7 @@
 
 import com.github.mobile.core.gist.GistUrlMatcher;
 import com.github.mobile.core.issue.IssueUrlMatcher;
-import com.github.mobile.gist.ViewGistsActivity;
+import com.github.mobile.ui.gist.ViewGistsActivity;
 import com.github.mobile.ui.issue.ViewIssuesActivity;
 
 import org.eclipse.egit.github.core.Gist;

File: app/src/main/java/com/github/mobile/ui/gist/DeleteGistTask.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.app.Activity.RESULT_OK;
 import android.app.Activity;

File: app/src/main/java/com/github/mobile/ui/gist/GistFileFragment.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static com.github.mobile.util.GitHubIntents.EXTRA_GIST_FILE;
 import static com.github.mobile.util.GitHubIntents.EXTRA_GIST_ID;

File: app/src/main/java/com/github/mobile/ui/gist/GistFilesPagerAdapter.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static com.github.mobile.util.GitHubIntents.EXTRA_GIST_FILE;
 import android.os.Bundle;

File: app/src/main/java/com/github/mobile/ui/gist/GistFragment.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.app.Activity.RESULT_OK;
 import static android.graphics.Typeface.ITALIC;

File: app/src/main/java/com/github/mobile/ui/gist/GistsActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;

File: app/src/main/java/com/github/mobile/ui/gist/GistsFragment.java
Patch:
@@ -30,7 +30,6 @@
 
 import com.github.mobile.R.string;
 import com.github.mobile.core.gist.GistStore;
-import com.github.mobile.gist.ViewGistsActivity;
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.ItemView;
 import com.github.mobile.ui.PagedItemFragment;

File: app/src/main/java/com/github/mobile/ui/gist/GistsPagerAdapter.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static com.github.mobile.util.GitHubIntents.EXTRA_GIST_ID;
 import android.os.Bundle;

File: app/src/main/java/com/github/mobile/ui/gist/OpenGistTask.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static com.github.mobile.RequestCodes.GIST_VIEW;
 import android.app.Activity;

File: app/src/main/java/com/github/mobile/ui/gist/RandomGistTask.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static com.github.mobile.RequestCodes.GIST_VIEW;
 import android.app.Activity;

File: app/src/main/java/com/github/mobile/ui/gist/ShareGistActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.content.Intent.EXTRA_TEXT;
 import android.app.Activity;

File: app/src/main/java/com/github/mobile/ui/gist/ViewGistFilesActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;

File: app/src/main/java/com/github/mobile/ui/gist/ViewGistsActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.gist;
+package com.github.mobile.ui.gist;
 
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;

File: app/src/main/java/com/github/mobile/ui/issue/EditIssueActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static com.github.mobile.util.GitHubIntents.EXTRA_ISSUE;
 import android.content.Intent;

File: app/src/main/java/com/github/mobile/ui/issue/FilterListFragment.java
Patch:
@@ -9,7 +9,6 @@
 import com.github.mobile.R.string;
 import com.github.mobile.async.AuthenticatedUserLoader;
 import com.github.mobile.core.issue.IssueFilter;
-import com.github.mobile.issue.IssueBrowseActivity;
 import com.github.mobile.persistence.AccountDataManager;
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.ItemListFragment;

File: app/src/main/java/com/github/mobile/ui/issue/IssueBrowseActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;
@@ -26,7 +26,6 @@
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mobile.R.layout;
 import com.github.mobile.core.issue.IssueFilter;
-import com.github.mobile.ui.issue.ViewFiltersActivity;
 import com.github.mobile.util.AvatarUtils;
 import com.github.mobile.util.GitHubIntents.Builder;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;

File: app/src/main/java/com/github/mobile/ui/issue/IssueDashboardActivity.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;
@@ -29,7 +29,6 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
-import com.github.mobile.ui.issue.ViewFiltersActivity;
 import com.github.mobile.util.AccountUtils;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
 import com.viewpagerindicator.TitlePageIndicator;

File: app/src/main/java/com/github/mobile/ui/issue/IssueDashboardPagerAdapter.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static com.github.mobile.ui.issue.DashboardIssueFragment.ARG_FILTER;
 import static org.eclipse.egit.github.core.service.IssueService.DIRECTION_DESCENDING;
@@ -32,7 +32,6 @@
 import android.support.v4.app.FragmentPagerAdapter;
 
 import com.github.mobile.R.string;
-import com.github.mobile.ui.issue.DashboardIssueFragment;
 import com.viewpagerindicator.TitleProvider;
 
 import java.io.Serializable;

File: app/src/main/java/com/github/mobile/ui/issue/IssueFragment.java
Patch:
@@ -64,8 +64,6 @@
 import com.github.mobile.async.AuthenticatedUserTask;
 import com.github.mobile.core.issue.FullIssue;
 import com.github.mobile.core.issue.IssueStore;
-import com.github.mobile.issue.EditIssueActivity;
-import com.github.mobile.issue.LabelsDrawable;
 import com.github.mobile.ui.DialogResultListener;
 import com.github.mobile.ui.comment.CommentListAdapter;
 import com.github.mobile.ui.comment.CreateCommentActivity;

File: app/src/main/java/com/github/mobile/ui/issue/IssuesFragment.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static android.app.Activity.RESULT_OK;
 import static android.view.View.GONE;
@@ -47,8 +47,6 @@
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.ItemView;
 import com.github.mobile.ui.PagedItemFragment;
-import com.github.mobile.ui.issue.RepositoryIssueListAdapter;
-import com.github.mobile.ui.issue.ViewIssuesActivity;
 import com.github.mobile.util.AvatarUtils;
 import com.github.mobile.util.ListViewUtils;
 import com.github.mobile.util.ToastUtils;

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDrawable.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static android.graphics.Color.BLACK;
 import static android.graphics.Color.WHITE;

File: app/src/main/java/com/github/mobile/ui/repo/OrgLoader.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import static android.util.Log.WARN;
 import static java.util.Collections.emptyList;

File: app/src/main/java/com/github/mobile/ui/repo/RecentReposHelper.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import static com.google.common.base.Predicates.in;
 import static com.google.common.collect.Iterables.concat;

File: app/src/main/java/com/github/mobile/ui/repo/RepoListFragment.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import android.app.Activity;
 import android.os.Bundle;
@@ -27,11 +27,10 @@
 import com.github.mobile.R.string;
 import com.github.mobile.async.AuthenticatedUserLoader;
 import com.github.mobile.persistence.AccountDataManager;
-import com.github.mobile.repo.RecentReposHelper.RecentRepos;
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.ItemListFragment;
 import com.github.mobile.ui.ItemView;
-import com.github.mobile.ui.repo.RepositoryViewActivity;
+import com.github.mobile.ui.repo.RecentReposHelper.RecentRepos;
 import com.github.mobile.util.ListViewUtils;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/repo/RepoSearchActivity.java
Patch:
@@ -13,14 +13,14 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import static android.app.SearchManager.QUERY;
 import static android.content.Intent.ACTION_SEARCH;
 import static android.content.Intent.FLAG_ACTIVITY_CLEAR_TOP;
 import static android.content.Intent.FLAG_ACTIVITY_SINGLE_TOP;
-import static com.github.mobile.repo.RepoSearchRecentSuggestionsProvider.clearRepoQueryHistory;
-import static com.github.mobile.repo.RepoSearchRecentSuggestionsProvider.saveRecentRepoQuery;
+import static com.github.mobile.ui.repo.RepoSearchRecentSuggestionsProvider.clearRepoQueryHistory;
+import static com.github.mobile.ui.repo.RepoSearchRecentSuggestionsProvider.saveRecentRepoQuery;
 import android.content.Intent;
 import android.os.Bundle;
 

File: app/src/main/java/com/github/mobile/ui/repo/RepoSearchRecentSuggestionsProvider.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import android.content.Context;
 import android.content.SearchRecentSuggestionsProvider;

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryItemView.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import android.view.View;
 import android.widget.TextView;

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryListAdapter.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import static android.view.View.GONE;
 import static android.view.View.VISIBLE;
@@ -23,8 +23,8 @@
 import android.view.LayoutInflater;
 import android.view.View;
 
-import com.github.mobile.repo.RecentReposHelper.RecentRepos;
 import com.github.mobile.ui.ItemListAdapter;
+import com.github.mobile.ui.repo.RecentReposHelper.RecentRepos;
 import com.viewpagerindicator.R.layout;
 
 import java.util.concurrent.atomic.AtomicReference;

File: app/src/main/java/com/github/mobile/ui/repo/RepositoryPagerAdapter.java
Patch:
@@ -19,7 +19,7 @@
 import android.support.v4.app.FragmentManager;
 import android.support.v4.app.FragmentPagerAdapter;
 
-import com.github.mobile.issue.IssuesFragment;
+import com.github.mobile.ui.issue.IssuesFragment;
 import com.viewpagerindicator.TitleProvider;
 
 /**

File: app/src/main/java/com/github/mobile/ui/repo/SearchRepoListFragment.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import android.os.Bundle;
 import android.support.v4.content.Loader;
@@ -27,7 +27,6 @@
 import com.github.mobile.ui.ItemListAdapter;
 import com.github.mobile.ui.ItemListFragment;
 import com.github.mobile.ui.ItemView;
-import com.github.mobile.ui.repo.RepositoryViewActivity;
 import com.github.mobile.util.ListViewUtils;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/repo/SearchRepositoryListAdapter.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.repo;
+package com.github.mobile.ui.repo;
 
 import static com.github.mobile.util.TypefaceUtils.ICON_FORK;
 import static com.github.mobile.util.TypefaceUtils.ICON_PRIVATE;

File: app/src/main/java/com/github/mobile/ui/user/UserPagerAdapter.java
Patch:
@@ -21,7 +21,7 @@
 import android.support.v4.app.FragmentTransaction;
 import android.view.ViewGroup;
 
-import com.github.mobile.repo.RepoListFragment;
+import com.github.mobile.ui.repo.RepoListFragment;
 import com.viewpagerindicator.TitleProvider;
 
 import java.util.HashSet;

File: app/src/main/java/com/github/mobile/ui/issue/DashboardIssueListAdapter.java
Patch:
@@ -76,7 +76,8 @@ private void computeNumberWidth(final Object[] items) {
         for (int i = 0; i < numbers.length; i++)
             numbers[i] = ((Issue) items[i]).getNumber();
         int digits = TypefaceUtils.getMaxDigits(numbers);
-        numberWidth = TypefaceUtils.getWidth(numberView, digits);
+        numberWidth = TypefaceUtils.getWidth(numberView, digits) + numberView.getPaddingLeft()
+                + numberView.getPaddingRight();
     }
 
     @Override
@@ -100,7 +101,7 @@ protected void update(final DashboardIssueView view, final RepositoryIssue issue
             view.number.setPaintFlags(view.numberPaintFlags);
         view.number.getLayoutParams().width = numberWidth;
 
-        avatarHelper.bind(view.gravatar, issue.getUser());
+        avatarHelper.bind(view.avatar, issue.getUser());
 
         String[] segments = issue.getUrl().split("/");
         int length = segments.length;

File: app/src/main/java/com/github/mobile/ui/issue/DashboardIssueView.java
Patch:
@@ -46,7 +46,7 @@ public class DashboardIssueView extends ItemView {
     /**
      * Issue opener avatar image view
      */
-    public final ImageView gravatar;
+    public final ImageView avatar;
 
     /**
      * Issue opener text view
@@ -83,7 +83,7 @@ public DashboardIssueView(View view) {
         number = (TextView) view.findViewById(id.tv_issue_number);
         numberPaintFlags = number.getPaintFlags();
         title = (TextView) view.findViewById(id.tv_issue_title);
-        gravatar = (ImageView) view.findViewById(id.iv_gravatar);
+        avatar = (ImageView) view.findViewById(id.iv_gravatar);
         user = (TextView) view.findViewById(id.tv_issue_user);
         creation = (TextView) view.findViewById(id.tv_issue_creation);
         comments = (TextView) view.findViewById(id.tv_issue_comments);

File: app/src/main/java/com/github/mobile/ui/issue/RepositoryIssueListAdapter.java
Patch:
@@ -71,7 +71,8 @@ private void computeNumberWidth(final Object[] items) {
         for (int i = 0; i < numbers.length; i++)
             numbers[i] = ((Issue) items[i]).getNumber();
         int digits = TypefaceUtils.getMaxDigits(numbers);
-        numberWidth = TypefaceUtils.getWidth(numberView, digits);
+        numberWidth = TypefaceUtils.getWidth(numberView, digits) + numberView.getPaddingLeft()
+                + numberView.getPaddingRight();
     }
 
     @Override

File: app/src/main/java/com/github/mobile/util/HttpImageGetter.java
Patch:
@@ -26,6 +26,7 @@
 import com.github.kevinsawicki.http.HttpRequest;
 import com.github.kevinsawicki.http.HttpRequest.HttpRequestException;
 import com.github.mobile.R.drawable;
+import com.google.inject.Inject;
 
 import java.io.File;
 import java.io.IOException;
@@ -65,6 +66,7 @@ public Drawable getDrawable(String source) {
      *
      * @param context
      */
+    @Inject
     public HttpImageGetter(Context context) {
         this.context = context;
         dir = context.getCacheDir();

File: app/src/main/java/com/github/mobile/issue/CreateIssueActivity.java
Patch:
@@ -38,6 +38,9 @@
 import com.github.mobile.R.string;
 import com.github.mobile.async.AuthenticatedUserTask;
 import com.github.mobile.core.issue.IssueStore;
+import com.github.mobile.ui.issue.AssigneeDialog;
+import com.github.mobile.ui.issue.LabelsDialog;
+import com.github.mobile.ui.issue.MilestoneDialog;
 import com.github.mobile.ui.issue.ViewIssuesActivity;
 import com.github.mobile.util.AvatarUtils;
 import com.github.mobile.util.ToastUtils;

File: app/src/main/java/com/github/mobile/issue/FilterIssuesActivity.java
Patch:
@@ -37,6 +37,9 @@
 import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
 import com.github.mobile.core.issue.IssueFilter;
+import com.github.mobile.ui.issue.AssigneeDialog;
+import com.github.mobile.ui.issue.LabelsDialog;
+import com.github.mobile.ui.issue.MilestoneDialog;
 import com.github.mobile.util.GitHubIntents.Builder;
 import com.google.common.base.Joiner;
 import com.google.inject.Inject;

File: app/src/main/java/com/github/mobile/ui/issue/AssigneeDialog.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import android.app.ProgressDialog;
 

File: app/src/main/java/com/github/mobile/ui/issue/EditAssigneeTask.java
Patch:
@@ -20,7 +20,6 @@
 
 import com.github.mobile.DialogFragmentActivity;
 import com.github.mobile.core.issue.IssueStore;
-import com.github.mobile.issue.AssigneeDialog;
 import com.github.mobile.ui.ProgressDialogTask;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/issue/EditLabelsTask.java
Patch:
@@ -20,7 +20,6 @@
 
 import com.github.mobile.DialogFragmentActivity;
 import com.github.mobile.core.issue.IssueStore;
-import com.github.mobile.issue.LabelsDialog;
 import com.github.mobile.ui.ProgressDialogTask;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/issue/EditMilestoneTask.java
Patch:
@@ -20,7 +20,6 @@
 
 import com.github.mobile.DialogFragmentActivity;
 import com.github.mobile.core.issue.IssueStore;
-import com.github.mobile.issue.MilestoneDialog;
 import com.github.mobile.ui.ProgressDialogTask;
 import com.google.inject.Inject;
 

File: app/src/main/java/com/github/mobile/ui/issue/LabelsDialog.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import android.app.ProgressDialog;
 

File: app/src/main/java/com/github/mobile/ui/issue/MilestoneDialog.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.ui.issue;
 
 import static com.google.common.collect.Lists.newArrayList;
 import static org.eclipse.egit.github.core.service.IssueService.STATE_CLOSED;

File: app/src/main/java/com/github/mobile/core/issue/CreatedAtComparator.java
Patch:
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.core.issue;
 
 import java.util.Comparator;
 

File: app/src/main/java/com/github/mobile/HomeActivity.java
Patch:
@@ -38,16 +38,16 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
 import com.github.mobile.gist.GistsActivity;
-import com.github.mobile.issue.FilterBrowseActivity;
 import com.github.mobile.issue.IssueDashboardActivity;
 import com.github.mobile.persistence.AccountDataManager;
 import com.github.mobile.repo.OrgLoader;
 import com.github.mobile.repo.UserComparator;
+import com.github.mobile.ui.issue.ViewFiltersActivity;
 import com.github.mobile.ui.user.UserPagerAdapter;
 import com.github.mobile.util.AccountUtils;
 import com.github.mobile.util.AvatarUtils;
-import com.github.mobile.util.PreferenceUtils;
 import com.github.mobile.util.GitHubIntents.Builder;
+import com.github.mobile.util.PreferenceUtils;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
 import com.google.inject.Inject;
 import com.google.inject.Provider;
@@ -202,7 +202,7 @@ public boolean onNavigationItemSelected(int itemPosition, long itemId) {
                 startActivity(new Intent(this, IssueDashboardActivity.class));
                 break;
             case ACTION_FILTERS:
-                startActivity(FilterBrowseActivity.createIntent());
+                startActivity(ViewFiltersActivity.createIntent());
                 break;
             }
             int orgSelected = homeAdapter.getSelected();

File: app/src/main/java/com/github/mobile/core/issue/IssueFilter.java
Patch:
@@ -13,9 +13,8 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.github.mobile.issue;
+package com.github.mobile.core.issue;
 
-import static com.google.common.collect.Lists.newArrayList;
 import static org.eclipse.egit.github.core.service.IssueService.DIRECTION_DESCENDING;
 import static org.eclipse.egit.github.core.service.IssueService.FIELD_DIRECTION;
 import static org.eclipse.egit.github.core.service.IssueService.FIELD_SORT;
@@ -28,6 +27,7 @@
 import static org.eclipse.egit.github.core.service.IssueService.STATE_OPEN;
 
 import java.io.Serializable;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.HashMap;
 import java.util.HashSet;
@@ -194,7 +194,7 @@ public Map<String, String> toFilterMap() {
      * @return display
      */
     public CharSequence toDisplay() {
-        List<String> segments = newArrayList();
+        List<String> segments = new ArrayList<String>();
         if (open)
             segments.add("Open issues");
         else

File: app/src/main/java/com/github/mobile/issue/FilterIssuesActivity.java
Patch:
@@ -36,6 +36,7 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
+import com.github.mobile.core.issue.IssueFilter;
 import com.github.mobile.util.GitHubIntents.Builder;
 import com.google.common.base.Joiner;
 import com.google.inject.Inject;

File: app/src/main/java/com/github/mobile/issue/IssueBrowseActivity.java
Patch:
@@ -25,6 +25,8 @@
 import com.actionbarsherlock.app.ActionBar;
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mobile.R.layout;
+import com.github.mobile.core.issue.IssueFilter;
+import com.github.mobile.ui.issue.ViewFiltersActivity;
 import com.github.mobile.util.AvatarUtils;
 import com.github.mobile.util.GitHubIntents.Builder;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
@@ -88,7 +90,7 @@ protected void onCreate(Bundle savedInstanceState) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case android.R.id.home:
-            Intent intent = FilterBrowseActivity.createIntent();
+            Intent intent = ViewFiltersActivity.createIntent();
             intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
             return true;

File: app/src/main/java/com/github/mobile/issue/IssueDashboardActivity.java
Patch:
@@ -29,6 +29,7 @@
 import com.github.mobile.R.layout;
 import com.github.mobile.R.menu;
 import com.github.mobile.R.string;
+import com.github.mobile.ui.issue.ViewFiltersActivity;
 import com.github.mobile.util.AccountUtils;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
 import com.viewpagerindicator.TitlePageIndicator;
@@ -70,7 +71,7 @@ public boolean onCreateOptionsMenu(Menu options) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case id.bookmarks:
-            startActivity(FilterBrowseActivity.createIntent());
+            startActivity(ViewFiltersActivity.createIntent());
             return true;
         case android.R.id.home:
             Intent intent = new Intent(this, HomeActivity.class);

File: app/src/main/java/com/github/mobile/issue/IssuesFragment.java
Patch:
@@ -42,6 +42,7 @@
 import com.github.mobile.R.id;
 import com.github.mobile.R.layout;
 import com.github.mobile.R.string;
+import com.github.mobile.core.issue.IssueFilter;
 import com.github.mobile.persistence.AccountDataManager;
 import com.github.mobile.ui.PagedListFragment;
 import com.github.mobile.ui.issue.ViewIssuesActivity;

File: app/src/main/java/com/github/mobile/persistence/AccountDataManager.java
Patch:
@@ -26,7 +26,7 @@
 import com.github.mobile.RequestReader;
 import com.github.mobile.RequestWriter;
 import com.github.mobile.async.AuthenticatedUserTask;
-import com.github.mobile.issue.IssueFilter;
+import com.github.mobile.core.issue.IssueFilter;
 import com.github.mobile.persistence.AllReposForUserOrOrg.Factory;
 import com.google.inject.Inject;
 import com.google.inject.name.Named;

File: app/src/main/java/com/github/mobile/async/AuthenticatedUserLoader.java
Patch:
@@ -1,11 +1,11 @@
 /*
- * Copyright (C) 2011 Alexander Blom
+ * Copyright 2012 GitHub Inc.
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
- *      http://www.apache.org/licenses/LICENSE-2.0
+ *  http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,

File: app/src/main/java/com/github/mobile/android/ui/issue/DashboardIssueListAdapter.java
Patch:
@@ -1,7 +1,6 @@
 package com.github.mobile.android.ui.issue;
 
 import static android.graphics.Paint.STRIKE_THRU_TEXT_FLAG;
-import static android.text.Html.fromHtml;
 import static android.view.View.GONE;
 import static android.view.View.VISIBLE;
 import android.view.LayoutInflater;
@@ -91,8 +90,8 @@ protected void update(final DashboardIssueView view, final RepositoryIssue issue
         view.pullRequestIcon.setVisibility(issue.getPullRequest().getHtmlUrl() == null ? GONE : VISIBLE);
 
         view.title.setText(issue.getTitle());
-        view.creation.setText(fromHtml("<b>" + issue.getUser().getLogin() + "</b> "
-                + Time.relativeTimeFor(issue.getCreatedAt())));
+        view.user.setText(issue.getUser().getLogin());
+        view.creation.setText(Time.relativeTimeFor(issue.getCreatedAt()));
         view.comments.setText(Integer.toString(issue.getComments()));
     }
 

File: app/src/main/java/com/github/mobile/android/ui/issue/ViewIssuesActivity.java
Patch:
@@ -50,7 +50,7 @@ public static Intent createIntent(Issue issue) {
      * @param position
      * @return intent
      */
-    public static Intent createIntent(Collection<Issue> issues, int position) {
+    public static Intent createIntent(Collection<? extends Issue> issues, int position) {
         ArrayList<Integer> numbers = new ArrayList<Integer>(issues.size());
         ArrayList<RepositoryId> repos = new ArrayList<RepositoryId>(issues.size());
         for (Issue issue : issues) {

File: app/src/main/java/com/github/mobile/android/ui/issue/DashboardIssueListAdapter.java
Patch:
@@ -71,7 +71,7 @@ public long getItemId(int position) {
 
     @Override
     protected void update(final DashboardIssueView view, final Issue issue) {
-        view.number.setText("#" + issue.getNumber());
+        view.number.setText(Integer.toString(issue.getNumber()));
         if (issue.getClosedAt() != null)
             view.number.setPaintFlags(view.numberPaintFlags | STRIKE_THRU_TEXT_FLAG);
         else

File: app/src/main/java/com/github/mobile/android/util/TypefaceHelper.java
Patch:
@@ -26,7 +26,7 @@ public static int getMaxDigits(int... numbers) {
     }
 
     /**
-     * Get width of number of digits with '#' prefix displayed in given view
+     * Get width of number of digits
      *
      * @param view
      * @param numberOfDigits
@@ -36,9 +36,8 @@ public static int getWidth(TextView view, int numberOfDigits) {
         Paint paint = new Paint();
         paint.setTypeface(view.getTypeface());
         paint.setTextSize(view.getTextSize());
-        char[] text = new char[numberOfDigits + 1];
+        char[] text = new char[numberOfDigits];
         Arrays.fill(text, '0');
-        text[0] = '#';
         return Math.round(paint.measureText(text, 0, text.length));
     }
 

File: app/src/main/java/com/github/mobile/android/issue/CreateIssueActivity.java
Patch:
@@ -139,7 +139,7 @@ public void onClick(View v) {
                 assigneeDialog.show(assignee != null ? assignee.getLogin() : null);
             }
         });
-        headerView.findViewById(id.ll_labels).setOnClickListener(new OnClickListener() {
+        headerView.findViewById(id.v_labels).setOnClickListener(new OnClickListener() {
 
             public void onClick(View v) {
                 labelsDialog.show(newIssue.getLabels());

File: app/src/main/java/com/github/mobile/android/ui/issue/IssueFragment.java
Patch:
@@ -237,7 +237,7 @@ public void onClick(View v) {
             }
         });
 
-        headerView.findViewById(id.ll_labels).setOnClickListener(new OnClickListener() {
+        headerView.findViewById(id.v_labels).setOnClickListener(new OnClickListener() {
 
             public void onClick(View v) {
                 if (issue != null)

File: app/src/main/java/com/github/mobile/android/issue/CreateIssueActivity.java
Patch:
@@ -24,6 +24,7 @@
 import com.github.mobile.android.SingleChoiceDialogFragment;
 import com.github.mobile.android.TextWatcherAdapter;
 import com.github.mobile.android.async.AuthenticatedUserTask;
+import com.github.mobile.android.ui.issue.ViewIssuesActivity;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;
 import com.google.inject.Inject;
@@ -239,7 +240,7 @@ public Issue run() throws Exception {
 
             protected void onSuccess(Issue issue) throws Exception {
                 progress.cancel();
-                startActivity(ViewIssueActivity.createIntent(issue));
+                startActivity(ViewIssuesActivity.createIntent(issue));
                 setResult(RESULT_OK);
                 finish();
             }

File: app/src/main/java/com/github/mobile/android/issue/DashboardIssueFragment.java
Patch:
@@ -78,7 +78,7 @@ protected ViewHoldingListAdapter<Issue> adapterFor(List<Issue> items) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
-        startActivity(ViewIssuesActivity.createIntent(listItems, position));
+        startActivity(ViewIssuesActivity.createIntent(listItems, position - l.getHeaderViewsCount()));
     }
 
     @Override

File: app/src/main/java/com/github/mobile/android/issue/IssuesFragment.java
Patch:
@@ -31,6 +31,7 @@
 import com.github.mobile.android.ResourcePager;
 import com.github.mobile.android.persistence.AccountDataManager;
 import com.github.mobile.android.ui.PagedListFragment;
+import com.github.mobile.android.ui.issue.ViewIssuesActivity;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ListViewHelper;
 import com.google.inject.Inject;
@@ -115,8 +116,8 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
-        Issue issue = (Issue) l.getItemAtPosition(position);
-        startActivityForResult(ViewIssueActivity.createIntent(issue), ISSUE_VIEW);
+        startActivityForResult(ViewIssuesActivity.createIntent(listItems, position - l.getHeaderViewsCount()),
+                ISSUE_VIEW);
     }
 
     @Override

File: app/src/main/java/com/github/mobile/android/ui/NewsFragment.java
Patch:
@@ -9,7 +9,7 @@
 import com.github.mobile.android.core.issue.IssueEventMatcher;
 import com.github.mobile.android.core.repo.RepositoryEventMatcher;
 import com.github.mobile.android.gist.ViewGistsActivity;
-import com.github.mobile.android.issue.ViewIssueActivity;
+import com.github.mobile.android.ui.issue.ViewIssuesActivity;
 import com.github.mobile.android.ui.repo.RepositoryViewActivity;
 import com.github.mobile.android.ui.user.NewsEventViewHolder;
 import com.github.mobile.android.util.AvatarHelper;
@@ -53,7 +53,7 @@ public void onListItemClick(ListView l, View v, int position, long id) {
         Event event = (Event) l.getItemAtPosition(position);
         Issue issue = issueMatcher.getIssue(event);
         if (issue != null)
-            startActivity(ViewIssueActivity.createIntent(issue));
+            startActivity(ViewIssuesActivity.createIntent(issue));
 
         Gist gist = gistMatcher.getGist(event);
         if (gist != null)

File: app/src/main/java/com/github/mobile/android/ui/UrlLauncher.java
Patch:
@@ -7,7 +7,7 @@
 import com.github.mobile.android.core.gist.GistUrlMatcher;
 import com.github.mobile.android.core.issue.IssueUrlMatcher;
 import com.github.mobile.android.gist.ViewGistsActivity;
-import com.github.mobile.android.issue.ViewIssueActivity;
+import com.github.mobile.android.ui.issue.ViewIssuesActivity;
 
 import org.eclipse.egit.github.core.Gist;
 import org.eclipse.egit.github.core.Issue;
@@ -43,7 +43,7 @@ private Intent createIssueIntent(final String uri, final int number) {
         Issue issue = new Issue();
         issue.setNumber(number);
         issue.setHtmlUrl(uri);
-        return ViewIssueActivity.createIntent(issue);
+        return ViewIssuesActivity.createIntent(issue);
     }
 
     private Intent createGistIntent(final String uri, final String id) {

File: app/src/main/java/com/github/mobile/android/gist/GistFragment.java
Patch:
@@ -39,6 +39,7 @@
 import com.github.mobile.android.util.AccountHelper;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ErrorHelper;
+import com.github.mobile.android.util.HtmlFormatter;
 import com.github.rtyley.android.sherlock.roboguice.fragment.RoboSherlockFragment;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
@@ -334,6 +335,8 @@ public FullGist run() throws Exception {
                     comments = gistService.getComments(gistId);
                 else
                     comments = Collections.emptyList();
+                for (Comment comment : comments)
+                    comment.setBodyHtml(HtmlFormatter.format(comment.getBodyHtml()).toString());
                 return new FullGist(gist, gistService.isStarred(gistId), comments);
             }
 

File: app/src/main/java/com/github/mobile/android/issue/IssueStore.java
Patch:
@@ -1,6 +1,7 @@
 package com.github.mobile.android.issue;
 
 import com.github.mobile.android.ItemStore;
+import com.github.mobile.android.util.HtmlFormatter;
 
 import java.io.IOException;
 import java.util.HashMap;
@@ -60,6 +61,7 @@ public Issue addIssue(Issue issue) {
      * @return issue
      */
     public Issue addIssue(IRepositoryIdProvider repository, Issue issue) {
+        issue.setBodyHtml(HtmlFormatter.format(issue.getBodyHtml()).toString());
         Issue current = getIssue(repository, issue.getNumber());
         if (current != null) {
             current.setAssignee(issue.getAssignee());

File: app/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -191,7 +191,7 @@ public void onClick(View v) {
                     labelsDialog.show(issue.getLabels());
             }
         });
-        header = new IssueHeaderViewHolder(headerView, avatarHelper, getResources());
+        header = new IssueHeaderViewHolder(headerView, avatarHelper);
         list.setFastScrollEnabled(true);
         list.addHeaderView(headerView);
         loadingView = getLayoutInflater().inflate(layout.comment_load_item, null);

File: app/src/main/java/com/github/mobile/android/gist/ViewGistsActivity.java
Patch:
@@ -159,7 +159,7 @@ public void onPageSelected(int position) {
             actionBar.setLogo(null);
             actionBar.setIcon(drawable.github_app_icon);
         }
-        actionBar.setTitle(getString(string.gist) + ' ' + gistId);
+        actionBar.setTitle(getString(string.gist_title) + gistId);
     }
 
     public void onPageScrollStateChanged(int state) {

File: app/src/main/java/com/github/mobile/android/ui/issue/IssueFragment.java
Patch:
@@ -397,7 +397,9 @@ public boolean onOptionsItemSelected(MenuItem item) {
             startActivityForResult(EditIssueActivity.createIntent(issue), ISSUE_EDIT);
             return true;
         case id.issue_comment:
-            startActivityForResult(CreateCommentActivity.createIntent(), COMMENT_CREATE);
+            String title = getString(string.issue_title) + issueNumber;
+            String subtitle = repositoryId.generateId();
+            startActivityForResult(CreateCommentActivity.createIntent(title, subtitle), COMMENT_CREATE);
             return true;
         case id.refresh:
             refreshAnimation.setRefreshItem(item).start(getActivity());

File: app/src/main/java/com/github/mobile/android/gist/GistFragment.java
Patch:
@@ -325,7 +325,7 @@ public FullGist run() throws Exception {
             }
 
             protected void onException(Exception e) throws RuntimeException {
-                ErrorHelper.show(getActivity().getApplicationContext(), e, string.error_gist_load);
+                ErrorHelper.show(getContext().getApplicationContext(), e, string.error_gist_load);
             }
 
             protected void onSuccess(FullGist fullGist) throws Exception {

File: app/src/main/java/com/github/mobile/android/ui/ListLoadingFragment.java
Patch:
@@ -66,6 +66,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case id.refresh:
             refreshAnimation.setRefreshItem(item);
+            refreshAnimation.start(getActivity());
             forceReload();
             return true;
         default:
@@ -104,8 +105,6 @@ private void refresh(Bundle args) {
         if (activity == null || getLoaderManager().hasRunningLoaders())
             return;
 
-        refreshAnimation.start(activity);
-
         getLoaderManager().restartLoader(0, args, this);
     }
 

File: app/src/main/java/com/github/mobile/android/ui/user/UserPagerAdapter.java
Patch:
@@ -70,7 +70,7 @@ public UserPagerAdapter clearAdapter() {
 
     public Object instantiateItem(ViewGroup container, int position) {
         Object fragment = super.instantiateItem(container, position);
-        if (position == 2 && fragment instanceof Fragment)
+        if (fragment instanceof Fragment)
             tags.add(((Fragment) fragment).getTag());
         return fragment;
     }

File: app/src/main/java/com/github/mobile/android/issue/IssuesFragment.java
Patch:
@@ -40,7 +40,6 @@
 
 import org.eclipse.egit.github.core.Issue;
 import org.eclipse.egit.github.core.Repository;
-import org.eclipse.egit.github.core.RepositoryId;
 import org.eclipse.egit.github.core.client.PageIterator;
 import org.eclipse.egit.github.core.service.IssueService;
 
@@ -130,8 +129,7 @@ public void onCreateOptionsMenu(Menu optionsMenu, MenuInflater inflater) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case id.create_issue:
-            startActivityForResult(CreateIssueActivity.createIntent(new RepositoryId(repository.getOwner().getLogin(),
-                    repository.getName())), ISSUE_CREATE);
+            startActivityForResult(CreateIssueActivity.createIntent(repository), ISSUE_CREATE);
             return true;
         case id.filter_issues:
             startActivityForResult(FilterIssuesActivity.createIntent(repository, filter), ISSUE_FILTER_EDIT);

File: app/src/main/java/com/github/mobile/android/repo/SearchRepoListFragment.java
Patch:
@@ -10,8 +10,8 @@
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ThrowableLoader;
 import com.github.mobile.android.async.AuthenticatedUserTask;
-import com.github.mobile.android.issue.IssueBrowseActivity;
 import com.github.mobile.android.ui.ListLoadingFragment;
+import com.github.mobile.android.ui.repo.RepositoryViewActivity;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -62,7 +62,7 @@ public Repository run() throws Exception {
             }
 
             protected void onSuccess(Repository repository) throws Exception {
-                startActivity(IssueBrowseActivity.createIntent(repository));
+                startActivity(RepositoryViewActivity.createIntent(repository));
             }
         }.execute();
     }

File: app/src/main/java/com/github/mobile/android/ui/repo/RepositoryNewsFragment.java
Patch:
@@ -6,7 +6,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ResourcePager;
-import com.github.mobile.android.ui.PagedListFragment;
+import com.github.mobile.android.ui.NewsFragment;
 import com.github.mobile.android.ui.user.EventPager;
 import com.github.mobile.android.ui.user.NewsEventViewHolder;
 import com.github.mobile.android.util.AvatarHelper;
@@ -28,7 +28,7 @@
 /**
  * Fragment to display a news feed for a specific repository
  */
-public class RepositoryNewsFragment extends PagedListFragment<Event> {
+public class RepositoryNewsFragment extends NewsFragment {
 
     @Inject
     private ContextScopedProvider<EventService> serviceProvider;

File: app/src/main/java/com/github/mobile/android/async/AuthenticatedUserLoader.java
Patch:
@@ -38,7 +38,7 @@ public abstract class AuthenticatedUserLoader<D> extends AsyncLoader<D> {
     private GitHubAccountScope gitHubAccountScope;
 
     @Inject
-    private Activity activity;
+    protected Activity activity;
 
     public AuthenticatedUserLoader(Context context) {
         super(context);

File: app/src/main/java/com/github/mobile/android/repo/UserComparator.java
Patch:
@@ -11,7 +11,7 @@
  * Sorts users and orgs in alphabetical order by username, but overriding this
  * to put the currently authenticated user at the top of the list.
  */
-class UserComparator implements Comparator<User> {
+public class UserComparator implements Comparator<User> {
 
     private final String currentUserLogin;
 

File: app/src/main/java/com/github/mobile/android/ui/repo/RepositoryViewActivity.java
Patch:
@@ -11,7 +11,7 @@
 import com.actionbarsherlock.view.MenuItem;
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
-import com.github.mobile.android.ui.user.UserViewActivity;
+import com.github.mobile.android.HomeActivity;
 import com.github.mobile.android.util.GitHubIntents.Builder;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
 import com.viewpagerindicator.TitlePageIndicator;
@@ -63,7 +63,7 @@ protected void onCreate(Bundle savedInstanceState) {
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
         case android.R.id.home:
-            Intent intent = UserViewActivity.createIntent(repository.getOwner());
+            Intent intent = new Intent(this, HomeActivity.class);
             intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);
             startActivity(intent);
             return true;

File: app/src/main/java/com/github/mobile/android/util/Image.java
Patch:
@@ -168,7 +168,7 @@ public static void setImage(final File image, final ImageView view) {
      * @param radius
      * @return rounded corner bitmap
      */
-    public static Bitmap roundCornersAndOverlayOnWhite(final Bitmap source, final int radius) {
+    public static Bitmap roundCornersAndOverlayOnWhite(final Bitmap source, final float radius) {
         int width = source.getWidth();
         int height = source.getHeight();
 

File: app/src/main/java/com/github/mobile/android/util/GitHubIntents.java
Patch:
@@ -60,7 +60,7 @@ public class GitHubIntents {
     /**
      * Issue number collection handle
      */
-    public static final String EXTRA_ISSUE_NUMBERS = INTENT_EXTRA_PREFIX + "ISSUES_NUMBERS";
+    public static final String EXTRA_ISSUE_NUMBERS = INTENT_EXTRA_PREFIX + "ISSUE_NUMBERS";
 
     /**
      * Gist id

File: app/src/main/java/com/github/mobile/android/issue/DashboardIssueFragment.java
Patch:
@@ -8,6 +8,7 @@
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ResourcePager;
 import com.github.mobile.android.ui.PagedListFragment;
+import com.github.mobile.android.ui.issue.ViewIssuesActivity;
 import com.github.mobile.android.util.AvatarHelper;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
@@ -67,8 +68,7 @@ protected ViewHoldingListAdapter<Issue> adapterFor(List<Issue> items) {
 
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
-        Issue issue = (Issue) l.getItemAtPosition(position);
-        startActivity(ViewIssueActivity.createIntent(issue));
+        startActivity(ViewIssuesActivity.createIntent(listItems, position));
     }
 
     @Override

File: app/src/main/java/com/github/mobile/android/ConfirmDialogFragment.java
Patch:
@@ -69,8 +69,6 @@ public void onClick(DialogInterface dialog, int which) {
         case BUTTON_NEGATIVE:
             onResult(RESULT_CANCELED);
             break;
-        default:
-            break;
         }
     }
 }

File: app/src/main/java/com/github/mobile/android/MultiChoiceDialogFragment.java
Patch:
@@ -97,8 +97,6 @@ public void onClick(DialogInterface dialog, int which) {
         case BUTTON_POSITIVE:
             onResult(RESULT_OK);
             break;
-        default:
-            break;
         }
     }
 

File: app/src/main/java/com/github/mobile/android/issue/DashboardIssueFragment.java
Patch:
@@ -45,8 +45,8 @@ public class DashboardIssueFragment extends PagedListFragment<Issue> {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setHasOptionsMenu(true);
 
+        setHasOptionsMenu(true);
     }
 
     @SuppressWarnings("unchecked")
@@ -68,7 +68,7 @@ protected ViewHoldingListAdapter<Issue> adapterFor(List<Issue> items) {
     @Override
     public void onListItemClick(ListView l, View v, int position, long id) {
         Issue issue = (Issue) l.getItemAtPosition(position);
-        startActivity(ViewIssueActivity.viewIssueIntentFor(issue));
+        startActivity(ViewIssueActivity.createIntent(issue));
     }
 
     @Override

File: app/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -95,7 +95,7 @@ public class ViewIssueActivity extends DialogFragmentActivity {
      * @param issue
      * @return intent
      */
-    public static Intent viewIssueIntentFor(Issue issue) {
+    public static Intent createIntent(Issue issue) {
         return new Builder("repo.issue.VIEW").issue(issue).toIntent();
     }
 

File: app/src/main/java/com/github/mobile/android/repo/RepoListFragment.java
Patch:
@@ -12,9 +12,9 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.async.AuthenticatedUserLoader;
-import com.github.mobile.android.issue.IssueBrowseActivity;
 import com.github.mobile.android.persistence.AccountDataManager;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
+import com.github.mobile.android.ui.repo.RepositoryViewActivity;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -62,7 +62,7 @@ public void onActivityCreated(Bundle savedInstanceState) {
     public void onListItemClick(ListView list, View v, int position, long id) {
         Repository repo = (Repository) list.getItemAtPosition(position);
         recent.add(repo);
-        startActivity(IssueBrowseActivity.createIntent(repo));
+        startActivity(RepositoryViewActivity.createIntent(repo));
     }
 
     @Override

File: app/src/main/java/com/github/mobile/android/util/HtmlViewer.java
Patch:
@@ -87,7 +87,7 @@ private void loadExternalUrl(final Context context, final String url) {
             Issue issue = new Issue();
             issue.setNumber(issueNumber);
             issue.setHtmlUrl(url);
-            context.startActivity(ViewIssueActivity.viewIssueIntentFor(issue));
+            context.startActivity(ViewIssueActivity.createIntent(issue));
             return;
         }
 

File: app/src/main/java/com/github/mobile/android/persistence/DBCache.java
Patch:
@@ -36,12 +36,10 @@ <E> List<E> loadOrRequest(PersistableResource<E> persistableResource) throws IOE
         }
     }
 
-    public <E> List<E> requestAndStore(PersistableResource<E> persistableResource) {
+    public <E> List<E> requestAndStore(PersistableResource<E> persistableResource) throws IOException {
         SQLiteOpenHelper helper = helperProvider.get();
         try {
             return requestAndStore(helper, persistableResource);
-        } catch (IOException e) {
-            throw new RuntimeException(e);
         } finally {
             helper.close();
         }

File: app/src/main/java/com/github/mobile/android/authenticator/GitHubAuthenticatorActivity.java
Patch:
@@ -60,9 +60,6 @@ public class GitHubAuthenticatorActivity extends RoboAccountAuthenticatorActivit
     LeavingBlankTextFieldWarner leavingBlankTextFieldWarner;
     private TextWatcher watcher = validationTextWatcher();
 
-    @Inject
-    private GitHubClient client;
-
     private RoboAsyncTask<User> authenticationTask;
     private String mAuthtoken;
     private String mAuthtokenType;
@@ -182,6 +179,7 @@ public void handleLogin(View view) {
 
             authenticationTask = new RoboAsyncTask<User>(this) {
                 public User call() throws Exception {
+                    GitHubClient client = new GitHubClient();
                     client.setCredentials(mUsername, mPassword);
 
                     return new UserService(client).getUser();

File: app/src/main/java/com/github/mobile/android/gist/DeleteGistTask.java
Patch:
@@ -7,18 +7,18 @@
 import android.widget.Toast;
 
 import com.github.mobile.android.R.string;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 import com.google.inject.Inject;
 
 import org.eclipse.egit.github.core.Gist;
 import org.eclipse.egit.github.core.service.GistService;
 
 import roboguice.inject.ContextScopedProvider;
-import roboguice.util.RoboAsyncTask;
 
 /**
  * Async task to delete a Gist
  */
-public class DeleteGistTask extends RoboAsyncTask<Gist> {
+public class DeleteGistTask extends AuthenticatedUserTask<Gist> {
 
     private final String id;
 
@@ -60,7 +60,7 @@ public void start() {
     }
 
     @Override
-    public Gist call() throws Exception {
+    public Gist run() throws Exception {
         serviceProvider.get(getContext()).deleteGist(id);
         return null;
     }

File: app/src/main/java/com/github/mobile/android/gist/GistFileFragment.java
Patch:
@@ -11,6 +11,7 @@
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 import com.github.mobile.android.util.ErrorHelper;
 import com.github.mobile.android.util.SourceEditor;
 import com.github.rtyley.android.sherlock.roboguice.fragment.RoboSherlockFragment;
@@ -24,7 +25,6 @@
 
 import roboguice.inject.InjectExtra;
 import roboguice.inject.InjectView;
-import roboguice.util.RoboAsyncTask;
 
 /**
  * Fragment to display the content of a file in a Gist
@@ -55,8 +55,8 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     private void loadSource() {
-        new RoboAsyncTask<GistFile>(getActivity()) {
-            public GistFile call() throws Exception {
+        new AuthenticatedUserTask<GistFile>(getActivity()) {
+            public GistFile run() throws Exception {
                 gist = store.refreshGist(gistId);
                 Map<String, GistFile> files = gist.getFiles();
                 if (files == null)

File: app/src/main/java/com/github/mobile/android/gist/ShareGistActivity.java
Patch:
@@ -18,6 +18,7 @@
 import com.github.mobile.android.R.menu;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.TextWatcherAdapter;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 import com.github.rtyley.android.sherlock.roboguice.activity.RoboSherlockFragmentActivity;
 import com.google.inject.Inject;
 
@@ -29,7 +30,6 @@
 
 import roboguice.inject.ContextScopedProvider;
 import roboguice.inject.InjectView;
-import roboguice.util.RoboAsyncTask;
 
 /**
  * Activity to share a text selection as a public or private Gist
@@ -111,9 +111,9 @@ private void createGist() {
         final ProgressDialog progress = new ProgressDialog(this);
         progress.setMessage(getString(string.creating_gist));
         progress.show();
-        new RoboAsyncTask<Gist>(this) {
+        new AuthenticatedUserTask<Gist>(this) {
 
-            public Gist call() throws Exception {
+            public Gist run() throws Exception {
                 Gist gist = new Gist();
                 gist.setDescription(description);
                 gist.setPublic(isPublic);

File: app/src/main/java/com/github/mobile/android/issue/AssigneeDialog.java
Patch:
@@ -17,7 +17,7 @@
 import org.eclipse.egit.github.core.User;
 import org.eclipse.egit.github.core.service.CollaboratorService;
 
-import roboguice.util.RoboAsyncTask;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 
 /**
  * Dialog helper to display a list of assignees to select one from
@@ -54,9 +54,9 @@ private void load(final String selectedAssignee) {
         final ProgressDialog loader = new ProgressDialog(activity);
         loader.setMessage("Loading Collaborators...");
         loader.show();
-        new RoboAsyncTask<List<User>>(activity) {
+        new AuthenticatedUserTask<List<User>>(activity) {
 
-            public List<User> call() throws Exception {
+            public List<User> run() throws Exception {
                 List<User> users = service.getCollaborators(repository);
                 Map<String, User> loadedCollaborators = new TreeMap<String, User>(new Comparator<String>() {
 

File: app/src/main/java/com/github/mobile/android/issue/CreateIssueActivity.java
Patch:
@@ -42,7 +42,7 @@
 
 import roboguice.inject.InjectExtra;
 import roboguice.inject.InjectView;
-import roboguice.util.RoboAsyncTask;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 
 /**
  * Activity to create a new issue
@@ -237,9 +237,9 @@ private void createIssue() {
         progress.show();
         newIssue.setTitle(titleText.getText().toString());
         newIssue.setBody(bodyText.getText().toString());
-        new RoboAsyncTask<Issue>(this) {
+        new AuthenticatedUserTask<Issue>(this) {
 
-            public Issue call() throws Exception {
+            public Issue run() throws Exception {
                 return store.addIssue(service.createIssue(repoOwner, repoName, newIssue));
             }
 

File: app/src/main/java/com/github/mobile/android/issue/DashboardIssueFragment.java
Patch:
@@ -7,10 +7,10 @@
 import android.widget.Button;
 import android.widget.ListView;
 
-import com.github.mobile.android.AsyncLoader;
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
+import com.github.mobile.android.async.AuthenticatedUserLoader;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
 import com.github.mobile.android.util.AvatarHelper;
 import com.google.inject.Inject;
@@ -78,9 +78,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
     @Override
     public Loader<List<Issue>> onCreateLoader(int id, Bundle args) {
-        return new AsyncLoader<List<Issue>>(getActivity()) {
+        return new AuthenticatedUserLoader<List<Issue>>(getActivity()) {
 
-            public List<Issue> loadInBackground() {
+            public List<Issue> load() {
                 try {
                     hasMore = pager.next();
                 } catch (final IOException e) {

File: app/src/main/java/com/github/mobile/android/issue/FilterListFragment.java
Patch:
@@ -6,8 +6,8 @@
 import android.view.View;
 import android.widget.ListView;
 
+import com.github.mobile.android.async.AuthenticatedUserLoader;
 import com.github.mobile.android.persistence.AccountDataManager;
-import com.github.mobile.android.AsyncLoader;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
@@ -36,9 +36,9 @@ public void onActivityCreated(Bundle savedInstanceState) {
 
     @Override
     public Loader<List<IssueFilter>> onCreateLoader(int id, Bundle args) {
-        return new AsyncLoader<List<IssueFilter>>(getActivity()) {
+        return new AuthenticatedUserLoader<List<IssueFilter>>(getActivity()) {
 
-            public List<IssueFilter> loadInBackground() {
+            public List<IssueFilter> load() {
                 List<IssueFilter> filters = newArrayList(cache.getIssueFilters());
                 Collections.sort(filters, new Comparator<IssueFilter>() {
 

File: app/src/main/java/com/github/mobile/android/issue/IssuesFragment.java
Patch:
@@ -15,9 +15,9 @@
 import android.widget.Button;
 import android.widget.ListView;
 
-import com.github.mobile.android.AsyncLoader;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
+import com.github.mobile.android.async.AuthenticatedUserLoader;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
 import com.github.mobile.android.util.AvatarHelper;
 import com.google.inject.Inject;
@@ -173,10 +173,10 @@ public PageIterator<Issue> createIterator(int page, int size) {
                     }
                 });
         final IssuePager[] loaderPagers = pagers.toArray(new IssuePager[pagers.size()]);
-        return new AsyncLoader<List<Issue>>(getActivity()) {
+        return new AuthenticatedUserLoader<List<Issue>>(getActivity()) {
 
             @Override
-            public List<Issue> loadInBackground() {
+            public List<Issue> load() {
                 hasMore = false;
                 final List<Issue> all = newArrayList();
                 boolean error = false;

File: app/src/main/java/com/github/mobile/android/issue/LabelsDialog.java
Patch:
@@ -19,7 +19,7 @@
 import org.eclipse.egit.github.core.Label;
 import org.eclipse.egit.github.core.service.LabelService;
 
-import roboguice.util.RoboAsyncTask;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 
 /**
  * Dialog helper to display a list of possibly selected issue labels
@@ -56,9 +56,9 @@ private void load(final List<Label> selectedLabels) {
         final ProgressDialog loader = new ProgressDialog(activity);
         loader.setMessage("Loading Labels...");
         loader.show();
-        new RoboAsyncTask<List<Label>>(activity) {
+        new AuthenticatedUserTask<List<Label>>(activity) {
 
-            public List<Label> call() throws Exception {
+            public List<Label> run() throws Exception {
                 List<Label> repositoryLabels = service.getLabels(repository);
                 Map<String, Label> loadedLabels = new TreeMap<String, Label>(new Comparator<String>() {
 

File: app/src/main/java/com/github/mobile/android/issue/MilestoneDialog.java
Patch:
@@ -16,7 +16,7 @@
 import org.eclipse.egit.github.core.service.IssueService;
 import org.eclipse.egit.github.core.service.MilestoneService;
 
-import roboguice.util.RoboAsyncTask;
+import com.github.mobile.android.async.AuthenticatedUserTask;
 
 /**
  * Dialog helper to display a list of milestones to select one from
@@ -62,9 +62,9 @@ private void load(final Milestone selectedMilestone) {
         final ProgressDialog loader = new ProgressDialog(activity);
         loader.setMessage("Loading Milestones...");
         loader.show();
-        new RoboAsyncTask<List<Milestone>>(activity) {
+        new AuthenticatedUserTask<List<Milestone>>(activity) {
 
-            public List<Milestone> call() throws Exception {
+            public List<Milestone> run() throws Exception {
                 repositoryMilestones = newArrayList();
                 repositoryMilestones.addAll(service.getMilestones(repository, IssueService.STATE_OPEN));
                 repositoryMilestones.addAll(service.getMilestones(repository, IssueService.STATE_CLOSED));

File: app/src/main/java/com/github/mobile/android/ui/fragments/IssuesFragment.java
Patch:
@@ -10,7 +10,7 @@
 import android.view.View;
 import android.widget.ListView;
 
-import com.github.mobile.android.AsyncLoader;
+import com.github.mobile.android.async.AuthenticatedUserLoader;
 import com.github.mobile.android.views.IssueViewHolder;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -42,9 +42,9 @@ public void onListItemClick(ListView list, View v, int position, long id) {
 
     @Override
     public Loader<List<Issue>> onCreateLoader(int i, Bundle bundle) {
-        return new AsyncLoader<List<Issue>>(getActivity()) {
+        return new AuthenticatedUserLoader<List<Issue>>(getActivity()) {
             @Override
-            public List<Issue> loadInBackground() {
+            public List<Issue> load() {
                 Log.i(TAG, "started loadInBackground");
                 try {
                     return issueService.getIssues();

File: app/src/main/java/com/github/mobile/android/core/gist/FullGist.java
Patch:
@@ -4,6 +4,7 @@
 
 import java.io.Serializable;
 import java.util.ArrayList;
+import java.util.Collection;
 import java.util.List;
 
 import org.eclipse.egit.github.core.Comment;
@@ -29,7 +30,7 @@ public class FullGist extends ArrayList<Comment> implements Serializable {
      * @param starred
      * @param comments
      */
-    public FullGist(final Gist gist, final boolean starred, final List<Comment> comments) {
+    public FullGist(final Gist gist, final boolean starred, final Collection<Comment> comments) {
         super(comments);
         this.starred = starred;
         this.gist = gist;

File: app/src/main/java/com/github/mobile/android/core/issue/FullIssue.java
Patch:
@@ -2,7 +2,7 @@
 
 import java.io.Serializable;
 import java.util.ArrayList;
-import java.util.List;
+import java.util.Collection;
 
 import org.eclipse.egit.github.core.Comment;
 import org.eclipse.egit.github.core.Issue;
@@ -23,7 +23,7 @@ public class FullIssue extends ArrayList<Comment> implements Serializable {
      * @param issue
      * @param comments
      */
-    public FullIssue(final Issue issue, final List<Comment> comments) {
+    public FullIssue(final Issue issue, final Collection<Comment> comments) {
         super(comments);
         this.issue = issue;
     }

File: app/src/main/java/com/github/mobile/android/core/issue/FullIssue.java
Patch:
@@ -1,4 +1,4 @@
-package com.github.mobile.android.issue;
+package com.github.mobile.android.core.issue;
 
 import java.io.Serializable;
 import java.util.ArrayList;

File: app/src/main/java/com/github/mobile/android/issue/IssueFragment.java
Patch:
@@ -9,6 +9,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.comment.CommentViewHolder;
+import com.github.mobile.android.core.issue.FullIssue;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
 import com.github.mobile.android.util.AvatarHelper;
 import com.google.inject.Inject;

File: app/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -37,6 +37,7 @@
 import com.github.mobile.android.SingleChoiceDialogFragment;
 import com.github.mobile.android.comment.CommentViewHolder;
 import com.github.mobile.android.comment.CreateCommentActivity;
+import com.github.mobile.android.core.issue.FullIssue;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ErrorHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;

File: app/src/main/java/com/github/mobile/android/gist/GistsActivity.java
Patch:
@@ -30,7 +30,7 @@ public class GistsActivity extends RoboSherlockFragmentActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(layout.gists);
+        setContentView(layout.pager_with_title);
         setTitle(getString(string.gists_title));
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 

File: app/src/main/java/com/github/mobile/android/gist/ViewGistFilesActivity.java
Patch:
@@ -57,7 +57,7 @@ public static Intent createIntent(Gist gist, int position) {
 
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(layout.gist_files);
+        setContentView(layout.pager_with_title);
         setTitle(getString(string.gist) + " " + gistId);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 

File: app/src/main/java/com/github/mobile/android/issue/IssueDashboardActivity.java
Patch:
@@ -32,7 +32,7 @@ public class IssueDashboardActivity extends RoboSherlockFragmentActivity {
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(layout.issue_dashboard);
+        setContentView(layout.pager_with_title);
         setTitle(string.dashboard_issues_title);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 

File: app/src/main/java/com/github/mobile/android/issue/CreateIssueHeaderViewHolder.java
Patch:
@@ -10,6 +10,7 @@
 import android.widget.TextView;
 
 import com.github.mobile.android.R.id;
+import com.github.mobile.android.R.string;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ServiceHelper;
 import com.madgag.android.listviews.ViewHolder;
@@ -79,6 +80,6 @@ public void updateViewFor(Issue issue) {
         if (issue.getMilestone() != null)
             milestoneText.setText(issue.getMilestone().getTitle());
         else
-            milestoneText.setText("No milestone");
+            milestoneText.setText(milestoneText.getContext().getString(string.no_milestone));
     }
 }

File: app/src/main/java/com/github/mobile/android/issue/IssueHeaderViewHolder.java
Patch:
@@ -12,6 +12,7 @@
 import android.widget.TextView;
 
 import com.github.mobile.android.R.id;
+import com.github.mobile.android.R.string;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.HtmlViewer;
 import com.github.mobile.android.util.ServiceHelper;
@@ -99,7 +100,7 @@ public void updateViewFor(Issue issue) {
             avatarHelper.bind(assigneeAvatar, assignee);
         } else {
             assigneeAvatar.setVisibility(GONE);
-            assigneeText.setText("Unassigned");
+            assigneeText.setText(assigneeText.getContext().getString(string.unassigned));
         }
 
         if (!issue.getLabels().isEmpty()) {
@@ -116,7 +117,7 @@ public void updateViewFor(Issue issue) {
         if (issue.getMilestone() != null)
             milestoneText.setText(issue.getMilestone().getTitle());
         else
-            milestoneText.setText("No milestone");
+            milestoneText.setText(milestoneText.getContext().getString(string.no_milestone));
 
         String state = issue.getState();
         if (state != null && state.length() > 0)

File: app/src/main/java/com/github/mobile/android/HomeActivity.java
Patch:
@@ -52,7 +52,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             onSearchRequested();
             return true;
         case id.bookmarks:
-            startActivity(new Intent(this, FilterBrowseActivity.class));
+            startActivity(FilterBrowseActivity.createIntent());
             return true;
         default:
             return super.onOptionsItemSelected(item);

File: app/src/main/java/com/github/mobile/android/util/AvatarHelper.java
Patch:
@@ -2,7 +2,7 @@
 
 import static android.graphics.Bitmap.createScaledBitmap;
 import static android.view.View.VISIBLE;
-import static com.github.mobile.android.util.Image.roundCorners;
+import static com.github.mobile.android.util.Image.roundCornersAndOverlayOnWhite;
 import static org.apache.commons.io.IOUtils.closeQuietly;
 import android.content.res.Resources;
 import android.graphics.Bitmap;
@@ -88,7 +88,7 @@ public ScaledAndRoundedAvatarGenerator(int sizeInPixels) {
 
         public Drawable convert(Bitmap bitmap) {
             Bitmap scaledBitmap = createScaledBitmap(bitmap, sizeInPixels, sizeInPixels, true);
-            return new BitmapDrawable(resources, roundCorners(scaledBitmap, RADIUS));
+            return new BitmapDrawable(resources, roundCornersAndOverlayOnWhite(scaledBitmap, RADIUS));
         }
 
     }

File: app/src/main/java/com/github/mobile/android/util/Image.java
Patch:
@@ -162,13 +162,13 @@ public static void setImage(final File image, final ImageView view) {
     }
 
     /**
-     * Round the corners of a {@link Bitmap}
+     * Round the corners of a {@link Bitmap} and overlay it on a white background.
      *
      * @param source
      * @param radius
      * @return rounded corner bitmap
      */
-    public static Bitmap roundCorners(final Bitmap source, final int radius) {
+    public static Bitmap roundCornersAndOverlayOnWhite(final Bitmap source, final int radius) {
         int width = source.getWidth();
         int height = source.getHeight();
 
@@ -180,6 +180,7 @@ public static Bitmap roundCorners(final Bitmap source, final int radius) {
         new Canvas(whiteRoundedRectangle).drawRoundRect(new RectF(0, 0, width, height), radius, radius, paint);
 
         Bitmap output = Bitmap.createBitmap(width, height, Config.ARGB_8888);
+        output.eraseColor(WHITE); // GH avatars expect a white background https://github.com/github/android/issues/19
         Canvas outputCanvas = new Canvas(output);
         outputCanvas.drawBitmap(source, 0, 0, null);
         paint.setXfermode(new PorterDuffXfermode(DST_IN));

File: github-android/src/main/java/com/github/mobile/android/gist/FullGist.java
Patch:
@@ -1,5 +1,7 @@
 package com.github.mobile.android.gist;
 
+import static com.google.common.collect.Lists.newArrayList;
+
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
@@ -61,6 +63,6 @@ public Gist getGist() {
      * @return list of files
      */
     public List<GistFile> getFiles() {
-        return new ArrayList<GistFile>(gist.getFiles().values());
+        return newArrayList(gist.getFiles().values());
     }
 }

File: github-android/src/main/java/com/github/mobile/android/gist/MyGistsFragment.java
Patch:
@@ -8,6 +8,7 @@
 
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.ThrowableLoader;
+import static com.google.common.collect.Lists.newArrayList;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
 
 import java.io.IOException;

File: github-android/src/main/java/com/github/mobile/android/gist/PublicGistsFragment.java
Patch:
@@ -9,6 +9,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.ThrowableLoader;
 import com.github.mobile.android.util.AvatarHelper;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
 

File: github-android/src/main/java/com/github/mobile/android/gist/StarredGistsFragment.java
Patch:
@@ -8,6 +8,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.ThrowableLoader;
 import com.github.mobile.android.util.AvatarHelper;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
 

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistActivity.java
Patch:
@@ -34,6 +34,7 @@
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ErrorHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -128,7 +129,7 @@ public static final Intent createIntent(String gistId) {
 
     private Executor executor = Executors.newFixedThreadPool(1);
 
-    private List<View> fileHeaders = new ArrayList<View>();
+    private List<View> fileHeaders = newArrayList();
 
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);

File: github-android/src/main/java/com/github/mobile/android/issue/CreateIssueActivity.java
Patch:
@@ -24,6 +24,7 @@
 import com.github.mobile.android.TextWatcherAdapter;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 
 import java.util.ArrayList;

File: github-android/src/main/java/com/github/mobile/android/issue/FilterIssuesActivity.java
Patch:
@@ -20,6 +20,7 @@
 import com.github.mobile.android.SingleChoiceDialogFragment;
 import com.github.mobile.android.util.GitHubIntents;
 import com.google.common.base.Joiner;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 
 import java.util.ArrayList;

File: github-android/src/main/java/com/github/mobile/android/issue/FilterListFragment.java
Patch:
@@ -10,6 +10,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -39,7 +40,7 @@ public Loader<List<IssueFilter>> onCreateLoader(int id, Bundle args) {
         return new AsyncLoader<List<IssueFilter>>(getActivity()) {
 
             public List<IssueFilter> loadInBackground() {
-                List<IssueFilter> filters = new ArrayList<IssueFilter>(cache.getIssueFilters());
+                List<IssueFilter> filters = newArrayList(cache.getIssueFilters());
                 Collections.sort(filters, new Comparator<IssueFilter>() {
 
                     public int compare(IssueFilter lhs, IssueFilter rhs) {

File: github-android/src/main/java/com/github/mobile/android/issue/IssuePager.java
Patch:
@@ -1,5 +1,7 @@
 package com.github.mobile.android.issue;
 
+import static com.google.common.collect.Lists.newArrayList;
+
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
@@ -62,7 +64,7 @@ public IssuePager reset() {
      * @return issues
      */
     public List<Issue> getIssues() {
-        return new ArrayList<Issue>(issues.values());
+        return newArrayList(issues.values());
     }
 
     /**

File: github-android/src/main/java/com/github/mobile/android/issue/IssuesFragment.java
Patch:
@@ -19,6 +19,7 @@
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
 import com.github.mobile.android.util.AvatarHelper;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
 
@@ -56,7 +57,7 @@ public class IssuesFragment extends ListLoadingFragment<Issue> {
 
     private Button moreButton;
 
-    private final List<IssuePager> pagers = new ArrayList<IssuePager>();
+    private final List<IssuePager> pagers = newArrayList();
 
     @Inject
     private AvatarHelper avatarHelper;
@@ -178,7 +179,7 @@ public PageIterator<Issue> createIterator(int page, int size) {
             @Override
             public List<Issue> loadInBackground() {
                 hasMore = false;
-                final List<Issue> all = new ArrayList<Issue>();
+                final List<Issue> all = newArrayList();
                 boolean error = false;
                 for (IssuePager pager : loaderPagers) {
                     try {

File: github-android/src/main/java/com/github/mobile/android/issue/MilestoneDialog.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.github.mobile.android.DialogFragmentActivity;
 import com.github.mobile.android.SingleChoiceDialogFragment;
+import static com.google.common.collect.Lists.newArrayList;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -64,7 +65,7 @@ private void load(final Milestone selectedMilestone) {
         new RoboAsyncTask<List<Milestone>>(activity) {
 
             public List<Milestone> call() throws Exception {
-                repositoryMilestones = new ArrayList<Milestone>();
+                repositoryMilestones = newArrayList();
                 repositoryMilestones.addAll(service.getMilestones(repository, IssueService.STATE_OPEN));
                 repositoryMilestones.addAll(service.getMilestones(repository, IssueService.STATE_CLOSED));
                 Collections.sort(repositoryMilestones, new Comparator<Milestone>() {

File: github-android/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -35,6 +35,7 @@
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.ErrorHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;

File: github-android/src/main/java/com/github/mobile/android/repo/RepoListFragment.java
Patch:
@@ -15,6 +15,7 @@
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.string;
 import com.github.mobile.android.ui.fragments.ListLoadingFragment;
+import static com.google.common.collect.Lists.newArrayList;
 import com.google.inject.Inject;
 import com.madgag.android.listviews.ReflectiveHolderFactory;
 import com.madgag.android.listviews.ViewHoldingListAdapter;
@@ -103,7 +104,7 @@ public Loader<List<Repository>> onCreateLoader(int id, Bundle args) {
 
             public List<Repository> loadInBackground() {
                 try {
-                    List<Repository> repos = new ArrayList<Repository>(cache.getRepos(user));
+                    List<Repository> repos = newArrayList(cache.getRepos(user));
                     Collections.sort(repos, new Comparator<Repository>() {
 
                         public int compare(Repository lhs, Repository rhs) {

File: github-android/src/main/java/com/github/mobile/android/ui/fragments/TabsAdapter.java
Patch:
@@ -28,6 +28,8 @@
 import android.widget.TabHost.OnTabChangeListener;
 import android.widget.TabWidget;
 
+import static com.google.common.collect.Lists.newArrayList;
+
 import java.util.ArrayList;
 
 /**
@@ -43,7 +45,7 @@ public class TabsAdapter extends FragmentPagerAdapter implements OnTabChangeList
     private final Context mContext;
     private final TabHost mTabHost;
     private final ViewPager mViewPager;
-    private final ArrayList<TabInfo> mTabs = new ArrayList<TabInfo>();
+    private final ArrayList<TabInfo> mTabs = newArrayList();
 
     static final class TabInfo {
         private final String tag;

File: github-android/src/main/java/com/github/mobile/android/gist/GistStore.java
Patch:
@@ -62,7 +62,7 @@ public Gist addGist(Gist gist) {
      * @return refreshed gist
      * @throws IOException
      */
-    public Gist refreshIssue(String id) throws IOException {
+    public Gist refreshGist(String id) throws IOException {
         return addGist(service.getGist(id));
     }
 

File: github-android/src/main/java/com/github/mobile/android/gist/GistsFragment.java
Patch:
@@ -122,8 +122,7 @@ private void openGist() {
         prompt.setPositiveButton("Open", new DialogInterface.OnClickListener() {
             public void onClick(DialogInterface dialog, int whichButton) {
                 dialog.dismiss();
-                String gistId = id.getText().toString();
-                startActivityForResult(ViewGistActivity.createIntent(gistId), REQUEST_VIEW);
+                startActivityForResult(ViewGistActivity.createIntent(id.getText().toString().trim()), REQUEST_VIEW);
             }
         });
         prompt.show();

File: github-android/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -188,7 +188,7 @@ public void onClick(View v) {
         header = new IssueHeaderViewHolder(headerView, avatarHelper, getResources());
         list.setFastScrollEnabled(true);
         list.addHeaderView(headerView);
-        loadingView = getLayoutInflater().inflate(layout.issue_load_item, null);
+        loadingView = getLayoutInflater().inflate(layout.comment_load_item, null);
 
         if (issue != null && comments != null)
             updateList(issue, comments);

File: github-android/src/main/java/com/github/mobile/android/issue/RepoIssueViewHolder.java
Patch:
@@ -88,6 +88,7 @@ public void updateViewFor(Issue issue) {
         else
             number.setPaintFlags(flags);
 
+        gravatar.setImageDrawable(null);
         helper.bind(gravatar, issue.getUser());
 
         if (issue.getPullRequest().getHtmlUrl() != null)

File: github-android/src/main/java/com/github/mobile/android/comment/CommentViewHolder.java
Patch:
@@ -46,7 +46,7 @@ public void updateViewFor(final Comment comment) {
         bodyViewer.setHtml(comment.getBodyHtml());
         authorView.setText(comment.getUser().getLogin());
         dateView.setText(Time.relativeTimeFor(comment.getUpdatedAt()));
-        avatarView.setBackgroundDrawable(null);
+        avatarView.setImageDrawable(null);
         avatarHelper.bind(avatarView, comment.getUser());
     }
 }

File: github-android/src/main/java/com/github/mobile/android/gist/PublicGistsFragment.java
Patch:
@@ -52,6 +52,6 @@ public List<Gist> loadInBackground() {
     @Override
     protected ViewHoldingListAdapter<Gist> adapterFor(List<Gist> items) {
         return new ViewHoldingListAdapter<Gist>(items, viewInflatorFor(getActivity(), layout.gist_list_item),
-                reflectiveFactoryFor(GistViewHolder.class, GistViewHolder.computeMaxDigits(items), avatarHelper));
+                reflectiveFactoryFor(GistViewHolder.class, idWidth, avatarHelper));
     }
 }

File: github-android/src/main/java/com/github/mobile/android/gist/StarredGistsFragment.java
Patch:
@@ -50,6 +50,6 @@ public List<Gist> loadInBackground() {
     @Override
     protected ViewHoldingListAdapter<Gist> adapterFor(List<Gist> items) {
         return new ViewHoldingListAdapter<Gist>(items, viewInflatorFor(getActivity(), layout.gist_list_item),
-                reflectiveFactoryFor(GistViewHolder.class, GistViewHolder.computeMaxDigits(items), avatarHelper));
+                reflectiveFactoryFor(GistViewHolder.class, idWidth, avatarHelper));
     }
 }

File: github-android/src/main/java/com/github/mobile/android/issue/LabelsDrawable.java
Patch:
@@ -2,13 +2,13 @@
 
 import static android.graphics.Color.BLACK;
 import static android.graphics.Color.WHITE;
+import static android.graphics.Typeface.DEFAULT_BOLD;
 import static java.util.Locale.US;
 import android.graphics.Canvas;
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.graphics.Path;
 import android.graphics.Rect;
-import android.graphics.Typeface;
 import android.graphics.drawable.PaintDrawable;
 
 import java.util.Arrays;
@@ -54,7 +54,7 @@ public int compare(Label lhs, Label rhs) {
         });
 
         Paint p = getPaint();
-        p.setTypeface(Typeface.DEFAULT_BOLD);
+        p.setTypeface(DEFAULT_BOLD);
         p.setTextSize(textSize);
 
         final Rect bounds = new Rect();

File: github-android/src/main/java/com/github/mobile/android/GitHubModule.java
Patch:
@@ -67,7 +67,7 @@ GitHubClient client(Account account, AccountManager accountManager) {
         return configureClient(new GitHubClient() {
             protected HttpURLConnection configureRequest(final HttpURLConnection request) {
                 super.configureRequest(request);
-                request.setRequestProperty(HEADER_ACCEPT, "application/vnd.github.beta.html+json");
+                request.setRequestProperty(HEADER_ACCEPT, "application/vnd.github.beta.full+json");
                 return request;
             }
         }, account, accountManager);

File: github-android/src/main/java/com/github/mobile/android/issue/IssueDashboardActivity.java
Patch:
@@ -34,7 +34,7 @@ protected void onCreate(Bundle savedInstanceState) {
         setTitle(string.dashboard_issues_title);
         getSupportActionBar().setDisplayHomeAsUpEnabled(true);
 
-        pager.setAdapter(new IssueDashboardPagerAdapter(getApplicationContext(), getSupportFragmentManager()));
+        pager.setAdapter(new IssueDashboardPagerAdapter(getResources(), getSupportFragmentManager()));
         indicator.setViewPager(pager);
     }
 

File: github-android/src/main/java/com/github/mobile/android/gist/GistsActivity.java
Patch:
@@ -133,9 +133,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
         case id.create_gist:
             startActivityForResult(new Intent(context, ShareGistActivity.class), REQUEST_CREATE);
             return true;
-        case id.refresh:
-            gists.refresh();
-            return true;
         case android.R.id.home:
             Intent intent = new Intent(this, HomeActivity.class);
             intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistActivity.java
Patch:
@@ -152,8 +152,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
         case id.gist_delete:
             ConfirmDialogFragment.show(this, REQUEST_CONFIRM_DELETE, "Confirm Delete",
                     "Are you sure you want to delete this Gist?");
-        case id.gist_refresh:
-            gistFragment.refresh();
         default:
             return super.onOptionsItemSelected(item);
         }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueBrowseActivity.java
Patch:
@@ -134,9 +134,6 @@ public void success(IssueFilter response) {
                 }
             });
             return true;
-        case id.refresh:
-            issues.refresh();
-            return true;
         case android.R.id.home:
             Intent intent = RepoBrowseActivity.createIntent(repo.getOwner());
             intent.addFlags(FLAG_ACTIVITY_CLEAR_TOP | FLAG_ACTIVITY_SINGLE_TOP);

File: github-android/src/main/java/com/github/mobile/android/gist/GistsFragment.java
Patch:
@@ -74,7 +74,7 @@ public List<Gist> loadInBackground() {
     @Override
     protected ViewHoldingListAdapter<Gist> adapterFor(List<Gist> items) {
         return new ViewHoldingListAdapter<Gist>(items, viewInflatorFor(getActivity(), layout.gist_list_item),
-                reflectiveFactoryFor(GistViewHolder.class));
+                reflectiveFactoryFor(GistViewHolder.class, GistViewHolder.computeMaxDigits(items)));
     }
 
     @Override

File: github-android/src/main/java/com/github/mobile/android/issue/IssueFragment.java
Patch:
@@ -73,7 +73,7 @@ public IssueFragment setId(int id) {
      */
     public IssueFragment updateIssue(final Issue issue) {
         if (bodyView != null)
-            new IssueBodyViewHolder(imageGetter, bodyView).updateViewFor(issue);
+            new IssueHeaderViewHolder(bodyView, imageGetter, avatarHelper, getResources()).updateViewFor(issue);
         return this;
     }
 
@@ -128,8 +128,8 @@ protected ListAdapter adapterFor(List<FullIssue> items) {
         List<Comment> comments = !items.isEmpty() ? items.get(0).getComments() : Collections.<Comment> emptyList();
 
         if (issue != null) {
-            bodyView = getActivity().getLayoutInflater().inflate(layout.issue_view_body, null);
-            new IssueBodyViewHolder(imageGetter, bodyView).updateViewFor(issue);
+            bodyView = getActivity().getLayoutInflater().inflate(layout.issue_header, null);
+            updateIssue(issue);
             getListView().addHeaderView(bodyView);
         }
 

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistActivity.java
Patch:
@@ -151,7 +151,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
             startActivityForResult(CreateCommentActivity.createIntent(), REQUEST_CODE_COMMENT);
             return true;
         case id.gist_delete:
-            ConfirmDialogFragment.confirm(this, REQUEST_CONFIRM_DELETE, "Confirm Delete",
+            ConfirmDialogFragment.show(this, REQUEST_CONFIRM_DELETE, "Confirm Delete",
                     "Are you sure you want to delete this Gist?");
         case id.gist_refresh:
             gistFragment.refresh();

File: github-android/src/main/java/com/github/mobile/android/issue/LabelsDialog.java
Patch:
@@ -2,8 +2,8 @@
 
 import android.app.ProgressDialog;
 
-import com.github.mobile.android.ConfirmDialogFragment;
 import com.github.mobile.android.DialogFragmentActivity;
+import com.github.mobile.android.MultiChoiceDialogFragment;
 
 import java.util.Collections;
 import java.util.Comparator;
@@ -102,6 +102,6 @@ public void show(List<Label> selectedLabels) {
                     checked[i] = true;
             }
         }
-        ConfirmDialogFragment.confirm(activity, requestCode, "Select Labels: ", null, names, checked);
+        MultiChoiceDialogFragment.show(activity, requestCode, "Select Labels: ", null, names, checked);
     }
 }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueBrowseActivity.java
Patch:
@@ -126,6 +126,9 @@ public void success(IssueFilter response) {
                 }
             });
             return true;
+        case id.refresh:
+            issues.refresh();
+            return true;
         default:
             return super.onOptionsItemSelected(item);
         }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueBrowseActivity.java
Patch:
@@ -21,6 +21,7 @@
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.menu;
+import com.github.mobile.android.R.string;
 import com.github.mobile.android.RequestFuture;
 import com.github.mobile.android.util.AvatarHelper;
 import com.github.mobile.android.util.GitHubIntents.Builder;
@@ -77,6 +78,7 @@ public static Intent createIntent(IssueFilter filter) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(layout.repo_issue_list);
+        setTitle(string.Issues_title);
 
         ((TextView) findViewById(id.tv_repo_name)).setText(repo.getName());
         ((TextView) findViewById(id.tv_owner_name)).setText(repo.getOwner().getLogin() + " /");

File: github-android/src/main/java/com/github/mobile/android/util/GitHubIntents.java
Patch:
@@ -143,7 +143,8 @@ public Builder repo(Repository repository) {
          * @return this builder
          */
         public Builder issue(Issue issue) {
-            return repo(createFromUrl(issue.getHtmlUrl())).add(EXTRA_ISSUE_NUMBER, issue.getNumber());
+            return repo(createFromUrl(issue.getHtmlUrl())).add(EXTRA_ISSUE, issue).add(EXTRA_ISSUE_NUMBER,
+                    issue.getNumber());
         }
 
         /**

File: github-android/src/main/java/com/github/mobile/android/issue/FilterIssuesActivity.java
Patch:
@@ -18,6 +18,7 @@
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.menu;
+import com.github.mobile.android.R.string;
 import com.github.mobile.android.util.GitHubIntents;
 import com.google.inject.Inject;
 
@@ -78,6 +79,7 @@ public static Intent createIntent(Repository repo, IssueFilter filter) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(layout.issues_filter);
+        setTitle(getString(string.filter_issues_title));
 
         final Repository repository = (Repository) getIntent().getSerializableExtra(GitHubIntents.EXTRA_REPOSITORY);
 

File: github-android/src/main/java/com/github/mobile/android/issue/ViewIssueActivity.java
Patch:
@@ -26,6 +26,7 @@
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
 import com.github.mobile.android.R.menu;
+import com.github.mobile.android.R.string;
 import com.github.mobile.android.comment.CommentViewHolder;
 import com.github.mobile.android.comment.CreateCommentActivity;
 import com.github.mobile.android.util.Avatar;
@@ -88,11 +89,10 @@ public static Intent viewIssueIntentFor(Issue issue) {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(layout.issue_view);
+        setTitle(getString(string.issue_title) + issueNumber);
 
         imageGetter = new HttpImageGetter(this);
 
-        ((TextView) findViewById(id.tv_issue_number)).setText("Issue #" + issueNumber);
-
         loadIssue(false);
     }
 

File: github-android/src/main/java/com/github/mobile/android/issue/IssueDashboardActivity.java
Patch:
@@ -5,6 +5,7 @@
 
 import com.github.mobile.android.R.id;
 import com.github.mobile.android.R.layout;
+import com.github.mobile.android.R.string;
 import com.viewpagerindicator.TitlePageIndicator;
 
 import roboguice.activity.RoboFragmentActivity;
@@ -26,6 +27,8 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(layout.issue_dashboard);
 
+        setTitle(getString(string.dashboard_issues_title));
+
         pager.setAdapter(new IssueDashboardPagerAdapter(getApplicationContext(), getSupportFragmentManager()));
         indicator.setViewPager(pager);
     }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueDashboardPagerAdapter.java
Patch:
@@ -110,8 +110,8 @@ public List<Issue> loadInBackground() {
             @Override
             protected ListAdapter adapterFor(List<Issue> items) {
                 return new ViewHoldingListAdapter<Issue>(items, ViewInflator.viewInflatorFor(context,
-                        layout.repo_issue_list_item), ReflectiveHolderFactory.reflectiveFactoryFor(
-                        RepoIssueViewHolder.class, RepoIssueViewHolder.computeMaxDigits(items)));
+                        layout.dashboard_issue_list_item), ReflectiveHolderFactory.reflectiveFactoryFor(
+                        DashboardIssueViewHolder.class, RepoIssueViewHolder.computeMaxDigits(items)));
             }
 
             @Override

File: github-android/src/main/java/com/github/mobile/android/issue/IssuesFragment.java
Patch:
@@ -180,6 +180,6 @@ public List<Issue> loadInBackground() {
     @Override
     protected ListAdapter adapterFor(List<Issue> items) {
         return new ViewHoldingListAdapter<Issue>(items, viewInflatorFor(getActivity(), layout.repo_issue_list_item),
-                reflectiveFactoryFor(RepoIssueViewHolder.class));
+                reflectiveFactoryFor(RepoIssueViewHolder.class, RepoIssueViewHolder.computeMaxDigits(items)));
     }
 }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueFilter.java
Patch:
@@ -229,7 +229,6 @@ public CharSequence toDisplay() {
 
         if (labels != null && !labels.isEmpty()) {
             StringBuilder builder = new StringBuilder("Labels: ");
-            builder.append("Labels: ");
             for (String label : labels)
                 builder.append(label).append(',').append(' ');
             builder.deleteCharAt(builder.length() - 1);

File: github-android/src/main/java/com/github/mobile/android/comment/CreateCommentActivity.java
Patch:
@@ -45,7 +45,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
         case id.apply:
             String comment = ((EditText) findViewById(id.et_comment)).getText().toString();
             Intent intent = new Intent();
-            intent.putExtra(GitHubIntents.EXTRA_COMMENT, comment);
+            intent.putExtra(GitHubIntents.EXTRA_COMMENT_BODY, comment);
             setResult(RESULT_OK, intent);
             finish();
             return true;

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistActivity.java
Patch:
@@ -2,7 +2,7 @@
 
 import static android.view.View.INVISIBLE;
 import static android.view.View.VISIBLE;
-import static com.github.mobile.android.util.GitHubIntents.EXTRA_COMMENT;
+import static com.github.mobile.android.util.GitHubIntents.EXTRA_COMMENT_BODY;
 import static com.github.mobile.android.util.GitHubIntents.EXTRA_GIST;
 import static com.github.mobile.android.util.GitHubIntents.EXTRA_GIST_ID;
 import static com.madgag.android.listviews.ReflectiveHolderFactory.reflectiveFactoryFor;
@@ -158,7 +158,7 @@ public boolean onOptionsItemSelected(MenuItem item) {
 
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (RESULT_OK == resultCode && REQUEST_CODE_COMMENT == requestCode && data != null) {
-            String comment = data.getStringExtra(EXTRA_COMMENT);
+            String comment = data.getStringExtra(EXTRA_COMMENT_BODY);
             if (comment != null && comment.length() > 0) {
                 createComment(comment);
                 return;

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistActivity.java
Patch:
@@ -4,6 +4,7 @@
 import static android.view.View.VISIBLE;
 import static com.github.mobile.android.util.GitHubIntents.EXTRA_GIST;
 import static com.github.mobile.android.util.GitHubIntents.EXTRA_GIST_ID;
+import static com.madgag.android.listviews.ReflectiveHolderFactory.reflectiveFactoryFor;
 import android.app.ProgressDialog;
 import android.content.Intent;
 import android.os.Bundle;
@@ -140,8 +141,8 @@ public List<Comment> call() throws Exception {
 
             protected void onSuccess(List<Comment> gistComments) throws Exception {
                 comments.setAdapter(new ViewHoldingListAdapter<Comment>(gistComments, ViewInflator.viewInflatorFor(
-                        ViewGistActivity.this, layout.comment_view_item), CommentViewHolder.createFactory(
-                        ViewGistActivity.this, imageGetter)));
+                        ViewGistActivity.this, layout.comment_view_item), reflectiveFactoryFor(CommentViewHolder
+                        .class, ViewGistActivity.this, imageGetter)));
             }
 
             protected void onException(Exception e) throws RuntimeException {

File: github-android/src/main/java/com/github/mobile/android/gist/ViewGistFileActivity.java
Patch:
@@ -50,7 +50,7 @@ protected void onCreate(Bundle savedInstanceState) {
         final Gist gist = (Gist) getIntent().getSerializableExtra(EXTRA_GIST);
         final GistFile file = (GistFile) getIntent().getSerializableExtra(EXTRA_GIST_FILE);
         gistFile.setText(file.getFilename());
-        gistId.setText("from Gist " + gist.getId());
+        gistId.setText("Gist " + gist.getId());
         SourceEditor.showSource(webView, file.getFilename(), new Object() {
             public String toString() {
                 return file.getContent();

File: github-android/src/main/java/com/github/mobile/android/issue/IssueBrowseActivity.java
Patch:
@@ -113,8 +113,6 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     private void loadIssues(final Repository repo, IssueFilter filter) {
         final List<Issue> all = new ArrayList<Issue>();
         final Iterator<Map<String, String>> filters = filter.iterator();
-        if (!filters.hasNext())
-            return;
         final RequestFuture<List<Issue>> callback = new RequestFuture<List<Issue>>() {
 
             public void success(List<Issue> issues) {

File: github-android/src/main/java/com/github/mobile/android/issue/IssueFilter.java
Patch:
@@ -173,6 +173,9 @@ public void remove() {
 
         final Map<String, String> base = new HashMap<String, String>();
 
+        base.put(IssueService.FIELD_SORT, IssueService.SORT_CREATED);
+        base.put(IssueService.FIELD_DIRECTION, IssueService.DIRECTION_DESCENDING);
+
         if (assignee != null && assignee.length() > 0)
             base.put(IssueService.FILTER_ASSIGNEE, assignee);
 

File: github-android/src/main/java/com/github/mobile/android/HomeActivity.java
Patch:
@@ -71,13 +71,11 @@ public View getView(int position, View convertView, ViewGroup parent) {
     @InjectView(R.id.lv_orgs)
     private ListView orgsList;
 
-    @Override
     public boolean onCreateOptionsMenu(Menu menu) {
         getMenuInflater().inflate(R.menu.welcome, menu);
         return true;
     }
 
-    @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
             case R.id.gists:

File: github-android/src/main/java/com/github/mobile/android/issue/RepoIssueViewHolder.java
Patch:
@@ -2,6 +2,7 @@
 
 import static android.text.Html.fromHtml;
 import static com.github.mobile.android.util.Time.relativeTimeFor;
+import android.graphics.Paint;
 import android.view.View;
 import android.widget.TextView;
 
@@ -49,6 +50,8 @@ public RepoIssueViewHolder(View v) {
     @Override
     public void updateViewFor(Issue i) {
         number.setText("#" + i.getNumber());
+        if (i.getClosedAt() != null)
+            number.setPaintFlags(number.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
         title.setText(i.getTitle());
         creation.setText(fromHtml("by <b>" + i.getUser().getLogin() + "</b> " + relativeTimeFor(i.getCreatedAt())));
         comments.setText(Integer.toString(i.getComments()));

File: github-android/src/main/java/com/github/mobile/android/HomeActivity.java
Patch:
@@ -78,8 +78,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
             final LinearLayout view = (LinearLayout) getLayoutInflater().inflate(layout.org_item, null);
             User user = getItem(position);
             ((TextView) view.findViewById(R.id.tv_org_name)).setText(user.getLogin());
-            Avatar.bind(HomeActivity.this, ((ImageView) view.findViewById(R.id.iv_gravatar)), user.getLogin(),
-                    user.getAvatarUrl());
+            Avatar.bind(HomeActivity.this, ((ImageView) view.findViewById(R.id.iv_gravatar)), user);
             return view;
         }
     }

File: github-android/src/main/java/com/github/mobile/android/issue/IssueBrowseActivity.java
Patch:
@@ -46,8 +46,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         final Repository repo = (Repository) getIntent().getSerializableExtra("repository");
         ((TextView) findViewById(id.tv_repo_name)).setText(repo.getName());
-        Avatar.bind(this, (ImageView) findViewById(id.iv_gravatar), repo.getOwner().getLogin(), repo.getOwner()
-                .getAvatarUrl());
+        Avatar.bind(this, (ImageView) findViewById(id.iv_gravatar), repo.getOwner());
         loadIssues(repo);
 
         issueList.setOnItemClickListener(new OnItemClickListener() {

File: github-android/src/main/java/com/github/mobile/android/repo/RepoBrowseActivity.java
Patch:
@@ -82,7 +82,7 @@ protected void onCreate(Bundle savedInstanceState) {
         user = (User) getIntent().getSerializableExtra("user");
 
         ((TextView) findViewById(R.id.tv_org_name)).setText(user.getLogin());
-        Avatar.bind(this, ((ImageView) findViewById(R.id.iv_gravatar)), user.getLogin(), user.getAvatarUrl());
+        Avatar.bind(this, ((ImageView) findViewById(R.id.iv_gravatar)), user);
 
         repoList.setOnItemClickListener(new OnItemClickListener() {
 

File: github-android/src/main/java/com/github/mobile/android/DashboardActivity.java
Patch:
@@ -9,6 +9,7 @@
 import android.support.v4.view.ViewPager;
 import android.widget.TabHost;
 
+import com.github.mobile.android.gist.GistFragment;
 import com.github.mobile.android.gist.GistsActivity;
 import com.github.mobile.android.ui.WelcomeActivity;
 import com.github.mobile.android.ui.fragments.IssuesFragment;
@@ -43,7 +44,7 @@ protected void onCreate(Bundle savedInstanceState) {
 
         addTab("issues", issues, IssuesFragment.class);
         addTab("pulls", pull_requests, PullRequestsFragment.class);
-        addTab("gists", gists, GistsActivity.class);
+        addTab("gists", gists, GistFragment.class);
 
         if (savedInstanceState != null) {
             tabHost.setCurrentTabByTag(savedInstanceState.getString(BUNDLE_KEY_TAB));
@@ -59,8 +60,7 @@ protected void onResume() {
     }
 
     private void addTab(String tag, int indicator, Class<?> clazz) {
-        tabsAdapter.addTab(tabHost.newTabSpec(tag).setIndicator(this.getResources().getString(indicator)), clazz,
-                null);
+        tabsAdapter.addTab(tabHost.newTabSpec(tag).setIndicator(this.getResources().getString(indicator)), clazz, null);
     }
 
     @Override

File: github-android/src/main/java/com/github/mobile/android/DashboardActivity.java
Patch:
@@ -48,7 +48,6 @@ protected void onCreate(Bundle savedInstanceState) {
         if (savedInstanceState != null) {
             tabHost.setCurrentTabByTag(savedInstanceState.getString(BUNDLE_KEY_TAB));
         }
-        tabHost.setCurrentTab(2);
     }
 
     @Override

File: github-android/src/main/java/com/github/mobile/android/ui/fragments/IssuesFragment.java
Patch:
@@ -45,7 +45,7 @@ public Loader<List<Issue>> onCreateLoader(int i, Bundle bundle) {
 			public List<Issue> loadInBackground() {
 				Log.i(TAG, "started loadInBackground");
 				try {
-					return issueService.getIssues("rtyley","agit", Collections.<String, String>emptyMap());
+					return issueService.getIssues();
 				} catch (IOException e) {
 					throw new RuntimeException(e);
 				}

File: github-android/src/main/java/com/github/mobile/android/ui/fragments/PullRequestsFragment.java
Patch:
@@ -7,6 +7,7 @@
 import android.view.View;
 import android.widget.ListAdapter;
 import com.github.mobile.android.AsyncLoader;
+import com.github.mobile.android.R;
 import com.github.mobile.android.views.IssueViewHolder;
 import com.github.mobile.android.views.PullRequestViewHolder;
 import com.google.inject.Inject;
@@ -24,6 +25,7 @@
 import java.util.List;
 
 import static com.github.mobile.android.R.layout.issue_list_item;
+import static com.github.mobile.android.R.layout.pull_request_list_item;
 import static com.madgag.android.listviews.ViewInflator.viewInflatorFor;
 
 public class PullRequestsFragment extends ListLoadingFragment<PullRequest> {
@@ -34,7 +36,7 @@ public class PullRequestsFragment extends ListLoadingFragment<PullRequest> {
 
 	@Override
 	protected ListAdapter adapterFor(List<PullRequest> pullRequests) {
-		return new ViewHoldingListAdapter<PullRequest>(pullRequests, viewInflatorFor(getActivity(), issue_list_item), new ViewHolderFactory<PullRequest>() {
+		return new ViewHoldingListAdapter<PullRequest>(pullRequests, viewInflatorFor(getActivity(), pull_request_list_item), new ViewHolderFactory<PullRequest>() {
 			public ViewHolder<PullRequest> createViewHolderFor(View view) {
 				return new PullRequestViewHolder(view);
 			}

File: github-android/src/main/java/com/github/mobile/android/authenticator/GitHubAuthenticatorActivity.java
Patch:
@@ -184,6 +184,9 @@ public User call() throws Exception {
                 @Override
                 protected void onException(Exception e) throws RuntimeException {
                     mMessage.setText(e.getMessage());
+                    if (e instanceof RequestException && ((RequestException) e).getStatus()==401) {
+                        passwordEdit.setText("");
+                    }
                 }
 
                 public void onSuccess(User user) {

File: github-android/src/main/java/com/github/mobile/android/gist/ShareGistActivity.java
Patch:
@@ -26,6 +26,7 @@
 import org.eclipse.egit.github.core.service.GistService;
 
 import roboguice.activity.RoboActivity;
+import roboguice.inject.ContextScopedProvider;
 import roboguice.inject.InjectView;
 import roboguice.util.RoboAsyncTask;
 
@@ -48,7 +49,7 @@ public class ShareGistActivity extends RoboActivity {
 	@InjectView(R.id.createGistButton)
 	private Button createButton;
 
-	@Inject Provider<GistService> gistServiceProvider;
+	@Inject ContextScopedProvider<GistService> gistServiceProvider;
 
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
@@ -92,7 +93,7 @@ public Gist call() throws Exception {
 				file.setContent(content);
 				file.setFilename(name);
 				gist.setFiles(Collections.singletonMap(name, file));
-				return gistServiceProvider.get().createGist(gist);
+				return gistServiceProvider.get(ShareGistActivity.this).createGist(gist);
 			}
 
 			protected void onSuccess(Gist gist) throws Exception {

File: github-android/src/main/java/com/github/mobile/android/sync/GitHubSyncAdapter.java
Patch:
@@ -9,8 +9,9 @@
 import android.util.Log;
 import com.google.inject.Inject;
 import com.google.inject.Singleton;
+import roboguice.inject.ContextSingleton;
 
-@Singleton
+@ContextSingleton
 class GitHubSyncAdapter extends AbstractThreadedSyncAdapter {
     private static final String TAG = "SA";
 

File: github-android/src/main/java/com/github/mobile/android/sync/GitHubSyncAdapterService.java
Patch:
@@ -3,15 +3,15 @@
 import android.content.Intent;
 import android.os.IBinder;
 import com.google.inject.Inject;
-import com.google.inject.Provider;
+import roboguice.inject.ContextScopedProvider;
 import roboguice.service.RoboService;
 
 public class GitHubSyncAdapterService extends RoboService {
 
-	@Inject Provider<GitHubSyncAdapter> syncAdapterProvider;
+	@Inject ContextScopedProvider<GitHubSyncAdapter> syncAdapterProvider;
 
 	@Override
 	public IBinder onBind(Intent intent) {
-        return syncAdapterProvider.get().getSyncAdapterBinder();
+        return syncAdapterProvider.get(this).getSyncAdapterBinder();
 	}
 }
\ No newline at end of file

File: github-android-integration-tests/src/main/java/com/github/mobile/android/GitHubApiTest.java
Patch:
@@ -11,7 +11,7 @@ public class GitHubApiTest extends AndroidTestCase {
 
     public void testRepoApi() throws Exception {
         RepositoryService service = new RepositoryService();
-    	for (Repository repo : service.getRepositories("defunkt")) {
+    	for (Repository repo : service.getRepositories("git")) {
             Log.d(TAG, repo.getName() + " Watchers: " + repo.getWatchers());
         }
     }

File: github-android/src/main/java/com/github/mobile/android/LogFactory.java
Patch:
@@ -7,13 +7,13 @@
 import static android.util.Log.v;
 import static android.util.Log.w;
 
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogConfigurationException;
+import shade.org.apache.commons.logging.Log;
+import shade.org.apache.commons.logging.LogConfigurationException;
 
 /**
  * Log
  */
-public class LogFactory extends org.apache.commons.logging.LogFactory {
+public class LogFactory extends shade.org.apache.commons.logging.LogFactory {
 
 	private final String TAG = "GHLog";
 

