File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java
Patch:
@@ -261,7 +261,7 @@ public boolean onScale(ScaleGestureDetector detector) {
         float dr = detector.getScaleFactor();
         float wantedZoom = pdfView.getZoom() * dr;
         float minZoom = Math.min(MINIMUM_ZOOM, pdfView.getMinZoom());
-        float maxZoom = Math.max(MAXIMUM_ZOOM, pdfView.getMaxZoom());
+        float maxZoom = Math.min(MAXIMUM_ZOOM, pdfView.getMaxZoom());
         if (wantedZoom < minZoom) {
             dr = minZoom / pdfView.getZoom();
         } else if (wantedZoom > maxZoom) {

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java
Patch:
@@ -83,6 +83,9 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
 
     private boolean checkLinkTapped(float x, float y) {
         PdfFile pdfFile = pdfView.pdfFile;
+        if (pdfFile == null) {
+            return false;
+        }
         float mappedX = -pdfView.getCurrentXOffset() + x;
         float mappedY = -pdfView.getCurrentYOffset() + y;
         int page = pdfFile.getPageAtOffset(pdfView.isSwipeVertical() ? mappedY : mappedX, pdfView.getZoom());

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java
Patch:
@@ -189,7 +189,7 @@ private void onScrollEnd(MotionEvent event) {
 
     @Override
     public void onLongPress(MotionEvent e) {
-        boolean onLongPressHandled = pdfView.callbacks.callOnLongPress(e);
+        pdfView.callbacks.callOnLongPress(e);
     }
 
     @Override

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PdfFile.java
Patch:
@@ -129,8 +129,7 @@ public SizeF getPageSize(int pageIndex) {
     }
 
     public SizeF getScaledPageSize(int pageIndex, float zoom) {
-        int docPage = documentPage(pageIndex);
-        SizeF size = getPageSize(docPage);
+        SizeF size = getPageSize(pageIndex);
         return new SizeF(size.getWidth() * zoom, size.getHeight() * zoom);
     }
 

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java
Patch:
@@ -1014,7 +1014,7 @@ public boolean isSwipeEnabled() {
         return enableSwipe;
     }
 
-    public void setSwipeVertical(boolean swipeVertical) {
+    private void setSwipeVertical(boolean swipeVertical) {
         this.swipeVertical = swipeVertical;
     }
 

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/util/PageSizeCalculator.java
Patch:
@@ -63,9 +63,9 @@ public SizeF getOptimalMaxHeightPageSize() {
     private void calculateMaxPages() {
         switch (fitPolicy) {
             case HEIGHT:
-                optimalMaxWidthPageSize = fitHeight(originalMaxWidthPageSize, viewSize.getHeight());
                 optimalMaxHeightPageSize = fitHeight(originalMaxHeightPageSize, viewSize.getHeight());
                 heightRatio = optimalMaxHeightPageSize.getHeight() / originalMaxHeightPageSize.getHeight();
+                optimalMaxWidthPageSize = fitHeight(originalMaxWidthPageSize, originalMaxWidthPageSize.getHeight() * heightRatio);
                 break;
             case BOTH:
                 SizeF localOptimalMaxWidth = fitBoth(originalMaxWidthPageSize, viewSize.getWidth(), viewSize.getHeight());
@@ -77,9 +77,9 @@ private void calculateMaxPages() {
                 widthRatio = optimalMaxWidthPageSize.getWidth() / originalMaxWidthPageSize.getWidth();
                 break;
             default:
-                optimalMaxHeightPageSize = fitWidth(originalMaxHeightPageSize, viewSize.getWidth());
                 optimalMaxWidthPageSize = fitWidth(originalMaxWidthPageSize, viewSize.getWidth());
                 widthRatio = optimalMaxWidthPageSize.getWidth() / originalMaxWidthPageSize.getWidth();
+                optimalMaxHeightPageSize = fitWidth(originalMaxHeightPageSize, originalMaxHeightPageSize.getWidth() * widthRatio);
                 break;
         }
     }

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java
Patch:
@@ -598,6 +598,9 @@ public boolean isRecycled() {
     @Override
     public void computeScroll() {
         super.computeScroll();
+        if (isInEditMode()) {
+            return;
+        }
         animationManager.computeFling();
     }
 

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java
Patch:
@@ -1005,7 +1005,7 @@ ScrollDir getScrollDir() {
     }
 
     void loadPageByOffset() {
-    	if(0==getPageCount()){
+    	if(0 == getPageCount()){
             return ;
         }
         float offset, optimal, screenCenter;

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java
Patch:
@@ -1005,6 +1005,9 @@ ScrollDir getScrollDir() {
     }
 
     void loadPageByOffset() {
+    	if(0==getPageCount()){
+            return ;
+        }
         float offset, optimal, screenCenter;
         float spacingPerPage = spacingPx - (spacingPx / getPageCount());
         if (swipeVertical) {

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/PDFView.java
Patch:
@@ -267,12 +267,12 @@ ScrollHandle getScrollHandle() {
     private boolean annotationRendering = false;
 
     /**
-     * True if the view should render during scaling - default<br/>
+     * True if the view should render during scaling<br/>
      * Can not be forced on older API versions (< Build.VERSION_CODES.KITKAT) as the GestureDetector does
      * not detect scrolling while scaling.<br/>
      * False otherwise
      */
-    private boolean renderDuringScale = true;
+    private boolean renderDuringScale = false;
 
     /**
      * Construct the initial view

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/DragPinchManager.java
Patch:
@@ -88,6 +88,7 @@ public boolean onSingleTapConfirmed(MotionEvent e) {
                 ps.hide();
             }
         }
+        pdfView.performClick();
         return true;
     }
 

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/util/Constants.java
Patch:
@@ -26,7 +26,7 @@ public interface Constants {
     int LOADED_SIZE = 3;
 
     /** Between 0 and 1, the thumbnails quality (default 0.2) */
-    float THUMBNAIL_RATIO = 0.2f;
+    float THUMBNAIL_RATIO = 0.3f;
 
     /**
      * The size of the rendered parts (default 256)

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/util/ArrayUtils.java
Patch:
@@ -49,7 +49,7 @@ public static int[] calculateIndexesInDuplicateArray(int[] originalUserPages) {
         }
 
         int index = 0;
-        result[0] = originalUserPages[0];
+        result[0] = index;
         for (int i = 1; i < originalUserPages.length; i++) {
             if (originalUserPages[i] != originalUserPages[i - 1]) {
                 index++;

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/ScrollBar.java
Patch:
@@ -245,6 +245,7 @@ public Parcelable onSaveInstanceState() {
     /** methods for integration with PDFView */
     void addToPDFView(PDFView pdfView) {
         this.pdfView = pdfView;
+        calculateHandlerHeight();
         pageChanged(pdfView.getCurrentPage());
     }
 

File: android-pdf-viewer/src/main/java/com/github/barteksc/pdfviewer/listener/OnDrawListener.java
Patch:
@@ -26,8 +26,9 @@ public interface OnDrawListener {
     /**
      * This method is called when the PDFView is
      * drawing its view.
-     * <p/>
+     * <p>
      * The page is starting at (0,0)
+     *
      * @param canvas        The canvas on which to draw things.
      * @param pageWidth     The width of the current page.
      * @param pageHeight    The height of the current page.

