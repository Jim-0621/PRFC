File: src/main/java/io/mycat/sqlengine/mpp/DataMergeService.java
Patch:
@@ -24,6 +24,7 @@
  *
  */
 
+import com.alibaba.druid.sql.SQLUtils;
 import io.mycat.MycatServer;
 import io.mycat.backend.mysql.BufferUtil;
 import io.mycat.backend.mysql.nio.handler.MultiNodeQueryHandler;
@@ -123,7 +124,7 @@ public void onRowMetaData(Map<String, ColMeta> columToIndx, int fieldCount) {
 						}
 					} else {
 						
-						ColMeta colMeta = columToIndx.get(colName);
+						ColMeta colMeta = columToIndx.get(SQLUtils.normalize(colName));
 						mergCols.add(new MergeCol(colMeta, mergEntry.getValue()));
 					}
 				}

File: src/main/java/io/mycat/server/parser/ServerParse.java
Patch:
@@ -677,7 +677,7 @@ static int selectCheck(String stmt, int offset) {
 					&& (c2 == 'C' || c2 == 'c')
 					&& (c3 == 'T' || c3 == 't')
 					&& (c4 == ' ' || c4 == '\t' || c4 == '\r' || c4 == '\n'
-							|| c4 == '/' || c4 == '#')) {
+							|| c4 == '/' || c4 == '#' || c4 == '*')) {
 				return (offset << 8) | SELECT;
 			}
 		}

File: src/test/java/io/mycat/util/SchemaUtilTest.java
Patch:
@@ -52,8 +52,8 @@ public void parseShowTableTest4() {
         String stmt = "SHOW TABLES WHERE table_type = 'BASE TABLE';";
         String[] fields = SchemaUtil.parseShowTable(stmt);
         assertArrayEquals(new String[]{"1", null, null, null, "WHERE", "table_type", "=", "'BASE TABLE'", "BASE TABLE"}, fields);
-        //
-        stmt = "SHOW FULL TABLES WHERE table_type = 'BASE TABLE';";
+		// 多个空格也能解析
+		stmt = "SHOW FULL    TABLES WHERE table_type = 'BASE TABLE';";
         fields = SchemaUtil.parseShowTable(stmt);
         assertArrayEquals(new String[]{"1", "FULL", null, null, "WHERE", "table_type", "=", "'BASE TABLE'", "BASE TABLE"}, fields);
         //

File: src/test/java/io/mycat/util/SchemaUtilTest.java
Patch:
@@ -52,8 +52,8 @@ public void parseShowTableTest4() {
         String stmt = "SHOW TABLES WHERE table_type = 'BASE TABLE';";
         String[] fields = SchemaUtil.parseShowTable(stmt);
         assertArrayEquals(new String[]{"1", null, null, null, "WHERE", "table_type", "=", "'BASE TABLE'", "BASE TABLE"}, fields);
-        //
-        stmt = "SHOW FULL TABLES WHERE table_type = 'BASE TABLE';";
+		// 多个空格也能解析
+		stmt = "SHOW FULL    TABLES WHERE table_type = 'BASE TABLE';";
         fields = SchemaUtil.parseShowTable(stmt);
         assertArrayEquals(new String[]{"1", "FULL", null, null, "WHERE", "table_type", "=", "'BASE TABLE'", "BASE TABLE"}, fields);
         //

File: src/test/java/io/mycat/statistic/TestConcurrentSafety.java
Patch:
@@ -78,9 +78,9 @@ public class TestConcurrentSafety {
     public void testQueryConditionAnalyzer() throws InterruptedException {
 
 
-        final QueryResult qr = new QueryResult("zhuam", ServerParse.SELECT, sql, 0, 0, 0, 0, 0,0,       "127.0.0.1");
-        final QueryResult qr2 = new QueryResult("zhuam", ServerParse.SELECT, sql2, 0, 0, 0, 0, 0,0,       "127.0.0.1");
-        final QueryResult qr3 = new QueryResult("zhuam", ServerParse.SELECT, sql3, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr = new QueryResult("zhuam", "root", ServerParse.SELECT, sql, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr2 = new QueryResult("zhuam", "root", ServerParse.SELECT, sql2, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr3 = new QueryResult("zhuam", "root", ServerParse.SELECT, sql3, 0, 0, 0, 0, 0,0,       "127.0.0.1");
 
         final QueryConditionAnalyzer analyzer = QueryConditionAnalyzer.getInstance();
         analyzer.setCf("dynamic&fnum");

File: src/test/java/io/mycat/statistic/TestConcurrentSafety.java
Patch:
@@ -78,9 +78,9 @@ public class TestConcurrentSafety {
     public void testQueryConditionAnalyzer() throws InterruptedException {
 
 
-        final QueryResult qr = new QueryResult("zhuam", ServerParse.SELECT, sql, 0, 0, 0, 0, 0,0,       "127.0.0.1");
-        final QueryResult qr2 = new QueryResult("zhuam", ServerParse.SELECT, sql2, 0, 0, 0, 0, 0,0,       "127.0.0.1");
-        final QueryResult qr3 = new QueryResult("zhuam", ServerParse.SELECT, sql3, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr = new QueryResult("zhuam", "root", ServerParse.SELECT, sql, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr2 = new QueryResult("zhuam", "root", ServerParse.SELECT, sql2, 0, 0, 0, 0, 0,0,       "127.0.0.1");
+        final QueryResult qr3 = new QueryResult("zhuam", "root", ServerParse.SELECT, sql3, 0, 0, 0, 0, 0,0,       "127.0.0.1");
 
         final QueryConditionAnalyzer analyzer = QueryConditionAnalyzer.getInstance();
         analyzer.setCf("dynamic&fnum");

File: src/main/java/io/mycat/net/mysql/FieldPacket.java
Patch:
@@ -59,6 +59,8 @@
  * @author mycat
  */
 public class FieldPacket extends MySQLPacket {
+    public static final int UNSIGNED_FLAG = 0x0020;
+
 	private static final byte[] DEFAULT_CATALOG = "def".getBytes();
 	private static final byte[] FILLER = new byte[2];
 

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -144,7 +144,8 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 
 				if ("".equals(Last_SQL_Error) && Slave_IO_Running != null
 						&& Slave_IO_Running.equals(Slave_SQL_Running) 
-						&& Slave_SQL_Running.equals("Yes")) {
+						&& Slave_SQL_Running.equals("Yes")
+						&& source.isSalveOrRead()) {
 					
 					heartbeat.setDbSynStatus(DBHeartbeat.DB_SYN_NORMAL);
 					String Seconds_Behind_Master = resultResult.get( "Seconds_Behind_Master");					

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -144,7 +144,8 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 
 				if ("".equals(Last_SQL_Error) && Slave_IO_Running != null
 						&& Slave_IO_Running.equals(Slave_SQL_Running) 
-						&& Slave_SQL_Running.equals("Yes")) {
+						&& Slave_SQL_Running.equals("Yes")
+						&& source.isSalveOrRead()) {
 					
 					heartbeat.setDbSynStatus(DBHeartbeat.DB_SYN_NORMAL);
 					String Seconds_Behind_Master = resultResult.get( "Seconds_Behind_Master");					

File: src/main/java/io/mycat/backend/BackendConnection.java
Patch:
@@ -37,6 +37,8 @@ public interface BackendConnection extends ClosableConnection {
 
 	public Object getAttachment();
 
+    public void closeWithoutRsp(String reason);
+
 	// public long getThreadId();
 
 

File: src/main/java/io/mycat/server/NonBlockingSession.java
Patch:
@@ -343,7 +343,7 @@ public void terminate() {
 
     public void closeAndClearResources(String reason) {
         for (BackendConnection node : target.values()) {
-            node.close(reason);
+            node.closeWithoutRsp(reason);
         }
         target.clear();
         clearHandlesResources();

File: src/main/java/io/mycat/net/SocketWR.java
Patch:
@@ -7,4 +7,6 @@ public abstract class SocketWR {
 	public abstract void asynRead() throws IOException;
 	public abstract void doNextWriteCheck() ;
 	public abstract boolean checkAlive();
+    public abstract void disableRead();
+    public abstract void enableRead();
 }

File: src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeHandler.java
Patch:
@@ -164,7 +164,9 @@ protected boolean decrementCountBy(int finished) {
 		Runnable callback = null;
 		lock.lock();
 		try {
-			if (zeroReached = --nodeCount == 0) {
+			nodeCount -= finished;
+			zeroReached = nodeCount == 0;
+			if (zeroReached) {
 				callback = this.terminateCallBack;
 				this.terminateCallBack = null;
 			}

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -142,7 +142,7 @@ protected Map<String, String> parseAggGroupCommon(SchemaConfig schema, SQLStatem
 			if (item.getExpr() instanceof SQLAggregateExpr)
 			{
 				SQLAggregateExpr expr = (SQLAggregateExpr) item.getExpr();
-				String method = expr.getMethodName();
+				String method = expr.getMethodName().toUpperCase();
 				boolean isHasArgument=!expr.getArguments().isEmpty();
 				if(isHasArgument)
 				{

File: src/test/java/io/mycat/memory/unsafe/row/UnsafeRowListTest.java
Patch:
@@ -9,7 +9,7 @@
 /**
  * Created by zagnix on 2016/6/27.
  */
-public class UnsafeRowList {
+public class UnsafeRowListTest {
     @Test
     public  void testUnsafeRowList(){
         ArrayList<UnsafeRow> list = new ArrayList<UnsafeRow>();

File: src/test/java/io/mycat/route/DQLRouteTest.java
Patch:
@@ -34,7 +34,7 @@ public class DQLRouteTest {
 
 	protected Map<String, SchemaConfig> schemaMap;
 	protected LayerCachePool cachePool = new SimpleCachePool();
-	protected RouteStrategy routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
+	protected RouteStrategy routeStrategy;
 	private Map<String, String> tableAliasMap = new HashMap<String, String>();
 
 	protected DruidShardingParseInfo ctx;
@@ -45,6 +45,8 @@ public DQLRouteTest() {
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
 		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
+        RouteStrategyFactory.init();
+        routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}
 
 	@Test

File: src/test/java/io/mycat/route/DeleteSqlParseTest.java
Patch:
@@ -7,6 +7,7 @@
 
 import org.junit.Test;
 
+import io.mycat.MycatServer;
 import io.mycat.SimpleCachePool;
 import io.mycat.cache.LayerCachePool;
 import io.mycat.config.loader.SchemaLoader;
@@ -31,6 +32,7 @@ public DeleteSqlParseTest() {
 		String ruleFile = "/route/rule.xml";
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
+		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
         RouteStrategyFactory.init();
         routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}

File: src/test/java/io/mycat/route/DruidMysqlRouteStrategyTest.java
Patch:
@@ -32,7 +32,7 @@
 public class DruidMysqlRouteStrategyTest extends TestCase {
     protected Map<String, SchemaConfig> schemaMap;
     protected LayerCachePool cachePool = new SimpleCachePool();
-    protected RouteStrategy routeStrategy ;
+    protected RouteStrategy routeStrategy;
 
     public DruidMysqlRouteStrategyTest() {
         String schemaFile = "/route/schema.xml";

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -142,7 +142,7 @@ protected Map<String, String> parseAggGroupCommon(SchemaConfig schema, SQLStatem
 			if (item.getExpr() instanceof SQLAggregateExpr)
 			{
 				SQLAggregateExpr expr = (SQLAggregateExpr) item.getExpr();
-				String method = expr.getMethodName();
+				String method = expr.getMethodName().toUpperCase();
 				boolean isHasArgument=!expr.getArguments().isEmpty();
 				if(isHasArgument)
 				{

File: src/main/java/io/mycat/route/util/RouterUtil.java
Patch:
@@ -1254,7 +1254,8 @@ public static RouteResultset tryRouteForTables(SchemaConfig schema, DruidShardin
 				}
 
 				if(tableConfig == null){
-					String msg = "can't find table define in schema "+ tableName + " schema:" + schema.getName();
+					String msg = "can't find table define in schema "+ tableName + 
+							" alias：" + alias + ", schema:" + schema.getName();
 					LOGGER.warn(msg);
 					throw new SQLNonTransientException(msg);
 				}

File: src/test/java/io/mycat/memory/unsafe/row/UnsafeRowListTest.java
Patch:
@@ -9,7 +9,7 @@
 /**
  * Created by zagnix on 2016/6/27.
  */
-public class UnsafeRowList {
+public class UnsafeRowListTest {
     @Test
     public  void testUnsafeRowList(){
         ArrayList<UnsafeRow> list = new ArrayList<UnsafeRow>();

File: src/test/java/io/mycat/route/DQLRouteTest.java
Patch:
@@ -34,7 +34,7 @@ public class DQLRouteTest {
 
 	protected Map<String, SchemaConfig> schemaMap;
 	protected LayerCachePool cachePool = new SimpleCachePool();
-	protected RouteStrategy routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
+	protected RouteStrategy routeStrategy;
 	private Map<String, String> tableAliasMap = new HashMap<String, String>();
 
 	protected DruidShardingParseInfo ctx;
@@ -45,6 +45,8 @@ public DQLRouteTest() {
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
 		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
+        RouteStrategyFactory.init();
+        routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}
 
 	@Test

File: src/test/java/io/mycat/route/DeleteSqlParseTest.java
Patch:
@@ -7,6 +7,7 @@
 
 import org.junit.Test;
 
+import io.mycat.MycatServer;
 import io.mycat.SimpleCachePool;
 import io.mycat.cache.LayerCachePool;
 import io.mycat.config.loader.SchemaLoader;
@@ -31,6 +32,7 @@ public DeleteSqlParseTest() {
 		String ruleFile = "/route/rule.xml";
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
+		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
         RouteStrategyFactory.init();
         routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}

File: src/test/java/io/mycat/route/DruidMysqlRouteStrategyTest.java
Patch:
@@ -32,7 +32,7 @@
 public class DruidMysqlRouteStrategyTest extends TestCase {
     protected Map<String, SchemaConfig> schemaMap;
     protected LayerCachePool cachePool = new SimpleCachePool();
-    protected RouteStrategy routeStrategy ;
+    protected RouteStrategy routeStrategy;
 
     public DruidMysqlRouteStrategyTest() {
         String schemaFile = "/route/schema.xml";

File: src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeHandler.java
Patch:
@@ -164,7 +164,9 @@ protected boolean decrementCountBy(int finished) {
 		Runnable callback = null;
 		lock.lock();
 		try {
-			if (zeroReached = --nodeCount == 0) {
+			nodeCount -= finished;
+			zeroReached = nodeCount == 0;
+			if (zeroReached) {
 				callback = this.terminateCallBack;
 				this.terminateCallBack = null;
 			}

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -142,7 +142,7 @@ protected Map<String, String> parseAggGroupCommon(SchemaConfig schema, SQLStatem
 			if (item.getExpr() instanceof SQLAggregateExpr)
 			{
 				SQLAggregateExpr expr = (SQLAggregateExpr) item.getExpr();
-				String method = expr.getMethodName();
+				String method = expr.getMethodName().toUpperCase();
 				boolean isHasArgument=!expr.getArguments().isEmpty();
 				if(isHasArgument)
 				{

File: src/main/java/io/mycat/route/util/RouterUtil.java
Patch:
@@ -1254,7 +1254,8 @@ public static RouteResultset tryRouteForTables(SchemaConfig schema, DruidShardin
 				}
 
 				if(tableConfig == null){
-					String msg = "can't find table define in schema "+ tableName + " schema:" + schema.getName();
+					String msg = "can't find table define in schema "+ tableName + 
+							" alias：" + alias + ", schema:" + schema.getName();
 					LOGGER.warn(msg);
 					throw new SQLNonTransientException(msg);
 				}

File: src/test/java/io/mycat/memory/unsafe/row/UnsafeRowListTest.java
Patch:
@@ -9,7 +9,7 @@
 /**
  * Created by zagnix on 2016/6/27.
  */
-public class UnsafeRowList {
+public class UnsafeRowListTest {
     @Test
     public  void testUnsafeRowList(){
         ArrayList<UnsafeRow> list = new ArrayList<UnsafeRow>();

File: src/test/java/io/mycat/route/DQLRouteTest.java
Patch:
@@ -34,7 +34,7 @@ public class DQLRouteTest {
 
 	protected Map<String, SchemaConfig> schemaMap;
 	protected LayerCachePool cachePool = new SimpleCachePool();
-	protected RouteStrategy routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
+	protected RouteStrategy routeStrategy;
 	private Map<String, String> tableAliasMap = new HashMap<String, String>();
 
 	protected DruidShardingParseInfo ctx;
@@ -45,6 +45,8 @@ public DQLRouteTest() {
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
 		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
+        RouteStrategyFactory.init();
+        routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}
 
 	@Test

File: src/test/java/io/mycat/route/DeleteSqlParseTest.java
Patch:
@@ -7,6 +7,7 @@
 
 import org.junit.Test;
 
+import io.mycat.MycatServer;
 import io.mycat.SimpleCachePool;
 import io.mycat.cache.LayerCachePool;
 import io.mycat.config.loader.SchemaLoader;
@@ -31,6 +32,7 @@ public DeleteSqlParseTest() {
 		String ruleFile = "/route/rule.xml";
 		SchemaLoader schemaLoader = new XMLSchemaLoader(schemaFile, ruleFile);
 		schemaMap = schemaLoader.getSchemas();
+		MycatServer.getInstance().getConfig().getSchemas().putAll(schemaMap);
         RouteStrategyFactory.init();
         routeStrategy = RouteStrategyFactory.getRouteStrategy("druidparser");
 	}

File: src/test/java/io/mycat/route/DruidMysqlRouteStrategyTest.java
Patch:
@@ -32,7 +32,7 @@
 public class DruidMysqlRouteStrategyTest extends TestCase {
     protected Map<String, SchemaConfig> schemaMap;
     protected LayerCachePool cachePool = new SimpleCachePool();
-    protected RouteStrategy routeStrategy ;
+    protected RouteStrategy routeStrategy;
 
     public DruidMysqlRouteStrategyTest() {
         String schemaFile = "/route/schema.xml";

File: src/main/java/io/mycat/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -821,6 +821,8 @@ private static RouteResultset analyseDescrSQL(SchemaConfig schema,
 				} else {
 					pos++;
 				}
+			} else {
+				break;
 			}
 		}
 

File: src/main/java/io/mycat/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -773,6 +773,8 @@ private static RouteResultset analyseDescrSQL(SchemaConfig schema,
 				} else {
 					pos++;
 				}
+			} else {
+				break;
 			}
 		}
 

File: src/main/java/io/mycat/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -37,6 +37,7 @@
 import com.alibaba.druid.stat.TableStat.Relationship;
 import com.google.common.base.Strings;
 
+import io.mycat.backend.datasource.PhysicalDBNode;
 import org.apache.commons.lang.StringUtils;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: src/main/java/io/mycat/statistic/stat/SqlResultSizeRecorder.java
Patch:
@@ -22,7 +22,7 @@ public void addSql(String sql,int resultSetSize ){
 		    sqlResultSet =this.sqlResultSetMap.get(sql);
 			sqlResultSet.count();
 			sqlResultSet.setSql(sql);
-			System.out.println(sql);
+			//System.out.println(sql);
 			sqlResultSet.setResultSetSize(resultSetSize);
 		}else{
 		sqlResultSet = new SqlResultSet();

File: src/main/java/io/mycat/statistic/stat/SqlResultSizeRecorder.java
Patch:
@@ -22,7 +22,7 @@ public void addSql(String sql,int resultSetSize ){
 		    sqlResultSet =this.sqlResultSetMap.get(sql);
 			sqlResultSet.count();
 			sqlResultSet.setSql(sql);
-			System.out.println(sql);
+			//System.out.println(sql);
 			sqlResultSet.setResultSetSize(resultSetSize);
 		}else{
 		sqlResultSet = new SqlResultSet();

File: src/main/java/io/mycat/backend/BackendConnection.java
Patch:
@@ -59,6 +59,7 @@ public void execute(RouteResultsetNode node, ServerConnection source,
 	public boolean isAutocommit();
 
 	public boolean isTxReadonly();
+	public int getSqlSelectLimit();
 
 	public long getId();
 

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,9 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.5-test-20200218220444".getBytes();
+
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.5-test-20200221125434".getBytes();
+
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.5-test-20200110142236".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.5-test-20200221125434".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/route/function/PartitionByCRC32PreSlot.java
Patch:
@@ -236,7 +236,7 @@ private static void hashTest() throws IOException {
         int count = 1024;
         String sb = genDataNodesString(count);
         TableConfig tableConf = new TableConfig("test", "id", true, false, -1, sb,
-                null, rule, true, null, false, null, null, null);
+                null, rule, true, null, false, null, null, null, false);
 
         hash.setTableConfig(tableConf);
         hash.reInit();

File: src/test/java/io/mycat/route/function/PartitionByCRC32PreSlotTest.java
Patch:
@@ -37,7 +37,7 @@ static TableConfig genTableConfig(int count) {
         RuleConfig rule = new RuleConfig("id", "crc32slot");
         String sb = genDataNodesString(count);
         TableConfig tableConf = new TableConfig("test", "id", true, false, -1, sb,
-                null, rule, true, null, false, null, null, null);
+                null, rule, true, null, false, null, null, null, false);
         return tableConf;
     }
 

File: src/main/java/io/mycat/route/function/PartitionByCRC32PreSlot.java
Patch:
@@ -236,7 +236,7 @@ private static void hashTest() throws IOException {
         int count = 1024;
         String sb = genDataNodesString(count);
         TableConfig tableConf = new TableConfig("test", "id", true, false, -1, sb,
-                null, rule, true, null, false, null, null, null);
+                null, rule, true, null, false, null, null, null, false);
 
         hash.setTableConfig(tableConf);
         hash.reInit();

File: src/test/java/io/mycat/route/function/PartitionByCRC32PreSlotTest.java
Patch:
@@ -37,7 +37,7 @@ static TableConfig genTableConfig(int count) {
         RuleConfig rule = new RuleConfig("id", "crc32slot");
         String sb = genDataNodesString(count);
         TableConfig tableConf = new TableConfig("test", "id", true, false, -1, sb,
-                null, rule, true, null, false, null, null, null);
+                null, rule, true, null, false, null, null, null, false);
         return tableConf;
     }
 

File: src/main/java/io/mycat/net/ConnectionException.java
Patch:
@@ -32,7 +32,7 @@ public class ConnectionException extends RuntimeException {
 	private final String msg;
 
 	public ConnectionException(int code, String msg) {
-		super();
+		super(msg);
 		this.code = code;
 		this.msg = msg;
 	}

File: src/main/java/io/mycat/net/ConnectionException.java
Patch:
@@ -32,7 +32,7 @@ public class ConnectionException extends RuntimeException {
 	private final String msg;
 
 	public ConnectionException(int code, String msg) {
-		super();
+		super(msg);
 		this.code = code;
 		this.msg = msg;
 	}

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.4-test-20191219155928".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.4-test-20191220204928".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/util/DecryptUtil.java
Patch:
@@ -45,7 +45,7 @@ public class DecryptUtil {
 
 	private static final String DEFAULT_PRIVATE_KEY_STRING = "MIIBVAIBADANBgkqhkiG9w0BAQEFAASCAT4wggE6AgEAAkEAocbCrurZGbC5GArEHKlAfDSZi7gFBnd4yxOt0rwTqKBFzGyhtQLu5PRKjEiOXVa95aeIIBJ6OhC2f8FjqFUpawIDAQABAkAPejKaBYHrwUqUEEOe8lpnB6lBAsQIUFnQI/vXU4MV+MhIzW0BLVZCiarIQqUXeOhThVWXKFt8GxCykrrUsQ6BAiEA4vMVxEHBovz1di3aozzFvSMdsjTcYRRo82hS5Ru2/OECIQC2fAPoXixVTVY7bNMeuxCP4954ZkXp7fEPDINCjcQDywIgcc8XLkkPcs3Jxk7uYofaXaPbg39wuJpEmzPIxi3k0OECIGubmdpOnin3HuCP/bbjbJLNNoUdGiEmFL5hDI4UdwAdAiEAtcAwbm08bKN7pwwvyqaCBC//VnEWaq39DCzxr+Z2EIk=";
 	public static final String DEFAULT_PUBLIC_KEY_STRING = "MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKHGwq7q2RmwuRgKxBypQHw0mYu4BQZ3eMsTrdK8E6igRcxsobUC7uT0SoxIjl1WveWniCASejoQtn/BY6hVKWsCAwEAAQ==";
-	private static final Logger LOGGER = LoggerFactory.getLogger(DecryptUtil.class);
+
 	public static void main(String[] args) throws Exception {
 	  System.out.println("其中 0:user:password是加密字符串,有两种格式\n"
         + "\n"

File: src/main/java/io/mycat/route/sequence/handler/IncrSequenceMySQLHandler.java
Patch:
@@ -288,7 +288,6 @@ private void executeException(BackendConnection c, Throwable e) {
 		String errMgs=e.toString();
 		LOGGER.error("{}",e);
 		IncrSequenceMySQLHandler.latestErrors.put(seqVal.seqName, errMgs);
-		LOGGER.warn("executeException   " + errMgs);
 		c.close("exception:" +errMgs);
 
 	}

File: src/main/java/io/mycat/config/model/TableConfig.java
Patch:
@@ -28,6 +28,7 @@
 import io.mycat.util.SplitUtil;
 
 import java.util.*;
+import java.util.concurrent.ThreadLocalRandom;
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 
 /**
@@ -55,7 +56,6 @@ public class TableConfig {
     // only has one level of parent
     private final boolean secondLevel;
     private final boolean partionKeyIsPrimaryKey;
-    private final Random rand = new Random();
 
     private volatile List<SQLTableElement> tableElementList;
     private volatile String tableStructureSQL;
@@ -247,7 +247,7 @@ public ArrayList<String> getDataNodes() {
     }
 
     public String getRandomDataNode() {
-        int index = Math.abs(rand.nextInt(Integer.MAX_VALUE)) % dataNodes.size();
+        int index = Math.abs(ThreadLocalRandom.current().nextInt(Integer.MAX_VALUE)) % dataNodes.size();
         return dataNodes.get(index);
     }
 

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.4-test-20191022231753".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.4-test-20191024165500".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -295,7 +295,7 @@ public SystemConfig() {
 		this.parserCommentVersion = DEFAULT_PARSER_COMMENT_VERSION;
 		this.sqlRecordCount = DEFAULT_SQL_RECORD_COUNT;
 		this.glableTableCheckPeriod = DEFAULT_GLOBAL_TABLE_CHECK_PERIOD;
-		this.useOffHeapForMerge = 1;
+		this.useOffHeapForMerge = 0;
 		this.memoryPageSize = MEMORY_PAGE_SIZE;
 		this.spillsFileBufferSize = SPILLS_FILE_BUFFER_SIZE;
 		this.useStreamOutput = 0;

File: src/main/java/io/mycat/config/model/SchemaConfig.java
Patch:
@@ -174,7 +174,7 @@ public void setDataNodeDbTypeMap(Map<String, String> dataNodeDbTypeMap)
 	}
 
 	public String getRandomDataNode() {
-		if (this.randomDataNode != null){
+		if (this.randomDataNode != null&&!"".equalsIgnoreCase(this.randomDataNode)){
 			return this.randomDataNode;
 		}
 		if (this.allDataNodeStrArr == null) {

File: src/main/java/io/mycat/backend/jdbc/JDBCConnection.java
Patch:
@@ -384,11 +384,11 @@ private void executeddl(ServerConnection sc, String sql)
 		try {
 			stmt = con.createStatement();
 			int count = stmt.executeUpdate(sql,Statement.RETURN_GENERATED_KEYS);
-			int lastInsertId = 0;
+			long lastInsertId = 0;
 			ResultSet generatedKeys = stmt.getGeneratedKeys();
 			ResultSetMetaData metaData = generatedKeys.getMetaData();
 			if (metaData.getColumnCount() == 1){
-				lastInsertId = (int) (generatedKeys.next() ? generatedKeys.getLong(1) : 0L);
+				lastInsertId = (generatedKeys.next() ? generatedKeys.getLong(1) : 0L);
 			}
 			OkPacket okPck = new OkPacket();
 			okPck.affectedRows = count;

File: src/main/java/io/mycat/backend/heartbeat/MySQLHeartbeat.java
Patch:
@@ -299,6 +299,7 @@ private void switchSourceIfNeed(String reason) {
 						int theSourceHBStatus = theSourceHB.getStatus();
 						if (theSourceHBStatus == DBHeartbeat.OK_STATUS) {
 							if (switchType == DataHostConfig.SYN_STATUS_SWITCH_DS) {
+								LOGGER.warn("switchSourceIfNeed: LagTime=" + theSourceHB.getSlaveBehindMaster());
 								if (Integer.valueOf(0).equals( theSourceHB.getSlaveBehindMaster())) {
 									LOGGER.info("try to switch datasource ,slave is synchronized to master " + theSource.getConfig());
 									pool.switchSourceOrVoted(nextId, true, reason);

File: src/main/java/io/mycat/server/parser/ServerParse.java
Patch:
@@ -696,7 +696,7 @@ static int seCheck(String stmt, int offset) {
 //  /*!mycat: sql=SELECT * FROM test where id=99 */set @pin=1;
 //                    call p_test(@pin,@pout);
 //                    select @pout;
-                    if(stmt.startsWith("/*!mycat:")||stmt.startsWith("/*#mycat:")||stmt.startsWith("/*mycat:"))
+                    if(stmt.startsWith("/*!mycat:")||stmt.startsWith("/*#mycat:")||stmt.startsWith("/*mycat:")||stmt.startsWith("/* mycat:"))
                     {
                         Matcher matcher = callPattern.matcher(stmt);
                         if (matcher.find()) {

File: src/main/java/io/mycat/manager/response/ShowDirectMemory.java
Patch:
@@ -142,7 +142,7 @@ public static void showDirectMemoryDetail(ManagerConnection c) {
                      * 该DIRECTMEMORY内存被结果集处理使用了
                      */
                     row.add("MergeMemoryPool".getBytes(c.getCharset()));
-					row.add(JavaUtils.bytesToString2(value).getBytes(c.getCharset()));
+                    row.add(JavaUtils.bytesToString2(value).getBytes(c.getCharset()));
                     row.packetId = ++packetId;
                     buffer = row.write(buffer, c, true);
                 }
@@ -160,7 +160,7 @@ public static void showDirectMemoryDetail(ManagerConnection c) {
                      * 该DIRECTMEMORY内存属于Buffer Pool管理的！
                      */
                     row.add("NetWorkBufferPool".getBytes(c.getCharset()));
-					row.add(JavaUtils.bytesToString2(value).getBytes(c.getCharset()));
+                    row.add(JavaUtils.bytesToString2(value).getBytes(c.getCharset()));
                     row.packetId = ++packetId;
                     buffer = row.write(buffer, c, true);
                 }

File: src/main/java/io/mycat/manager/handler/ZKHandler.java
Patch:
@@ -51,7 +51,7 @@ public static void handle(String stmt, ManagerConnection c, int offset) {
                 ZktoXmlMain.ZKLISTENER.notifly(ZkNofiflyCfg.ZK_NOTIFLY_LOAD_ALL.getKey());
 
                 // 执行重新加载本地配制信息
-                ReloadHandler.handle("RELOAD @@config_all", c, 7 >>> 8);
+                ReloadHandler.handle("RELOAD @@config_all", c, 6);
 
                 offset += RELOAD_FROM_ZK.length();
 

File: src/main/java/io/mycat/manager/handler/ZKHandler.java
Patch:
@@ -51,7 +51,7 @@ public static void handle(String stmt, ManagerConnection c, int offset) {
                 ZktoXmlMain.ZKLISTENER.notifly(ZkNofiflyCfg.ZK_NOTIFLY_LOAD_ALL.getKey());
 
                 // 执行重新加载本地配制信息
-                ReloadHandler.handle("RELOAD @@config_all", c, 7 >>> 8);
+                ReloadHandler.handle("RELOAD @@config_all", c, 6);
 
                 offset += RELOAD_FROM_ZK.length();
 

File: src/main/java/io/mycat/catlets/ShareJoin.java
Patch:
@@ -96,7 +96,7 @@ public void route(SystemConfig sysConfig, SchemaConfig schema,int sqlType, Strin
 			   SQLSelectStatement st=(SQLSelectStatement)statement;
 			   SQLSelectQuery sqlSelectQuery =st.getSelect().getQuery();
 				if(sqlSelectQuery instanceof MySqlSelectQueryBlock) {
-					MySqlSelectQueryBlock mysqlSelectQuery = (MySqlSelectQueryBlock)st.getSelect().getQuery();
+					MySqlSelectQueryBlock mysqlSelectQuery = (MySqlSelectQueryBlock)sqlSelectQuery;
 					joinParser=new JoinParser(mysqlSelectQuery,realSQL);
 					joinParser.parser();
 				}	

File: src/main/java/io/mycat/route/util/RouterUtil.java
Patch:
@@ -182,6 +182,8 @@ public static RouteResultset routeToSingleNode(RouteResultset rrs,
 	public static RouteResultset routeToDDLNode(RouteResultset rrs, int sqlType, String stmt,SchemaConfig schema) throws SQLSyntaxErrorException {
 		stmt = getFixedSql(stmt);
 		String tablename = "";
+		//去除sql前面的注册,如/* ApplicationName=DBeaver 6.0.1 - Main */，这个注册会导致create table出错
+		stmt = stmt.replaceFirst("\\/\\*.*\\*\\/\\s*", "");
 		final String upStmt = stmt.toUpperCase();
 		if(upStmt.startsWith("CREATE")){
 			if (upStmt.contains("CREATE INDEX ") || upStmt.contains("CREATE UNIQUE INDEX ")){

File: src/main/java/io/mycat/catlets/ShareJoin.java
Patch:
@@ -96,7 +96,7 @@ public void route(SystemConfig sysConfig, SchemaConfig schema,int sqlType, Strin
 			   SQLSelectStatement st=(SQLSelectStatement)statement;
 			   SQLSelectQuery sqlSelectQuery =st.getSelect().getQuery();
 				if(sqlSelectQuery instanceof MySqlSelectQueryBlock) {
-					MySqlSelectQueryBlock mysqlSelectQuery = (MySqlSelectQueryBlock)st.getSelect().getQuery();
+					MySqlSelectQueryBlock mysqlSelectQuery = (MySqlSelectQueryBlock)sqlSelectQuery;
 					joinParser=new JoinParser(mysqlSelectQuery,realSQL);
 					joinParser.parser();
 				}	

File: src/main/java/io/mycat/route/util/RouterUtil.java
Patch:
@@ -182,6 +182,8 @@ public static RouteResultset routeToSingleNode(RouteResultset rrs,
 	public static RouteResultset routeToDDLNode(RouteResultset rrs, int sqlType, String stmt,SchemaConfig schema) throws SQLSyntaxErrorException {
 		stmt = getFixedSql(stmt);
 		String tablename = "";
+		//去除sql前面的注册,如/* ApplicationName=DBeaver 6.0.1 - Main */，这个注册会导致create table出错
+		stmt = stmt.replaceFirst("\\/\\*.*\\*\\/\\s*", "");
 		final String upStmt = stmt.toUpperCase();
 		if(upStmt.startsWith("CREATE")){
 			if (upStmt.contains("CREATE INDEX ") || upStmt.contains("CREATE UNIQUE INDEX ")){

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190820173415".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190919003406".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/cache/impl/LevelDBPool.java
Patch:
@@ -95,7 +95,7 @@ public long getMaxSize() {
 	@Override
 	public void clearCache(String cacheName) {
 		if (cacheName != null){
-			cache.delete(cacheName.getBytes());
+			cache.delete(toByteArray(cacheName));
 		}
 	}
 

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190819171417".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190820173415".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/route/RouteService.java
Patch:
@@ -70,6 +70,7 @@ public LayerCachePool getTableId2DataNodeCache() {
 	public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
 			int sqlType, String stmt, String charset, ServerConnection sc)
 			throws SQLNonTransientException {
+		stmt = stmt.trim();
 		RouteResultset rrs = null;
 		String cacheKey = null;
 

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190819151307".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190819171417".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/backend/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -223,7 +223,7 @@ private void _execute(BackendConnection conn) {
 	private void executeException(BackendConnection c, Exception e) {
 		ErrorPacket err = new ErrorPacket();
 		err.packetId = ++packetId;
-		err.errno = ErrorCode.ERR_FOUND_EXCEPION;
+		err.errno = ErrorCode.ERR_FOUND_EXCEPTION;
 		err.message = StringUtil.encode(e.toString(), session.getSource().getCharset());
 
 		this.backConnectionErr(err, c);

File: src/main/java/io/mycat/config/ErrorCode.java
Patch:
@@ -41,7 +41,7 @@ public interface ErrorCode {
     public static final int ERR_NOT_SUPPORTED = 3010;
     public static final int ERR_MULTI_NODE_FAILED = 3011;
     public static final int ERR_WRONG_USED = 3012;
-    public static final int ERR_FOUND_EXCEPION = 3344;
+    public static final int ERR_FOUND_EXCEPTION = 3344;
 	// mysql error code
     public static final int ER_HASHCHK = 1000;
     public static final int ER_NISAMCHK = 1001;

File: src/main/java/io/mycat/server/handler/ServerPrepareHandler.java
Patch:
@@ -114,7 +114,7 @@ public void sendLongData(byte[] data) {
 			try {
 				pstmt.appendLongData(paramId, packet.getLongData());
 			} catch (IOException e) {
-				source.writeErrMessage(ErrorCode.ERR_FOUND_EXCEPION, e.getMessage());
+				source.writeErrMessage(ErrorCode.ERR_FOUND_EXCEPTION, e.getMessage());
 			}
 		}
 	}
@@ -132,7 +132,7 @@ public void reset(byte[] data) {
 			pstmt.resetLongData();
 			source.write(OkPacket.OK);
 		} else {
-			source.writeErrMessage(ErrorCode.ERR_FOUND_EXCEPION, "can not reset prepare statement : " + pstmtForId.get(pstmtId));
+			source.writeErrMessage(ErrorCode.ERR_FOUND_EXCEPTION, "can not reset prepare statement : " + pstmtForId.get(pstmtId));
 		}
 	} 
     

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190809210613".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.3-release-20190815215752".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/route/function/AbstractPartitionAlgorithm.java
Patch:
@@ -3,6 +3,7 @@
 import io.mycat.config.model.TableConfig;
 import io.mycat.config.model.rule.RuleAlgorithm;
 
+import io.mycat.util.StringUtil;
 import java.io.Serializable;
 import java.util.List;
 
@@ -38,8 +39,8 @@ public Integer[] calculateRange(String beginValue, String endValue)  {
 	 */
 	public static Integer[] calculateSequenceRange(AbstractPartitionAlgorithm algorithm, String beginValue, String endValue)  {
 		Integer begin = 0, end = 0;
-		begin = algorithm.calculate(beginValue);
-		end = algorithm.calculate(endValue);
+		begin = algorithm.calculate(StringUtil.removeBackquote(beginValue));
+		end = algorithm.calculate(StringUtil.removeBackquote(endValue));
 
 		if(begin == null || end == null){
 			return new Integer[0];

File: src/main/java/io/mycat/route/function/PartitionByCRC32PreSlot.java
Patch:
@@ -7,6 +7,7 @@
 import io.mycat.config.model.TableConfig;
 import io.mycat.config.model.rule.RuleAlgorithm;
 import io.mycat.config.model.rule.RuleConfig;
+import io.mycat.util.StringUtil;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -248,7 +249,7 @@ private static void hashTest() throws IOException {
         int c = 0;
         for (int i = 100_0000; i < total + 100_0000; i++) {//假设分片键从100万开始
             c++;
-            int h = hash.calculate(Integer.toString(i));
+            int h = hash.calculate(StringUtil.removeBackquote(Integer.toString(i)));
             if (h >= count) {
                 System.out.println("error:" + h);
             }

File: src/main/java/io/mycat/route/function/PartitionByDate.java
Patch:
@@ -1,5 +1,6 @@
 package io.mycat.route.function;
 
+import io.mycat.util.StringUtil;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.*;
@@ -78,7 +79,7 @@ public Integer[] calculateRange(String beginValue, String endValue)  {
 			Calendar cal = Calendar.getInstance();
 			List<Integer> list = new ArrayList<Integer>();
 			while(beginDate.getTime() <= endDate.getTime()){
-				Integer nodeValue = this.calculate(format.format(beginDate));
+				Integer nodeValue = this.calculate(StringUtil.removeBackquote(format.format(beginDate)));
 				if(Collections.frequency(list, nodeValue) < 1) list.add(nodeValue);
 				cal.setTime(beginDate);
 				cal.add(Calendar.DATE, 1);

File: src/main/java/io/mycat/route/function/PartitionByHotDate.java
Patch:
@@ -1,5 +1,6 @@
 package io.mycat.route.function;
 
+import io.mycat.util.StringUtil;
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
@@ -99,13 +100,13 @@ public Integer[] calculateRange(String beginValue, String endValue)  {
 			}else{
 				Integer [] re = null;
 				Integer begin = 0, end = 0;
-				end = this.calculate(beginValue);
+				end = this.calculate(StringUtil.removeBackquote(beginValue));
 				boolean hasLimit = false;
 				if(endTime-limitDate > 0){
 					endTime = limitDate;
 					hasLimit = true;
 				}
-				begin = this.calculate(formatter.get().format(endTime));
+				begin = this.calculate(StringUtil.removeBackquote(formatter.get().format(endTime)));
 				if(begin == null || end == null){
 					return re;
 				}

File: src/main/java/io/mycat/route/function/PartitionByMod.java
Patch:
@@ -23,6 +23,7 @@
  */
 package io.mycat.route.function;
 
+import io.mycat.util.StringUtil;
 import java.math.BigInteger;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -84,7 +85,7 @@ private static void hashTest()  {
 		int c=0;
 		for(int i=100_0000;i<total+100_0000;i++){//假设分片键从100万开始
 			c++;
-			int h=hash.calculate(Integer.toString(i));
+			int h=hash.calculate(StringUtil.removeBackquote(Integer.toString(i)));
 			bucket[h]++;
 			List<Integer> list=hashed.get(h);
 			if(list==null){
@@ -119,7 +120,7 @@ private static void rehashTest(List<Integer> partition)  {
 		int c=0;
 		for(int i:partition){//假设分片键从100万开始
 			c++;
-			int h=hash.calculate(Integer.toString(i));
+			int h=hash.calculate(StringUtil.removeBackquote(Integer.toString(i)));
 			bucket[h]++;
 		}
 		System.out.println(c+"   "+total);

File: src/main/java/io/mycat/route/parser/druid/impl/DruidInsertParser.java
Patch:
@@ -175,7 +175,7 @@ private void parserSingleInsert(SchemaConfig schema, RouteResultset rrs, String
 				isFound = true;
 				String column = StringUtil.removeBackquote(insertStmt.getColumns().get(i).toString());
 
-				String shardingValue = getShardingValue(insertStmt.getValues().getValues().get(i));
+				String shardingValue = StringUtil.removeBackquote(getShardingValue(insertStmt.getValues().getValues().get(i)));
 				insertStmt.getValues().getValues().set(i,new SQLCharExpr(shardingValue));
 				ctx.setSql(insertStmt.toString());
 
@@ -242,10 +242,10 @@ private void parserBatchInsert(SchemaConfig schema, RouteResultset rrs, String p
 						throw new SQLNonTransientException(msg);
 					}
 					SQLExpr expr = valueClause.getValues().get(shardingColIndex);
-					String shardingValue = getShardingValue(expr);
+					String shardingValue = StringUtil.removeBackquote(getShardingValue(expr));
 					valueClause.getValues().set(shardingColIndex, new SQLCharExpr(shardingValue));
 
-					Integer nodeIndex = algorithm.calculate(shardingValue);
+					Integer nodeIndex = algorithm.calculate(StringUtil.removeBackquote(shardingValue));
 					if(algorithm instanceof SlotFunction){
 						slotsMap.put(nodeIndex,((SlotFunction) algorithm).slotValue()) ;
 					}

File: src/main/java/io/mycat/util/rehasher/RehashLauncher.java
Patch:
@@ -1,5 +1,6 @@
 package io.mycat.util.rehasher;
 
+import io.mycat.util.StringUtil;
 import java.io.File;
 import java.io.IOException;
 import java.io.PrintStream;
@@ -54,7 +55,7 @@ public void run(){
                 while (!CollectionUtil.isEmpty(list)) {
         			for(int i=0,l=list.size();i<l;i++){
         				Map<String, Object> sf=list.get(i);
-        				Integer hash=alg.calculate(sf.get(args.getShardingField()).toString());
+        				Integer hash=alg.calculate(StringUtil.removeBackquote(sf.get(args.getShardingField()).toString()));
         				String host=rehashHosts[hash];
         				total++;
         				if(host.equals(hostWithDatabase)){

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190722182248".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190724155252".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190721003349".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190722182248".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/net/NIOSocketWR.java
Patch:
@@ -19,7 +19,7 @@ public class NIOSocketWR extends SocketWR {
 	private final SocketChannel channel;
 	private final AtomicBoolean writing = new AtomicBoolean(false);
 	protected static final Logger LOGGER = LoggerFactory.getLogger(NIOSocketWR.class);
-	public static final ByteBuffer EMPTY_BYTEBUFFER  = ByteBuffer.allocate(0);
+	public static final ByteBuffer EMPTY_BYTEBUFFER  = ByteBuffer.allocate(1);
 	public NIOSocketWR(AbstractConnection con) {
 		this.con = con;
 		this.channel = (SocketChannel) con.channel;
@@ -77,6 +77,8 @@ public boolean checkAlive() {
 		} catch (IOException e) {
 			LOGGER.error("",e);
 			return false;
+		}finally {
+			EMPTY_BYTEBUFFER.position(0);
 		}
 	}
 

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190718172901".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.7.2-release-20190721003349".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/config/MycatPrivileges.java
Patch:
@@ -368,9 +368,10 @@ public boolean checkDataNodeDmlPrivilege(String user, String dataNode, String sq
 						isPassed = true;
 					}
 				}
+			} else {
+				return true;
 			}
 		}
 		return isPassed;
 	}
-
 }
\ No newline at end of file

File: src/main/java/io/mycat/route/RouteResultsetNode.java
Patch:
@@ -292,7 +292,7 @@ public int compareTo(RouteResultsetNode obj) {
 			return 1;
 		}
 		int c = this.name.compareTo(obj.name);
-		if(!this.isDisctTable()){
+		if(!this.isDisctTable()||obj.subTableName == null){
 			return c;
 		}else{
 			if(c==0){

File: src/main/java/io/mycat/route/RouteResultsetNode.java
Patch:
@@ -283,7 +283,7 @@ public int compareTo(RouteResultsetNode obj) {
 			return 1;
 		}
 		int c = this.name.compareTo(obj.name);
-		if(!this.isDisctTable()){
+		if(!this.isDisctTable()||obj.subTableName == null){
 			return c;
 		}else{
 			if(c==0){

File: src/main/java/io/mycat/route/sequence/handler/IncrSequenceMySQLHandler.java
Patch:
@@ -286,6 +286,7 @@ private void executeException(BackendConnection c, Throwable e) {
 //		seqVal.dbfinished = true;
 		seqVal.setDbfinished();
 		String errMgs=e.toString();
+		LOGGER.error("{}",e);
 		IncrSequenceMySQLHandler.latestErrors.put(seqVal.seqName, errMgs);
 		LOGGER.warn("executeException   " + errMgs);
 		c.close("exception:" +errMgs);

File: src/main/java/io/mycat/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -173,6 +173,9 @@ public void start(String sql)
         }
         schema = MycatServer.getInstance().getConfig()
                 .getSchemas().get(serverConnection.getSchema());
+        if (schema == null){
+            throw new RuntimeException("please sql:use schema  before load data");
+        }
         tableId2DataNodeCache = (LayerCachePool) MycatServer.getInstance().getCacheService().getCachePool("TableID2DataNodeCache");
         tableName = statement.getTableName().getSimpleName().toUpperCase();
         tableConfig = schema.getTables().get(tableName);

File: src/main/java/io/mycat/net/NIOConnector.java
Patch:
@@ -161,7 +161,7 @@ private void finishConnect(SelectionKey key, Object att) {
 
 	private boolean finishConnect(AbstractConnection c, SocketChannel channel)
 			throws IOException {
-		if (channel.isConnectionPending()) {
+		if (channel.finishConnect()) {
 			channel.finishConnect();
 
 			c.setLocalPort(channel.socket().getLocalPort());

File: src/test/java/io/mycat/util/SplitUtilTest.java
Patch:
@@ -111,7 +111,7 @@ public void test7() {
         Assert.assertArrayEquals(new String[] {}, SplitUtil.split("", '0', '0', '0', '0'));
         Assert.assertArrayEquals(new String[] {"0-1-2"}, SplitUtil.split("0-1-2", '3', ' ', '0', '0'));
         Assert.assertArrayEquals(new String[] {"011"}, SplitUtil.split("0-1-2", '-', ' ', '1', '0'));
-        Assert.assertArrayEquals(new String[] {"0111"}, SplitUtil.split("0-1-2", '-', ' ', '1', '1'));}
+        Assert.assertArrayEquals(new String[] {"0111"}, SplitUtil.split("0-1-2", '-', ' ', '1', '1'));
     }
 
     @Test

File: src/main/java/io/mycat/net/FrontendConnection.java
Patch:
@@ -238,7 +238,7 @@ public boolean canResponse() {
 		long resId = this.responseSqlId.get();
 		if(this.executeSqlId > resId) {
 			boolean t = this.responseSqlId.compareAndSet(resId, this.executeSqlId); 
-			if(t && LOGGER.isDebugEnabled()) {
+			if(false) {
 				StackTraceElement stack[] = Thread.currentThread().getStackTrace();  
 				StringBuilder sb = new StringBuilder();
                 for(int i=0;i<stack.length;i++){

File: src/main/java/io/mycat/backend/heartbeat/MySQLHeartbeat.java
Patch:
@@ -262,7 +262,9 @@ private void setTimeout(MySQLDetector detector) {
 	 */
 	private void switchSourceIfNeed(String reason) {
 		int switchType = source.getHostConfig().getSwitchType();
-		if (switchType == DataHostConfig.NOT_SWITCH_DS) {
+		String notSwitch = source.getHostConfig().getNotSwitch();
+		if (notSwitch.equals(DataHostConfig.FOVER_NOT_SWITCH_DS) 
+				|| switchType == DataHostConfig.NOT_SWITCH_DS) {
 			if (LOGGER.isDebugEnabled()) {
 				LOGGER.debug("not switch datasource ,for switchType is "
 						+ DataHostConfig.NOT_SWITCH_DS);

File: src/main/java/io/mycat/server/handler/ServerPrepareHandler.java
Patch:
@@ -61,6 +61,7 @@ public class ServerPrepareHandler implements FrontendPrepareHandler {
 	static {
 		Builder escapeBuilder = Escapers.builder();
 		escapeBuilder.addEscape('\'', "\\'");
+		escapeBuilder.addEscape('\"', "\\\"");
 		escapeBuilder.addEscape('$', "\\$");
 		varcharEscaper = escapeBuilder.build();
 	}

File: src/main/java/io/mycat/server/handler/ServerPrepareHandler.java
Patch:
@@ -61,6 +61,7 @@ public class ServerPrepareHandler implements FrontendPrepareHandler {
 	static {
 		Builder escapeBuilder = Escapers.builder();
 		escapeBuilder.addEscape('\'', "\\'");
+		escapeBuilder.addEscape('\"', "\\\"");
 		escapeBuilder.addEscape('$', "\\$");
 		varcharEscaper = escapeBuilder.build();
 	}

File: src/main/java/io/mycat/config/model/FirewallConfig.java
Patch:
@@ -67,7 +67,7 @@ public final class FirewallConfig {
     private Map<String, List<UserConfig>> whitehost;//具体host的白名单
 	private Map<Pattern, List<UserConfig>> whitehostMask;//网段的白名单
 	public static Pattern getMaskPattern(String host){
-		return Pattern.compile(host.replaceAll(".","\\.").replaceAll("[*]","[0-9]*").replaceAll("%","[0-9]*"));
+		return Pattern.compile(host.replaceAll("\\.","\\\\.").replaceAll("[*]","[0-9]*").replaceAll("%","[0-9]*"));
 	}
     private List<String> blacklist;
     private boolean check = false;

File: src/main/java/io/mycat/config/model/FirewallConfig.java
Patch:
@@ -67,7 +67,7 @@ public final class FirewallConfig {
     private Map<String, List<UserConfig>> whitehost;//具体host的白名单
 	private Map<Pattern, List<UserConfig>> whitehostMask;//网段的白名单
 	public static Pattern getMaskPattern(String host){
-		return Pattern.compile(host.replaceAll(".","\\.").replaceAll("[*]","[0-9]*").replaceAll("%","[0-9]*"));
+		return Pattern.compile(host.replaceAll("\\.","\\\\.").replaceAll("[*]","[0-9]*").replaceAll("%","[0-9]*"));
 	}
     private List<String> blacklist;
     private boolean check = false;

File: src/main/java/io/mycat/backend/datasource/PhysicalDBNode.java
Patch:
@@ -69,7 +69,7 @@ public void getConnectionFromSameSource(String schema,boolean autocommit,
 		PhysicalDatasource ds = this.dbPool.findDatasouce(exitsCon);
 		if (ds == null) {
 			throw new RuntimeException(
-					"can't find exits connection,maybe fininshed " + exitsCon);
+					"can't find existing connection,maybe fininshed " + exitsCon);
 		} else {
 			ds.getConnection(schema,autocommit, handler, attachment);
 		}

File: src/main/java/io/mycat/buffer/ByteBufferArena.java
Patch:
@@ -110,7 +110,7 @@ public ByteBuffer allocate(int reqCapacity) {
             }else {
                 memoryUsage.put(threadId, (long) reqCapacity);
             }
-            if (sharedOptsCount.contains(thread)) {
+            if (sharedOptsCount.containsKey(thread)) {
                 int currentCount = sharedOptsCount.get(thread);
                 currentCount++;
                 sharedOptsCount.put(thread,currentCount);
@@ -149,7 +149,7 @@ public void recycle(ByteBuffer byteBuffer) {
             if (memoryUsage.containsKey(threadId)){
                 memoryUsage.put(threadId,memoryUsage.get(thread.getId())-size);
             }
-            if (sharedOptsCount.contains(thread)) {
+            if (sharedOptsCount.containsKey(thread)) {
                 int currentCount = sharedOptsCount.get(thread);
                 currentCount--;
                 sharedOptsCount.put(thread,currentCount);

File: src/main/java/io/mycat/buffer/ByteBufferArena.java
Patch:
@@ -110,7 +110,7 @@ public ByteBuffer allocate(int reqCapacity) {
             }else {
                 memoryUsage.put(threadId, (long) reqCapacity);
             }
-            if (sharedOptsCount.contains(thread)) {
+            if (sharedOptsCount.containsKey(thread)) {
                 int currentCount = sharedOptsCount.get(thread);
                 currentCount++;
                 sharedOptsCount.put(thread,currentCount);
@@ -149,7 +149,7 @@ public void recycle(ByteBuffer byteBuffer) {
             if (memoryUsage.containsKey(threadId)){
                 memoryUsage.put(threadId,memoryUsage.get(thread.getId())-size);
             }
-            if (sharedOptsCount.contains(thread)) {
+            if (sharedOptsCount.containsKey(thread)) {
                 int currentCount = sharedOptsCount.get(thread);
                 currentCount--;
                 sharedOptsCount.put(thread,currentCount);

File: src/main/java/io/mycat/backend/datasource/PhysicalDBPool.java
Patch:
@@ -102,7 +102,7 @@ public PhysicalDBPool(String name, DataHostConfig conf,
 		this.readSources = readSources;
 		this.allDs = this.genAllDataSources();
 		
-		LOGGER.info("total resouces of dataHost " + this.hostName + " is :" + allDs.size());
+		LOGGER.info("total resources of dataHost " + this.hostName + " is :" + allDs.size());
 		
 		setDataSourceProps();
 	}
@@ -451,9 +451,9 @@ public void stopHeartbeat() {
 	 * @param reason
 	 */
 	public void clearDataSources(String reason) {
-		LOGGER.info("clear datasoure of pool " + this.hostName);
+		LOGGER.info("clear datasource of pool " + this.hostName);
 		for (PhysicalDatasource source : this.allDs) {			
-			LOGGER.info("clear datasoure of pool  " + this.hostName + " ds:" + source.getConfig());
+			LOGGER.info("clear datasource of pool  " + this.hostName + " ds:" + source.getConfig());
 			source.clearCons(reason);
 			source.stopHeartbeat();
 		}

File: src/main/java/io/mycat/backend/datasource/PhysicalDBNode.java
Patch:
@@ -69,7 +69,7 @@ public void getConnectionFromSameSource(String schema,boolean autocommit,
 		PhysicalDatasource ds = this.dbPool.findDatasouce(exitsCon);
 		if (ds == null) {
 			throw new RuntimeException(
-					"can't find exits connection,maybe fininshed " + exitsCon);
+					"can't find existing connection,maybe fininshed " + exitsCon);
 		} else {
 			ds.getConnection(schema,autocommit, handler, attachment);
 		}

File: src/main/java/io/mycat/backend/datasource/PhysicalDBPool.java
Patch:
@@ -362,7 +362,7 @@ private String getMessage(int index, String info) {
 	private boolean initSource(int index, PhysicalDatasource ds) {
 		int initSize = ds.getConfig().getMinCon();
 		
-		LOGGER.info("init backend myqsl source ,create connections total " + initSize + " for " + ds.getName() + " index :" + index);
+		LOGGER.info("init backend mysql source ,create connections total " + initSize + " for " + ds.getName() + " index :" + index);
 		
 		CopyOnWriteArrayList<BackendConnection> list = new CopyOnWriteArrayList<BackendConnection>();
 		GetConnectionHandler getConHandler = new GetConnectionHandler(list, initSize);
@@ -451,7 +451,7 @@ public void stopHeartbeat() {
 	 * @param reason
 	 */
 	public void clearDataSources(String reason) {
-		LOGGER.info("clear datasours of pool " + this.hostName);
+		LOGGER.info("clear datasoure of pool " + this.hostName);
 		for (PhysicalDatasource source : this.allDs) {			
 			LOGGER.info("clear datasoure of pool  " + this.hostName + " ds:" + source.getConfig());
 			source.clearCons(reason);

File: src/main/java/io/mycat/migrate/MigrateDumpRunner.java
Patch:
@@ -77,7 +77,7 @@ public void run() {
                     !StringUtil.isEmpty(config.getPassword()) ? "-p" + config.getPassword() : "", MigrateUtils.getDatabaseFromDataNode(task.getFrom()), task.getTable(), "--single-transaction", "-q", "--default-character-set=utf8mb4", "--hex-blob", "--where=" + makeWhere(task), "--master-data=1", "-T" + file.getPath()
 
                     , "--fields-enclosed-by=" + encose + "\"", "--fields-terminated-by=,", "--lines-terminated-by=\\n", "--fields-escaped-by=\\\\");
-            LOGGER.info("migrate 中 mysqlsump准备执行命令,如果超长时间没有响应则可能出错");
+            LOGGER.info("migrate 中 mysqldump准备执行命令,如果超长时间没有响应则可能出错");
             LOGGER.info(args.toString());
             String result = ProcessUtil.execReturnString(args);
             int logIndex = result.indexOf("MASTER_LOG_FILE='");

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -31,8 +31,8 @@ public abstract class Versions {
     /**协议版本**/
     public static final byte PROTOCOL_VERSION = 10;
 
-    /**服务器版本**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.5-BETA-20170424174212".getBytes();
+    /**服务器版�?**/
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.6.1-test-20180621111411".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();
@@ -42,7 +42,7 @@ public static void setServerVersion(String version) {
                 break;
         }
 
-        // 生成mycat version信息
+        // 重新拼接mycat version字节数组
         byte[] newMycatVersion = new byte[mysqlVersionPart.length + SERVER_VERSION.length - startIndex];
         System.arraycopy(mysqlVersionPart, 0, newMycatVersion, 0, mysqlVersionPart.length);
         System.arraycopy(SERVER_VERSION, startIndex, newMycatVersion, mysqlVersionPart.length,

File: src/main/java/io/mycat/sqlengine/mpp/ColMeta.java
Patch:
@@ -76,6 +76,9 @@ public int getColIndex() {
 		return colIndex;
 	}
 
+	public void setColIndex(int colIndex) {
+		this.colIndex = colIndex;
+	}
 	public int getColType() {
 		return colType;
 	}

File: src/main/java/io/mycat/server/handler/MigrateHandler.java
Patch:
@@ -114,7 +114,7 @@ public static void handle(String stmt, ServerConnection c) {
             if (!force) {
                 String msg = "";
                 msg += "Mycat can temporarily execute the migration command.If other mycat does not connect to this zookeeper, they will not be able to perceive changes in the migration task.\n";
-                msg += "You can command tas follow:\n\nmigrate -table=schema.test -add=dn2,dn3 -force=true\n\nto perform the migration.\n";
+                msg += "You can command as follow:\n\nmigrate -table=schema.test -add=dn2,dn3 -force=true\n\nto perform the migration.\n";
                 LOGGER.error(msg);
                 writeErrMessage(c, msg);
                 return;

File: src/main/java/io/mycat/util/dataMigrator/DataMigratorUtil.java
Patch:
@@ -359,7 +359,7 @@ public static  String printMigrateInfo(String title,Map<String,String> map,Strin
   	}
   	
   	public static  <T> boolean isKeyExistIgnoreCase(Map<String,T> map,String key){
-		return map.containsKey(key.toLowerCase()) || map.containsKey(key.toUpperCase());
+		return map.containsKey(key.toLowerCase()) || map.containsKey(key.toUpperCase()) || map.containsKey(key);
 	}
 	
 	public static <T> T getValueIgnoreCase(Map<String,T> map,String key){

File: src/main/java/io/mycat/backend/datasource/PhysicalDatasource.java
Patch:
@@ -449,7 +449,7 @@ private BackendConnection takeCon(BackendConnection conn,
 			String schema) {
 
 		conn.setBorrowed(true);
-		LOGGER.debug("take con {}",conn);
+
 //		if(takeConnectionContext.putIfAbsent(conn.getId(), TAKE_CONNECTION_FLAG) == null) {
 //			incrementActiveCountSafe();
 //		}

File: src/main/java/io/mycat/backend/mysql/nio/MySQLConnection.java
Patch:
@@ -269,7 +269,6 @@ public boolean isClosedOrQuit() {
 	}
 
 	protected void sendQueryCmd(String query) {
-		LOGGER.debug("SQL:{} {}",query, this);
 		CommandPacket packet = new CommandPacket();
 		packet.packetId = 0;
 		packet.command = MySQLPacket.COM_QUERY;
@@ -465,7 +464,6 @@ private void synAndDoExecute(String xaTxID, RouteResultsetNode rrn,
 				synCount);
 		// syn schema
 		if (schemaCmd != null) {
-			LOGGER.debug(schemaCmd + "{}" ,this);
 			schemaCmd.write(this);
 		}
 		// and our query sql to multi command at last

File: src/main/java/io/mycat/backend/datasource/PhysicalDBNode.java
Patch:
@@ -118,7 +118,7 @@ public void getConnection(String schema,boolean autoCommit, RouteResultsetNode r
 					LOGGER.debug("rrs.getRunOnSlave() " + rrs.getRunOnSlave());
 					PhysicalDatasource writeSource=dbPool.getSource();
 					//记录写节点写负载值
-					writeSource.setReadCount();
+					writeSource.setWriteCount();
 					writeSource.getConnection(schema, autoCommit,
 							handler, attachment);
 					rrs.setCanRunInReadDB(false);

File: src/main/java/io/mycat/backend/datasource/PhysicalDBNode.java
Patch:
@@ -118,7 +118,7 @@ public void getConnection(String schema,boolean autoCommit, RouteResultsetNode r
 					LOGGER.debug("rrs.getRunOnSlave() " + rrs.getRunOnSlave());
 					PhysicalDatasource writeSource=dbPool.getSource();
 					//记录写节点写负载值
-					writeSource.setReadCount();
+					writeSource.setWriteCount();
 					writeSource.getConnection(schema, autoCommit,
 							handler, attachment);
 					rrs.setCanRunInReadDB(false);

File: src/main/java/io/mycat/manager/handler/ConfFileHandler.java
Patch:
@@ -71,7 +71,7 @@ public final class ConfFileHandler {
 	static {
 		int i = 0;
 		byte packetId = 0;
-		header.packetId = 1;
+		header.packetId = ++packetId;
 
 		fields[i] = PacketUtil.getField("DATA", Fields.FIELD_TYPE_VAR_STRING);
 		fields[i++].packetId = ++packetId;

File: src/main/java/io/mycat/manager/handler/ConfFileHandler.java
Patch:
@@ -71,7 +71,7 @@ public final class ConfFileHandler {
 	static {
 		int i = 0;
 		byte packetId = 0;
-		header.packetId = 1;
+		header.packetId = ++packetId;
 
 		fields[i] = PacketUtil.getField("DATA", Fields.FIELD_TYPE_VAR_STRING);
 		fields[i++].packetId = ++packetId;

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -431,6 +431,7 @@ public void changeSql(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt
 					sqlIdentifierExpr.setParent(from);
 					sqlIdentifierExpr.setName(node.getSubTableName());
 					SQLExprTableSource from2 = new SQLExprTableSource(sqlIdentifierExpr);
+					from2.setAlias(from.getAlias());
 					mysqlSelectQuery.setFrom(from2);
 					node.setStatement(stmt.toString());
 	            }

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -65,7 +65,7 @@ public class ServerConnection extends FrontendConnection {
 	 * 标志是否执行了lock tables语句，并处于lock状态
 	 */
 	private volatile boolean isLocked = false;
-
+	
 	public ServerConnection(NetworkChannel channel)
 			throws IOException {
 		super(channel);

File: src/main/java/io/mycat/util/ResultSetUtil.java
Patch:
@@ -84,7 +84,8 @@ public static String getColumnValAsString(byte[] row,
 		RowDataPacket rowDataPkg = new RowDataPacket(fieldValues.size());
 		rowDataPkg.read(row);
 		byte[] columnData = rowDataPkg.fieldValues.get(columnIndex);
-		return new String(columnData);
+		//columnData Ϊ��ʱ,ֱ�ӷ���null
+		return columnData==null?null:new String(columnData);
 	}
 
 	public static byte[] getColumnVal(byte[] row, List<byte[]> fieldValues,

File: src/test/java/io/mycat/route/DruidMysqlSqlParserTest.java
Patch:
@@ -74,7 +74,6 @@ public void testLimitPage() throws SQLNonTransientException {
         Assert.assertEquals(0, rrs.getNodes()[0].getLimitStart());
         Assert.assertEquals(10, rrs.getNodes()[0].getLimitSize());
         Assert.assertEquals("dn1", rrs.getNodes()[0].getName());
-
 	}
 
 	@Test

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -65,7 +65,7 @@ public class ServerConnection extends FrontendConnection {
 	 * 标志是否执行了lock tables语句，并处于lock状态
 	 */
 	private volatile boolean isLocked = false;
-
+	
 	public ServerConnection(NetworkChannel channel)
 			throws IOException {
 		super(channel);

File: src/main/java/io/mycat/util/ResultSetUtil.java
Patch:
@@ -84,7 +84,8 @@ public static String getColumnValAsString(byte[] row,
 		RowDataPacket rowDataPkg = new RowDataPacket(fieldValues.size());
 		rowDataPkg.read(row);
 		byte[] columnData = rowDataPkg.fieldValues.get(columnIndex);
-		return new String(columnData);
+		//columnData Ϊ��ʱ,ֱ�ӷ���null
+		return columnData==null?null:new String(columnData);
 	}
 
 	public static byte[] getColumnVal(byte[] row, List<byte[]> fieldValues,

File: src/test/java/io/mycat/route/DruidMysqlSqlParserTest.java
Patch:
@@ -74,7 +74,6 @@ public void testLimitPage() throws SQLNonTransientException {
         Assert.assertEquals(0, rrs.getNodes()[0].getLimitStart());
         Assert.assertEquals(10, rrs.getNodes()[0].getLimitSize());
         Assert.assertEquals("dn1", rrs.getNodes()[0].getName());
-
 	}
 
 	@Test

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,7 +32,7 @@ public abstract class Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版�?**/
-    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.5-BETA-20170605191533".getBytes();
+    public static byte[] SERVER_VERSION = "5.6.29-mycat-1.6.5-BETA-20170606161018".getBytes();
 
     public static void setServerVersion(String version) {
         byte[] mysqlVersionPart = version.getBytes();

File: src/main/java/io/mycat/net/NIOProcessor.java
Patch:
@@ -172,7 +172,8 @@ private void frontendCheck() {
 
 			// 清理已关闭连接，否则空闲检查。
 			if (c.isClosed()) {
-				c.cleanup();
+				// 此处在高并发情况下会存在并发问题, fixed #1072  极有可能解决了 #700
+				//c.cleanup();
 				it.remove();
 				this.frontendsLength.decrementAndGet();
 			} else {

File: src/main/java/io/mycat/net/NIOProcessor.java
Patch:
@@ -172,7 +172,8 @@ private void frontendCheck() {
 
 			// 清理已关闭连接，否则空闲检查。
 			if (c.isClosed()) {
-				c.cleanup();
+				// 此处在高并发情况下会存在并发问题, fixed #1072  极有可能解决了 #700
+				//c.cleanup();
 				it.remove();
 				this.frontendsLength.decrementAndGet();
 			} else {

File: src/main/java/io/mycat/sqlengine/mpp/tmp/RowDataCmp.java
Patch:
@@ -29,6 +29,9 @@ public int compare(RowDataPacket o1, RowDataPacket o2) {
 			int colIndex = tmp[i].colMeta.colIndex;
 			byte[] left = o1.fieldValues.get(colIndex);
 			byte[] right = o2.fieldValues.get(colIndex);
+			// fix bug 当 order by 列 为  null 时, 报空指针的异常.
+			if(left==null){ left = new byte[0];}
+			if(right==null){ right = new byte[0];}
 			if (tmp[i].orderType == type) {
 				cmp = RowDataPacketSorter.compareObject(left, right, tmp[i]);
 			} else {

File: src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -465,7 +465,7 @@ public void outputMergeResult(final ServerConnection source, final byte[] eof, I
 				end = Integer.MAX_VALUE;
 
 			if(prepared) {
-				while (iter.hasNext()){
+ 				while (iter.hasNext()){
 					UnsafeRow row = iter.next();
 					if(index >= start){
 						row.packetId = ++packetId;
@@ -762,8 +762,8 @@ public void handleDataProcessException(Exception e) {
 
 	@Override
 	public void rowResponse(final byte[] row, final BackendConnection conn) {
-		
-		if (errorRepsponsed.get()) {
+ 		
+ 		if (errorRepsponsed.get()) {
 			// the connection has been closed or set to "txInterrupt" properly
 			//in tryErrorFinished() method! If we close it here, it can
 			// lead to tx error such as blocking rollback tx for ever.

File: src/main/java/io/mycat/backend/postgresql/PostgreSQLBackendConnection.java
Patch:
@@ -333,7 +333,7 @@ public void onConnectfinish() {
 		}
 	}
 
-	public final int getPacketLength(ByteBuffer buffer, int offset) {
+	protected final int getPacketLength(ByteBuffer buffer, int offset) {
 		// Pg 协议获取包长度的方法和mysql 不一样
 		return PIOUtils.redInteger4(buffer, offset + 1) + 1;
 	}

File: src/main/java/io/mycat/backend/postgresql/PostgreSQLBackendConnection.java
Patch:
@@ -333,7 +333,7 @@ public void onConnectfinish() {
 		}
 	}
 
-	protected final int getPacketLength(ByteBuffer buffer, int offset) {
+	public final int getPacketLength(ByteBuffer buffer, int offset) {
 		// Pg 协议获取包长度的方法和mysql 不一样
 		return PIOUtils.redInteger4(buffer, offset + 1) + 1;
 	}

File: src/main/java/io/mycat/backend/postgresql/PostgreSQLBackendConnection.java
Patch:
@@ -333,7 +333,7 @@ public void onConnectfinish() {
 		}
 	}
 
-	public final int getPacketLength(ByteBuffer buffer, int offset) {
+	protected final int getPacketLength(ByteBuffer buffer, int offset) {
 		// Pg 协议获取包长度的方法和mysql 不一样
 		return PIOUtils.redInteger4(buffer, offset + 1) + 1;
 	}

File: src/main/java/io/mycat/backend/postgresql/PostgreSQLBackendConnection.java
Patch:
@@ -333,7 +333,7 @@ public void onConnectfinish() {
 		}
 	}
 
-	protected final int getPacketLength(ByteBuffer buffer, int offset) {
+	public final int getPacketLength(ByteBuffer buffer, int offset) {
 		// Pg 协议获取包长度的方法和mysql 不一样
 		return PIOUtils.redInteger4(buffer, offset + 1) + 1;
 	}

File: src/main/java/io/mycat/backend/mysql/nio/handler/MiddlerResultHandler.java
Patch:
@@ -2,8 +2,6 @@
 
 import java.util.List;
 
-import io.mycat.backend.mysql.DataType;
-
 /**
  * 中间结果处理器
  * @author huangyiming

File: src/main/java/io/mycat/catlets/ShareJoin.java
Patch:
@@ -422,11 +422,11 @@ public boolean onRowData(String dataNode, byte[] rowData) {
 			}else{
 				
 				 if(middlerResultHandler instanceof MiddlerQueryResultHandler){
-					 if(middlerResultHandler.getDataType().equalsIgnoreCase("string")){
+					// if(middlerResultHandler.getDataType().equalsIgnoreCase("string")){
 						 byte[] columnData = rowDataPkg.fieldValues.get(0);
 						 String rowValue =    new String(columnData);
 						 middlerResultHandler.add(rowValue);	
-						 }
+				   //}
 				 }
 				
 			} 

File: src/main/java/io/mycat/backend/mysql/nio/handler/MiddlerResultHandler.java
Patch:
@@ -2,8 +2,6 @@
 
 import java.util.List;
 
-import io.mycat.backend.mysql.DataType;
-
 /**
  * 中间结果处理器
  * @author huangyiming

File: src/main/java/io/mycat/catlets/ShareJoin.java
Patch:
@@ -422,11 +422,11 @@ public boolean onRowData(String dataNode, byte[] rowData) {
 			}else{
 				
 				 if(middlerResultHandler instanceof MiddlerQueryResultHandler){
-					 if(middlerResultHandler.getDataType().equalsIgnoreCase("string")){
+					// if(middlerResultHandler.getDataType().equalsIgnoreCase("string")){
 						 byte[] columnData = rowDataPkg.fieldValues.get(0);
 						 String rowValue =    new String(columnData);
 						 middlerResultHandler.add(rowValue);	
-						 }
+				   //}
 				 }
 				
 			} 

File: src/main/java/io/mycat/memory/unsafe/utils/sort/UnsafeExternalRowSorter.java
Patch:
@@ -106,7 +106,6 @@ public long getSortTimeNanos() {
   }
 
   public void cleanupResources() {
-      logger.debug("row sorter clean up resources!!!");
       sorter.cleanupResources();
   }
 

File: src/main/java/io/mycat/sqlengine/mpp/UnsafeRowGrouper.java
Patch:
@@ -637,7 +637,7 @@ private void aggregateRow(UnsafeRow toRow, UnsafeRow newRow) throws UnsupportedE
 		}
 
 		for (MergeCol merg : mergCols) {
-             if(merg.mergeType != MergeCol.MERGE_AVG) {
+             if(merg.mergeType != MergeCol.MERGE_AVG && merg.colMeta !=null) {
 				 byte[] result = null;
 				 byte[] left = null;
 				 byte[] right = null;

File: src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -704,6 +704,7 @@ public void rowResponse(final byte[] row, final BackendConnection conn) {
 				// @since 2016-03-25
 				dataMergeSvr.onNewRecord(dataNode, row);
 			} else {
+				row[3] = ++packetId;
 				RowDataPacket rowDataPkg =null;
 				// cache primaryKey-> dataNode
 				if (primaryKeyIndex != -1) {
@@ -713,7 +714,6 @@ public void rowResponse(final byte[] row, final BackendConnection conn) {
 					LayerCachePool pool = MycatServer.getInstance().getRouterservice().getTableId2DataNodeCache();
 					pool.putIfAbsent(priamaryKeyTable, primaryKey, dataNode);
 				}
-				row[3] = ++packetId;
 				if( prepared ) {
 					if(rowDataPkg==null) {
 						rowDataPkg = new RowDataPacket(fieldCount);

File: src/main/java/io/mycat/net/mysql/BinaryRowDataPacket.java
Patch:
@@ -83,6 +83,7 @@ public void read(List<FieldPacket> fieldPackets, RowDataPacket rowDataPk) {
 		this.fieldPackets = fieldPackets;
 		this.fieldCount = rowDataPk.fieldCount;
 		this.fieldValues = new ArrayList<byte[]>(fieldCount);
+		this.packetId = rowDataPk.packetId;
 		this.nullBitMap = new byte[(fieldCount + 7 + 2) / 8];
 		
 		List<byte[]> _fieldValues = rowDataPk.fieldValues;

File: src/main/java/io/mycat/backend/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -704,6 +704,7 @@ public void rowResponse(final byte[] row, final BackendConnection conn) {
 				// @since 2016-03-25
 				dataMergeSvr.onNewRecord(dataNode, row);
 			} else {
+				row[3] = ++packetId;
 				RowDataPacket rowDataPkg =null;
 				// cache primaryKey-> dataNode
 				if (primaryKeyIndex != -1) {
@@ -713,7 +714,6 @@ public void rowResponse(final byte[] row, final BackendConnection conn) {
 					LayerCachePool pool = MycatServer.getInstance().getRouterservice().getTableId2DataNodeCache();
 					pool.putIfAbsent(priamaryKeyTable, primaryKey, dataNode);
 				}
-				row[3] = ++packetId;
 				if( prepared ) {
 					if(rowDataPkg==null) {
 						rowDataPkg = new RowDataPacket(fieldCount);

File: src/main/java/io/mycat/net/mysql/BinaryRowDataPacket.java
Patch:
@@ -83,6 +83,7 @@ public void read(List<FieldPacket> fieldPackets, RowDataPacket rowDataPk) {
 		this.fieldPackets = fieldPackets;
 		this.fieldCount = rowDataPk.fieldCount;
 		this.fieldValues = new ArrayList<byte[]>(fieldCount);
+		this.packetId = rowDataPk.packetId;
 		this.nullBitMap = new byte[(fieldCount + 7 + 2) / 8];
 		
 		List<byte[]> _fieldValues = rowDataPk.fieldValues;

File: src/main/java/io/mycat/migrate/MigrateDumpRunner.java
Patch:
@@ -11,6 +11,7 @@
 import io.mycat.backend.datasource.PhysicalDatasource;
 import io.mycat.config.model.DBHostConfig;
 import io.mycat.config.model.SystemConfig;
+import io.mycat.memory.environment.OperatingSystem;
 import io.mycat.route.function.PartitionByCRC32PreSlot.Range;
 import io.mycat.util.ProcessUtil;
 import io.mycat.util.ZKUtils;
@@ -66,13 +67,14 @@ public MigrateDumpRunner(MigrateTask task, CountDownLatch latch, AtomicInteger s
         }
         file.mkdirs();
 
+            String encose= OperatingSystem.isWindows()?"\\":"";
         String finalCmd = DataMigratorUtil
                 .paramsAssignment(mysqldump,"?", "", config.getIp(), String.valueOf(config.getPort()), config.getUser(),
                 config.getPassword(),MigrateUtils.getDatabaseFromDataNode(task.getFrom()), task.getTable() , makeWhere(task), file.getPath());
             List<String> args= Arrays.asList("mysqldump", "-h"+config.getIp(), "-P"+String.valueOf(config.getPort()), "-u"+config.getUser(),
                     "-p"+config.getPassword(), MigrateUtils.getDatabaseFromDataNode(task.getFrom()), task.getTable(), "--single-transaction","-q","--default-character-set=utf8mb4","--hex-blob","--where="+makeWhere(task), "--master-data=1","-T"+file.getPath()
 
-                    ,"--fields-enclosed-by=\"","--fields-terminated-by=,", "--lines-terminated-by=\\n",  "--fields-escaped-by=\\\\");
+                    ,"--fields-enclosed-by="+encose+"\"","--fields-terminated-by=,", "--lines-terminated-by=\\n",  "--fields-escaped-by=\\\\");
       String result=  ProcessUtil.execReturnString(args);
         int logIndex = result.indexOf("MASTER_LOG_FILE='");
         int logPosIndex = result.indexOf("MASTER_LOG_POS=");

File: src/main/java/io/mycat/migrate/MigrateDumpRunner.java
Patch:
@@ -11,6 +11,7 @@
 import io.mycat.backend.datasource.PhysicalDatasource;
 import io.mycat.config.model.DBHostConfig;
 import io.mycat.config.model.SystemConfig;
+import io.mycat.memory.environment.OperatingSystem;
 import io.mycat.route.function.PartitionByCRC32PreSlot.Range;
 import io.mycat.util.ProcessUtil;
 import io.mycat.util.ZKUtils;
@@ -66,13 +67,14 @@ public MigrateDumpRunner(MigrateTask task, CountDownLatch latch, AtomicInteger s
         }
         file.mkdirs();
 
+            String encose= OperatingSystem.isWindows()?"\\":"";
         String finalCmd = DataMigratorUtil
                 .paramsAssignment(mysqldump,"?", "", config.getIp(), String.valueOf(config.getPort()), config.getUser(),
                 config.getPassword(),MigrateUtils.getDatabaseFromDataNode(task.getFrom()), task.getTable() , makeWhere(task), file.getPath());
             List<String> args= Arrays.asList("mysqldump", "-h"+config.getIp(), "-P"+String.valueOf(config.getPort()), "-u"+config.getUser(),
                     "-p"+config.getPassword(), MigrateUtils.getDatabaseFromDataNode(task.getFrom()), task.getTable(), "--single-transaction","-q","--default-character-set=utf8mb4","--hex-blob","--where="+makeWhere(task), "--master-data=1","-T"+file.getPath()
 
-                    ,"--fields-enclosed-by=\"","--fields-terminated-by=,", "--lines-terminated-by=\\n",  "--fields-escaped-by=\\\\");
+                    ,"--fields-enclosed-by="+encose+"\"","--fields-terminated-by=,", "--lines-terminated-by=\\n",  "--fields-escaped-by=\\\\");
       String result=  ProcessUtil.execReturnString(args);
         int logIndex = result.indexOf("MASTER_LOG_FILE='");
         int logPosIndex = result.indexOf("MASTER_LOG_POS=");

File: src/main/java/io/mycat/net/AbstractConnection.java
Patch:
@@ -24,9 +24,11 @@
 package io.mycat.net;
 
 import java.io.IOException;
+import java.net.Socket;
 import java.nio.ByteBuffer;
 import java.nio.channels.AsynchronousChannel;
 import java.nio.channels.NetworkChannel;
+import java.nio.channels.SocketChannel;
 import java.util.List;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.atomic.AtomicBoolean;

File: src/main/java/io/mycat/net/AbstractConnection.java
Patch:
@@ -24,9 +24,11 @@
 package io.mycat.net;
 
 import java.io.IOException;
+import java.net.Socket;
 import java.nio.ByteBuffer;
 import java.nio.channels.AsynchronousChannel;
 import java.nio.channels.NetworkChannel;
+import java.nio.channels.SocketChannel;
 import java.util.List;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.atomic.AtomicBoolean;

File: src/main/java/io/mycat/sqlengine/SQLJob.java
Patch:
@@ -139,7 +139,7 @@ public void errorResponse(byte[] err, BackendConnection conn) {
 
 	@Override
 	public void okResponse(byte[] ok, BackendConnection conn) {
-		//conn.syncAndExcute();
+		conn.syncAndExcute();
 		conn.release();
 		doFinished(false,null);
 	}

File: src/main/java/io/mycat/sqlengine/SQLJob.java
Patch:
@@ -139,7 +139,9 @@ public void errorResponse(byte[] err, BackendConnection conn) {
 
 	@Override
 	public void okResponse(byte[] ok, BackendConnection conn) {
-		conn.syncAndExcute();
+		//conn.syncAndExcute();
+		conn.release();
+		doFinished(false,null);
 	}
 
 	@Override

File: src/main/java/io/mycat/route/function/PartitionByCRC32PreSlot.java
Patch:
@@ -289,7 +289,7 @@ public static void main(String[] args) throws IOException {
     }
 
     @Override public void reload() {
-          reInit();
+          init();
     }
 
     public static class Range implements Serializable {

File: src/main/java/io/mycat/util/ByteUtil.java
Patch:
@@ -155,7 +155,8 @@ public static byte[] getBytes(String data) {
 	}
 
 	public static short getShort(byte[] bytes) {
-		return (short) ((0xff & bytes[0]) | (0xff00 & (bytes[1] << 8)));
+		return Short.parseShort(new String(bytes));
+//		return (short) ((0xff & bytes[0]) | (0xff00 & (bytes[1] << 8)));
 	}
 
 	public static char getChar(byte[] bytes) {

File: src/main/java/io/mycat/util/ByteUtil.java
Patch:
@@ -155,7 +155,8 @@ public static byte[] getBytes(String data) {
 	}
 
 	public static short getShort(byte[] bytes) {
-		return (short) ((0xff & bytes[0]) | (0xff00 & (bytes[1] << 8)));
+		return Short.parseShort(new String(bytes));
+//		return (short) ((0xff & bytes[0]) | (0xff00 & (bytes[1] << 8)));
 	}
 
 	public static char getChar(byte[] bytes) {

File: src/main/java/io/mycat/migrate/SwitchCleanListener.java
Patch:
@@ -41,7 +41,6 @@ private void checkSwitch(PathChildrenCacheEvent event)    {
             String taskID=taskPath.substring(taskPath.lastIndexOf('/')+1,taskPath.length());
             String lockPath=     ZKUtils.getZKBasePath()+"lock/"+taskID+".lock";
             List<String> sucessDataHost= ZKUtils.getConnection().getChildren().forPath(path.substring(0,path.lastIndexOf('/')));
-            List<MigrateTask> allTaskList=MigrateUtils.queryAllTask(taskPath,sucessDataHost);
             TaskNode pTaskNode= JSON.parseObject(ZKUtils.getConnection().getData().forPath(taskPath),TaskNode.class);
 
             String custerName = ZkConfig.getInstance().getValue(ZkParamCfg.ZK_CFG_CLUSTERID);

File: src/main/java/io/mycat/migrate/SwitchPrepareCheckRunner.java
Patch:
@@ -68,7 +68,7 @@ public SwitchPrepareCheckRunner( String taskID, String taskPath,
             }
         }
 
-
+       //todo 增加判断binlog完成
         if(!isHasInTransation){
             try {
             String myID=    ZkConfig.getInstance().getValue(ZkParamCfg.ZK_CFG_MYID);

File: src/main/java/io/mycat/manager/response/ShowHeartbeatDetail.java
Patch:
@@ -29,6 +29,7 @@
 import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
+import java.util.Queue;
 
 import io.mycat.MycatServer;
 import io.mycat.backend.datasource.PhysicalDBPool;
@@ -140,7 +141,7 @@ private static List<RowDataPacket> getRows(String name,String charset) {
 		}
 		if(hb!=null){
 			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-			List<HeartbeatRecorder.Record> heatbeartRecorders = hb.getRecorder().getRecordsAll();  
+			Queue<HeartbeatRecorder.Record> heatbeartRecorders = hb.getRecorder().getRecordsAll();  
 			for(HeartbeatRecorder.Record record : heatbeartRecorders){
 				RowDataPacket row = new RowDataPacket(FIELD_COUNT);
 				row.add(StringUtil.encode(name,charset));

File: src/main/java/io/mycat/migrate/MigrateMainRunner.java
Patch:
@@ -60,7 +60,8 @@ public MigrateMainRunner(String dataHost, List<MigrateTask> migrateTaskList) {
             try {
                 stream.setSlaveID(migrateTaskList.get(0).getSlaveId());
                 stream.setBinglogFile(binlogFile);
-                stream.setBinlogPos(binlogFileNum);
+                stream.setBinlogPos(pos);
+                stream.setMigrateTaskList(migrateTaskList);
                 stream.connect();
 
             } catch (IOException e) {

File: src/main/java/io/mycat/backend/mysql/BindValueUtil.java
Patch:
@@ -67,9 +67,9 @@ public static final void read(MySQLMessage mm, BindValue bv, String charset) thr
         case Fields.FIELD_TYPE_STRING:
         case Fields.FIELD_TYPE_VARCHAR:
             bv.value = mm.readStringWithLength(charset);
-            if (bv.value == null) {
-                bv.isNull = true;
-            }
+//            if (bv.value == null) {
+//                bv.isNull = true;
+//            }
             break;
         case Fields.FIELD_TYPE_DECIMAL:
         case Fields.FIELD_TYPE_NEW_DECIMAL:

File: src/main/java/io/mycat/backend/mysql/MySQLMessage.java
Patch:
@@ -298,9 +298,9 @@ public String readStringWithLength() {
 
     public String readStringWithLength(String charset) throws UnsupportedEncodingException {
         int length = (int) readLength();
-        if (length <= 0) {
-            return null;
-        }
+//        if (length <= 0) {
+//            return null;
+//        }
         String s = new String(data, position, length, charset);
         position += length;
         return s;

File: src/main/java/io/mycat/backend/mysql/BindValueUtil.java
Patch:
@@ -67,9 +67,9 @@ public static final void read(MySQLMessage mm, BindValue bv, String charset) thr
         case Fields.FIELD_TYPE_STRING:
         case Fields.FIELD_TYPE_VARCHAR:
             bv.value = mm.readStringWithLength(charset);
-            if (bv.value == null) {
-                bv.isNull = true;
-            }
+//            if (bv.value == null) {
+//                bv.isNull = true;
+//            }
             break;
         case Fields.FIELD_TYPE_DECIMAL:
         case Fields.FIELD_TYPE_NEW_DECIMAL:

File: src/main/java/io/mycat/backend/mysql/MySQLMessage.java
Patch:
@@ -298,9 +298,9 @@ public String readStringWithLength() {
 
     public String readStringWithLength(String charset) throws UnsupportedEncodingException {
         int length = (int) readLength();
-        if (length <= 0) {
-            return null;
-        }
+//        if (length <= 0) {
+//            return null;
+//        }
         String s = new String(data, position, length, charset);
         position += length;
         return s;

File: src/main/java/io/mycat/server/NonBlockingSession.java
Patch:
@@ -148,7 +148,6 @@ public void execute(RouteResultset rrs, int type) {
                 } else {
                     multiNodeHandler.execute();
                 }
-
             } catch (Exception e) {
                 LOGGER.warn(new StringBuilder().append(source).append(rrs).toString(), e);
                 source.writeErrMessage(ErrorCode.ERR_HANDLE_DATA, e.toString());

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -285,7 +285,7 @@ public void routeEndExecuteSQL(String sql, int type, SchemaConfig schema) {
 		}
 		if (rrs != null) {
 			// session执行
-			session.execute(rrs, type);
+			session.execute(rrs, rrs.isSelectForUpdate()?ServerParse.UPDATE:type);
 		}
 	}
 

File: src/main/java/io/mycat/server/NonBlockingSession.java
Patch:
@@ -148,7 +148,6 @@ public void execute(RouteResultset rrs, int type) {
                 } else {
                     multiNodeHandler.execute();
                 }
-
             } catch (Exception e) {
                 LOGGER.warn(new StringBuilder().append(source).append(rrs).toString(), e);
                 source.writeErrMessage(ErrorCode.ERR_HANDLE_DATA, e.toString());

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -285,7 +285,7 @@ public void routeEndExecuteSQL(String sql, int type, SchemaConfig schema) {
 		}
 		if (rrs != null) {
 			// session执行
-			session.execute(rrs, type);
+			session.execute(rrs, rrs.isSelectForUpdate()?ServerParse.UPDATE:type);
 		}
 	}
 

File: src/main/java/io/mycat/manager/response/ReloadConfig.java
Patch:
@@ -66,7 +66,7 @@ public static void execute(ManagerConnection c, final boolean loadAll) {
 		
 		// reload @@config_all 校验前一次的事务完成情况
 		if ( loadAll && !NIOProcessor.backends_old.isEmpty() ) {
-			c.writeErrMessage(ErrorCode.ER_YES, "The before reload @@config_all has an unfinished db transaction, please try again later.");
+			c.writeErrMessage(ErrorCode.ER_YES, "The are several unfinished db transactions before executing \"reload @@config_all\", therefore the execution is terminated for logical integrity and please try again later.");
 			return;
 		}
 		
@@ -189,7 +189,7 @@ public static boolean reload_all() {
 							if (con instanceof MySQLConnection) {
 								MySQLConnection mysqlCon = (MySQLConnection) con;
 								if ( mysqlCon.getPool() == ds) {
-									NIOProcessor.backends_old.add( con );									
+									NIOProcessor.backends_old.add( con );
 								}
 
 			                } else if (con instanceof JDBCConnection) {

File: src/main/java/io/mycat/net/NIOReactor.java
Patch:
@@ -160,7 +160,6 @@ private void register(Selector selector) {
 					c.register();
 				} catch (Exception e) {
 					c.close("register err" + e.toString());
-					LOGGER.error("register err", e);
 				}
 			}
 		}

File: src/main/java/io/mycat/net/NIOReactor.java
Patch:
@@ -160,7 +160,6 @@ private void register(Selector selector) {
 					c.register();
 				} catch (Exception e) {
 					c.close("register err" + e.toString());
-					LOGGER.error("register err", e);
 				}
 			}
 		}

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -200,7 +200,7 @@ public void execute(String sql, int type) {
 		}
 
 		//fix navicat   SELECT STATE AS `State`, ROUND(SUM(DURATION),7) AS `Duration`, CONCAT(ROUND(SUM(DURATION)/*100,3), '%') AS `Percentage` FROM INFORMATION_SCHEMA.PROFILING WHERE QUERY_ID= GROUP BY STATE ORDER BY SEQ
-		if(ServerParse.SELECT == type &&sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/*100,3)"))
+		if(ServerParse.SELECT == type &&sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/"))
 		{
 			InformationSchemaProfiling.response(this);
 			return;

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -200,7 +200,7 @@ public void execute(String sql, int type) {
 		}
 
 		//fix navicat   SELECT STATE AS `State`, ROUND(SUM(DURATION),7) AS `Duration`, CONCAT(ROUND(SUM(DURATION)/*100,3), '%') AS `Percentage` FROM INFORMATION_SCHEMA.PROFILING WHERE QUERY_ID= GROUP BY STATE ORDER BY SEQ
-		if(ServerParse.SELECT == type &&sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/*100,3)"))
+		if(ServerParse.SELECT == type &&sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/"))
 		{
 			InformationSchemaProfiling.response(this);
 			return;

File: src/test/java/io/mycat/buffer/TestDirectByteBufferPool.java
Patch:
@@ -86,7 +86,7 @@ public void testAllocateNullWhenOutOfMemory() {
         int i = 0;
         for (; i < allocTimes; i++) {
             byteBuffer = pool.allocate(size);
-            if (byteBuffer == null) {
+            if (byteBuffer == null||!(byteBuffer instanceof DirectBuffer) ) {
                 break;
             }
             buffs.add(byteBuffer);
@@ -110,7 +110,7 @@ public void testAllocateSign() {
         int i = 0;
         for (; i < allocTimes; i++) {
             byteBuffer = pool.allocate(size);
-            if (byteBuffer == null) {
+            if (byteBuffer == null||!(byteBuffer instanceof DirectBuffer) ) {
                 break;
             }
             buffs.add(byteBuffer);

File: src/test/java/io/mycat/buffer/TestDirectByteBufferPool.java
Patch:
@@ -86,7 +86,7 @@ public void testAllocateNullWhenOutOfMemory() {
         int i = 0;
         for (; i < allocTimes; i++) {
             byteBuffer = pool.allocate(size);
-            if (byteBuffer == null) {
+            if (byteBuffer == null||!(byteBuffer instanceof DirectBuffer) ) {
                 break;
             }
             buffs.add(byteBuffer);
@@ -110,7 +110,7 @@ public void testAllocateSign() {
         int i = 0;
         for (; i < allocTimes; i++) {
             byteBuffer = pool.allocate(size);
-            if (byteBuffer == null) {
+            if (byteBuffer == null||!(byteBuffer instanceof DirectBuffer) ) {
                 break;
             }
             buffs.add(byteBuffer);

File: src/main/java/io/mycat/config/ConfigInitializer.java
Patch:
@@ -313,6 +313,7 @@ private PhysicalDBPool getPhysicalDBPool(DataHostConfig conf,
 		PhysicalDBPool pool = new PhysicalDBPool(conf.getName(), conf,
 				writeSources, readSourcesMap, conf.getBalance(),
 				conf.getWriteType());
+		pool.setSlaveIDs(conf.getSlaveIDs());
 		return pool;
 	}
 
@@ -334,4 +335,4 @@ private Map<String, PhysicalDBNode> initDataNodes(ConfigLoader configLoader) {
 		return nodes;
 	}
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/config/loader/xml/XMLSchemaLoader.java
Patch:
@@ -760,6 +760,7 @@ private void loadDataHosts(Element root) {
 			String dbType = element.getAttribute("dbType");
 			String filters = element.getAttribute("filters");
 			String logTimeStr = element.getAttribute("logTime");
+			String slaveIDs = element.getAttribute("slaveIDs");
 			long logTime = "".equals(logTimeStr) ? PhysicalDBPool.LONG_TIME : Long.parseLong(logTimeStr) ;
 			//读取心跳语句
 			String heartbeatSQL = element.getElementsByTagName("heartbeat").item(0).getTextContent();
@@ -799,6 +800,7 @@ private void loadDataHosts(Element root) {
 			hostConf.setConnectionInitSql(initConSQL);
 			hostConf.setFilters(filters);
 			hostConf.setLogTime(logTime);
+			hostConf.setSlaveIDs(slaveIDs);
 			dataHosts.put(hostConf.getName(), hostConf);
 		}
 	}

File: src/main/java/io/mycat/route/function/PartitionByCRC32PreSlot.java
Patch:
@@ -265,6 +265,9 @@ public Range(int start, int end) {
             size = end - start + 1;
         }
 
+        public Range() {
+        }
+
         public int start;
         public int end;
 

File: src/main/java/io/mycat/sqlengine/mpp/UnsafeRowGrouper.java
Patch:
@@ -508,8 +508,8 @@ private UnsafeRow getGroupKey(UnsafeRow row) throws UnsupportedEncodingException
 					case ColMeta.COL_TYPE_NEWDECIMAL:
 //						key.setDouble(i,
 //								BytesTools.getDouble(row.getBinary(curColMeta.colIndex)));
-						unsafeRowWriter.write(curColMeta.colIndex, 
-								new BigDecimal(new String(row.getBinary(i))));
+						unsafeRowWriter.write(i, 
+								new BigDecimal(new String(row.getBinary(curColMeta.colIndex))));
 						break;
 					case ColMeta.COL_TYPE_LONGLONG:
 						key.setLong(i,

File: src/main/java/io/mycat/sqlengine/mpp/UnsafeRowGrouper.java
Patch:
@@ -508,8 +508,8 @@ private UnsafeRow getGroupKey(UnsafeRow row) throws UnsupportedEncodingException
 					case ColMeta.COL_TYPE_NEWDECIMAL:
 //						key.setDouble(i,
 //								BytesTools.getDouble(row.getBinary(curColMeta.colIndex)));
-						unsafeRowWriter.write(curColMeta.colIndex, 
-								new BigDecimal(new String(row.getBinary(i))));
+						unsafeRowWriter.write(i, 
+								new BigDecimal(new String(row.getBinary(curColMeta.colIndex))));
 						break;
 					case ColMeta.COL_TYPE_LONGLONG:
 						key.setLong(i,

File: src/main/java/io/mycat/config/Capabilities.java
Patch:
@@ -108,5 +108,7 @@ public interface Capabilities {
     // 通知服务器客户端可以处理由多语句或者存储过程执行生成的多结果集。
     // 当打开CLIENT_MULTI_STATEMENTS时，这个标志自动的被打开。
     public static final int CLIENT_MULTI_RESULTS = 131072;
+    
+    public static final int CLIENT_PLUGIN_AUTH = 0x00080000; // 524288
 
 }
\ No newline at end of file

File: src/main/java/io/mycat/backend/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -151,9 +151,8 @@ private void recycleResources() {
 
 		ByteBuffer buf = buffer;
 		if (buf != null) {
-			buffer = null;
 			session.getSource().recycle(buffer);
-
+			buffer = null;
 		}
 	}
 
@@ -499,4 +498,4 @@ public String toString() {
 		return "SingleNodeHandler [node=" + node + ", packetId=" + packetId + "]";
 	}
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/backend/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -151,9 +151,8 @@ private void recycleResources() {
 
 		ByteBuffer buf = buffer;
 		if (buf != null) {
-			buffer = null;
 			session.getSource().recycle(buffer);
-
+			buffer = null;
 		}
 	}
 
@@ -481,4 +480,4 @@ public String toString() {
 		return "SingleNodeHandler [node=" + node + ", packetId=" + packetId + "]";
 	}
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/sqlengine/mpp/ColMeta.java
Patch:
@@ -55,6 +55,8 @@ public class ColMeta implements Serializable{
 	public static final int COL_TYPE_GEOMETRY = 0xff;
 	public  int colIndex;
 	public final int colType;
+	
+	public int decimals;
 
     public  int avgSumIndex;
     public  int avgCountIndex;

File: src/main/java/io/mycat/sqlengine/mpp/DataMergeService.java
Patch:
@@ -117,6 +117,7 @@ public void onRowMetaData(Map<String, ColMeta> columToIndx, int fieldCount) {
 							ColMeta colMeta = new ColMeta(sumColMeta.colIndex,
 									countColMeta.colIndex,
 									sumColMeta.getColType());
+							colMeta.decimals = sumColMeta.decimals; // 保存精度
 							mergCols.add(new MergeCol(colMeta, mergEntry
 									.getValue()));
 						}

File: src/main/java/io/mycat/sqlengine/mpp/ColMeta.java
Patch:
@@ -55,6 +55,8 @@ public class ColMeta implements Serializable{
 	public static final int COL_TYPE_GEOMETRY = 0xff;
 	public  int colIndex;
 	public final int colType;
+	
+	public int decimals;
 
     public  int avgSumIndex;
     public  int avgCountIndex;

File: src/main/java/io/mycat/sqlengine/mpp/DataMergeService.java
Patch:
@@ -117,6 +117,7 @@ public void onRowMetaData(Map<String, ColMeta> columToIndx, int fieldCount) {
 							ColMeta colMeta = new ColMeta(sumColMeta.colIndex,
 									countColMeta.colIndex,
 									sumColMeta.getColType());
+							colMeta.decimals = sumColMeta.decimals; // 保存精度
 							mergCols.add(new MergeCol(colMeta, mergEntry
 									.getValue()));
 						}

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -265,6 +265,8 @@ public SystemConfig() {
 		this.useStreamOutput = 0;
 		this.systemReserveMemorySize = RESERVED_SYSTEM_MEMORY_BYTES;
 		this.dataNodeSortedTempDir = System.getProperty("user.dir");
+		this.XARecoveryLogBaseDir = "./";
+		this.XARecoveryLogBaseName ="tmlog";
 	}
 
 	public String getDataNodeSortedTempDir() {

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -265,6 +265,8 @@ public SystemConfig() {
 		this.useStreamOutput = 0;
 		this.systemReserveMemorySize = RESERVED_SYSTEM_MEMORY_BYTES;
 		this.dataNodeSortedTempDir = System.getProperty("user.dir");
+		this.XARecoveryLogBaseDir = "./";
+		this.XARecoveryLogBaseName ="tmlog";
 	}
 
 	public String getDataNodeSortedTempDir() {

File: src/main/java/io/mycat/net/NIOReactor.java
Patch:
@@ -160,10 +160,11 @@ private void register(Selector selector) {
 					c.register();
 				} catch (Exception e) {
 					c.close("register err" + e.toString());
+					LOGGER.error("register err", e);
 				}
 			}
 		}
 
 	}
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/sqlengine/mpp/RowDataPacketSorter.java
Patch:
@@ -33,7 +33,6 @@
 
 import io.mycat.net.mysql.RowDataPacket;
 import io.mycat.util.ByteUtil;
-import io.mycat.util.CompareUtil;
 
 public class RowDataPacketSorter {
 
@@ -183,7 +182,8 @@ public static final int compareObject(byte[] left,byte[] right, OrderCol orderCo
         case ColMeta.COL_TYPE_DATETIME:
         case ColMeta.COL_TYPE_NEWDATE:
         case ColMeta.COL_TYPE_BIT:
-            return BytesTools.compareTo(left,right);
+//            return BytesTools.compareTo(left,right);
+        	return ByteUtil.compareNumberByte(left, right);
         case ColMeta.COL_TYPE_VAR_STRING:
         case ColMeta.COL_TYPE_STRING:
             // ENUM和SET类型都是字符串，按字符串处理

File: src/main/java/io/mycat/sqlengine/mpp/RowDataPacketSorter.java
Patch:
@@ -33,7 +33,6 @@
 
 import io.mycat.net.mysql.RowDataPacket;
 import io.mycat.util.ByteUtil;
-import io.mycat.util.CompareUtil;
 
 public class RowDataPacketSorter {
 
@@ -183,7 +182,8 @@ public static final int compareObject(byte[] left,byte[] right, OrderCol orderCo
         case ColMeta.COL_TYPE_DATETIME:
         case ColMeta.COL_TYPE_NEWDATE:
         case ColMeta.COL_TYPE_BIT:
-            return BytesTools.compareTo(left,right);
+//            return BytesTools.compareTo(left,right);
+        	return ByteUtil.compareNumberByte(left, right);
         case ColMeta.COL_TYPE_VAR_STRING:
         case ColMeta.COL_TYPE_STRING:
             // ENUM和SET类型都是字符串，按字符串处理

File: src/main/java/io/mycat/server/response/ShowTables.java
Patch:
@@ -59,6 +59,7 @@ public static void response(ServerConnection c,String stmt,int type) {
             }
         } else {
              c.writeErrMessage(ErrorCode.ER_NO_DB_ERROR,"No database selected");
+             return;
         }
 
         //分库的schema，直接从SchemaConfig中获取所有表名

File: src/main/java/io/mycat/server/response/ShowTables.java
Patch:
@@ -59,6 +59,7 @@ public static void response(ServerConnection c,String stmt,int type) {
             }
         } else {
              c.writeErrMessage(ErrorCode.ER_NO_DB_ERROR,"No database selected");
+             return;
         }
 
         //分库的schema，直接从SchemaConfig中获取所有表名

File: src/main/java/io/mycat/backend/jdbc/JDBCConnection.java
Patch:
@@ -334,7 +334,7 @@ private void executeSQL(RouteResultsetNode rrn, ServerConnection sc,
 			ErrorPacket error = new ErrorPacket();
 			error.packetId = ++packetId;
 			error.errno = ErrorCode.ER_UNKNOWN_ERROR;
-			error.message = msg.getBytes();
+			error.message = ((msg == null) ? e.toString().getBytes() : msg.getBytes());
 			String err = null;
 			if(error.message!=null){
 			    err = new String(error.message);

File: src/main/java/io/mycat/MycatServer.java
Patch:
@@ -459,7 +459,7 @@ public void run() {
 						
 						//根据 lastTime 确认事务的执行， 超过 sqlExecuteTimeout 阀值 close connection 
 						long currentTime = TimeUtil.currentTimeMillis();
-						Iterator<BackendConnection> iter = PhysicalDBPool.oldCons.iterator();
+						Iterator<BackendConnection> iter = NIOProcessor.backends_old.iterator();
 						while( iter.hasNext() ) {
 							BackendConnection con = iter.next();							
 							long lastTime = con.getLastTime();						
@@ -681,12 +681,13 @@ public void run() {
 							node.heartbeatCheck(heartPeriod);
 						}
 						
+						/*
 						Map<String, PhysicalDBPool> _nodes = config.getBackupDataHosts();
 						if (_nodes != null) {
 							for (PhysicalDBPool node : _nodes.values()) {
 								node.heartbeatCheck(heartPeriod);
 							}
-						}
+						}*/
 					}
 				});
 			}

File: src/main/java/io/mycat/manager/response/ShowBackendOld.java
Patch:
@@ -3,11 +3,11 @@
 import java.nio.ByteBuffer;
 
 import io.mycat.backend.BackendConnection;
-import io.mycat.backend.datasource.PhysicalDBPool;
 import io.mycat.backend.mysql.PacketUtil;
 import io.mycat.backend.mysql.nio.MySQLConnection;
 import io.mycat.config.Fields;
 import io.mycat.manager.ManagerConnection;
+import io.mycat.net.NIOProcessor;
 import io.mycat.net.mysql.EOFPacket;
 import io.mycat.net.mysql.FieldPacket;
 import io.mycat.net.mysql.ResultSetHeaderPacket;
@@ -66,7 +66,7 @@ public static void execute(ManagerConnection c) {
 		byte packetId = eof.packetId;
 		String charset = c.getCharset();
 		
-		for (BackendConnection bc : PhysicalDBPool.oldCons) {
+		for (BackendConnection bc : NIOProcessor.backends_old) {
 			if ( bc != null) {
 				RowDataPacket row = getRow(bc, charset);
 				row.packetId = ++packetId;

File: src/main/java/io/mycat/MycatServer.java
Patch:
@@ -459,7 +459,7 @@ public void run() {
 						
 						//根据 lastTime 确认事务的执行， 超过 sqlExecuteTimeout 阀值 close connection 
 						long currentTime = TimeUtil.currentTimeMillis();
-						Iterator<BackendConnection> iter = PhysicalDBPool.oldCons.iterator();
+						Iterator<BackendConnection> iter = NIOProcessor.backends_old.iterator();
 						while( iter.hasNext() ) {
 							BackendConnection con = iter.next();							
 							long lastTime = con.getLastTime();						
@@ -681,12 +681,13 @@ public void run() {
 							node.heartbeatCheck(heartPeriod);
 						}
 						
+						/*
 						Map<String, PhysicalDBPool> _nodes = config.getBackupDataHosts();
 						if (_nodes != null) {
 							for (PhysicalDBPool node : _nodes.values()) {
 								node.heartbeatCheck(heartPeriod);
 							}
-						}
+						}*/
 					}
 				});
 			}

File: src/main/java/io/mycat/manager/response/ShowBackendOld.java
Patch:
@@ -3,11 +3,11 @@
 import java.nio.ByteBuffer;
 
 import io.mycat.backend.BackendConnection;
-import io.mycat.backend.datasource.PhysicalDBPool;
 import io.mycat.backend.mysql.PacketUtil;
 import io.mycat.backend.mysql.nio.MySQLConnection;
 import io.mycat.config.Fields;
 import io.mycat.manager.ManagerConnection;
+import io.mycat.net.NIOProcessor;
 import io.mycat.net.mysql.EOFPacket;
 import io.mycat.net.mysql.FieldPacket;
 import io.mycat.net.mysql.ResultSetHeaderPacket;
@@ -66,7 +66,7 @@ public static void execute(ManagerConnection c) {
 		byte packetId = eof.packetId;
 		String charset = c.getCharset();
 		
-		for (BackendConnection bc : PhysicalDBPool.oldCons) {
+		for (BackendConnection bc : NIOProcessor.backends_old) {
 			if ( bc != null) {
 				RowDataPacket row = getRow(bc, charset);
 				row.packetId = ++packetId;

File: src/main/java/io/mycat/server/handler/ServerPrepareHandler.java
Patch:
@@ -152,7 +152,7 @@ private String prepareStmtBindValue(PreparedStatement pstmt, BindValue[] bindVal
     			sql = sql.replaceFirst("\\?", "NULL");
     			continue;
     		}
-    		switch(paramType) {
+    		switch(paramType & 0xff) {
     		case Fields.FIELD_TYPE_TINY:
     			sql = sql.replaceFirst("\\?", String.valueOf(bindValue.byteBinding));
     			break;

File: src/main/java/io/mycat/server/handler/ServerPrepareHandler.java
Patch:
@@ -152,7 +152,7 @@ private String prepareStmtBindValue(PreparedStatement pstmt, BindValue[] bindVal
     			sql = sql.replaceFirst("\\?", "NULL");
     			continue;
     		}
-    		switch(paramType) {
+    		switch(paramType & 0xff) {
     		case Fields.FIELD_TYPE_TINY:
     			sql = sql.replaceFirst("\\?", String.valueOf(bindValue.byteBinding));
     			break;

File: src/main/java/io/mycat/config/loader/ConfigLoader.java
Patch:
@@ -28,7 +28,7 @@
 import io.mycat.config.model.ClusterConfig;
 import io.mycat.config.model.DataHostConfig;
 import io.mycat.config.model.DataNodeConfig;
-import io.mycat.config.model.QuarantineConfig;
+import io.mycat.config.model.FirewallConfig;
 import io.mycat.config.model.SchemaConfig;
 import io.mycat.config.model.SystemConfig;
 import io.mycat.config.model.UserConfig;
@@ -51,7 +51,7 @@ public interface ConfigLoader {
 
 	Map<String, UserConfig> getUserConfigs();
 
-	QuarantineConfig getQuarantineConfig();
+	FirewallConfig getFirewallConfig();
 
 	ClusterConfig getClusterConfig();
 }
\ No newline at end of file

File: src/main/java/io/mycat/config/model/ClusterConfig.java
Patch:
@@ -44,6 +44,7 @@
  * @author mycat
  */
 public class ClusterConfig {
+	
     private final Map<String, MycatNodeConfig> nodes;
     private final Map<String, List<String>> groups;
 

File: src/main/java/io/mycat/manager/response/RollbackConfig.java
Patch:
@@ -34,7 +34,7 @@
 import io.mycat.config.ErrorCode;
 import io.mycat.config.MycatCluster;
 import io.mycat.config.MycatConfig;
-import io.mycat.config.model.QuarantineConfig;
+import io.mycat.config.model.FirewallConfig;
 import io.mycat.config.model.SchemaConfig;
 import io.mycat.config.model.UserConfig;
 import io.mycat.manager.ManagerConnection;
@@ -76,7 +76,7 @@ private static boolean rollback() {
 		Map<String, PhysicalDBNode> dataNodes = conf.getBackupDataNodes();
 		Map<String, PhysicalDBPool> dataHosts = conf.getBackupDataHosts();
 		MycatCluster cluster = conf.getBackupCluster();
-		QuarantineConfig quarantine = conf.getBackupQuarantine();
+		FirewallConfig firewall = conf.getBackupFirewall();
 
 		// 检查可回滚状态
 		if (!conf.canRollback()) {
@@ -103,7 +103,7 @@ private static boolean rollback() {
 		}
 
 		// 应用回滚
-		conf.rollback(users, schemas, dataNodes, dataHosts, cluster, quarantine);
+		conf.rollback(users, schemas, dataNodes, dataHosts, cluster, firewall);
 
 		// 处理旧的资源
 		for (PhysicalDBPool dn : cNodes.values()) {

File: src/main/java/io/mycat/net/AbstractConnection.java
Patch:
@@ -554,7 +554,7 @@ protected void cleanup() {
 		}
 	}
 	
-	protected final int getPacketLength(ByteBuffer buffer, int offset) {
+	protected int getPacketLength(ByteBuffer buffer, int offset) {
 		int headerSize = getPacketHeaderSize();
 		if ( isSupportCompress() ) {
 			headerSize = 7;

File: src/main/java/io/mycat/memory/unsafe/utils/sort/RowPrefixComputer.java
Patch:
@@ -57,12 +57,13 @@ protected long computePrefix(UnsafeRow row) {
          */
         switch (orderIndexType) {
             case ColMeta.COL_TYPE_INT:
+            case ColMeta.COL_TYPE_LONG:
+            case ColMeta.COL_TYPE_INT24:
                 return BytesTools.toInt(rowIndexElem);
             case ColMeta.COL_TYPE_SHORT:
                 return BytesTools.toShort(rowIndexElem);
-            case ColMeta.COL_TYPE_LONG:
+
             case ColMeta.COL_TYPE_LONGLONG:
-            case ColMeta.COL_TYPE_INT24:
                 return BytesTools.toLong(rowIndexElem);
             case ColMeta.COL_TYPE_FLOAT:
                 return PrefixComparators.DoublePrefixComparator.
@@ -72,7 +73,6 @@ protected long computePrefix(UnsafeRow row) {
             case ColMeta.COL_TYPE_NEWDECIMAL:
                 return PrefixComparators.DoublePrefixComparator.
                         computePrefix(BytesTools.toDouble(rowIndexElem));
-
             case ColMeta.COL_TYPE_DATE:
             case ColMeta.COL_TYPE_TIMSTAMP:
             case ColMeta.COL_TYPE_TIME:

File: src/main/java/io/mycat/sqlengine/mpp/DataNodeMergeManager.java
Patch:
@@ -363,6 +363,8 @@ public void run() {
                     byte[] colValue = mm.readBytesWithLength();
                     if (colValue != null)
                     	unsafeRowWriter.write(i,colValue);
+                    else
+                        unsafeRow.setNullAt(i);
                 }
 
                 unsafeRow.setTotalSize(bufferHolder.totalSize());

File: src/main/java/io/mycat/sqlengine/mpp/RowDataPacketGrouper.java
Patch:
@@ -159,8 +159,8 @@ public static final int compareObject(byte[] left,byte[] right, final int colTyp
         case ColMeta.COL_TYPE_SHORT:
         case ColMeta.COL_TYPE_INT:
         case ColMeta.COL_TYPE_INT24:
-            return CompareUtil.compareInt(ByteUtil.getInt(left), ByteUtil.getInt(right));
-        case ColMeta.COL_TYPE_LONG:
+		case ColMeta.COL_TYPE_LONG:
+			return CompareUtil.compareInt(ByteUtil.getInt(left), ByteUtil.getInt(right));
         case ColMeta.COL_TYPE_LONGLONG:
             return CompareUtil.compareLong(ByteUtil.getLong(left), ByteUtil.getLong(right));
         case ColMeta.COL_TYPE_FLOAT:

File: src/test/java/io/mycat/memory/unsafe/map/UnsafeFixedWidthAggregationMapSuite.java
Patch:
@@ -90,7 +90,7 @@ public void testAggregateMap() throws NoSuchFieldException, IllegalAccessExcepti
     colMeta = new ColMeta(2,ColMeta.COL_TYPE_INT);
     colMetaMap.put("age",colMeta);
 
-    colMeta = new ColMeta(3,ColMeta.COL_TYPE_LONG);
+    colMeta = new ColMeta(3,ColMeta.COL_TYPE_LONGLONG);
     colMetaMap.put("score",colMeta);
 
 
@@ -225,9 +225,9 @@ public void  testWithMemoryLeakDetection() throws IOException, NoSuchFieldExcept
    fieldCount = 3;
    colMeta = null;
    colMetaMap = new HashMap<String,ColMeta>(fieldCount);
-   colMeta = new ColMeta(0,ColMeta.COL_TYPE_LONG);
+   colMeta = new ColMeta(0,ColMeta.COL_TYPE_LONGLONG);
    colMetaMap.put("age",colMeta);
-   colMeta = new ColMeta(1,ColMeta.COL_TYPE_LONG);
+   colMeta = new ColMeta(1,ColMeta.COL_TYPE_LONGLONG);
    colMetaMap.put("age1",colMeta);
    colMeta = new ColMeta(2,ColMeta.COL_TYPE_STRING);
    colMetaMap.put("name",colMeta);

File: src/main/java/io/mycat/memory/unsafe/utils/sort/RowPrefixComputer.java
Patch:
@@ -57,12 +57,13 @@ protected long computePrefix(UnsafeRow row) {
          */
         switch (orderIndexType) {
             case ColMeta.COL_TYPE_INT:
+            case ColMeta.COL_TYPE_LONG:
+            case ColMeta.COL_TYPE_INT24:
                 return BytesTools.toInt(rowIndexElem);
             case ColMeta.COL_TYPE_SHORT:
                 return BytesTools.toShort(rowIndexElem);
-            case ColMeta.COL_TYPE_LONG:
+
             case ColMeta.COL_TYPE_LONGLONG:
-            case ColMeta.COL_TYPE_INT24:
                 return BytesTools.toLong(rowIndexElem);
             case ColMeta.COL_TYPE_FLOAT:
                 return PrefixComparators.DoublePrefixComparator.
@@ -72,7 +73,6 @@ protected long computePrefix(UnsafeRow row) {
             case ColMeta.COL_TYPE_NEWDECIMAL:
                 return PrefixComparators.DoublePrefixComparator.
                         computePrefix(BytesTools.toDouble(rowIndexElem));
-
             case ColMeta.COL_TYPE_DATE:
             case ColMeta.COL_TYPE_TIMSTAMP:
             case ColMeta.COL_TYPE_TIME:

File: src/main/java/io/mycat/sqlengine/mpp/DataNodeMergeManager.java
Patch:
@@ -363,6 +363,8 @@ public void run() {
                     byte[] colValue = mm.readBytesWithLength();
                     if (colValue != null)
                     	unsafeRowWriter.write(i,colValue);
+                    else
+                        unsafeRow.setNullAt(i);
                 }
 
                 unsafeRow.setTotalSize(bufferHolder.totalSize());

File: src/main/java/io/mycat/sqlengine/mpp/RowDataPacketGrouper.java
Patch:
@@ -159,8 +159,8 @@ public static final int compareObject(byte[] left,byte[] right, final int colTyp
         case ColMeta.COL_TYPE_SHORT:
         case ColMeta.COL_TYPE_INT:
         case ColMeta.COL_TYPE_INT24:
-            return CompareUtil.compareInt(ByteUtil.getInt(left), ByteUtil.getInt(right));
-        case ColMeta.COL_TYPE_LONG:
+		case ColMeta.COL_TYPE_LONG:
+			return CompareUtil.compareInt(ByteUtil.getInt(left), ByteUtil.getInt(right));
         case ColMeta.COL_TYPE_LONGLONG:
             return CompareUtil.compareLong(ByteUtil.getLong(left), ByteUtil.getLong(right));
         case ColMeta.COL_TYPE_FLOAT:

File: src/test/java/io/mycat/memory/unsafe/map/UnsafeFixedWidthAggregationMapSuite.java
Patch:
@@ -90,7 +90,7 @@ public void testAggregateMap() throws NoSuchFieldException, IllegalAccessExcepti
     colMeta = new ColMeta(2,ColMeta.COL_TYPE_INT);
     colMetaMap.put("age",colMeta);
 
-    colMeta = new ColMeta(3,ColMeta.COL_TYPE_LONG);
+    colMeta = new ColMeta(3,ColMeta.COL_TYPE_LONGLONG);
     colMetaMap.put("score",colMeta);
 
 
@@ -225,9 +225,9 @@ public void  testWithMemoryLeakDetection() throws IOException, NoSuchFieldExcept
    fieldCount = 3;
    colMeta = null;
    colMetaMap = new HashMap<String,ColMeta>(fieldCount);
-   colMeta = new ColMeta(0,ColMeta.COL_TYPE_LONG);
+   colMeta = new ColMeta(0,ColMeta.COL_TYPE_LONGLONG);
    colMetaMap.put("age",colMeta);
-   colMeta = new ColMeta(1,ColMeta.COL_TYPE_LONG);
+   colMeta = new ColMeta(1,ColMeta.COL_TYPE_LONGLONG);
    colMetaMap.put("age1",colMeta);
    colMeta = new ColMeta(2,ColMeta.COL_TYPE_STRING);
    colMetaMap.put("name",colMeta);

File: src/main/java/io/mycat/backend/postgresql/utils/PIOUtils.java
Patch:
@@ -100,10 +100,10 @@ public static void SendString(String string, ByteBuffer buffer) {
 	public static String redString(ByteBuffer buffer, int offset, Charset charset) throws IOException {
 		ByteArrayOutputStream out  =new ByteArrayOutputStream();
 		for(int i=offset ;i< buffer.limit();i++){
-			out.write(new byte[]{buffer.get(i)});
 			if(((char)buffer.get(i)) == '\0'){
 				break;
 			}			
+			out.write(new byte[]{buffer.get(i)});
 		}
 		return new String(out.toByteArray(),charset);
 	}

File: src/main/java/io/mycat/backend/postgresql/PostgreSQLBackendConnectionHandler.java
Patch:
@@ -114,8 +114,8 @@ private void doConnecting(PostgreSQLBackendConnection con, ByteBuffer buf,
 						PasswordMessage pak = new PasswordMessage(
 								con.getUser(), con.getPassword(), aut,
 								((AuthenticationPacket) packet).getSalt());
-						ByteBuffer buffer = ByteBuffer
-								.allocate(pak.getLength() + 1);
+						
+						ByteBuffer buffer = con.allocate(); //allocate(pak.getLength() + 1);
 						pak.write(buffer);
 						
 						con.write(buffer);

File: src/main/java/io/mycat/backend/postgresql/utils/PacketUtils.java
Patch:
@@ -84,7 +84,7 @@ public static List<PostgreSQLPacket> parsePacket(ByteBuffer buffer,int offset,in
 	}
 	
 	@Deprecated
-	public static List<PostgreSQLPacket> parsePacket(byte[] bytes, int offset,
+	private static List<PostgreSQLPacket> parsePacket(byte[] bytes, int offset,
 			int readLength) throws IOException {
 		List<PostgreSQLPacket> pgs = new ArrayList<>();
 		while (offset < readLength) {

File: src/main/java/io/mycat/backend/mysql/nio/handler/CommitNodeHandler.java
Patch:
@@ -101,7 +101,7 @@ public void okResponse(byte[] ok, BackendConnection conn) {
 					break;
 				}
 				default:
-					LOGGER.error("Wrong XA status flag!");
+				//	LOGGER.error("Wrong XA status flag!");
 			}
 		}
 		session.clearResources(false);

File: src/main/java/io/mycat/memory/unsafe/utils/sort/UnsafeExternalRowSorter.java
Patch:
@@ -105,7 +105,7 @@ public long getSortTimeNanos() {
   }
 
   public void cleanupResources() {
-      logger.info("row sorter clean up resources!!!");
+      logger.debug("row sorter clean up resources!!!");
       sorter.cleanupResources();
   }
 

File: src/main/java/io/mycat/backend/mysql/nio/handler/CommitNodeHandler.java
Patch:
@@ -101,7 +101,7 @@ public void okResponse(byte[] ok, BackendConnection conn) {
 					break;
 				}
 				default:
-					LOGGER.error("Wrong XA status flag!");
+				//	LOGGER.error("Wrong XA status flag!");
 			}
 		}
 		session.clearResources(false);

File: src/main/java/io/mycat/memory/unsafe/utils/sort/UnsafeExternalRowSorter.java
Patch:
@@ -105,7 +105,7 @@ public long getSortTimeNanos() {
   }
 
   public void cleanupResources() {
-      logger.info("row sorter clean up resources!!!");
+      logger.debug("row sorter clean up resources!!!");
       sorter.cleanupResources();
   }
 

File: src/main/java/io/mycat/server/handler/ExplainHandler.java
Patch:
@@ -69,7 +69,7 @@ public class ExplainHandler {
 	}
 
 	public static void handle(String stmt, ServerConnection c, int offset) {
-		stmt = stmt.substring(offset);
+		stmt = stmt.substring(offset).trim();
 
 		RouteResultset rrs = getRouteResultset(c, stmt);
 		if (rrs == null) {
@@ -194,4 +194,4 @@ private static boolean isMycatSeq(String stmt, SchemaConfig schema)
         return false;
     }
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/server/ServerConnection.java
Patch:
@@ -187,7 +187,7 @@ public void execute(String sql, int type) {
 		}
 
 		//fix navicat   SELECT STATE AS `State`, ROUND(SUM(DURATION),7) AS `Duration`, CONCAT(ROUND(SUM(DURATION)/*100,3), '%') AS `Percentage` FROM INFORMATION_SCHEMA.PROFILING WHERE QUERY_ID= GROUP BY STATE ORDER BY SEQ
-		if(sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/*100,3)"))
+		if(ServerParse.SELECT == type &&sql.contains(" INFORMATION_SCHEMA.PROFILING ")&&sql.contains("CONCAT(ROUND(SUM(DURATION)/*100,3)"))
 		{
 			InformationSchemaProfiling.response(this);
 			return;

File: src/main/java/io/mycat/server/handler/ExplainHandler.java
Patch:
@@ -69,7 +69,7 @@ public class ExplainHandler {
 	}
 
 	public static void handle(String stmt, ServerConnection c, int offset) {
-		stmt = stmt.substring(offset);
+		stmt = stmt.substring(offset).trim();
 
 		RouteResultset rrs = getRouteResultset(c, stmt);
 		if (rrs == null) {
@@ -194,4 +194,4 @@ private static boolean isMycatSeq(String stmt, SchemaConfig schema)
         return false;
     }
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/MycatServer.java
Patch:
@@ -458,7 +458,7 @@ public void run() {
 						UserStat userStat = map.get(user);
 						if(userStat!=null){
 							SqlResultSizeRecorder recorder=userStat.getSqlResultSizeRecorder();
-							System.out.println(recorder.getSqlResultSet().size());
+							//System.out.println(recorder.getSqlResultSet().size());
 							recorder.clearSqlResultSet();
 						}
 					}
@@ -719,4 +719,4 @@ public boolean isAIO() {
 	public ListeningExecutorService getListeningExecutorService() {
 		return listeningExecutorService;
 	}
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/buffer/BufferPool.java
Patch:
@@ -12,8 +12,8 @@
 public interface BufferPool {
     public ByteBuffer allocate(int size);
     public void recycle(ByteBuffer theBuf);
-    public int capacity();
-    public int size();
+    public long capacity();
+    public long size();
     public int getConReadBuferChunk();
     public  int getSharedOptsCount();
     public int getChunkSize();

File: src/main/java/io/mycat/MycatServer.java
Patch:
@@ -458,7 +458,7 @@ public void run() {
 						UserStat userStat = map.get(user);
 						if(userStat!=null){
 							SqlResultSizeRecorder recorder=userStat.getSqlResultSizeRecorder();
-							System.out.println(recorder.getSqlResultSet().size());
+							//System.out.println(recorder.getSqlResultSet().size());
 							recorder.clearSqlResultSet();
 						}
 					}
@@ -719,4 +719,4 @@ public boolean isAIO() {
 	public ListeningExecutorService getListeningExecutorService() {
 		return listeningExecutorService;
 	}
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/buffer/BufferPool.java
Patch:
@@ -12,8 +12,8 @@
 public interface BufferPool {
     public ByteBuffer allocate(int size);
     public void recycle(ByteBuffer theBuf);
-    public int capacity();
-    public int size();
+    public long capacity();
+    public long size();
     public int getConReadBuferChunk();
     public  int getSharedOptsCount();
     public int getChunkSize();

File: src/test/java/io/mycat/server/interceptor/impl/GlobalTableUtilTest.java
Patch:
@@ -30,7 +30,8 @@ public class GlobalTableUtilTest {
 	public void addColumnIfCreate() {
 		String sql = parseSql(originSql1);
 		System.out.println(sql);
-		Assert.assertTrue(sql.contains("_mycat_op_time int COMMENT '全局表保存修改时间戳的字段名'"));
+		boolean contains = sql.contains("_mycat_op_time ");
+		Assert.assertTrue(contains);
 		sql = parseSql(originSql2);
 		System.out.println(sql);
 		Assert.assertFalse(sql.contains("_mycat_op_time int COMMENT '全局表保存修改时间戳的字段名'"));

File: src/test/java/io/mycat/server/interceptor/impl/GlobalTableUtilTest.java
Patch:
@@ -30,7 +30,8 @@ public class GlobalTableUtilTest {
 	public void addColumnIfCreate() {
 		String sql = parseSql(originSql1);
 		System.out.println(sql);
-		Assert.assertTrue(sql.contains("_mycat_op_time int COMMENT '全局表保存修改时间戳的字段名'"));
+		boolean contains = sql.contains("_mycat_op_time ");
+		Assert.assertTrue(contains);
 		sql = parseSql(originSql2);
 		System.out.println(sql);
 		Assert.assertFalse(sql.contains("_mycat_op_time int COMMENT '全局表保存修改时间戳的字段名'"));

File: src/main/java/io/mycat/route/function/AutoPartitionByLong.java
Patch:
@@ -53,6 +53,7 @@ public void setMapFile(String mapFile) {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long value = Long.parseLong(columnValue);
 		Integer rst = null;
 		for (LongRange longRang : this.longRongs) {

File: src/main/java/io/mycat/route/function/PartitionByLong.java
Patch:
@@ -56,6 +56,7 @@ public void init() {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long key = Long.parseLong(columnValue);
 		return partitionUtil.partition(key);
 	}

File: src/main/java/io/mycat/route/function/PartitionByRangeMod.java
Patch:
@@ -55,6 +55,7 @@ public void setMapFile(String mapFile) {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long value = Long.parseLong(columnValue);
 		Integer rst = null;
         int nodeIndex=0;

File: src/main/java/io/mycat/route/function/AutoPartitionByLong.java
Patch:
@@ -53,6 +53,7 @@ public void setMapFile(String mapFile) {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long value = Long.parseLong(columnValue);
 		Integer rst = null;
 		for (LongRange longRang : this.longRongs) {

File: src/main/java/io/mycat/route/function/PartitionByLong.java
Patch:
@@ -56,6 +56,7 @@ public void init() {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long key = Long.parseLong(columnValue);
 		return partitionUtil.partition(key);
 	}

File: src/main/java/io/mycat/route/function/PartitionByRangeMod.java
Patch:
@@ -55,6 +55,7 @@ public void setMapFile(String mapFile) {
 
 	@Override
 	public Integer calculate(String columnValue) {
+		columnValue = NumberParseUtil.eliminateQoute(columnValue);
 		long value = Long.parseLong(columnValue);
 		Integer rst = null;
         int nodeIndex=0;

File: src/test/java/io/mycat/route/DDLRouteTest.java
Patch:
@@ -43,8 +43,8 @@ public void testSpecialCharDDL() throws Exception {
 			CacheService cacheService = new CacheService();
 	        RouteService routerService = new RouteService(cacheService);
 	        
-	        // drop table test
-	        String  sql = " ALTER TABLE COMPANY\r\nADD COLUMN TEST  VARCHAR(255) NULL AFTER CREATE_DATE,\r\nDEFAULT CHARACTER SET DEFAULT";
+	        // alter table test
+	        String  sql = " ALTER TABLE COMPANY\r\nADD COLUMN TEST  VARCHAR(255) NULL AFTER CREATE_DATE,\r\n CHARACTER SET = UTF8";
 	        sql = RouterUtil.getFixedSql(sql);
 	        List<String> dataNodes = new ArrayList<>();
 	        String  tablename =  RouterUtil.getTableName(sql, RouterUtil.getAlterTablePos(sql, 0));

File: src/test/java/io/mycat/route/DDLRouteTest.java
Patch:
@@ -43,8 +43,8 @@ public void testSpecialCharDDL() throws Exception {
 			CacheService cacheService = new CacheService();
 	        RouteService routerService = new RouteService(cacheService);
 	        
-	        // drop table test
-	        String  sql = " ALTER TABLE COMPANY\r\nADD COLUMN TEST  VARCHAR(255) NULL AFTER CREATE_DATE,\r\nDEFAULT CHARACTER SET DEFAULT";
+	        // alter table test
+	        String  sql = " ALTER TABLE COMPANY\r\nADD COLUMN TEST  VARCHAR(255) NULL AFTER CREATE_DATE,\r\n CHARACTER SET = UTF8";
 	        sql = RouterUtil.getFixedSql(sql);
 	        List<String> dataNodes = new ArrayList<>();
 	        String  tablename =  RouterUtil.getTableName(sql, RouterUtil.getAlterTablePos(sql, 0));

File: src/main/java/io/mycat/route/parser/druid/impl/DruidInsertParser.java
Patch:
@@ -214,7 +214,7 @@ private void parserBatchInsert(SchemaConfig schema, RouteResultset rrs, String p
 		if(insertStmt.getValuesList().size() > 1) {
 			//字段列数
 			int columnNum = insertStmt.getColumns().size();
-			int shardingColIndex = getSharingColIndex(insertStmt, partitionColumn);
+			int shardingColIndex = getShardingColIndex(insertStmt, partitionColumn);
 			if(shardingColIndex == -1) {
 				String msg = "bad insert sql (sharding column:"+ partitionColumn + " not provided," + insertStmt;
 				LOGGER.warn(msg);
@@ -282,7 +282,7 @@ private void parserBatchInsert(SchemaConfig schema, RouteResultset rrs, String p
 	 * @param partitionColumn
 	 * @return
 	 */
-	private int getSharingColIndex(MySqlInsertStatement insertStmt,String partitionColumn) {
+	private int getShardingColIndex(MySqlInsertStatement insertStmt,String partitionColumn) {
 		int shardingColIndex = -1;
 		for(int i = 0; i < insertStmt.getColumns().size(); i++) {
 			if(partitionColumn.equalsIgnoreCase(StringUtil.removeBackquote(insertStmt.getColumns().get(i).toString()))) {//找到分片字段

File: src/main/java/io/mycat/sqlengine/sharejoin/JoinParser.java
Patch:
@@ -57,7 +57,7 @@ public void parser(){
 	   parserTable(table,tableFilter,false);
 	   
 	   parserFields(mysqlQuery.getSelectList()); 
-	   parserMaserTable();	   
+	   parserMasterTable();	   
 	   
 	   parserWhere(mysqlQuery.getWhere(),"");	   
 	 // getJoinField();
@@ -169,7 +169,7 @@ private void setField(String key,String value){
 	}
 	
 	//判断并获得主表
-	private void parserMaserTable(){ 
+	private void parserMasterTable(){ 
 		if (tableFilter!=null){
 		   masterTable=tableFilter.getTableAlia();
 		}

File: src/main/java/io/mycat/route/parser/druid/impl/DruidInsertParser.java
Patch:
@@ -214,7 +214,7 @@ private void parserBatchInsert(SchemaConfig schema, RouteResultset rrs, String p
 		if(insertStmt.getValuesList().size() > 1) {
 			//字段列数
 			int columnNum = insertStmt.getColumns().size();
-			int shardingColIndex = getSharingColIndex(insertStmt, partitionColumn);
+			int shardingColIndex = getShardingColIndex(insertStmt, partitionColumn);
 			if(shardingColIndex == -1) {
 				String msg = "bad insert sql (sharding column:"+ partitionColumn + " not provided," + insertStmt;
 				LOGGER.warn(msg);
@@ -282,7 +282,7 @@ private void parserBatchInsert(SchemaConfig schema, RouteResultset rrs, String p
 	 * @param partitionColumn
 	 * @return
 	 */
-	private int getSharingColIndex(MySqlInsertStatement insertStmt,String partitionColumn) {
+	private int getShardingColIndex(MySqlInsertStatement insertStmt,String partitionColumn) {
 		int shardingColIndex = -1;
 		for(int i = 0; i < insertStmt.getColumns().size(); i++) {
 			if(partitionColumn.equalsIgnoreCase(StringUtil.removeBackquote(insertStmt.getColumns().get(i).toString()))) {//找到分片字段

File: src/main/java/io/mycat/sqlengine/sharejoin/JoinParser.java
Patch:
@@ -57,7 +57,7 @@ public void parser(){
 	   parserTable(table,tableFilter,false);
 	   
 	   parserFields(mysqlQuery.getSelectList()); 
-	   parserMaserTable();	   
+	   parserMasterTable();	   
 	   
 	   parserWhere(mysqlQuery.getWhere(),"");	   
 	 // getJoinField();
@@ -166,7 +166,7 @@ private void setField(String key,String value){
 	}
 	
 	//判断并获得主表
-	private void parserMaserTable(){ 
+	private void parserMasterTable(){ 
 		if (tableFilter!=null){
 		   masterTable=tableFilter.getTableAlia();
 		}

File: src/main/java/io/mycat/backend/datasource/PhysicalDatasource.java
Patch:
@@ -170,7 +170,7 @@ public int getIdleCount() {
 
 	private boolean validSchema(String schema) {
 		String theSchema = schema;
-		return theSchema != null & !"".equals(theSchema)
+		return theSchema != null && !"".equals(theSchema)
 				&& !"snyn...".equals(theSchema);
 	}
 
@@ -226,7 +226,7 @@ public boolean isSalveOrRead() {
 	}
 
 	public void heatBeatCheck(long timeout, long conHeartBeatPeriod) {
-		int ildeCloseCount = hostConfig.getMinCon() * 3;
+//		int ildeCloseCount = hostConfig.getMinCon() * 3;
 		int maxConsInOneCheck = 5;
 		LinkedList<BackendConnection> heartBeatCons = new LinkedList<BackendConnection>();
 

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -147,7 +147,7 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 					String Seconds_Behind_Master = resultResult.get( "Seconds_Behind_Master");					
 					if (null != Seconds_Behind_Master && !"".equals(Seconds_Behind_Master)) {
 						
-						int Behind_Master = Integer.valueOf(Seconds_Behind_Master);
+						int Behind_Master = Integer.parseInt(Seconds_Behind_Master);
 						if ( Behind_Master > 60 ) {
 							MySQLHeartbeat.LOGGER.warn("found MySQL master/slave Replication delay !!! "
 									+ heartbeat.getSource().getConfig() + ", binlog sync time delay: " + Behind_Master + "s" );

File: src/main/java/io/mycat/backend/jdbc/JDBCHeartbeat.java
Patch:
@@ -88,8 +88,9 @@ public HeartbeatRecorder getRecorder() {
 	public void heartbeat()
 	{
 	    
-		if (isStop.get())
+		if (isStop.get()) {
 			return;
+		}
 		lastSendTime = System.currentTimeMillis();
 		lock.lock();
 		try

File: src/main/java/io/mycat/backend/jdbc/mongodb/MongoConnection.java
Patch:
@@ -48,7 +48,9 @@ public DB getDB()  {
 		if (this._schema!=null) {
 	      return this.mc.getDB(this._schema);
 		}
-		else return null;
+		else {
+			return null;
+		}
 	}
 	   
 	@Override

File: src/main/java/io/mycat/backend/jdbc/mongodb/MongoPreparedStatement.java
Patch:
@@ -56,8 +56,9 @@ public int executeUpdate() throws SQLException {
 	}
 	
 	public  void setValue(int idx, Object o) {	  
-	    while (this._params.size() <= idx)
-	      this._params.add(null);
+	    while (this._params.size() <= idx) {
+			this._params.add(null);
+		}
 	    this._params.set(idx, o);
 	 }
 	  

File: src/main/java/io/mycat/backend/jdbc/sequoiadb/SequoiaPreparedStatement.java
Patch:
@@ -56,8 +56,9 @@ public int executeUpdate() throws SQLException {
 	}
 	
 	public  void setValue(int idx, Object o) {	  
-	    while (this._params.size() <= idx)
-	      this._params.add(null);
+	    while (this._params.size() <= idx) {
+			this._params.add(null);
+		}
 	    this._params.set(idx, o);
 	 }
 	  

File: src/main/java/io/mycat/backend/mysql/SecurityUtil.java
Patch:
@@ -67,7 +67,7 @@ public static final String scramble323(String pass, String seed) {
             chars[i] = (char) b;
         }
         seed1 = ((seed1 * 3) + seed2) % max;
-        seed2 = (seed1 + seed2 + 33) % max;
+//        seed2 = (seed1 + seed2 + 33) % max;
         d = (double) seed1 / (double) max;
         b = (byte) java.lang.Math.floor(d * 31);
         for (int i = 0; i < seed.length(); i++) {

File: src/main/java/io/mycat/backend/mysql/StreamUtil.java
Patch:
@@ -183,8 +183,9 @@ public static final void writeDouble(OutputStream out, double d) throws IOExcept
 
     public static final long readLength(InputStream in) throws IOException {
         int length = in.read();
-        if (length < 0)
+        if (length < 0) {
             throw new EOFException();
+        }
         switch (length) {
         case 251:
             return NULL_LENGTH;

File: src/main/java/io/mycat/backend/mysql/nio/handler/CommitNodeHandler.java
Patch:
@@ -100,6 +100,8 @@ public void okResponse(byte[] ok, BackendConnection conn) {
 					mysqlCon.setXaStatus(0);
 					break;
 				}
+				default:
+					LOGGER.error("Wrong XA status flag!");
 			}
 		}
 		session.clearResources(false);

File: src/main/java/io/mycat/backend/mysql/nio/handler/FetchStoreNodeOfChildTableHandler.java
Patch:
@@ -82,7 +82,6 @@ public String execute(String schema, String sql, ArrayList<String> dataNodes) {
 					LOGGER.debug("execute in datanode " + dn);
 				}
 				RouteResultsetNode node = new RouteResultsetNode(dn, ServerParse.SELECT, sql);
-				new RouteResultsetNode(dn, ServerParse.SELECT, sql);
 				node.setRunOnSlave(false);	// 获取 子表节点，最好走master为好
 
 				mysqlDN.getConnection(mysqlDN.getDatabase(), true, node, this, dn);

File: src/main/java/io/mycat/backend/mysql/nio/handler/RollbackNodeHandler.java
Patch:
@@ -60,11 +60,8 @@ public void rollback() {
 		int started = 0;
 		for (final RouteResultsetNode node : session.getTargetKeys()) {
 			if (node == null) {
-				try {
 					LOGGER.error("null is contained in RoutResultsetNodes, source = "
 							+ session.getSource());
-				} catch (Exception e) {
-				}
 				continue;
 			}
 			final BackendConnection conn = session.getTarget(node);

File: src/main/java/io/mycat/backend/postgresql/utils/PIOUtils.java
Patch:
@@ -57,10 +57,11 @@ public static short redInteger2(ByteBuffer buffer, int offset) {
 	 */
 	public static void SendInteger2(int val, ByteBuffer buffer)
 			throws IOException {
-		if (val < Short.MIN_VALUE || val > Short.MAX_VALUE)
+		if (val < Short.MIN_VALUE || val > Short.MAX_VALUE) {
 			throw new IOException(
 					"Tried to send an out-of-range integer as a 2-byte value: "
 							+ val);
+		}
 
 		byte[] _int2buf = new byte[2];
 		_int2buf[0] = (byte) (val >>> 8);

File: src/main/java/io/mycat/backend/postgresql/utils/PacketUtils.java
Patch:
@@ -182,8 +182,9 @@ public static ByteBuffer makeStartUpPacket(String user, String database)
 		String[][] params = paramList.toArray(new String[0][]);
 		StringBuilder details = new StringBuilder();
 		for (int i = 0; i < params.length; ++i) {
-			if (i != 0)
+			if (i != 0) {
 				details.append(", ");
+			}
 			details.append(params[i][0]);
 			details.append("=");
 			details.append(params[i][1]);

File: src/main/java/io/mycat/buffer/ByteBufferArena.java
Patch:
@@ -24,7 +24,7 @@ public class ByteBufferArena implements BufferPool {
     private final AtomicInteger chunkCount = new AtomicInteger(0);
     private final AtomicInteger failCount = new AtomicInteger(0);
 
-    private final int FAIL_THRESHOLD = 1000;
+    private static final int FAIL_THRESHOLD = 1000;
     private final int pageSize;
     private final int chunkSize;
 

File: src/main/java/io/mycat/buffer/ByteBufferChunkList.java
Patch:
@@ -39,8 +39,9 @@ public ByteBufferChunkList(int minUsage, int maxUsage, int chunkSize, int pageSi
 
     public ByteBufferChunk getIndex(ByteBuffer buffer) {
         for(ByteBufferChunk byteBufferChunk : byteBufferChunks){
-            if (byteBufferChunk.isInThisChunk(buffer))
+            if (byteBufferChunk.isInThisChunk(buffer)) {
                 return byteBufferChunk;
+            }
         }
         return null;
     }

File: src/main/java/io/mycat/cache/index/Shard.java
Patch:
@@ -31,10 +31,10 @@ private void init() { // 初始化一致性hash环
         for (int i = 0; i != shards.size(); ++i) { // 每个真实机器节点都需要关联虚拟节点
             final S shardInfo = shards.get(i);
 
-            for (int n = 0; n < NODE_NUM; n++)
+            for (int n = 0; n < NODE_NUM; n++) {
                 // 一个真实机器节点关联NODE_NUM个虚拟节点
                 nodes.put(hash("SHARD-" + i + "-NODE-" + n), shardInfo);
-
+            }
         }
     }
 

File: src/main/java/io/mycat/config/ConfigInitializer.java
Patch:
@@ -98,8 +98,9 @@ public ConfigInitializer(boolean loadDataHost) {
 	}
 
 	private void checkConfig() throws ConfigException {
-		if (users == null || users.isEmpty())
+		if (users == null || users.isEmpty()) {
 			return;
+		}
 		for (UserConfig uc : users.values()) {
 			if (uc == null) {
 				continue;

File: src/main/java/io/mycat/config/model/QuarantineConfig.java
Patch:
@@ -203,8 +203,9 @@ public InputSource resolveEntity(java.lang.String publicId, java.lang.String sys
 				InputStream dtd = XMLServerLoader.class.getResourceAsStream("/server.dtd");
 				InputSource is = new InputSource(dtd);
 				return is; 
-		    } else 
-		    	return null; 
+		    } else {
+				return null;
+			}
 			} 
 	}
 //	public static void main(String[] args) throws Exception {

File: src/main/java/io/mycat/manager/response/KillConnection.java
Patch:
@@ -46,13 +46,14 @@ public final class KillConnection {
     public static void response(String stmt, int offset, ManagerConnection mc) {
         int count = 0;
         List<FrontendConnection> list = getList(stmt, offset, mc);
-        if (list != null)
+        if (list != null) {
             for (NIOConnection c : list) {
                 StringBuilder s = new StringBuilder();
                 logger.warn(s.append(c).append("killed by manager").toString());
                 c.close("kill by manager");
                 count++;
             }
+        }
         OkPacket packet = new OkPacket();
         packet.packetId = 1;
         packet.affectedRows = count;

File: src/main/java/io/mycat/manager/response/ReloadQueryCf.java
Patch:
@@ -13,8 +13,9 @@ public class ReloadQueryCf {
 
     public static void execute(ManagerConnection c, String cf) {
     	
-    	if ( cf == null ) 
-    		cf = "NULL";
+    	if ( cf == null ) {
+            cf = "NULL";
+        }
     	
     	QueryConditionAnalyzer.getInstance().setCf(cf);
     	

File: src/main/java/io/mycat/net/FrontendConnection.java
Patch:
@@ -420,8 +420,9 @@ public void handle(final byte[] data) {
 		if (isSupportCompress()) {			
 			List<byte[]> packs = CompressUtil.decompressMysqlPacket(data, decompressUnfinishedDataQueue);
 			for (byte[] pack : packs) {
-				if (pack.length != 0)
+				if (pack.length != 0) {
 					rawHandle(pack);
+				}
 			}
 			
 		} else {

File: src/main/java/io/mycat/route/RouteResultsetNode.java
Patch:
@@ -201,8 +201,9 @@ public int hashCode() {
 
 	@Override
 	public boolean equals(Object obj) {
-		if (this == obj)
+		if (this == obj) {
 			return true;
+		}
 		if (obj instanceof RouteResultsetNode) {
 			RouteResultsetNode rrn = (RouteResultsetNode) obj;
 			if(subTableName!=null){

File: src/main/java/io/mycat/route/function/AutoPartitionByLong.java
Patch:
@@ -87,8 +87,9 @@ private void initialize() {
 
 			for (String line = null; (line = in.readLine()) != null;) {
 				line = line.trim();
-				if (line.startsWith("#") || line.startsWith("//"))
+				if (line.startsWith("#") || line.startsWith("//")) {
 					continue;
+				}
 				int ind = line.indexOf('=');
 				if (ind < 0) {
 					System.out.println(" warn: bad line int " + mapFile + " :"

File: src/main/java/io/mycat/route/function/PartitionByPattern.java
Patch:
@@ -97,8 +97,9 @@ private void initialize() {
 
 			for (String line = null; (line = in.readLine()) != null;) {
 				line = line.trim();
-				if (line.startsWith("#") || line.startsWith("//"))
+				if (line.startsWith("#") || line.startsWith("//")) {
 					continue;
+				}
 				int ind = line.indexOf('=');
 				if (ind < 0) {
 					System.out.println(" warn: bad line int " + mapFile + " :"

File: src/main/java/io/mycat/route/function/PartitionByPrefixPattern.java
Patch:
@@ -95,8 +95,9 @@ private void initialize() {
 
 			for (String line = null; (line = in.readLine()) != null;) {
 				line = line.trim();
-				if (line.startsWith("#") || line.startsWith("//"))
+				if (line.startsWith("#") || line.startsWith("//")) {
 					continue;
+				}
 				int ind = line.indexOf('=');
 				if (ind < 0) {
 					System.out.println(" warn: bad line int " + mapFile + " :"

File: src/main/java/io/mycat/route/function/PartitionByRangeMod.java
Patch:
@@ -154,8 +154,9 @@ private void initialize() {
 
 			for (String line = null; (line = in.readLine()) != null;) {
 				line = line.trim();
-				if (line.startsWith("#") || line.startsWith("//"))
+				if (line.startsWith("#") || line.startsWith("//")) {
 					continue;
+				}
 				int ind = line.indexOf('=');
 				if (ind < 0) {
 					System.out.println(" warn: bad line int " + mapFile + " :"

File: src/main/java/io/mycat/route/handler/HintHandlerFactory.java
Patch:
@@ -30,8 +30,9 @@ private static void init() {
     public static HintHandler getHintHandler(String hintType) {
     	if(!isInit) {
     		synchronized(HintHandlerFactory.class){
-    			if(!isInit)
-    				init();
+    			if(!isInit) {
+                    init();
+                }
     		}
     	}
     	return hintHandlerMap.get(hintType);

File: src/main/java/io/mycat/route/handler/HintSQLHandler.java
Patch:
@@ -91,7 +91,9 @@ private   Procedure parseProcedure(String sql,Map hintMap)
         for (int i = sqls.size() - 1; i >= 0; i--)
         {
             String s = sqls.get(i);
-            if(Strings.isNullOrEmpty(s))continue;
+            if(Strings.isNullOrEmpty(s)) {
+                continue;
+            }
             SQLStatementParser parser = new MySqlStatementParser(s);
             SQLStatement statement = parser.parseStatement();
             if(statement instanceof SQLSelectStatement)

File: src/main/java/io/mycat/route/impl/AbstractRouteStrategy.java
Patch:
@@ -28,8 +28,9 @@ public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema, int sql
 		 * 处理一些路由之前的逻辑
 		 * 全局序列号，父子表插入
 		 */
-		if ( beforeRouteProcess(schema, sqlType, origSQL, sc) )
+		if ( beforeRouteProcess(schema, sqlType, origSQL, sc) ) {
 			return null;
+		}
 
 		/**
 		 * SQL 语句拦截

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -274,8 +274,9 @@ private String getFieldName(SQLSelectItem item){
 				|| (item.getExpr() instanceof SQLIdentifierExpr) || item.getExpr() instanceof SQLBinaryOpExpr) {			
 			return item.getExpr().toString();//字段别名
 		}
-		else
-		  return item.toString();
+		else {
+			return item.toString();
+		}
 	}
 	/**
 	 * 改写sql：需要加limit的加上

File: src/main/java/io/mycat/route/parser/util/ArrayUtil.java
Patch:
@@ -35,7 +35,9 @@ public static boolean equals(String str1, String str2) {
     }
 
     public static boolean contains(String[] list, String str) {
-        if (list == null) return false;
+        if (list == null) {
+            return false;
+        }
         for (String string : list) {
             if (equals(str, string)) {
                 return true;

File: src/main/java/io/mycat/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -292,8 +292,9 @@ private synchronized void saveByteOrToFile(byte[] data, boolean isForce)
             {
                 try
                 {
-                    if (channel != null)
+                    if (channel != null) {
                         channel.close();
+                    }
 
                 } catch (IOException ignored)
                 {

File: src/main/java/io/mycat/server/handler/UseHandler.java
Patch:
@@ -41,7 +41,9 @@ public static void handle(String sql, ServerConnection c, int offset) {
         String schema = sql.substring(offset).trim();
         int length = schema.length();
         if (length > 0) {
-        	if(schema.endsWith(";")) schema=schema.substring(0,schema.length()-1);
+        	if(schema.endsWith(";")) {
+                schema = schema.substring(0, schema.length() - 1);
+            }
         	schema = StringUtil.replaceChars(schema, "`", null);
         	length=schema.length();
             if (schema.charAt(0) == '\'' && schema.charAt(length - 1) == '\'') {

File: src/main/java/io/mycat/server/interceptor/impl/DefaultSqlInterceptor.java
Patch:
@@ -46,8 +46,9 @@ public static String processEscape(String sql) {
 	 */
 	@Override
 	public String interceptSQL(String sql, int sqlType) {
-		if("fdbparser".equals(MycatServer.getInstance().getConfig().getSystem().getDefaultSqlParser()))
+		if("fdbparser".equals(MycatServer.getInstance().getConfig().getSystem().getDefaultSqlParser())) {
 			sql = processEscape(sql);
+		}
 		
 		// 全局表一致性 sql 改写拦截
 		SystemConfig system = MycatServer.getInstance().getConfig().getSystem();

File: src/main/java/io/mycat/server/parser/ServerParse.java
Patch:
@@ -661,7 +661,9 @@ static int seCheck(String stmt, int offset) {
                     if(stmt.startsWith("/*!mycat:")||stmt.startsWith("/*#mycat:")||stmt.startsWith("/*mycat:"))
                     {
                         Matcher matcher = callPattern.matcher(stmt);
-                        if (matcher.find()) return CALL;
+                        if (matcher.find()) {
+							return CALL;
+						}
                     }
 
 					char c = stmt.charAt(offset);

File: src/main/java/io/mycat/server/util/SchemaUtil.java
Patch:
@@ -54,8 +54,9 @@ public static String detectDefaultDb(String sql, int type)
         if(ServerParse.INSERT==type||ServerParse.UPDATE==type||ServerParse.DELETE==type||ServerParse.DDL==type)
         {
             SchemaUtil.SchemaInfo schemaInfo = SchemaUtil.parseSchema(sql);
-            if(schemaInfo!=null&&schemaInfo.schema!=null&&schemaConfigMap.containsKey(schemaInfo.schema)  )
-                db= schemaInfo.schema;
+            if(schemaInfo!=null&&schemaInfo.schema!=null&&schemaConfigMap.containsKey(schemaInfo.schema)  ) {
+                db = schemaInfo.schema;
+            }
         }   else
         if((ServerParse.SHOW==type||ServerParse.USE==type||ServerParse.EXPLAIN==type||ServerParse.SET==type
                 ||ServerParse.HELP==type||ServerParse.DESCRIBE==type)

File: src/main/java/io/mycat/sqlengine/mpp/tmp/RowDataCmp.java
Patch:
@@ -34,8 +34,9 @@ public int compare(RowDataPacket o1, RowDataPacket o2) {
 			} else {
 				cmp = RowDataPacketSorter.compareObject(right, left, tmp[i]);
 			}
-			if (cmp != 0)
+			if (cmp != 0) {
 				return cmp;
+			}
 		}
 		return cmp;
 	}

File: src/main/java/io/mycat/statistic/stat/UserSqlHighStat.java
Patch:
@@ -85,8 +85,9 @@ public void recycle() {
 	class SqlParser {
 		
 		public String fixSql(String sql) {
-			if ( sql != null)
+			if ( sql != null) {
 				return sql.replace("\n", " ");
+			}
 			return sql;
 	    }
 		

File: src/main/java/io/mycat/util/ObjectUtil.java
Patch:
@@ -54,7 +54,9 @@ public static Object getStaticFieldValue(String className,String fieldName)
         {
             clazz = Class.forName(className);
            Field field = clazz.getField(fieldName);
-             if(field!=null)return field.get(null);
+             if(field!=null) {
+                 return field.get(null);
+             }
         } catch (ClassNotFoundException e)
         {
             LOGGER.error("getStaticFieldValue", e);

File: src/main/java/io/mycat/util/dataMigrator/DataMigrateRunner.java
Patch:
@@ -34,7 +34,9 @@ public DataMigrateRunner(TableMigrateInfo table, DataNode src,DataNode target,St
 
 	@Override
 	public void run() {
-		if(table.isError()) return;
+		if(table.isError()) {
+			return;
+		}
 		try {
 			long start = System.currentTimeMillis();
 			File loadFile = dataIO.exportData(table,src, tableName, conditionFile.getParentFile(), conditionFile);

File: src/main/java/io/mycat/util/dataMigrator/DataMigratorArgs.java
Patch:
@@ -59,7 +59,9 @@ public String getString(String name){
 	
 	public String getMysqlBin(){
 		String result = getString(MYSQL_BIN);
-		if(result ==null) return "";
+		if(result ==null) {
+			return "";
+		}
 		if(!result.isEmpty() &&!result.endsWith("/")){
 			result +="/";
 		}

File: src/test/java/io/mycat/EchoBioServer.java
Patch:
@@ -84,13 +84,14 @@ public void run() {
             } catch (IOException e) {
                 
                 e.printStackTrace();
-                if (socket != null)
+                if (socket != null) {
                     try {
                         socket.close();
                     } catch (IOException e1) {
-                        
+
                         e1.printStackTrace();
                     }
+                }
             }
         }
     }

File: src/test/java/io/mycat/queue/Queue.java
Patch:
@@ -197,8 +197,9 @@ public String toString() {
         buf.append(", elements={");
         for (int i = 0; i < count; i++) {
             int pos = (i + start) % size;
-            if (i > 0)
+            if (i > 0) {
                 buf.append(", ");
+            }
             buf.append(items[pos]);
         }
         buf.append("}]");

File: src/test/java/io/mycat/statistic/TestConcurrentSafety.java
Patch:
@@ -17,7 +17,7 @@
  * @time 08:54 2016/5/16
  */
 public class TestConcurrentSafety {
-    private static final int THREAD_COUNT = 100;
+    private static final int THREAD_COUNT = 2;
     private static final int LOOP_COUNT = 1000;
 
     String sql = "SELECT `fnum`, `forg`, `fdst`, `airline`, `ftype` , `ports_of_call`, " +

File: src/test/java/io/mycat/util/LockPerfMain.java
Patch:
@@ -37,12 +37,13 @@ public void tReentrantLock() {
 
         long t1 = System.currentTimeMillis();
         for (int i = 0; i < 10000000; i++) {
-            if (lock.tryLock())
+            if (lock.tryLock()) {
                 try {
                     // ...
                 } finally {
                     lock.unlock();
                 }
+            }
         }
         long t2 = System.currentTimeMillis();
 

File: src/test/java/io/mycat/util/SmallSetTest.java
Patch:
@@ -36,8 +36,9 @@
 public class SmallSetTest extends TestCase {
 
     public void assertListEquals(Collection<? extends Object> col, Object... objects) {
-        if (objects == null)
+        if (objects == null) {
             Assert.assertTrue(col.isEmpty());
+        }
         Assert.assertEquals(objects.length, col.size());
         int i = 0;
         for (Object o : col) {

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -147,7 +147,7 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 					String Seconds_Behind_Master = resultResult.get( "Seconds_Behind_Master");					
 					if (null != Seconds_Behind_Master && !"".equals(Seconds_Behind_Master)) {
 						
-						int Behind_Master = Integer.valueOf(Seconds_Behind_Master);
+						int Behind_Master = Integer.parseInt(Seconds_Behind_Master);
 						if ( Behind_Master > 60 ) {
 							MySQLHeartbeat.LOGGER.warn("found MySQL master/slave Replication delay !!! "
 									+ heartbeat.getSource().getConfig() + ", binlog sync time delay: " + Behind_Master + "s" );

File: src/main/java/io/mycat/backend/mysql/SecurityUtil.java
Patch:
@@ -67,7 +67,7 @@ public static final String scramble323(String pass, String seed) {
             chars[i] = (char) b;
         }
         seed1 = ((seed1 * 3) + seed2) % max;
-        seed2 = (seed1 + seed2 + 33) % max;
+//        seed2 = (seed1 + seed2 + 33) % max;
         d = (double) seed1 / (double) max;
         b = (byte) java.lang.Math.floor(d * 31);
         for (int i = 0; i < seed.length(); i++) {

File: src/main/java/io/mycat/backend/mysql/nio/handler/CommitNodeHandler.java
Patch:
@@ -100,6 +100,8 @@ public void okResponse(byte[] ok, BackendConnection conn) {
 					mysqlCon.setXaStatus(0);
 					break;
 				}
+				default:
+					LOGGER.error("Wrong XA status flag!");
 			}
 		}
 		session.clearResources(false);

File: src/main/java/io/mycat/backend/mysql/nio/handler/FetchStoreNodeOfChildTableHandler.java
Patch:
@@ -82,7 +82,6 @@ public String execute(String schema, String sql, ArrayList<String> dataNodes) {
 					LOGGER.debug("execute in datanode " + dn);
 				}
 				RouteResultsetNode node = new RouteResultsetNode(dn, ServerParse.SELECT, sql);
-				new RouteResultsetNode(dn, ServerParse.SELECT, sql);
 				node.setRunOnSlave(false);	// 获取 子表节点，最好走master为好
 
 				mysqlDN.getConnection(mysqlDN.getDatabase(), true, node, this, dn);

File: src/main/java/io/mycat/backend/mysql/nio/handler/RollbackNodeHandler.java
Patch:
@@ -60,11 +60,8 @@ public void rollback() {
 		int started = 0;
 		for (final RouteResultsetNode node : session.getTargetKeys()) {
 			if (node == null) {
-				try {
 					LOGGER.error("null is contained in RoutResultsetNodes, source = "
 							+ session.getSource());
-				} catch (Exception e) {
-				}
 				continue;
 			}
 			final BackendConnection conn = session.getTarget(node);

File: src/main/java/io/mycat/buffer/ByteBufferArena.java
Patch:
@@ -24,7 +24,7 @@ public class ByteBufferArena implements BufferPool {
     private final AtomicInteger chunkCount = new AtomicInteger(0);
     private final AtomicInteger failCount = new AtomicInteger(0);
 
-    private final int FAIL_THRESHOLD = 1000;
+    private static final int FAIL_THRESHOLD = 1000;
     private final int pageSize;
     private final int chunkSize;
 

File: src/test/java/io/mycat/statistic/TestConcurrentSafety.java
Patch:
@@ -17,7 +17,7 @@
  * @time 08:54 2016/5/16
  */
 public class TestConcurrentSafety {
-    private static final int THREAD_COUNT = 5;
+    private static final int THREAD_COUNT = 2;
     private static final int LOOP_COUNT = 1000;
 
     String sql = "SELECT `fnum`, `forg`, `fdst`, `airline`, `ftype` , `ports_of_call`, " +

File: src/main/java/io/mycat/route/sequence/handler/DistributedSequenceHandler.java
Patch:
@@ -218,8 +218,6 @@ private boolean leaderExists() {
         }
     }
 
-    private Set<Long> isSet = new HashSet<>();
-
     @Override
     public long nextId(String prefixName) {
         while (!ready) {

File: src/test/java/io/mycat/buffer/TestByteBufferArena.java
Patch:
@@ -21,8 +21,8 @@
  */
 public class TestByteBufferArena {
     int pageSize = 256;
-    int chunkSize = 1024 * 64;
-    int chunkCount = 8*1024;
+    int chunkSize = 1024 * 8;
+    int chunkCount = 8*128;
     @Test
     public void testAllocate() {
         int allocTimes =  1024 ;

File: src/test/java/io/mycat/sequence/IncrSequenceZKHandlerTest.java
Patch:
@@ -22,9 +22,9 @@
  * @time 23:35 2016/5/6
  */
 public class IncrSequenceZKHandlerTest {
-    private final static int MAX_CONNECTION = 10;
-    private final static int threadCount = 10;
-    private final static int LOOP = 50;
+    private final static int MAX_CONNECTION = 5;
+    private final static int threadCount = 5;
+    private final static int LOOP = 5;
     TestingServer testingServer = null;
     IncrSequenceZKHandler incrSequenceZKHandler[];
     ConcurrentSkipListSet<Long> results;

File: src/test/java/io/mycat/sequence/SequenceTest.java
Patch:
@@ -37,7 +37,7 @@ public void initialize() {
     @Test
     public void testUUID(){
         System.out.print("UUID ");
-        for (int i = 0; i < 1000000; i++) {
+        for (int i = 0; i < 100; i++) {
             sequenceSet.add(UUID.randomUUID().toString());
         }
     }
@@ -51,7 +51,7 @@ public void testRandom(){
     @Test
     public void testRandom2(){
         System.out.print("UUID ");
-        for (int i = 0; i < 10000000; i++) {
+        for (int i = 0; i < 100; i++) {
             sequenceSet.add("aaassscccddd"+i);
         }
     }

File: src/main/java/io/mycat/route/sequence/handler/DistributedSequenceHandler.java
Patch:
@@ -218,8 +218,6 @@ private boolean leaderExists() {
         }
     }
 
-    private Set<Long> isSet = new HashSet<>();
-
     @Override
     public long nextId(String prefixName) {
         while (!ready) {

File: src/test/java/io/mycat/route/HintDBTypeTest.java
Patch:
@@ -52,9 +52,9 @@ public void testHint() throws Exception {
         rrs = routerService.route(new SystemConfig(), schema, ServerParse.SELECT, sql, "UTF-8", null);
         Assert.assertTrue(!rrs.getRunOnSlave());
         
-        //不使用注解，runOnSlave=true 根据读写分离策略走从库
+        //不使用注解，runOnSlave=null, 根据读写分离策略走主从库
         sql = "select * from employee where sharding_id=1";
         rrs = routerService.route(new SystemConfig(), schema, ServerParse.SELECT, sql, "UTF-8", null);
-        Assert.assertTrue(rrs.getRunOnSlave());
+        Assert.assertTrue(rrs.getRunOnSlave()==null);
     }
 }

File: src/test/java/io/mycat/route/HintDBTypeTest.java
Patch:
@@ -52,9 +52,9 @@ public void testHint() throws Exception {
         rrs = routerService.route(new SystemConfig(), schema, ServerParse.SELECT, sql, "UTF-8", null);
         Assert.assertTrue(!rrs.getRunOnSlave());
         
-        //不使用注解，runOnSlave=true 根据读写分离策略走从库
+        //不使用注解，runOnSlave=null, 根据读写分离策略走主从库
         sql = "select * from employee where sharding_id=1";
         rrs = routerService.route(new SystemConfig(), schema, ServerParse.SELECT, sql, "UTF-8", null);
-        Assert.assertTrue(rrs.getRunOnSlave());
+        Assert.assertTrue(rrs.getRunOnSlave()==null);
     }
 }

File: src/test/java/io/mycat/route/HintDBTypeTest.java
Patch:
@@ -55,6 +55,6 @@ public void testHint() throws Exception {
         //不使用注解，runOnSlave=true 根据读写分离策略走从库
         sql = "select * from employee where sharding_id=1";
         rrs = routerService.route(new SystemConfig(), schema, ServerParse.SELECT, sql, "UTF-8", null);
-        Assert.assertTrue(rrs.getRunOnSlave());
+        Assert.assertTrue(rrs.getRunOnSlave()==null);
     }
 }

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -197,6 +197,8 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 			} else {				
     			heartbeat.setResult(MySQLHeartbeat.OK_STATUS, this,  null);
     		}
+			//监测数据库同步状态，在 switchType=-1或者1的情况下，也需要收集主从同步状态
+			heartbeat.getAsynRecorder().set(resultResult, switchType);
             
 		} else {
 			heartbeat.setResult(MySQLHeartbeat.ERROR_STATUS, this,  null);

File: src/main/java/io/mycat/backend/heartbeat/MySQLDetector.java
Patch:
@@ -197,6 +197,8 @@ public void onResult(SQLQueryResult<Map<String, String>> result) {
 			} else {				
     			heartbeat.setResult(MySQLHeartbeat.OK_STATUS, this,  null);
     		}
+			//监测数据库同步状态，在 switchType=-1或者1的情况下，也需要收集主从同步状态
+			heartbeat.getAsynRecorder().set(resultResult, switchType);
             
 		} else {
 			heartbeat.setResult(MySQLHeartbeat.ERROR_STATUS, this,  null);

File: src/main/java/io/mycat/MycatServer.java
Patch:
@@ -590,6 +590,7 @@ public void run() {
 					userStat.getSqlLastStat().recycle();
 					userStat.getSqlRecorder().recycle();
 					userStat.getSqlHigh().recycle();
+					userStat.getSqlLargeRowStat().recycle();
 				}
 			}
 		};

File: src/main/java/io/mycat/route/sequence/handler/SnowflakeIdSequenceHandler.java
Patch:
@@ -119,7 +119,7 @@ public synchronized long nextId(String prefixName) {
 				| this.workerId << this.workerIdShift | this.sequence;
 	}
 
-	private long tilNextMillis(long lastTimestamp) {
+	private synchronized long tilNextMillis(long lastTimestamp) {
 		long timestamp = this.timeGen();
 		while (timestamp <= lastTimestamp) {
 			timestamp = this.timeGen();

File: src/main/java/io/mycat/statistic/DataSourceSyncRecorder.java
Patch:
@@ -39,7 +39,7 @@
  * 
  * @author songwie
  */
-public class DataSourceSyncRecorder {
+public classataSourceSyncRecorder {
 
     private Map<String, String> records;
     private final List<Record> asynRecords;//value,time

File: src/main/java/io/mycat/buffer/BufferArray.java
Patch:
@@ -23,7 +23,7 @@ public class BufferArray {
 	public BufferArray(DirectByteBufferPool bufferPool) {
 		super();
 		this.bufferPool = bufferPool;
-		curWritingBlock = bufferPool.allocate(bufferPool.getChunkSize()*8);
+		curWritingBlock = bufferPool.allocate(bufferPool.getChunkSize());
 	}
 
 	public ByteBuffer checkWriteBuffer(int capacity) {
@@ -76,7 +76,7 @@ public ByteBuffer write(byte[] src) {
 				offset += writeable;
 				remains -= writeable;
 				addtoBlock(curWritingBlock);
-				curWritingBlock = bufferPool.allocate(bufferPool.getChunkSize()*8);
+				curWritingBlock = bufferPool.allocate(bufferPool.getChunkSize());
 				continue;
 			}
 		}

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -41,7 +41,7 @@ public final class SystemConfig {
 	private static final String DEFAULT_CHARSET = "utf8";
 
 	private static final String DEFAULT_SQL_PARSER = "druidparser";// fdbparser, druidparser
-	private static final short DEFAULT_BUFFER_CHUNK_SIZE = 512;
+	private static final short DEFAULT_BUFFER_CHUNK_SIZE = 4096;
 	private static final int DEFAULT_BUFFER_POOL_PAGE_SIZE = 512*1024*10;
 	private static final short DEFAULT_BUFFER_POOL_PAGE_NUMBER = 8;
 	private int processorBufferLocalPercent;
@@ -656,4 +656,4 @@ public String toString() {
 
 
 
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/net/AIOSocketWR.java
Patch:
@@ -30,7 +30,7 @@ public void asynRead()
         ByteBuffer theBuffer = con.readBuffer;
         if (theBuffer == null)
         {
-            theBuffer = con.processor.getBufferPool().allocate(con.processor.getBufferPool().getChunkSize() *8);
+            theBuffer = con.processor.getBufferPool().allocate(con.processor.getBufferPool().getChunkSize());
             con.readBuffer = theBuffer;
             channel.read(theBuffer, this, aioReadHandler);
 

File: src/main/java/io/mycat/net/AbstractConnection.java
Patch:
@@ -208,7 +208,7 @@ public long getLastReadTime() {
 
 	public void setProcessor(NIOProcessor processor) {
 		this.processor = processor;
-		int size = processor.getBufferPool().getChunkSize()*8;
+		int size = processor.getBufferPool().getChunkSize();
 		this.readBuffer = processor.getBufferPool().allocate(size);
 	}
 
@@ -237,7 +237,7 @@ public ByteBuffer getReadBuffer() {
 	}
 
 	public ByteBuffer allocate() {
-		int size = this.processor.getBufferPool().getChunkSize()*8;
+		int size = this.processor.getBufferPool().getChunkSize();
 		ByteBuffer buffer = this.processor.getBufferPool().allocate(size);
 		return buffer;
 	}
@@ -589,4 +589,4 @@ private void closeSocket() {
 	public void onConnectfinish() {
 		LOGGER.debug("连接后台真正完成");
 	}	
-}
\ No newline at end of file
+}

File: src/main/java/io/mycat/net/NIOSocketWR.java
Patch:
@@ -180,7 +180,7 @@ public void asynRead() throws IOException {
 		ByteBuffer theBuffer = con.readBuffer;
 		if (theBuffer == null) {
 
-			theBuffer = con.processor.getBufferPool().allocate(con.processor.getBufferPool().getChunkSize()*8);
+			theBuffer = con.processor.getBufferPool().allocate(con.processor.getBufferPool().getChunkSize());
 
 			con.readBuffer = theBuffer;
 		}

File: src/main/java/io/mycat/config/Versions.java
Patch:
@@ -32,6 +32,6 @@ public interface Versions {
     public static final byte PROTOCOL_VERSION = 10;
 
     /**服务器版**/
-    public static final byte[] SERVER_VERSION = "5.6.29-mycat-1.6-DEV-20160429212157".getBytes();
+    public static final byte[] SERVER_VERSION = "5.6.29-mycat-1.6-DEV-20160509113407".getBytes();
 
 }
\ No newline at end of file

File: src/main/java/io/mycat/route/sequence/handler/DistributedSequenceHandler.java
Patch:
@@ -199,7 +199,6 @@ private boolean tryGetInstanceID() {
             } catch (InterruptedException e1) {
                 LOGGER.warn("Unexpected thread interruption!");
             }
-            LOGGER.warn("Exception caught while trying to get InstanceID from ZK!If this exception frequently happens, please check your network connection! Cause:" + e.getCause() + " Message:" + e.getMessage());
             return false;
         }
     }
@@ -244,7 +243,6 @@ public long nextId(String prefixName) {
             }
         }
         int a = threadInc.get(thread);
-        System.out.println((thread.getId() % maxThreadId) + "|" + (timestampMask)+":"+(System.currentTimeMillis() & timestampMask));
         return ((System.currentTimeMillis() & timestampMask) << timestampShift) | (((thread.getId() % maxThreadId) << threadIdShift)) | (instanceId << instanceIdShift) | (clusterId << clusterIdShift) | a;
     }
 

File: src/main/java/io/mycat/server/NonBlockingSession.java
Patch:
@@ -117,6 +117,8 @@ public void execute(RouteResultset rrs, int type) {
                     "No dataNode found ,please check tables defined in schema:" + source.getSchema());
             return;
         }
+        
+
         if (nodes.length == 1) {
             singleNodeHandler = new SingleNodeHandler(rrs, this);
             if (this.isPrepared()) {

File: src/main/java/io/mycat/statistic/CommandCount.java
Patch:
@@ -38,7 +38,9 @@ public class CommandCount {
     private long quit;
     private long heartbeat;
     private long other;
+    public CommandCount(){
 
+    }
     public void doInitDB() {
         ++initDB;
     }

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -96,6 +96,8 @@ public final class SystemConfig {
 	public static final int SEQUENCEHANDLER_LOCALFILE = 0;
 	public static final int SEQUENCEHANDLER_MYSQLDB = 1;
 	public static final int SEQUENCEHANDLER_LOCAL_TIME = 2;
+	public static final int SEQUENCEHANDLER_ZK_DISTRIBUTED = 3;
+	public static final int SEQUENCEHANDLER_ZK_GLOBAL_INCREMENT = 4;
 	private int sequnceHandlerType = SEQUENCEHANDLER_LOCALFILE;
 	private String sqlInterceptor = "io.mycat.server.interceptor.impl.DefaultSqlInterceptor";
 	private String sqlInterceptorType = "select";

File: src/main/java/io/mycat/route/parser/ManagerParseShow.java
Patch:
@@ -75,7 +75,8 @@ public final class ManagerParseShow {
 
     public static final int WHITE_HOST=42;
     public static final int WHITE_HOST_SET=43;
-    
+
+
     public static int parse(String stmt, int offset) {
         int i = offset;
         for (; i < stmt.length(); i++) {

File: src/test/java/io/mycat/sequence/IncrSequenceZKHandlerTest.java
Patch:
@@ -22,8 +22,8 @@
  * @time 23:35 2016/5/6
  */
 public class IncrSequenceZKHandlerTest {
-    private final static int MAX_CONNECTION = 60;
-    private final static int threadCount = 20;
+    private final static int MAX_CONNECTION = 10;
+    private final static int threadCount = 10;
     private final static int LOOP = 50;
     TestingServer testingServer = null;
     IncrSequenceZKHandler incrSequenceZKHandler[];

File: src/main/java/io/mycat/net/NIOConnector.java
Patch:
@@ -158,7 +158,7 @@ public static class ConnectIdGenerator {
 		private static final long MAX_VALUE = Long.MAX_VALUE;
 		private AtomicLong connectId = new AtomicLong(0);
 
-		private long getId() {
+		public long getId() {
 			return connectId.incrementAndGet();
 		}
 	}

File: src/main/java/io/mycat/backend/jdbc/JDBCConnection.java
Patch:
@@ -588,7 +588,7 @@ private void ouputCallStatement(RouteResultsetNode rrn,ServerConnection sc, Stri
 
 
 
-            if(procedure.isResultList())
+            if(!procedure.isResultSimpleValue())
             {
                 byte[] OK = new byte[] { 7, 0, 0, 1, 0, 0, 0, 2, 0, 0,
                         0 };

File: src/main/java/io/mycat/route/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -297,7 +297,8 @@ public void changeSql(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt
 
 			//clear group having
 			SQLSelectGroupByClause groupByClause = mysqlSelectQuery.getGroupBy();
-			if(groupByClause != null && groupByClause.getHaving() != null){
+			// Modified by winbill, 20160614, do NOT include having clause when routing to multiple nodes
+			if(groupByClause != null && groupByClause.getHaving() != null && isRoutMultiNode(schema,rrs)){
 				groupByClause.setHaving(null);
 			}
 			

File: src/main/java/io/mycat/backend/mysql/nio/MySQLConnection.java
Patch:
@@ -151,6 +151,8 @@ public MySQLConnection(NetworkChannel channel, boolean fromSlaveDB) {
 		this.isQuit = new AtomicBoolean(false);
 		this.autocommit = true;
 		this.fromSlaveDB = fromSlaveDB;
+		// 设为默认值，免得每个初始化好的连接都要去同步一下
+		this.txIsolation = MycatServer.getInstance().getConfig().getSystem().getTxIsolation();
 	}
 
 	public int getXaStatus() {

File: src/main/java/io/mycat/backend/mysql/nio/MySQLConnection.java
Patch:
@@ -151,6 +151,8 @@ public MySQLConnection(NetworkChannel channel, boolean fromSlaveDB) {
 		this.isQuit = new AtomicBoolean(false);
 		this.autocommit = true;
 		this.fromSlaveDB = fromSlaveDB;
+		// 设为默认值，免得每个初始化好的连接都要去同步一下
+		this.txIsolation = MycatServer.getInstance().getConfig().getSystem().getTxIsolation();
 	}
 
 	public int getXaStatus() {

File: src/main/java/io/mycat/config/model/SystemConfig.java
Patch:
@@ -40,7 +40,7 @@ public final class SystemConfig {
 	private static final int DEFAULT_MANAGER_PORT = 9066;
 	private static final String DEFAULT_CHARSET = "utf8";
 
-	private static final String DEFAULT_SQL_PARSER = "fdbparser";// druidparser
+	private static final String DEFAULT_SQL_PARSER = "druidparser";// fdbparser, druidparser
 	private static final int DEFAULT_BUFFER_CHUNK_SIZE = 4096;
 	private int processorBufferLocalPercent;
 	private static final int DEFAULT_PROCESSORS = Runtime.getRuntime()

File: src/main/java/org/opencloudb/route/util/RouterUtil.java
Patch:
@@ -173,8 +173,6 @@ public static RouteResultset routeToDDLNode(RouteResultset rrs, int sqlType, Str
 	 * @author AStoneGod
 	 */
 	public static String getFixedSql(String stmt){
-		if (stmt.endsWith(";"))
-			stmt = stmt.substring(0,stmt.length()-2);
 		stmt = stmt.replaceAll("\r\n", " "); //对于\r\n的字符 用 空格处理 rainbow
 		return stmt = stmt.trim(); //.toUpperCase();    
 	}
@@ -1101,7 +1099,8 @@ public static boolean checkRuleRequired(SchemaConfig schema, DruidShardingParseI
 	 * @return
 	 */
 	public static boolean isNoSharding(SchemaConfig schemaConfig, String tableName) {
-		
+		// Table名字被转化为大写的，存储在schema
+		tableName = tableName.toUpperCase();
 		if (schemaConfig.isNoSharding()) {
 			return true;
 		}

File: src/main/java/org/opencloudb/route/util/RouterUtil.java
Patch:
@@ -173,8 +173,6 @@ public static RouteResultset routeToDDLNode(RouteResultset rrs, int sqlType, Str
 	 * @author AStoneGod
 	 */
 	public static String getFixedSql(String stmt){
-		if (stmt.endsWith(";"))
-			stmt = stmt.substring(0,stmt.length()-2);
 		stmt = stmt.replaceAll("\r\n", " "); //对于\r\n的字符 用 空格处理 rainbow
 		return stmt = stmt.trim(); //.toUpperCase();    
 	}

File: src/main/java/org/opencloudb/route/util/RouterUtil.java
Patch:
@@ -1101,7 +1101,8 @@ public static boolean checkRuleRequired(SchemaConfig schema, DruidShardingParseI
 	 * @return
 	 */
 	public static boolean isNoSharding(SchemaConfig schemaConfig, String tableName) {
-		
+		// Table名字被转化为大写的，存储在schema
+		tableName = tableName.toUpperCase();
 		if (schemaConfig.isNoSharding()) {
 			return true;
 		}

File: src/main/java/org/opencloudb/route/handler/HintSQLHandler.java
Patch:
@@ -16,6 +16,7 @@
  * 处理注释中 类型为sql的情况 （按照 注释中的sql做路由解析，而不是实际的sql）
  */
 public class HintSQLHandler implements HintHandler {
+	
 	private RouteStrategy routeStrategy;
 	
 	public HintSQLHandler() {
@@ -27,9 +28,10 @@ public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema,
 			int sqlType, String realSQL, String charset, ServerConnection sc,
 			LayerCachePool cachePool, String hintSQLValue)
 			throws SQLNonTransientException {
-
+		
 		RouteResultset rrs = routeStrategy.route(sysConfig, schema, sqlType,
 				hintSQLValue, charset, sc, cachePool);
+		
 		// 替换RRS中的SQL执行
 		RouteResultsetNode[] oldRsNodes = rrs.getNodes();
 		RouteResultsetNode[] newRrsNodes = new RouteResultsetNode[oldRsNodes.length];

File: src/main/java/org/opencloudb/route/impl/AbstractRouteStrategy.java
Patch:
@@ -20,7 +20,7 @@ public abstract class AbstractRouteStrategy implements RouteStrategy {
 	private static final Logger LOGGER = Logger.getLogger(AbstractRouteStrategy.class);
 
 	@Override
-	public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema,int sqlType, String origSQL,
+	public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema, int sqlType, String origSQL,
 			String charset, ServerConnection sc, LayerCachePool cachePool) throws SQLNonTransientException {
 
 		/**

File: src/main/java/org/opencloudb/route/handler/HintSQLHandler.java
Patch:
@@ -16,6 +16,7 @@
  * 处理注释中 类型为sql的情况 （按照 注释中的sql做路由解析，而不是实际的sql）
  */
 public class HintSQLHandler implements HintHandler {
+	
 	private RouteStrategy routeStrategy;
 	
 	public HintSQLHandler() {
@@ -27,9 +28,10 @@ public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema,
 			int sqlType, String realSQL, String charset, ServerConnection sc,
 			LayerCachePool cachePool, String hintSQLValue)
 			throws SQLNonTransientException {
-
+		
 		RouteResultset rrs = routeStrategy.route(sysConfig, schema, sqlType,
 				hintSQLValue, charset, sc, cachePool);
+		
 		// 替换RRS中的SQL执行
 		RouteResultsetNode[] oldRsNodes = rrs.getNodes();
 		RouteResultsetNode[] newRrsNodes = new RouteResultsetNode[oldRsNodes.length];

File: src/main/java/org/opencloudb/route/impl/AbstractRouteStrategy.java
Patch:
@@ -20,7 +20,7 @@ public abstract class AbstractRouteStrategy implements RouteStrategy {
 	private static final Logger LOGGER = Logger.getLogger(AbstractRouteStrategy.class);
 
 	@Override
-	public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema,int sqlType, String origSQL,
+	public RouteResultset route(SystemConfig sysConfig, SchemaConfig schema, int sqlType, String origSQL,
 			String charset, ServerConnection sc, LayerCachePool cachePool) throws SQLNonTransientException {
 
 		/**

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -364,7 +364,7 @@ private void tryRoute(SchemaConfig schema, RouteResultset rrs, LayerCachePool ca
 		}
 
 		//无表的select语句直接路由带任一节点
-		if(ctx.getTables() == null || ctx.getTables().size() == 0) {
+        if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty())) {
 			rrs = RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), ctx.getSql());
 			rrs.setFinishedRoute(true);
 			return;

File: src/main/java/org/opencloudb/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -73,7 +73,9 @@ public RouteResultset routeNormalSqlWithAST(SchemaConfig schema,
 		/**
 		 * 没有from的select语句或其他
 		 */
-		if (druidParser.getCtx().getTables().size() == 0) {
+        DruidShardingParseInfo ctx=  druidParser.getCtx() ;
+        if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty()))
+        {
 			return RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), druidParser.getCtx().getSql());
 		}
 

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -364,7 +364,7 @@ private void tryRoute(SchemaConfig schema, RouteResultset rrs, LayerCachePool ca
 		}
 
 		//无表的select语句直接路由带任一节点
-		if(ctx.getTables() == null || ctx.getTables().size() == 0) {
+		if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty())) {
 			rrs = RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), ctx.getSql());
 			rrs.setFinishedRoute(true);
 			return;

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -364,7 +364,7 @@ private void tryRoute(SchemaConfig schema, RouteResultset rrs, LayerCachePool ca
 		}
 
 		//无表的select语句直接路由带任一节点
-		if(ctx.getTables() == null || ctx.getTables().size() == 0) {
+        if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty())) {
 			rrs = RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), ctx.getSql());
 			rrs.setFinishedRoute(true);
 			return;

File: src/main/java/org/opencloudb/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -73,7 +73,9 @@ public RouteResultset routeNormalSqlWithAST(SchemaConfig schema,
 		/**
 		 * 没有from的select语句或其他
 		 */
-		if (druidParser.getCtx().getTables().size() == 0) {
+        DruidShardingParseInfo ctx=  druidParser.getCtx() ;
+        if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty()))
+        {
 			return RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), druidParser.getCtx().getSql());
 		}
 

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -364,7 +364,7 @@ private void tryRoute(SchemaConfig schema, RouteResultset rrs, LayerCachePool ca
 		}
 
 		//无表的select语句直接路由带任一节点
-		if(ctx.getTables() == null || ctx.getTables().size() == 0) {
+		if((ctx.getTables() == null || ctx.getTables().size() == 0)&&(ctx.getTableAliasMap()==null||ctx.getTableAliasMap().isEmpty())) {
 			rrs = RouterUtil.routeToSingleNode(rrs, schema.getRandomDataNode(), ctx.getSql());
 			rrs.setFinishedRoute(true);
 			return;

File: src/main/java/demo/catlets/XmlToYaml.java
Patch:
@@ -55,7 +55,7 @@ public static void main(String[] args) throws JAXBException, IOException, XMLStr
             properties.load(myidStream);
 
             serializeMap = new LinkedHashMap<>();
-            serializeMap.put(properties.getProperty("zkURL"), "127.0.0.1:2181");
+            serializeMap.put("zkURL", properties.getProperty("zkURL"));
 
             Server server = loadServer(serverStream);
             serializeMap.put("mycat-cluster",

File: src/main/java/demo/catlets/XmlToYaml.java
Patch:
@@ -55,7 +55,7 @@ public static void main(String[] args) throws JAXBException, IOException, XMLStr
             properties.load(myidStream);
 
             serializeMap = new LinkedHashMap<>();
-            serializeMap.put(properties.getProperty("zkURL"), "127.0.0.1:2181");
+            serializeMap.put("zkURL", properties.getProperty("zkURL"));
 
             Server server = loadServer(serverStream);
             serializeMap.put("mycat-cluster",

File: src/main/java/org/opencloudb/response/ReloadConfig.java
Patch:
@@ -84,6 +84,8 @@ private static boolean reload_all() {
 
 		// 应用新配置
 		MycatConfig conf = MycatServer.getInstance().getConfig();
+		conf.setDataNodes(dataNodes);
+		
 		Map<String, PhysicalDBPool> cNodes = conf.getDataHosts();
 		boolean reloadStatus = true;
 		for (PhysicalDBPool dn : dataHosts.values()) {

File: src/main/java/org/opencloudb/response/ReloadConfig.java
Patch:
@@ -84,6 +84,8 @@ private static boolean reload_all() {
 
 		// 应用新配置
 		MycatConfig conf = MycatServer.getInstance().getConfig();
+		conf.setDataNodes(dataNodes);
+		
 		Map<String, PhysicalDBPool> cNodes = conf.getDataHosts();
 		boolean reloadStatus = true;
 		for (PhysicalDBPool dn : dataHosts.values()) {

File: src/main/java/org/opencloudb/net/FrontendConnection.java
Patch:
@@ -426,12 +426,11 @@ public void rawHandle(final byte[] data) {
 			loadDataInfileEnd(data[3]);
 			return;
 		}
-		
-		if (data.length > 4 && data[4] == MySQLPacket.COM_QUIT) {
+		//修改quit的判断,当load data infile 分隔符为\001 时可能会出现误判断的bug.
+		if (data.length>4 && data[0] == 1 && data[1] == 0 && data[2]== 0 && data[3] == 0 &&data[4] == MySQLPacket.COM_QUIT) {
 			this.getProcessor().getCommands().doQuit();
 			this.close("quit cmd");
 			return;
-
 		}
 		handler.handle(data);
 	}

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -424,7 +424,8 @@ private void parseOneLine(List<SQLExpr> columns, String tableName, String[] line
 
                 if (toFile)
                 {
-                    if(data.getData().size()>100000)
+                    //避免当导入数据跨多分片时内存溢出的情况
+                    if(data.getData().size()>10000)
                     {
                         saveDataToFile(data,name);
                     }

File: src/main/java/org/opencloudb/net/FrontendConnection.java
Patch:
@@ -447,11 +447,11 @@ public void rawHandle(final byte[] data) {
 			loadDataInfileEnd(data[3]);
 			return;
 		}
-		if (data.length>4&&data[4] == MySQLPacket.COM_QUIT) {
+		//修改quit的判断,当load data infile 分隔符为\001 时可能会出现误判断的bug.
+		if (data.length>4 && data[0] == 1 && data[1] == 0 && data[2]== 0 && data[3] == 0 &&data[4] == MySQLPacket.COM_QUIT) {
 			this.getProcessor().getCommands().doQuit();
 			this.close("quit cmd");
 			return;
-
 		}
 		handler.handle(data);
 	}

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -420,7 +420,8 @@ private void parseOneLine(List<SQLExpr> columns, String tableName, String[] line
 
                 if (toFile)
                 {
-                    if(data.getData().size()>100000)
+                    //避免当导入数据跨多分片时内存溢出的情况
+                    if(data.getData().size()>1000)
                     {
                         saveDataToFile(data,name);
                     }

File: src/main/java/org/opencloudb/stat/HighFrequencySqlAnalyzer.java
Patch:
@@ -184,7 +184,7 @@ public void setExecuteTime(long execTime) {
 			  }
 			}
 			this.executeTime = execTime;	
-		   System.out.println(" exec:"+execTime +" max:"+maxTime+" min:"+minTime+ " avg:"+avgTime);	
+		   //System.out.println(" exec:"+execTime +" max:"+maxTime+" min:"+minTime+ " avg:"+avgTime);	
 		}			
 	}
 	

File: src/main/java/org/opencloudb/stat/HighFrequencySqlAnalyzer.java
Patch:
@@ -184,7 +184,7 @@ public void setExecuteTime(long execTime) {
 			  }
 			}
 			this.executeTime = execTime;	
-		   System.out.println(" exec:"+execTime +" max:"+maxTime+" min:"+minTime+ " avg:"+avgTime);	
+		   //System.out.println(" exec:"+execTime +" max:"+maxTime+" min:"+minTime+ " avg:"+avgTime);	
 		}			
 	}
 	

File: src/main/java/org/opencloudb/heartbeat/MySQLDetector.java
Patch:
@@ -151,6 +151,7 @@ else if(PhysicalDBPool.BALANCE_NONE!=balance && switchType==DataHostConfig.CLUST
 				String wsrep_ready = resultResult!=null?resultResult.get("wsrep_ready"):null;//ON
 				if("ON".equals(wsrep_connected) && "ON".equals(wsrep_ready) && "Primary".equals(wsrep_cluster_status)){
 					heartbeat.setDbSynStatus(DBHeartbeat.DB_SYN_NORMAL);
+					heartbeat.setResult(MySQLHeartbeat.OK_STATUS, this,  null);
 				}else{
 					MySQLHeartbeat.LOGGER.warn("found MySQL  cluster status err !!! " + heartbeat.getSource().getConfig() 
 							+ " wsrep_cluster_status: "+ wsrep_cluster_status  

File: src/main/java/org/opencloudb/server/parser/ServerParseShow.java
Patch:
@@ -161,7 +161,7 @@ static int dataCheck(String stmt, int offset) {
 
 	// SHOW TABLE
 
-	static int tableCheck(String stmt, int offset) {
+public 	static int tableCheck(String stmt, int offset) {
 
 		// strict match
 		String pat1 = "^\\s*(SHOW)\\s+(TABLES)\\s*";

File: src/main/java/org/opencloudb/server/parser/ServerParseShow.java
Patch:
@@ -161,7 +161,7 @@ static int dataCheck(String stmt, int offset) {
 
 	// SHOW TABLE
 
-	static int tableCheck(String stmt, int offset) {
+public 	static int tableCheck(String stmt, int offset) {
 
 		// strict match
 		String pat1 = "^\\s*(SHOW)\\s+(TABLES)\\s*";

File: src/main/java/org/opencloudb/MycatServer.java
Patch:
@@ -185,7 +185,7 @@ public void beforeStart() {
 		String home = SystemConfig.getHomePath();
 		Log4jInitializer.configureAndWatch(home + "/conf/log4j.xml", LOG_WATCH_DELAY);
 		
-		ZkConfig.instance().initZk();
+		//ZkConfig.instance().initZk();
 	}
 
 	public void startup() throws IOException {

File: src/main/java/org/opencloudb/MycatServer.java
Patch:
@@ -185,7 +185,7 @@ public void beforeStart() {
 		String home = SystemConfig.getHomePath();
 		Log4jInitializer.configureAndWatch(home + "/conf/log4j.xml", LOG_WATCH_DELAY);
 		
-		ZkConfig.instance().initZk();
+		//ZkConfig.instance().initZk();
 	}
 
 	public void startup() throws IOException {

File: src/main/java/demo/catlets/ZkCreate.java
Patch:
@@ -37,8 +37,9 @@ public class ZkCreate {
 
     public static void main(String[] args) {
         zkConfig = loadZkConfig();
+        String url = zkConfig.containsKey(CONFIG_URL_KEY)? (String) zkConfig.get(CONFIG_URL_KEY) : "127.0.0.1:2181";
         framework =
-            createConnection((String) zkConfig.getOrDefault(CONFIG_URL_KEY, "127.0.0.1:2181"))
+            createConnection(url)
                 .usingNamespace("mycat");
 
         createConfig(MYCAT_HOST_KEY, false, MYCAT_HOST_KEY);

File: src/main/java/demo/catlets/ZkCreate.java
Patch:
@@ -37,8 +37,9 @@ public class ZkCreate {
 
     public static void main(String[] args) {
         zkConfig = loadZkConfig();
+        String url = zkConfig.containsKey(CONFIG_URL_KEY)? (String) zkConfig.get(CONFIG_URL_KEY) : "127.0.0.1:2181";
         framework =
-            createConnection((String) zkConfig.getOrDefault(CONFIG_URL_KEY, "127.0.0.1:2181"))
+            createConnection(url)
                 .usingNamespace("mycat");
 
         createConfig(MYCAT_HOST_KEY, false, MYCAT_HOST_KEY);

File: src/main/java/org/opencloudb/heartbeat/MySQLDetector.java
Patch:
@@ -87,7 +87,7 @@ public long getLasstReveivedQryTime() {
 	}
 
 	public void heartbeat() {
-		lastSendQryTime = TimeUtil.currentTimeNanos();
+		lastSendQryTime = System.currentTimeMillis();
 		MySQLDataSource ds = heartbeat.getSource();
 		String databaseName = ds.getDbPool().getSchemas()[0];
 		String[] fetchColms={};
@@ -164,8 +164,8 @@ else if(PhysicalDBPool.BALANCE_NONE!=balance && switchType==DataHostConfig.CLUST
 		} else {
 			heartbeat.setResult(MySQLHeartbeat.ERROR_STATUS, this,  null);
 		}
-		lasstReveivedQryTime = TimeUtil.currentTimeNanos();
-		heartbeat.getRecorder().set((lasstReveivedQryTime - lastSendQryTime)/(1000*1000L));
+		lasstReveivedQryTime = System.currentTimeMillis();
+		heartbeat.getRecorder().set((lasstReveivedQryTime - lastSendQryTime));
 	}
 
 	public void close(String msg) {

File: src/main/java/org/opencloudb/heartbeat/MySQLDetector.java
Patch:
@@ -87,7 +87,7 @@ public long getLasstReveivedQryTime() {
 	}
 
 	public void heartbeat() {
-		lastSendQryTime = TimeUtil.currentTimeNanos();
+		lastSendQryTime = System.currentTimeMillis();
 		MySQLDataSource ds = heartbeat.getSource();
 		String databaseName = ds.getDbPool().getSchemas()[0];
 		String[] fetchColms={};
@@ -164,8 +164,8 @@ else if(PhysicalDBPool.BALANCE_NONE!=balance && switchType==DataHostConfig.CLUST
 		} else {
 			heartbeat.setResult(MySQLHeartbeat.ERROR_STATUS, this,  null);
 		}
-		lasstReveivedQryTime = TimeUtil.currentTimeNanos();
-		heartbeat.getRecorder().set((lasstReveivedQryTime - lastSendQryTime)/(1000*1000L));
+		lasstReveivedQryTime = System.currentTimeMillis();
+		heartbeat.getRecorder().set((lasstReveivedQryTime - lastSendQryTime));
 	}
 
 	public void close(String msg) {

File: src/main/java/org/opencloudb/parser/druid/MycatStatementParser.java
Patch:
@@ -52,7 +52,7 @@ protected MySqlLoadDataInFileStatement parseLoadDataInFile()
     {
         acceptIdentifier("DATA");
 
-        MySqlLoadDataInFileStatement stmt = new MySqlLoadDataInFileStatement();
+        LoadDataStatement stmt = new LoadDataStatement();
 
         if (identifierEquals(LOW_PRIORITY)) {
             stmt.setLowPriority(true);

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -485,7 +485,7 @@ private String joinField(String[] src, LoadData loadData)
         StringBuilder sb = new StringBuilder();
         for (int i = 0, srcLength = src.length; i < srcLength; i++)
         {
-            String s = src[i];
+            String s = src[i]!=null?src[i]:"";
             if(loadData.getEnclose()==null)
             {
                   sb.append(s);

File: src/main/java/org/opencloudb/parser/druid/MycatStatementParser.java
Patch:
@@ -52,7 +52,7 @@ protected MySqlLoadDataInFileStatement parseLoadDataInFile()
     {
         acceptIdentifier("DATA");
 
-        MySqlLoadDataInFileStatement stmt = new MySqlLoadDataInFileStatement();
+        LoadDataStatement stmt = new LoadDataStatement();
 
         if (identifierEquals(LOW_PRIORITY)) {
             stmt.setLowPriority(true);

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -485,7 +485,7 @@ private String joinField(String[] src, LoadData loadData)
         StringBuilder sb = new StringBuilder();
         for (int i = 0, srcLength = src.length; i < srcLength; i++)
         {
-            String s = src[i];
+            String s = src[i]!=null?src[i]:"";
             if(loadData.getEnclose()==null)
             {
                   sb.append(s);

File: src/main/java/org/opencloudb/net/AbstractConnection.java
Patch:
@@ -396,15 +396,14 @@ public final void write(ByteBuffer buffer) {
 
 	public ByteBuffer checkWriteBuffer(ByteBuffer buffer, int capacity,
 			boolean writeSocketIfFull) {
-	    //预留出写长度的字节数，modified by @执笔相思
-		if (capacity > buffer.remaining() - 9) {
+		if (capacity > buffer.remaining()) {
 			if (writeSocketIfFull) {
 				writeNotSend(buffer);
 				return processor.getBufferPool().allocate(capacity);
 			} else {// Relocate a larger buffer
 				buffer.flip();
 				ByteBuffer newBuf = processor.getBufferPool().allocate(
-						capacity + buffer.limit() + 9); //预留出写长度的字节数，modified by @执笔相思
+						capacity + buffer.limit() + 1);
 				newBuf.put(buffer);
 				this.recycle(buffer);
 				return newBuf;

File: src/main/java/org/opencloudb/net/mysql/RowDataPacket.java
Patch:
@@ -101,7 +101,7 @@ public ByteBuffer write(ByteBuffer bb, FrontendConnection c,
                 bb.put(RowDataPacket.EMPTY_MARK);
             }
             else {
-				bb = c.checkWriteBuffer(bb, fv.length,
+				bb = c.checkWriteBuffer(bb, BufferUtil.getLength(fv),
 						writeSocketIfFull);
 				BufferUtil.writeLength(bb, fv.length);
 				bb = c.writeToBuffer(fv, bb);

File: src/main/java/org/opencloudb/net/mysql/FieldPacket.java
Patch:
@@ -158,7 +158,9 @@ private void writeBody(ByteBuffer buffer) {
 		buffer.put((byte) (type & 0xff));
 		BufferUtil.writeUB2(buffer, flags);
 		buffer.put(decimals);
-		buffer.position(buffer.position() + FILLER.length);
+        buffer.put((byte)0x00);
+        buffer.put((byte)0x00);
+		//buffer.position(buffer.position() + FILLER.length);
 		if (definition != null) {
 			BufferUtil.writeWithLength(buffer, definition);
 		}

File: src/main/java/org/opencloudb/net/mysql/FieldPacket.java
Patch:
@@ -158,7 +158,9 @@ private void writeBody(ByteBuffer buffer) {
 		buffer.put((byte) (type & 0xff));
 		BufferUtil.writeUB2(buffer, flags);
 		buffer.put(decimals);
-		buffer.position(buffer.position() + FILLER.length);
+        buffer.put((byte)0x00);
+        buffer.put((byte)0x00);
+		//buffer.position(buffer.position() + FILLER.length);
 		if (definition != null) {
 			BufferUtil.writeWithLength(buffer, definition);
 		}

File: src/main/java/org/opencloudb/route/util/RouterUtil.java
Patch:
@@ -840,7 +840,8 @@ public static boolean isAllGlobalTable(DruidShardingParseInfo ctx, SchemaConfig
 			TableConfig tableConfig = schema.getTables().get(table);
 			if(tableConfig!=null && tableConfig.isGlobalTable()) {
 				isAllGlobal = true;
-				break;
+			} else {
+				return false;
 			}
 		}
 		return isAllGlobal;

File: src/main/java/org/opencloudb/route/util/RouterUtil.java
Patch:
@@ -840,7 +840,8 @@ public static boolean isAllGlobalTable(DruidShardingParseInfo ctx, SchemaConfig
 			TableConfig tableConfig = schema.getTables().get(table);
 			if(tableConfig!=null && tableConfig.isGlobalTable()) {
 				isAllGlobal = true;
-				break;
+			} else {
+				return false;
 			}
 		}
 		return isAllGlobal;

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -101,7 +101,6 @@ private void connect(Selector selector) {
 				channel.register(selector, SelectionKey.OP_CONNECT, c);
 				channel.connect(new InetSocketAddress(c.host, c.port));
 			} catch (Exception e) {
-	            LOGGER.warn(name, e);
 				c.close(e.toString());
 			}
 		}
@@ -121,10 +120,10 @@ private void finishConnect(SelectionKey key, Object att) {
 
 			}
 		} catch (Exception e) {
-            LOGGER.warn(name, e);
 			clearSelectionKey(key);
+            c.close(e.toString());
 			c.onConnectFailed(e);
-			c.close(e.toString());
+
 		}
 	}
 

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -121,8 +121,9 @@ private void finishConnect(SelectionKey key, Object att) {
 			}
 		} catch (Exception e) {
 			clearSelectionKey(key);
+            c.close(e.toString());
 			c.onConnectFailed(e);
-			c.close(e.toString());
+
 		}
 	}
 

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -101,7 +101,6 @@ private void connect(Selector selector) {
 				channel.register(selector, SelectionKey.OP_CONNECT, c);
 				channel.connect(new InetSocketAddress(c.host, c.port));
 			} catch (Exception e) {
-	            LOGGER.warn(name, e);
 				c.close(e.toString());
 			}
 		}
@@ -121,7 +120,6 @@ private void finishConnect(SelectionKey key, Object att) {
 
 			}
 		} catch (Exception e) {
-            LOGGER.warn(name, e);
 			clearSelectionKey(key);
 			c.onConnectFailed(e);
 			c.close(e.toString());

File: src/main/java/org/opencloudb/heartbeat/MySQLHeartbeat.java
Patch:
@@ -266,6 +266,7 @@ private void switchSourceIfNeed(String reason) {
 								LOGGER.info("try to switch datasource ,not checked slave synchronize status "
 										+ theSource.getConfig());
 								pool.switchSource(nextId, true, reason);
+                                break;
 							}
 
 						}

File: src/main/java/org/opencloudb/heartbeat/MySQLHeartbeat.java
Patch:
@@ -266,6 +266,7 @@ private void switchSourceIfNeed(String reason) {
 								LOGGER.info("try to switch datasource ,not checked slave synchronize status "
 										+ theSource.getConfig());
 								pool.switchSource(nextId, true, reason);
+                                break;
 							}
 
 						}

File: src/main/java/org/opencloudb/net/AbstractConnection.java
Patch:
@@ -279,6 +279,7 @@ public void onReadData(int got) throws IOException {
 		lastReadTime = TimeUtil.currentTimeMillis();
 		if (got < 0) {
 			this.close("stream closed");
+            return;
 		} else if (got == 0) {
 			if (!this.channel.isOpen()) {
 				this.close("socket closed");

File: src/main/java/org/opencloudb/net/AbstractConnection.java
Patch:
@@ -279,6 +279,7 @@ public void onReadData(int got) throws IOException {
 		lastReadTime = TimeUtil.currentTimeMillis();
 		if (got < 0) {
 			this.close("stream closed");
+            return;
 		} else if (got == 0) {
 			if (!this.channel.isOpen()) {
 				this.close("socket closed");

File: src/main/java/org/opencloudb/buffer/BufferPool.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.concurrent.atomic.AtomicInteger;
 
 import org.apache.log4j.Logger;
 

File: src/main/java/org/opencloudb/buffer/BufferPool.java
Patch:
@@ -27,6 +27,7 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.concurrent.ConcurrentLinkedQueue;
+import java.util.concurrent.atomic.AtomicInteger;
 
 import org.apache.log4j.Logger;
 

File: src/main/java/org/opencloudb/jdbc/sequoiadb/SequoiaDriver.java
Patch:
@@ -40,7 +40,7 @@ public Connection connect(String url, Properties info) throws SQLException {
 		}
 		
 		if (!StringUtils.startsWithIgnoreCase(url, PREFIX)) {	
-			throw new IllegalArgumentException("uri needs to start with " + PREFIX);//return null;
+			return null;//throw new IllegalArgumentException("uri needs to start with " + PREFIX);//return null;
 		}
 		String uri=url;
         uri = uri.substring(PREFIX.length());
@@ -87,9 +87,9 @@ public Connection connect(String url, Properties info) throws SQLException {
 	@Override
 	public boolean acceptsURL(String url) throws SQLException {
 		if (!StringUtils.startsWithIgnoreCase(url, PREFIX)) {
-			return true;
+			return false;
 		}
-		return false;
+		return true;
 	}
 	
 	@Override

File: src/main/java/org/opencloudb/jdbc/sequoiadb/SequoiaDriver.java
Patch:
@@ -40,7 +40,7 @@ public Connection connect(String url, Properties info) throws SQLException {
 		}
 		
 		if (!StringUtils.startsWithIgnoreCase(url, PREFIX)) {	
-			throw new IllegalArgumentException("uri needs to start with " + PREFIX);//return null;
+			return null;//throw new IllegalArgumentException("uri needs to start with " + PREFIX);//return null;
 		}
 		String uri=url;
         uri = uri.substring(PREFIX.length());
@@ -87,9 +87,9 @@ public Connection connect(String url, Properties info) throws SQLException {
 	@Override
 	public boolean acceptsURL(String url) throws SQLException {
 		if (!StringUtils.startsWithIgnoreCase(url, PREFIX)) {
-			return true;
+			return false;
 		}
-		return false;
+		return true;
 	}
 	
 	@Override

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -448,6 +448,9 @@ private void justForHeartbeat(String sql)
 		try {
 			stmt = con.createStatement();
 			stmt.execute(sql);
+			if(!isAutocommit()){ //如果在写库上，如果是事务方式的连接，需要进行手动commit
+			    con.commit();
+			}
 			this.respHandler.okResponse(OkPacket.OK, this);
 
 		}

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -449,6 +449,9 @@ private void justForHeartbeat(String sql)
 		try {
 			stmt = con.createStatement();
 			stmt.execute(sql);
+			if(!isAutocommit()){ //如果在写库上，如果是事务方式的连接，需要进行手动commit
+			    con.commit();
+			}
 			this.respHandler.okResponse(OkPacket.OK, this);
 
 		}

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -67,7 +67,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
 		String cacheKey = null;
 
 		if (sqlType == ServerParse.SELECT) {
-			cacheKey = schema.getName() + stmt;
+			cacheKey = schema.getName() + stmt;			
 			rrs = (RouteResultset) sqlRouteCache.get(cacheKey);
 			if (rrs != null) {
 				return rrs;

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -67,7 +67,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
 		String cacheKey = null;
 
 		if (sqlType == ServerParse.SELECT) {
-			cacheKey = schema.getName() + stmt;
+			cacheKey = schema.getName() + stmt;			
 			rrs = (RouteResultset) sqlRouteCache.get(cacheKey);
 			if (rrs != null) {
 				return rrs;

File: src/main/java/org/opencloudb/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -308,7 +308,7 @@ private static RouteResultset analyseDescrSQL(SchemaConfig schema,
 					// 不应该发生这类情况。
 					throw new IllegalArgumentException("sql 注释 语法错误");
 				}
-			} else if(ch == 'D') {
+			} else if(ch == 'D'||ch == 'd') {
 				// 匹配 [describe ] 
 				if(pos+MATCHED_FEATURE.length() < stmt.length() && (stmt.substring(pos).toUpperCase().indexOf(MATCHED_FEATURE) != -1)) {
 					pos = pos + MATCHED_FEATURE.length();

File: src/main/java/org/opencloudb/route/impl/DruidMycatRouteStrategy.java
Patch:
@@ -308,7 +308,7 @@ private static RouteResultset analyseDescrSQL(SchemaConfig schema,
 					// 不应该发生这类情况。
 					throw new IllegalArgumentException("sql 注释 语法错误");
 				}
-			} else if(ch == 'D') {
+			} else if(ch == 'D'||ch == 'd') {
 				// 匹配 [describe ] 
 				if(pos+MATCHED_FEATURE.length() < stmt.length() && (stmt.substring(pos).toUpperCase().indexOf(MATCHED_FEATURE) != -1)) {
 					pos = pos + MATCHED_FEATURE.length();

File: src/main/java/org/opencloudb/jdbc/JDBCHeartbeat.java
Patch:
@@ -85,7 +85,7 @@ public void heartbeat()
 			}
 			status = OK_STATUS;
 
-		} catch (SQLException ex)
+		} catch (Exception ex)
 		{
 			status = ERROR_STATUS;
 		} finally

File: src/main/java/org/opencloudb/jdbc/JDBCHeartbeat.java
Patch:
@@ -85,7 +85,7 @@ public void heartbeat()
 			}
 			status = OK_STATUS;
 
-		} catch (SQLException ex)
+		} catch (Exception ex)
 		{
 			status = ERROR_STATUS;
 		} finally

File: src/main/java/org/opencloudb/backend/PhysicalDBPool.java
Patch:
@@ -489,13 +489,13 @@ private ArrayList<PhysicalDatasource> getAllActiveRWSources(
 						for (PhysicalDatasource slave : allSlaves) {
 							if (isAlive(slave)) {
 								if (filterWithSlaveThreshold) {
-									if (canSelectAsReadNode(theSource)) {
-										okSources.add(theSource);
+									if (canSelectAsReadNode(slave)) {
+										okSources.add(slave);
 									} else {
 										continue;
 									}
 								} else {
-									okSources.add(theSource);
+									okSources.add(slave);
 								}
 							}
 						}

File: src/main/java/org/opencloudb/route/MyCATSequnceProcessor.java
Patch:
@@ -86,8 +86,7 @@ private void executeSeq(SessionSQLPair pair) {
 			pair.session.getSource().routeEndExecuteSQL(executeSql, pair.type,pair.schema);
 		} catch (Exception e) {
 			LOGGER.error("MyCATSequenceProcessor.executeSeq(SesionSQLPair)",e);
-			pair.session.getSource().writeErrMessage(ErrorCode.ER_YES,
-					"mycat sequnce err." + e);
+			pair.session.getSource().writeErrMessage(ErrorCode.ER_YES,"mycat sequnce err." + e);
 			return;
 		}
 	}

File: src/main/java/org/opencloudb/backend/PhysicalDBPool.java
Patch:
@@ -488,13 +488,13 @@ private ArrayList<PhysicalDatasource> getAllActiveRWSources(
 						for (PhysicalDatasource slave : allSlaves) {
 							if (isAlive(slave)) {
 								if (filterWithSlaveThreshold) {
-									if (canSelectAsReadNode(theSource)) {
-										okSources.add(theSource);
+									if (canSelectAsReadNode(slave)) {
+										okSources.add(slave);
 									} else {
 										continue;
 									}
 								} else {
-									okSources.add(theSource);
+									okSources.add(slave);
 								}
 							}
 						}

File: src/main/java/org/opencloudb/route/MyCATSequnceProcessor.java
Patch:
@@ -86,8 +86,7 @@ private void executeSeq(SessionSQLPair pair) {
 			pair.session.getSource().routeEndExecuteSQL(executeSql, pair.type,pair.schema);
 		} catch (Exception e) {
 			LOGGER.error("MyCATSequenceProcessor.executeSeq(SesionSQLPair)",e);
-			pair.session.getSource().writeErrMessage(ErrorCode.ER_YES,
-					"mycat sequnce err." + e);
+			pair.session.getSource().writeErrMessage(ErrorCode.ER_YES,"mycat sequnce err." + e);
 			return;
 		}
 	}

File: src/main/java/org/opencloudb/sequence/handler/IncrSequenceMySQLHandler.java
Patch:
@@ -221,7 +221,6 @@ public void rowResponse(byte[] row, BackendConnection conn) {
 		}else{
 			seqVal.dbretVal = columnVal;
 		}
-
 	}
 
 	@Override

File: src/main/java/org/opencloudb/util/StringUtil.java
Patch:
@@ -504,7 +504,7 @@ public static String getTableName(String oriSql) {
 					pos++;
 				} else if (insertFound) {// into start
 					// 必须全部都为INTO才认为是into
-					if(pos+5 < sql.length() && (sql.charAt(pos+1) == 'n' || sql.charAt(pos+1) == 'N') && (sql.charAt(pos+2) == 't' || sql.charAt(pos+2) == 'T') && (sql.charAt(pos+3) == 'o' || sql.charAt(pos+3) == 'O') && (sql.charAt(pos+4) == ' ')) {
+					if(pos+5 < sql.length() && (sql.charAt(pos+1) == 'n' || sql.charAt(pos+1) == 'N') && (sql.charAt(pos+2) == 't' || sql.charAt(pos+2) == 'T') && (sql.charAt(pos+3) == 'o' || sql.charAt(pos+3) == 'O') && (sql.charAt(pos+4) <= ' ')) {
 						pos = pos + 5;
 						intoFound = true;
 					} else {
@@ -513,7 +513,7 @@ public static String getTableName(String oriSql) {
 				} else {
 					// 矫正必须全部都为 INSERT才认为是insert
 					// insert start
-					if(pos+7 < sql.length() && (sql.charAt(pos+1) == 'n' || sql.charAt(pos+1) == 'N') && (sql.charAt(pos+2) == 's' || sql.charAt(pos+2) == 'S')  && (sql.charAt(pos+3) == 'e' || sql.charAt(pos+3) == 'E') && (sql.charAt(pos+4) == 'r' || sql.charAt(pos+4) == 'R')  && (sql.charAt(pos+5) == 't' || sql.charAt(pos+5) == 'T') && (sql.charAt(pos+6) == ' ')) {
+					if(pos+7 < sql.length() && (sql.charAt(pos+1) == 'n' || sql.charAt(pos+1) == 'N') && (sql.charAt(pos+2) == 's' || sql.charAt(pos+2) == 'S')  && (sql.charAt(pos+3) == 'e' || sql.charAt(pos+3) == 'E') && (sql.charAt(pos+4) == 'r' || sql.charAt(pos+4) == 'R')  && (sql.charAt(pos+5) == 't' || sql.charAt(pos+5) == 'T') && (sql.charAt(pos+6) <= ' ')) {
 						pos = pos + 7;
 						insertFound = true;
 					} else {

File: src/main/java/org/opencloudb/mysql/CharsetUtil.java
Patch:
@@ -77,7 +77,7 @@ public class CharsetUtil {
         INDEX_TO_CHARSET[42] = "latvian1";
         INDEX_TO_CHARSET[43] = "maccebin";
         INDEX_TO_CHARSET[44] = "macceciai";
-        INDEX_TO_CHARSET[45] = "maccecias";
+        INDEX_TO_CHARSET[45] = "utf8mb4";
         INDEX_TO_CHARSET[46] = "maccecsas";
         INDEX_TO_CHARSET[47] = "latin1bin";
         INDEX_TO_CHARSET[48] = "latin1cias";

File: src/main/java/org/opencloudb/parser/druid/DruidParser.java
Patch:
@@ -23,7 +23,7 @@ public interface DruidParser {
 	 * @param schema
 	 * @param stmt
 	 */
-	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool,SchemaStatVisitor schemaStatVisitor) throws SQLNonTransientException;
+	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool,MycatSchemaStatVisitor schemaStatVisitor) throws SQLNonTransientException;
 	
 	/**
 	 * statement方式解析
@@ -37,7 +37,7 @@ public interface DruidParser {
 	 * 通过visitor解析：有些类型的Statement通过visitor解析得不到表名、
 	 * @param stmt
 	 */
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException;
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,MycatSchemaStatVisitor visitor) throws SQLNonTransientException;
 	
 	/**
 	 * 改写sql：加limit，加group by、加order by如有些没有加limit的可以通过该方法增加

File: src/main/java/org/opencloudb/parser/druid/impl/DruidDeleteParser.java
Patch:
@@ -4,6 +4,7 @@
 
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.route.RouteResultset;
+import org.opencloudb.util.StringUtil;
 
 import com.alibaba.druid.sql.ast.SQLStatement;
 import com.alibaba.druid.sql.dialect.mysql.ast.statement.MySqlDeleteStatement;
@@ -12,7 +13,7 @@ public class DruidDeleteParser extends DefaultDruidParser {
 	@Override
 	public void statementParse(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt) throws SQLNonTransientException {
 		MySqlDeleteStatement delete = (MySqlDeleteStatement)stmt;
-		String tableName = removeBackquote(delete.getTableName().getSimpleName().toUpperCase());
+		String tableName = StringUtil.removeBackquote(delete.getTableName().getSimpleName().toUpperCase());
 		ctx.addTable(tableName);
 	}
 }

File: src/main/java/org/opencloudb/sequence/handler/IncrSequenceMySQLHandler.java
Patch:
@@ -221,7 +221,6 @@ public void rowResponse(byte[] row, BackendConnection conn) {
 		}else{
 			seqVal.dbretVal = columnVal;
 		}
-
 	}
 
 	@Override

File: src/main/java/org/opencloudb/cache/impl/MapDBCachePooFactory.java
Patch:
@@ -32,8 +32,7 @@
 import org.opencloudb.cache.CachePoolFactory;
 
 public class MapDBCachePooFactory extends CachePoolFactory {
-	private DB db = DBMaker.newMemoryDirectDB().cacheSize(1000)
-			.cacheLRUEnable().make();
+	private DB db = DBMaker.newMemoryDirectDB().cacheSize(1000).cacheLRUEnable().make();
 
 	@Override
 	public CachePool createCachePool(String poolName, int cacheSize,
@@ -43,7 +42,7 @@ public CachePool createCachePool(String poolName, int cacheSize,
 				.expireMaxSize(cacheSize)
 				.expireAfterAccess(expiredSeconds, TimeUnit.SECONDS)
 				.makeOrGet();
-		return new MapDBCachePool(cache,cacheSize);
+		return new MapDBCachePool(cache, cacheSize);
 
 	}
 

File: src/main/java/org/opencloudb/sequence/handler/IncrSequenceMySQLHandler.java
Patch:
@@ -214,10 +214,12 @@ public void rowResponse(byte[] row, BackendConnection conn) {
 		byte[] columnData = rowDataPkg.fieldValues.get(0);
 		String columnVal = new String(columnData);
 		SequenceVal seqVal = (SequenceVal) conn.getAttachment();
-		seqVal.dbretVal = seqVal.dbretVal = columnVal;
 		if (IncrSequenceMySQLHandler.errSeqResult.equals(columnVal)) {
+			seqVal.dbretVal=IncrSequenceMySQLHandler.errSeqResult;
 			LOGGER.warn(" sequnce sql returned err value ,sequence:"
 					+ seqVal.seqName + " " + columnVal + " sql:" + seqVal.sql);
+		}else{
+			seqVal.dbretVal = columnVal;
 		}
 
 	}

File: src/main/java/org/opencloudb/net/NIOReactor.java
Patch:
@@ -98,6 +98,7 @@ public void run() {
                                         LOGGER.warn("caught err:", e);
                                         con.close("program err:" + e.toString());
 									} catch (Exception e) {
+										LOGGER.debug("caught err:", e);
 										con.close("program err:" + e.toString());
 									}
 								}

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -204,9 +204,9 @@ private boolean isRoutMultiNode(SchemaConfig schema,  RouteResultset rrs)
 	  return false;
   }
 
-    private String getFieldName(SQLSelectItem item){
+	private String getFieldName(SQLSelectItem item){
 		if ((item.getExpr() instanceof SQLPropertyExpr)||(item.getExpr() instanceof SQLMethodInvokeExpr)
-				|| (item.getExpr() instanceof SQLIdentifierExpr)) {			
+				|| (item.getExpr() instanceof SQLIdentifierExpr) || item.getExpr() instanceof SQLBinaryOpExpr) {			
 			return item.getExpr().toString();//字段别名
 		}
 		else

File: src/main/java/org/opencloudb/server/handler/SelectHandler.java
Patch:
@@ -64,7 +64,7 @@ public static void handle(String stmt, ServerConnection c, int offs) {
 			break;
 		case ServerParseSelect.LAST_INSERT_ID:
 			// offset = ParseUtil.move(stmt, 0, "select".length());
-			loop: for (; offset < stmt.length(); ++offset) {
+			loop:for (int l=stmt.length(); offset < l; ++offset) {
 				switch (stmt.charAt(offset)) {
 				case ' ':
 					continue;
@@ -83,7 +83,7 @@ public static void handle(String stmt, ServerConnection c, int offs) {
 			break;
 		case ServerParseSelect.IDENTITY:
 			// offset = ParseUtil.move(stmt, 0, "select".length());
-			loop: for (; offset < stmt.length(); ++offset) {
+			loop:for (int l=stmt.length(); offset < l; ++offset) {
 				switch (stmt.charAt(offset)) {
 				case ' ':
 					continue;

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -241,7 +241,8 @@ private void executeSQL(RouteResultsetNode rrn, ServerConnection sc,
 			if (sqlType == ServerParse.SELECT || sqlType == ServerParse.SHOW) {
 				if ((sqlType == ServerParse.SHOW) && (!dbType.equals("MYSQL"))) {
 					// showCMD(sc, orgin);
-					ShowVariables.execute(sc, orgin);
+					//ShowVariables.execute(sc, orgin);
+					ShowVariables.execute(sc, orgin,this);
 				} else if ("SELECT CONNECTION_ID()".equalsIgnoreCase(orgin)) {
 					ShowVariables.justReturnValue(sc,
 							String.valueOf(sc.getId()));

File: src/main/java/org/opencloudb/net/handler/LoadDataInfileHandler.java
Patch:
@@ -41,4 +41,6 @@ public interface LoadDataInfileHandler
 
     byte getLastPackId();
 
+    boolean isStartLoadData();
+
 }
\ No newline at end of file

File: src/main/java/org/opencloudb/net/handler/LoadDataInfileHandler.java
Patch:
@@ -41,4 +41,6 @@ public interface LoadDataInfileHandler
 
     byte getLastPackId();
 
+    boolean isStartLoadData();
+
 }
\ No newline at end of file

File: src/main/java/org/opencloudb/parser/druid/DruidParser.java
Patch:
@@ -23,7 +23,7 @@ public interface DruidParser {
 	 * @param schema
 	 * @param stmt
 	 */
-	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool,SchemaStatVisitor schemaStatVisitor) throws SQLNonTransientException;
+	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool,MycatSchemaStatVisitor schemaStatVisitor) throws SQLNonTransientException;
 	
 	/**
 	 * statement方式解析
@@ -37,7 +37,7 @@ public interface DruidParser {
 	 * 通过visitor解析：有些类型的Statement通过visitor解析得不到表名、
 	 * @param stmt
 	 */
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException;
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,MycatSchemaStatVisitor visitor) throws SQLNonTransientException;
 	
 	/**
 	 * 改写sql：加limit，加group by、加order by如有些没有加limit的可以通过该方法增加

File: src/main/java/org/opencloudb/parser/druid/impl/DruidAlterTableParser.java
Patch:
@@ -2,8 +2,8 @@
 
 import java.sql.SQLNonTransientException;
 
-import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.config.model.SchemaConfig;
+import org.opencloudb.parser.druid.MycatSchemaStatVisitor;
 import org.opencloudb.route.RouteResultset;
 
 import com.alibaba.druid.sql.ast.SQLStatement;
@@ -16,7 +16,7 @@
  */
 public class DruidAlterTableParser extends DefaultDruidParser {
 	@Override
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException {
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,MycatSchemaStatVisitor visitor) throws SQLNonTransientException {
 		
 	}
 	@Override

File: src/main/java/org/opencloudb/parser/druid/impl/DruidCreateTableParser.java
Patch:
@@ -2,8 +2,8 @@
 
 import java.sql.SQLNonTransientException;
 
-import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.config.model.SchemaConfig;
+import org.opencloudb.parser.druid.MycatSchemaStatVisitor;
 import org.opencloudb.route.RouteResultset;
 
 import com.alibaba.druid.sql.ast.SQLStatement;
@@ -12,7 +12,7 @@
 public class DruidCreateTableParser extends DefaultDruidParser {
 
 	@Override
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) {
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt, MycatSchemaStatVisitor visitor) {
 	}
 	
 	@Override

File: src/main/java/org/opencloudb/parser/druid/impl/DruidUpdateParser.java
Patch:
@@ -73,7 +73,7 @@ public void statementParse(SchemaConfig schema, RouteResultset rrs, SQLStatement
 //		}
 //		System.out.println();
 		
-		if(schema.getTables().get(tableName).isGlobalTable() && ctx.getTablesAndConditions().size() > 1) {
+		if(schema.getTables().get(tableName).isGlobalTable() && ctx.getRouteCalculateUnit().getTablesAndConditions().size() > 1) {
 			throw new SQLNonTransientException("global table not supported multi table related update "+ tableName);
 		}
 	}

File: src/main/java/org/opencloudb/mysql/MySQLMessage.java
Patch:
@@ -159,6 +159,8 @@ public byte[] readBytes() {
         return ab;
     }
 
+
+
     public byte[] readBytes(int length) {
         byte[] ab = new byte[length];
         System.arraycopy(data, position, ab, 0, length);

File: src/main/java/org/opencloudb/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -213,7 +213,7 @@ public void okResponse(byte[] data, BackendConnection conn) {
 				ok.packetId = ++packetId;// OK_PACKET
 			}
 			ok.serverStatus = source.isAutocommit() ? 2 : 1;
-			ok.packetId = ++packetId;
+
 			recycleResources();
 			source.setLastInsertId(ok.insertId);
 			ok.write(source);

File: src/main/java/org/opencloudb/route/function/PartitionByMurmurHash.java
Patch:
@@ -263,4 +263,4 @@ private static void rehashTest(List<Integer> partition){
 	public static void main(String[] args) throws IOException {
 		hashTest();
 	}
-}
\ No newline at end of file
+}

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -285,6 +285,7 @@ private RouteResultset tryDirectRoute(String sql, String line)
     {
 
         RouteResultset rrs = new RouteResultset(sql, ServerParse.INSERT);
+        rrs.setLoadData(true);
         if (tableConfig == null && schema.getDataNode() != null)
         {
             //走默认节点

File: src/test/java/org/opencloudb/route/perf/NoShardingSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -51,7 +51,7 @@ public void testDefaultSpace() throws SQLNonTransientException {
         SchemaConfig schema = this.schema;
         String stmt = "insert into offer (member_id, gmt_create) values ('1','2001-09-13 20:20:33')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema, -1,stmt, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema, -1,stmt, null, null,cachePool);
         }
     }
 

File: src/test/java/org/opencloudb/route/perf/ShardingDefaultSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -54,7 +54,7 @@ public void testDefaultSpace() throws SQLNonTransientException {
         SchemaConfig schema = this.getSchema();
         String sql = "insert into offer (member_id, gmt_create) values ('1','2001-09-13 20:20:33')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema,-1, sql, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema,-1, sql, null, null,cachePool);
         }
     }
 

File: src/test/java/org/opencloudb/route/perf/ShardingMultiTableSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -56,7 +56,7 @@ public void testTableSpace() throws SQLNonTransientException {
         SchemaConfig schema = getSchema();
         String sql = "select id,member_id,gmt_create from offer where member_id in ('1','22','333','1124','4525')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema, -1,sql, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema, -1,sql, null, null,cachePool);
         }
     }
 

File: src/main/java/org/opencloudb/mysql/MySQLMessage.java
Patch:
@@ -159,6 +159,8 @@ public byte[] readBytes() {
         return ab;
     }
 
+
+
     public byte[] readBytes(int length) {
         byte[] ab = new byte[length];
         System.arraycopy(data, position, ab, 0, length);

File: src/main/java/org/opencloudb/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -213,7 +213,7 @@ public void okResponse(byte[] data, BackendConnection conn) {
 				ok.packetId = ++packetId;// OK_PACKET
 			}
 			ok.serverStatus = source.isAutocommit() ? 2 : 1;
-			ok.packetId = ++packetId;
+
 			recycleResources();
 			source.setLastInsertId(ok.insertId);
 			ok.write(source);

File: src/main/java/org/opencloudb/route/function/PartitionByMurmurHash.java
Patch:
@@ -263,4 +263,4 @@ private static void rehashTest(List<Integer> partition){
 	public static void main(String[] args) throws IOException {
 		hashTest();
 	}
-}
\ No newline at end of file
+}

File: src/main/java/org/opencloudb/server/handler/ServerLoadDataInfileHandler.java
Patch:
@@ -285,6 +285,7 @@ private RouteResultset tryDirectRoute(String sql, String line)
     {
 
         RouteResultset rrs = new RouteResultset(sql, ServerParse.INSERT);
+        rrs.setLoadData(true);
         if (tableConfig == null && schema.getDataNode() != null)
         {
             //走默认节点

File: src/test/java/org/opencloudb/route/perf/NoShardingSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -51,7 +51,7 @@ public void testDefaultSpace() throws SQLNonTransientException {
         SchemaConfig schema = this.schema;
         String stmt = "insert into offer (member_id, gmt_create) values ('1','2001-09-13 20:20:33')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema, -1,stmt, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema, -1,stmt, null, null,cachePool);
         }
     }
 

File: src/test/java/org/opencloudb/route/perf/ShardingDefaultSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -54,7 +54,7 @@ public void testDefaultSpace() throws SQLNonTransientException {
         SchemaConfig schema = this.getSchema();
         String sql = "insert into offer (member_id, gmt_create) values ('1','2001-09-13 20:20:33')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema,-1, sql, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema,-1, sql, null, null,cachePool);
         }
     }
 

File: src/test/java/org/opencloudb/route/perf/ShardingMultiTableSpace.java
Patch:
@@ -31,7 +31,7 @@
 import org.opencloudb.config.loader.xml.XMLSchemaLoader;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.route.ServerRouterUtil;
+import org.opencloudb.route.factory.RouteStrategyFactory;
 
 /**
  * @author mycat
@@ -56,7 +56,7 @@ public void testTableSpace() throws SQLNonTransientException {
         SchemaConfig schema = getSchema();
         String sql = "select id,member_id,gmt_create from offer where member_id in ('1','22','333','1124','4525')";
         for (int i = 0; i < total; i++) {
-            ServerRouterUtil.route(new SystemConfig(),schema, -1,sql, null, null,cachePool);
+            RouteStrategyFactory.getRouteStrategy().route(new SystemConfig(),schema, -1,sql, null, null,cachePool);
         }
     }
 

File: src/main/java/org/opencloudb/route/config/TableRuleConfig.java
Patch:
@@ -75,8 +75,9 @@ public String toString() {
             StringBuilder s = new StringBuilder();
             s.append("{tableRule:").append(tableRuleName).append(", columns:[");
             for (int i = 0; i < columns.length; ++i) {
-                if (i > 0)
+                if (i > 0) {
                     s.append(", ");
+                }
                 s.append(columns[i]);
             }
             s.append("]}");

File: src/main/java/org/opencloudb/route/handler/HintHandlerFactory.java
Patch:
@@ -8,6 +8,9 @@ public class HintHandlerFactory {
 	 //sql注释的类型处理handler 集合，现在支持两种类型的处理：sql,schema
     private static Map<String,HintHandler> hintHandlerMap = new HashMap<String,HintHandler>();
 
+    private HintHandlerFactory() {
+    }
+    
     private static void init() {
         hintHandlerMap.put("sql",new HintSQLHandler());
         hintHandlerMap.put("schema",new HintSchemaHandler());

File: src/main/java/org/opencloudb/route/config/TableRuleConfig.java
Patch:
@@ -75,8 +75,9 @@ public String toString() {
             StringBuilder s = new StringBuilder();
             s.append("{tableRule:").append(tableRuleName).append(", columns:[");
             for (int i = 0; i < columns.length; ++i) {
-                if (i > 0)
+                if (i > 0) {
                     s.append(", ");
+                }
                 s.append(columns[i]);
             }
             s.append("]}");

File: src/main/java/org/opencloudb/route/handler/HintHandlerFactory.java
Patch:
@@ -8,6 +8,9 @@ public class HintHandlerFactory {
 	 //sql注释的类型处理handler 集合，现在支持两种类型的处理：sql,schema
     private static Map<String,HintHandler> hintHandlerMap = new HashMap<String,HintHandler>();
 
+    private HintHandlerFactory() {
+    }
+    
     private static void init() {
         hintHandlerMap.put("sql",new HintSQLHandler());
         hintHandlerMap.put("schema",new HintSchemaHandler());

File: src/main/java/org/opencloudb/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -213,7 +213,7 @@ public void okResponse(byte[] data, BackendConnection conn) {
 				ok.packetId = ++packetId;// OK_PACKET
 			}
 			ok.serverStatus = source.isAutocommit() ? 2 : 1;
-			ok.packetId = ++packetId;
+
 			recycleResources();
 			source.setLastInsertId(ok.insertId);
 			ok.write(source);

File: src/main/java/org/opencloudb/mysql/nio/handler/SingleNodeHandler.java
Patch:
@@ -213,7 +213,7 @@ public void okResponse(byte[] data, BackendConnection conn) {
 				ok.packetId = ++packetId;// OK_PACKET
 			}
 			ok.serverStatus = source.isAutocommit() ? 2 : 1;
-			ok.packetId = ++packetId;
+
 			recycleResources();
 			source.setLastInsertId(ok.insertId);
 			ok.write(source);

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -161,7 +161,7 @@ protected Map<String, String> parseAggGroupCommon(SchemaConfig schema, SQLStatem
         if (isNeedChangeSql)
         {
             String sql = stmt.toString();
-            rrs.changeNodeSqlAfterAddLimit(schema,getCurentDbType(),sql,0,1, true);
+            rrs.changeNodeSqlAfterAddLimit(schema,getCurentDbType(),sql,0,-1, false);
             getCtx().setSql(sql);
         }
 		return aliaColumns;

File: src/main/java/org/opencloudb/jdbc/JDBCDatasource.java
Patch:
@@ -18,7 +18,7 @@ public class JDBCDatasource extends PhysicalDatasource {
 	static {
 		// 加载可能的驱动
 		List<String> drivers = Lists.newArrayList("com.mysql.jdbc.Driver", "org.opencloudb.jdbc.mongodb.MongoDriver", "oracle.jdbc.OracleDriver",
-				"com.microsoft.sqlserver.jdbc.SQLServerDriver","org.apache.hive.jdbc.HiveDriver");
+				"com.microsoft.sqlserver.jdbc.SQLServerDriver","org.apache.hive.jdbc.HiveDriver","com.ibm.db2.jcc.DB2Driver","org.postgresql.Driver");
 		for (String driver : drivers)
 		{
 			try

File: src/main/java/org/opencloudb/parser/druid/DruidParser.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.sql.SQLNonTransientException;
 
+import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.cache.LayerCachePool;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.route.RouteResultset;
@@ -22,7 +23,7 @@ public interface DruidParser {
 	 * @param schema
 	 * @param stmt
 	 */
-	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool) throws SQLNonTransientException;
+	public void parser(SchemaConfig schema, RouteResultset rrs, SQLStatement stmt, String originSql,LayerCachePool cachePool,SchemaStatVisitor schemaStatVisitor) throws SQLNonTransientException;
 	
 	/**
 	 * statement方式解析
@@ -36,7 +37,7 @@ public interface DruidParser {
 	 * 通过visitor解析：有些类型的Statement通过visitor解析得不到表名、
 	 * @param stmt
 	 */
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt) throws SQLNonTransientException;
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException;
 	
 	/**
 	 * 改写sql：加limit，加group by、加order by如有些没有加limit的可以通过该方法增加

File: src/main/java/org/opencloudb/parser/druid/impl/DruidAlterTableParser.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.sql.SQLNonTransientException;
 
+import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.route.RouteResultset;
 
@@ -15,7 +16,7 @@
  */
 public class DruidAlterTableParser extends DefaultDruidParser {
 	@Override
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt) throws SQLNonTransientException {
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException {
 		
 	}
 	@Override

File: src/main/java/org/opencloudb/parser/druid/impl/DruidCreateTableParser.java
Patch:
@@ -2,6 +2,7 @@
 
 import java.sql.SQLNonTransientException;
 
+import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.route.RouteResultset;
 
@@ -11,7 +12,7 @@
 public class DruidCreateTableParser extends DefaultDruidParser {
 
 	@Override
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt) {
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) {
 	}
 	
 	@Override

File: src/main/java/org/opencloudb/parser/druid/impl/DruidInsertParser.java
Patch:
@@ -7,6 +7,7 @@
 import java.util.List;
 import java.util.Map;
 
+import com.alibaba.druid.sql.visitor.SchemaStatVisitor;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.TableConfig;
 import org.opencloudb.mysql.nio.handler.FetchStoreNodeOfChildTableHandler;
@@ -25,7 +26,7 @@
 
 public class DruidInsertParser extends DefaultDruidParser {
 	@Override
-	public void visitorParse(RouteResultset rrs, SQLStatement stmt) throws SQLNonTransientException {
+	public void visitorParse(RouteResultset rrs, SQLStatement stmt,SchemaStatVisitor visitor) throws SQLNonTransientException {
 		
 	}
 	

File: src/main/java/org/opencloudb/route/factory/RouteStrategyFactory.java
Patch:
@@ -5,7 +5,7 @@
 
 import org.opencloudb.MycatServer;
 import org.opencloudb.route.RouteStrategy;
-import org.opencloudb.route.impl.DruidMysqlRouteStrategy;
+import org.opencloudb.route.impl.DruidMycatRouteStrategy;
 import org.opencloudb.route.impl.FdbRouteStrategy;
 
 /**
@@ -24,7 +24,7 @@ private static void init() {
 		
 		strategyMap.put("fdbparser", new FdbRouteStrategy());
 		
-		strategyMap.put("druidparser", new DruidMysqlRouteStrategy());
+		strategyMap.put("druidparser", new DruidMycatRouteStrategy());
 		
 		defaultStrategy = strategyMap.get(defaultSqlParser);
 		if(defaultStrategy == null) {

File: src/test/java/org/opencloudb/route/DruidMysqlRouteStrategyTest.java
Patch:
@@ -911,7 +911,7 @@ public void testAggregateExpr() throws Exception {
         SchemaConfig schema = schemaMap.get("TESTDB");
         String sql = "select id, name, count(name) from employee group by name;";
         RouteResultset rrs = routeStrategy.route(new SystemConfig(), schema, ServerParse.SELECT, sql, null, null, cachePool);
-        Assert.assertTrue(rrs.getMergeCols() == null);
+        Assert.assertTrue(rrs.getMergeCols().containsKey("COUNT2"));
 
         sql = "select id, name, count(name) as c from employee group by name;";
         rrs = routeStrategy.route(new SystemConfig(), schema, ServerParse.SELECT, sql, null, null, cachePool);

File: src/main/java/org/opencloudb/parser/druid/DruidParserFactory.java
Patch:
@@ -29,14 +29,14 @@ public static DruidParser create(SchemaConfig schema,SQLStatement statement) {
 			List<String> tables=  parseTables(statement);
 			for (String table : tables)
 			{
-				if(schema.getAllDbTypeSet().contains("oracle")&&schema.isTableInThisDb(table,"oracle"))
+				if (schema.getTables().get(table).getDbType().equals("oracle"))//if(schema.getAllDbTypeSet().contains("oracle")&&schema.isTableInThisDb(table,"oracle"))
 				{
 					parser=new DruidSelectOracleParser();
-				} else if(schema.getAllDbTypeSet().contains("db2")&&schema.isTableInThisDb(table,"db2"))
+				} else if(schema.getTables().get(table).getDbType().equals("db2"))
 				{
 					parser=new DruidSelectDb2Parser();
 				}
-				else if(schema.getAllDbTypeSet().contains("sqlserver")&&schema.isTableInThisDb(table,"sqlserver"))
+				else if(schema.getTables().get(table).getDbType().equals("sqlserver"))
 				{
 					parser=new DruidSelectSqlServerParser();
 				}

File: src/main/java/org/opencloudb/parser/druid/DruidParserFactory.java
Patch:
@@ -29,14 +29,14 @@ public static DruidParser create(SchemaConfig schema,SQLStatement statement) {
 			List<String> tables=  parseTables(statement);
 			for (String table : tables)
 			{
-				if(schema.getAllDbTypeSet().contains("oracle")&&schema.isTableInThisDb(table,"oracle"))
+				if (schema.getTables().get(table).getDbType().equals("oracle"))//if(schema.getAllDbTypeSet().contains("oracle")&&schema.isTableInThisDb(table,"oracle"))
 				{
 					parser=new DruidSelectOracleParser();
-				} else if(schema.getAllDbTypeSet().contains("db2")&&schema.isTableInThisDb(table,"db2"))
+				} else if(schema.getTables().get(table).getDbType().equals("db2"))
 				{
 					parser=new DruidSelectDb2Parser();
 				}
-				else if(schema.getAllDbTypeSet().contains("sqlserver")&&schema.isTableInThisDb(table,"sqlserver"))
+				else if(schema.getTables().get(table).getDbType().equals("sqlserver"))
 				{
 					parser=new DruidSelectSqlServerParser();
 				}

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectOracleParser.java
Patch:
@@ -49,7 +49,7 @@ public void statementParse(SchemaConfig schema, RouteResultset rrs, SQLStatement
 			if(limit==null)
 			{
 				  //使用oracle的解析，否则会有部分oracle语法识别错误
-				  OracleStatementParser oracleParser = new OracleStatementParser(stmt.toString());
+				  OracleStatementParser oracleParser = new OracleStatementParser(getCtx().getSql());
 				  SQLSelectStatement oracleStmt = (SQLSelectStatement) oracleParser.parseStatement();
 				  SQLSelectQuery oracleSqlSelectQuery = oracleStmt.getSelect().getQuery();
 				  if(oracleSqlSelectQuery instanceof OracleSelectQueryBlock)

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -242,7 +242,8 @@ private void executeSQL(RouteResultsetNode rrn, ServerConnection sc,
 			
 			if (sqlType == ServerParse.SELECT || sqlType == ServerParse.SHOW ) {	
 				if ((sqlType ==ServerParse.SHOW) && (!dbType.equals("MYSQL")) ){
-					showCMD(sc, orgin);
+					//showCMD(sc, orgin);
+					ShowVariables.execute(sc,orgin);
 				}
 				else {
 					ouputResultSet(sc, orgin);	

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -239,7 +239,8 @@ private void executeSQL(RouteResultsetNode rrn, ServerConnection sc,
 			
 			if (sqlType == ServerParse.SELECT || sqlType == ServerParse.SHOW ) {	
 				if ((sqlType ==ServerParse.SHOW) && (!dbType.equals("MYSQL")) ){
-					showCMD(sc, orgin);
+					//showCMD(sc, orgin);
+					ShowVariables.execute(sc,orgin);
 				}
 				else {
 					ouputResultSet(sc, orgin);	

File: src/main/java/org/opencloudb/parser/druid/impl/DruidSelectParser.java
Patch:
@@ -79,6 +79,7 @@ public void statementParse(SchemaConfig schema, RouteResultset rrs, SQLStatement
 				List<SQLExpr> groupByItems = mysqlSelectQuery.getGroupBy().getItems();
 				String[] groupByCols = buildGroupByCols(groupByItems,aliaColumns);
 				rrs.setGroupByCols(groupByCols);
+				rrs.setHasAggrColumn(true);
 			}
 			
 			//setOrderByCols

File: src/main/java/org/opencloudb/jdbc/JDBCDatasource.java
Patch:
@@ -43,12 +43,13 @@ public DBHeartbeat createHeartBeat() {
 	public void createNewConnection(ResponseHandler handler,String schema) throws IOException {
 		DBHostConfig cfg = getConfig();
 		JDBCConnection c = new JDBCConnection();
-
+		
 		c.setHost(cfg.getIp());
 		c.setPort(cfg.getPort());
 		c.setPool(this);
 		c.setSchema(schema);
-
+		c.setDbType(cfg.getDbType());
+		
 		try {
             // TODO 这里应该有个连接池
 			Connection con = getConnection();

File: src/main/java/org/opencloudb/server/handler/ExplainHandler.java
Patch:
@@ -126,7 +126,7 @@ private static RouteResultset getRouteResultset(ServerConnection c,
 			int sqlType = ServerParse.parse(stmt) & 0xff;
 			return MycatServer.getInstance().getRouterservice()
 					.route(MycatServer.getInstance().getConfig().getSystem(),schema, sqlType, stmt, c.getCharset(), c);
-		} catch (SQLNonTransientException e) {
+		} catch (Exception e) {
 			StringBuilder s = new StringBuilder();
 			logger.warn(s.append(c).append(stmt).toString()+" error:"+ e);
 			String msg = e.getMessage();

File: src/main/java/org/opencloudb/util/MysqlDefs.java
Patch:
@@ -353,7 +353,7 @@ public static int javaTypeMysql(int javaType) {
 
 		switch (javaType) {
 		case Types.NUMERIC:
-			return MysqlDefs.FIELD_TYPE_LONG;
+			return MysqlDefs.FIELD_TYPE_DECIMAL;
 
 		case Types.DECIMAL:
 			return MysqlDefs.FIELD_TYPE_NEW_DECIMAL;

File: src/main/java/org/opencloudb/util/MysqlDefs.java
Patch:
@@ -353,7 +353,7 @@ public static int javaTypeMysql(int javaType) {
 
 		switch (javaType) {
 		case Types.NUMERIC:
-			return MysqlDefs.FIELD_TYPE_LONG;
+			return MysqlDefs.FIELD_TYPE_DECIMAL;
 
 		case Types.DECIMAL:
 			return MysqlDefs.FIELD_TYPE_NEW_DECIMAL;

File: src/main/java/org/opencloudb/response/ShowVariables.java
Patch:
@@ -28,8 +28,8 @@
 import java.util.Map;
 
 import org.opencloudb.config.Fields;
+import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;
-import org.opencloudb.net.FrontendConnection;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.FieldPacket;
 import org.opencloudb.net.mysql.ResultSetHeaderPacket;
@@ -59,7 +59,7 @@ public final class ShowVariables {
         eof.packetId = ++packetId;
     }
 
-    public static void execute(FrontendConnection c) {
+    public static void execute(ManagerConnection c) {
         ByteBuffer buffer = c.allocate();
 
         // write header

File: src/main/java/org/opencloudb/response/ShowVariables.java
Patch:
@@ -28,8 +28,8 @@
 import java.util.Map;
 
 import org.opencloudb.config.Fields;
+import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;
-import org.opencloudb.net.FrontendConnection;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.FieldPacket;
 import org.opencloudb.net.mysql.ResultSetHeaderPacket;
@@ -59,7 +59,7 @@ public final class ShowVariables {
         eof.packetId = ++packetId;
     }
 
-    public static void execute(FrontendConnection c) {
+    public static void execute(ManagerConnection c) {
         ByteBuffer buffer = c.allocate();
 
         // write header

File: src/main/java/org/opencloudb/response/ShowVariables.java
Patch:
@@ -28,8 +28,8 @@
 import java.util.Map;
 
 import org.opencloudb.config.Fields;
-import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;
+import org.opencloudb.net.FrontendConnection;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.FieldPacket;
 import org.opencloudb.net.mysql.ResultSetHeaderPacket;
@@ -59,7 +59,7 @@ public final class ShowVariables {
         eof.packetId = ++packetId;
     }
 
-    public static void execute(ManagerConnection c) {
+    public static void execute(FrontendConnection c) {
         ByteBuffer buffer = c.allocate();
 
         // write header

File: src/main/java/org/opencloudb/response/ShowVariables.java
Patch:
@@ -28,8 +28,8 @@
 import java.util.Map;
 
 import org.opencloudb.config.Fields;
-import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;
+import org.opencloudb.net.FrontendConnection;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.FieldPacket;
 import org.opencloudb.net.mysql.ResultSetHeaderPacket;
@@ -59,7 +59,7 @@ public final class ShowVariables {
         eof.packetId = ++packetId;
     }
 
-    public static void execute(ManagerConnection c) {
+    public static void execute(FrontendConnection c) {
         ByteBuffer buffer = c.allocate();
 
         // write header

File: src/main/java/org/opencloudb/backend/PhysicalDatasource.java
Patch:
@@ -405,7 +405,7 @@ public long getHeartbeatRecoveryTime() {
 	}
 
 	public void setHeartbeatRecoveryTime(long heartbeatRecoveryTime) {
-		this.heartbeatRecoveryTime = heartbeatRecoveryTime;
+		this.heartbeatRecoveryTime = System.currentTimeMillis() + heartbeatRecoveryTime;
 	}
 
 	public DBHostConfig getConfig() {

File: src/main/java/org/opencloudb/buffer/BufferPool.java
Patch:
@@ -35,8 +35,7 @@
 public final class BufferPool {
 	// this value not changed ,isLocalCacheThread use it
 	public static final String LOCAL_BUF_THREAD_PREX = "$_";
-	private static final ThreadLocalBufferPool localBufferPool = new ThreadLocalBufferPool(
-			4000);
+	private final ThreadLocalBufferPool localBufferPool;
 	private static final Logger LOGGER = Logger.getLogger(BufferPool.class);
 	private final int chunkSize;
 	private final ConcurrentLinkedQueue<ByteBuffer> items = new ConcurrentLinkedQueue<ByteBuffer>();
@@ -56,6 +55,7 @@ public BufferPool(int bufferSize, int chunkSize, int threadLocalPercent) {
 		for (int i = 0; i < capactiy; i++) {
 			items.offer(createDirectBuffer(chunkSize));
 		}
+		localBufferPool = new ThreadLocalBufferPool(threadLocalCount);
 	}
 
 	private static final boolean isLocalCacheThread() {

File: src/main/java/org/opencloudb/buffer/BufferPool.java
Patch:
@@ -35,8 +35,7 @@
 public final class BufferPool {
 	// this value not changed ,isLocalCacheThread use it
 	public static final String LOCAL_BUF_THREAD_PREX = "$_";
-	private static final ThreadLocalBufferPool localBufferPool = new ThreadLocalBufferPool(
-			4000);
+	private final ThreadLocalBufferPool localBufferPool;
 	private static final Logger LOGGER = Logger.getLogger(BufferPool.class);
 	private final int chunkSize;
 	private final ConcurrentLinkedQueue<ByteBuffer> items = new ConcurrentLinkedQueue<ByteBuffer>();
@@ -56,6 +55,7 @@ public BufferPool(int bufferSize, int chunkSize, int threadLocalPercent) {
 		for (int i = 0; i < capactiy; i++) {
 			items.offer(createDirectBuffer(chunkSize));
 		}
+		localBufferPool = new ThreadLocalBufferPool(threadLocalCount);
 	}
 
 	private static final boolean isLocalCacheThread() {

File: src/main/java/org/opencloudb/parser/druid/DruidShardingParseInfo.java
Patch:
@@ -51,6 +51,9 @@ public void addShardingExpr(String tableName, String columnName,
 
 		if (value instanceof Object[]) {
 			for (Object item : (Object[]) value) {
+				if(item == null) {
+					continue;
+				}
 				columValues.add(new ColumnRoutePair(item.toString()));
 			}
 		} else if (value instanceof RangeValue) {

File: src/main/java/org/opencloudb/parser/druid/DruidShardingParseInfo.java
Patch:
@@ -51,6 +51,9 @@ public void addShardingExpr(String tableName, String columnName,
 
 		if (value instanceof Object[]) {
 			for (Object item : (Object[]) value) {
+				if(item == null) {
+					continue;
+				}
 				columValues.add(new ColumnRoutePair(item.toString()));
 			}
 		} else if (value instanceof RangeValue) {

File: src/main/java/org/opencloudb/net/NIOSocketWR.java
Patch:
@@ -39,10 +39,9 @@ public void doNextWriteCheck() {
 		}
 
 		try {
-			write0();
+			boolean noMoreData = write0();
 			writing.set(false);
-			boolean noMoreData = con.writeQueue.isEmpty();
-			if (noMoreData) {
+			if (noMoreData && con.writeQueue.isEmpty()) {
 				if ((processKey.isValid() && (processKey.interestOps() & SelectionKey.OP_WRITE) != 0)) {
 					disableWrite();
 				}

File: src/main/java/org/opencloudb/response/ReloadConfig.java
Patch:
@@ -85,7 +85,7 @@ private static boolean reload() {
 		Map<String, PhysicalDBPool> cNodes = conf.getDataHosts();
 		boolean reloadStatus = true;
 		for (PhysicalDBPool dn : dataHosts.values()) {
-			
+			dn.setSchemas(MycatServer.getInstance().getConfig().getDataNodeSchemasOfDataHost(dn.getHostName()));
 			// init datahost
 			String index = DnPropertyUtil.loadDnIndexProps().getProperty(dn.getHostName(),
 					"0");

File: src/main/java/org/opencloudb/response/ReloadConfig.java
Patch:
@@ -85,7 +85,7 @@ private static boolean reload() {
 		Map<String, PhysicalDBPool> cNodes = conf.getDataHosts();
 		boolean reloadStatus = true;
 		for (PhysicalDBPool dn : dataHosts.values()) {
-			
+			dn.setSchemas(MycatServer.getInstance().getConfig().getDataNodeSchemasOfDataHost(dn.getHostName()));
 			// init datahost
 			String index = DnPropertyUtil.loadDnIndexProps().getProperty(dn.getHostName(),
 					"0");

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -113,7 +113,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
 					charset, sc, tableId2DataNodeCache);
 		}
 
-		if (sqlType == ServerParse.SELECT && rrs.isCacheAble()) {
+		if (rrs!=null && sqlType == ServerParse.SELECT && rrs.isCacheAble()) {
 			sqlRouteCache.putIfAbsent(cacheKey, rrs);
 		}
 		return rrs;

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -113,7 +113,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
 					charset, sc, tableId2DataNodeCache);
 		}
 
-		if (sqlType == ServerParse.SELECT && rrs.isCacheAble()) {
+		if (rrs!=null && sqlType == ServerParse.SELECT && rrs.isCacheAble()) {
 			sqlRouteCache.putIfAbsent(cacheKey, rrs);
 		}
 		return rrs;

File: src/main/java/org/opencloudb/MycatConfig.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.io.IOException;
 import java.net.StandardSocketOptions;
-import java.nio.channels.AsynchronousSocketChannel;
 import java.nio.channels.NetworkChannel;
 import java.util.ArrayList;
 import java.util.Map;

File: src/main/java/org/opencloudb/config/loader/xml/XMLRuleLoader.java
Patch:
@@ -31,7 +31,6 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import org.opencloudb.config.model.rule.RuleAlgorithm;
 import org.opencloudb.config.model.rule.RuleConfig;
 import org.opencloudb.config.model.rule.TableRuleConfig;
 import org.opencloudb.config.util.ConfigException;

File: src/main/java/org/opencloudb/heartbeat/MySQLDetector.java
Patch:
@@ -31,7 +31,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.config.Capabilities;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.mysql.SecurityUtil;
 import org.opencloudb.mysql.nio.handler.ResponseHandler;
 import org.opencloudb.net.BackendAIOConnection;

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -13,7 +13,6 @@
 import java.util.List;
 
 import org.opencloudb.backend.BackendConnection;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.mysql.nio.handler.ResponseHandler;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.ErrorPacket;

File: src/main/java/org/opencloudb/mpp/RowDataPacketGrouper.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.LinkedList;
 import java.util.concurrent.ConcurrentLinkedQueue;
 
 import org.opencloudb.net.mysql.RowDataPacket;

File: src/main/java/org/opencloudb/mysql/nio/MySQLConnection.java
Patch:
@@ -30,7 +30,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.config.Capabilities;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.config.Isolations;
 import org.opencloudb.exception.UnknownTxIsolationException;
 import org.opencloudb.mysql.CharsetUtil;

File: src/main/java/org/opencloudb/mysql/nio/handler/KillConnectionHandler.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.io.UnsupportedEncodingException;
 import java.util.List;
-import java.util.concurrent.atomic.AtomicInteger;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.backend.BackendConnection;

File: src/main/java/org/opencloudb/mysql/nio/handler/RollbackNodeHandler.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.mysql.nio.handler;
 
 import java.util.List;
-import java.util.concurrent.Executor;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.backend.BackendConnection;

File: src/main/java/org/opencloudb/net/AIOConnector.java
Patch:
@@ -27,7 +27,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * @author mycat

File: src/main/java/org/opencloudb/net/FrontendConnection.java
Patch:
@@ -23,7 +23,6 @@
  */
 package org.opencloudb.net;
 
-import java.io.EOFException;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.InetSocketAddress;

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -34,7 +34,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * @author mycat

File: src/main/java/org/opencloudb/net/NIOReactor.java
Patch:
@@ -32,7 +32,6 @@
 import java.util.concurrent.ConcurrentLinkedQueue;
 
 import org.apache.log4j.Logger;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * 网络事件反应器

File: src/main/java/org/opencloudb/net/factory/BackendConnectionFactory.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.net.factory;
 
 import java.io.IOException;
-import java.net.Socket;
 import java.nio.channels.AsynchronousSocketChannel;
 import java.nio.channels.NetworkChannel;
 import java.nio.channels.SocketChannel;

File: src/main/java/org/opencloudb/parser/ExtNodeToString4SEQ.java
Patch:
@@ -46,8 +46,8 @@ public ExtNodeToString4SEQ(int seqHandlerType) {
 		case SystemConfig.SEQUENCEHANDLER_LOCALFILE:
 			sequenceHandler = IncrSequencePropHandler.getInstance();
 			break;
-			default:
-				throw new java.lang.IllegalArgumentException("Invalid sequnce handler type "+seqHandlerType);
+		default:
+			throw new java.lang.IllegalArgumentException("Invalid sequnce handler type "+seqHandlerType);
 		}
 	}
 

File: src/main/java/org/opencloudb/response/ShowBackend.java
Patch:
@@ -27,7 +27,6 @@
 
 import org.opencloudb.MycatServer;
 import org.opencloudb.backend.BackendConnection;
-import org.opencloudb.buffer.BufferQueue;
 import org.opencloudb.config.Fields;
 import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -90,7 +90,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
                 if(firstSplitPos > 0 ){
                     String hintType = hint.substring(0,firstSplitPos).trim().toLowerCase(Locale.US);
                     String hintValue = hint.substring(firstSplitPos + hintSplit.length()).trim();
-                    if(hintValue.length()==0){//fixed by runfriends@126.com
+                    if(hintValue.length()==0){
                     	LOGGER.warn("comment int sql must meet :/*!mycat:type=value*/: "+stmt);
                     	throw new SQLSyntaxErrorException("comment int sql must meet :/*!mycat:type=value*/: "+stmt);
                     }

File: src/main/java/org/opencloudb/route/handler/HintHandler.java
Patch:
@@ -1,13 +1,13 @@
 package org.opencloudb.route.handler;
 
+import java.sql.SQLNonTransientException;
+
 import org.opencloudb.cache.LayerCachePool;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
 import org.opencloudb.route.RouteResultset;
 import org.opencloudb.server.ServerConnection;
 
-import java.sql.SQLNonTransientException;
-
 /**
  * 按照注释中包含指定类型的内容做路由解析
  * 

File: src/main/java/org/opencloudb/route/impl/AbstractRouteStrategy.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.sql.SQLNonTransientException;
 import java.sql.SQLSyntaxErrorException;
-import java.util.Collection;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;

File: src/main/java/org/opencloudb/route/impl/FdbRouteStrategy.java
Patch:
@@ -17,7 +17,6 @@
 import org.opencloudb.cache.LayerCachePool;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.TableConfig;
-import org.opencloudb.config.model.rule.RuleConfig;
 import org.opencloudb.mpp.ColumnRoutePair;
 import org.opencloudb.mpp.DDLParsInf;
 import org.opencloudb.mpp.DDLSQLAnalyser;
@@ -36,7 +35,6 @@
 import org.opencloudb.parser.fdb.FdbStrategy;
 import org.opencloudb.route.RouteResultset;
 import org.opencloudb.route.RouteResultsetNode;
-import org.opencloudb.route.function.AbstractPartitionAlgorithm;
 import org.opencloudb.route.util.RouterUtil;
 import org.opencloudb.server.parser.ServerParse;
 import org.opencloudb.util.StringUtil;

File: src/main/java/org/opencloudb/server/NonBlockingSession.java
Patch:
@@ -40,7 +40,6 @@
 import org.opencloudb.backend.PhysicalDBNode;
 import org.opencloudb.config.ErrorCode;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.mpp.DataMergeService;
 import org.opencloudb.mpp.MutiDataMergeService;
 import org.opencloudb.mysql.nio.handler.CommitNodeHandler;
 import org.opencloudb.mysql.nio.handler.KillConnectionHandler;

File: src/main/java/org/opencloudb/server/ServerQueryHandler.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.server;
 
 import org.apache.log4j.Logger;
-import org.opencloudb.MycatServer;
 import org.opencloudb.config.ErrorCode;
 import org.opencloudb.net.handler.FrontendQueryHandler;
 import org.opencloudb.net.mysql.OkPacket;

File: src/main/java/org/opencloudb/util/rehasher/RehashLauncher.java
Patch:
@@ -128,7 +128,6 @@ public void run(){
 					}
 				}
 			});
-			
 		}
 		return this;
 	}

File: src/main/java/org/opencloudb/MycatConfig.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.io.IOException;
 import java.net.StandardSocketOptions;
-import java.nio.channels.AsynchronousSocketChannel;
 import java.nio.channels.NetworkChannel;
 import java.util.ArrayList;
 import java.util.Map;

File: src/main/java/org/opencloudb/config/loader/xml/XMLRuleLoader.java
Patch:
@@ -31,7 +31,6 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import org.opencloudb.config.model.rule.RuleAlgorithm;
 import org.opencloudb.config.model.rule.RuleConfig;
 import org.opencloudb.config.model.rule.TableRuleConfig;
 import org.opencloudb.config.util.ConfigException;

File: src/main/java/org/opencloudb/heartbeat/MySQLDetector.java
Patch:
@@ -31,7 +31,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.config.Capabilities;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.mysql.SecurityUtil;
 import org.opencloudb.mysql.nio.handler.ResponseHandler;
 import org.opencloudb.net.BackendAIOConnection;

File: src/main/java/org/opencloudb/jdbc/JDBCConnection.java
Patch:
@@ -13,7 +13,6 @@
 import java.util.List;
 
 import org.opencloudb.backend.BackendConnection;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.mysql.nio.handler.ResponseHandler;
 import org.opencloudb.net.mysql.EOFPacket;
 import org.opencloudb.net.mysql.ErrorPacket;

File: src/main/java/org/opencloudb/mpp/RowDataPacketGrouper.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.LinkedList;
 import java.util.concurrent.ConcurrentLinkedQueue;
 
 import org.opencloudb.net.mysql.RowDataPacket;

File: src/main/java/org/opencloudb/mysql/nio/MySQLConnection.java
Patch:
@@ -30,7 +30,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.config.Capabilities;
-import org.opencloudb.config.ErrorCode;
 import org.opencloudb.config.Isolations;
 import org.opencloudb.exception.UnknownTxIsolationException;
 import org.opencloudb.mysql.CharsetUtil;

File: src/main/java/org/opencloudb/mysql/nio/handler/KillConnectionHandler.java
Patch:
@@ -25,7 +25,6 @@
 
 import java.io.UnsupportedEncodingException;
 import java.util.List;
-import java.util.concurrent.atomic.AtomicInteger;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.backend.BackendConnection;

File: src/main/java/org/opencloudb/mysql/nio/handler/RollbackNodeHandler.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.mysql.nio.handler;
 
 import java.util.List;
-import java.util.concurrent.Executor;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.backend.BackendConnection;

File: src/main/java/org/opencloudb/net/AIOConnector.java
Patch:
@@ -27,7 +27,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * @author mycat

File: src/main/java/org/opencloudb/net/FrontendConnection.java
Patch:
@@ -23,7 +23,6 @@
  */
 package org.opencloudb.net;
 
-import java.io.EOFException;
 import java.io.IOException;
 import java.io.UnsupportedEncodingException;
 import java.net.InetSocketAddress;

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -34,7 +34,6 @@
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * @author mycat

File: src/main/java/org/opencloudb/net/NIOReactor.java
Patch:
@@ -32,7 +32,6 @@
 import java.util.concurrent.ConcurrentLinkedQueue;
 
 import org.apache.log4j.Logger;
-import org.opencloudb.config.ErrorCode;
 
 /**
  * 网络事件反应器

File: src/main/java/org/opencloudb/net/factory/BackendConnectionFactory.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.net.factory;
 
 import java.io.IOException;
-import java.net.Socket;
 import java.nio.channels.AsynchronousSocketChannel;
 import java.nio.channels.NetworkChannel;
 import java.nio.channels.SocketChannel;

File: src/main/java/org/opencloudb/parser/ExtNodeToString4SEQ.java
Patch:
@@ -46,8 +46,8 @@ public ExtNodeToString4SEQ(int seqHandlerType) {
 		case SystemConfig.SEQUENCEHANDLER_LOCALFILE:
 			sequenceHandler = IncrSequencePropHandler.getInstance();
 			break;
-			default:
-				throw new java.lang.IllegalArgumentException("Invalid sequnce handler type "+seqHandlerType);
+		default:
+			throw new java.lang.IllegalArgumentException("Invalid sequnce handler type "+seqHandlerType);
 		}
 	}
 

File: src/main/java/org/opencloudb/response/ShowBackend.java
Patch:
@@ -27,7 +27,6 @@
 
 import org.opencloudb.MycatServer;
 import org.opencloudb.backend.BackendConnection;
-import org.opencloudb.buffer.BufferQueue;
 import org.opencloudb.config.Fields;
 import org.opencloudb.manager.ManagerConnection;
 import org.opencloudb.mysql.PacketUtil;

File: src/main/java/org/opencloudb/route/RouteService.java
Patch:
@@ -90,7 +90,7 @@ public RouteResultset route(SystemConfig sysconf, SchemaConfig schema,
                 if(firstSplitPos > 0 ){
                     String hintType = hint.substring(0,firstSplitPos).trim().toLowerCase(Locale.US);
                     String hintValue = hint.substring(firstSplitPos + hintSplit.length()).trim();
-                    if(hintValue.length()==0){//fixed by runfriends@126.com
+                    if(hintValue.length()==0){
                     	LOGGER.warn("comment int sql must meet :/*!mycat:type=value*/: "+stmt);
                     	throw new SQLSyntaxErrorException("comment int sql must meet :/*!mycat:type=value*/: "+stmt);
                     }

File: src/main/java/org/opencloudb/route/handler/HintHandler.java
Patch:
@@ -1,13 +1,13 @@
 package org.opencloudb.route.handler;
 
+import java.sql.SQLNonTransientException;
+
 import org.opencloudb.cache.LayerCachePool;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.SystemConfig;
 import org.opencloudb.route.RouteResultset;
 import org.opencloudb.server.ServerConnection;
 
-import java.sql.SQLNonTransientException;
-
 /**
  * 按照注释中包含指定类型的内容做路由解析
  * 

File: src/main/java/org/opencloudb/route/impl/AbstractRouteStrategy.java
Patch:
@@ -2,7 +2,6 @@
 
 import java.sql.SQLNonTransientException;
 import java.sql.SQLSyntaxErrorException;
-import java.util.Collection;
 
 import org.apache.log4j.Logger;
 import org.opencloudb.MycatServer;

File: src/main/java/org/opencloudb/route/impl/FdbRouteStrategy.java
Patch:
@@ -17,7 +17,6 @@
 import org.opencloudb.cache.LayerCachePool;
 import org.opencloudb.config.model.SchemaConfig;
 import org.opencloudb.config.model.TableConfig;
-import org.opencloudb.config.model.rule.RuleConfig;
 import org.opencloudb.mpp.ColumnRoutePair;
 import org.opencloudb.mpp.DDLParsInf;
 import org.opencloudb.mpp.DDLSQLAnalyser;
@@ -36,7 +35,6 @@
 import org.opencloudb.parser.fdb.FdbStrategy;
 import org.opencloudb.route.RouteResultset;
 import org.opencloudb.route.RouteResultsetNode;
-import org.opencloudb.route.function.AbstractPartitionAlgorithm;
 import org.opencloudb.route.util.RouterUtil;
 import org.opencloudb.server.parser.ServerParse;
 import org.opencloudb.util.StringUtil;

File: src/main/java/org/opencloudb/server/NonBlockingSession.java
Patch:
@@ -40,7 +40,6 @@
 import org.opencloudb.backend.PhysicalDBNode;
 import org.opencloudb.config.ErrorCode;
 import org.opencloudb.config.model.SystemConfig;
-import org.opencloudb.mpp.DataMergeService;
 import org.opencloudb.mpp.MutiDataMergeService;
 import org.opencloudb.mysql.nio.handler.CommitNodeHandler;
 import org.opencloudb.mysql.nio.handler.KillConnectionHandler;

File: src/main/java/org/opencloudb/server/ServerQueryHandler.java
Patch:
@@ -24,7 +24,6 @@
 package org.opencloudb.server;
 
 import org.apache.log4j.Logger;
-import org.opencloudb.MycatServer;
 import org.opencloudb.config.ErrorCode;
 import org.opencloudb.net.handler.FrontendQueryHandler;
 import org.opencloudb.net.mysql.OkPacket;

File: src/main/java/org/opencloudb/util/rehasher/RehashLauncher.java
Patch:
@@ -128,7 +128,6 @@ public void run(){
 					}
 				}
 			});
-			
 		}
 		return this;
 	}

File: src/main/java/org/opencloudb/MycatStartup.java
Patch:
@@ -48,8 +48,7 @@ public static void main(String[] args) {
 
 			// startup
 			server.startup();
-			System.out
-					.println("MyCAT Server startup successfully. see logs in logs/mycat.log");
+			System.out.println("MyCAT Server startup successfully. see logs in logs/mycat.log");
 			while (true) {
 				Thread.sleep(300 * 1000);
 			}

File: src/main/java/org/opencloudb/jdbc/JDBCDatasource.java
Patch:
@@ -30,6 +30,7 @@ public void createNewConnection(ResponseHandler handler,String schema) throws IO
 		c.setHost(dsc.getIp());
 		c.setPort(dsc.getPort());
 		c.setPool(this);
+		c.setSchema(schema);
 		try {
 			Connection con = DriverManager.getConnection(dsc.getUrl(),
 					dsc.getUser(), dsc.getPassword());

File: src/main/java/org/opencloudb/route/function/AbstractPartitionAlgorithm.java
Patch:
@@ -9,7 +9,7 @@
  * @author lxy
  *
  */
-public abstract class AbstractPartionAlgorithm implements RuleAlgorithm {
+public abstract class AbstractPartitionAlgorithm implements RuleAlgorithm {
 
 	@Override
 	public void init() {
@@ -32,7 +32,7 @@ public Integer[] calculateRange(String beginValue, String endValue) {
 	 * @param endValue
 	 * @return
 	 */
-	public static Integer[] calculateSequenceRange(AbstractPartionAlgorithm algorithm, String beginValue, String endValue) {
+	public static Integer[] calculateSequenceRange(AbstractPartitionAlgorithm algorithm, String beginValue, String endValue) {
 		Integer begin = 0, end = 0;
 		begin = algorithm.calculate(beginValue);
 		end = algorithm.calculate(endValue);

File: src/main/java/org/opencloudb/route/function/PartitionByDate.java
Patch:
@@ -12,9 +12,9 @@
  * @author lxy
  * 
  */
-public class PartionByDate extends AbstractPartionAlgorithm implements RuleAlgorithm {
+public class PartitionByDate extends AbstractPartitionAlgorithm implements RuleAlgorithm {
 	private static final Logger LOGGER = Logger
-			.getLogger(PartionByDate.class);
+			.getLogger(PartitionByDate.class);
 
 	private String sBeginDate;
 	private String sPartionDay;
@@ -52,7 +52,7 @@ public Integer calculate(String columnValue) {
 
 	@Override
 	public Integer[] calculateRange(String beginValue, String endValue) {
-		return AbstractPartionAlgorithm.calculateSequenceRange(this, beginValue, endValue);
+		return AbstractPartitionAlgorithm.calculateSequenceRange(this, beginValue, endValue);
 	}
 
 	public void setsBeginDate(String sBeginDate) {

File: src/main/java/org/opencloudb/route/function/PartitionByMod.java
Patch:
@@ -33,7 +33,7 @@
  * @author wuzhih
  *
  */
-public class PartionByMod extends AbstractPartionAlgorithm implements RuleAlgorithm  {
+public class PartitionByMod extends AbstractPartitionAlgorithm implements RuleAlgorithm  {
 
 	private int count;
 	@Override

File: src/main/java/org/opencloudb/route/function/AbstractPartitionAlgorithm.java
Patch:
@@ -9,7 +9,7 @@
  * @author lxy
  *
  */
-public abstract class AbstractPartionAlgorithm implements RuleAlgorithm {
+public abstract class AbstractPartitionAlgorithm implements RuleAlgorithm {
 
 	@Override
 	public void init() {
@@ -32,7 +32,7 @@ public Integer[] calculateRange(String beginValue, String endValue) {
 	 * @param endValue
 	 * @return
 	 */
-	public static Integer[] calculateSequenceRange(AbstractPartionAlgorithm algorithm, String beginValue, String endValue) {
+	public static Integer[] calculateSequenceRange(AbstractPartitionAlgorithm algorithm, String beginValue, String endValue) {
 		Integer begin = 0, end = 0;
 		begin = algorithm.calculate(beginValue);
 		end = algorithm.calculate(endValue);

File: src/main/java/org/opencloudb/route/function/PartitionByDate.java
Patch:
@@ -12,9 +12,9 @@
  * @author lxy
  * 
  */
-public class PartionByDate extends AbstractPartionAlgorithm implements RuleAlgorithm {
+public class PartitionByDate extends AbstractPartitionAlgorithm implements RuleAlgorithm {
 	private static final Logger LOGGER = Logger
-			.getLogger(PartionByDate.class);
+			.getLogger(PartitionByDate.class);
 
 	private String sBeginDate;
 	private String sPartionDay;
@@ -52,7 +52,7 @@ public Integer calculate(String columnValue) {
 
 	@Override
 	public Integer[] calculateRange(String beginValue, String endValue) {
-		return AbstractPartionAlgorithm.calculateSequenceRange(this, beginValue, endValue);
+		return AbstractPartitionAlgorithm.calculateSequenceRange(this, beginValue, endValue);
 	}
 
 	public void setsBeginDate(String sBeginDate) {

File: src/main/java/org/opencloudb/route/function/PartitionByMod.java
Patch:
@@ -33,7 +33,7 @@
  * @author wuzhih
  *
  */
-public class PartionByMod extends AbstractPartionAlgorithm implements RuleAlgorithm  {
+public class PartitionByMod extends AbstractPartitionAlgorithm implements RuleAlgorithm  {
 
 	private int count;
 	@Override

File: src/main/java/org/opencloudb/jdbc/JDBCDatasource.java
Patch:
@@ -30,6 +30,7 @@ public void createNewConnection(ResponseHandler handler,String schema) throws IO
 		c.setHost(dsc.getIp());
 		c.setPort(dsc.getPort());
 		c.setPool(this);
+		c.setSchema(schema);
 		try {
 			Connection con = DriverManager.getConnection(dsc.getUrl(),
 					dsc.getUser(), dsc.getPassword());

File: src/main/java/org/opencloudb/net/AIOConnector.java
Patch:
@@ -61,6 +61,7 @@ private void finishConnect(BackendAIOConnection c) {
 				c.register();
 			}
 		} catch (Throwable e) {
+			c.onConnectFailed(e);
 			LOGGER.info("connect err " + e);
 			c.close(e.toString());
 		}

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -108,7 +108,7 @@ private void connect(Selector selector) {
 	}
 
 	private void finishConnect(SelectionKey key, Object att) {
-		AbstractConnection c = (AbstractConnection) att;
+		BackendAIOConnection c = (BackendAIOConnection) att;
 		try {
 			if (finishConnect(c, (SocketChannel) c.channel)) {
 				clearSelectionKey(key);
@@ -122,6 +122,7 @@ private void finishConnect(SelectionKey key, Object att) {
 			}
 		} catch (Throwable e) {
 			clearSelectionKey(key);
+			c.onConnectFailed(e);
 			c.close(e.toString());
 		}
 	}

File: src/main/java/org/opencloudb/net/AIOConnector.java
Patch:
@@ -61,6 +61,7 @@ private void finishConnect(BackendAIOConnection c) {
 				c.register();
 			}
 		} catch (Throwable e) {
+			c.onConnectFailed(e);
 			LOGGER.info("connect err " + e);
 			c.close(e.toString());
 		}

File: src/main/java/org/opencloudb/net/NIOConnector.java
Patch:
@@ -108,7 +108,7 @@ private void connect(Selector selector) {
 	}
 
 	private void finishConnect(SelectionKey key, Object att) {
-		AbstractConnection c = (AbstractConnection) att;
+		BackendAIOConnection c = (BackendAIOConnection) att;
 		try {
 			if (finishConnect(c, (SocketChannel) c.channel)) {
 				clearSelectionKey(key);
@@ -122,6 +122,7 @@ private void finishConnect(SelectionKey key, Object att) {
 			}
 		} catch (Throwable e) {
 			clearSelectionKey(key);
+			c.onConnectFailed(e);
 			c.close(e.toString());
 		}
 	}

File: src/main/java/org/opencloudb/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -30,7 +30,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.atomic.AtomicReferenceArray;
 import java.util.concurrent.locks.ReentrantLock;
 
 import org.apache.log4j.Logger;

File: src/main/java/org/opencloudb/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -30,7 +30,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.atomic.AtomicReferenceArray;
 import java.util.concurrent.locks.ReentrantLock;
 
 import org.apache.log4j.Logger;

File: src/main/java/org/opencloudb/mysql/nio/handler/MultiNodeHandler.java
Patch:
@@ -177,7 +177,7 @@ protected ErrorPacket createErrPkg(String errmgs) {
 		} finally {
 			lock.unlock();
 		}
-		err.errno = ErrorCode.ER_YES;
+		err.errno = ErrorCode.ER_UNKNOWN_ERROR;
 		err.message = StringUtil.encode(errmgs, session.getSource()
 				.getCharset());
 		return err;

File: src/main/java/org/opencloudb/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -369,13 +369,13 @@ public void fieldEofResponse(byte[] header, List<byte[]> fields,
 				field[3] = ++packetId;
 				source.write(field);
 			}
+			eof[3] = ++packetId;
+			source.write(eof);
+			source.write(buffer);
 			if (dataMergeSvr != null) {
 				dataMergeSvr.onRowMetaData(columToIndx, fieldCount);
 
 			}
-			eof[3] = ++packetId;
-			source.write(eof);
-			source.write(buffer);
 		} catch (Exception e) {
 			handleDataProcessException(e);
 		} finally {

File: src/main/java/org/opencloudb/net/AbstractConnection.java
Patch:
@@ -377,6 +377,7 @@ public void close(String reason) {
 		if (!isClosed.get()) {
 			closeSocket();
 			isClosed.set(true);
+			processor.removeConnection(this);
 			this.cleanup();
 			LOGGER.info("close connection,reason:" + reason + " ," + this);
 		}

File: src/main/java/org/opencloudb/net/AbstractConnection.java
Patch:
@@ -377,6 +377,7 @@ public void close(String reason) {
 		if (!isClosed.get()) {
 			closeSocket();
 			isClosed.set(true);
+			processor.removeConnection(this);
 			this.cleanup();
 			LOGGER.info("close connection,reason:" + reason + " ," + this);
 		}

File: src/main/java/org/opencloudb/mysql/nio/handler/MultiNodeQueryHandler.java
Patch:
@@ -384,7 +384,7 @@ public void fieldEofResponse(byte[] header, List<byte[]> fields,
 	}
 
 	private void handleDataProcessException(Exception e) {
-		if (errorRepsponsed.compareAndSet(false, true)) {
+		if (!errorRepsponsed.get()) {
 			this.error = e.toString();
 			LOGGER.warn("caught exception ", e);
 			setFail(e.toString());

File: src/test/java/org/opencloudb/sqlexecute/BaseSQLExeTest.java
Patch:
@@ -53,6 +53,7 @@ private static void testMultiNodeNormalSQL(Connection theCon)
 		System.out.println("testMultiNodeNormalSQL begin");
 		String[] sqls = {
 				"select * from travelrecord where id=1",
+				"select * from travelrecord  order by fee limit 200,100",
 				"select * from travelrecord limit 100",
 				"select sum(fee) total_fee, days,count(id),max(fee),min(fee) from  travelrecord  group by days  order by days desc limit 99 ",
 				"update travelrecord set user_id=user_id where id =1",

File: src/main/java/org/opencloudb/route/function/PartitionByMurmurHash.java
Patch:
@@ -59,7 +59,7 @@ public class PartitionByMurmurHash extends AbstractPartionAlgorithm implements R
 	private int seed;
 	private int count;
 	private int virtualBucketTimes=DEFAULT_VIRTUAL_BUCKET_TIMES;
-	private Map<Integer,Integer> weightMap;
+	private Map<Integer,Integer> weightMap=new HashMap<>();
 	private String bucketMapPath;
 	
 	private HashFunction hash;
@@ -160,7 +160,6 @@ public void setWeightMapFile(String weightMapPath) throws IOException{
 		Properties props=new Properties();
 		try(BufferedReader reader=new BufferedReader(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(weightMapPath), DEFAULT_CHARSET))){
 			props.load(reader);
-			weightMap=new HashMap<>();
 			for(Map.Entry entry:props.entrySet()){
 				int weight=Integer.parseInt(entry.getValue().toString());
 				weightMap.put(Integer.parseInt(entry.getKey().toString()), weight>0?weight:1);

File: src/main/java/org/opencloudb/route/function/PartitionByMurmurHash.java
Patch:
@@ -59,7 +59,7 @@ public class PartitionByMurmurHash extends AbstractPartionAlgorithm implements R
 	private int seed;
 	private int count;
 	private int virtualBucketTimes=DEFAULT_VIRTUAL_BUCKET_TIMES;
-	private Map<Integer,Integer> weightMap;
+	private Map<Integer,Integer> weightMap=new HashMap<>();
 	private String bucketMapPath;
 	
 	private HashFunction hash;
@@ -160,7 +160,6 @@ public void setWeightMapFile(String weightMapPath) throws IOException{
 		Properties props=new Properties();
 		try(BufferedReader reader=new BufferedReader(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream(weightMapPath), DEFAULT_CHARSET))){
 			props.load(reader);
-			weightMap=new HashMap<>();
 			for(Map.Entry entry:props.entrySet()){
 				int weight=Integer.parseInt(entry.getValue().toString());
 				weightMap.put(Integer.parseInt(entry.getKey().toString()), weight>0?weight:1);

File: src/main/java/org/opencloudb/mpp/tmp/CollectionWrapper.java
Patch:
@@ -11,12 +11,12 @@
  * @author czp:2014年12月8日
  *
  */
-public class CollectionWarpper extends AbstractList<RowDataPacket> {
+public class CollectionWrapper extends AbstractList<RowDataPacket> {
 
 	private int fieldCount;
 	private MemMapBytesArray arr;
 
-	public CollectionWarpper(MemMapBytesArray arr, int fieldCount) {
+	public CollectionWrapper(MemMapBytesArray arr, int fieldCount) {
 		this.arr = arr;
 		this.fieldCount = fieldCount;
 	}

File: src/main/java/org/opencloudb/mpp/tmp/FastRowDataSorter.java
Patch:
@@ -48,7 +48,7 @@ public int compare(byte[] arg0, byte[] arg1) {
 				return cmp.compare(r1, r2);
 			}
 		});
-		return new CollectionWarpper(rows, fieldCount);
+		return new CollectionWrapper(rows, fieldCount);
 	}
 
 	//必须在finally里调用此方法

File: src/main/java/org/opencloudb/mpp/tmp/RowDataCmp.java
Patch:
@@ -27,9 +27,9 @@ public int compare(RowDataPacket o1, RowDataPacket o2) {
             byte[] left = o1.fieldValues.get(colIndex);
             byte[] right = o2.fieldValues.get(colIndex);
             if (tmp[i].orderType == type) {
-                cmp = compareObject(left, right, tmp[colIndex]);
+                cmp = compareObject(left, right, tmp[i]);
             } else {
-                cmp = compareObject(right, left, tmp[colIndex]);
+                cmp = compareObject(right, left, tmp[i]);
             }
             if (cmp != 0)
                 return cmp;

File: src/main/java/org/opencloudb/mpp/tmp/RowDataCmp.java
Patch:
@@ -27,9 +27,9 @@ public int compare(RowDataPacket o1, RowDataPacket o2) {
             byte[] left = o1.fieldValues.get(colIndex);
             byte[] right = o2.fieldValues.get(colIndex);
             if (tmp[i].orderType == type) {
-                cmp = compareObject(left, right, tmp[colIndex]);
+                cmp = compareObject(left, right, tmp[i]);
             } else {
-                cmp = compareObject(right, left, tmp[colIndex]);
+                cmp = compareObject(right, left, tmp[i]);
             }
             if (cmp != 0)
                 return cmp;

