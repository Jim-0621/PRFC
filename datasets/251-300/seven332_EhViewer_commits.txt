File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -1283,6 +1283,7 @@ private boolean downloadImage(long gid, int index, String pToken, String previou
                             }
                             if (b > 126) {
                                 isPlainTxt = false;
+                                break;
                             }
                         }
                         if (isPlainTxt) {

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -1287,7 +1287,8 @@ private boolean downloadImage(long gid, int index, String pToken, String previou
                         }
                         if (isPlainTxt) {
                             error = GetText.getString(R.string.error_reading_failed);
-                            break;
+                            forceHtml = true;
+                            continue;
                         }
                     } finally {
                         if (isPipe != null) {

File: app/src/main/java/com/hippo/ehviewer/Settings.java
Patch:
@@ -262,7 +262,7 @@ public static void putTheme(int theme) {
     }
 
     public static final String KEY_APPLY_NAV_BAR_THEME_COLOR = "apply_nav_bar_theme_color";
-    private static final boolean DEFAULT_APPLY_NAV_BAR_THEME_COLOR = false;
+    private static final boolean DEFAULT_APPLY_NAV_BAR_THEME_COLOR = true;
 
     public static boolean getApplyNavBarThemeColor() {
         return getBoolean(KEY_APPLY_NAV_BAR_THEME_COLOR, DEFAULT_APPLY_NAV_BAR_THEME_COLOR);

File: app/src/main/java/com/hippo/ehviewer/client/EhUrl.java
Patch:
@@ -67,7 +67,7 @@ public class EhUrl {
     public static final String URL_WATCHED_E = HOST_E + "watched";
     public static final String URL_WATCHED_EX = HOST_EX + "watched";
 
-    private static final String URL_PREFIX_THUMB_E = "https://ul.ehgt.org/";
+    private static final String URL_PREFIX_THUMB_E = "https://ehgt.org/";
     private static final String URL_PREFIX_THUMB_EX = "https://exhentai.org/t/";
 
     public static String getGalleryDetailUrl(long gid, String token) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -303,7 +303,6 @@ public View onCreateView3(LayoutInflater inflater,
         mRecyclerView.setLayoutManager(mLayoutManager);
         mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
-        mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);
         mRecyclerView.setOnItemClickListener(this);
         mRecyclerView.setOnItemLongClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -262,7 +262,6 @@ public View onCreateView2(LayoutInflater inflater,
         mAdapter = new FavoritesAdapter(inflater, resources, mRecyclerView, Settings.getListMode());
         mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
-        mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);
         mRecyclerView.setOnItemClickListener(this);
         mRecyclerView.setOnItemLongClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -608,7 +608,6 @@ public View onCreateView2(LayoutInflater inflater, @Nullable ViewGroup container
                 mRecyclerView, Settings.getListMode());
         mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
-        mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);
         mRecyclerView.setOnItemClickListener(this);
         mRecyclerView.setOnItemLongClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/HistoryScene.java
Patch:
@@ -128,7 +128,6 @@ public View onCreateView3(LayoutInflater inflater,
         mRecyclerView.setLayoutManager(layoutManager);
         mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
-        mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);
         mRecyclerView.setOnItemClickListener(this);
         mRecyclerView.setOnItemLongClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -343,7 +343,7 @@ public static LruCache<Long, GalleryDetail> getGalleryDetailCache(@NonNull Conte
         if (application.mGalleryDetailCache == null) {
             // Max size 25, 3 min timeout
             application.mGalleryDetailCache = new LruCache<>(25);
-            application.mFavouriteStatusRouter.addListener((gid, slot) -> {
+            getFavouriteStatusRouter().addListener((gid, slot) -> {
                 GalleryDetail gd = application.mGalleryDetailCache.get(gid);
                 if (gd != null) {
                     gd.favoriteSlot = slot;

File: app/src/main/java/com/hippo/ehviewer/client/EhConfig.java
Patch:
@@ -289,6 +289,7 @@ public class EhConfig implements Cloneable {
     public static final int ASIAN_PORN = 0x80;
     public static final int NON_H = 0x100;
     public static final int WESTERN = 0x200;
+    public static final int ALL_CATEGORY = 0x3ff;
 
     public static final int NAMESPACES_RECLASS = 0x1;
     public static final int NAMESPACES_LANGUAGE = 0x2;

File: app/src/main/java/com/hippo/ehviewer/client/EhClient.java
Patch:
@@ -46,7 +46,6 @@ public class EhClient {
     public static final int METHOD_ADD_FAVORITES_RANGE = 10;
     public static final int METHOD_MODIFY_FAVORITES = 11;
     public static final int METHOD_GET_TORRENT_LIST = 12;
-    public static final int METHOD_GET_WHATS_HOT = 13;
     public static final int METHOD_GET_PROFILE = 14;
     public static final int METHOD_VOTE_COMMENT = 15;
     public static final int METHOD_IMAGE_SEARCH = 16;
@@ -162,8 +161,6 @@ protected Object doInBackground(Object... params) {
                         return EhEngine.modifyFavorites(this, mOkHttpClient, (String) params[0], (long[]) params[1], (Integer) params[2], (Boolean) params[3]);
                     case METHOD_GET_TORRENT_LIST:
                         return EhEngine.getTorrentList(this, mOkHttpClient, (String) params[0], (Long) params[1], (String) params[2]);
-                    case METHOD_GET_WHATS_HOT:
-                        return EhEngine.getWhatsHot(this, mOkHttpClient);
                     case METHOD_GET_PROFILE:
                         return EhEngine.getProfile(this, mOkHttpClient);
                     case METHOD_VOTE_COMMENT:

File: app/src/main/java/com/hippo/ehviewer/client/data/ListUrlBuilder.java
Patch:
@@ -462,6 +462,8 @@ public String build() {
                 }
                 return sb.toString();
             }
+            case MODE_WHATS_HOT:
+                return EhUrl.getPopularUrl();
             case MODE_IMAGE_SEARCH:
                 return EhUrl.getImageSearchUrl();
         }

File: app/src/main/java/com/hippo/ehviewer/client/EhUtils.java
Patch:
@@ -70,9 +70,9 @@ public class EhUtils {
             new String[] { "misc" },
             new String[] { "doujinshi" },
             new String[] { "manga" },
-            new String[] { "artistcg", "Artist CG Sets" },
-            new String[] { "gamecg", "Game CG Sets" },
-            new String[] { "imageset", "Image Sets" },
+            new String[] { "artistcg", "Artist CG Sets", "Artist CG" },
+            new String[] { "gamecg", "Game CG Sets", "Game CG" },
+            new String[] { "imageset", "Image Sets", "Image Set" },
             new String[] { "cosplay" },
             new String[] { "asianporn", "Asian Porn" },
             new String[] { "non-h" },

File: app/src/main/java/com/hippo/ehviewer/ui/HostsActivity.java
Patch:
@@ -22,6 +22,8 @@
 
 import android.app.Dialog;
 import android.content.DialogInterface;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.util.Pair;
 import android.view.LayoutInflater;
@@ -86,7 +88,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         LayoutUtils.dp2pix(this, 1));
     decoration.setShowLastDivider(true);
     recyclerView.addItemDecoration(decoration);
-    recyclerView.setSelector(Ripple.generateRippleDrawable(this, !AttrResources.getAttrBoolean(this, R.attr.isLightTheme)));
+    recyclerView.setSelector(Ripple.generateRippleDrawable(this, !AttrResources.getAttrBoolean(this, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
     recyclerView.setHasFixedSize(true);
     recyclerView.setOnItemClickListener(this);
     recyclerView.setPadding(

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -22,7 +22,9 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.res.Resources;
+import android.graphics.Color;
 import android.graphics.Point;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.AsyncTask;
 import android.os.Build;
@@ -299,7 +301,7 @@ public View onCreateView3(LayoutInflater inflater,
         mLayoutManager.setColumnSize(resources.getDimensionPixelOffset(Settings.getDetailSizeResId()));
         mLayoutManager.setStrategy(AutoStaggeredGridLayoutManager.STRATEGY_MIN_SIZE);
         mRecyclerView.setLayoutManager(mLayoutManager);
-        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
         mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -21,7 +21,9 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.res.Resources;
+import android.graphics.Color;
 import android.graphics.Point;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.text.Spannable;
@@ -258,7 +260,7 @@ public View onCreateView2(LayoutInflater inflater,
         contentLayout.getFastScroller().setOnDragHandlerListener(this);
 
         mAdapter = new FavoritesAdapter(inflater, resources, mRecyclerView, Settings.getListMode());
-        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
         mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryInfoScene.java
Patch:
@@ -20,6 +20,8 @@
 import android.content.ClipboardManager;
 import android.content.Context;
 import android.content.res.Resources;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -169,7 +171,7 @@ public View onCreateView3(LayoutInflater inflater,
                 LayoutUtils.dp2pix(context, 1));
         decoration.setPadding(context.getResources().getDimensionPixelOffset(R.dimen.keyline_margin));
         mRecyclerView.addItemDecoration(decoration);
-        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setClipToPadding(false);
         mRecyclerView.setHasFixedSize(true);
         mRecyclerView.setOnItemClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -22,7 +22,9 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.res.Resources;
+import android.graphics.Color;
 import android.graphics.Point;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import android.text.InputType;
@@ -501,7 +503,7 @@ public View onCreateView2(LayoutInflater inflater, @Nullable ViewGroup container
 
         mAdapter = new GalleryListAdapter(inflater, resources,
                 mRecyclerView, Settings.getListMode());
-        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
         mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/HistoryScene.java
Patch:
@@ -19,6 +19,8 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.res.Resources;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Bundle;
@@ -125,7 +127,7 @@ public View onCreateView3(LayoutInflater inflater,
         layoutManager.setColumnSize(resources.getDimensionPixelOffset(Settings.getDetailSizeResId()));
         layoutManager.setStrategy(AutoStaggeredGridLayoutManager.STRATEGY_MIN_SIZE);
         mRecyclerView.setLayoutManager(layoutManager);
-        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        mRecyclerView.setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         mRecyclerView.setDrawSelectorOnTop(true);
         mRecyclerView.hasFixedSize();
         mRecyclerView.setClipToPadding(false);

File: app/src/main/java/com/hippo/widget/DirExplorer.java
Patch:
@@ -17,6 +17,8 @@
 package com.hippo.widget;
 
 import android.content.Context;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Environment;
 import android.util.AttributeSet;
 import android.view.LayoutInflater;
@@ -76,7 +78,7 @@ private void init(Context context) {
                 LayoutUtils.dp2pix(context, 1));
         decoration.setShowLastDivider(true);
         addItemDecoration(decoration);
-        setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme)));
+        setSelector(Ripple.generateRippleDrawable(context, !AttrResources.getAttrBoolean(context, R.attr.isLightTheme), new ColorDrawable(Color.TRANSPARENT)));
         setOnItemClickListener(this);
 
         mCurrentFile = Environment.getExternalStorageDirectory();

File: app/src/main/java/com/hippo/ehviewer/client/data/GalleryInfo.java
Patch:
@@ -121,6 +121,8 @@ public class GalleryInfo implements Parcelable {
      */
     public String simpleLanguage;
 
+    public boolean rated;
+
     public final void generateSLang() {
         if (simpleTags != null) {
             generateSLangFromTags();

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryListParser.java
Patch:
@@ -162,6 +162,8 @@ private static GalleryInfo parseGalleryInfo(Element e) {
         Element it4r = JsoupUtils.getElementByClass(e, "it4r");
         if (null != it4r) {
             gi.rating = NumberUtils.parseFloatSafely(parseRating(it4r.attr("style")), -1.0f);
+            // TODO The gallery may be rated even if it has one of these classes
+            gi.rated = it4r.hasClass("irr") || it4r.hasClass("irg") || it4r.hasClass("irb");
         } else {
             Log.w(TAG, "Can't parse gallery info rating");
             gi.rating = -1.0f;

File: app/src/main/java/com/hippo/ehviewer/gallery/Pipe.java
Patch:
@@ -88,6 +88,7 @@ public int read(@NonNull byte[] b, int off, int len) throws IOException {
     public void close() {
       synchronized (Pipe.this) {
         inClosed = true;
+        Pipe.this.notifyAll();
       }
     }
   };
@@ -141,6 +142,7 @@ public void write(@NonNull byte[] b, int off, int len) throws IOException {
     public void close() {
       synchronized (Pipe.this) {
         outClosed = true;
+        Pipe.this.notifyAll();
       }
     }
   };

File: app/src/main/java/com/hippo/ehviewer/client/EhUrl.java
Patch:
@@ -52,7 +52,7 @@ public class EhUrl {
     public static final String UCONFIG_E = HOST_E + "uconfig.php";
     public static final String UCONFIG_EX = HOST_EX + "uconfig.php";
 
-    private static final String URL_PREFIX_THUMB_E = "https://ehgt.org/t/";
+    private static final String URL_PREFIX_THUMB_E = "https://ul.ehgt.org/";
     private static final String URL_PREFIX_THUMB_EX = "https://exhentai.org/t/";
 
     public static String getGalleryDetailUrl(long gid, String token) {

File: app/src/main/java/com/hippo/ehviewer/preference/CleanRedundancyPreference.java
Patch:
@@ -62,6 +62,9 @@ public ClearTask(@NonNull Context context) {
         // True for cleared
         private boolean clearFile(UniFile file) {
             String name = file.getName();
+            if (name == null) {
+                return false;
+            }
             int index = name.indexOf('-');
             if (index >= 0) {
                 name = name.substring(0, index);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/SecurityScene.java
Patch:
@@ -127,7 +127,7 @@ public void onAuthenticationFailed() {
                         @Override
                         public void onAuthenticationSucceeded(
                                 FingerprintManager.AuthenticationResult result) {
-                            mFingerprintIcon.setImageResource(R.drawable.ic_fingerprint_success);
+                            mFingerprintIcon.setImageResource(R.drawable.fingerprint_success);
                             mFingerprintIcon.postDelayed(new Runnable() {
                                 @Override
                                 public void run() {
@@ -248,7 +248,7 @@ public void run() {
 
     private void fingerprintError(boolean unrecoverable) {
         // Do not decrease mRetryTimes here since Android system will handle it :)
-        mFingerprintIcon.setImageResource(R.drawable.ic_fingerprint_error);
+        mFingerprintIcon.setImageResource(R.drawable.fingerprint_error);
         mFingerprintIcon.removeCallbacks(mResetFingerprintRunnable);
         if (unrecoverable) {
             mFingerprintIcon.postDelayed(new Runnable() {

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -1197,6 +1197,7 @@ private boolean downloadImage(long gid, int index, String pToken, boolean force)
                     updatePageState(index, STATE_FINISHED);
                     return true;
                 } catch (IOException e) {
+                    e.printStackTrace();
                     error = GetText.getString(R.string.error_socket);
                 } finally {
                     IOUtils.closeQuietly(is);

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryListParser.java
Patch:
@@ -233,6 +233,8 @@ private static GalleryInfo parseGalleryInfoThumbVersion(Element e) {
             gi.rating = -1.0f;
         }
 
+        gi.generateSLang();
+
         return gi;
     }
 

File: app/src/main/java/com/hippo/ehviewer/ui/MainActivity.java
Patch:
@@ -457,7 +457,7 @@ private void checkClipboardUrlInternal() {
         String text = getTextFromClipboard();
         int hashCode = text != null ? text.hashCode() : 0;
 
-        if (text != null && hashCode != 0 && mClipTextHashCode != hashCode) {
+        if (text != null && hashCode != 0 && mClipTextHashCode != hashCode && Settings.getClipboardTextHashCode() != hashCode) {
             Pair<Long, String> pair = EhUrl.parseGalleryDetailUrl(text);
             if (pair != null) {
                 long gid = pair.first;

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -279,7 +279,7 @@ public View onCreateView2(LayoutInflater inflater,
         mSearchBar.setHelper(this);
         mSearchBar.setAllowEmptySearch(false);
         updateSearchBar();
-        mSearchBarMover = new SearchBarMover(this, ViewUtils.$$(view, R.id.search_bar_card), mRecyclerView);
+        mSearchBarMover = new SearchBarMover(this, mSearchBar, mRecyclerView);
 
         mFabLayout.setExpanded(false, false);
         mFabLayout.setAutoCancel(false);

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -452,7 +452,7 @@ public View onCreateView2(LayoutInflater inflater, @Nullable ViewGroup container
 
         mSearchFab.setOnClickListener(this);
 
-        mSearchBarMover = new SearchBarMover(this, ViewUtils.$$(view, R.id.search_bar_card), mRecyclerView, mSearchLayout);
+        mSearchBarMover = new SearchBarMover(this, mSearchBar, mRecyclerView, mSearchLayout);
 
         // Update list url builder
         onUpdateUrlBuilder();

File: app/src/main/java/com/hippo/ehviewer/ui/CommonOperations.java
Patch:
@@ -197,8 +197,8 @@ public static void addToFavorites(final Activity activity, final GalleryInfo gal
             new ListCheckBoxDialogBuilder(activity, items,
                     (builder, dialog, position) -> {
                         int slot1 = position - 1;
-                        doAddToFavorites(activity, galleryInfo, slot1, listener);
                         updateGalleryDetail(galleryInfo, items[position]);
+                        doAddToFavorites(activity, galleryInfo, slot1, listener);
                         if (builder.isChecked()) {
                             Settings.putDefaultFavSlot(slot1);
                         } else {

File: app/src/main/java/com/hippo/ehviewer/ui/MainActivity.java
Patch:
@@ -433,7 +433,7 @@ private String getTextFromClipboard() {
         ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);
         if (clipboard != null) {
             ClipData clip = clipboard.getPrimaryClip();
-            if (clip != null && clip.getItemCount() > 0) {
+            if (clip != null && clip.getItemCount() > 0 && clip.getItemAt(0).getText() != null) {
                 return clip.getItemAt(0).getText().toString();
             }
         }

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -519,7 +519,7 @@ private Object request(int index, boolean ignoreError, boolean force, boolean ad
                 } else {
                     size = Integer.MAX_VALUE;
                 }
-                for (int i = index + 1, n = index + i + mPreloadNumber; i < n && i < size; i++) {
+                for (int i = index + 1, n = index + 1 + mPreloadNumber; i < n && i < size; i++) {
                     if (STATE_NONE == getPageState(i)) {
                         mRequestPageQueue2.add(i);
                     }
@@ -1049,6 +1049,8 @@ private boolean downloadImage(long gid, int index, String pToken, boolean force)
             boolean interrupt = false;
             boolean leakSkipHathKey = false;
 
+            Log.d("TAG", "index = " + index);
+
             // Try twice
             for (int i = 0; i < 5; i++) {
                 if (leakSkipHathKey) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryCommentsScene.java
Patch:
@@ -322,7 +322,7 @@ public void showVoteStatusDialog(Context context, String voteStatus) {
         rv.setAdapter(new RecyclerView.Adapter<InfoHolder>() {
             @Override
             public InfoHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-                return new InfoHolder(inflater.inflate(R.layout.item_favorite_list, parent, false));
+                return new InfoHolder(inflater.inflate(R.layout.item_drawer_favorites, parent, false));
             }
 
             @Override

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -635,7 +635,7 @@ public boolean onItemClick(EasyRecyclerView parent, View view, int position, lon
             if (list == null) {
                 return false;
             }
-            if (position < 0 && position >= list.size()) {
+            if (position < 0 || position >= list.size()) {
                 return false;
             }
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -1092,7 +1092,7 @@ public void onClick(View v) {
             }
             int size = list.size();
             int index = recyclerView.getChildAdapterPosition(itemView);
-            if (index < 0 && index >= size) {
+            if (index < 0 || index >= size) {
                 return;
             }
 

File: app/src/main/java/com/hippo/ehviewer/ui/EhActivity.java
Patch:
@@ -85,9 +85,9 @@ protected void attachBaseContext(Context newBase) {
             if (split.length == 1) {
                 locale = new Locale(split[0]);
             } else if (split.length == 2) {
-                locale = new Locale(split[0], split[0]);
+                locale = new Locale(split[0], split[1]);
             } else if (split.length == 3) {
-                locale = new Locale(split[0], split[0], split[0]);
+                locale = new Locale(split[0], split[1], split[2]);
             }
         }
 

File: app/src/main/java/com/hippo/ehviewer/ui/EhPreferenceActivity.java
Patch:
@@ -86,9 +86,9 @@ protected void attachBaseContext(Context newBase) {
             if (split.length == 1) {
                 locale = new Locale(split[0]);
             } else if (split.length == 2) {
-                locale = new Locale(split[0], split[0]);
+                locale = new Locale(split[0], split[1]);
             } else if (split.length == 3) {
-                locale = new Locale(split[0], split[0], split[0]);
+                locale = new Locale(split[0], split[1], split[2]);
             }
         }
 

File: app/src/main/java/com/hippo/ehviewer/ui/GalleryActivity.java
Patch:
@@ -49,6 +49,7 @@
 import android.widget.Toast;
 
 import com.hippo.ehviewer.AppConfig;
+import com.hippo.ehviewer.BuildConfig;
 import com.hippo.ehviewer.R;
 import com.hippo.ehviewer.Settings;
 import com.hippo.ehviewer.client.data.GalleryInfo;
@@ -860,7 +861,7 @@ private void shareImage(int page) {
 
         Uri uri = new Uri.Builder()
                 .scheme(ContentResolver.SCHEME_CONTENT)
-                .authority("com.hippo.ehviewer.fileprovider")
+                .authority(BuildConfig.AUTHORITY)
                 .appendPath("image")
                 .appendPath(filename)
                 .build();

File: app/src/test/java/com/hippo/network/CookieRepositoryTest.java
Patch:
@@ -258,9 +258,9 @@ public void testGet() throws InterruptedException {
     repository.saveFromResponse(urlEh1, Arrays.asList(cookieEh1, cookieEh2));
     repository.saveFromResponse(urlEh1, Collections.singletonList(cookieEh3));
     repository.saveFromResponse(urlNMB, Collections.singletonList(cookieNMB));
-    equals(Arrays.asList(cookieEh1, cookieEh3), repository.loadForRequest(urlEh2, null));
+    equals(Arrays.asList(cookieEh1, cookieEh3), repository.loadForRequest(null));
     Thread.sleep(3000);
-    equals(Collections.singletonList(cookieEh3), repository.loadForRequest(urlEh2, null));
+    equals(Collections.singletonList(cookieEh3), repository.loadForRequest(null));
     repository.close();
   }
 
@@ -325,7 +325,7 @@ public void testSort() {
 
     CookieRepository repository = new CookieRepository(app, "cookie.db");
     repository.saveFromResponse(url, Arrays.asList(cookie1, cookie2, cookie3, cookie4));
-    List<Cookie> list = repository.loadForRequest(url, null);
+    List<Cookie> list = repository.loadForRequest(null);
     List<Cookie> expected = Arrays.asList(cookie3, cookie4, cookie2, cookie1);
     assertEquals(expected.size(), list.size());
     for (int i = 0; i < list.size(); i++) {

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryDetailParser.java
Patch:
@@ -397,7 +397,7 @@ public static GalleryComment parseComment(Element element) {
             // time
             Element c3 = JsoupUtils.getElementByClass(element, "c3");
             String temp = c3.ownText();
-            temp = temp.substring("Posted on ".length(), temp.length() - " by:  ".length());
+            temp = temp.substring("Posted on ".length(), temp.length() - " by:".length());
             comment.time = WEB_COMMENT_DATE_FORMAT.parse(temp).getTime();
             // user
             comment.user = c3.child(0).text();

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryCommentsScene.java
Patch:
@@ -69,6 +69,7 @@
 import com.hippo.text.Html;
 import com.hippo.text.URLImageGetter;
 import com.hippo.util.DrawableManager;
+import com.hippo.util.ExceptionUtils;
 import com.hippo.util.ReadableTime;
 import com.hippo.util.TextUrl;
 import com.hippo.view.ViewTransition;
@@ -737,7 +738,7 @@ public void onSuccess(GalleryComment[] result) {
 
         @Override
         public void onFailure(Exception e) {
-            showTip(R.string.comment_failed, LENGTH_SHORT);
+            showTip(getContent().getString(R.string.comment_failed) + "\n" + ExceptionUtils.getReadableString(e), LENGTH_SHORT);
         }
 
         @Override

File: app/src/main/java/com/hippo/ehviewer/client/data/GalleryInfo.java
Patch:
@@ -63,8 +63,8 @@ public class GalleryInfo implements Parcelable {
 
     public static final Pattern[] S_LANG_PATTERNS = {
             Pattern.compile("[(\\[]eng(?:lish)?[)\\]]", Pattern.CASE_INSENSITIVE),
-            // [(（\[]ch(?:inese)?[)）\]]|[汉漢]化|中[国國][语語]|中文
-            Pattern.compile("[(\uFF08\\[]ch(?:inese)?[)\uFF09\\]]|[汉漢]化|中[国國][语語]|中文", Pattern.CASE_INSENSITIVE),
+            // [(（\[]ch(?:inese)?[)）\]]|[汉漢]化|中[国國][语語]|中文|中国翻訳
+            Pattern.compile("[(\uFF08\\[]ch(?:inese)?[)\uFF09\\]]|[汉漢]化|中[国國][语語]|中文|中国翻訳", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]spanish[)\\]]|[(\\[]Español[)\\]]", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]korean?[)\\]]", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]rus(?:sian)?[)\\]]", Pattern.CASE_INSENSITIVE),

File: app/src/main/java/com/hippo/widget/ContentLayout.java
Patch:
@@ -709,7 +709,7 @@ public void showProgressBar(boolean animation) {
         }
 
         public void showText(CharSequence text) {
-            mTipView.setText(text);
+            mTipView.setText(text + "\n\n" + getContext().getString(R.string.help_route));
             mViewTransition.showView(2);
         }
 

File: app/src/main/java/com/hippo/ehviewer/client/EhCookieStore.java
Patch:
@@ -30,6 +30,7 @@ public class EhCookieStore extends CookieDBStore {
 
     public static final String KEY_IPD_MEMBER_ID = "ipb_member_id";
     public static final String KEY_IPD_PASS_HASH = "ipb_pass_hash";
+    public static final String KEY_IGNEOUS = "igneous";
 
     public static final Cookie sTipsCookie =
             new Cookie.Builder()
@@ -128,7 +129,8 @@ public void saveFromResponse(HttpUrl url, List<Cookie> cookies) {
             if (EhUrl.DOMAIN_E.equals(cookie.domain())) {
                 // Save id and hash for exhentai
                 if (KEY_IPD_MEMBER_ID.equals(cookie.name()) ||
-                        KEY_IPD_PASS_HASH.equals(cookie.name())) {
+                        KEY_IPD_PASS_HASH.equals(cookie.name()) ||
+                        KEY_IGNEOUS.equals(cookie.name())) {
                     result.add(newCookie(cookie, EhUrl.DOMAIN_E, true, true, true));
                     result.add(newCookie(cookie, EhUrl.DOMAIN_EX, true, true, true));
                     continue;

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -103,6 +103,7 @@
 import com.hippo.widget.SimpleGridAutoSpanLayout;
 import com.hippo.yorozuya.FileUtils;
 import com.hippo.yorozuya.IOUtils;
+import com.hippo.yorozuya.IntIdGenerator;
 import com.hippo.yorozuya.SimpleHandler;
 import com.hippo.yorozuya.ViewUtils;
 
@@ -250,7 +251,7 @@ public class GalleryDetailScene extends BaseScene implements View.OnClickListene
 
     @Nullable
     private GalleryDetail mGalleryDetail;
-    private int mRequestId;
+    private int mRequestId = IntIdGenerator.INVALID_ID;
 
     private Pair<String, String>[] mTorrentList;
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/SignInScene.java
Patch:
@@ -42,6 +42,7 @@
 import com.hippo.ehviewer.ui.MainActivity;
 import com.hippo.scene.Announcer;
 import com.hippo.scene.SceneFragment;
+import com.hippo.yorozuya.IntIdGenerator;
 import com.hippo.yorozuya.ViewUtils;
 
 import junit.framework.Assert;
@@ -79,7 +80,7 @@ public final class SignInScene extends SolidScene implements EditText.OnEditorAc
     private TextView mSkipSigningIn;
 
     private boolean mSigningIn;
-    private int mRequestId;
+    private int mRequestId = IntIdGenerator.INVALID_ID;
 
     @Override
     public boolean needShowLeftDrawer() {

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryDetailParser.java
Patch:
@@ -164,7 +164,9 @@ private static void parseDetail(GalleryDetail gd, Document d, String body) throw
             // Category
             Element gdc = gm.getElementById("gdc");
             try {
-                gd.category = EhUtils.getCategory(gdc.child(0).child(0).attr("alt"));
+                String href = gdc.child(0).attr("href");
+                String category = href.substring(href.lastIndexOf('/') + 1);
+                gd.category = EhUtils.getCategory(category);
             } catch (Exception e) {
                 gd.category = EhUtils.UNKNOWN;
             }

File: app/src/main/java/com/hippo/ehviewer/client/parser/TorrentParser.java
Patch:
@@ -25,7 +25,7 @@
 
 public class TorrentParser {
 
-    private static final Pattern PATTERN_TORRENT = Pattern.compile("<td colspan=\"5\"> &nbsp; <a href=\"([^\"]+)\">([^<]+)</a></td>");
+    private static final Pattern PATTERN_TORRENT = Pattern.compile("<td colspan=\"5\"> &nbsp; <a href=\"([^\"]+)\"[^<]+>([^<]+)</a></td>");
 
     @SuppressWarnings("unchecked")
     public static Pair<String, String>[] parse(String body) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -1188,7 +1188,7 @@ public void onClick(View v) {
             }
             ArchiveListDialogHelper helper = new ArchiveListDialogHelper();
             Dialog dialog = new AlertDialog.Builder(context)
-                    .setTitle(R.string.archives)
+                    .setTitle(R.string.dialog_archive_title)
                     .setView(R.layout.dialog_archive_list)
                     .setOnDismissListener(helper)
                     .show();

File: app/src/main/java/com/hippo/ehviewer/ui/scene/FavoritesScene.java
Patch:
@@ -389,7 +389,6 @@ public void onDestroyView() {
             if (1 == mHelper.getShownViewIndex()) {
                 mHasFirstRefresh = false;
             }
-            mHelper = null;
         }
         if (null != mRecyclerView) {
             mRecyclerView.stopScroll();

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -518,7 +518,6 @@ public void onDestroyView() {
             if (1 == mHelper.getShownViewIndex()) {
                 mHasFirstRefresh = false;
             }
-            mHelper = null;
         }
         if (null != mRecyclerView) {
             mRecyclerView.stopScroll();

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryPreviewsScene.java
Patch:
@@ -174,7 +174,6 @@ public void onDestroyView() {
             if (1 == mHelper.getShownViewIndex()) {
                 mHasFirstRefresh = false;
             }
-            mHelper = null;
         }
         if (null != mRecyclerView) {
             mRecyclerView.stopScroll();

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryPageParser.java
Patch:
@@ -26,7 +26,7 @@
 
 public class GalleryPageParser {
 
-    private static final Pattern PATTERN_IMAGE_URL = Pattern.compile("<(?:/iframe|div id=\"i3\")[^>]*><a[^>]+><img[^>]*src=\"(.+?)\"");
+    private static final Pattern PATTERN_IMAGE_URL = Pattern.compile("<img[^>]*src=\"([^\"]+)\" style");
     private static final Pattern PATTERN_SKIP_HATH_KEY = Pattern.compile("onclick=\"return nl\\('([^\\)]+)'\\)");
     private static final Pattern PATTERN_ORIGIN_IMAGE_URL = Pattern.compile("<a href=\"([^\"]+)fullimg.php([^\"]+)\">");
 

File: app/src/main/java/com/hippo/ehviewer/client/EhUrl.java
Patch:
@@ -128,10 +128,10 @@ public static String getImageSearchUrl() {
     public static String getThumbUrlPrefix() {
         switch (Settings.getGallerySite()) {
             default:
-            case SITE_G:
+            //case SITE_G:
                 return URL_PREFIX_THUMB_G;
-            case SITE_EX:
-                return URL_PREFIX_THUMB_EX;
+            //case SITE_EX:
+            //    return URL_PREFIX_THUMB_EX;
         }
     }
 

File: app/src/main/java/com/hippo/ehviewer/client/EhUrl.java
Patch:
@@ -55,7 +55,7 @@ public class EhUrl {
     public static final String URL_FORUMS = "https://forums.e-hentai.org/";
 
     private static final String URL_PREFIX_THUMB_G = "http://ehgt.org/t/";
-    private static final String URL_PREFIX_THUMB_EX = "http://exhentai.org/t/";
+    private static final String URL_PREFIX_THUMB_EX = "https://exhentai.org/t/";
 
     public static String getGalleryDetailUrl(long gid, String token) {
         return getGalleryDetailUrl(gid, token, 0, false);

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryListParser.java
Patch:
@@ -143,18 +143,18 @@ private static GalleryInfo parseGalleryInfo(Element e) {
         // Title (required)
         Element it5 = JsoupUtils.getElementByClass(e, "it5");
         if (null == it5) {
-            Log.e(TAG, "Can't parse gallery info title");
+            Log.e(TAG, "Can't parse gallery info title, step 1");
             return null;
         }
         Elements es = it5.children();
         if (null == es || es.size() <= 0) {
-            Log.e(TAG, "Can't parse gallery info title");
+            Log.e(TAG, "Can't parse gallery info title, step 2");
             return null;
         }
         Element a = es.get(0);
         GalleryDetailUrlParser.Result result = GalleryDetailUrlParser.parse(a.attr("href"));
         if (null == result) {
-            Log.e(TAG, "Can't parse gallery info title");
+            Log.e(TAG, "Can't parse gallery info title, step 3");
             return null;
         }
         gi.gid = result.gid;

File: app/src/main/java/com/hippo/scene/StageActivity.java
Patch:
@@ -330,7 +330,7 @@ public void startScene(Announcer announcer) {
             String tag = mSceneTagList.get(mSceneTagList.size() - 1);
             Fragment fragment = fragmentManager.findFragmentByTag(tag);
             if (fragment != null) {
-                Assert.assertEquals(fragment.getClass(), SceneFragment.class);
+                Assert.assertTrue(SceneFragment.class.isInstance(fragment));
                 currentScene = (SceneFragment) fragment;
             }
         }

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderInfo.java
Patch:
@@ -143,7 +143,7 @@ public static SpiderInfo read(@Nullable InputStream is) {
             while (true) { // EOFException will raise
                 line = IOUtils.readAsciiLine(is);
                 int pos = line.indexOf(" ");
-                if (pos > 0 || pos < line.length() - 1) {
+                if (pos > 0) {
                     int index = Integer.parseInt(line.substring(0, pos));
                     String pToken = line.substring(pos + 1);
                     if (!TextUtils.isEmpty(pToken)) {

File: app/src/main/java/com/hippo/gl/glrenderer/ImageTexture.java
Patch:
@@ -90,7 +90,7 @@ public class ImageTexture implements Texture, Animatable {
     private WeakReference<Callback> mCallback;
 
     static {
-        sThreadExecutor = new InfiniteThreadExecutor(10 * 1000, new LinkedList<>(),
+        sThreadExecutor = new InfiniteThreadExecutor(10 * 1000, new LinkedList<Runnable>(),
                 new PriorityThreadFactory("ImageTexture$AnimateTask", Process.THREAD_PRIORITY_BACKGROUND));
         sPVLock = new PVLock(3);
     }

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderQueen.java
Patch:
@@ -834,8 +834,9 @@ private void runInternal() {
         tryToEnsureWorkers();
 
         // Start spider decoder
-        Thread decoderThread = new PriorityThread(new SpiderDecoder(), "SpiderDecoder-" + sIdGenerator.incrementAndGet(),
-                Process.THREAD_PRIORITY_BACKGROUND);
+        Thread decoderThread = new PriorityThread(new SpiderDecoder(),
+                "SpiderDecoder-" + sIdGenerator.incrementAndGet(),
+                Process.THREAD_PRIORITY_DEFAULT);
         mDecoderThread = decoderThread;
         decoderThread.start();
 

File: app/src/main/java/com/hippo/widget/FabLayout.java
Patch:
@@ -353,11 +353,11 @@ public void onAnimationEnd(Animator animation) {
     public void onClick(View v) {
         if (this == v) {
             setExpanded(false);
-        } else if (mOnClickFabListener != null && mExpanded) {
+        } else if (mOnClickFabListener != null) {
             int position = indexOfChild(v);
             if (position == getChildCount() - 1) {
                 mOnClickFabListener.onClickPrimaryFab(this, (FloatingActionButton) v);
-            } else if (position >= 0) {
+            } else if (position >= 0 && mExpanded) {
                 mOnClickFabListener.onClickSecondaryFab(this, (FloatingActionButton) v, position);
             }
         }

File: app/src/main/java/com/hippo/okhttp/CookieDBStore.java
Patch:
@@ -216,7 +216,6 @@ public synchronized List<Cookie> get(HttpUrl url) {
                 List<CookieWithID> cookies = map.get(key);
                 // cookies can not be null
                 getInternal(url, cookies, result);
-                break;
             }
         }
 

File: app/src/main/java/com/hippo/ehviewer/client/data/GalleryInfo.java
Patch:
@@ -63,7 +63,8 @@ public class GalleryInfo implements Parcelable {
 
     public static final Pattern[] S_LANG_PATTERNS = {
             Pattern.compile("[(\\[]eng(?:lish)?[)\\]]", Pattern.CASE_INSENSITIVE),
-            Pattern.compile("[(（\\[]ch(?:inese)?[)）\\]]|[汉漢]化|中[国國][语語]|中文", Pattern.CASE_INSENSITIVE),
+            // [(（\[]ch(?:inese)?[)）\]]|[汉漢]化|中[国國][语語]|中文
+            Pattern.compile("[(\uFF08\\[]ch(?:inese)?[)\uFF09\\]]|[汉漢]化|中[国國][语語]|中文", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]spanish[)\\]]|[(\\[]Español[)\\]]", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]korean?[)\\]]", Pattern.CASE_INSENSITIVE),
             Pattern.compile("[(\\[]rus(?:sian)?[)\\]]", Pattern.CASE_INSENSITIVE),

File: app/src/main/java/com/hippo/widget/drawerlayout/DrawerLayout.java
Patch:
@@ -1244,7 +1244,7 @@ protected void onDraw(Canvas c) {
                 c.clipRect(0, paddingTop, width, height - paddingBottom);
             }
 
-            // Draw drak background
+            // Draw dark background
             c.drawARGB(MathUtils.lerp(FORM, TO, mPercent), 0, 0, 0);
 
             if (activatedDrawer == mLeftDrawer) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/SignInScene.java
Patch:
@@ -376,8 +376,7 @@ public void onGetProfileFailure(Exception e) {
         mSigningIn = false;
         Toast.makeText(context, ExceptionUtils.getReadableString(context, e),
                 Toast.LENGTH_SHORT).show();
-        hideProgress();
-        whetherToSkip();
+        redirectTo();
     }
 
     private class SignInListener extends EhCallback<SignInScene, String> {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -329,12 +329,12 @@ public View onCreateView3(LayoutInflater inflater,
 
     private void guide() {
         if (Settings.getGuideDownloadThumb()) {
-            SimpleHandler.getInstance().post(new Runnable() {
+            SimpleHandler.getInstance().postDelayed(new Runnable() {
                 @Override
                 public void run() {
                     guideDownloadThumb();
                 }
-            });
+            }, 300);
         } else {
             guideDownloadLabels();
         }

File: app/src/main/java/com/hippo/ehviewer/client/EhEngine.java
Patch:
@@ -500,6 +500,7 @@ public static Void addFavorites(@Nullable EhClient.Task task, OkHttpClient okHtt
         builder.add("favnote", note != null ? note : "");
         // submit=Add+to+Favorites is not necessary, just use submit=Apply+Changes all the time
         builder.add("submit", "Apply Changes");
+        builder.add("update", "1");
         String url = EhUrl.getAddFavorites(gid, token);
         Log.d(TAG, url);
         Request request = new EhRequestBuilder(url, null != task ? task.getEhConfig() : Settings.getEhConfig())

File: app/src/main/java/com/hippo/ehviewer/gallery/gl/ScrollLayoutManager.java
Patch:
@@ -801,7 +801,8 @@ public int getCurrentIndex() {
             Rect bound = page.bounds();
             int pageTop = bound.top;
             int pageBottom = bound.bottom;
-            if ((pageTop > 0 && pageTop < height) || (pageBottom > 0 && pageBottom < height)) {
+            if ((pageTop >= 0 && pageTop < height) || (pageBottom > 0 && pageBottom <= height) ||
+                    (pageTop < 0 && pageBottom > height)) {
                 return page.getIndex();
             }
         }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -920,7 +920,7 @@ private void selectSearchFab(boolean animation) {
             fab.setScaleY(0.0f);
             mSearchFab.setVisibility(View.VISIBLE);
             mSearchFab.setScaleX(1.0f);
-            mSearchFab.setScaleX(1.0f);
+            mSearchFab.setScaleY(1.0f);
         }
     }
 
@@ -955,7 +955,7 @@ private void selectActionFab(boolean animation) {
             fab.setScaleY(1.0f);
             mSearchFab.setVisibility(View.INVISIBLE);
             mSearchFab.setScaleX(0.0f);
-            mSearchFab.setScaleX(0.0f);
+            mSearchFab.setScaleY(0.0f);
         }
     }
 

File: app/src/main/java/com/hippo/ehviewer/ui/fragment/AboutFragment.java
Patch:
@@ -98,7 +98,7 @@ public boolean onPreferenceClick(Preference preference) {
             UrlOpener.openUrl(getActivity(), "https://github.com/seven332/EhViewer",
                     false, true);
         } else if (KEY_CHANGELOG.equals(key)) {
-            UrlOpener.openUrl(getActivity(), "http://www.ehviewer.com/changlog",
+            UrlOpener.openUrl(getActivity(), "http://www.ehviewer.com/changelog",
                     false, true);
         } else if (KEY_DONATE.equals(key)) {
             new AlertDialog.Builder(getActivity())

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryCommentsScene.java
Patch:
@@ -350,7 +350,7 @@ private void hideEditPanel(boolean animation) {
     @Nullable
     private String getGalleryDetailUrl() {
         if (mGid != -1 && mToken != null) {
-            return EhUrl.getGalleryDetailUrl(mGid, mToken, 0, true);
+            return EhUrl.getGalleryDetailUrl(mGid, mToken, 0, false);
         } else {
             return null;
         }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -602,7 +602,7 @@ private boolean prepareData() {
     private boolean request() {
         Context context = getContext2();
         MainActivity activity = getActivity2();
-        String url = getGalleryDetailUrl(true);
+        String url = getGalleryDetailUrl(false);
         if (null == context || null == activity || null == url) {
             return false;
         }

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryListParser.java
Patch:
@@ -125,7 +125,7 @@ private static GalleryInfo parseGalleryInfo(Element e) {
             } else {
                 String html = it2.html();
                 int index1 = html.indexOf('~');
-                int index2 = html.lastIndexOf('~');
+                int index2 = StringUtils.ordinalIndexOf(html, '~', 2);
                 if (index1 < index2) {
                     gi.thumb = "http://" +StringUtils.replace(html.substring(index1 + 1, index2), "~", "/");
                 } else {

File: app/src/main/java/com/hippo/preference/MessagePreference.java
Patch:
@@ -76,7 +76,7 @@ public void setDialogMessage(CharSequence message) {
     protected void onPrepareDialogBuilder(AlertDialog.Builder builder) {
         super.onPrepareDialogBuilder(builder);
         builder.setMessage(mDialogMessage);
-        builder.setPositiveButton(android.R.string.ok, null);
+        builder.setPositiveButton(android.R.string.ok, this);
         builder.setNegativeButton(null, null);
     }
 

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderDen.java
Patch:
@@ -25,6 +25,7 @@
 import com.hippo.ehviewer.EhDB;
 import com.hippo.ehviewer.Settings;
 import com.hippo.ehviewer.client.EhCacheKeyFactory;
+import com.hippo.ehviewer.client.EhUtils;
 import com.hippo.ehviewer.client.data.GalleryInfo;
 import com.hippo.ehviewer.gallery.GalleryProvider;
 import com.hippo.io.UniFileInputStreamPipe;
@@ -61,7 +62,7 @@ public static UniFile getGalleryDownloadDir(GalleryInfo galleryInfo) {
             // Read from DB
             String dirname = EhDB.getDownloadDirname(galleryInfo.gid);
             if (dirname == null) {
-                dirname = FileUtils.sanitizeFilename(galleryInfo.gid + "-" + galleryInfo.title);
+                dirname = FileUtils.sanitizeFilename(galleryInfo.gid + "-" + EhUtils.getSuitableTitle(galleryInfo));
                 // Put into DB
                 EhDB.putDownloadDirname(galleryInfo.gid, dirname);
             }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -892,7 +892,7 @@ public void onClick(View v) {
             } else if (delete == v) {
                 GalleryInfo galleryInfo = list.get(index);
                 CheckBoxDialogBuilder builder = new CheckBoxDialogBuilder(getContext(),
-                        getString(R.string.download_remove_dialog_message, galleryInfo.title),
+                        getString(R.string.download_remove_dialog_message, EhUtils.getSuitableTitle(galleryInfo)),
                         getString(R.string.download_remove_dialog_check_text),
                         Settings.getRemoveImageFiles());
                 DeleteDialogHelper helper = new DeleteDialogHelper(galleryInfo, builder);
@@ -926,7 +926,7 @@ public void onBindViewHolder(DownloadHolder holder, int position) {
             }
             DownloadInfo info = mList.get(position);
             holder.thumb.load(EhCacheKeyFactory.getThumbKey(info.gid), info.thumb, true);
-            holder.title.setText(info.title);
+            holder.title.setText(EhUtils.getSuitableTitle(info));
             holder.uploader.setText(info.uploader);
             holder.rating.setRating(info.rating);
             TextView category = holder.category;

File: app/src/main/java/com/hippo/ehviewer/ui/GalleryActivity.java
Patch:
@@ -179,7 +179,7 @@ private void onRestore(@NonNull Bundle savedInstanceState) {
         mAction = savedInstanceState.getString(KEY_ACTION);
         mFilename = savedInstanceState.getString(KEY_FILENAME);
         mGalleryInfo = savedInstanceState.getParcelable(KEY_GALLERY_INFO);
-        mPage = savedInstanceState.getInt(KEY_ACTION, -1);
+        mPage = savedInstanceState.getInt(KEY_PAGE, -1);
         buildProvider();
     }
 

File: app/src/main/java/com/hippo/drawable/AddDeleteDrawable.java
Patch:
@@ -99,12 +99,12 @@ public void setColorFilter(ColorFilter cf) {
 
     @Override
     public int getIntrinsicHeight() {
-        return mSize;
+        return mSize * 6 / 5;
     }
 
     @Override
     public int getIntrinsicWidth() {
-        return mSize;
+        return mSize * 6 / 5;
     }
 
     /**

File: app/src/main/java/com/hippo/ehviewer/ui/CommonOperations.java
Patch:
@@ -216,10 +216,10 @@ public static void removeFromFavorites(Activity activity, GalleryInfo galleryInf
         client.execute(request);
     }
 
-    public static void startDownload(final Activity activity, final GalleryInfo galleryInfo) {
+    public static void startDownload(final Activity activity, final GalleryInfo galleryInfo, boolean forceDefault) {
         final DownloadManager dm = EhApplication.getDownloadManager(activity);
 
-        boolean justStart = dm.containDownloadInfo(galleryInfo.gid);
+        boolean justStart = forceDefault || dm.containDownloadInfo(galleryInfo.gid);
         String label = null;
         // Get default download label
         if (!justStart && Settings.getHasDefaultDownloadLabel()) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -588,7 +588,7 @@ public boolean onItemLongClick(EasyRecyclerView parent, View view, int position,
                     public void onClick(DialogInterface dialog, int which) {
                         switch (which) {
                             case 0: // Download
-                                CommonOperations.startDownload(getActivity(), gi);
+                                CommonOperations.startDownload(getActivity(), gi, false);
                                 break;
                             case 1: // Favorites
                                 CommonOperations.addToFavorites(getActivity(), gi,

File: app/src/main/java/com/hippo/ehviewer/ui/scene/HistoryScene.java
Patch:
@@ -174,7 +174,7 @@ public boolean onItemLongClick(EasyRecyclerView parent, View view, int position,
                     public void onClick(DialogInterface dialog, int which) {
                         switch (which) {
                             case 0: // Download
-                                CommonOperations.startDownload(getActivity(), gi);
+                                CommonOperations.startDownload(getActivity(), gi, false);
                                 break;
                             case 1: // Favorites
                                 CommonOperations.addToFavorites(getActivity(), gi,

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -827,7 +827,7 @@ private void bindTags(GalleryTagGroup[] tagGroups) {
                 String tagStr = tg.getTagAt(j);
                 tag.setText(tagStr);
                 tag.setBackgroundDrawable(new RoundSideRectDrawable(colorTag));
-                tag.setTag(R.id.tag, tagStr);
+                tag.setTag(R.id.tag, tg.groupName + ":" + tagStr);
                 tag.setOnClickListener(this);
             }
         }

File: app/src/main/java/com/hippo/ehviewer/ui/SettingsActivity.java
Patch:
@@ -34,6 +34,7 @@
 
 import com.hippo.ehviewer.R;
 import com.hippo.ehviewer.ui.fragment.AboutFragment;
+import com.hippo.ehviewer.ui.fragment.AdvancedFragment;
 import com.hippo.ehviewer.ui.fragment.DownloadFragment;
 import com.hippo.ehviewer.ui.fragment.EhFragment;
 import com.hippo.ehviewer.ui.fragment.ReadFragment;
@@ -50,6 +51,7 @@ public final class SettingsActivity extends TrackedPreferenceActivity {
             EhFragment.class.getName(),
             ReadFragment.class.getName(),
             DownloadFragment.class.getName(),
+            AdvancedFragment.class.getName(),
             AboutFragment.class.getName(),
     };
 

File: app/src/main/java/com/hippo/ehviewer/ui/fragment/AboutFragment.java
Patch:
@@ -43,7 +43,6 @@ public class AboutFragment extends PreferenceFragment
     private static final String KEY_LICENSE = "license";
     private static final String KEY_DONATE = "donate";
     private static final String KEY_CHECK_FOR_UPDATES = "check_for_updates";
-    private static final String KEY_BETA_UPDATE_CHANNEL = "beta_update_channel";
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -59,10 +58,8 @@ public void onCreate(Bundle savedInstanceState) {
         Preference license = findPreference(KEY_LICENSE);
         Preference donate = findPreference(KEY_DONATE);
         Preference checkForUpdate = findPreference(KEY_CHECK_FOR_UPDATES);
-        Preference betaUpdateChannel = findPreference(KEY_BETA_UPDATE_CHANNEL);
 
         author.setSummary(getString(R.string.settings_about_author_summary).replace('$', '@'));
-        betaUpdateChannel.setDefaultValue(EhApplication.BETA);
 
         author.setOnPreferenceClickListener(this);
         googlePlus.setOnPreferenceClickListener(this);

File: app/src/main/java/com/hippo/ehviewer/Settings.java
Patch:
@@ -389,7 +389,7 @@ public static void putRecentFavCat(int value) {
     }
 
     // -1 for local, 0 - 9 for cloud favorite, other for no default fav slot
-    private static final String KEY_DEFAULT_FAV_SLOT = "default_favorite";
+    private static final String KEY_DEFAULT_FAV_SLOT = "default_favorite_2";
     public static final int INVALID_DEFAULT_FAV_SLOT = -2;
     private static final int DEFAULT_DEFAULT_FAV_SLOT = INVALID_DEFAULT_FAV_SLOT;
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DownloadsScene.java
Patch:
@@ -157,7 +157,7 @@ public void onDestroy() {
         super.onDestroy();
         mList = null;
         DownloadManager manager = EhApplication.getDownloadManager(getContext());
-        manager.removeDownloadInfoListener(null);
+        manager.removeDownloadInfoListener(this);
     }
 
     private void updateForLabel() {

File: app/src/main/java/com/hippo/ehviewer/client/parser/GalleryApiParser.java
Patch:
@@ -38,8 +38,8 @@ public static void parse(String body, List<GalleryInfo> galleryInfoList) throws
             if (gi == null) {
                 continue;
             }
-            gi.title = g.getString("title");
-            gi.titleJpn = g.getString("title_jpn");
+            gi.title = ParserUtils.trim(g.getString("title"));
+            gi.titleJpn = ParserUtils.trim(g.getString("title_jpn"));
             gi.category = EhUtils.getCategory(g.getString("category"));
             gi.thumb = g.getString("thumb");
             gi.uploader = g.getString("uploader");

File: app/src/main/java/com/hippo/drawable/UnikeryDrawable.java
Patch:
@@ -100,7 +100,7 @@ public boolean onGetObject(@NonNull ValueHolder<Bitmap> holder, Conaco.Source so
         removeDrawableAndHolder();
 
         mHolder = holder;
-        Drawable drawable = new BitmapDrawable(holder.getValue());
+        Drawable drawable = new BitmapDrawable(mTextView.getResources(), holder.getValue());
 
         setDrawable(drawable);
 

File: app/src/main/java/com/hippo/ehviewer/client/EhUrlOpener.java
Patch:
@@ -63,7 +63,7 @@ public static Announcer parseUrl(String url) {
             args.putString(ProgressScene.KEY_ACTION, ProgressScene.ACTION_GALLERY_TOKEN);
             args.putLong(ProgressScene.KEY_GID, result2.gid);
             args.putString(ProgressScene.KEY_PTOKEN, result2.pToken);
-            args.putLong(ProgressScene.KEY_PAGE, result2.page);
+            args.putInt(ProgressScene.KEY_PAGE, result2.page);
             return new Announcer(ProgressScene.class).setArgs(args);
         }
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/ProgressScene.java
Patch:
@@ -103,7 +103,7 @@ private boolean handleArgs(Bundle args) {
 
         mAction = args.getString(KEY_ACTION);
         if (ACTION_GALLERY_TOKEN.equals(mAction)) {
-            mGid = args.getInt(KEY_GID, -1);
+            mGid = args.getLong(KEY_GID, -1);
             mPToken = args.getString(KEY_PTOKEN, null);
             mPage = args.getInt(KEY_PAGE, -1);
             if (mGid == -1 || mPToken == null || mPage == -1) {

File: app/src/main/java/com/hippo/ehviewer/BitmapHelper.java
Patch:
@@ -35,6 +35,8 @@ public Bitmap decode(@NonNull InputStreamPipe isPipe) {
         try {
             isPipe.obtain();
             return BitmapFactory.decodeStream(isPipe.open());
+        } catch (OutOfMemoryError e) {
+            return null;
         } catch (IOException e) {
             return null;
         } finally {

File: app/src/main/java/com/hippo/widget/FixedAspectImageView.java
Patch:
@@ -60,6 +60,7 @@ public FixedAspectImageView(Context context, AttributeSet attrs) {
         this(context, attrs, 0);
     }
 
+    @SuppressWarnings("ResourceType")
     public FixedAspectImageView(Context context, AttributeSet attrs, int defStyle) {
         super(context, attrs, defStyle);
 

File: app/src/main/java/com/hippo/ehviewer/EhDB.java
Patch:
@@ -136,8 +136,8 @@ public static void mergeOldDB(Context context) {
                         gi.posted = cursor.getString(3);
                         gi.category = cursor.getInt(4);
                         gi.thumb = cursor.getString(5);
-                        gi.uploader = cursor.getString(5);
-                        gi.rating = cursor.getFloat(6);
+                        gi.uploader = cursor.getString(6);
+                        gi.rating = cursor.getFloat(7);
 
                         map.put(gi.gid, gi);
 

File: app/src/main/java/com/hippo/ehviewer/gallery/EhGalleryProvider.java
Patch:
@@ -143,7 +143,7 @@ public void onPageFailure(int index, String error, int finished, int downloaded,
     }
 
     @Override
-    public void onFinish(int downloaded, int total) {
+    public void onFinish(int finished, int downloaded, int total) {
     }
 
     @Override

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -477,7 +477,7 @@ public void onClick(DialogInterface dialog, int which) {
                                 intent.putExtra(DownloadService.KEY_GALLERY_INFO, gi);
                                 getActivity().startService(intent);
                                 break;
-                            case 1: // Favorite
+                            case 1: // Favorites
                                 // TODO
                                 break;
                         }

File: app/src/main/java/com/hippo/ehviewer/download/DownloadService.java
Patch:
@@ -41,6 +41,7 @@
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
 
+// TODO Stop and delete action should not pass through DownloadService
 public class DownloadService extends Service implements DownloadManager.DownloadListener {
 
     public static final String ACTION_START = "start";

File: app/src/main/java/com/hippo/ehviewer/gallery/GalleryProvider.java
Patch:
@@ -78,6 +78,8 @@ public void forceRequest(int index) {
         request(index);
     }
 
+    public abstract void cancelRequest(int index);
+
     public abstract String getError();
 
     public void setGalleryProviderListener(GalleryProviderListener listener) {

File: app/src/main/java/com/hippo/ehviewer/gallery/gl/GalleryView.java
Patch:
@@ -855,13 +855,13 @@ public void bind(GalleryPageView view, int index) {
         }
 
         public void unbind(GalleryPageView view) {
-            onUnbind(view);
+            onUnbind(view, view.getIndex());
             view.setIndex(GalleryPageView.INVALID_INDEX);
         }
 
         public abstract void onBind(GalleryPageView view, int index);
 
-        public abstract void onUnbind(GalleryPageView view);
+        public abstract void onUnbind(GalleryPageView view, int index);
 
         /**
          * @return Null for no error

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryPreviewsScene.java
Patch:
@@ -313,9 +313,9 @@ private void onGetLargePreviewSetFailure(Exception e, int taskId) {
 
     private static class GetLargePreviewSetListener extends EhCallback<GalleryPreviewsScene, Pair<LargePreviewSet, Integer>> {
 
-        private int mTaskId;
-        private int mGid;
-        private int mPage;
+        private final int mTaskId;
+        private final int mGid;
+        private final int mPage;
 
         public GetLargePreviewSetListener(Context context, int stageId, String sceneTag, int taskId, int gid, int page) {
             super(context, stageId, sceneTag);

File: app/src/main/java/com/hippo/ehviewer/gallery/gl/PagerLayoutManager.java
Patch:
@@ -77,7 +77,7 @@ public float getInterpolation(float t) {
     private final int mInterval;
 
     private final int[] mScrollRemain = new int[2];
-    private final float[] mScaleDefault = new float[3];
+    private final float[] mScaleDefault = new float[4];
 
     private final PageFling mPageFling;
     private final SmoothScroller mSmoothScroller;

File: app/src/main/java/com/hippo/gl/view/GLView.java
Patch:
@@ -665,8 +665,8 @@ public void layout(int left, int top, int right, int bottom) {
         boolean sizeChanged = setBounds(left, top, right, bottom);
         final boolean forceLayout = (mViewFlags & FLAG_LAYOUT_REQUESTED) == FLAG_LAYOUT_REQUESTED;
         if (sizeChanged || forceLayout) {
-            onLayout(sizeChanged, left, top, right, bottom);
             notifyPositionInRoot();
+            onLayout(sizeChanged, left, top, right, bottom);
         } else {
             dispatchNotifyPositionInRoot();
         }

File: app/src/main/java/com/hippo/ehviewer/gallery/gl/ScrollLayoutManager.java
Patch:
@@ -748,7 +748,6 @@ public void setCurrentIndex(int index) {
         if (mPages.isEmpty()) {
             mIndex = index;
         } else {
-            mIndex = index;
             // Fix the index page
             GalleryPageView targetPage = null;
             for (GalleryPageView page : mPages) {
@@ -771,6 +770,7 @@ public void setCurrentIndex(int index) {
                 // Request fill
                 mGalleryView.requestFill();
             } else {
+                mIndex = index;
                 // Cancel all animations
                 cancelAllAnimations();
                 // Remove all view

File: app/src/main/java/com/hippo/ehviewer/spider/SpiderInfo.java
Patch:
@@ -86,7 +86,7 @@ public static SpiderInfo readFromUniFile(@Nullable UniFile file) {
                 }
             }
         } catch (IOException | NumberFormatException e) {
-            e.printStackTrace();
+            // Ignore
         } finally {
             IOUtils.closeQuietly(is);
         }

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -110,6 +110,7 @@ public static Conaco<ImageWrapper> getConaco(@NonNull Context context) {
             builder.diskCacheMaxSize = 80 * 1024 * 1024; // 80MB
             builder.okHttpClient = getOkHttpClient(context);
             builder.objectHelper = getImageWrapperHelper(context);
+            builder.debug = BuildConfig.DEBUG;
             application.mConaco = builder.build();
         }
         return application.mConaco;

File: app/src/main/java/com/hippo/ehviewer/client/EhCookieStore.java
Patch:
@@ -16,7 +16,6 @@
 
 package com.hippo.ehviewer.client;
 
-import com.hippo.okhttp.CookieDB;
 import com.hippo.okhttp.CookieDBStore;
 
 import java.util.ArrayList;
@@ -71,7 +70,7 @@ public void saveFromResponse(HttpUrl url, List<Cookie> cookies) {
             if (EhUrl.DOMAIN_E.equals(cookie.domain()) &&
                     (KEY_IPD_MEMBER_ID.equals(cookie.name()) ||
                             KEY_IPD_PASS_HASH.equals(cookie.name()))) {
-                cs.add(newCookie(cookie, CookieDB.cookiesDomain(EhUrl.DOMAIN_EX)));
+                cs.add(newCookie(cookie, EhUrl.DOMAIN_EX));
             }
         }
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -604,7 +604,7 @@ public void onClick(View v) {
             DownloadLabelHelper helper = new DownloadLabelHelper();
             new ListViewCheckBoxDialog.Builder(getContext())
                     .setListItems(helper.mLabels, helper)
-                    .setCheckBoxText(getResources().getString(R.string.remeber))
+                    .setCheckBoxText(getResources().getString(R.string.remember))
                     .setTitle(R.string.choose_label)
                     .setOnCloseListener(helper)
                     .show(this);

File: app/src/main/java/com/hippo/ehviewer/client/EhEngine.java
Patch:
@@ -193,7 +193,7 @@ public static RateGalleryParser.Result rateGallery(HttpClient httpClient,
             json.put("apikey", APIKEY);
             json.put("gid", gid);
             json.put("token", token);
-            json.put("rating", rating);
+            json.put("rating", (int) Math.ceil(rating * 2));
 
             JsonPoster jsonPoster = new JsonPoster(json);
             httpRequest.setUrl(EhUrl.getApiUrl(source));

File: app/src/main/java/com/hippo/ehviewer/service/DownloadManager.java
Patch:
@@ -470,7 +470,7 @@ public void deleteDownloadInfo(DownloadInfo... infos) {
                 infoList.remove(info);
             }
             // remove download info from DB
-            DBUtils.removeDownloadLabel(info.galleryBase.gid);
+            DBUtils.removeDownloadInfo(info.galleryBase.gid);
             // Set mode read for available gallery spider
             GallerySpider.forceSetMode(info.galleryBase, ImageHandler.Mode.READ);
             // TODO do it in new thread

File: app/src/main/java/com/hippo/ehviewer/client/data/DownloadInfo.java
Patch:
@@ -32,7 +32,7 @@ public class DownloadInfo {
     // byte/second, -1 for can't get speed now
     public long speed;
     // -1 for unknown
-    public int download = -1;
+    public int download = 0;
     // -1 for unknown
     public int total = -1;
     // Integer.MAX_VALUE for unknown

File: app/src/main/java/com/hippo/ehviewer/service/DownloadManager.java
Patch:
@@ -473,7 +473,7 @@ public boolean isDownloading() {
     private void releaseCurrent() {
         if (mCurrentTask != null) {
             mCurrentTask.speed = -1;
-            mCurrentTask.download = -1;
+            mCurrentTask.download = 0;
             mCurrentTask.total = -1;
             mCurrentTask = null;
             mCurrentSpider.removeSpiderSpiderListener(mDownloadSpiderListener);

File: app/src/main/java/com/hippo/ehviewer/widget/RatingView.java
Patch:
@@ -74,7 +74,7 @@ private void updateBounds() {
 
     private void updateShownCount() {
         float step = mMax / mStarCount / 2;
-        int shown = Math.round(mRating / step);
+        int shown = (int) Math.ceil(mRating / step);
         if (shown >= mStarCount * 2) {
             mShownStarCount = mStarCount;
             mShownStarHalfCount = 0;

File: app/src/main/java/com/hippo/ehviewer/widget/SimpleRatingView.java
Patch:
@@ -95,7 +95,7 @@ protected void onDraw(Canvas canvas) {
     public void setRating(float rating) {
         if (mRating != rating) {
             mRating = rating;
-            int ratingInt = Math.round(rating * 2);
+            int ratingInt = (int) Math.ceil(rating * 2);
             if (mRatingInt != ratingInt) {
                 mRatingInt = ratingInt;
                 invalidate();

File: app/src/main/java/com/hippo/scene/SimpleDialogCurtain.java
Patch:
@@ -188,6 +188,8 @@ public void close(@NonNull final Scene enter, @NonNull final Scene exit) {
             stageLayout.addOnLayoutListener(new StageLayout.OnLayoutListener() {
                 @Override
                 public void onLayout(View view) {
+                    stageLayout.removeOnLayoutListener(this);
+
                     onClose(enter, exitDialog, layout, cushion, frame, animatorCollection);
                 }
             });

File: app/src/main/java/com/hippo/ehviewer/gallery/ui/EdgeView.java
Patch:
@@ -109,15 +109,15 @@ protected void render(GLCanvas canvas) {
     // offset is in pixels. direction is one of {TOP, LEFT, BOTTOM, RIGHT}.
     public void onPull(float offset, int direction) {
         int fullLength = ((direction & 1) == 0) ? getWidth() : getHeight();
-        mEffect[direction].onPull((float)offset / fullLength);
+        mEffect[direction].onPull(offset / fullLength);
         if (!mEffect[direction].isFinished()) {
             invalidate();
         }
     }
 
     public void onPull(float offset, float position, int direction) {
-        int fullLength = ((direction & 1) == 0) ? getWidth() : getHeight();
-        int fullPosition = ((direction & 1) == 0) ? getHeight() : getWidth();
+        int fullLength = ((direction & 1) == 0) ? getHeight() : getWidth();
+        int fullPosition = ((direction & 1) == 0) ? getWidth() : getHeight();
         mEffect[direction].onPull(offset / fullLength, position / fullPosition);
         if (!mEffect[direction].isFinished()) {
             invalidate();

File: app/src/main/java/com/hippo/scene/Scene.java
Patch:
@@ -121,11 +121,11 @@ public int getSceneCount() {
     }
 
     public void startScene(@NonNull Class sceneClass) {
-        startScene(sceneClass, null, null);
+        startScene(sceneClass, null);
     }
 
     public void startScene(@NonNull Class sceneClass, @Nullable Announcer announcer) {
-        startScene(sceneClass, announcer, null);
+        startScene(sceneClass, announcer, getDefaultCurtain());
     }
 
     public Curtain getDefaultCurtain() {
@@ -134,7 +134,7 @@ public Curtain getDefaultCurtain() {
 
     public void startScene(@NonNull Class sceneClass, @Nullable Announcer announcer,
             @Nullable Curtain curtain) {
-        mSceneManager.startScene(sceneClass, announcer, curtain == null ? getDefaultCurtain() : curtain);
+        mSceneManager.startScene(sceneClass, announcer, curtain);
     }
 
     int getState() {

File: app/src/main/java/com/hippo/ehviewer/gallery/GallerySpider.java
Patch:
@@ -22,6 +22,7 @@
 import com.hippo.ehviewer.client.data.GalleryBase;
 import com.hippo.ehviewer.network.EhHttpClient;
 import com.hippo.ehviewer.util.DBUtils;
+import com.hippo.ehviewer.util.EhUtils;
 import com.hippo.ehviewer.util.Settings;
 import com.hippo.unifile.UniFile;
 import com.hippo.yorozuya.FileUtils;
@@ -91,7 +92,7 @@ public static void release(GallerySpider gallerySpider) {
     }
 
     private static String downloadDirname(GalleryBase galleryBase) {
-        return FileUtils.ensureFilename(galleryBase.gid + '-' + galleryBase.title); // TODO use jpn title ?
+        return FileUtils.ensureFilename(galleryBase.gid + "-" + EhUtils.getSuitableTitle(galleryBase));
     }
 
     private GallerySpider(GalleryBase galleryBase, ImageHandler.Mode mode) throws IOException {

File: app/src/main/java/com/hippo/ehviewer/widget/LinkifyTextView.java
Patch:
@@ -32,7 +32,7 @@
 
 public class LinkifyTextView extends TextView {
 
-    private static final Pattern URL_PATTERN = Pattern.compile("(http|https)://[a-z0-9A-Z%-]+(\\.[a-z0-9A-Z%-]+)+(:\\d{1,5})?(/[a-zA-Z0-9-_~:#@!&',;=%/\\*\\.\\?\\+\\$\\[\\]\\(\\)]*)?");
+    private static final Pattern URL_PATTERN = Pattern.compile("(http|https)://[a-z0-9A-Z%-]+(\\.[a-z0-9A-Z%-]+)+(:\\d{1,5})?(/[a-zA-Z0-9-_~:#@!&',;=%/\\*\\.\\?\\+\\$\\[\\]\\(\\)]+)?/?");
 
     private String mUrl;
 
@@ -65,7 +65,7 @@ public void setLinkifyText(CharSequence text) {
             URLSpan[] links = spannable.getSpans(start, end, URLSpan.class);
             if (links.length > 0) {
                 // There has been URLSpan already, leave it alone
-                break;
+                continue;
             }
 
             URLSpan urlSpan = new URLSpan(m.group(0));

File: app/src/main/java/com/hippo/ehviewer/Constants.java
Patch:
@@ -24,12 +24,14 @@ public final class Constants {
     public static final int MESSENGER_ID_SHOW_APP_STATUS;
     public static final int MESSENGER_ID_SIGN_IN_OR_OUT;
     public static final int MESSENGER_ID_USER_AVATAR;
+    public static final int MESSENGER_ID_JPN_TITLE;
 
     static {
         Messenger messenger = Messenger.getInstance();
         MESSENGER_ID_EH_SOURCE = messenger.newId();
         MESSENGER_ID_SHOW_APP_STATUS = messenger.newId();
         MESSENGER_ID_SIGN_IN_OR_OUT = messenger.newId();
         MESSENGER_ID_USER_AVATAR = messenger.newId();
+        MESSENGER_ID_JPN_TITLE = messenger.newId();
     }
 }

File: app/src/main/java/com/hippo/ehviewer/client/data/LofiGalleryInfo.java
Patch:
@@ -18,5 +18,7 @@
 
 public class LofiGalleryInfo extends GalleryInfo {
 
-    public String[] lofiTags;
+    public String titleJpn;
+
+    public String[] tags;
 }

File: app/src/main/java/com/hippo/ehviewer/client/EhException.java
Patch:
@@ -16,6 +16,9 @@
 
 package com.hippo.ehviewer.client;
 
+/**
+ * The exception about EH
+ */
 public class EhException extends Exception {
 
     public EhException(String detailMessage) {

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -482,7 +482,7 @@ public void onFailure(Exception e) {
                             public void onClose(SimpleDialog dialog, boolean cancel) {
                                 finish();
                             }
-                        }).show();
+                        }).show(GalleryDetailScene.this);
             }
         }
     }
@@ -532,7 +532,7 @@ public boolean onClick(SimpleDialog dialog, int which) {
                             mPreviewLayout.selectPreviewAt(which);
                             return true;
                         }
-                    }).show();
+                    }).show(GalleryDetailScene.this);
         }
     }
 }

File: app/src/main/java/com/hippo/ehviewer/ui/scene/preference/EHSettingsScene.java
Patch:
@@ -55,7 +55,7 @@ private PreferenceSet[] getPreferenceSet() {
 
         ValueChangeListener valueChangeListener = new ValueChangeListener();
 
-        ListPreference sourcePreference = new ListPreference(KEY_EH_SOURCE,
+        ListPreference sourcePreference = new ListPreference(this, KEY_EH_SOURCE,
                 resources.getString(R.string.settings_eh_source_title), null);
         sourcePreference.setKeys(resources.getStringArray(R.array.settings_eh_source_entries));
         sourcePreference.setValues(resources.getIntArray(R.array.settings_eh_source_entry_values));

File: app/src/main/java/com/hippo/scene/StageActivity.java
Patch:
@@ -67,7 +67,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
     protected void onDestroy() {
         super.onDestroy();
 
-        if (mSceneManager.getSceneSize() == 0) {
+        if (mSceneManager.getSceneCount() == 0) {
             // Remove this SceneManager
             SceneApplication.removeSceneManager(this, mSceneManager);
         }
@@ -142,7 +142,7 @@ public void removeSceneStateListener(SceneManager.SceneStateListener listener) {
      */
     @Override
     public void finish() {
-        if (mSceneManager.getSceneSize() == 0) {
+        if (mSceneManager.getSceneCount() == 0) {
             super.finish();
         }
     }

File: app/src/main/java/com/hippo/ehviewer/client/data/NormalPreviewSet.java
Patch:
@@ -256,7 +256,7 @@ public Row(String imageUrl) {
             int index2 = imageUrl.lastIndexOf('.');
 
             try {
-                imageIndex = Integer.parseInt(imageUrl.substring(index1 + 1, index2)) - 1;
+                imageIndex = Integer.parseInt(imageUrl.substring(index1 + 1, index2));
             } catch (Exception e) {
                 Log.w("Can't get normal preview index", e);
                 imageIndex = -1;

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -66,6 +66,7 @@
 
 import static com.hippo.ehviewer.R.id.no_tags;
 
+// TODO Use RecyclerView instead of ScrollView. It will improve swipe horizontally and animation
 public class GalleryDetailScene extends Scene implements View.OnClickListener,
         AccurateClick.OnAccurateClickListener {
 
@@ -420,6 +421,8 @@ public View makeView() {
         }
     }
 
+    public static boolean AAA = false;
+
     private class EhDetailListener extends EhClient.OnGetGalleryDetailListener {
 
         @Override

File: app/src/main/java/com/hippo/scene/RippleCurtain.java
Patch:
@@ -127,8 +127,7 @@ public void close(@NonNull final Scene enter, @NonNull final Scene exit) {
         mAnimatorSet.playTogether(animatorCollection);
         mAnimatorSet.addListener(new SimpleAnimatorListener() {
             @Override
-            public void onAnimationEnd(Animator animation, boolean canceled) {
-                super.onAnimationEnd(animation, canceled);
+            public void onAnimationEnd(Animator animation) {
                 dispatchCloseFinished(enter, exit);
                 mAnimatorSet = null;
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -16,9 +16,9 @@
 
 package com.hippo.ehviewer.ui.scene;
 
-import android.annotation.Nullable;
 import android.net.Uri;
 import android.os.Bundle;
+import android.support.annotation.Nullable;
 import android.view.ViewGroup;
 import android.widget.TextView;
 

File: app/src/main/java/com/hippo/ehviewer/ui/scene/SignInScene.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.hippo.ehviewer.ui.scene;
 
-import android.annotation.Nullable;
 import android.os.Bundle;
+import android.support.annotation.Nullable;
 import android.view.KeyEvent;
 import android.view.View;
 import android.view.inputmethod.EditorInfo;

File: app/src/main/java/com/hippo/scene/AppbarScene.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.hippo.scene;
 
-import android.annotation.DrawableRes;
-import android.annotation.Nullable;
-import android.annotation.StringRes;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.Nullable;
+import android.support.annotation.StringRes;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.FrameLayout;

File: app/src/main/java/com/hippo/scene/preference/ListPreference.java
Patch:
@@ -16,7 +16,7 @@
 
 package com.hippo.scene.preference;
 
-import android.annotation.NonNull;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 
 import com.hippo.ehviewer.util.Config;

File: app/src/main/java/com/hippo/scene/preference/Preference.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.hippo.scene.preference;
 
-import android.annotation.NonNull;
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -30,7 +30,8 @@ public class Preference extends PreferenceBase {
 
     private int mPosition;
 
-    private @NonNull String mKey;
+    private @NonNull
+    String mKey;
     private String mTitle;
     private String mSummary;
 

File: app/src/main/java/com/hippo/scene/preference/PreferenceHeaderScene.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.hippo.scene.preference;
 
-import android.annotation.NonNull;
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
 import android.view.LayoutInflater;

File: app/src/main/java/com/hippo/scene/preference/SwitchPreference.java
Patch:
@@ -16,8 +16,8 @@
 
 package com.hippo.scene.preference;
 
-import android.annotation.NonNull;
 import android.content.Context;
+import android.support.annotation.NonNull;
 import android.support.v7.widget.RecyclerView;
 import android.support.v7.widget.SwitchCompat;
 import android.view.LayoutInflater;

File: app/src/main/java/com/hippo/util/FrescoUtils.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.hippo.util;
 
-import android.annotation.IdRes;
 import android.net.Uri;
+import android.support.annotation.DrawableRes;
 
 import com.facebook.common.util.UriUtil;
 
 public class FrescoUtils {
 
-    public static Uri getResourcesDrawableUri(@IdRes int resId) {
+    public static Uri getResourcesDrawableUri(@DrawableRes int resId) {
         return new Uri.Builder().scheme(UriUtil.LOCAL_RESOURCE_SCHEME)
                 .path(String.valueOf(resId)).build();
     }

File: app/src/main/java/com/hippo/util/Utils.java
Patch:
@@ -16,12 +16,12 @@
 
 package com.hippo.util;
 
-import android.annotation.NonNull;
 import android.annotation.SuppressLint;
 import android.content.Context;
 import android.os.AsyncTask;
 import android.os.Build;
 import android.os.Vibrator;
+import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.webkit.MimeTypeMap;
 

File: app/src/main/java/com/hippo/widget/SimpleImageView.java
Patch:
@@ -16,11 +16,11 @@
 
 package com.hippo.widget;
 
-import android.annotation.DrawableRes;
 import android.content.Context;
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
 import android.graphics.drawable.Drawable;
+import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
 import android.util.AttributeSet;
 import android.view.View;

File: app/src/main/java/android/content/res/VectorResources.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/animation/SimpleAnimatorListener.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/app/StatsActivity.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/drawable/AddDeleteDrawable.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/drawable/DrawerArrowDrawable.java
Patch:
@@ -8,12 +8,13 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.hippo.drawable;
 
+package com.hippo.drawable;
 
 import android.animation.ObjectAnimator;
 import android.content.Context;

File: app/src/main/java/com/hippo/effect/ViewTransition.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/effect/ripple/RippleBackground.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2015 Hippo Seven
+ * Copyright (C) 2013 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/effect/ripple/RippleDrawable.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2015 Hippo Seven
+ * Copyright (C) 2013 The Android Open Source Project
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/effect/ripple/RippleSalon.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/AppConfig.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/Constants.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/EhApplication.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/DetailUrlParser.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/EhClient.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/EhException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/GalleryDetailParser.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/GalleryListParser.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/OffensiveException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/ParseException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/PiningException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/PopularParser.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/client/SignInParser.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/Comment.java
Patch:
@@ -20,7 +20,7 @@ public class Comment {
     public String time;
     public String user;
     public String comment;
-    
+
     public Comment (String time, String user, String comment) {
         this.time = time;
         this.user = user;

File: app/src/main/java/com/hippo/ehviewer/data/GalleryDetail.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/GalleryInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/ListUrlBuilder.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/LofiGalleryInfo.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/TagGroup.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/data/UnsupportedSearchException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/fresco/EhCacheKeyFactory.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/fresco/KeyImageRequest.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/network/EhOkHttpClient.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/ContentActivity.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/StartActivity.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/AdvanceSettingsScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/DisplaySettingsScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/EHSettingsScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryDetailScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/MainSettingsScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/SignInScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/util/Config.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/util/EhUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/AdvanceSearchTable.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/CategoryTable.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/CircularRevealLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/ContentLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/DrawerLeftPanel.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/FitStageLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/GalleryListView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/OffsetLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/RatingView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/SearchBar.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/SearchDatabase.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/SearchEditText.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/SearchItemAnimator.java
Patch:
@@ -8,10 +8,12 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.hippo.ehviewer.widget;
 
 import android.animation.Animator;

File: app/src/main/java/com/hippo/ehviewer/widget/SearchLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/widget/SelectSearchImageLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/network/Cookie.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/network/ResponseCodeException.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/Announcer.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/AppbarScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/Curtain.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/Scene.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SceneApplication.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SceneDialog.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SceneDialogView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SceneManager.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SceneView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SimpleCurtain.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SimpleDialog.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SimpleDialogCurtain.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SimpleDialogFrame.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/SimpleDialogLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/StageActivity.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/StageLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/TransitionCurtain.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/Preference.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceBase.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceCategory.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceCategoryHolder.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceCenter.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceDivider.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceHeader.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceHeaderScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceHolder.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceScene.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/PreferenceSet.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/scene/preference/SwitchPreference.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/AnimationUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/AppHandler.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/AssertError.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/AssertException.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/AssertUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/DrawableUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/ExceptionUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/FileUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/FrescoUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/IntIdGenerator.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/LayoutManagerUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/Log.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/MathUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/Messenger.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/Pool.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/PriorityThreadFactory.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.hippo.util;
 
 import android.os.Process;

File: app/src/main/java/com/hippo/util/ResourcesUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/SerialThreadExecutor.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/UiUtils.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/Utils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/util/ViewUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/vectorold/animation/AnimatorInflater.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.hippo.vectorold.animation;
 
 import android.animation.Animator;

File: app/src/main/java/com/hippo/vectorold/animation/InterpolatorInflater.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/vectorold/animation/PathInterpolator.java
Patch:
@@ -13,6 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
 package com.hippo.vectorold.animation;
 
 import android.content.Context;

File: app/src/main/java/com/hippo/vectorold/content/VectorContext.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/vectorold/util/DrawableUtils.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/CheckTextView.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FabLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FitPaddingImpl.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FixedAspectImageView.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FixedAspectLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FloatLabelEditText.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/FloatingActionButton.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/GlobalLayoutSet.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/HotspotTouchHelper.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/Hotspotable.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/IndicatingScrollView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/NotifyingScrollView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/OnScrollChangeListener.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/PrefixEditText.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/SimpleImageView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/Snackbar.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/SolidLinearLayout.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/EasyRecyclerView.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/LinearDividerItemDecoration.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/MarginItemDecoration.java
Patch:
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2014-2015 Hippo Seven
+ * Copyright (C) 2015 Hippo Seven
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/MonoRecyclerView.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/SimpleHolder.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/widget/recyclerview/SimpleSmoothScroller.java
Patch:
@@ -8,6 +8,7 @@
  *      http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.

File: app/src/main/java/com/hippo/ehviewer/ui/scene/GalleryListScene.java
Patch:
@@ -211,7 +211,7 @@ private void handleAnnouncer(Announcer announcer) {
             default:
             case MODE_HOMEPAGE:
                 mActivity.setDrawerListActivatedPosition(ContentActivity.DRAWER_LIST_HOMEPAGE);
-                mListUrlBuilder.setMode(ListUrlBuilder.MODE_NORMAL);
+                mListUrlBuilder.reset();
                 break;
             case MODE_POPULAR:
                 mActivity.setDrawerListActivatedPosition(ContentActivity.DRAWER_LIST_WHATS_HOT);

File: app/src/main/java/com/hippo/ehviewer/client/EhClient.java
Patch:
@@ -42,7 +42,7 @@ public final class EhClient {
 
     private static final String TAG = EhClient.class.getSimpleName();
 
-    public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");
+    public static final MediaType JSON = MediaType.parse("application/json");
 
     public static final int SOURCE_G = 0x0;
     public static final int SOURCE_EX = 0x1;

File: app/src/main/java/com/hippo/ehviewer/widget/SearchBar.java
Patch:
@@ -309,6 +309,7 @@ public void onAnimationEnd(Animator animation) {
             }
             oa.start();
         } else {
+            ViewUtils.setVisibility(mList, View.VISIBLE);
             setProgress(1f);
         }
     }
@@ -343,6 +344,7 @@ public void onAnimationEnd(Animator animation) {
             oa.start();
         } else {
             setProgress(0f);
+            ViewUtils.setVisibility(mList, View.GONE);
         }
     }
 

File: app/src/main/java/com/hippo/scene/SceneManager.java
Patch:
@@ -192,7 +192,7 @@ private int getSceneIndex(@NonNull Scene scene) {
     boolean onBackPressed() {
         Scene scene = getTopState();
         if (scene != null) {
-            scene.onBackPressed();
+            scene.onBackPressedInternal();
             return true;
         } else {
             Log.w(TAG, "There is no scene in the stage");

File: app/src/main/java/com/hippo/ehviewer/util/Ui.java
Patch:
@@ -370,7 +370,8 @@ public static void setMaterialIndicator(ActionBar actionBar, MaterialIndicatorDr
             actionBar.setHomeButtonEnabled(true);
             actionBar.setDisplayHomeAsUpEnabled(true);
             actionBar.setHomeAsUpIndicator(d);
-            actionBar.setIcon(null);
+            // actionBar.setIcon(null) may cause crash in Meizu lollipop
+            actionBar.setIcon(new ColorDrawable());
             actionBar.setElevation(dp2pix(4.0f));
         }
     }

File: app/src/main/java/com/hippo/ehviewer/ui/EnterPatternActivity.java
Patch:
@@ -40,7 +40,7 @@ public void onCreate(Bundle savedInstanceState) {
         Ui.setMaterialIndicator(getActionBar(), materialIndicator);
 
         // Can't try if bad retry happened in 10 mins
-        long lastBadRetry = Config.getLong(KEY_LAST_BAD_PATTERN_RETRY, Long.MAX_VALUE);
+        long lastBadRetry = Config.getLong(KEY_LAST_BAD_PATTERN_RETRY, 0);
         if (System.currentTimeMillis() - lastBadRetry < 1000 * 60 * 10) {
             mRetryTimes = 10;
         }

File: app/src/main/java/com/hippo/ehviewer/widget/StatusBarLayout.java
Patch:
@@ -28,6 +28,7 @@
 import android.view.ViewGroup;
 
 import com.hippo.ehviewer.R;
+import com.hippo.util.Log;
 
 public class StatusBarLayout extends ViewGroup {
 

File: app/src/main/java/com/hippo/scene/SceneManager.java
Patch:
@@ -103,7 +103,7 @@ private void startScene(Scene scene, Curtain curtain) {
         // Update fit padding
         int fitPaddingBottom = getStageActivity().getFitPaddingBottom();
         if (fitPaddingBottom > 0) {
-            scene.getFitPaddingBottom(fitPaddingBottom);
+            scene.setFitPaddingBottom(fitPaddingBottom);
         }
 
         if (curtain != null && previousState != null) {

File: app/src/main/java/com/hippo/widget/FloatingActionButton.java
Patch:
@@ -87,6 +87,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 ViewUtils.getSuitableSize(getSuggestedMinimumHeight(), heightMeasureSpec));
     }
 
+    @Override
     protected void onDraw(Canvas canvas) {
         mGasketDrawer.draw(canvas);
 

File: app/src/main/java/com/hippo/scene/StageActivity.java
Patch:
@@ -33,7 +33,7 @@ public abstract class StageActivity extends AbsActionBarActivity {
 
     private static SceneManager sSceneManager;
 
-    private int mFitPaddingBottom = -1;
+    private int mFitPaddingBottom;
 
     static void setSceneManager(SceneManager sceneManager) {
         sSceneManager = sceneManager;

File: app/src/main/java/com/hippo/ehviewer/widget/SearchLayout.java
Patch:
@@ -263,7 +263,8 @@ public void onClick(View v) {
             ViewUtils.getLocationInAncestor(mSearchTagHelp, location, R.id.stage);
             new SimpleDialog.Builder(getContext()).setTitle(R.string.search_specify_tag)
                     .setMessage(R.string.search_tag_help)
-                    .setStartPoint(location[0], location[1]).show();
+                    .setStartPoint(location[0] + mSearchTagHelp.getWidth() / 2,
+                            location[1] + mSearchTagHelp.getHeight() / 2).show();
         }
     }
 

File: app/src/main/java/com/hippo/ehviewer/ui/GalleryDetailActivity.java
Patch:
@@ -89,6 +89,7 @@
 import com.hippo.ehviewer.util.Config;
 import com.hippo.ehviewer.util.Constants;
 import com.hippo.ehviewer.util.Ui;
+import com.hippo.ehviewer.util.Utils;
 import com.hippo.ehviewer.util.ViewUtils;
 import com.hippo.ehviewer.widget.AutoWrapLayout;
 import com.hippo.ehviewer.widget.FitWindowView;
@@ -1175,11 +1176,11 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
                             }
 
                             final String url = galleryDetail.torrents[position].first;
+                            String name = galleryDetail.torrents[position].second;
                             Downloader d = new Downloader(
                                     GalleryDetailActivity.this,
                                     url,
-                                    dir,
-                                    "a.torrent"); // Torrent will be updated
+                                    dir, Utils.standardizeFilename(name + ".torrent")); // Torrent will be updated
                             d.startDownload();
                         }
                     });

File: app/src/main/java/com/hippo/ehviewer/ui/GalleryDetailActivity.java
Patch:
@@ -694,7 +694,7 @@ private void doLayout() {
                 mFavoriteState |= FAVORITE_ACCOUNT;
             }
 
-            if (galleryDetail.torrents.length > 0) {
+            if (galleryDetail.torrents != null && galleryDetail.torrents.length > 0) {
                 mTorrent.setVisibility(View.VISIBLE);
             }
 

File: app/src/main/java/com/hippo/ehviewer/miscellaneous/Downloader.java
Patch:
@@ -48,7 +48,7 @@ public void post(Runnable runnable) {
     public void run() {
         HttpHelper hh = new HttpHelper(mContext);
         final boolean ok = HttpHelper.DOWNLOAD_OK_STR.equals(
-                hh.download(mUrl, mDir, mFilename, false, null, this));
+                hh.download(mUrl, mDir, mFilename, null, null, this));
         post(new Runnable() {
             @Override
             public void run() {

File: app/src/main/java/com/hippo/ehviewer/ui/GalleryListActivity.java
Patch:
@@ -1470,7 +1470,7 @@ public boolean onClick(MaterialAlertDialog dialog, int which) {
                                         if (which == MaterialAlertDialog.POSITIVE) {
                                             HttpHelper hh = new HttpHelper(GalleryListActivity.this);
                                             hh.downloadInThread(url, new File(Config.getDownloadPath()), fileName,
-                                                    false, null, new UpdateHelper.UpdateListener(
+                                                    null, null, new UpdateHelper.UpdateListener(
                                                             GalleryListActivity.this, fileName));
                                         }
                                         return true;

File: app/src/main/java/com/hippo/ehviewer/ui/SettingsActivity.java
Patch:
@@ -977,7 +977,7 @@ public boolean onClick(MaterialAlertDialog dialog, int which) {
                                                 if (which == MaterialAlertDialog.POSITIVE) {
                                                     HttpHelper hh = new HttpHelper(getActivity());
                                                     hh.downloadInThread(url, new File(Config.getDownloadPath()),
-                                                            fileName, false, null, new UpdateHelper.UpdateListener(
+                                                            fileName, null, null, new UpdateHelper.UpdateListener(
                                                                     getActivity(), fileName));
                                                 }
                                                 return true;

File: app/src/main/java/com/hippo/ehviewer/util/Secret.java
Patch:
@@ -16,14 +16,14 @@
 
 package com.hippo.ehviewer.util;
 
-import java.io.File;
-
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 
 import com.hippo.ehviewer.network.HttpHelper;
 
+import java.io.File;
+
 public final class Secret {
 
     private static final String DIR_NAME = "images";
@@ -81,7 +81,7 @@ public void run() {
                 // Get image error, try to get image from internet
                 HttpHelper hh = new HttpHelper(mContext);
                 hh.download(SERCET_IMAGE_URL, mContext.getExternalFilesDir(DIR_NAME),
-                        IMAGE_NAME, false, null, null);
+                        IMAGE_NAME, null, null, null);
             }
             sIsGetSecretImage = false;
         }

File: app/src/main/java/com/hippo/widget/recyclerview/EasyRecyclerView.java
Patch:
@@ -843,7 +843,7 @@ public void onRestoreInstanceState(Parcelable state) {
             mCheckedIdStates = ss.checkIdState;
         }
 
-        if (mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL) {
+        if (mChoiceMode == CHOICE_MODE_MULTIPLE_MODAL && mCheckedItemCount > 0) {
             mChoiceActionMode = mActionBarActivity.startSupportActionMode(mMultiChoiceModeCallback);
         }
         updateOnScreenCheckedViews();

File: app/src/main/java/com/hippo/ehviewer/cache/AnyCache.java
Patch:
@@ -221,7 +221,7 @@ public boolean putToDisk(String key, V value) {
                     }
                 }
                 if (mDiskCache != null) {
-                    mDiskCache.put(key, value);
+                    mDiskCache.put(diskKey, value);
                     return true;
                 } else {
                     return false;

File: app/src/main/java/com/hippo/ehviewer/ehclient/DetailParser.java
Patch:
@@ -236,7 +236,7 @@ public int parser(String body, int mode) {
         // Get comment
         if ((mode & COMMENT) != 0) {
             p = Pattern
-                    .compile("<div class=\"c3\">Posted on ([^<>]+) by <a[^<>]+>([^<>]+)</a>.+?<div class=\"c6\"[^>]*>(.+?)</div><div class=\"c[78]\"");
+                    .compile("<div class=\"c3\">Posted on ([^<>]+) by: &nbsp; <a[^<>]+>([^<>]+)</a>.+?<div class=\"c6\"[^>]*>(.+?)</div><div class=\"c[78]\"");
             m = p.matcher(body);
             comments = new LinkedList<Comment>();
             while (m.find()) {

File: app/src/main/java/com/hippo/ehviewer/ehclient/DetailParser.java
Patch:
@@ -140,8 +140,8 @@ public int parser(String body, int mode) {
                             //+ "<tr><td[^<>]*>Resized:</td><td[^<>]*>([^<>]+)</td></tr>" // resized
                             + "<tr><td[^<>]*>Parent:</td><td[^<>]*>(?:<a[^<>]*>)?([^<>]+)(?:</a>)?</td></tr>" // parent
                             + "<tr><td[^<>]*>Visible:</td><td[^<>]*>([^<>]+)</td></tr>" // visible
-                            + "<tr><td[^<>]*>Language:</td><td[^<>]*>([^<>]+)</td></tr>" // language
-                            + "<tr><td[^<>]*>File Size:</td><td[^<>]*>([^<>]+)<span[^<>]*>([^<>]+)</span></td></tr>" // File size and resize
+                            + "<tr><td[^<>]*>Language:</td><td[^<>]*>([^<>]+)(?:<span[^<>]*>[^<>]*</span>)?</td></tr>" // language
+                            + "<tr><td[^<>]*>File Size:</td><td[^<>]*>([^<>]+)(?:<span[^<>]*>([^<>]+)</span>)?</td></tr>" // File size and resize
                             + "<tr><td[^<>]*>Length:</td><td[^<>]*>([\\d|,]+) pages</td></tr>" // pages
                             + "<tr><td[^<>]*>Favorited:</td><[^<>]*>([^<>]+)</td></tr>" // Favorite times  ([\d|,]+) times or Never
                             + ".+"

File: app/src/main/java/com/hippo/ehviewer/ehclient/EdDetailParser.java
Patch:
@@ -16,13 +16,13 @@
 
 package com.hippo.ehviewer.ehclient;
 
+import com.hippo.ehviewer.util.Log;
+
 import java.util.LinkedList;
 import java.util.List;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
-import com.hippo.ehviewer.util.Log;
-
 public class EdDetailParser {
 
     int previewPageNum;
@@ -80,7 +80,7 @@ public boolean parser(String body, int mode, boolean needPreviewInfo) {
                     return false;
                 }
 
-                p = Pattern.compile("<td class=\"gdt1\">Images:</td><td class=\"gdt2\">([\\d,]+) ");
+                p = Pattern.compile("<tr><td[^<>]*>Length:</td><td[^<>]*>([\\d|,]+) pages</td></tr>");
                 m = p.matcher(body);
                 if (m.find())
                     imageNum = Integer.valueOf(m.group(1).replace(",", ""));

File: src/com/hippo/ehviewer/ehclient/EhInfo.java
Patch:
@@ -181,6 +181,9 @@ public void setCookie(HttpURLConnection conn, String previewMode) {
             sb.append("; ipb_member_id=").append(id);
         if (hash != null)
             sb.append("; ipb_pass_hash=").append(hash);
+        // Fake
+        sb.append("; igneous=");
+        sb.append("; lv=");
         conn.setRequestProperty("Cookie", sb.toString());
     }
 

File: app/src/main/java/com/hippo/ehviewer/widget/SelectSearchImageLayout.java
Patch:
@@ -77,10 +77,10 @@ private void init(Context context) {
         LayoutInflater.from(context).inflate(R.layout.widget_select_search_image_layout, this);
 
         // TODO It is a bad idea.
-        int childCount = getChildCount();
-        if (childCount == 3) {
+        View firstChild = getChildAt(0);
+        if (firstChild instanceof TextView) {
             setOrientation(LinearLayout.VERTICAL);
-        } else if (childCount == 2) {
+        } else if (firstChild instanceof LinearLayout) {
             setOrientation(LinearLayout.HORIZONTAL);
         } else {
             throw new IllegalStateException("Can't guess orientation, did you changed the layout res ?");

File: src/com/hippo/ehviewer/widget/CategoryTable.java
Patch:
@@ -73,9 +73,6 @@ public void init() {
      * @param category
      */
     public void setCategory(int category) {
-
-        System.out.println("category = " + category);
-
         mDoujinshi.setChecked(!Util.int2boolean(category & ListUrls.DOUJINSHI));
         mManga.setChecked(!Util.int2boolean(category & ListUrls.MANGA));
         mArtistCG.setChecked(!Util.int2boolean(category & ListUrls.ARTIST_CG));

File: src/com/hippo/ehviewer/widget/LoadImageView.java
Patch:
@@ -29,8 +29,9 @@
 import com.hippo.ehviewer.R;
 import com.hippo.ehviewer.util.Ui;
 
-public class LoadImageView extends ImageView {
-    private static final String TAG = "LoadImageView";
+public class LoadImageView extends FixedAspectImageView {
+    @SuppressWarnings("unused")
+    private static final String TAG = LoadImageView.class.getSimpleName();
 
     public static final int NONE = 0x0;
     public static final int LOADING = 0x1;

