File: MaterialDesign/src/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -102,7 +102,7 @@ public boolean onTouchEvent(MotionEvent event) {
 					isLastTouch = false;
 					check = !check;
 					if (onCheckListener != null)
-						onCheckListener.onCheck(check);
+						onCheckListener.onCheck(CheckBox.this, check);
 					if (check) {
 						step = 0;
 					}
@@ -235,7 +235,7 @@ public void setOncheckListener(OnCheckListener onCheckListener) {
 	}
 
 	public interface OnCheckListener {
-		public void onCheck(boolean check);
+		public void onCheck(CheckBox view, boolean check);
 	}
 
 }

File: MaterialDesign/src/com/gc/materialdesign/views/Slider.java
Patch:
@@ -94,7 +94,8 @@ protected void setAttributes(AttributeSet attrs) {
 	
 	@Override
 	public void invalidate() {
-		ball.invalidate();
+		if(ball != null)
+			ball.invalidate();
 		super.invalidate();
 	}
 

File: MaterialDesign/src/com/gc/materialdesign/views/Switch.java
Patch:
@@ -108,7 +108,7 @@ public boolean onTouchEvent(MotionEvent event) {
 				if (eventCheck != check) {
 					eventCheck = check;
 					if (onCheckListener != null)
-						onCheckListener.onCheck(check);
+						onCheckListener.onCheck(Switch.this,check);
 				}
 				if ((event.getX() <= getWidth() && event.getX() >= 0)) {
 					ball.animateCheck();
@@ -244,7 +244,7 @@ public void setOncheckListener(OnCheckListener onCheckListener) {
 	}
 
 	public interface OnCheckListener {
-		public void onCheck(boolean check);
+		public void onCheck(Switch view,boolean check);
 	}
 
 }

File: MaterialDesign/src/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -159,6 +159,7 @@ public void setBackgroundColor(int color) {
 	}
 
 	public void setChecked(boolean check) {
+		invalidate();
 		this.check = check;
 		setPressed(false);
 		changeBackgroundColor(getResources().getColor(

File: MaterialDesign/src/com/gc/materialdesign/views/Switch.java
Patch:
@@ -194,6 +194,7 @@ public void setBackgroundColor(int color) {
 	}
 
 	public void setChecked(boolean check) {
+		invalidate();
 		this.check = check;
 		ball.animateCheck();
 	}

File: MaterialDesign/src/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -159,6 +159,7 @@ public void setBackgroundColor(int color) {
 	}
 
 	public void setChecked(boolean check) {
+		invalidate();
 		this.check = check;
 		setPressed(false);
 		changeBackgroundColor(getResources().getColor(

File: MaterialDesign/src/com/gc/materialdesign/views/Switch.java
Patch:
@@ -194,6 +194,7 @@ public void setBackgroundColor(int color) {
 	}
 
 	public void setChecked(boolean check) {
+		invalidate();
 		this.check = check;
 		ball.animateCheck();
 	}

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFlat.java
Patch:
@@ -79,7 +79,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if(onClickListener != null)
+				if(onClickListener != null&& clickAfterRipple)
 					onClickListener.onClick(this);
 			}
 			invalidate();

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonIcon.java
Patch:
@@ -16,7 +16,7 @@ public class ButtonIcon extends ButtonFloat {
 	public ButtonIcon(Context context, AttributeSet attrs) {
 		super(context, attrs);
 		setBackground(new ColorDrawable(getResources().getColor(android.R.color.transparent)));
-		rippleSpeed = Utils.dpToPx(2, getResources());
+		rippleSpeed = Utils.dpToPx(6, getResources());
 		rippleSize = Utils.dpToPx(5, getResources());
 	}
 	
@@ -43,7 +43,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if(onClickListener != null)
+				if(onClickListener != null && clickAfterRipple)
 					onClickListener.onClick(this);
 			}
 			invalidate();

File: MaterialDesign/src/com/gc/materialdesign/widgets/Dialog.java
Patch:
@@ -165,7 +165,7 @@ public void setOnCancelButtonClickListener(
 			View.OnClickListener onCancelButtonClickListener) {
 		this.onCancelButtonClickListener = onCancelButtonClickListener;
 		if(buttonCancel != null)
-			buttonCancel.setOnClickListener(onAcceptButtonClickListener);
+			buttonCancel.setOnClickListener(onCancelButtonClickListener);
 	}
 	
 	@Override

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFlat.java
Patch:
@@ -79,7 +79,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if(onClickListener != null)
+				if(onClickListener != null&& clickAfterRipple)
 					onClickListener.onClick(this);
 			}
 			invalidate();

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonIcon.java
Patch:
@@ -16,7 +16,7 @@ public class ButtonIcon extends ButtonFloat {
 	public ButtonIcon(Context context, AttributeSet attrs) {
 		super(context, attrs);
 		setBackground(new ColorDrawable(getResources().getColor(android.R.color.transparent)));
-		rippleSpeed = Utils.dpToPx(2, getResources());
+		rippleSpeed = Utils.dpToPx(6, getResources());
 		rippleSize = Utils.dpToPx(5, getResources());
 	}
 	
@@ -43,7 +43,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if(onClickListener != null)
+				if(onClickListener != null && clickAfterRipple)
 					onClickListener.onClick(this);
 			}
 			invalidate();

File: MaterialDesign/src/com/gc/materialdesign/widgets/Dialog.java
Patch:
@@ -165,7 +165,7 @@ public void setOnCancelButtonClickListener(
 			View.OnClickListener onCancelButtonClickListener) {
 		this.onCancelButtonClickListener = onCancelButtonClickListener;
 		if(buttonCancel != null)
-			buttonCancel.setOnClickListener(onAcceptButtonClickListener);
+			buttonCancel.setOnClickListener(onCancelButtonClickListener);
 	}
 	
 	@Override

File: MaterialDesign/src/com/gc/materialdesign/views/ScrollView.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
+import android.view.View;
 import android.view.ViewGroup;
 
 
@@ -11,7 +12,6 @@ public class ScrollView extends android.widget.ScrollView {
 	/*
 	 * This class avoid problems in scrollviews with elements in library
 	 * Use it if you want use a ScrollView in your App
-	 * 当你想要在scrollView中放置有涟漪效果的item时，用这个来代替传统的ScrollView
 	 */
 
 	public ScrollView(Context context, AttributeSet attrs) {

File: MaterialDesign/src/com/gc/materialdesign/views/ScrollView.java
Patch:
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
+import android.view.View;
 import android.view.ViewGroup;
 
 
@@ -11,7 +12,6 @@ public class ScrollView extends android.widget.ScrollView {
 	/*
 	 * This class avoid problems in scrollviews with elements in library
 	 * Use it if you want use a ScrollView in your App
-	 * 当你想要在scrollView中放置有涟漪效果的item时，用这个来代替传统的ScrollView
 	 */
 
 	public ScrollView(Context context, AttributeSet attrs) {

File: MaterialDesign/src/com/gc/materialdesign/views/Button.java
Patch:
@@ -21,7 +21,7 @@ public Button(Context context, AttributeSet attrs) {
 	
 	@Override
 	protected void onInitDefaultValues() {
-		backgroundColor = Color.parseColor("#1E88E5");// 默认的背景色，蓝色
+		backgroundColor = Color.parseColor("#2196f3");// 默认的背景色，蓝色
 		///beforeBackground = backgroundColor;// error
 	}
 	

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFlat.java
Patch:
@@ -46,7 +46,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if (clickAfterRipple == true && onClickListener != null) {
+				if (isEnabled() && clickAfterRipple == true && onClickListener != null) {
 					onClickListener.onClick(this);
 				}
 			}
@@ -58,9 +58,9 @@ protected void onDraw(Canvas canvas) {
 	public void setBackgroundColor(int color) {
 		super.setBackgroundColor(color);
 		if (!settedRippleColor) {
+			// 如果之前没有设置过涟漪颜色，那么就用默认的
 			rippleColor = Color.parseColor("#88DDDDDD");
 		}
-		//textButton.setTextColor(color);
 	}
 	
 	

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonIcon.java
Patch:
@@ -46,7 +46,7 @@ protected void onDraw(Canvas canvas) {
 				x = -1;
 				y = -1;
 				radius = getHeight()/rippleSize;
-				if(clickAfterRipple == true && onClickListener != null)
+				if(isEnabled() && clickAfterRipple == true && onClickListener != null)
 					onClickListener.onClick(this);
 			}
 		}

File: MaterialDesign/src/com/gc/materialdesign/views/LayoutRipple.java
Patch:
@@ -26,7 +26,7 @@ public LayoutRipple(Context context, AttributeSet attrs) {
 	protected void onInitDefaultValues() {
 		minWidth = 20;
 		minHeight = 20;
-		backgroundColor = 0x00ffffff;
+		backgroundColor = 0x00ffffff;// alpha = 0
 		rippleSpeed = 20f;// default speed
 	}
 	

File: MaterialDesign/src/com/gc/materialdesign/views/RippleView.java
Patch:
@@ -57,7 +57,7 @@ protected void setRippleAttributes(AttributeSet attrs) {
 		rippleSpeed = attrs.getAttributeFloatValue(MATERIALDESIGNXML, "rippleSpeed", rippleSpeed);
 		
 		/**
-		 * 设定涟漪的相应时间
+		 * 设定涟漪的响应时间
 		 */
 		clickAfterRipple = attrs.getAttributeBooleanValue(MATERIALDESIGNXML, "clickAfterRipple", clickAfterRipple);
 	}
@@ -125,7 +125,7 @@ public Bitmap makeCircleFromBitmap(Bitmap output) {
 			x = -1;
 			y = -1;
 			radius = getHeight() / rippleSize;
-			if(clickAfterRipple == true && onClickListener != null)
+			if(isEnabled() && clickAfterRipple == true && onClickListener != null)
 				onClickListener.onClick(this);
 		}
 		return output;
@@ -176,7 +176,7 @@ public float getRippleSpeed() {
 	}
 	
 	/**
-	 * 设置什么时候响应点击事件，是手指按上去就相应，还是等涟漪扩散完再响应
+	 * 设置什么时候响应点击事件，是手指按上去就响应，还是等涟漪扩散完再响应
 	 * @param clickAfterRipple
 	 */
 	public void setClickAfterRipple(boolean clickAfterRipple) {

File: MaterialDesign/src/com/gc/materialdesign/widgets/ColorSelector.java
Patch:
@@ -121,6 +121,7 @@ public interface OnColorSelectedListener{
 		
 	@Override
 	public void dismiss() {
+		
 		Animation anim = AnimationUtils.loadAnimation(context, R.anim.dialog_main_hide_amination);
 		
 		anim.setAnimationListener(new AnimationListener() {

File: MaterialDesign/src/com/gc/materialdesign/widgets/ColorSelector.java
Patch:
@@ -121,6 +121,7 @@ public interface OnColorSelectedListener{
 		
 	@Override
 	public void dismiss() {
+		
 		Animation anim = AnimationUtils.loadAnimation(context, R.anim.dialog_main_hide_amination);
 		
 		anim.setAnimationListener(new AnimationListener() {

File: MaterialDesign/src/com/gc/materialdesign/views/ScrollView.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
-import android.view.View;
 import android.view.ViewGroup;
 
 
@@ -12,6 +11,7 @@ public class ScrollView extends android.widget.ScrollView {
 	/*
 	 * This class avoid problems in scrollviews with elements in library
 	 * Use it if you want use a ScrollView in your App
+	 * 当你想要在scrollView中放置有涟漪效果的item时，用这个来代替传统的ScrollView
 	 */
 
 	public ScrollView(Context context, AttributeSet attrs) {

File: MaterialDesign/src/com/gc/materialdesign/widgets/ColorSelector.java
Patch:
@@ -91,9 +91,9 @@ public void run() {
 		int g = (this.color >> 8) & 0xFF;
 		int b = (this.color >> 0) & 0xFF;
 		
-		red.setValue(r);
-		green.setValue(g);
-		blue.setValue(b);
+		red.setValue(r, true);
+		green.setValue(g, true);
+		blue.setValue(b, true);
 		
 		red.setOnValueChangedListener(this);
 		green.setOnValueChangedListener(this);

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonIcon.java
Patch:
@@ -18,6 +18,7 @@ protected void onInitDefaultValues() {
 		super.onInitDefaultValues();
 		rippleSpeed = 2;
 		rippleSize = 5;
+		backgroundResId = -1;
 		// Background shape
 		setBackgroundDrawable(new ColorDrawable(getResources().getColor(android.R.color.transparent)));
 	}

File: MaterialDesign/src/com/gc/materialdesign/views/Button.java
Patch:
@@ -30,7 +30,6 @@ public Button(Context context, AttributeSet attrs) {
 	
 	protected void onInitDefaultValues() {
 		backgroundColor = Color.parseColor("#1E88E5");// 默认的背景色，蓝色
-		//backgroundColor = Color.parseColor("#FF88E5");// 默认的背景色，蓝色
 		if (!isInEditMode()) {
 			/**
 			 * 默认的资源，这里因为没有初始化，所以需要在子类中初始化这个资源id。
@@ -138,15 +137,15 @@ public void setOnClickListener(OnClickListener l) {
 	}
 
 	// Set color of background
+	@Override
 	public void setBackgroundColor(int color) {
 		backgroundColor = color;
 		if (isEnabled())
 			beforeBackground = backgroundColor;
 		try {
 			LayerDrawable layer = (LayerDrawable) getBackground();
 			// 每个按钮的框架都是由drawable中的xml文件制定的，xml文件中都有一个item的id叫：shape_bacground
-			GradientDrawable shape = (GradientDrawable) layer
-					.findDrawableByLayerId(R.id.shape_bacground);
+			GradientDrawable shape = (GradientDrawable) layer.findDrawableByLayerId(R.id.shape_bacground);
 			/**
 			 * 给这个图片设置背景色，因为图片的主体是透明的所以可以直接显示背景色
 			 * 效果就是一个透明但有阴影的框架下有了背景色，这样的方式可以方便的设置不同颜色的按钮，让按钮看起来还是浑然一体

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFlat.java
Patch:
@@ -5,6 +5,7 @@
 import android.graphics.Color;
 import android.graphics.Paint;
 import android.util.AttributeSet;
+import android.widget.TextView;
 
 import com.gc.materialdesign.R;
 
@@ -16,6 +17,7 @@ public ButtonFlat(Context context, AttributeSet attrs) {
 	
 	@Override
 	protected void onInitDefaultValues(){
+		textButton = new TextView(getContext());
 		minHeight = 36;
 		minWidth = 88;
 		rippleSpeed = 6f;
@@ -51,7 +53,7 @@ protected void onDraw(Canvas canvas) {
 	@Override
 	@Deprecated
 	public void setBackgroundColor(int color) {
-		//无效方法
+		textButton.setTextColor(color);
 	}
 	
 	

File: MaterialDesign/src/com/gc/materialdesign/views/Card.java
Patch:
@@ -14,21 +14,21 @@ public class Card extends CustomView {
 	TextView textButton;
 	
 	int paddingTop,paddingBottom, paddingLeft, paddingRight;
-	int backgroundColor = Color.parseColor("#FFFFFF");
 	
 	public Card(Context context, AttributeSet attrs) {
 		super(context, attrs);
+		backgroundColor = Color.parseColor("#FFFFFF");
 		setAttributes(attrs);
 	}
 	
 	
 	// Set atributtes of XML to View
 	protected void setAttributes(AttributeSet attrs){
-		setBackgroundColor(this.backgroundColor);
-		setBackgroundAttributes(attrs);
 		if(!isInEditMode()) {
 			setBackgroundResource(R.drawable.background_button_rectangle);
 		}
+		setBackgroundColor(this.backgroundColor);
+		setBackgroundAttributes(attrs);
 	}
 	
 	// Set color of background

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarCircularIndetermininate.java
Patch:
@@ -22,7 +22,7 @@ public ProgressBarCircularIndetermininate(Context context, AttributeSet attrs) {
 	
 	private void setDefaultValues() {
 		minWidth = 32;
-		minHeight = 3;
+		minHeight = 32;
 		backgroundColor = Color.parseColor("#1E88E5");
 	}
 	

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarIndeterminate.java
Patch:
@@ -42,12 +42,10 @@ public void onAnimationEnd(Animator arg0) {
 						if(cont == 3 || cont == 1) suma *=-1;
 						
 					}
-					
 					public void onAnimationStart(Animator arg0) {}
 					public void onAnimationRepeat(Animator arg0) {}
 					public void onAnimationCancel(Animator arg0) {}
 				});
-						
 				anim2.start();
 			}
 		});

File: MaterialDesign/src/com/gc/materialdesign/widgets/ColorSelector.java
Patch:
@@ -91,9 +91,9 @@ public void run() {
 		int g = (this.color >> 8) & 0xFF;
 		int b = (this.color >> 0) & 0xFF;
 		
-		red.setValue(r);
-		green.setValue(g);
-		blue.setValue(b);
+		red.setValue(r, true);
+		green.setValue(g, true);
+		blue.setValue(b, true);
 		
 		red.setOnValueChangedListener(this);
 		green.setOnValueChangedListener(this);

File: MaterialDesignDemo/src/com/gc/materialdesigndemo/ui/ButtonsActivity.java
Patch:
@@ -34,6 +34,7 @@ protected void onCreate(Bundle savedInstanceState) {
         findViewById(R.id.buttonflat).setBackgroundColor(color);
         findViewById(R.id.button).setBackgroundColor(color);
         findViewById(R.id.buttonFloatSmall).setBackgroundColor(color);
+        findViewById(R.id.buttonIcon).setBackgroundColor(color);
         findViewById(R.id.buttonFloat).setBackgroundColor(color);
     }  
     

File: MaterialDesign/src/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -42,6 +42,7 @@ protected void setAttributes(AttributeSet attrs) {
 		} else {
 			setBackgroundResource(android.R.drawable.checkbox_on_background);
 		}
+		setViewSize();
 		setBackgroundAttributes(attrs);
 
 		boolean check = attrs.getAttributeBooleanValue(MATERIALDESIGNXML, "check", false);

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarIndeterminate.java
Patch:
@@ -20,7 +20,6 @@ public ProgressBarIndeterminate(Context context, AttributeSet attrs) {
 			@Override
 			public void run() {
 				// Make progress animation
-				
 				setProgress(60);
 				Animation anim = AnimationUtils.loadAnimation(getContext(), R.anim.progress_indeterminate_animation);
 				progressView.startAnimation(anim);

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarIndeterminateDeterminate.java
Patch:
@@ -13,8 +13,6 @@ public class ProgressBarIndeterminateDeterminate extends ProgressBarDetermininat
 	boolean firstProgress = true;
 	boolean runAnimation = true;
 	ObjectAnimator animation;
-	
-	
 
 	public ProgressBarIndeterminateDeterminate(Context context, AttributeSet attrs) {
 		super(context, attrs);

File: MaterialDesign/src/com/gc/materialdesign/views/ScrollView.java
Patch:
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
-import android.view.View;
 import android.view.ViewGroup;
 
 
@@ -12,6 +11,7 @@ public class ScrollView extends android.widget.ScrollView {
 	/*
 	 * This class avoid problems in scrollviews with elements in library
 	 * Use it if you want use a ScrollView in your App
+	 * 当你想要在scrollView中放置有涟漪效果的item时，用这个来代替传统的ScrollView
 	 */
 
 	public ScrollView(Context context, AttributeSet attrs) {

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/ButtonFloatSmall.java
Patch:
@@ -27,7 +27,7 @@ protected void setDefaultProperties(){
 		setMinimumWidth(Utils.dpToPx(sizeRadius*2, getResources()));
 		// Background shape
 		setBackgroundResource(R.drawable.background_button_float);
-		setBackgroundColor(backgroundColor);
+//		setBackgroundColor(backgroundColor);
 	}
 
 }

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/ProgressBarCircularIndetermininate.java
Patch:
@@ -39,9 +39,9 @@ protected void setAttributes(AttributeSet attrs){
 				setBackgroundColor(getResources().getColor(bacgroundColor));
 			}else{
 				// Color by hexadecimal
-				String background = attrs.getAttributeValue(ANDROIDXML,"background");
-				if(background != null)
-					setBackgroundColor(Color.parseColor(background));
+				int background = attrs.getAttributeIntValue(ANDROIDXML, "background", -1);
+				if (background != -1)
+					setBackgroundColor(background);
 				else
 					setBackgroundColor(Color.parseColor("#1E88E5"));
 			}

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFloatSmall.java
Patch:
@@ -27,7 +27,7 @@ protected void setDefaultProperties(){
 		setMinimumWidth(Utils.dpToPx(sizeRadius*2, getResources()));
 		// Background shape
 		setBackgroundResource(R.drawable.background_button_float);
-		setBackgroundColor(backgroundColor);
+//		setBackgroundColor(backgroundColor);
 	}
 
 }

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarCircularIndetermininate.java
Patch:
@@ -39,9 +39,9 @@ protected void setAttributes(AttributeSet attrs){
 				setBackgroundColor(getResources().getColor(bacgroundColor));
 			}else{
 				// Color by hexadecimal
-				String background = attrs.getAttributeValue(ANDROIDXML,"background");
-				if(background != null)
-					setBackgroundColor(Color.parseColor(background));
+				int background = attrs.getAttributeIntValue(ANDROIDXML, "background", -1);
+				if (background != -1)
+					setBackgroundColor(background);
 				else
 					setBackgroundColor(Color.parseColor("#1E88E5"));
 			}

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarDetermininate.java
Patch:
@@ -45,9 +45,9 @@ protected void setAttributes(AttributeSet attrs){
 				setBackgroundColor(getResources().getColor(bacgroundColor));
 			}else{
 				// Color by hexadecimal
-				String background = attrs.getAttributeValue(ANDROIDXML,"background");
-				if(background != null)
-					setBackgroundColor(Color.parseColor(background));
+				int background = attrs.getAttributeIntValue(ANDROIDXML, "background", -1);
+				if (background != -1)
+					setBackgroundColor(background);
 				else
 					setBackgroundColor(Color.parseColor("#1E88E5"));
 			}

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/widgets/SnackBar.java
Patch:
@@ -26,7 +26,7 @@ public class SnackBar extends Dialog{
 	View view;
 	ButtonFlat button;
 	
-	int backgroundSnackBar = Color.parseColor("#333");
+	int backgroundSnackBar = Color.parseColor("#333333");
 	int backgroundButton = Color.parseColor("#1E88E5");
 	
 	OnHideListener onHideListener;

File: MaterialDesign/src/com/gc/materialdesign/widgets/SnackBar.java
Patch:
@@ -26,7 +26,7 @@ public class SnackBar extends Dialog{
 	View view;
 	ButtonFlat button;
 	
-	int backgroundSnackBar = Color.parseColor("#333");
+	int backgroundSnackBar = Color.parseColor("#333333");
 	int backgroundButton = Color.parseColor("#1E88E5");
 	
 	OnHideListener onHideListener;

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/Slider.java
Patch:
@@ -152,8 +152,7 @@ public boolean onTouchEvent(MotionEvent event) {
 				if (numberIndicator != null
 						&& numberIndicator.isShowing() == false)
 					numberIndicator.show();
-				if ((event.getX() <= getWidth() && event.getX() >= 0)
-						&& (event.getY() <= getHeight() && event.getY() >= 0)) {
+				if ((event.getX() <= getWidth() && event.getX() >= 0)) {
 					press = true;
 					// calculate value
 					int newValue = 0;

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/Switch.java
Patch:
@@ -99,8 +99,7 @@ public boolean onTouchEvent(MotionEvent event) {
 				}
 				ViewHelper.setX(ball, x);
 				ball.changeBackground();
-				if ((event.getX() <= getWidth() && event.getX() >= 0)
-						&& (event.getY() <= getHeight() && event.getY() >= 0)) {
+				if ((event.getX() <= getWidth() && event.getX() >= 0)) {
 					isLastTouch = false;
 					press = false;
 				}

File: MaterialDesign/src/com/gc/materialdesign/views/Slider.java
Patch:
@@ -152,8 +152,7 @@ public boolean onTouchEvent(MotionEvent event) {
 				if (numberIndicator != null
 						&& numberIndicator.isShowing() == false)
 					numberIndicator.show();
-				if ((event.getX() <= getWidth() && event.getX() >= 0)
-						&& (event.getY() <= getHeight() && event.getY() >= 0)) {
+				if ((event.getX() <= getWidth() && event.getX() >= 0)) {
 					press = true;
 					// calculate value
 					int newValue = 0;

File: MaterialDesign/src/com/gc/materialdesign/views/Switch.java
Patch:
@@ -112,8 +112,7 @@ public boolean onTouchEvent(MotionEvent event) {
 					if (onCheckListener != null)
 						onCheckListener.onCheck(check);
 				}
-				if ((event.getX() <= getWidth() && event.getX() >= 0)
-						&& (event.getY() <= getHeight() && event.getY() >= 0)) {
+				if ((event.getX() <= getWidth() && event.getX() >= 0)) {
 					ball.animateCheck();
 				}
 			}

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/ButtonRectangle.java
Patch:
@@ -33,7 +33,6 @@ protected void setDefaultProperties(){
 		super.minHeight = 36;
 		super.background = R.drawable.background_button_rectangle;
 		super.setDefaultProperties();
-		rippleSpeed = Utils.dpToPx(3, getResources());
 	}
 	
 	
@@ -97,6 +96,9 @@ protected void setAttributes(AttributeSet attrs){
 //					textView.setLayoutParams(params);
 			
 		}
+		
+		rippleSpeed = attrs.getAttributeFloatValue(MATERIALDESIGNXML,
+				"rippleSpeed", Utils.dpToPx(6, getResources()));
 	}
 	
 //	/**

File: AndroidStudio/MaterialDesign/app/src/main/java/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -154,6 +154,9 @@ public void setBackgroundColor(int color) {
 
 	public void setChecked(boolean check) {
 		this.check = check;
+		setPressed(false);
+		changeBackgroundColor(getResources().getColor(
+				android.R.color.transparent));
 		if (check) {
 			step = 0;
 		}

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonRectangle.java
Patch:
@@ -33,7 +33,6 @@ protected void setDefaultProperties(){
 		super.minHeight = 36;
 		super.background = R.drawable.background_button_rectangle;
 		super.setDefaultProperties();
-		rippleSpeed = Utils.dpToPx(3, getResources());
 	}
 	
 	
@@ -97,6 +96,9 @@ protected void setAttributes(AttributeSet attrs){
 //					textView.setLayoutParams(params);
 			
 		}
+		
+		rippleSpeed = attrs.getAttributeFloatValue(MATERIALDESIGNXML,
+				"rippleSpeed", Utils.dpToPx(6, getResources()));
 	}
 	
 //	/**

File: MaterialDesign/src/com/gc/materialdesign/views/CheckBox.java
Patch:
@@ -154,6 +154,9 @@ public void setBackgroundColor(int color) {
 
 	public void setChecked(boolean check) {
 		this.check = check;
+		setPressed(false);
+		changeBackgroundColor(getResources().getColor(
+				android.R.color.transparent));
 		if (check) {
 			step = 0;
 		}

File: MaterialDesign/src/com/gc/materialdesign/views/Card.java
Patch:
@@ -59,6 +59,8 @@ protected void setAttributes(AttributeSet attrs){
 	// Set color of background
 	public void setBackgroundColor(int color){
 		this.backgroundColor = color;
+		if(isEnabled())
+			beforeBackground = backgroundColor;
 		LayerDrawable layer = (LayerDrawable) getBackground();
 		GradientDrawable shape =  (GradientDrawable) layer.findDrawableByLayerId(R.id.shape_bacground);
 		shape.setColor(backgroundColor);

File: MaterialDesign/src/com/gc/materialdesign/views/ProgressBarCircularIndetermininate.java
Patch:
@@ -163,6 +163,8 @@ private void drawSecondAnimation(Canvas canvas){
 	// Set color of background
 	public void setBackgroundColor(int color){
 		super.setBackgroundColor(getResources().getColor(android.R.color.transparent));
+		if(isEnabled())
+			beforeBackground = backgroundColor;
 		this.backgroundColor = color;
 	}
 

File: MaterialDesign/src/com/gc/materialdesign/views/ButtonFloat.java
Patch:
@@ -76,7 +76,7 @@ protected void setAttributes(AttributeSet attrs){
 				setBackgroundColor(Color.parseColor(background));
 		}
 		// Icon of button
-		int iconResource = attrs.getAttributeResourceValue(MATERIALDESIGNXML,"icon",-1);
+		int iconResource = attrs.getAttributeResourceValue(MATERIALDESIGNXML,"iconFloat",-1);
 		if(iconResource != -1)
 			drawableIcon = getResources().getDrawable(iconResource);
 		boolean animate = attrs.getAttributeBooleanValue(MATERIALDESIGNXML,"animate", false);

File: MaterialDesign/src/com/gc/materialdesign/widgets/Dialog.java
Patch:
@@ -37,7 +37,10 @@ protected void onCreate(Bundle savedInstanceState) {
 	    setContentView(R.layout.dialog);
 	    
 	    this.titleTextView = (TextView) findViewById(R.id.title);
+	    setTitle(title);
+	    
 	    this.messageTextView = (TextView) findViewById(R.id.message);
+	    setMessage(message);
 	    
 	    this.buttonAccept = (ButtonFlat) findViewById(R.id.button_accept);
 	    buttonAccept.setOnClickListener(new View.OnClickListener() {

