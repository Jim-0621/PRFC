File: magicasakura/src/main/java/com/bilibili/magicasakura/widgets/AppCompatForegroundHelper.java
Patch:
@@ -56,7 +56,7 @@ public AppCompatForegroundHelper(View view, TintManager tintManager) {
     void loadFromAttribute(AttributeSet attrs, int defStyleAttr) {
         TypedArray array = mView.getContext().obtainStyledAttributes(attrs, ATTR, defStyleAttr, 0);
         if (array.hasValue(1)) {
-            mForegroundResId = array.getResourceId(1, 0);
+            mForegroundTintResId = array.getResourceId(1, 0);
             if (array.hasValue(2)) {
                 setSupportForegroundTintMode(DrawableUtils.parseTintMode(array.getInt(2, 0), null));
             }

File: magicasakura/src/main/java/com/bilibili/magicasakura/widgets/TintProgressDialog.java
Patch:
@@ -134,13 +134,13 @@ protected void onCreate(Bundle savedInstanceState) {
             mViewUpdateHandler = new Handler(this);
 
             View view = inflater.inflate(R.layout.dialog_alert_progress, null);
-            mProgress = (ProgressBar) view.findViewById(android.R.id.progress);
+            mProgress = (ProgressBar) view.findViewById(R.id.progress);
             mProgressNumber = (TextView) view.findViewById(R.id.progress_number);
             mProgressPercent = (TextView) view.findViewById(R.id.progress_percent);
             setView(view);
         } else {
             View view = inflater.inflate(R.layout.dialog_progress, null);
-            mProgress = (ProgressBar) view.findViewById(android.R.id.progress);
+            mProgress = (ProgressBar) view.findViewById(R.id.progress);
             mMessageView = (TextView) view.findViewById(R.id.message);
             setView(view);
         }

File: magicasakura/src/main/java/com/bilibili/magicasakura/utils/TintManager.java
Patch:
@@ -168,7 +168,7 @@ private Drawable getCacheDrawable(@NonNull final Context context, final int key)
                 if (cs != null) {
                     printLog("[getCacheDrawable] Get drawable from cache: " +
                             context.getResources().getResourceName(key));
-                    return cs.newDrawable(context.getResources());
+                    return cs.newDrawable();
                 } else {
                     mCacheDrawables.delete(key);
                 }

File: magicasakura/src/main/java/com/bilibili/magicasakura/utils/ColorStateListUtils.java
Patch:
@@ -108,7 +108,8 @@ static ColorStateList inflateColorStateList(Context context, XmlPullParser parse
             }
 
             TypedArray a1 = context.obtainStyledAttributes(attrs, new int[]{android.R.attr.color});
-            final int baseColor = com.bilibili.magicasakura.utils.ThemeUtils.replaceColorById(context, a1.getResourceId(0, Color.MAGENTA));
+            final int value = a1.getResourceId(0, Color.MAGENTA);
+            final int baseColor = value == Color.MAGENTA ? Color.MAGENTA : ThemeUtils.replaceColorById(context, value);
             a1.recycle();
             TypedArray a2 = context.obtainStyledAttributes(attrs, new int[]{android.R.attr.alpha});
             final float alphaMod = a2.getFloat(0, 1.0f);

File: magicasakura/src/main/java/com/bilibili/magicasakura/utils/ColorStateListUtils.java
Patch:
@@ -47,6 +47,9 @@ static ColorStateList createColorStateList(Context context, int resId) {
         ColorStateList cl = null;
         if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT
                 && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
+            //Assume that "color/theme_color_primary" and "color/theme_color_profile" have the same color value;
+            //However, "color/theme_color_primary" need to replace by themeId, "color/theme_color_profile" not.
+            //If use value.data may cause "color/theme_color_profile" still been replaced by themeId
             cl = ColorStateList.valueOf(ThemeUtils.replaceColorById(context, value.resourceId));
         } else {
             final String file = value.string.toString();

File: magicasakura/src/main/java/com/bilibili/magicasakura/widgets/AppCompatImageHelper.java
Patch:
@@ -150,6 +150,9 @@ private boolean applySupportImageTint() {
                 setImageDrawable(null);
             }
             setImageDrawable(image);
+
+            //Because drawable's pointer is not changing, need invoke invalidate to draw again when tint is changing;
+            mView.invalidate();
             return true;
         }
         return false;

File: magicasakura/src/main/java/com/bilibili/magicasakura/utils/ColorStateListUtils.java
Patch:
@@ -31,7 +31,7 @@ static ColorStateList createColorStateList(Context context, int resId) {
         ColorStateList cl = null;
         if (value.type >= TypedValue.TYPE_FIRST_COLOR_INT
                 && value.type <= TypedValue.TYPE_LAST_COLOR_INT) {
-            cl = ColorStateList.valueOf(com.bilibili.magicasakura.utils.ThemeUtils.replaceColor(context, value.data));
+            cl = ColorStateList.valueOf(ThemeUtils.replaceColorById(context, value.resourceId));
         } else {
             final String file = value.string.toString();
             try {

