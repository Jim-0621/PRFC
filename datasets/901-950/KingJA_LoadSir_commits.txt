File: app/src/main/java/sample/kingja/loadsir/callback/LoadingCallback.java
Patch:
@@ -1,5 +1,8 @@
 package sample.kingja.loadsir.callback;
 
+import android.content.Context;
+import android.view.View;
+
 import com.kingja.loadsir.callback.Callback;
 
 import sample.kingja.loadsir.R;

File: app/src/main/java/sample/kingja/loadsir/callback/TimeoutCallback.java
Patch:
@@ -27,4 +27,5 @@ protected boolean onReloadEvent(Context context, View view) {
         Toast.makeText(context.getApplicationContext(),"Connecting to the network again!",Toast.LENGTH_SHORT).show();
         return false;
     }
+
 }

File: loadsir/src/main/java/com/kingja/loadsir/core/LoadService.java
Patch:
@@ -25,12 +25,12 @@ public class LoadService<T> {
         this.convertor = convertor;
         Context context = targetContext.getContext();
         View oldContent = targetContext.getOldContent();
+        ViewGroup.LayoutParams oldLayoutParams = oldContent.getLayoutParams();
         loadLayout = new LoadLayout(context, onReloadListener);
         loadLayout.setupSuccessLayout(new SuccessCallback(oldContent, context,
                 onReloadListener));
         if (targetContext.getParentView() != null) {
-            targetContext.getParentView().addView(loadLayout, targetContext.getChildIndex(), oldContent
-                    .getLayoutParams());
+            targetContext.getParentView().addView(loadLayout, targetContext.getChildIndex(), oldLayoutParams);
         }
         initCallback(builder);
     }

File: loadsir/src/main/java/com/kingja/loadsir/core/LoadService.java
Patch:
@@ -5,9 +5,7 @@
 import android.view.ViewGroup;
 import android.widget.LinearLayout;
 
-import com.kingja.loadsir.R;
 import com.kingja.loadsir.callback.Callback;
-import com.kingja.loadsir.callback.ProgressCallback;
 import com.kingja.loadsir.callback.SuccessCallback;
 
 import java.util.List;

File: app/src/main/java/sample/kingja/loadsir/callback/AnimateCallback.java
Patch:
@@ -1,7 +1,6 @@
 package sample.kingja.loadsir.callback;
 
 import android.content.Context;
-import android.util.Log;
 import android.view.View;
 import android.view.animation.Animation;
 import android.view.animation.LinearInterpolator;
@@ -12,8 +11,6 @@
 
 import sample.kingja.loadsir.R;
 
-import static android.content.ContentValues.TAG;
-
 /**
  * Description:TODO
  * Create Time:2017/9/3 10:22

File: app/src/main/java/sample/kingja/loadsir/callback/AnimateCallback.java
Patch:
@@ -37,7 +37,6 @@ protected void onViewCreate(Context context, View view) {
 
     @Override
     public void onAttach(Context context, View view) {
-        super.onAttach(context, view);
         this.context = context;
         animateView = view.findViewById(R.id.view_animate);
         Animation animation = new RotateAnimation(0, 359, Animation.RELATIVE_TO_SELF,

File: app/src/main/java/sample/kingja/loadsir/target/KeepTitleActivity.java
Patch:
@@ -24,6 +24,4 @@ protected void onCreate(Bundle savedInstanceState) {
             getSupportActionBar().hide();
         }
     }
-
-
 }

File: app/src/main/java/sample/kingja/loadsir/MainActivity.java
Patch:
@@ -8,7 +8,7 @@
 import sample.kingja.loadsir.target.AnimateActivity;
 import sample.kingja.loadsir.target.BestPracticesActivity;
 import sample.kingja.loadsir.target.DefaultCallbackActivity;
-import sample.kingja.loadsir.target.KeepTitleActivity;
+import sample.kingja.loadsir.target.KeepTitleFragmentActivity;
 import sample.kingja.loadsir.target.MultiFragmentActivity;
 import sample.kingja.loadsir.target.FragmentSingleActivity;
 import sample.kingja.loadsir.target.NormalActivity;
@@ -69,7 +69,7 @@ public void animatCallback(View view) {
     }
 
     public void titleBarActivity(View view) {
-        startActivity(new Intent(this, KeepTitleActivity.class));
+        startActivity(new Intent(this, KeepTitleFragmentActivity.class));
     }
 
     public void bestPractices(View view) {

File: app/src/main/java/sample/kingja/loadsir/target/DefaultCallbackActivity.java
Patch:
@@ -32,7 +32,7 @@ protected void onCreate(@Nullable Bundle savedInstanceState) {
         setContentView(R.layout.activity_content);
 
         ProgressCallback loadingCallback = new ProgressCallback.Builder()
-                .setTitle("Loading")
+                .setTitle("Loading", R.style.Hint_Title)
                 .build();
 
         HintCallback hintCallback = new HintCallback.Builder()

File: app/src/main/java/sample/kingja/loadsir/target/KeepTitleActivity.java
Patch:
@@ -19,11 +19,10 @@ public class KeepTitleActivity extends AppCompatActivity {
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         requestWindowFeature(Window.FEATURE_NO_TITLE);
-        setContentView(R.layout.activity_fragment);
+        setContentView(R.layout.activity_content);
         if (getSupportActionBar() != null) {
             getSupportActionBar().hide();
         }
-        getSupportFragmentManager().beginTransaction().add(R.id.fl_content, new KeepTitleFragment()).commit();
     }
 
 

File: app/src/main/java/sample/kingja/loadsir/target/NormalActivity.java
Patch:
@@ -29,7 +29,6 @@
 
 public class NormalActivity extends AppCompatActivity {
 
-
     private LoadService loadService;
 
     @Override

File: loadsir/src/main/java/com/kingja/loadsir/core/LoadService.java
Patch:
@@ -5,7 +5,9 @@
 import android.view.ViewGroup;
 import android.widget.LinearLayout;
 
+import com.kingja.loadsir.R;
 import com.kingja.loadsir.callback.Callback;
+import com.kingja.loadsir.callback.ProgressCallback;
 import com.kingja.loadsir.callback.SuccessCallback;
 
 import java.util.List;

File: app/src/main/java/sample/kingja/loadsir/callback/CustomCallback.java
Patch:
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.view.View;
-import android.widget.ImageView;
 import android.widget.Toast;
 
 import com.kingja.loadsir.callback.Callback;

File: loadsir/src/main/java/com/kingja/loadsir/callback/HintCallback.java
Patch:
@@ -32,7 +32,6 @@ public HintCallback(Builder builder) {
         this.imgResId = builder.imgResId;
         this.subTitleStyleRes = builder.subTitleStyleRes;
         this.titleStyleRes = builder.titleStyleRes;
-
     }
 
     @Override

File: app/src/main/java/sample/kingja/loadsir/callback/CustomCallback.java
Patch:
@@ -23,7 +23,7 @@ protected int onCreateView() {
     }
 
     @Override
-    protected boolean onRetry(final Context context, View view) {
+    protected boolean onReloadEvent(final Context context, View view) {
         Toast.makeText(context.getApplicationContext(), "Hello buddy, how r u! :p", Toast.LENGTH_SHORT).show();
         (view.findViewById(R.id.iv_gift)).setOnClickListener(new View.OnClickListener() {
             @Override

File: app/src/main/java/sample/kingja/loadsir/target/DefaultCallbackActivity.java
Patch:
@@ -24,7 +24,6 @@
 
 public class DefaultCallbackActivity extends AppCompatActivity {
 
-
     private LoadService loadService;
 
     @Override

File: loadsir/src/main/java/com/kingja/loadsir/callback/Callback.java
Patch:
@@ -54,7 +54,7 @@ public View getRootView() {
         rootView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (onRetry(context, rootView)) {
+                if (onReloadEvent(context, rootView)) {
                     return;
                 }
                 if (onReloadListener != null) {

File: loadsir/src/main/java/com/kingja/loadsir/callback/LoadSirHintCallback.java
Patch:
@@ -17,7 +17,7 @@
  * Author:KingJA
  * Email:kingjavip@gmail.com
  */
-public class LoadSirHintCallback extends Callback implements Serializable {
+public class LoadSirHintCallback extends Callback{
 
     private String title;
     private String subTitle;
@@ -34,7 +34,7 @@ public LoadSirHintCallback(String title, String subTitle, int imgResId, String r
         this.onRetryListener = onRetryListener;
     }
 
-    public interface OnRetryListener extends Serializable {
+    public interface OnRetryListener  {
         void onRetry();
     }
 
@@ -68,7 +68,7 @@ protected void onViewCreate(Context context, View view) {
         }
     }
 
-    public static class Builder implements Serializable {
+    public static class Builder {
         private String title;
         private String subTitle;
         private int imgResId = -1;

File: app/src/main/java/sample/kingja/loadsir/base/BaseFragment.java
Patch:
@@ -8,7 +8,6 @@
 import android.view.ViewGroup;
 
 import com.kingja.loadsir.callback.Callback;
-
 import com.kingja.loadsir.core.LoadService;
 import com.kingja.loadsir.core.LoadSir;
 

File: app/src/main/java/sample/kingja/loadsir/target/AnimateActivity.java
Patch:
@@ -7,14 +7,12 @@
 import android.view.View;
 
 import com.kingja.loadsir.callback.Callback;
-import com.kingja.loadsir.callback.SuccessCallback;
 import com.kingja.loadsir.core.LoadService;
 import com.kingja.loadsir.core.LoadSir;
 
 import sample.kingja.loadsir.PostUtil;
 import sample.kingja.loadsir.R;
 import sample.kingja.loadsir.callback.AnimateCallback;
-import sample.kingja.loadsir.callback.CustomCallback;
 import sample.kingja.loadsir.callback.EmptyCallback;
 import sample.kingja.loadsir.callback.LoadingCallback;
 

File: app/src/main/java/sample/kingja/loadsir/target/NormalActivity.java
Patch:
@@ -8,11 +8,10 @@
 import android.view.View;
 import android.widget.TextView;
 
-import com.kingja.loadsir.callback.Callback;
-
 import sample.kingja.loadsir.callback.EmptyCallback;
 import sample.kingja.loadsir.callback.LoadingCallback;
 
+import com.kingja.loadsir.callback.Callback;
 import com.kingja.loadsir.core.LoadService;
 import com.kingja.loadsir.core.LoadSir;
 import com.kingja.loadsir.core.Transport;

File: app/src/main/java/sample/kingja/loadsir/target/ViewTargetActivity.java
Patch:
@@ -6,10 +6,9 @@
 import android.view.View;
 import android.widget.ImageView;
 
-import com.kingja.loadsir.callback.Callback;
-
 import sample.kingja.loadsir.callback.LoadingCallback;
 
+import com.kingja.loadsir.callback.Callback;
 import com.kingja.loadsir.core.LoadService;
 import com.kingja.loadsir.core.LoadSir;
 

File: loadsir/src/main/java/com/kingja/loadsir/core/LoadService.java
Patch:
@@ -20,8 +20,8 @@ public class LoadService<T> {
     private LoadLayout loadLayout;
     private Convertor<T> convertor;
 
-    LoadService(Convertor<T> convertor, TargetContext targetContext, Callback
-            .OnReloadListener onReloadListener, LoadSir.Builder builder) {
+    LoadService(Convertor<T> convertor, TargetContext targetContext, Callback.OnReloadListener onReloadListener,
+                LoadSir.Builder builder) {
         this.convertor = convertor;
         Context context = targetContext.getContext();
         View oldContent = targetContext.getOldContent();

