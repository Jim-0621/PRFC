File: java/Chapter 4/Question4_1/QuestionImproved.java
Patch:
@@ -41,7 +41,7 @@ public static void main(String[] args) {
 		
 		System.out.println("Is balanced? " + isBalanced(root));
 		
-		root.insertInOrder(-1); // Add 4 to make it unbalanced
+		root.insertInOrder(4); // Add 4 to make it unbalanced
 
 		System.out.println("Is balanced? " + isBalanced(root));
 	}

File: java/Chapter 10/Question10_4/BitSet.java
Patch:
@@ -4,7 +4,7 @@ class BitSet {
 	int[] bitset;
 	
 	public BitSet(int size) {
-		bitset = new int[size >> 5]; // divide by 32
+		bitset = new int[(size >> 5) + 1]; // divide by 32
 	}
 
 	boolean get(int pos) {

File: java/Chapter 18/Question18_12/QuestionB.java
Patch:
@@ -28,7 +28,7 @@ public static int getMaxMatrix(int[][] original) {
 	private static int[][] precomputeMatrix(int[][] matrix) {
 		int[][] sumMatrix = new int[matrix.length][matrix[0].length];
 		for (int i = 0; i < matrix.length; i++) {
-			for (int j = 0; j < matrix.length; j++) {
+			for (int j = 0; j < matrix[0].length; j++) {
 				if (i == 0 && j == 0) { // first cell
 					sumMatrix[i][j] = matrix[i][j];
 				} else if (j == 0) { // cell in first column

File: java/Chapter 4/Question4_1/QuestionImproved.java
Patch:
@@ -41,7 +41,7 @@ public static void main(String[] args) {
 		
 		System.out.println("Is balanced? " + isBalanced(root));
 		
-		root.insertInOrder(-1); // Add 4 to make it unbalanced
+		root.insertInOrder(4); // Add 4 to make it unbalanced
 
 		System.out.println("Is balanced? " + isBalanced(root));
 	}

