File: src/main/java/org/springframework/samples/mvc/config/RootConfig.java
Patch:
@@ -13,7 +13,7 @@
 public class RootConfig {
 
 	// CSRF protection. Here we only include the CsrfFilter instead of all of Spring Security.
-	// See http://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#csrf
+	// See https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#csrf
 	// for more information on Spring Security's CSRF protection
 
 	@Bean

File: src/main/java/org/springframework/samples/mvc/async/CallableController.java
Patch:
@@ -8,7 +8,7 @@
 import org.springframework.web.bind.annotation.RequestMapping;
 import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
-import org.springframework.web.context.request.async.AsyncTask;
+import org.springframework.web.context.request.async.MvcAsyncTask;
 
 @Controller
 @RequestMapping("/async/callable")
@@ -61,7 +61,7 @@ public String call() throws Exception {
 	}
 
 	@RequestMapping("/custom-timeout-handling")
-	public @ResponseBody AsyncTask<String> callableWithCustomTimeoutHandling() {
+	public @ResponseBody MvcAsyncTask<String> callableWithCustomTimeoutHandling() {
 
 		Callable<String> callable = new Callable<String>() {
 			@Override
@@ -71,7 +71,7 @@ public String call() throws Exception {
 			}
 		};
 
-		return new AsyncTask<String>(1000, callable);
+		return new MvcAsyncTask<String>(1000, callable);
 	}
 
 	@ExceptionHandler

File: src/test/java/org/springframework/samples/mvc/fileupload/FileUploadControllerTests.java
Patch:
@@ -1,8 +1,8 @@
 package org.springframework.samples.mvc.fileupload;
 
-import static org.springframework.test.web.mock.servlet.request.MockMvcRequestBuilders.fileUpload;
-import static org.springframework.test.web.mock.servlet.result.MockMvcResultMatchers.model;
-import static org.springframework.test.web.mock.servlet.setup.MockMvcBuilders.webAppContextSetup;
+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.fileUpload;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.model;
+import static org.springframework.test.web.servlet.setup.MockMvcBuilders.webAppContextSetup;
 
 import org.junit.Test;
 import org.junit.runner.RunWith;

File: src/main/java/org/springframework/samples/mvc/data/RequestDataController.java
Patch:
@@ -3,7 +3,6 @@
 import org.springframework.http.HttpEntity;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.CookieValue;
-import org.springframework.web.bind.annotation.MatrixVariable;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RequestHeader;

File: src/main/java/org/springframework/samples/mvc/convert/ConvertController.java
Patch:
@@ -12,7 +12,7 @@
 import org.springframework.web.bind.annotation.ResponseBody;
 
 @Controller
-@RequestMapping("/convert/*")
+@RequestMapping("/convert")
 public class ConvertController {
 
 	@RequestMapping("primitive")

File: src/main/java/org/springframework/samples/mvc/messageconverters/MessageConvertersController.java
Patch:
@@ -15,7 +15,7 @@
 import com.sun.syndication.feed.rss.Channel;
 
 @Controller
-@RequestMapping("messageconverters/*")
+@RequestMapping("/messageconverters")
 public class MessageConvertersController {
 
 	// StringHttpMessageConverter

File: src/test/java/org/springframework/samples/mvc/data/StandardArgumentsControllerTests.java
Patch:
@@ -40,7 +40,7 @@ public void setup() throws Exception {
 	public void request() throws Exception {
 		this.mockMvc.perform(get("/data/standard/request"))
 				.andExpect(content().string(startsWith(
-						"request = org.springframework.mock.web.MockHttpServletRequest@")));
+						"request = org.springframework.test.web.mock.servlet.request.Servlet3MockHttpServletRequest@")));
 	}
 
 	@Test

