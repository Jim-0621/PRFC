File: gravitysnaphelper/src/main/java/com/github/rubensousa/gravitysnaphelper/GravitySnapRecyclerView.java
Patch:
@@ -66,6 +66,7 @@ public GravitySnapRecyclerView(@NonNull Context context, @Nullable AttributeSet
                 break;
             case 4:
                 snapHelper = new GravitySnapHelper(Gravity.CENTER);
+                break;
             default:
                 throw new IllegalArgumentException("Invalid gravity value. Use START " +
                         "| END | BOTTOM | TOP | CENTER constants");

File: gravitysnaphelper/src/main/java/com/github/rubensousa/gravitysnaphelper/OrientationAwareRecyclerView.java
Patch:
@@ -43,8 +43,8 @@ public OrientationAwareRecyclerView(@NonNull Context context, @Nullable Attribut
     }
 
     public OrientationAwareRecyclerView(@NonNull Context context, @Nullable AttributeSet attrs,
-                                        int defStyle) {
-        super(context, attrs, defStyle);
+                                        int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
         addOnScrollListener(new OnScrollListener() {
             @Override
             public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {

File: app/src/main/java/com/github/rubensousa/recyclerviewsnap/SnapAdapter.java
Patch:
@@ -71,7 +71,7 @@ public void onBindViewHolder(ViewHolder holder, int position) {
             if (snap.getGravity() == Gravity.START) {
                 holder.recyclerView.setPadding(padding, 0, 0, 0);
             } else if (snap.getGravity() == Gravity.END) {
-                holder.recyclerView.setPadding(0, 0, padding, 0);
+                holder.recyclerView.setPadding(padding, 0, padding, 0);
             }
         } else {
             holder.recyclerView.setPadding(0, 0, 0, 0);

File: gravitysnaphelper/src/main/java/com/github/rubensousa/gravitysnaphelper/GravityDelegate.java
Patch:
@@ -35,11 +35,11 @@ public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
     };
 
     public GravityDelegate(int gravity) {
-        this(gravity, true, null);
+        this(gravity, false, null);
     }
 
     public GravityDelegate(int gravity, GravitySnapHelper.SnapListener listener) {
-        this(gravity, true, listener);
+        this(gravity, false, listener);
     }
 
     public GravityDelegate(int gravity, boolean enableSnapLast,

File: app/src/main/java/com/github/rubensousa/recyclerviewsnap/SnapAdapter.java
Patch:
@@ -85,7 +85,8 @@ public void onBindViewHolder(ViewHolder holder, int position) {
                     .recyclerView.getContext(), LinearLayoutManager.HORIZONTAL, false));
             holder.recyclerView.setOnFlingListener(null);
             new GravitySnapHelper(snap.getGravity(), false, this).attachToRecyclerView(holder.recyclerView);
-        } else if (snap.getGravity() == Gravity.CENTER_HORIZONTAL) {
+        } else if (snap.getGravity() == Gravity.CENTER_HORIZONTAL ||
+                snap.getGravity() == Gravity.CENTER_VERTICAL) {
             holder.recyclerView.setLayoutManager(new LinearLayoutManager(holder
                     .recyclerView.getContext(), snap.getGravity() == Gravity.CENTER_HORIZONTAL ?
                     LinearLayoutManager.HORIZONTAL : LinearLayoutManager.VERTICAL, false));

