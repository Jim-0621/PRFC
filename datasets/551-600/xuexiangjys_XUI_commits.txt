File: xui_lib/src/main/java/com/xuexiang/xui/widget/button/CountDownButton.java
Patch:
@@ -133,7 +133,7 @@ public boolean onTouchEvent(MotionEvent event) {
         switch (event.getAction()) {
             case MotionEvent.ACTION_UP:
                 Rect rect = new Rect();
-                getGlobalVisibleRect(rect);
+                getWindowVisibleDisplayFrame(rect);
                 if (mOnClickListener != null && rect.contains((int) event.getRawX(), (int) event.getRawY())) {
                     mOnClickListener.onClick(this);
                 }

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/statelayout/status/adapter/DefaultStatusView.java
Patch:
@@ -88,10 +88,10 @@ private int getLayoutIdByStatus(int status) {
                 layoutId = R.layout.msv_layout_loading_view;
                 break;
             case STATUS_LOAD_FAILED:
-                layoutId = R.layout.msv_layout_empty_view;
+                layoutId = R.layout.msv_layout_error_view;
                 break;
             case STATUS_EMPTY_DATA:
-                layoutId = R.layout.msv_layout_error_view;
+                layoutId = R.layout.msv_layout_empty_view;
                 break;
             case STATUS_CUSTOM:
                 layoutId = R.layout.msv_layout_no_network_view;

File: app/src/main/java/com/xuexiang/xuidemo/fragment/LoginFragment.java
Patch:
@@ -35,6 +35,7 @@
 import com.xuexiang.xuidemo.utils.SettingSPUtils;
 import com.xuexiang.xuidemo.utils.TokenUtils;
 import com.xuexiang.xuidemo.utils.XToastUtils;
+import com.xuexiang.xuidemo.utils.sdkinit.UMengInit;
 import com.xuexiang.xutil.app.ActivityUtils;
 import com.xuexiang.xutil.common.RandomUtils;
 
@@ -85,6 +86,7 @@ protected void initViews() {
             PrivacyUtils.showPrivacyDialog(getContext(), (dialog, which) -> {
                 dialog.dismiss();
                 spUtils.setIsAgreePrivacy(true);
+                UMengInit.init(getContext());
             });
         }
     }

File: app/src/main/java/com/xuexiang/xuidemo/utils/TokenUtils.java
Patch:
@@ -92,6 +92,8 @@ public static void handleLogoutSuccess() {
         //登出时，清除账号信息
         clearToken();
         XToastUtils.success("登出成功！");
+        // 登出清除一下隐私政策
+        SettingSPUtils.getInstance().setIsAgreePrivacy(false);
         //跳转到登录页
         ActivityUtils.startActivity(LoginActivity.class);
     }

File: app/src/main/java/com/xuexiang/xuidemo/base/BaseActivity.java
Patch:
@@ -4,6 +4,7 @@
 import android.content.res.Configuration;
 import android.os.Bundle;
 
+import androidx.annotation.Keep;
 import androidx.annotation.NonNull;
 
 import com.jpeng.jptabbar.anno.NorIcons;
@@ -27,6 +28,7 @@
  * @author XUE
  * @since 2019/3/22 11:21
  */
+@Keep
 public class BaseActivity extends XPageActivity {
 
     //==============需要注意的是，由于JPTabBar反射获取注解的是context，也就是容器Activity，因此需要将注解写在容器Activity内======================//

File: app/src/main/java/com/xuexiang/xuidemo/utils/PrivacyUtils.java
Patch:
@@ -76,6 +76,7 @@ public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which)
                         DialogLoader.getInstance().showConfirmDialog(context, ResUtils.getString(R.string.title_reminder), String.format(ResUtils.getString(R.string.content_privacy_explain_again), ResUtils.getString(R.string.app_name)), ResUtils.getString(R.string.lab_look_again), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialog, int which) {
+                                dialog.dismiss();
                                 showPrivacyDialog(context, submitListener);
                             }
                         }, ResUtils.getString(R.string.lab_still_disagree), new DialogInterface.OnClickListener() {
@@ -85,11 +86,13 @@ public void onClick(DialogInterface dialog, int which) {
                                 DialogLoader.getInstance().showConfirmDialog(context, ResUtils.getString(R.string.content_think_about_it_again), ResUtils.getString(R.string.lab_look_again), new DialogInterface.OnClickListener() {
                                     @Override
                                     public void onClick(DialogInterface dialog, int which) {
+                                        dialog.dismiss();
                                         showPrivacyDialog(context, submitListener);
                                     }
                                 }, ResUtils.getString(R.string.lab_exit_app), new DialogInterface.OnClickListener() {
                                     @Override
                                     public void onClick(DialogInterface dialog, int which) {
+                                        dialog.dismiss();
                                         XUtil.get().exitApp();
                                     }
                                 });

File: app/src/main/java/com/xuexiang/xuidemo/utils/sdkinit/BuglyInit.java
Patch:
@@ -21,6 +21,7 @@
 
 import com.tencent.bugly.Bugly;
 import com.tencent.bugly.BuglyStrategy;
+import com.xuexiang.xuidemo.BuildConfig;
 import com.xuexiang.xutil.system.DeviceUtils;
 
 /**
@@ -31,8 +32,6 @@
  */
 public final class BuglyInit {
 
-    private static final String APP_ID_BUGLY = "813d00d577";
-
     private BuglyInit() {
         throw new UnsupportedOperationException("u can't instantiate me...");
     }
@@ -48,7 +47,8 @@ public static void init(Application application) {
                 .setDeviceID(DeviceUtils.getAndroidID())
                 .setRecordUserInfoOnceADay(true);
         // 这里实现SDK初始化，appId替换成你的在Bugly平台申请的appId,调试时将第三个参数设置为true
-        Bugly.init(application, APP_ID_BUGLY, true, strategy);
+        //这里BuildConfig.APP_ID_BUGLY是根据local.properties中定义的APP_ID_BUGLY生成的，只是运行看效果的话，可以不初始化该SDK
+        Bugly.init(application, BuildConfig.APP_ID_BUGLY, true, strategy);
     }
 
 }

File: app/src/main/java/com/xuexiang/xuidemo/utils/sdkinit/UMengInit.java
Patch:
@@ -21,6 +21,7 @@
 
 import com.umeng.analytics.MobclickAgent;
 import com.umeng.commonsdk.UMConfigure;
+import com.xuexiang.xuidemo.BuildConfig;
 
 /**
  * UMeng 统计 SDK初始化
@@ -29,8 +30,6 @@
  */
 public final class UMengInit {
 
-    private static final String APP_ID_UMENG = "5d030d6f570df379b7000e70";
-
     private UMengInit() {
         throw new UnsupportedOperationException("u can't instantiate me...");
     }
@@ -43,7 +42,8 @@ public static void init(Application application) {
         UMConfigure.setLogEnabled(true);
         //初始化组件化基础库, 注意: 即使您已经在AndroidManifest.xml中配置过appkey和channel值，也需要在App代码中调用初始化接口（如需要使用AndroidManifest.xml中配置好的appkey和channel值，UMConfigure.init调用中appkey和channel参数请置为null）。
         //第二个参数是appkey，最后一个参数是pushSecret
-        UMConfigure.init(application, APP_ID_UMENG, "pgyer", UMConfigure.DEVICE_TYPE_PHONE,"");
+        //这里BuildConfig.APP_ID_UMENG是根据local.properties中定义的APP_ID_UMENG生成的，只是运行看效果的话，可以不初始化该SDK
+        UMConfigure.init(application, BuildConfig.APP_ID_UMENG, "pgyer", UMConfigure.DEVICE_TYPE_PHONE,"");
         //统计SDK是否支持采集在子进程中打点的自定义事件，默认不支持
         UMConfigure.setProcessEvent(true);//支持多进程打点
         MobclickAgent.setPageCollectionMode(MobclickAgent.PageMode.AUTO);

File: app/src/main/java/com/xuexiang/xuidemo/base/XPageTransferActivity.java
Patch:
@@ -26,7 +26,7 @@
 import com.xuexiang.xutil.tip.ToastUtils;
 
 /**
- * https://xuexiangjys.club/xpage/transfer?pageName=xxxxx
+ * https://xuexiangjys.club/xpage/transfer?pageName=xxxxx&....
  * applink的中转
  *
  * @author xuexiang

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/banner/UserGuideFragment.java
Patch:
@@ -16,7 +16,7 @@
 
 
 /**
- * 可使用Applink打开:https://xuexiangjys.club/xpage/transfer?pageName=UserGuide?position=2
+ * 可使用Applink打开:https://xuexiangjys.club/xpage/transfer?pageName=UserGuide&position=2
  *
  * @author xuexiang
  * @since 2019-07-06 10:21
@@ -29,7 +29,7 @@ public class UserGuideFragment extends BaseFragment {
     private Class<? extends ViewPager.PageTransformer> transformerClass;
 
     @AutoWired
-    private int position;
+    int position;
 
     @Override
     protected int getLayoutId() {

File: app/src/main/java/com/xuexiang/xuidemo/DemoDataProvider.java
Patch:
@@ -369,7 +369,7 @@ public static Collection<String> getDemoData1() {
     @MemoryCache
     public static List<NewInfo> getEmptyNewInfo() {
         List<NewInfo> list = new ArrayList<>();
-        for (int i = 0; i < 10; i++) {
+        for (int i = 0; i < 5; i++) {
             list.add(new NewInfo());
         }
         return list;

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/refresh/broccoli/AnimationPlaceholderFragment.java
Patch:
@@ -93,6 +93,9 @@ public void onItemClick(View itemView, int position) {
                 Utils.goWeb(getContext(), mNewsListAdapter.getItem(position).getDetailUrl());
             }
         });
+        //设置刷新加载时禁止所有列表操作
+        refreshLayout.setDisableContentWhenRefresh(true);
+        refreshLayout.setDisableContentWhenLoading(true);
         refreshLayout.autoRefresh();
     }
 

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/refresh/broccoli/CommonPlaceholderFragment.java
Patch:
@@ -105,6 +105,9 @@ public void onItemClick(View itemView, int position) {
                 Utils.goWeb(getContext(), mNewsListAdapter.getItem(position).getDetailUrl());
             }
         });
+        //设置刷新加载时禁止所有列表操作
+        refreshLayout.setDisableContentWhenRefresh(true);
+        refreshLayout.setDisableContentWhenLoading(true);
         refreshLayout.autoRefresh();
     }
 

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/RefreshLayoutFragment.java
Patch:
@@ -20,6 +20,7 @@
 import com.xuexiang.xuidemo.R;
 import com.xuexiang.xuidemo.base.ComponentContainerFragment;
 import com.xuexiang.xuidemo.fragment.components.refresh.RefreshBasicFragment;
+import com.xuexiang.xuidemo.fragment.components.refresh.RefreshStatusLayoutFragment;
 import com.xuexiang.xuidemo.fragment.components.refresh.RefreshStyleFragment;
 
 /**
@@ -37,7 +38,8 @@ public class RefreshLayoutFragment extends ComponentContainerFragment {
     protected Class[] getPagesClasses() {
         return new Class[]{
                 RefreshBasicFragment.class,
-                RefreshStyleFragment.class
+                RefreshStatusLayoutFragment.class,
+                RefreshStyleFragment.class,
         };
     }
 }

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/refresh/RefreshStyleFragment.java
Patch:
@@ -18,6 +18,7 @@
 
 import com.xuexiang.xpage.annotation.Page;
 import com.xuexiang.xuidemo.base.ComponentContainerFragment;
+import com.xuexiang.xuidemo.fragment.components.refresh.style.RefreshAllStyleFragment;
 import com.xuexiang.xuidemo.fragment.components.refresh.style.RefreshClassicsStyleFragment;
 import com.xuexiang.xuidemo.fragment.components.refresh.style.RefreshMaterialStyleFragment;
 
@@ -36,7 +37,8 @@ public class RefreshStyleFragment extends ComponentContainerFragment {
     protected Class[] getPagesClasses() {
         return new Class[] {
                 RefreshClassicsStyleFragment.class,
-                RefreshMaterialStyleFragment.class
+                RefreshMaterialStyleFragment.class,
+                RefreshAllStyleFragment.class,
         };
     }
 }

File: app/src/main/java/com/xuexiang/xuidemo/fragment/components/refresh/style/RefreshClassicsStyleFragment.java
Patch:
@@ -28,7 +28,6 @@
 import android.view.View;
 import android.widget.ImageView;
 
-import com.scwang.smartrefresh.header.MaterialHeader;
 import com.scwang.smartrefresh.layout.SmartRefreshLayout;
 import com.scwang.smartrefresh.layout.adapter.BaseRecyclerAdapter;
 import com.scwang.smartrefresh.layout.adapter.SmartViewHolder;

