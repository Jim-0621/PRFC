File: src/main/java/com/cburch/logisim/std/io/Telnet.java
Patch:
@@ -50,7 +50,7 @@ public class Telnet extends InstanceFactory {
       Attributes.forIntegerRange("port", S.getter("telnetPortAttr"), 1, 65535);
 
   private static final Attribute<Integer> ATTR_BUFFER =
-      Attributes.forIntegerRange("buflen", S.getter("keybBufferLengthAttr"), 1, 256);
+      Attributes.forIntegerRange("buflen", S.getter("keybBufferLengthAttr"), 1, 1024);
 
   public Telnet() {
     super(_ID, S.getter("telnetComponent"));

File: src/main/java/com/cburch/logisim/circuit/RadixOption.java
Patch:
@@ -191,7 +191,7 @@ public int getMaxLength(BitWidth width) {
 
     @Override
     public String toString(Value value) {
-      return value.getWidth() == 64 ? Double.toString(value.toDoubleValue()) : Float.toString(value.toFloatValue());
+      return value.toStringFromFloatValue();
     }
 
     @Override

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -329,7 +329,7 @@ private void propagateByteEnables(InstanceState state, long addr, boolean goodAd
         newMemValue = dataInValue;
       } else {
         for (var i = 0; i < RamAppearance.getNrBEPorts(attrs); i++) {
-          long mask = 0xFF << (i * 8);
+          long mask = 0xFFL << (i * 8);
           long andMask = ~mask;
           if (state.getPortValue(RamAppearance.getBEIndex(i, attrs)).equals(Value.TRUE)) {
             newMemValue &= andMask;

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -329,7 +329,7 @@ private void propagateByteEnables(InstanceState state, long addr, boolean goodAd
         newMemValue = dataInValue;
       } else {
         for (var i = 0; i < RamAppearance.getNrBEPorts(attrs); i++) {
-          long mask = 0xFF << (i * 8);
+          long mask = 0xFFL << (i * 8);
           long andMask = ~mask;
           if (state.getPortValue(RamAppearance.getBEIndex(i, attrs)).equals(Value.TRUE)) {
             newMemValue &= andMask;

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -577,7 +577,7 @@ public static void setDefaultGridColors() {
   public static final PrefMonitor<Integer> COMPONENT_GHOST_COLOR =
       create(new PrefMonitorInt("componentGhostColor", DEFAULT_COMPONENT_GHOST_COLOR));
   public static final PrefMonitor<Integer> COMPONENT_ICON_COLOR =
-          create(new PrefMonitorInt("componentIconColor", DEFAULT_COMPONENT_ICON_COLOR));
+      create(new PrefMonitorInt("componentIconColor", DEFAULT_COMPONENT_ICON_COLOR));
 
 
   // Layout preferences

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHdlGeneratorFactory.java
Patch:
@@ -33,6 +33,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
     myPorts.add(Port.INPUT, "sel", nrOfselectBits, selectInputIndex);
     if (attrs.getValue(PlexersLibrary.ATTR_ENABLE))
         myPorts.add(Port.INPUT, "enable", 1, selectInputIndex + 1, false);
+    else myPorts.add(Port.INPUT, "enable", 1, Hdl.oneBit());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHdlGeneratorFactory.java
Patch:
@@ -33,6 +33,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
     myPorts.add(Port.INPUT, "sel", nrOfselectBits, selectInputIndex);
     if (attrs.getValue(PlexersLibrary.ATTR_ENABLE))
         myPorts.add(Port.INPUT, "enable", 1, selectInputIndex + 1, false);
+    else myPorts.add(Port.INPUT, "enable", 1, Hdl.oneBit());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74192.java
Patch:
@@ -44,7 +44,7 @@ public class Ttl74192 extends AbstractTtlGate {
   public static final int PORT_INDEX_CLEAR = 12;
   public static final int PORT_INDEX_A = 13;
   private static final String[] PORT_NAMES = {
-      "Data Input A",
+      "Data Input B",
       "Data Output B",
       "Data Output A",
       "Count Down",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74192.java
Patch:
@@ -44,7 +44,7 @@ public class Ttl74192 extends AbstractTtlGate {
   public static final int PORT_INDEX_CLEAR = 12;
   public static final int PORT_INDEX_A = 13;
   private static final String[] PORT_NAMES = {
-      "Data Input A",
+      "Data Input B",
       "Data Output B",
       "Data Output A",
       "Count Down",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74192.java
Patch:
@@ -44,7 +44,7 @@ public class Ttl74192 extends AbstractTtlGate {
   public static final int PORT_INDEX_CLEAR = 12;
   public static final int PORT_INDEX_A = 13;
   private static final String[] PORT_NAMES = {
-      "Data Input A",
+      "Data Input B",
       "Data Output B",
       "Data Output A",
       "Count Down",

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -153,7 +153,7 @@ private static File determineBackupName(File base) {
   private static File determineAutosaveName(File base) {
     if (base == null) {
       String timestamp =
-          DateTimeFormatter.ofPattern("yyyy-MM-dd_HH:mm:ss").format(LocalDateTime.now());
+          DateTimeFormatter.ofPattern("yyyyMMddHHmmss").format(LocalDateTime.now());
       final var candidate = new File(System.getProperty("user.home") + File.separator
           + LOGISIM_UNNAMED_AUTOSAVE_PREFIX + timestamp + LOGISIM_UNNAMED_AUTOSAVE_SUFFIX);
       if (!candidate.exists()) return candidate;
@@ -461,7 +461,7 @@ public boolean save(LogisimFile file, File dest) {
    *
    * @param file The file that should be autosaved
    *
-   * @return True if writing was successfull, else false;
+   * @return True if writing was successful, else false;
    */
   public boolean autosave(LogisimFile file) {
     final var oldAutosave = autosaveFile;

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -229,7 +229,7 @@ public static LogisimFile load(File file, Loader loader) throws IOException {
       } else if (res == 0) { // If load is selected select the autosave to be loaded
         loadFile = autosave.get(); // Set load file to the autosave path
         loader.setAutosavePath(autosave.get());
-        autosaveLoading = true; // also set this to true to remember an autosave was loaded
+        autosaveLoading = true; // Also set this to true to remember an autosave was loaded
       } else if (res == 1) {
         autosave.get().delete();
       }

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -704,7 +704,8 @@ public void stopAutosaveThread(boolean delete) {
     if (autosaveThread == null) return;
     try {
       autosaveThread.abort(delete);
-    } catch (InterruptedException ignored) {}
+    } catch (InterruptedException ignored) {
+    }
   }
 
   public boolean isAutosaveLoaded() {

File: src/main/java/com/cburch/logisim/gui/prefs/AutosaveOptions.java
Patch:
@@ -80,7 +80,8 @@ public void actionPerformed(ActionEvent e) {
       var val = -1;
       try {
         val = Integer.parseInt(autosaveInterval.getText());
-      } catch (NumberFormatException ignored) {}
+      } catch (NumberFormatException ignored) {
+      }
       if (val <= 0 || val > 10000) {
         setContent();
       } else {

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -237,7 +237,7 @@ public void localeChanged() {
     upStateMenu.setText(S.get("simulateUpStateMenu"));
     log.setText(S.get("simulateLogItem"));
     test.setText(S.get("simulateTestItem"));
-    assemblyWindow.setText("Assembly viewer");
+    assemblyWindow.setText(S.get("simulateAssemblyViewer"));
   }
 
   private void recreateStateMenu(JMenu menu, List<CircuitStateMenuItem> items, int code) {

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -491,7 +491,7 @@ public Expression toSum(TruthTable source) {
         term = Expressions.or(term, literal);
       }
     }
-    return term == null ? Expressions.constant(1) : term;
+    return term == null ? Expressions.constant(0) : term;
   }
 
   static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaIoInformationSettingsDialog.java
Patch:
@@ -725,6 +725,7 @@ public void windowClosing(WindowEvent e) {
     selWindow.pack();
     selWindow.setLocationRelativeTo(IOcomps.getParentFrame());
     selWindow.setModal(true);
+    selWindow.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
     selWindow.setAlwaysOnTop(true);
     abort = false;
     while (!abort) {

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHdlGeneratorFactory.java
Patch:
@@ -34,6 +34,7 @@ public SubtractorHdlGeneratorFactory() {
         .addWire("s_extendeddataA", EXTENDED_BITS_ID)
         .addWire("s_extendeddataB", EXTENDED_BITS_ID)
         .addWire("s_sumresult", EXTENDED_BITS_ID)
+        .addWire("n_bIn", 1)
         .addWire("s_carry", 1);
     myPorts
         .add(Port.INPUT, "dataA", NR_OF_BITS_ID, Subtractor.IN0, StdAttr.WIDTH)
@@ -63,7 +64,8 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
       contents.add("borrowOut <= {{not}}(s_sumresult(" + EXTENDED_BITS_STRING + "-1));");
     } else {
       contents.add("""
-          assign {s_carry,result} = dataA + ~(dataB) + ~(borrowIn);
+          assign n_bIn = ~borrowIn;
+          assign {s_carry,result} = dataA + ~(dataB) + n_bIn;
           assign borrowOut        = ~s_carry;
           """);
     }

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHdlGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
     } else {
       contents.add("""
           assign n_bIn = ~borrowIn;
-	  assign {s_carry,result} = dataA + ~(dataB) + n_bIn;
+          assign {s_carry,result} = dataA + ~(dataB) + n_bIn;
           assign borrowOut        = ~s_carry;
           """);
     }

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHdlGeneratorFactory.java
Patch:
@@ -34,6 +34,7 @@ public SubtractorHdlGeneratorFactory() {
         .addWire("s_extendeddataA", EXTENDED_BITS_ID)
         .addWire("s_extendeddataB", EXTENDED_BITS_ID)
         .addWire("s_sumresult", EXTENDED_BITS_ID)
+        .addWire("n_bIn", 1)
         .addWire("s_carry", 1);
     myPorts
         .add(Port.INPUT, "dataA", NR_OF_BITS_ID, Subtractor.IN0, StdAttr.WIDTH)
@@ -63,7 +64,8 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
       contents.add("borrowOut <= {{not}}(s_sumresult(" + EXTENDED_BITS_STRING + "-1));");
     } else {
       contents.add("""
-          assign {s_carry,result} = dataA + ~(dataB) + ~(borrowIn);
+          assign n_bIn = ~borrowIn;
+	  assign {s_carry,result} = dataA + ~(dataB) + n_bIn;
           assign borrowOut        = ~s_carry;
           """);
     }

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -70,10 +70,10 @@ private void drawWidthIncompatibilityData(Graphics base, Graphics g, Project pro
         if (drawn) continue;
 
         // compute the caption combining all similar points
-        var caption = "" + w.getWidth();
+        final var caption = new StringBuilder("" + w.getWidth());
         for (var j = i + 1; j < ex.size(); j++) {
           if (ex.getPoint(j).equals(p)) {
-            caption += "/" + ex.getBitWidth(j);
+            caption.append("/" + ex.getBitWidth(j));
             break;
           }
         }
@@ -87,7 +87,7 @@ private void drawWidthIncompatibilityData(Graphics base, Graphics g, Project pro
         GraphicsUtil.switchToWidth(g, 3);
         GraphicsUtil.outlineText(
             g,
-            caption,
+            caption.toString(),
             p.getX() + 4,
             p.getY() + 1 + fm.getAscent(),
             Value.widthErrorCaptionColor,

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -59,8 +59,8 @@ public LayoutToolbarModel(Frame frame, Project proj) {
 
   private static ToolbarItem findItem(List<ToolbarItem> items, Tool tool) {
     for (final var item : items) {
-      if (item instanceof ToolItem) {
-        if (tool == ((ToolItem) item).tool) {
+      if (item instanceof ToolItem toolItem) {
+        if (tool == toolItem.tool) {
           return item;
         }
       }

File: src/main/java/com/cburch/logisim/gui/main/Print.java
Patch:
@@ -137,7 +137,7 @@ public int print(Graphics base, PageFormat format, int pageIndex) {
       final var g2 = g instanceof Graphics2D ? (Graphics2D) g : null;
       final var fm = g.getFontMetrics();
       final var head =
-          (header != null && !header.equals(""))
+          (header != null && !header.isEmpty())
               ? format(header, pageIndex + 1, circuits.size(), circ.getName())
               : null;
       final var headHeight = (head == null ? 0 : fm.getHeight());

File: src/main/java/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -9,20 +9,17 @@
 
 package com.cburch.logisim.gui.main;
 
-import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.circuit.Wire;
 import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.data.AbstractAttributeSet;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeListener;
-import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.util.CollectionUtil;
 import com.cburch.logisim.util.UnmodifiableList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashSet;
-import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;

File: src/main/java/com/cburch/logisim/gui/main/SimulationExplorer.java
Patch:
@@ -34,8 +34,8 @@ class SimulationExplorer extends JPanel implements ProjectListener, BaseMouseLis
     super(new BorderLayout());
     this.project = proj;
 
-    SimulationToolbarModel toolbarModel = new SimulationToolbarModel(proj, menu);
-    Toolbar toolbar = new Toolbar(toolbarModel);
+    final var toolbarModel = new SimulationToolbarModel(proj, menu);
+    final var toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
     model = new SimulationTreeModel(proj.getRootCircuitStates());
@@ -59,7 +59,7 @@ public void mouseClicked(MouseEvent e) {
     if (e.getClickCount() == 2) {
       TreePath path = tree.getPathForLocation(e.getX(), e.getY());
       if (path != null) {
-        Object last = path.getLastPathComponent();
+        final var last = path.getLastPathComponent();
         if (last instanceof SimulationTreeCircuitNode node) {
           project.setCircuitState(node.getCircuitState());
         }

File: src/main/java/com/cburch/logisim/gui/main/Toolbox.java
Patch:
@@ -25,8 +25,8 @@ class Toolbox extends JPanel {
   Toolbox(Project proj, Frame frame, MenuListener menu) {
     super(new BorderLayout());
 
-    ToolboxToolbarModel toolbarModel = new ToolboxToolbarModel(frame, menu);
-    Toolbar toolbar = new Toolbar(toolbarModel);
+    final var toolbarModel = new ToolboxToolbarModel(frame, menu);
+    final var toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
     toolbox = new ProjectExplorer(proj, false);

File: src/main/java/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -9,20 +9,17 @@
 
 package com.cburch.logisim.gui.main;
 
-import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.circuit.Wire;
 import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.data.AbstractAttributeSet;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeListener;
-import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.util.CollectionUtil;
 import com.cburch.logisim.util.UnmodifiableList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.HashSet;
-import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;

File: src/main/java/com/cburch/logisim/gui/main/SimulationExplorer.java
Patch:
@@ -34,8 +34,8 @@ class SimulationExplorer extends JPanel implements ProjectListener, BaseMouseLis
     super(new BorderLayout());
     this.project = proj;
 
-    SimulationToolbarModel toolbarModel = new SimulationToolbarModel(proj, menu);
-    Toolbar toolbar = new Toolbar(toolbarModel);
+    final var toolbarModel = new SimulationToolbarModel(proj, menu);
+    final var toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
     model = new SimulationTreeModel(proj.getRootCircuitStates());
@@ -59,7 +59,7 @@ public void mouseClicked(MouseEvent e) {
     if (e.getClickCount() == 2) {
       TreePath path = tree.getPathForLocation(e.getX(), e.getY());
       if (path != null) {
-        Object last = path.getLastPathComponent();
+        final var last = path.getLastPathComponent();
         if (last instanceof SimulationTreeCircuitNode node) {
           project.setCircuitState(node.getCircuitState());
         }

File: src/main/java/com/cburch/logisim/gui/main/Toolbox.java
Patch:
@@ -25,8 +25,8 @@ class Toolbox extends JPanel {
   Toolbox(Project proj, Frame frame, MenuListener menu) {
     super(new BorderLayout());
 
-    ToolboxToolbarModel toolbarModel = new ToolboxToolbarModel(frame, menu);
-    Toolbar toolbar = new Toolbar(toolbarModel);
+    final var toolbarModel = new ToolboxToolbarModel(frame, menu);
+    final var toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
     toolbox = new ProjectExplorer(proj, false);

File: src/main/java/com/cburch/logisim/util/JAdjustableScroll.java
Patch:
@@ -6,7 +6,7 @@
 import javax.swing.ScrollPaneConstants;
 
 public class JAdjustableScroll extends JScrollPane {
-  public int preferredWidth = 700;
+  public int preferredWidth = 800;
   public int preferredHeight = 200;
 
   public JAdjustableScroll(Component view) {

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -52,7 +52,7 @@ private static void buildVariableErrorMessage(String val, StringBuilder messageB
       messageBuilder.append(S.get("variableStartsWithDigit"));
     } else {
 
-      // we don't check this case when the variable starts with a digit
+      // We don't check this case when the variable starts with a digit
       // because this would match the initial digit, we don't want that.
       variableMatcher.reset();
       int firstIllegalCharacterIndex = variableMatcher.find() ? variableMatcher.end() : 0;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7487.java
Patch:
@@ -16,11 +16,11 @@
 /*
  * Class simulates a TTL7487 IC
  * It takes a 4 bit input (A1-A4) and performs one of the following oppertations based on inputs B and c to produce outputs Y1-Y4
- *   B=0, C=0 output compliment of A
+ *   B=0, C=0 output complement of A
  *   B=0, C=1 output A unchanged
  *   B=1, C=0 output all High
  *   B=1, C=1 output all Low
- * Likely use is before an adder to give control for addition/subtraction along with ++,--,transparent in conjunction with the adder's carry in bit
+ * Likely use is before an adder to give control for addition/subtraction along with increment/decrement/transparent in conjunction with the adder's carry in bit
  * Datasheet: https://archive.org/details/bitsavers_tidataBookVol2_45945352/page/n404/mode/1up?view=theater
  * Alternative source (page 3-354, pdf page 405): http://bitsavers.org/components/ti/_dataBooks/1985_TI_The_TTL_Data_Book_Vol_2.pdf
  */

File: src/main/java/com/cburch/logisim/std/memory/RamAppearance.java
Patch:
@@ -180,7 +180,7 @@ public static void configurePorts(Instance instance) {
     for (var i = 0; i < getNrDataInPorts(attrs); i++)
       ps[getDataInIndex(i, attrs)] = getDataInPort(i, attrs);
     for (var i = 0; i < getNrDataOutPorts(attrs); i++)
-      ps[getDataOutIndex(i, attrs)] = getDataOutPort(i, attrs,instance.getBounds().getWidth());
+      ps[getDataOutIndex(i, attrs)] = getDataOutPort(i, attrs, instance.getBounds().getWidth());
     for (var i = 0; i < getNrOEPorts(attrs); i++)
       ps[getOEIndex(i, attrs)] = getOEPort(i, attrs);
     for (var i = 0; i < getNrWEPorts(attrs); i++)

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -97,8 +97,7 @@ public static void doAddCircuit(Project proj) {
         error = "\"" + name + "\": " + S.get("circuitNameKeyword");
       } else if (nameIsInUse(proj, name)) {
         error = "\"" + name + "\": " + S.get("circuitNameExists");
-      }
-      else {
+      } else {
         String nameMessage = SyntaxChecker.getErrorMessage(name);
         if (nameMessage != null) {
           error = "\"" + name + "\": " + S.get("circuitNameInvalidName") + "\n" + nameMessage;

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -35,7 +35,7 @@ public static String getErrorMessage(String val) {
     final var hdl = CorrectLabel.hdlCorrectLabel(val);
 
     if (hdl != null) {
-      messageBuilder.append(              hdl.equals(HdlGeneratorFactory.VHDL)
+      messageBuilder.append(hdl.equals(HdlGeneratorFactory.VHDL)
           ? S.get("variableVHDLKeyword")
           : S.get("variableVerilogKeyword"));
     }
@@ -57,8 +57,7 @@ private static void buildVariableErrorMessage(String val, StringBuilder messageB
 
     if (Character.isDigit(val.charAt(0))) {
       messageBuilder.append(S.get("variableStartsWithDigit"));
-    }
-    else {
+    } else {
       // we don't check this case when the variable starts with a digit
       // because this would match the initial digit, we don't want that.
 

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -101,7 +101,7 @@ public static void doAddCircuit(Project proj) {
       else {
         String nameMessage = SyntaxChecker.getErrorMessage(name);
         if (nameMessage != null) {
-          error = "\"" + name + "\": " + nameMessage;
+          error = "\"" + name + "\": " + S.get("circuitNameInvalidName") + "\n" + nameMessage;
         }
       }
       if (error != null) {

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -188,15 +188,15 @@ public HotkeyOptions(PreferencesFrame window) {
     }
 
     var that = this;
-    /* this timer deals with the preferred width */
+    /* this timer deals with the preferred width and the theme changing problem */
     new Timer(200, e -> {
       int menuWidth = menuKeyPanel.getWidth();
       int normalWidth = normalKeyPanel.getWidth();
       if (normalWidth > 0 && normalWidth < that.getWidth() * 0.8 && !preferredWidthSet) {
         menuKeyScrollPane.preferredWidth = menuWidth + 40;
-        menuKeyPanel.setPreferredSize(menuKeyPanel.getSize());
+        menuKeyPanel.setPreferredSize(new Dimension(menuKeyPanel.getSize().width, menuKeyPanel.getPreferredSize().height));
         normalKeyScrollPane.preferredWidth = normalWidth + 40;
-        normalKeyPanel.setPreferredSize(normalKeyPanel.getSize());
+        normalKeyPanel.setPreferredSize(new Dimension(normalKeyPanel.getSize().width, normalKeyPanel.getPreferredSize().height));
         preferredWidthSet = true;
       }
     }).start();

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -78,7 +78,7 @@ public class JHotkeyInput extends JPanel {
           && activeHotkeyInputUpdated
           && !activeHotkeyInputName.equals(com.boundKeyStroke.getName())) {
         com.needUpdate = false;
-        com.exitEditModeWithoutRefresh();
+        com.exitEditMode();
       }
     }
   });

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRomPanel.java
Patch:
@@ -189,7 +189,7 @@ public void paintComponent(Graphics g) {
       Color notColor = data.getInputValue((byte) (i - 1)).not().getColor();
       g.setColor(Color.BLACK);
       GraphicsUtil.drawCenteredText(
-          g, Integer.toString(i - 1), 40 * i - (20 - IMAGE_BORDER), IMAGE_BORDER - 12);
+          g, Integer.toString(inputs-i), 40 * i - (20 - IMAGE_BORDER), IMAGE_BORDER - 12);
       g.setColor(inputColor);
       // draw input value
       GraphicsUtil.drawCenteredText(
@@ -252,7 +252,7 @@ public void paintComponent(Graphics g) {
       g.setColor(Color.BLACK);
       GraphicsUtil.drawCenteredText(
           g,
-          Integer.toString(i - 1),
+          Integer.toString(outputs-i),
           IMAGE_BORDER + 20 + 40 * (inputs + i),
           IMAGE_BORDER + 100 + 40 * and + 12);
       g.setColor(data.getOutputValue((byte) (i - 1)).getColor());

File: src/main/java/com/cburch/logisim/util/JAdjustableScroll.java
Patch:
@@ -6,7 +6,7 @@
 import javax.swing.ScrollPaneConstants;
 
 public class JAdjustableScroll extends JScrollPane {
-  public int preferredWidth = 700;
+  public int preferredWidth = 800;
   public int preferredHeight = 200;
 
   public JAdjustableScroll(Component view) {

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -97,7 +97,7 @@ public JHotkeyInput(JFrame frame, String text) {
         hotkeyInputField.getBorder(),
         BorderFactory.createEmptyBorder(2, 4, 2, 4)
     ));
-    setPreferredSize(new Dimension(140, 28));
+    setPreferredSize(new Dimension(170, 28));
 
     ((AbstractDocument) hotkeyInputField.getDocument())
         .setDocumentFilter(new KeyboardInputFilter());

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -143,8 +143,6 @@ public void focusLost(FocusEvent e) {
     add(applyButton);
     add(resetButton);
 
-    JHotkeyInputList.add(this);
-
     if (!optimizeTimer.isRunning()) {
       optimizeTimer.start();
     }
@@ -217,6 +215,7 @@ public void resetText(String s) {
 
   public void setBoundKeyStroke(PrefMonitorKeyStroke keyStroke) {
     boundKeyStroke = keyStroke;
+    JHotkeyInputList.add(this);
   }
 
   public PrefMonitorKeyStroke getBoundKeyStroke() {

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -186,9 +186,6 @@ public HotkeyOptions(PreferencesFrame window) {
 
     JButton resetBtn = new JButton(S.get("hotkeyOptResetBtn"));
     resetBtn.addActionListener(e -> {
-      for (var h : keyInputList) {
-        h.exitEditModeWithoutRefresh();
-      }
       AppPreferences.resetHotkeys();
     });
     add(new JLabel(" "));
@@ -198,6 +195,9 @@ public HotkeyOptions(PreferencesFrame window) {
       for (int i = 0; i < hotkeys.size(); i++) {
         keyInputList.get(i).resetText(((PrefMonitorKeyStroke) hotkeys.get(i)).getDisplayString());
       }
+      for (var h : keyInputList) {
+        h.exitEditMode();
+      }
     });
   }
 

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -121,7 +121,7 @@ private void enterEditMode() {
     resetButton.setVisible(true);
     applyButton.setVisible(true);
     int height = hotkeyInputField.getHeight();
-    int width = getWidth() - 18 - 18 - 8 - 8;
+    int width = getWidth() - 18 - 18 - 8 - 8 - 4;
     hotkeyInputField.setPreferredSize(new Dimension(width, height));
     applyButton.setEnabled(false);
   }

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -4,6 +4,7 @@
 
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.prefs.PrefMonitorKeyStroke;
+import java.awt.Color;
 import java.awt.Dimension;
 import java.awt.FlowLayout;
 import java.awt.Font;
@@ -57,7 +58,7 @@ public JHotkeyInput(JFrame frame, String text) {
     ((AbstractDocument) hotkeyInputField.getDocument())
         .setDocumentFilter(new KeyboardInputFilter());
     hotkeyInputField.setHorizontalAlignment(SwingConstants.CENTER);
-    hotkeyInputField.setBackground(getBackground());
+    hotkeyInputField.setBackground(new Color(0, 0, 0, 0));
     hotkeyInputField.setBorder(BorderFactory.createEmptyBorder());
     hotkeyInputField.addKeyListener(hotkeyListener);
     hotkeyInputField.addFocusListener(new FocusListener() {

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -348,7 +348,7 @@ private void propagateByteEnables(InstanceState state, long addr, boolean goodAd
 
     if (!separate && outputNotEnabled) {
       /* put the bus in tri-state in case of a combined bus and no output enable */
-      setValue.accept( Value.createUnknown(dataBits));
+      setValue.accept(Value.createUnknown(dataBits));
       return;
     }
     /* if the OE is not activated return */

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -196,7 +196,7 @@ public HotkeyOptions(PreferencesFrame window) {
     AppPreferences.getPrefs().addPreferenceChangeListener(evt -> {
       AppPreferences.hotkeySync();
       for (int i = 0; i < hotkeys.size(); i++) {
-        keyInputList.get(i).setText(((PrefMonitorKeyStroke) hotkeys.get(i)).getDisplayString());
+        keyInputList.get(i).resetText(((PrefMonitorKeyStroke) hotkeys.get(i)).getDisplayString());
       }
     });
   }

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -187,7 +187,7 @@ public HotkeyOptions(PreferencesFrame window) {
     JButton resetBtn = new JButton(S.get("hotkeyOptResetBtn"));
     resetBtn.addActionListener(e -> {
       for (var h : keyInputList) {
-        h.exitEditMode();
+        h.exitEditModeWithoutRefresh();
       }
       AppPreferences.resetHotkeys();
     });

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -125,7 +125,7 @@ private void enterEditMode() {
     applyButton.setEnabled(false);
   }
 
-  private void exitEditModeWithoutRefresh() {
+  public void exitEditModeWithoutRefresh() {
     activeHotkeyInputUpdated = false;
     applyButton.setVisible(false);
     resetButton.setVisible(false);

File: src/main/java/com/cburch/logisim/util/JHotkeyInput.java
Patch:
@@ -110,7 +110,6 @@ public void focusLost(FocusEvent e) {
   }
 
   private void enterEditMode() {
-    /* TODO: disable all menu items */
     activeHotkeyInputName = boundKeyStroke.getName();
     activeHotkeyInputUpdated = true;
     if (hotkeyListener.rewritable()) {
@@ -133,7 +132,7 @@ private void exitEditModeWithoutRefresh() {
     hotkeyInputField.setText(previousData);
   }
 
-  private void exitEditMode() {
+  public void exitEditMode() {
     exitEditModeWithoutRefresh();
     int height = hotkeyInputField.getHeight();
     int width = hotkeyInputField.getPreferredSize().width + 18 + 18 + 8;

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -208,7 +208,6 @@ public String getTitle() {
 
   @Override
   public void localeChanged() {
-    /* TODO: localize */
     menuKeyHeaderLabel.setText(S.get("hotkeyOptMenuKeyHeader",
         InputEvent.getModifiersExText(AppPreferences.hotkeyMenuMask)));
     normalKeyHeaderLabel.setText(S.get("hotkeyOptNormalKeyHeader",

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -74,7 +74,6 @@ class HotkeyOptions extends OptionsPanel {
   public HotkeyOptions(PreferencesFrame window) {
     super(window);
     this.setLayout(new TableLayout(1));
-    final var listener = new SettingsChangeListener(this);
     menuKeyHeaderLabel = new JLabel();
     add(menuKeyHeaderLabel);
     add(new JLabel(" "));
@@ -141,6 +140,7 @@ public HotkeyOptions(PreferencesFrame window) {
 //        keyInputList.get(i).addActionListener(listener);
 //        keyInputList.get(i).setActionCommand(i + "");
 //        keyInputList.get(i).setEnabled(((PrefMonitorKeyStroke) hotkeys.get(i)).canModify());
+        keyInputList.get(i).setFatherPanel(normalKeyPanel);
         continue;
       }
       PrefMonitorKeyStroke prefKeyStroke = ((PrefMonitorKeyStroke) hotkeys.get(i));
@@ -151,9 +151,11 @@ public HotkeyOptions(PreferencesFrame window) {
 //      keyInputList.get(i).setEnabled(prefKeyStroke.canModify());
       if (prefKeyStroke.needMetaKey()) {
         menuKeyPanel.add(keyLabels[i]);
+        keyInputList.get(i).setFatherPanel(menuKeyPanel);
         menuKeyPanel.add(keyInputList.get(i));
       } else {
         normalKeyPanel.add(keyLabels[i]);
+        keyInputList.get(i).setFatherPanel(normalKeyPanel);
         normalKeyPanel.add(keyInputList.get(i));
       }
     }

File: src/main/java/com/cburch/logisim/fpga/prefs/FpgaOptions.java
Patch:
@@ -274,6 +274,8 @@ public void localeChanged() {
     mapPan.setBorder(BorderFactory.createTitledBorder(S.get("MapColors")));
     ReportPan.setBorder(BorderFactory.createTitledBorder(S.get("ReporterOptions")));
     vhdlPan.setBorder(BorderFactory.createTitledBorder(S.get("VhdlOptions")));
+    HDL_Used.getJLabel().setText(S.get("HDLLanguageUsed"));   
+    AppPreferences.Boards.localeChanged(); 
   }
 
   private void selectWorkSpace(Component parentComponent) {

File: src/main/java/com/cburch/logisim/gui/log/OptionsPanel.java
Patch:
@@ -559,6 +559,7 @@ public String getTitle() {
   @Override
   public void localeChanged() {
     selectionPanel.setBorder(BorderFactory.createTitledBorder(S.get("selectionLabel")));
+    selectionButton.setText(S.get("buttonAddRemoveSignals"));  
     modePanel.setBorder(BorderFactory.createTitledBorder(S.get("modeLabel")));
     historyPanel.setBorder(BorderFactory.createTitledBorder(S.get("historyLabel")));
     stepTime.setText(S.get("stepTime"));

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -464,8 +464,8 @@ public static int getIconBorder() {
   public static final PrefMonitor<String> SelectedBoard =
       create(new PrefMonitorString("SelectedBoard", null));
 
-  public static final String EXTERNAL_BOARDS = "ExternalBoards";
   public static final FpgaBoards Boards = new FpgaBoards();
+
   public static final PrefMonitor<Boolean> SupressGatedClockWarnings =
       create(new PrefMonitorBoolean("NoGatedClockWarnings", false));
   public static final PrefMonitor<Boolean> SupressOpenPinWarnings =

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -39,7 +39,7 @@ class WindowOptions extends OptionsPanel {
   private final PrefOptionList canvasPlacement;
   private final PrefOptionList toolbarPlacement;
   
-  private final JButton ResetWindowLayoutButton;
+  private final JButton resetWindowLayoutButton;
   private final ColorChooserButton canvasBgColor;
   private final JLabel canvasBgColorTitle;
   private final ColorChooserButton gridBgColor;
@@ -239,7 +239,7 @@ public void localeChanged() {
     lookfeelLabel.setText(S.get("windowToolbarLookandfeel"));
     importantA.setText(S.get("windowToolbarPleaserestart"));
     importantB.setText(S.get("windowToolbarImportant"));
-    ResetWindowLayoutButton.setText(S.get("windowToolbarReset"));
+    resetWindowLayoutButton.setText(S.get("windowToolbarReset"));
     canvasBgColorTitle.setText(S.get("windowCanvasBgColor"));
     gridBgColorTitle.setText(S.get("windowGridBgColor"));
     gridDotColorTitle.setText(S.get("windowGridDotColor"));

File: src/main/java/com/cburch/logisim/prefs/FpgaBoards.java
Patch:
@@ -187,7 +187,7 @@ public void actionPerformed(ActionEvent e) {
   private JLabel extBoardPanelTitl;
   private JButton removeButton;
   private JComboBox<String> boardSelector;
-  private final externalBoardModel extBoardModel = new ExternalBoardModel();
+  private final ExternalBoardModel extBoardModel = new ExternalBoardModel();
 
   public FpgaBoards() {
     final var prefs = AppPreferences.getPrefs();

File: src/main/java/com/cburch/logisim/fpga/prefs/FpgaOptions.java
Patch:
@@ -274,6 +274,8 @@ public void localeChanged() {
     mapPan.setBorder(BorderFactory.createTitledBorder(S.get("MapColors")));
     ReportPan.setBorder(BorderFactory.createTitledBorder(S.get("ReporterOptions")));
     vhdlPan.setBorder(BorderFactory.createTitledBorder(S.get("VhdlOptions")));
+    HDL_Used.getJLabel().setText(S.get("HDLLanguageUsed"));   
+    AppPreferences.Boards.localeChanged(); 
   }
 
   private void selectWorkSpace(Component parentComponent) {

File: src/main/java/com/cburch/logisim/gui/log/OptionsPanel.java
Patch:
@@ -559,6 +559,7 @@ public String getTitle() {
   @Override
   public void localeChanged() {
     selectionPanel.setBorder(BorderFactory.createTitledBorder(S.get("selectionLabel")));
+    selectionButton.setText(S.get("buttonAddRemoveSignals"));  
     modePanel.setBorder(BorderFactory.createTitledBorder(S.get("modeLabel")));
     historyPanel.setBorder(BorderFactory.createTitledBorder(S.get("historyLabel")));
     stepTime.setText(S.get("stepTime"));

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -464,8 +464,8 @@ public static int getIconBorder() {
   public static final PrefMonitor<String> SelectedBoard =
       create(new PrefMonitorString("SelectedBoard", null));
 
-  public static final String EXTERNAL_BOARDS = "ExternalBoards";
   public static final FpgaBoards Boards = new FpgaBoards();
+
   public static final PrefMonitor<Boolean> SupressGatedClockWarnings =
       create(new PrefMonitorBoolean("NoGatedClockWarnings", false));
   public static final PrefMonitor<Boolean> SupressOpenPinWarnings =

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -295,7 +295,7 @@ public static void doLoad(File file, AnalyzerModel model, JFrame parent) throws
         int ix = line.indexOf('#');
         if (ix >= 0) line = line.substring(0, ix);
         line = line.trim();
-        if (line.equals("") || (line.matches("\\s*[~_=-][ ~_=-|]*"))) {
+        if (line.equals("") || (line.matches("\\s*[-~_=][- ~_=|]*"))) {
           continue;
         } else if (inputs.vars.isEmpty()) {
           validateHeader(line, inputs, outputs, lineno);

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -295,7 +295,7 @@ public static void doLoad(File file, AnalyzerModel model, JFrame parent) throws
         int ix = line.indexOf('#');
         if (ix >= 0) line = line.substring(0, ix);
         line = line.trim();
-        if (line.equals("") || (line.matches("\\s*[~_=-][ ~_=-|]*"))) {
+        if (line.equals("") || (line.matches("\\s*[-~_=][- ~_=|]*"))) {
           continue;
         } else if (inputs.vars.isEmpty()) {
           validateHeader(line, inputs, outputs, lineno);

File: src/main/java/com/cburch/logisim/gui/menu/MenuFile.java
Patch:
@@ -67,7 +67,6 @@ public MenuFile(LogisimMenuBar menubar) {
     /* add myself to hotkey sync */
     AppPreferences.gui_sync_objects.add(this);
 
-
     add(newi);
     add(merge);
     add(open);

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -49,10 +49,10 @@ class HotkeyOptions extends OptionsPanel {
    * This is the hotkey settings Tab in the preferences.
    * Allowing users to decide which hotkey to bind to the specific function.
    *
-   * To implement this into your code
+   * To add your own hotkey bindings from your code, you need some operations as follows.
    * Firstly add your hotkey configurations to AppPreferences and set up their strings in resources
-   * Fill the resetHotkeys in AppPreferences with your own code
-   * Setting up the hotkey in your code by accessing AppPreferences.HOTKEY_ADD_BY_YOU
+   * Fill the resetHotkeys method in AppPreferences, adding the reset code for your hotkeys
+   * Set up the hotkey in your code by accessing AppPreferences.HOTKEY_ADD_BY_YOU
    * Do not forget to sync with the user's settings.
    * You should go modifying hotkeySync in AppPreferences, adding your codes there.
    *

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -754,7 +754,7 @@ public boolean sharesSource(Tool other) {
     dataFlavor = f;
   }
 
-  public static final DataFlavor[] dataFlavors = new DataFlavor[]{dataFlavor};
+  public static final DataFlavor[] dataFlavors = new DataFlavor[] {dataFlavor};
 
   @Override
   public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -286,9 +286,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
      * */
     int code = e.getKeyCode();
     int modifier = e.getModifiersEx();
-    if (code == KeyEvent.VK_BACK_SPACE) {
-      /* Wait for more interesting codes */
-    } else if (code == KeyEvent.VK_DELETE) {
+    if (code == KeyEvent.VK_DELETE || code == KeyEvent.VK_BACK_SPACE) {
       if (!canvas.getSelection().isEmpty()) {
         final var act = SelectionActions.clear(canvas.getSelection());
         canvas.getProject().doAction(act);

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -51,7 +51,7 @@ public class SelectTool extends Tool {
   /**
    * Unique identifier of the tool, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
-   * <p>
+   *
    * Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Select Tool";

File: src/main/java/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -33,7 +33,7 @@
 
 public class AutoLabel {
 
-  public static final Integer[] USED_KEY_STROKES = new Integer[]{
+  public static final Integer[] USED_KEY_STROKES = new Integer[] {
       KeyEvent.VK_L, KeyEvent.VK_T, KeyEvent.VK_V, KeyEvent.VK_H, KeyEvent.VK_A};
   public static final Set<Integer> KEY_STROKES = new HashSet<>(Arrays.asList(USED_KEY_STROKES));
 

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -310,7 +310,8 @@ public void keyPressed(KeyEvent e) {
       int code = e.getKeyCode();
       if (code == KeyEvent.VK_CONTROL
           || code == KeyEvent.VK_ALT
-          || code == KeyEvent.VK_SHIFT) {
+          || code == KeyEvent.VK_SHIFT
+          || code == KeyEvent.VK_META) {
         return;
       }
       if (!((PrefMonitorKeyStroke) keyStrokePrefMonitor).metaCheckPass(modifier)) {

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -888,12 +888,12 @@ public static void resetWindow() {
 
   public static final PrefMonitor<KeyStroke> HOTKEY_WINDOW_CLOSE =
       create(new PrefMonitorKeyStroke("hotkeyWindowClose",
-          KeyEvent.VK_W, hotkeyMenuMask,
+          KeyEvent.VK_W, hotkeyMenuMask | InputEvent.SHIFT_DOWN_MASK,
           true, true));
 
   public static final PrefMonitor<KeyStroke> HOTKEY_WINDOW_MINIMIZE =
       create(new PrefMonitorKeyStroke("hotkeyWindowMinimize",
-          KeyEvent.VK_M, hotkeyMenuMask,
+          KeyEvent.VK_M, hotkeyMenuMask | InputEvent.SHIFT_DOWN_MASK,
           true, true));
 
   public static final PrefMonitor<KeyStroke> HOTKEY_FILE_EXPORT =

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -831,7 +831,8 @@ public static void resetWindow() {
   /* Hotkey Settings */
   /* Watch whether in headless mode */
   private static final int hotkeyMenuMask =
-      GraphicsEnvironment.isHeadless()?KeyEvent.ALT_DOWN_MASK:new JMenu().getToolkit().getMenuShortcutKeyMaskEx();
+      GraphicsEnvironment.isHeadless()
+          ? KeyEvent.ALT_DOWN_MASK : new JMenu().getToolkit().getMenuShortcutKeyMaskEx();
   public static final PrefMonitor<KeyStroke> HOTKEY_SIM_AUTO_PROPAGATE =
       create(new PrefMonitorKeyStroke("hotkeySimAutoPropagate", KeyEvent.VK_E, hotkeyMenuMask));
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -829,7 +829,9 @@ public static void resetWindow() {
       create(new PrefMonitorString("dialogDirectory", ""));
 
   /* Hotkey Settings */
-  private static final int hotkeyMenuMask = new JMenu().getToolkit().getMenuShortcutKeyMaskEx();
+  /* Watch whether in headless mode */
+  private static final int hotkeyMenuMask =
+      GraphicsEnvironment.isHeadless()?KeyEvent.ALT_DOWN_MASK:new JMenu().getToolkit().getMenuShortcutKeyMaskEx();
   public static final PrefMonitor<KeyStroke> HOTKEY_SIM_AUTO_PROPAGATE =
       create(new PrefMonitorKeyStroke("hotkeySimAutoPropagate", KeyEvent.VK_E, hotkeyMenuMask));
 

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -228,7 +228,7 @@ public void actionPerformed(ActionEvent e) {
       dl.addKeyListener(new KeyCaptureListener(waitingLabel, ((PrefMonitorKeyStroke) hotkeys[index]).isMenuHotkey(), this));
       dl.setContentPane(p);
       dl.setLocationRelativeTo(null);
-      dl.setSize(400, 200);
+      dl.setSize(400, 100);
       dl.setVisible(true);
     }
 

File: src/main/java/com/cburch/logisim/gui/menu/MenuProject.java
Patch:
@@ -119,7 +119,7 @@ void computeEnabled() {
 
   @Override
   public void hotkeyUpdate() {
-
+    /* not-used */
   }
 
   public void localeChanged() {

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorKeyStroke.java
Patch:
@@ -18,7 +18,6 @@ public class PrefMonitorKeyStroke extends AbstractPrefMonitor<KeyStroke> {
     private final byte[] dflt;
     private byte[] value;
     private boolean isMenuKey = true;
-
     private String _name;
 
     public PrefMonitorKeyStroke(String name, int keycode, int modifier) {

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -326,7 +326,7 @@ public static void getPartialMapInfo(Integer[][] partialMap,
             }
             if (xIndex > 4) xIndex = 4;
             if (yIndex > 7) yIndex = 7;
-            final var pinNr = segments[yIndex][xIndex] < 0 ? -1 : segments[yIndex][xIndex] + (8 * selectedSegment); 
+            final var pinNr = segments[yIndex][xIndex] < 0 ? -1 : segments[yIndex][xIndex] + (8 * selectedSegment);
             partialMap[w][h] = pinNr;
           }
         break;
@@ -505,8 +505,8 @@ public static void paintPartialMap(Graphics2D g,
                   realYIndexPlusOne = xIndex + 1 + segment * 5;
                 }
                 default -> {
-                  realXIndex = xIndex;
-                  realXIndexPlusOne = xIndex + 1;
+                  realXIndex = xIndex + segment * 5;
+                  realXIndexPlusOne = xIndex + 1 + segment * 5;
                   realYIndex = yIndex;
                   realYIndexPlusOne = yIndex + 1;
                 }

File: src/main/java/com/cburch/logisim/gui/prefs/HotkeyOptions.java
Patch:
@@ -58,7 +58,7 @@ public HotkeyOptions(PreferencesFrame window) {
     JPanel p=new JPanel();
     p.setLayout(new TableLayout(2));
     for(int i=0;i<hotkeys.length;i++){
-      key_labels[i] = new JLabel(((PrefMonitorKeyStroke)hotkeys[i]).getName()+"  ");
+      key_labels[i] = new JLabel(S.get(((PrefMonitorKeyStroke)hotkeys[i]).getName())+"  ");
       key_buttons[i]=new JButton(((PrefMonitorKeyStroke) hotkeys[i]).getString());
       key_buttons[i].addActionListener(listener);
       key_buttons[i].setActionCommand(i+"");

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -162,7 +162,8 @@ static void sort(Node top) {
       for (var portIndex = 0; portIndex < numberOfPorts; portIndex++) top.insertBefore(nodeSet[portIndex], null);
       return;
     }
-    if (childrenCount > 1 && !name.equals("project") && !name.equals("lib") && !name.equals("toolbar")) {
+    if (childrenCount > 1 && !name.equals("project") && !name.equals("lib") && !name.equals("toolbar")
+          && !name.equals("appear")) {
       final var nodeSet = new Node[childrenCount];
       for (var nodeIndex = 0; nodeIndex < childrenCount; nodeIndex++) nodeSet[nodeIndex] = children.item(nodeIndex);
       Arrays.sort(nodeSet, nodeComparator);

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -847,12 +847,12 @@ public static void resetWindow() {
   public static final PrefMonitor<KeyStroke> HOTKEY_EDIT_REDO=
           create(new PrefMonitorKeyStroke("hotkeyEditRedo", KeyEvent.VK_Z,KeyEvent.SHIFT_DOWN_MASK));
 
-  public static final PrefMonitor<KeyStroke> HOTKEY_EDIT_EXPORT=
+  public static final PrefMonitor<KeyStroke> HOTKEY_FILE_EXPORT=
           create(new PrefMonitorKeyStroke("hotkeyFileExport", KeyEvent.VK_E,KeyEvent.SHIFT_DOWN_MASK));
 
-  public static final PrefMonitor<KeyStroke> HOTKEY_EDIT_PRINT=
+  public static final PrefMonitor<KeyStroke> HOTKEY_FILE_PRINT=
           create(new PrefMonitorKeyStroke("hotkeyFilePrint", KeyEvent.VK_P,0));
 
-  public static final PrefMonitor<KeyStroke> HOTKEY_EDIT_QUIT=
+  public static final PrefMonitor<KeyStroke> HOTKEY_FILE_QUIT=
           create(new PrefMonitorKeyStroke("hotkeyFileQuit", KeyEvent.VK_Q,0));
 }

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -162,7 +162,8 @@ static void sort(Node top) {
       for (var portIndex = 0; portIndex < numberOfPorts; portIndex++) top.insertBefore(nodeSet[portIndex], null);
       return;
     }
-    if (childrenCount > 1 && !name.equals("project") && !name.equals("lib") && !name.equals("toolbar")) {
+    if (childrenCount > 1 && !name.equals("project") && !name.equals("lib") && !name.equals("toolbar")
+          && !name.equals("appear")) {
       final var nodeSet = new Node[childrenCount];
       for (var nodeIndex = 0; nodeIndex < childrenCount; nodeIndex++) nodeSet[nodeIndex] = children.item(nodeIndex);
       Arrays.sort(nodeSet, nodeComparator);

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -326,7 +326,7 @@ public static void getPartialMapInfo(Integer[][] partialMap,
             }
             if (xIndex > 4) xIndex = 4;
             if (yIndex > 7) yIndex = 7;
-            final var pinNr = segments[yIndex][xIndex] < 0 ? -1 : segments[yIndex][xIndex] + (8 * selectedSegment); 
+            final var pinNr = segments[yIndex][xIndex] < 0 ? -1 : segments[yIndex][xIndex] + (8 * selectedSegment);
             partialMap[w][h] = pinNr;
           }
         break;
@@ -505,8 +505,8 @@ public static void paintPartialMap(Graphics2D g,
                   realYIndexPlusOne = xIndex + 1 + segment * 5;
                 }
                 default -> {
-                  realXIndex = xIndex;
-                  realXIndexPlusOne = xIndex + 1;
+                  realXIndex = xIndex + segment * 5;
+                  realXIndexPlusOne = xIndex + 1 + segment * 5;
                   realYIndex = yIndex;
                   realYIndexPlusOne = yIndex + 1;
                 }

File: src/main/java/com/cburch/logisim/std/io/SevenSegmentScanningGenericHdlGenerator.java
Patch:
@@ -81,10 +81,12 @@ public static List<String> getComponentMap(char typeId, int nrOfRows, int nrOfCo
       case SevenSegmentScanningDriving.SEVEN_SEG_DECODED: componentMap.add(
           SevenSegmentScanningDecodedHdlGeneratorFactory.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, false)
               .getWithIndent());
+        break;
       case SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_HI,
         SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_LOW: componentMap.add(
             SevenSegmendScanningSelectedHdlGenerator.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, 
                 typeId == SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_LOW)).getWithIndent();
+        break;
     }
     if (Hdl.isVerilog()) componentMap.add("   sevenSegScan{{1}}", identifier);
     switch (typeId) {

File: src/main/java/com/cburch/logisim/std/io/SevenSegmentScanningGenericHdlGenerator.java
Patch:
@@ -81,10 +81,12 @@ public static List<String> getComponentMap(char typeId, int nrOfRows, int nrOfCo
       case SevenSegmentScanningDriving.SEVEN_SEG_DECODED: componentMap.add(
           SevenSegmentScanningDecodedHdlGeneratorFactory.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, false)
               .getWithIndent());
+      break;
       case SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_HI,
         SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_LOW: componentMap.add(
             SevenSegmendScanningSelectedHdlGenerator.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, 
                 typeId == SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_LOW)).getWithIndent();
+      break;
     }
     if (Hdl.isVerilog()) componentMap.add("   sevenSegScan{{1}}", identifier);
     switch (typeId) {

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -191,7 +191,8 @@ public boolean isMapped(int pin) {
   public boolean isInternalMapped(int pin) {
     if (pin < 0 || pin >= nrOfPins) return false;
     return isBoardMapped(pin)
-        && maps.get(pin).getIoComp().getType().equals(IoComponentTypes.LedArray);
+        && (maps.get(pin).getIoComp().getType().equals(IoComponentTypes.LedArray) 
+            || maps.get(pin).getIoComp().getType().equals(IoComponentTypes.SevenSegmentScanning));
   }
 
   public boolean isBoardMapped(int pin) {

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -255,7 +255,7 @@ private List<String> getPinLocStrings() {
         }
       }
     }
-    final var ledArrayMap = DownloadBase.getLedArrayMaps(mapInfo, rootNetList, boardInfo);
+    final var ledArrayMap = DownloadBase.getScanningMaps(mapInfo, rootNetList, boardInfo);
     for (final var key : ledArrayMap.keySet())
       contents.add("set_location_assignment {{1}} -to {{2}}", ledArrayMap.get(key), key);
     return contents.getWithIndent(4);

File: src/main/java/com/cburch/logisim/fpga/download/OpenFpgaDownload.java
Patch:
@@ -201,7 +201,7 @@ private List<String> getPinLocations() {
         }
       }
     }
-    final var LedArrayMap = DownloadBase.getLedArrayMaps(mapInfo, rootNetList, boardInfo);
+    final var LedArrayMap = DownloadBase.getScanningMaps(mapInfo, rootNetList, boardInfo);
     // TODO: add pull, drive and ioStandard
     for (var key : LedArrayMap.keySet()) {
       pinInfo.add("LOCATE COMP \"{{1}}\" SITE \"{{2}}\";", key, LedArrayMap.get(key));

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -241,7 +241,7 @@ private List<String> getPinLocStrings() {
         }
       }
     }
-    final var LedArrayMap = DownloadBase.getLedArrayMaps(mapInfo, rootNetList, boardInfo);
+    final var LedArrayMap = DownloadBase.getScanningMaps(mapInfo, rootNetList, boardInfo);
     for (final var key : LedArrayMap.keySet()) {
       contents.add("set_property PACKAGE_PIN {{1}} [get_ports {{{2}}}]", key, LedArrayMap.get(key));
     }

File: src/main/java/com/cburch/logisim/fpga/download/XilinxDownload.java
Patch:
@@ -296,7 +296,7 @@ private ArrayList<String> getPinLocStrings() {
         }
       }
     }
-    final var LedArrayMap = DownloadBase.getLedArrayMaps(mapInfo, rootNetList, boardInfo);
+    final var LedArrayMap = DownloadBase.getScanningMaps(mapInfo, rootNetList, boardInfo);
     for (var key : LedArrayMap.keySet()) {
       contents.add("NET \"" + LedArrayMap.get(key) + "\" LOC=\"" + key + "\";");
     }

File: src/main/java/com/cburch/logisim/fpga/file/BoardWriterClass.java
Patch:
@@ -38,6 +38,7 @@ public class BoardWriterClass {
   public static final String IO_SET_STRING = "BiDirPinSet";
   public static final String RECT_SET_STRING = "Rect_x_y_w_h";
   public static final String LED_ARRAY_INFO_STRING = "LedArrayInfo";
+  public static final String SCANNING_SEVEN_SEGMENT_INFO_STRING = "ScanningSevenSegInfo";
   public static final String MAP_ROTATION = "rotation";
   public static final String[] CLOCK_SECTION_STRINGS = {
     "Frequency", "FPGApin", "PullBehavior", "IOStandard"

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -101,7 +101,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       y += r + (int) (u - 2 * horz);
     } else if (u < 2 * horz + 2 * vert) {
       x += w;
-      y += (u - 2 * w - h);
+      y += (int) (u - 2 * w - h);
     } else {
       var rx = radius;
       var ry = radius;

File: src/main/java/com/cburch/logisim/gui/main/TickCounter.java
Patch:
@@ -88,7 +88,7 @@ public String getTickRate() {
     if (tickCount > TICKS_THRESHOLD_BEFORE_HISTORY_WEIGHT_REDUCTION) {
       tickCount -= WEIGHT_REDUCTION_TICKS_COUNT;
       final var nanoseconds = WEIGHT_REDUCTION_TICKS_COUNT / ticksPerNanoseconds;
-      startTime += nanoseconds;
+      startTime += (long) nanoseconds;
     }
 
     if (useKiloHertz) {

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -198,7 +198,7 @@ public void paintInstance(InstancePainter painter) {
     g.fillOval(x, y, 40, 40);
     g.setColor(Color.GRAY);
     GraphicsUtil.switchToWidth(g, 2);
-    for (byte k = 8; k <= 16; k += 4) {
+    for (var k = 8; k <= 16; k += 4) {
       g.drawOval(x + 20 - k, y + 20 - k, k * 2, k * 2);
     }
     GraphicsUtil.switchToWidth(g, 2);
@@ -364,7 +364,7 @@ public void threadFunc() {
             if (wf != BuzzerWaveform.Sine && smoothLevel > 0 && smoothWidth > 0) {
               var nsig = new double[values.length];
               for (var k = 0; k < smoothLevel; k++) {
-                var sum = 0;
+                double sum = 0.0;
                 for (var i = 0; i < values.length; i++) {
                   if (i > 2 * smoothWidth) {
                     nsig[i - smoothWidth - 1] =

File: src/main/java/com/cburch/logisim/std/io/extra/ProgrammableGeneratorState.java
Patch:
@@ -126,7 +126,7 @@ public void editWindow() {
     gbc.gridx = 2;
     panel.add(down, gbc);
     // 2 inputs a row
-    for (byte i = 0; i < inputs.length; i += 2) {
+    for (var i = 0; i < inputs.length; i += 2) {
       // number of state to edit
       statenumber = new JLabel(String.valueOf(i / 2 + 1));
       statenumber.setFont(state);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7400.java
Patch:
@@ -58,10 +58,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).and(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).and(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7402.java
Patch:
@@ -57,10 +57,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 0; i < 6; i += 3) {
+    for (var i = 0; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).or(state.getPortValue(i + 2)).not()), 1);
     }
-    for (byte i = 8; i < 12; i += 3) {
+    for (var i = 8; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).or(state.getPortValue(i - 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7404.java
Patch:
@@ -60,10 +60,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 1; i < 6; i += 2) {
+    for (var i = 1; i < 6; i += 2) {
       state.setPort(i, state.getPortValue(i - 1).not(), 1);
     }
-    for (byte i = 6; i < 12; i += 2) {
+    for (var i = 6; i < 12; i += 2) {
       state.setPort(i, state.getPortValue(i + 1).not(), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -50,10 +50,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).and(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).and(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74125.java
Patch:
@@ -51,12 +51,12 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
 
       if (state.getPortValue(i - 2) == Value.TRUE) state.setPort(i, Value.UNKNOWN, 1);
       else state.setPort(i, state.getPortValue(i - 1), 1);
     }
-    for (byte i = 6; i < 11; i += 3) {
+    for (var i = 6; i < 11; i += 3) {
       if (state.getPortValue(i + 2) == Value.TRUE) state.setPort(i, Value.UNKNOWN, 1);
       else state.setPort(i, state.getPortValue(i + 1), 1);
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -48,10 +48,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).xor(state.getPortValue(i - 2)).not() == Value.TRUE) ? Value.UNKNOWN : Value.FALSE, 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).xor(state.getPortValue(i + 2)).not() == Value.TRUE) ? Value.UNKNOWN : Value.FALSE, 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -51,10 +51,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).or(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).or(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7434.java
Patch:
@@ -70,10 +70,10 @@ public void paintInternal(
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 1; i < 6; i += 2) {
+    for (var i = 1; i < 6; i += 2) {
       state.setPort(i, state.getPortValue(i - 1), 1);
     }
-    for (byte i = 6; i < 12; i += 2) {
+    for (var i = 6; i < 12; i += 2) {
       state.setPort(i, state.getPortValue(i + 1), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7436.java
Patch:
@@ -60,10 +60,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).or(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).or(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl747266.java
Patch:
@@ -55,10 +55,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).xor(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).xor(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -51,10 +51,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).xor(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).xor(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -101,7 +101,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       y += r + (int) (u - 2 * horz);
     } else if (u < 2 * horz + 2 * vert) {
       x += w;
-      y += (u - 2 * w - h);
+      y += (int) (u - 2 * w - h);
     } else {
       var rx = radius;
       var ry = radius;

File: src/main/java/com/cburch/logisim/gui/main/TickCounter.java
Patch:
@@ -88,7 +88,7 @@ public String getTickRate() {
     if (tickCount > TICKS_THRESHOLD_BEFORE_HISTORY_WEIGHT_REDUCTION) {
       tickCount -= WEIGHT_REDUCTION_TICKS_COUNT;
       final var nanoseconds = WEIGHT_REDUCTION_TICKS_COUNT / ticksPerNanoseconds;
-      startTime += nanoseconds;
+      startTime += (long) nanoseconds;
     }
 
     if (useKiloHertz) {

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -198,7 +198,7 @@ public void paintInstance(InstancePainter painter) {
     g.fillOval(x, y, 40, 40);
     g.setColor(Color.GRAY);
     GraphicsUtil.switchToWidth(g, 2);
-    for (byte k = 8; k <= 16; k += 4) {
+    for (var k = 8; k <= 16; k += 4) {
       g.drawOval(x + 20 - k, y + 20 - k, k * 2, k * 2);
     }
     GraphicsUtil.switchToWidth(g, 2);
@@ -364,7 +364,7 @@ public void threadFunc() {
             if (wf != BuzzerWaveform.Sine && smoothLevel > 0 && smoothWidth > 0) {
               var nsig = new double[values.length];
               for (var k = 0; k < smoothLevel; k++) {
-                var sum = 0;
+                double sum = 0.0;
                 for (var i = 0; i < values.length; i++) {
                   if (i > 2 * smoothWidth) {
                     nsig[i - smoothWidth - 1] =

File: src/main/java/com/cburch/logisim/std/io/extra/ProgrammableGeneratorState.java
Patch:
@@ -126,7 +126,7 @@ public void editWindow() {
     gbc.gridx = 2;
     panel.add(down, gbc);
     // 2 inputs a row
-    for (byte i = 0; i < inputs.length; i += 2) {
+    for (var i = 0; i < inputs.length; i += 2) {
       // number of state to edit
       statenumber = new JLabel(String.valueOf(i / 2 + 1));
       statenumber.setFont(state);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7400.java
Patch:
@@ -58,10 +58,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).and(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).and(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7402.java
Patch:
@@ -57,10 +57,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 0; i < 6; i += 3) {
+    for (var i = 0; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).or(state.getPortValue(i + 2)).not()), 1);
     }
-    for (byte i = 8; i < 12; i += 3) {
+    for (var i = 8; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).or(state.getPortValue(i - 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7404.java
Patch:
@@ -60,10 +60,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 1; i < 6; i += 2) {
+    for (var i = 1; i < 6; i += 2) {
       state.setPort(i, state.getPortValue(i - 1).not(), 1);
     }
-    for (byte i = 6; i < 12; i += 2) {
+    for (var i = 6; i < 12; i += 2) {
       state.setPort(i, state.getPortValue(i + 1).not(), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -50,10 +50,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).and(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).and(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74125.java
Patch:
@@ -51,12 +51,12 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
 
       if (state.getPortValue(i - 2) == Value.TRUE) state.setPort(i, Value.UNKNOWN, 1);
       else state.setPort(i, state.getPortValue(i - 1), 1);
     }
-    for (byte i = 6; i < 11; i += 3) {
+    for (var i = 6; i < 11; i += 3) {
       if (state.getPortValue(i + 2) == Value.TRUE) state.setPort(i, Value.UNKNOWN, 1);
       else state.setPort(i, state.getPortValue(i + 1), 1);
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -48,10 +48,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).xor(state.getPortValue(i - 2)).not() == Value.TRUE) ? Value.UNKNOWN : Value.FALSE, 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).xor(state.getPortValue(i + 2)).not() == Value.TRUE) ? Value.UNKNOWN : Value.FALSE, 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -51,10 +51,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).or(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).or(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7434.java
Patch:
@@ -70,10 +70,10 @@ public void paintInternal(
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 1; i < 6; i += 2) {
+    for (var i = 1; i < 6; i += 2) {
       state.setPort(i, state.getPortValue(i - 1), 1);
     }
-    for (byte i = 6; i < 12; i += 2) {
+    for (var i = 6; i < 12; i += 2) {
       state.setPort(i, state.getPortValue(i + 1), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7436.java
Patch:
@@ -60,10 +60,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).or(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).or(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl747266.java
Patch:
@@ -55,10 +55,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, (state.getPortValue(i - 1).xor(state.getPortValue(i - 2)).not()), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, (state.getPortValue(i + 1).xor(state.getPortValue(i + 2)).not()), 1);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -51,10 +51,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void propagateTtl(InstanceState state) {
-    for (byte i = 2; i < 6; i += 3) {
+    for (var i = 2; i < 6; i += 3) {
       state.setPort(i, state.getPortValue(i - 1).xor(state.getPortValue(i - 2)), 1);
     }
-    for (byte i = 6; i < 12; i += 3) {
+    for (var i = 6; i < 12; i += 3) {
       state.setPort(i, state.getPortValue(i + 1).xor(state.getPortValue(i + 2)), 1);
     }
   }

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -85,6 +85,7 @@ public static int getFpgaInOutRequirement(IoComponentTypes comp) {
     return switch (comp) {
       case PortIo -> 8;
       case LocalBus -> 16;
+      case Pin -> 1;
       default -> 0;
     };
   }

File: src/main/java/com/cburch/logisim/std/io/SevenSegmentScanningGenericHdlGenerator.java
Patch:
@@ -79,8 +79,8 @@ public static List<String> getComponentMap(char typeId, int nrOfRows, int nrOfCo
                 : getSpecificHDLName(typeId));
     switch (typeId) {
       case SevenSegmentScanningDriving.SEVEN_SEG_DECODED: componentMap.add(
-        SevenSegmentScanningDecodedHdlGeneratorFactory.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, false)
-                  .getWithIndent());
+          SevenSegmentScanningDecodedHdlGeneratorFactory.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, false)
+              .getWithIndent());
       case SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_HI,
         SevenSegmentScanningDriving.SEVEN_SEG_SCANNING_ACTIVE_LOW: componentMap.add(
             SevenSegmendScanningSelectedHdlGenerator.getGenericMap(nrOfRows, nrOfColumns, FpgaClockFrequency, isActiveLow, 

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ProgramControlInstructions.java
Patch:
@@ -252,7 +252,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
         } else {
           sourceA = sourceB = 0;
           long target = SocSupport.convUnsignedInt(imm[0].getNumberValue());
-          long imml = pc - target - 4L;
+          long imml = target - pc - 4L;
           if (imml >= (1L << 15) || imml < -(1L << 15)) {
             valid = false;
             instr.setError(imm[0], S.getter("AssemblerImmediateOutOfRange"));
@@ -276,7 +276,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
           instr.setError(imm[0], S.getter("AssemblerExpextedImmediateOrLabel"));
         }
         long target = SocSupport.convUnsignedInt(imm[0].getNumberValue());
-        long imml = pc - target - 4L;
+        long imml = target - pc - 4L;
         if (imml >= (1L << 15) || imml < -(1L << 15)) {
           valid = false;
           instr.setError(imm[0], S.getter("AssemblerImmediateOutOfRange"));

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ProgramControlInstructions.java
Patch:
@@ -252,7 +252,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
         } else {
           sourceA = sourceB = 0;
           long target = SocSupport.convUnsignedInt(imm[0].getNumberValue());
-          long imml = pc - target - 4L;
+          long imml = target - pc - 4L;
           if (imml >= (1L << 15) || imml < -(1L << 15)) {
             valid = false;
             instr.setError(imm[0], S.getter("AssemblerImmediateOutOfRange"));
@@ -276,7 +276,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
           instr.setError(imm[0], S.getter("AssemblerExpextedImmediateOrLabel"));
         }
         long target = SocSupport.convUnsignedInt(imm[0].getNumberValue());
-        long imml = pc - target - 4L;
+        long imml = target - pc - 4L;
         if (imml >= (1L << 15) || imml < -(1L << 15)) {
           valid = false;
           instr.setError(imm[0], S.getter("AssemblerImmediateOutOfRange"));

File: src/main/java/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -357,9 +357,9 @@ private void updatePorts(Instance instance) {
         dy += ddy;
       }
     }
-    if (!wide && !vertical && botLeft)
+    if (!wide && !vertical && botLeft && inputs > 2)
       sel = sel.translate(-10, 0); // left side, adjust selector left
-    else if (!wide && vertical && !botLeft)
+    else if (!wide && vertical && !botLeft && inputs > 2)
       sel = sel.translate(0, -10); // top side, adjust selector up
     final var en = sel.translate(dir, 10);
     ps[inputs] = new Port(sel.getX(), sel.getY(), Port.INPUT, select.getWidth());

File: src/main/java/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -357,9 +357,9 @@ private void updatePorts(Instance instance) {
         dy += ddy;
       }
     }
-    if (!wide && !vertical && botLeft)
+    if (!wide && !vertical && botLeft && inputs > 2)
       sel = sel.translate(-10, 0); // left side, adjust selector left
-    else if (!wide && vertical && !botLeft)
+    else if (!wide && vertical && !botLeft && inputs > 2)
       sel = sel.translate(0, -10); // top side, adjust selector up
     final var en = sel.translate(dir, 10);
     ps[inputs] = new Port(sel.getX(), sel.getY(), Port.INPUT, select.getWidth());

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/XilinxSeries7SynthesizedClockHdlGeneratorFactory.java
Patch:
@@ -30,7 +30,8 @@ public class XilinxSeries7SynthesizedClockHdlGeneratorFactory extends Synthesize
    * Instantiates an HDL clock generator for the Xilinx 7-series FPGA.
    * A pre-multiplier and a pre-divider can be specified to set the output
    * frequency. There are limitations for the settings of each of these parameters.
-   * Base frequency must be 10Mhz or greater, which is edited here.
+   * See referenced docs. Base frequency must be 10Mhz or greater, which is edited here.
+   * 
    * @param fpga_clock_frequency  Clock frequency in hertz.
    * @param preMultiplier         A double to three decimals that will multiply the 
    *                              clock frequency.

File: src/main/java/com/cburch/logisim/fpga/download/DownloadBase.java
Patch:
@@ -197,7 +197,7 @@ protected boolean writeHDL(String selectedCircuit, Double frequency) {
         myBoardInformation.fpga.getClockFrequency(),
         preMultiplier,
         preDivider);
-    } catch(Exception e) {
+    } catch (Exception e) {
       Reporter.report.addFatalError(e.getMessage());
       return false;
     }

File: src/main/java/com/cburch/logisim/data/BitWidth.java
Patch:
@@ -79,7 +79,7 @@ public static BitWidth create(int width) {
 
   private static void ensurePrefab() {
     if (prefab == null) {
-      prefab = new BitWidth[Math.min(64, MAXWIDTH) + 1];
+      prefab = new BitWidth[MAXWIDTH + 1];
       prefab[0] = UNKNOWN;
       prefab[1] = ONE;
       for (int i = 2; i < prefab.length; i++) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -173,7 +173,7 @@ public String getParameterValue(AttributeSet attrs) {
               totalValue += bitWidth.getWidth();
             } else throw new UnsupportedOperationException(notAnIntExMsg);
           }
-          selectedValue = (long) Math.pow(totalValue, 2D);
+          selectedValue = (long) Math.pow(2D, totalValue);
           break;
 
         case MAP_LN2:

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -173,7 +173,7 @@ public String getParameterValue(AttributeSet attrs) {
               totalValue += bitWidth.getWidth();
             } else throw new UnsupportedOperationException(notAnIntExMsg);
           }
-          selectedValue = (long) Math.pow(totalValue, 2D);
+          selectedValue = (long) Math.pow(2D, totalValue);
           break;
 
         case MAP_LN2:

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -149,7 +149,7 @@ private void loadSimLimit(Integer val) {
       final var model = simLimit.getModel();
       for (var i = 0; i < model.getSize(); i++) {
         final var opt = (Integer) model.getElementAt(i);
-        if (opt == value) {
+        if (opt.equals(value)) {
           simLimit.setSelectedItem(opt);
         }
       }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -54,7 +54,6 @@ public SimulateOptions(OptionsFrame window) {
     final var simLimitPanel = new JPanel();
     simLimitPanel.add(simLimitLabel);
     simLimitPanel.add(simLimit);
-    simLimit.setSelectedIndex(2);
     simLimit.addActionListener(myListener);
 
     final var gateUndefinedPanel = new JPanel();
@@ -150,7 +149,7 @@ private void loadSimLimit(Integer val) {
       final var model = simLimit.getModel();
       for (var i = 0; i < model.getSize(); i++) {
         final var opt = (Integer) model.getElementAt(i);
-        if (opt == value) {
+        if (opt.equals(value)) {
           simLimit.setSelectedItem(opt);
         }
       }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -54,6 +54,7 @@ public SimulateOptions(OptionsFrame window) {
     final var simLimitPanel = new JPanel();
     simLimitPanel.add(simLimitLabel);
     simLimitPanel.add(simLimit);
+    simLimit.setSelectedIndex(2);
     simLimit.addActionListener(myListener);
 
     final var gateUndefinedPanel = new JPanel();

File: src/main/java/com/cburch/logisim/util/ZipClassLoader.java
Patch:
@@ -12,6 +12,7 @@
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.IOException;
+import java.net.URI;
 import java.net.URL;
 import java.util.HashMap;
 import java.util.LinkedList;
@@ -109,7 +110,7 @@ private void performFind(Request req) {
           final var zipEntry = zipFile.getEntry(res);
           if (zipEntry != null) {
             final var url = "jar:" + zipPath.toURI() + "!/" + res;
-            ret = new URL(url);
+            ret = URI.create(url).toURL();
             if (DEBUG >= 3) logger.debug("  found: " + url);
           }
         }

File: src/main/java/com/cburch/logisim/util/ZipClassLoader.java
Patch:
@@ -12,6 +12,7 @@
 import java.io.BufferedInputStream;
 import java.io.File;
 import java.io.IOException;
+import java.net.URI;
 import java.net.URL;
 import java.util.HashMap;
 import java.util.LinkedList;
@@ -109,7 +110,7 @@ private void performFind(Request req) {
           final var zipEntry = zipFile.getEntry(res);
           if (zipEntry != null) {
             final var url = "jar:" + zipPath.toURI() + "!/" + res;
-            ret = new URL(url);
+            ret = URI.create(url).toURL();
             if (DEBUG >= 3) logger.debug("  found: " + url);
           }
         }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl747266.java
Patch:
@@ -45,7 +45,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     final var portwidth = 18;
     final var portheight = 15;
     final var youtput = y + (up ? 20 : 40);
-    Drawgates.paintXor(g, x + 44, youtput, portwidth - 4, portheight, true);
+    Drawgates.paintXor(g, x + 44, youtput, portwidth, portheight, true);
     // output line
     Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up, height);
     // input lines

File: src/main/java/com/cburch/logisim/data/BitWidth.java
Patch:
@@ -79,7 +79,7 @@ public static BitWidth create(int width) {
 
   private static void ensurePrefab() {
     if (prefab == null) {
-      prefab = new BitWidth[Math.min(64, MAXWIDTH) + 1];
+      prefab = new BitWidth[MAXWIDTH + 1];
       prefab[0] = UNKNOWN;
       prefab[1] = ONE;
       for (int i = 2; i < prefab.length; i++) {

File: src/main/java/com/cburch/logisim/std/ttl/Ttl747266.java
Patch:
@@ -45,7 +45,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     final var portwidth = 18;
     final var portheight = 15;
     final var youtput = y + (up ? 20 : 40);
-    Drawgates.paintXor(g, x + 44, youtput, portwidth - 4, portheight, true);
+    Drawgates.paintXor(g, x + 44, youtput, portwidth, portheight, true);
     // output line
     Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up, height);
     // input lines

File: src/main/java/com/cburch/logisim/soc/bus/SocBusAttributes.java
Patch:
@@ -114,7 +114,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
     }
     if (attr == StdAttr.LABEL_VISIBILITY) {
       final var v = (Boolean) value;
-      if (labelVisible != v) {
+      if (labelVisible.equals(v)) {
         labelVisible = v;
         fireAttributeValueChanged(attr, value, oldValue);
       }
@@ -126,7 +126,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
     }
     if (attr == SOC_TRACE_VISIBLE) {
       final var v = (Boolean) value;
-      if (traceVisible != v) {
+      if (traceVisible.equals(v)) {
         traceVisible = v;
         fireAttributeValueChanged(attr, value, oldValue);
       }

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -68,6 +68,8 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),
       new FactoryDescription(Ttl74166.class, S.getter("TTL74166"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
+      new FactoryDescription(Ttl74181.class, S.getter("TTL74181"), "ttl.gif"),
+      new FactoryDescription(Ttl74182.class, S.getter("TTL74182"), "ttl.gif"),
       new FactoryDescription(Ttl74240.class, S.getter("TTL74240"), "ttl.gif"),
       new FactoryDescription(Ttl74241.class, S.getter("TTL74241"), "ttl.gif"),
       new FactoryDescription(Ttl74244.class, S.getter("TTL74244"), "ttl.gif"),
@@ -78,6 +80,7 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),
       new FactoryDescription(Ttl74283.class, S.getter("TTL74283"), "ttl.gif"),
       new FactoryDescription(Ttl74377.class, S.getter("TTL74377"), "ttl.gif"),
+      new FactoryDescription(Ttl74381.class, S.getter("TTL74381"), "ttl.gif"),
       new FactoryDescription(Ttl747266.class, S.getter("TTL747266"), "ttl.gif"),
   };
 

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTop.java
Patch:
@@ -298,8 +298,7 @@ public void restart() {
         stop();
         start();
       }
-      default -> throw new UnsupportedOperationException(
-          "Cannot restart VHDL simulator from " + state + " state");
+      default -> throw new UnsupportedOperationException("Cannot restart VHDL simulator from " + state + " state");
     }
   }
 
@@ -314,7 +313,7 @@ public void send(String message) {
     socketClient.send(message);
   }
 
-  public void setEnabled(Boolean enable) {
+  public void setEnabled(boolean enable) {
     if (enable) enable();
     else disable();
   }

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -95,7 +95,7 @@ protected void configureNewInstance(Instance instance) {
 
   @Override
   public void paintInstance(InstancePainter painter) {
-    Graphics2D g2 = (Graphics2D) painter.getGraphics();
+    final var g2 = (Graphics2D) painter.getGraphics();
     g2.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
     painter.drawBounds();
     painter.drawLabel();

File: src/main/java/com/cburch/logisim/std/ttl/AbstractTtlGate.java
Patch:
@@ -221,8 +221,9 @@ protected void paintBase(InstancePainter painter, boolean drawname, boolean ghos
     var yp = y;
     var width = bds.getWidth();
     var height = bds.getHeight();
-    if (!ghost)
+    if (!ghost) {
       g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
+    }
     for (byte i = 0; i < this.pinNumber; i++) {
       if (i < this.pinNumber / 2) {
         if (dir == Direction.WEST || dir == Direction.EAST) xp = i * 20 + (10 - PIN_WIDTH / 2) + x;

File: src/main/java/com/cburch/logisim/std/wiring/Pin.java
Patch:
@@ -1049,7 +1049,7 @@ private void drawOutputShape(
       }
       g2.translate(xpos, ypos);
       g2.rotate(rotation);
-      Color col = g.getColor();
+      final var col = g.getColor();
       if (isBus) {
         g.setColor(Value.multiColor);
         GraphicsUtil.switchToWidth(g, Wire.WIDTH_BUS);

File: src/main/java/com/cburch/logisim/std/wiring/PullResistor.java
Patch:
@@ -111,7 +111,7 @@ private void paintBase(InstancePainter painter, Value pullValue, Color inColor,
     boolean color = painter.shouldDrawColor();
     Direction facing = painter.getAttributeValue(StdAttr.FACING);
     Graphics g = painter.getGraphics();
-    Color baseColor = new Color(AppPreferences.COMPONENT_COLOR.get());
+    final var baseColor = new Color(AppPreferences.COMPONENT_COLOR.get());
     GraphicsUtil.switchToWidth(g, 3);
     if (color && inColor != null) g.setColor(inColor);
     if (facing == Direction.EAST) {

File: src/main/java/com/cburch/logisim/fpga/gui/HdlColorRenderer.java
Patch:
@@ -57,7 +57,8 @@ public Component getTableCellRendererComponent(JTable table, Object infoObj, boo
     // Render all the rest
     if (value.equals(REQUIRED_FIELD_STRING)) {
       // This field (mostly lables) is required to be set for FGPA support to work.
-      setCellColors(Color.RED);
+      // But this is not an error if user do not really care FPGA at this moment, so let's color differently.
+      setCellColors(Color.ORANGE);
       setHorizontalAlignment(JLabel.CENTER);
       setText(S.get("FPGAHdlRequired"));
     } else if ((value.length() == 7 || value.length() == 9) && value.indexOf('#') == 0) {

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -151,7 +151,7 @@ public void start() {
                   }
                 }
 
-                final var userInfoBox =                    new MessageBox(
+                final var userInfoBox = new MessageBox(
                         "Error starting VHDL simulator",
                         errorMessage.toString(),
                         OptionPane.ERROR_MESSAGE);

File: src/main/java/com/cburch/logisim/analyze/data/CoverColor.java
Patch:
@@ -20,7 +20,7 @@
 public class CoverColor implements PreferenceChangeListener {
   public static final CoverColor COVER_COLOR = new CoverColor();
 
-  private int index = -1;
+  private int index = 0;
   private final List<Color> colors = new ArrayList<>();
 
   private final List<PrefMonitor<Integer>> availableColors =
@@ -63,9 +63,8 @@ public Color getColor(int index) {
   }
 
   public Color getNext() {
-    index++;
     if (index < 0 || index >= colors.size()) index = 0;
-    return colors.get(index);
+    return colors.get(index++);
   }
 
   public void reset() {

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -58,7 +58,7 @@ public boolean containsDuplicate(VariableList data, Var oldVar, String name) {
   }
 
   public void add(Var variable) {
-    if (data.size() + variable.width >= maxSize) {
+    if (data.size() + variable.width > maxSize) {
       throw new IllegalArgumentException("maximum size is " + maxSize);
     }
     final var index = data.size();

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -70,8 +70,7 @@ private void init(int serverPort) {
     builder = new ProcessBuilder(command);
 
     Map<String, String> env = builder.environment();
-    env.put("LM_LICENSE_FILE", "1650@eilic01");
-
+    
     builder.directory(new File(VhdlSimConstants.SIM_PATH + "comp/"));
 
     /* Redirect error on stdout */

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -78,6 +78,7 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),
       new FactoryDescription(Ttl74283.class, S.getter("TTL74283"), "ttl.gif"),
       new FactoryDescription(Ttl74377.class, S.getter("TTL74377"), "ttl.gif"),
+      new FactoryDescription(Ttl747266.class, S.getter("TTL747266"), "ttl.gif"),
   };
 
   static final Attribute<Boolean> VCC_GND =

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -336,7 +336,7 @@ public static void save(
     }
   }
 
-  protected static void save(File f, MemContents src, String desc) throws IOException {
+  public static void save(File f, MemContents src, String desc) throws IOException {
     OutputStream out;
     try {
       out = new FileOutputStream(f);

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -58,7 +58,7 @@ public boolean containsDuplicate(VariableList data, Var oldVar, String name) {
   }
 
   public void add(Var variable) {
-    if (data.size() + variable.width >= maxSize) {
+    if (data.size() + variable.width > maxSize) {
       throw new IllegalArgumentException("maximum size is " + maxSize);
     }
     final var index = data.size();

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -70,8 +70,7 @@ private void init(int serverPort) {
     builder = new ProcessBuilder(command);
 
     Map<String, String> env = builder.environment();
-    env.put("LM_LICENSE_FILE", "1650@eilic01");
-
+    
     builder.directory(new File(VhdlSimConstants.SIM_PATH + "comp/"));
 
     /* Redirect error on stdout */

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/hex/Clip.java
Patch:
@@ -73,7 +73,7 @@ public void paste() {
         final var data = (long[]) xfer.getTransferData(binaryFlavor);
         numWords = data.length;
         var addrBits = 32 - Integer.numberOfLeadingZeros(numWords);
-        pasted = MemContents.create(addrBits, model.getValueWidth());
+        pasted = MemContents.create(addrBits, model.getValueWidth(), false);
         pasted.set(0, data);
       } catch (UnsupportedFlavorException | IOException e) {
         return;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -971,7 +971,7 @@ private static class HexReader extends FormatOptions {
 
     protected HexReader(BufferedLineReader in, int addrBits, int width) {
       this.in = in;
-      this.dst = MemContents.create(addrBits, width);
+      this.dst = MemContents.create(addrBits, width, false);
     }
 
     ////////////////////////////////////////////////////////

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      final var loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -41,7 +41,6 @@ class CanvasPainter implements PropertyChangeListener {
     this.canvas = canvas;
     this.grid = new GridPainter(canvas);
 
-    AppPreferences.PRINTER_VIEW.addPropertyChangeListener(this);
     AppPreferences.ATTRIBUTE_HALO.addPropertyChangeListener(this);
     AppPreferences.CANVAS_BG_COLOR.addPropertyChangeListener(this);
     AppPreferences.GRID_BG_COLOR.addPropertyChangeListener(this);
@@ -137,8 +136,7 @@ private void drawWithUserState(Graphics base, Graphics g, Project proj) {
 
     // draw circuit and selection
     final var circState = proj.getCircuitState();
-    final var printerView = AppPreferences.PRINTER_VIEW.getBoolean();
-    final var context = new ComponentDrawContext(canvas, circ, circState, base, g, printerView);
+    final var context = new ComponentDrawContext(canvas, circ, circState, base, g, false);
     context.setHighlightedWires(highlightedWires);
     circ.draw(context, hidden);
     sel.draw(context, hidden);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      final var newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -38,7 +38,6 @@ public LayoutOptions(PreferencesFrame window) {
     checks =
         new PrefBoolean[] {
           new PrefBoolean(AppPreferences.AntiAliassing, S.getter("layoutAntiAliasing")),
-          new PrefBoolean(AppPreferences.PRINTER_VIEW, S.getter("layoutPrinterView")),
           new PrefBoolean(AppPreferences.ATTRIBUTE_HALO, S.getter("layoutAttributeHalo")),
           new PrefBoolean(AppPreferences.COMPONENT_TIPS, S.getter("layoutShowTips")),
           new PrefBoolean(AppPreferences.MOVE_KEEP_CONNECT, S.getter("layoutMoveKeepConnect")),

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -65,7 +65,7 @@ public LocalePreference() {
 
       String localeStr = this.get();
       if (!("".equals(localeStr))) {
-        LocaleManager.setLocale(new Locale(localeStr));
+        LocaleManager.setLocale(Locale.forLanguageTag(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);
       myListener.localeChanged();
@@ -530,8 +530,6 @@ public static void setDefaultGridColors() {
   // Layout preferences
   public static final String ADD_AFTER_UNCHANGED = "unchanged";
   public static final String ADD_AFTER_EDIT = "edit";
-  public static final PrefMonitor<Boolean> PRINTER_VIEW =
-      create(new PrefMonitorBoolean("printerView", false));
   public static final PrefMonitor<Boolean> ATTRIBUTE_HALO =
       create(new PrefMonitorBoolean("attributeHalo", true));
   public static final PrefMonitor<Boolean> COMPONENT_TIPS =

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -321,7 +321,7 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     recalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits);
+      contents = MemContents.create(addrBits, dataBits, false);
     } else {
       contents.setDimensions(addrBits, dataBits);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -128,7 +128,7 @@ public String getHDLName(AttributeSet attrs) {
   private MemContents getNewContents(AttributeSet attrs) {
     final var contents =
         MemContents.create(
-            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth());
+            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth(), true);
     contents.condFillRandom();
     return contents;
   }

File: src/main/java/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -80,7 +80,7 @@ static void register(MemContents value, Project proj) {
   private AttributeOption appearance = AppPreferences.getDefaultAppearance();
 
   RomAttributes() {
-    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth());
+    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -63,8 +63,11 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74158.class, S.getter("TTL74158"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
       new FactoryDescription(Ttl74163.class, S.getter("TTL74163"), "ttl.gif"),
+      new FactoryDescription(Ttl74164.class, S.getter("TTL74164"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
+      new FactoryDescription(Ttl74192.class, S.getter("TTL74192"), "ttl.gif"),
+      new FactoryDescription(Ttl74193.class, S.getter("TTL74193"), "ttl.gif"),
       new FactoryDescription(Ttl74245.class, S.getter("TTL74245"), "ttl.gif"),
       new FactoryDescription(Ttl74266.class, S.getter("TTL74266"), "ttl.gif"),
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,7 @@ public static void setLocale(Locale loc) {
         }
       }
       if (select == null) {
-        select = Objects.requireNonNullElseGet(backup, () -> new Locale("en"));
+        select = Objects.requireNonNullElseGet(backup, () -> Locale.ENGLISH);
       }
 
       curLocale = select;
@@ -224,7 +224,7 @@ public JComponent createLocaleSelector() {
     var locales = getLocaleOptions();
     if (locales == null || locales.length == 0) {
       var cur = getLocale();
-      if (cur == null) cur = new Locale("en");
+      if (cur == null) cur = Locale.ENGLISH;
       locales = new Locale[] {cur};
     }
     return new JScrollPane(new LocaleSelector(locales));
@@ -277,7 +277,7 @@ public Locale[] getLocaleOptions() {
         country = null;
       }
       if (language != null) {
-        final var loc = country == null ? new Locale(language) : new Locale(language, country);
+        final var loc = new Locale.Builder().setLanguage(language).setRegion(country).build();
         retl.add(loc);
       }
     }

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/test/java/com/cburch/logisim/gui/hex/HexFileTest.java
Patch:
@@ -39,7 +39,7 @@ private void compare(
       int wordSize,
       HashMap<Long, Long> values)
       throws IOException {
-    final var memory = MemContents.create(addressSize, wordSize);
+    final var memory = MemContents.create(addressSize, wordSize, true);
     if (desc.startsWith("Binary") || desc.startsWith("ASCII") || !autodetect) {
       // these can't be auto-detected
       if (!HexFile.open(memory, savedFile, desc)) {
@@ -97,7 +97,7 @@ public final void testSaveLoadMemoryContents(int[] triple)
 
     final var rng = new Random(index * addressSize * wordSize + 1);
 
-    final var memoryContents = MemContents.create(addressSize, wordSize);
+    final var memoryContents = MemContents.create(addressSize, wordSize, true);
 
     final var values = new HashMap<Long, Long>();
     // (1L << size) doesn't work if size is 64

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/hex/Clip.java
Patch:
@@ -73,7 +73,7 @@ public void paste() {
         final var data = (long[]) xfer.getTransferData(binaryFlavor);
         numWords = data.length;
         var addrBits = 32 - Integer.numberOfLeadingZeros(numWords);
-        pasted = MemContents.create(addrBits, model.getValueWidth());
+        pasted = MemContents.create(addrBits, model.getValueWidth(), false);
         pasted.set(0, data);
       } catch (UnsupportedFlavorException | IOException e) {
         return;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -971,7 +971,7 @@ private static class HexReader extends FormatOptions {
 
     protected HexReader(BufferedLineReader in, int addrBits, int width) {
       this.in = in;
-      this.dst = MemContents.create(addrBits, width);
+      this.dst = MemContents.create(addrBits, width, false);
     }
 
     ////////////////////////////////////////////////////////

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      final var loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -41,7 +41,6 @@ class CanvasPainter implements PropertyChangeListener {
     this.canvas = canvas;
     this.grid = new GridPainter(canvas);
 
-    AppPreferences.PRINTER_VIEW.addPropertyChangeListener(this);
     AppPreferences.ATTRIBUTE_HALO.addPropertyChangeListener(this);
     AppPreferences.CANVAS_BG_COLOR.addPropertyChangeListener(this);
     AppPreferences.GRID_BG_COLOR.addPropertyChangeListener(this);
@@ -137,8 +136,7 @@ private void drawWithUserState(Graphics base, Graphics g, Project proj) {
 
     // draw circuit and selection
     final var circState = proj.getCircuitState();
-    final var printerView = AppPreferences.PRINTER_VIEW.getBoolean();
-    final var context = new ComponentDrawContext(canvas, circ, circState, base, g, printerView);
+    final var context = new ComponentDrawContext(canvas, circ, circState, base, g, false);
     context.setHighlightedWires(highlightedWires);
     circ.draw(context, hidden);
     sel.draw(context, hidden);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      final var newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -38,7 +38,6 @@ public LayoutOptions(PreferencesFrame window) {
     checks =
         new PrefBoolean[] {
           new PrefBoolean(AppPreferences.AntiAliassing, S.getter("layoutAntiAliasing")),
-          new PrefBoolean(AppPreferences.PRINTER_VIEW, S.getter("layoutPrinterView")),
           new PrefBoolean(AppPreferences.ATTRIBUTE_HALO, S.getter("layoutAttributeHalo")),
           new PrefBoolean(AppPreferences.COMPONENT_TIPS, S.getter("layoutShowTips")),
           new PrefBoolean(AppPreferences.MOVE_KEEP_CONNECT, S.getter("layoutMoveKeepConnect")),

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -65,7 +65,7 @@ public LocalePreference() {
 
       String localeStr = this.get();
       if (!("".equals(localeStr))) {
-        LocaleManager.setLocale(new Locale(localeStr));
+        LocaleManager.setLocale(Locale.forLanguageTag(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);
       myListener.localeChanged();
@@ -530,8 +530,6 @@ public static void setDefaultGridColors() {
   // Layout preferences
   public static final String ADD_AFTER_UNCHANGED = "unchanged";
   public static final String ADD_AFTER_EDIT = "edit";
-  public static final PrefMonitor<Boolean> PRINTER_VIEW =
-      create(new PrefMonitorBoolean("printerView", false));
   public static final PrefMonitor<Boolean> ATTRIBUTE_HALO =
       create(new PrefMonitorBoolean("attributeHalo", true));
   public static final PrefMonitor<Boolean> COMPONENT_TIPS =

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -321,7 +321,7 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     recalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits);
+      contents = MemContents.create(addrBits, dataBits, false);
     } else {
       contents.setDimensions(addrBits, dataBits);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -128,7 +128,7 @@ public String getHDLName(AttributeSet attrs) {
   private MemContents getNewContents(AttributeSet attrs) {
     final var contents =
         MemContents.create(
-            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth());
+            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth(), true);
     contents.condFillRandom();
     return contents;
   }

File: src/main/java/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -80,7 +80,7 @@ static void register(MemContents value, Project proj) {
   private AttributeOption appearance = AppPreferences.getDefaultAppearance();
 
   RomAttributes() {
-    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth());
+    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -63,8 +63,11 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74158.class, S.getter("TTL74158"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
       new FactoryDescription(Ttl74163.class, S.getter("TTL74163"), "ttl.gif"),
+      new FactoryDescription(Ttl74164.class, S.getter("TTL74164"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
+      new FactoryDescription(Ttl74192.class, S.getter("TTL74192"), "ttl.gif"),
+      new FactoryDescription(Ttl74193.class, S.getter("TTL74193"), "ttl.gif"),
       new FactoryDescription(Ttl74245.class, S.getter("TTL74245"), "ttl.gif"),
       new FactoryDescription(Ttl74266.class, S.getter("TTL74266"), "ttl.gif"),
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,7 @@ public static void setLocale(Locale loc) {
         }
       }
       if (select == null) {
-        select = Objects.requireNonNullElseGet(backup, () -> new Locale("en"));
+        select = Objects.requireNonNullElseGet(backup, () -> Locale.ENGLISH);
       }
 
       curLocale = select;
@@ -224,7 +224,7 @@ public JComponent createLocaleSelector() {
     var locales = getLocaleOptions();
     if (locales == null || locales.length == 0) {
       var cur = getLocale();
-      if (cur == null) cur = new Locale("en");
+      if (cur == null) cur = Locale.ENGLISH;
       locales = new Locale[] {cur};
     }
     return new JScrollPane(new LocaleSelector(locales));
@@ -277,7 +277,7 @@ public Locale[] getLocaleOptions() {
         country = null;
       }
       if (language != null) {
-        final var loc = country == null ? new Locale(language) : new Locale(language, country);
+        final var loc = new Locale.Builder().setLanguage(language).setRegion(country).build();
         retl.add(loc);
       }
     }

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/test/java/com/cburch/logisim/gui/hex/HexFileTest.java
Patch:
@@ -39,7 +39,7 @@ private void compare(
       int wordSize,
       HashMap<Long, Long> values)
       throws IOException {
-    final var memory = MemContents.create(addressSize, wordSize);
+    final var memory = MemContents.create(addressSize, wordSize, true);
     if (desc.startsWith("Binary") || desc.startsWith("ASCII") || !autodetect) {
       // these can't be auto-detected
       if (!HexFile.open(memory, savedFile, desc)) {
@@ -97,7 +97,7 @@ public final void testSaveLoadMemoryContents(int[] triple)
 
     final var rng = new Random(index * addressSize * wordSize + 1);
 
-    final var memoryContents = MemContents.create(addressSize, wordSize);
+    final var memoryContents = MemContents.create(addressSize, wordSize, true);
 
     final var values = new HashMap<Long, Long>();
     // (1L << size) doesn't work if size is 64

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -63,8 +63,11 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74158.class, S.getter("TTL74158"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
       new FactoryDescription(Ttl74163.class, S.getter("TTL74163"), "ttl.gif"),
+      new FactoryDescription(Ttl74164.class, S.getter("TTL74164"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
+      new FactoryDescription(Ttl74192.class, S.getter("TTL74192"), "ttl.gif"),
+      new FactoryDescription(Ttl74193.class, S.getter("TTL74193"), "ttl.gif"),
       new FactoryDescription(Ttl74245.class, S.getter("TTL74245"), "ttl.gif"),
       new FactoryDescription(Ttl74266.class, S.getter("TTL74266"), "ttl.gif"),
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      final var loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      final var newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      final var loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      final var newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      final var loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      final var newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceAnchor.java
Patch:
@@ -120,8 +120,8 @@ public void paint(Graphics g, HandleGesture gesture) {
   public Element toSvgElement(Document doc) {
     final var loc = getLocation();
     final var ret = doc.createElement("circ-anchor");
-    ret.setAttribute("x", "" + loc.getX());
-    ret.setAttribute("y", "" + loc.getY());
+    ret.setAttribute("x", Integer.toString(loc.getX()));
+    ret.setAttribute("y", Integer.toString(loc.getY()));
     ret.setAttribute("facing", factingDirection.toString());
     return ret;
   }

File: src/main/java/com/cburch/logisim/data/Location.java
Patch:
@@ -20,8 +20,8 @@
 public class Location implements Comparable<Location> {
   public static Location create(int x, int y, boolean hasToSnap) {
     // we round to half-grid base
-    final var xrounded = hasToSnap ? Math.round(x/5)*5 : x;
-    final var yrounded = hasToSnap ? Math.round(y/5)*5 : y;
+    final var xrounded = hasToSnap ? Math.round(x / 5) * 5 : x;
+    final var yrounded = hasToSnap ? Math.round(y / 5) * 5 : y;
     int hashCode = 31 * xrounded + yrounded;
     Object ret = cache.get(hashCode);
     if (ret != null) {

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -56,7 +56,7 @@ public void setTool(CanvasTool value) {
   }
 
   private void handlePopupTrigger(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var objects = canvas.getModel().getObjectsFromTop();
     CanvasObject clicked = null;
     for (final var o : objects) {
@@ -77,7 +77,7 @@ private void handlePopupTrigger(MouseEvent e) {
   }
 
   private void handlePorts(MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), true);
     final var objects = canvas.getModel().getObjectsFromTop();
     final var ports = new ArrayList<CanvasObject>();
     CanvasObject newSelectedPort = null;

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -90,7 +90,7 @@ public Set<CanvasObject> getDrawsSuppressed() {
   }
 
   public Location getMovingDelta() {
-    return Location.create(moveDx, moveDy);
+    return Location.create(moveDx, moveDy, false);
   }
 
   public Set<CanvasObject> getSelected() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -112,7 +112,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
     final var w = bds.getWidth();
     final var h = bds.getHeight();
     for (var i = 0; i < GENERATE_RANDOM_TRIES; i++) {
-      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h));
+      final var loc = Location.create(x + rand.nextInt(w), y + rand.nextInt(h), false);
       if (contains(loc, false)) return loc;
     }
     return null;

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -34,7 +34,7 @@ public boolean equals(Object other) {
   }
 
   public Location getLocation() {
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   public CanvasObject getObject() {

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -68,7 +68,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -190,15 +190,15 @@ public List<Handle> getHandles(HandleGesture gesture) {
           } else if (next == null) {
             r = LineUtil.snapTo8Cardinals(prev, x, y);
           } else {
-            final var to = Location.create(x, y);
+            final var to = Location.create(x, y, false);
             final var a = LineUtil.snapTo8Cardinals(prev, x, y);
             final var b = LineUtil.snapTo8Cardinals(next, x, y);
             final var ad = a.manhattanDistanceTo(to);
             final var bd = b.manhattanDistanceTo(to);
             r = ad < bd ? a : b;
           }
         } else {
-          r = Location.create(x, y);
+          r = Location.create(x, y, false);
         }
         ret[i] = new Handle(this, r);
       } else {
@@ -250,7 +250,7 @@ private Location getRandomBoundaryPoint(Random rand) {
         final var u = Math.random();
         final var x = (int) Math.round(p.getX() + u * (q.getX() - p.getX()));
         final var y = (int) Math.round(p.getY() + u * (q.getY() - p.getY()));
-        return Location.create(x, y);
+        return Location.create(x, y, false);
       }
     }
   }

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -49,7 +49,7 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
       final var h1 = ret.nextHandle;
       final var p =
           LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
-      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
+      ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]), false);
       return ret;
     }
   }

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -74,7 +74,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -119,7 +119,7 @@ protected Location getRandomPoint(Bounds bds, Random rand) {
       x += rand.nextInt(d) - d / 2;
       y += rand.nextInt(d) - d / 2;
     }
-    return Location.create(x, y);
+    return Location.create(x, y, false);
   }
 
   @Override

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -94,7 +94,7 @@ public EditableLabel getLabel() {
   }
 
   public Location getLocation() {
-    return Location.create(label.getX(), label.getY());
+    return Location.create(label.getX(), label.getY(), false);
   }
 
   public String getText() {

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -150,7 +150,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
       return;
     }
 
-    final var loc = Location.create(mx, my);
+    final var loc = Location.create(mx, my, false);
     final var locs = locations;
     if (!active) {
       locs.clear();
@@ -203,14 +203,14 @@ private void updateMouse(Canvas canvas, int mx, int my, int mods) {
         final var nextLast = locations.get(index - 1);
         newLast = LineUtil.snapTo8Cardinals(nextLast, mx, my);
       } else {
-        newLast = Location.create(mx, my);
+        newLast = Location.create(mx, my, false);
       }
       if ((mods & MouseEvent.CTRL_DOWN_MASK) != 0) {
         var lastX = newLast.getX();
         var lastY = newLast.getY();
         lastX = canvas.snapX(lastX);
         lastY = canvas.snapY(lastY);
-        newLast = Location.create(lastX, lastY);
+        newLast = Location.create(lastX, lastY, false);
       }
 
       if (!newLast.equals(last)) {

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -132,7 +132,7 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    final var loc = Location.create(e.getX(), e.getY());
+    final var loc = Location.create(e.getX(), e.getY(), false);
     final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -121,7 +121,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     var found = false;
     final var mx = e.getX();
     final var my = e.getY();
-    final var mloc = Location.create(mx, my);
+    final var mloc = Location.create(mx, my, false);
     for (final var o : canvas.getModel().getObjectsFromTop()) {
       if (o instanceof Text && o.contains(mloc, true)) {
         clicked = (Text) o;

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.logisim.tools.WireRepair;
 import com.cburch.logisim.tools.WireRepairData;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringUtil;
 import javax.swing.JPopupMenu;
 
 public class Splitter extends ManagedComponent
@@ -117,7 +116,7 @@ private synchronized void configureComponent() {
     final var ends = new EndData[fanout + 1];
     ends[0] = new EndData(origin, BitWidth.create(bitEnd.length), EndData.INPUT_OUTPUT);
     for (var i = 0; i < fanout; i++) {
-      ends[i + 1] = new EndData(Location.create(x, y), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
+      ends[i + 1] = new EndData(Location.create(x, y, true), BitWidth.create(endWidth[i + 1]), EndData.INPUT_OUTPUT);
       x += dx;
       y += dy;
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -56,7 +56,7 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrsBase) {
     final var attrs = (SplitterAttributes) attrsBase;
     context.getGraphics().setColor(color);
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, true);
     if (attrs.appear == SplitterAttributes.APPEAR_LEGACY) {
       SplitterPainter.drawLegacy(context, attrs, loc);
     } else {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -104,7 +104,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var xSpine = xi + (xi == x0 ? 0 : (xi < x0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -128,7 +128,7 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       var yi = y1;
       for (int i = 1; i <= fanout; i++) {
         if (context.getShowState()) {
-          g.setColor(state.getValue(Location.create(xi, yi)).getColor());
+          g.setColor(state.getValue(Location.create(xi, yi, true)).getColor());
         }
         final var ySpine = yi + (yi == y0 ? 0 : (yi < y0 ? 10 : -10));
         g.drawLine(xi, yi, xSpine, ySpine);
@@ -168,7 +168,7 @@ static void drawLines(ComponentDrawContext context, SplitterAttributes attrs, Lo
     GraphicsUtil.switchToWidth(g, Wire.WIDTH);
     for (int i = 0, n = attrs.fanout; i < n; i++) {
       if (showState) {
-        final var val = state.getValue(Location.create(x, y));
+        final var val = state.getValue(Location.create(x, y, true));
         g.setColor(val.getColor());
       }
       g.drawLine(x, y, x + dxEndSpine, y + dyEndSpine);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -28,7 +28,7 @@ private WireFactory() {}
 
   @Override
   public AttributeSet createAttributeSet() {
-    return Wire.create(Location.create(0, 0), Location.create(100, 0));
+    return Wire.create(Location.create(0, 0, true), Location.create(100, 0, true));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -51,7 +51,7 @@ public boolean hasNext() {
 
   @Override
   public Location next() {
-    final var ret = Location.create(curX, curY);
+    final var ret = Location.create(curX, curY, true);
     destReturned |= curX == destX && curY == destY;
     curX += deltaX;
     curY += deltaY;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -193,7 +193,7 @@ private AppearanceAnchor findAnchor() {
 
   private Location findAnchorLocation() {
     final var anchor = findAnchor();
-    return (anchor == null) ? Location.create(100, 100) : anchor.getLocation();
+    return (anchor == null) ? Location.create(100, 100, true) : anchor.getLocation();
   }
 
   void fireCircuitAppearanceChanged(int affected) {

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultCustomAppearance.java
Patch:
@@ -85,14 +85,14 @@ public static List<CanvasObject> build(Collection<Instance> pins) {
     final var rect = new Rectangle(rx, ry, width, height);
     rect.setValue(DrawAttr.STROKE_WIDTH, 1);
     ret.add(rect);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
   private static void placePins(
       List<CanvasObject> dest, List<Instance> pins, int x, int y, int dX, int dY) {
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       x += dX;
       y += dY;
     }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -118,7 +118,7 @@ public static List<CanvasObject> build(
     textLabel.getLabel().setColor(Color.WHITE);
     textLabel.getLabel().setFont(DrawAttr.DEFAULT_NAME_FONT);
     ret.add(textLabel);
-    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay)));
+    ret.add(new AppearanceAnchor(Location.create(rx + ax, ry + ay, true)));
     return ret;
   }
 
@@ -156,7 +156,7 @@ private static void placePins(
       rect.setValue(DrawAttr.PAINT_TYPE, DrawAttr.PAINT_FILL);
       rect.setValue(DrawAttr.FILL_COLOR, Color.BLACK);
       dest.add(rect);
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (pin.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
         var label = pin.getAttributeValue(StdAttr.LABEL);
         final var maxLength = 12;

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.logisim.std.wiring.Pin;
 import java.awt.Canvas;
 import java.awt.Color;
-import java.awt.Font;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashMap;
@@ -188,7 +187,7 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
       ret.add(label);
     }
 
-    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY)));
+    ret.add(new AppearanceAnchor(Location.create(rx + aX, ry + aY, true)));
     return ret;
   }
 
@@ -208,7 +207,7 @@ private static void placePins(
     final var color = Color.DARK_GRAY; // maybe GRAY instead?
     int ldx;
     for (final var pin : pins) {
-      dest.add(new AppearancePort(Location.create(x, y), pin));
+      dest.add(new AppearancePort(Location.create(x, y, true), pin));
       if (isLeftSide) {
         ldx = LABEL_OUTSIDE;
         hAlign = EditableLabel.LEFT;

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -106,7 +106,7 @@ public static Path fromSvgString(String s, Circuit circuit) throws IllegalArgume
           throw new IllegalArgumentException("Bad path element: " + ss);
         final var x = Integer.parseInt(ss.substring(p + 1, c).trim());
         final var y = Integer.parseInt(ss.substring(c + 1, e).trim());
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         final var name = unescape(ss.substring(0, p));
         var circ = circuit;
         if (i > 0) circ = ((SubcircuitFactory) elt[i - 1].getFactory()).getSubcircuit();
@@ -174,7 +174,7 @@ public boolean contains(Location loc, boolean assumeFilled) {
   }
 
   public Location getLocation() {
-    return Location.create(bounds.getX(), bounds.getY());
+    return Location.create(bounds.getX(), bounds.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -100,7 +100,7 @@ private static Location computeDefaultLocation(CircuitAppearance appear, Instanc
     }
     x = (x + 9) / 10 * 10; // round coordinates up to ensure they're on grid
     y = (y + 9) / 10 * 10;
-    var loc = Location.create(x, y);
+    var loc = Location.create(x, y, true);
     while (usedLocs.contains(loc)) {
       loc = loc.translate(dX, dY);
     }
@@ -140,7 +140,7 @@ private void performUpdate(
         }
       }
       if (anchor == null) {
-        anchor = new AppearanceAnchor(Location.create(100, 100));
+        anchor = new AppearanceAnchor(Location.create(100, 100, true));
       }
       final var dest = appearance.getCustomObjectsFromBottom().size();
       appearance.addObjects(dest, Collections.singleton(anchor));

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -109,7 +109,7 @@ public void mouseClicked(MouseEvent mouseEvent) {
   public void mousePressed(MouseEvent e) {
     final var sincePopup = System.currentTimeMillis() - curPopupTime;
     if (sincePopup > 50) hideCurrentPopup();
-    dragStart = Location.create(e.getX(), e.getY());
+    dragStart = Location.create(e.getX(), e.getY(), false);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -155,7 +155,7 @@ private void apply() {
     for (final var shape : model.getObjectsFromBottom()) {
       boundingBox = boundingBox.add(shape.getBounds());
     }
-    var loc = Location.create(((boundingBox.getX() + 9) / 10 * 10), ((boundingBox.getY() + 9) / 10 * 10));
+    var loc = Location.create(boundingBox.getX(), boundingBox.getY(), true);
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -442,7 +442,7 @@ public String getToolTipText(MouseEvent event) {
     boolean showTips = AppPreferences.COMPONENT_TIPS.getBoolean();
     if (showTips) {
       Canvas.snapToGrid(event);
-      Location loc = Location.create(event.getX(), event.getY());
+      Location loc = Location.create(event.getX(), event.getY(), false);
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -194,7 +194,7 @@ private HashMap<Component, Component> copyComponents(
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }
-      Location newLoc = Location.create(newX, newY);
+      Location newLoc = Location.create(newX, newY, false);
       Component copy = comp.getFactory().createComponent(newLoc, attrs);
       ret.put(comp, copy);
     }

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -166,7 +166,7 @@ public Instance getInstance() {
   }
 
   public Location getLocation() {
-    return comp == null ? Location.create(0, 0) : comp.getLocation();
+    return comp == null ? Location.create(0, 0, false) : comp.getLocation();
   }
 
   public Bounds getOffsetBounds() {

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -107,7 +107,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    final var out = Location.create(0, 0).translate(facing, -20);
+    final var out = Location.create(0, 0, true).translate(facing, -20);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -111,7 +111,7 @@ private void configurePorts(Instance instance) {
     final var facing = instance.getAttributeValue(StdAttr.FACING);
     final var bds = getOffsetBounds(instance.getAttributeSet());
     int d = Math.max(bds.getWidth(), bds.getHeight()) - 20;
-    final var loc0 = Location.create(0, 0);
+    final var loc0 = Location.create(0, 0, true);
     final var loc1 = loc0.translate(facing.reverse(), 20 + d);
     Location loc2;
     if (instance.getAttributeValue(ATTR_CONTROL) == LEFT_HANDED) {

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -124,7 +124,7 @@ private void configurePorts(Instance instance) {
 
     final var ports = new Port[2];
     ports[0] = new Port(0, 0, Port.OUTPUT, StdAttr.WIDTH);
-    Location out = Location.create(0, 0).translate(facing, dx);
+    Location out = Location.create(0, 0, true).translate(facing, dx);
     ports[1] = new Port(out.getX(), out.getY(), Port.INPUT, StdAttr.WIDTH);
     instance.setPorts(ports);
   }

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -109,7 +109,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/std/wiring/TransmissionGate.java
Patch:
@@ -92,7 +92,7 @@ protected void configureNewInstance(Instance instance) {
   public boolean contains(Location loc, AttributeSet attrs) {
     if (super.contains(loc, attrs)) {
       Direction facing = attrs.getValue(StdAttr.FACING);
-      Location center = Location.create(0, 0).translate(facing, -20);
+      Location center = Location.create(0, 0, true).translate(facing, -20);
       return center.manhattanDistanceTo(loc) < 24;
     } else {
       return false;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -532,7 +532,7 @@ public void mouseReleased(Canvas canvas, Graphics gfx, MouseEvent event) {
         for (var x = 0; x < matrix.getCopiesCountX(); x++) {
           for (var y = 0; y < matrix.getCopiesCountY(); y++) {
             final var loc = Location.create(event.getX() + (matrix.getDeltaX() * x),
-                event.getY() + (matrix.getDeltaY() * y));
+                event.getY() + (matrix.getDeltaY() * y), true);
             final var attrsCopy = (AttributeSet) attrs.clone();
             if (matrix.getLabel() != null) {
               if (matrixPlace)

File: src/main/java/com/cburch/logisim/tools/EditTool.java
Patch:
@@ -71,7 +71,7 @@ public void selectionChanged(Event event) {
   private static final int CACHE_MAX_SIZE = 32;
 
   private static final Location NULL_LOCATION =
-      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE);
+      Location.create(Integer.MIN_VALUE, Integer.MIN_VALUE, false);
 
   private final Listener listener;
   private final SelectTool select;
@@ -444,7 +444,7 @@ private boolean updateLocation(Canvas canvas, int mx, int my, int mods) {
     if (lastX == snapx && lastY == snapy && modsSame) { // already computed
       return wireLoc != NULL_LOCATION;
     } else {
-      final var snap = Location.create(snapx, snapy);
+      final var snap = Location.create(snapx, snapy, false);
       if (modsSame) {
         Object o = cache.get(snap);
         if (o != null) {

File: src/main/java/com/cburch/logisim/tools/MenuTool.java
Patch:
@@ -161,7 +161,7 @@ public int hashCode() {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var pt = Location.create(x, y);
+    final var pt = Location.create(x, y, false);
 
     JPopupMenu menu;
     final var proj = canvas.getProject();

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -224,7 +224,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
   public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     var dirty = false;
     canvas.setHighlightedWires(WireSet.EMPTY);
     if (pokeCaret != null && !pokeCaret.getBounds(g).contains(loc)) {

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -414,7 +414,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     canvas.requestFocusInWindow();
     final var proj = canvas.getProject();
     final var sel = proj.getSelection();
-    start = Location.create(e.getX(), e.getY());
+    start = Location.create(e.getX(), e.getY(), false);
     curDx = 0;
     curDy = 0;
     moveGesture = null;

File: src/main/java/com/cburch/logisim/tools/TextTool.java
Patch:
@@ -260,7 +260,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // Otherwise search for a new caret.
     int x = e.getX();
     int y = e.getY();
-    final var loc = Location.create(x, y);
+    final var loc = Location.create(x, y, false);
     final var event = new ComponentUserEvent(canvas, x, y);
 
     // First search in selection.

File: src/main/java/com/cburch/logisim/tools/move/AvoidanceMap.java
Patch:
@@ -65,7 +65,7 @@ public void markComponent(Component comp, int dx, int dy) {
     y0 += 9 - (y0 + 9) % 10;
     for (var x = x0; x <= x1; x += 10) {
       for (var y = y0; y <= y1; y += 10) {
-        final var loc = Location.create(x, y);
+        final var loc = Location.create(x, y, false);
         // loc is most likely in the component, so go ahead and
         // put it into the map as if it is - and in the rare event
         // that loc isn't in the component, we can remove it.

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,7 +295,7 @@ private ArrayList<Instance> getPins() {
       attr.setValue(Pin.ATTR_TYPE, !port.getType().equals(Port.INPUT));
       attr.setValue(StdAttr.FACING, !port.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       attr.setValue(StdAttr.WIDTH, port.getWidth());
-      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos), attr);
+      final var component = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, yPos, true), attr);
       pins.add(component.getInstance());
       yPos += 10;
     }

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -65,7 +65,7 @@ public LocalePreference() {
 
       String localeStr = this.get();
       if (!("".equals(localeStr))) {
-        LocaleManager.setLocale(new Locale(localeStr));
+        LocaleManager.setLocale(Locale.forLanguageTag(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);
       myListener.localeChanged();

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,7 @@ public static void setLocale(Locale loc) {
         }
       }
       if (select == null) {
-        select = Objects.requireNonNullElseGet(backup, () -> new Locale("en"));
+        select = Objects.requireNonNullElseGet(backup, () -> Locale.ENGLISH);
       }
 
       curLocale = select;
@@ -224,7 +224,7 @@ public JComponent createLocaleSelector() {
     var locales = getLocaleOptions();
     if (locales == null || locales.length == 0) {
       var cur = getLocale();
-      if (cur == null) cur = new Locale("en");
+      if (cur == null) cur = Locale.ENGLISH;
       locales = new Locale[] {cur};
     }
     return new JScrollPane(new LocaleSelector(locales));
@@ -277,7 +277,7 @@ public Locale[] getLocaleOptions() {
         country = null;
       }
       if (language != null) {
-        final var loc = country == null ? new Locale(language) : new Locale(language, country);
+        final var loc = new Locale.Builder().setLanguage(language).setRegion(country).build();
         retl.add(loc);
       }
     }

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -65,7 +65,7 @@ public LocalePreference() {
 
       String localeStr = this.get();
       if (!("".equals(localeStr))) {
-        LocaleManager.setLocale(new Locale(localeStr));
+        LocaleManager.setLocale(Locale.forLanguageTag(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);
       myListener.localeChanged();

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,7 @@ public static void setLocale(Locale loc) {
         }
       }
       if (select == null) {
-        select = Objects.requireNonNullElseGet(backup, () -> new Locale("en"));
+        select = Objects.requireNonNullElseGet(backup, () -> Locale.ENGLISH);
       }
 
       curLocale = select;
@@ -224,7 +224,7 @@ public JComponent createLocaleSelector() {
     var locales = getLocaleOptions();
     if (locales == null || locales.length == 0) {
       var cur = getLocale();
-      if (cur == null) cur = new Locale("en");
+      if (cur == null) cur = Locale.ENGLISH;
       locales = new Locale[] {cur};
     }
     return new JScrollPane(new LocaleSelector(locales));
@@ -277,7 +277,7 @@ public Locale[] getLocaleOptions() {
         country = null;
       }
       if (language != null) {
-        final var loc = country == null ? new Locale(language) : new Locale(language, country);
+        final var loc = new Locale.Builder().setLanguage(language).setRegion(country).build();
         retl.add(loc);
       }
     }

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -65,7 +65,7 @@ public LocalePreference() {
 
       String localeStr = this.get();
       if (!("".equals(localeStr))) {
-        LocaleManager.setLocale(new Locale(localeStr));
+        LocaleManager.setLocale(Locale.forLanguageTag(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);
       myListener.localeChanged();

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,7 @@ public static void setLocale(Locale loc) {
         }
       }
       if (select == null) {
-        select = Objects.requireNonNullElseGet(backup, () -> new Locale("en"));
+        select = Objects.requireNonNullElseGet(backup, () -> Locale.ENGLISH);
       }
 
       curLocale = select;
@@ -224,7 +224,7 @@ public JComponent createLocaleSelector() {
     var locales = getLocaleOptions();
     if (locales == null || locales.length == 0) {
       var cur = getLocale();
-      if (cur == null) cur = new Locale("en");
+      if (cur == null) cur = Locale.ENGLISH;
       locales = new Locale[] {cur};
     }
     return new JScrollPane(new LocaleSelector(locales));
@@ -277,7 +277,7 @@ public Locale[] getLocaleOptions() {
         country = null;
       }
       if (language != null) {
-        final var loc = country == null ? new Locale(language) : new Locale(language, country);
+        final var loc = new Locale.Builder().setLanguage(language).setRegion(country).build();
         retl.add(loc);
       }
     }

File: src/main/java/com/cburch/logisim/gui/hex/Clip.java
Patch:
@@ -73,7 +73,7 @@ public void paste() {
         final var data = (long[]) xfer.getTransferData(binaryFlavor);
         numWords = data.length;
         var addrBits = 32 - Integer.numberOfLeadingZeros(numWords);
-        pasted = MemContents.create(addrBits, model.getValueWidth());
+        pasted = MemContents.create(addrBits, model.getValueWidth(), false);
         pasted.set(0, data);
       } catch (UnsupportedFlavorException | IOException e) {
         return;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -971,7 +971,7 @@ private static class HexReader extends FormatOptions {
 
     protected HexReader(BufferedLineReader in, int addrBits, int width) {
       this.in = in;
-      this.dst = MemContents.create(addrBits, width);
+      this.dst = MemContents.create(addrBits, width, false);
     }
 
     ////////////////////////////////////////////////////////

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -321,7 +321,7 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     recalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits);
+      contents = MemContents.create(addrBits, dataBits, false);
     } else {
       contents.setDimensions(addrBits, dataBits);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -128,7 +128,7 @@ public String getHDLName(AttributeSet attrs) {
   private MemContents getNewContents(AttributeSet attrs) {
     final var contents =
         MemContents.create(
-            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth());
+            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth(), true);
     contents.condFillRandom();
     return contents;
   }

File: src/main/java/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -80,7 +80,7 @@ static void register(MemContents value, Project proj) {
   private AttributeOption appearance = AppPreferences.getDefaultAppearance();
 
   RomAttributes() {
-    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth());
+    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth(), false);
   }
 
   @Override

File: src/test/java/com/cburch/logisim/gui/hex/HexFileTest.java
Patch:
@@ -39,7 +39,7 @@ private void compare(
       int wordSize,
       HashMap<Long, Long> values)
       throws IOException {
-    final var memory = MemContents.create(addressSize, wordSize);
+    final var memory = MemContents.create(addressSize, wordSize, true);
     if (desc.startsWith("Binary") || desc.startsWith("ASCII") || !autodetect) {
       // these can't be auto-detected
       if (!HexFile.open(memory, savedFile, desc)) {
@@ -97,7 +97,7 @@ public final void testSaveLoadMemoryContents(int[] triple)
 
     final var rng = new Random(index * addressSize * wordSize + 1);
 
-    final var memoryContents = MemContents.create(addressSize, wordSize);
+    final var memoryContents = MemContents.create(addressSize, wordSize, true);
 
     final var values = new HashMap<Long, Long>();
     // (1L << size) doesn't work if size is 64

File: src/main/java/com/cburch/logisim/gui/hex/Clip.java
Patch:
@@ -73,7 +73,7 @@ public void paste() {
         final var data = (long[]) xfer.getTransferData(binaryFlavor);
         numWords = data.length;
         var addrBits = 32 - Integer.numberOfLeadingZeros(numWords);
-        pasted = MemContents.create(addrBits, model.getValueWidth());
+        pasted = MemContents.create(addrBits, model.getValueWidth(), false);
         pasted.set(0, data);
       } catch (UnsupportedFlavorException | IOException e) {
         return;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -971,7 +971,7 @@ private static class HexReader extends FormatOptions {
 
     protected HexReader(BufferedLineReader in, int addrBits, int width) {
       this.in = in;
-      this.dst = MemContents.create(addrBits, width);
+      this.dst = MemContents.create(addrBits, width, false);
     }
 
     ////////////////////////////////////////////////////////

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -321,7 +321,7 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     recalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits);
+      contents = MemContents.create(addrBits, dataBits, false);
     } else {
       contents.setDimensions(addrBits, dataBits);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -128,7 +128,7 @@ public String getHDLName(AttributeSet attrs) {
   private MemContents getNewContents(AttributeSet attrs) {
     final var contents =
         MemContents.create(
-            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth());
+            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth(), true);
     contents.condFillRandom();
     return contents;
   }

File: src/main/java/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -80,7 +80,7 @@ static void register(MemContents value, Project proj) {
   private AttributeOption appearance = AppPreferences.getDefaultAppearance();
 
   RomAttributes() {
-    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth());
+    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth(), false);
   }
 
   @Override

File: src/test/java/com/cburch/logisim/gui/hex/HexFileTest.java
Patch:
@@ -39,7 +39,7 @@ private void compare(
       int wordSize,
       HashMap<Long, Long> values)
       throws IOException {
-    final var memory = MemContents.create(addressSize, wordSize);
+    final var memory = MemContents.create(addressSize, wordSize, true);
     if (desc.startsWith("Binary") || desc.startsWith("ASCII") || !autodetect) {
       // these can't be auto-detected
       if (!HexFile.open(memory, savedFile, desc)) {
@@ -97,7 +97,7 @@ public final void testSaveLoadMemoryContents(int[] triple)
 
     final var rng = new Random(index * addressSize * wordSize + 1);
 
-    final var memoryContents = MemContents.create(addressSize, wordSize);
+    final var memoryContents = MemContents.create(addressSize, wordSize, true);
 
     final var values = new HashMap<Long, Long>();
     // (1L << size) doesn't work if size is 64

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -493,8 +493,8 @@ public List<String> getWithIndent(int howMany, String indent) {
    */
   public List<String> getWithIndent(String indent) {
     final var result = new ArrayList<String>();
-    for (final var line : contents) {
-      final var lines = line.split("\n");
+    for (final var content : contents) {
+      final var lines = content.split("\n");
       for (final var line : lines) {
         // We do not indent empty lines, just ones with content.
         result.add((line.length() == 0) ? line : indent + line);

File: src/main/java/com/cburch/logisim/gui/hex/Clip.java
Patch:
@@ -73,7 +73,7 @@ public void paste() {
         final var data = (long[]) xfer.getTransferData(binaryFlavor);
         numWords = data.length;
         var addrBits = 32 - Integer.numberOfLeadingZeros(numWords);
-        pasted = MemContents.create(addrBits, model.getValueWidth());
+        pasted = MemContents.create(addrBits, model.getValueWidth(), false);
         pasted.set(0, data);
       } catch (UnsupportedFlavorException | IOException e) {
         return;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -971,7 +971,7 @@ private static class HexReader extends FormatOptions {
 
     protected HexReader(BufferedLineReader in, int addrBits, int width) {
       this.in = in;
-      this.dst = MemContents.create(addrBits, width);
+      this.dst = MemContents.create(addrBits, width, false);
     }
 
     ////////////////////////////////////////////////////////

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -321,7 +321,7 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     recalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits);
+      contents = MemContents.create(addrBits, dataBits, false);
     } else {
       contents.setDimensions(addrBits, dataBits);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -128,7 +128,7 @@ public String getHDLName(AttributeSet attrs) {
   private MemContents getNewContents(AttributeSet attrs) {
     final var contents =
         MemContents.create(
-            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth());
+            attrs.getValue(Mem.ADDR_ATTR).getWidth(), attrs.getValue(Mem.DATA_ATTR).getWidth(), true);
     contents.condFillRandom();
     return contents;
   }

File: src/main/java/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -80,7 +80,7 @@ static void register(MemContents value, Project proj) {
   private AttributeOption appearance = AppPreferences.getDefaultAppearance();
 
   RomAttributes() {
-    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth());
+    contents = MemContents.create(addrBits.getWidth(), dataBits.getWidth(), false);
   }
 
   @Override

File: src/test/java/com/cburch/logisim/gui/hex/HexFileTest.java
Patch:
@@ -39,7 +39,7 @@ private void compare(
       int wordSize,
       HashMap<Long, Long> values)
       throws IOException {
-    final var memory = MemContents.create(addressSize, wordSize);
+    final var memory = MemContents.create(addressSize, wordSize, true);
     if (desc.startsWith("Binary") || desc.startsWith("ASCII") || !autodetect) {
       // these can't be auto-detected
       if (!HexFile.open(memory, savedFile, desc)) {
@@ -97,7 +97,7 @@ public final void testSaveLoadMemoryContents(int[] triple)
 
     final var rng = new Random(index * addressSize * wordSize + 1);
 
-    final var memoryContents = MemContents.create(addressSize, wordSize);
+    final var memoryContents = MemContents.create(addressSize, wordSize, true);
 
     final var values = new HashMap<Long, Long>();
     // (1L << size) doesn't work if size is 64

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -59,7 +59,7 @@ public void clearDrawsSuppressed() {
 
   public void clearSelected() {
     if (!selected.isEmpty()) {
-      final var oldSelected = new ArrayList<CanvasObject>(selected);
+      final var oldSelected = new ArrayList<>(selected);
       selected.clear();
       suppressed.clear();
       setHandleSelected(null);

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -33,5 +33,4 @@ protected void paintIcon(Graphics2D gfx) {
 
     gfx.drawRect(0, scale(13), wh, wh);
   }
-
 }

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -96,7 +96,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/draw/shapes/DrawAttr.java
Patch:
@@ -93,7 +93,8 @@ public class DrawAttr {
   private static final List<Attribute<?>> ATTRS_RRECT_FILL =
       createAttributes(new Attribute[] {PAINT_TYPE, FILL_COLOR, CORNER_RADIUS});
   private static final List<Attribute<?>> ATTRS_RRECT_BOTH =
-      createAttributes(new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
+      createAttributes(
+          new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
 
   private DrawAttr() {
     throw new IllegalStateException("Utility class. No instantiation allowed.");

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -47,7 +47,8 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
     } else {
       final var h0 = ret.prevHandle;
       final var h1 = ret.nextHandle;
-      final var p = LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
+      final var p =
+          LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
       ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
       return ret;
     }

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -114,7 +114,8 @@ public Cursor getCursor(Canvas canvas) {
   @Override
   public void keyPressed(Canvas canvas, KeyEvent e) {
     final var code = e.getKeyCode();
-    if (active && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
+    if (active
+        && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
       updateMouse(canvas, lastMouseX, lastMouseY, e.getModifiersEx());
     }
   }

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -17,10 +17,10 @@
 /** The library of components that the user can access. */
 public class Components extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Components";
 

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -30,10 +30,10 @@
  */
 class GrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter";
 

File: src/main/java/com/cburch/gray/GrayIncrementer.java
Patch:
@@ -25,10 +25,10 @@
  */
 class GrayIncrementer extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Code Incrementer";
 

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -26,10 +26,10 @@
  */
 class SimpleGrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter (Simple)";
 

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -41,7 +41,9 @@ public static void main(String[] args) {
         FlatIntelliJLaf.installLafInfo();
 
         UIManager.setLookAndFeel(AppPreferences.LookAndFeel.get());
-        UIManager.put("ToolTip.font", new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
+        UIManager.put(
+            "ToolTip.font",
+            new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
       }
     } catch (ClassNotFoundException
         | UnsupportedLookAndFeelException

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -30,8 +30,7 @@ public class ExportLatexButton extends JButton {
   ExportLatexButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExportTableButton.java
Patch:
@@ -33,8 +33,7 @@ public class ExportTableButton extends JButton {
   ExportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -37,7 +37,6 @@ public void componentResized(ComponentEvent arg0) {
         repaint();
       }
     }
-
   }
 
   public static class NamedExpression {
@@ -57,7 +56,6 @@ public static class NamedExpression {
     }
   }
 
-
   private static final long serialVersionUID = 1L;
 
   private final MyListener myListener = new MyListener();

File: src/main/java/com/cburch/logisim/analyze/gui/ImportTableButton.java
Patch:
@@ -32,8 +32,7 @@ public class ImportTableButton extends JButton {
   ImportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doLoad());
+    addActionListener(event -> doLoad());
   }
 
   void localeChanged() {
@@ -90,7 +89,8 @@ void doLoad() {
         }
         lastFile = file;
       } catch (IOException e) {
-        OptionPane.showMessageDialog(parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(
+            parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
       }
     }
   }

File: src/main/java/com/cburch/logisim/analyze/model/Entry.java
Patch:
@@ -99,5 +99,4 @@ public void preferenceChange(PreferenceChangeEvent evt) {
       fireChange();
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -238,7 +238,7 @@ static List<Implicant> computeMinimal(int format, AnalyzerModel model, String va
 
     // Now build up our sum-of-products expression
     // from the remaining terms
-    final var ret = new ArrayList<Implicant>(retSet);
+    final var ret = new ArrayList<>(retSet);
     Collections.sort(ret);
     return ret;
   }
@@ -356,7 +356,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
       final var idx = table.getVisibleRowIndex(i);
       final var dc = table.getVisibleRowDcMask(i);
       final var imp = new Implicant(dc, idx);
-      final var region = regions.computeIfAbsent(val, k -> new HashSet<Implicant>());
+      final var region = regions.computeIfAbsent(val, k -> new HashSet<>());
       region.add(imp);
     }
     // For each region...
@@ -383,7 +383,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
         current = next;
       }
 
-      final var sorted = new ArrayList<Implicant>(all);
+      final var sorted = new ArrayList<>(all);
       sorted.sort(sortByGenerality);
       final var chosen = new ArrayList<Implicant>();
       for (final var implicant : sorted) {

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -302,8 +302,7 @@ private static boolean implicantsSame(List<Implicant> a, List<Implicant> b) {
 
   private static boolean isAllUndefined(Entry[] a) {
     for (final var entry : a) {
-      if (entry == Entry.ZERO || entry == Entry.ONE)
-        return false;
+      if (entry == Entry.ZERO || entry == Entry.ONE) return false;
     }
     return true;
   }

File: src/main/java/com/cburch/logisim/analyze/model/ParserException.java
Patch:
@@ -16,7 +16,7 @@ public class ParserException extends Exception {
   private final StringGetter message;
   private final int start;
   private final int length;
-  
+
   public ParserException(StringGetter message, int start) {
     this(message, start, 1);
   }

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -98,7 +98,8 @@ public void move(Var variable, int delta) {
       throw new IllegalArgumentException("cannot move index " + index + " by " + delta);
     }
     if (newIndex > data.size() - 1) {
-      throw new IllegalArgumentException("Cannot move index " + index + " by " + delta + ": size " + data.size());
+      throw new IllegalArgumentException(
+          "Cannot move index " + index + " by " + delta + ": size " + data.size());
     }
     if (index == newIndex) return;
     data.remove(index);

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -271,7 +271,7 @@ public static SortedMap<Instance, String> getPinLabels(Circuit circuit) {
     }
 
     // Process first the pins that the user has given labels.
-    final var pinList = new ArrayList<Instance>(ret.keySet());
+    final var pinList = new ArrayList<>(ret.keySet());
     final var labelsTaken = new HashSet<String>();
     for (final var pin : pinList) {
       var label = pin.getAttributeSet().getValue(StdAttr.LABEL);

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -132,7 +132,8 @@ public static class LockException extends IllegalStateException {
     private final transient Thread mutatingThread;
     private final CircuitMutatorImpl mutatingMutator;
 
-    public LockException(String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
+    public LockException(
+        String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
       super(msg);
       circuit = circ;
       serialNumber = serial;

File: src/main/java/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -42,7 +42,7 @@ public void add(Circuit circuit, Component comp) {
 
   @Override
   public void clear(Circuit circuit) {
-    final var comps = new HashSet<Component>(circuit.getNonWires());
+    final var comps = new HashSet<>(circuit.getNonWires());
     comps.addAll(circuit.getWires());
     if (!comps.isEmpty()) modified.add(circuit);
     log.add(CircuitChange.clear(circuit, comps));
@@ -142,7 +142,8 @@ public void setForCircuit(Circuit circuit, Attribute<?> attr, Object newValue) {
     final var oldValue = attrs.getValue(a);
     log.add(CircuitChange.setForCircuit(circuit, attr, oldValue, newValue));
     attrs.setValue(a, newValue);
-    if (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
+    if (attr == CircuitAttributes.NAME_ATTR
+        || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
       circuit.getAppearance().recomputeDefaultAppearance();
     }
   }

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -354,7 +354,7 @@ void processDirtyComponents() {
   }
 
   void processDirtyPoints() {
-    final var dirty = new HashSet<Location>(dirtyPoints);
+    final var dirty = new HashSet<>(dirtyPoints);
     dirtyPoints.clear();
     if (circuit.wires.isMapVoided()) {
       for (var i = 3; i >= 0; i--) {

File: src/main/java/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -251,7 +251,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // make a WireBundle object for each end of a splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       for (final var end : ends) {
         final var p = end.getLocation();
         final var pb = ret.createBundleAt(p);
@@ -271,7 +271,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // determine the bundles at the end of each splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       int index = -1;
       for (final var end : ends) {
         index++;
@@ -359,7 +359,7 @@ private void connectTunnels(BundleMap ret) {
     for (final var comp : tunnels) {
       final var label = comp.getAttributeSet().getValue(StdAttr.LABEL).trim();
       if (!label.equals("")) {
-        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<Location>(3));
+        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<>(3));
         tunnelSet.add(comp.getLocation());
       }
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -138,7 +138,8 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       if (fanout >= 3) {
         GraphicsUtil.switchToWidth(g, SPINE_WIDTH);
         g.setColor(Value.multiColor);
-        g.drawLine(xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
+        g.drawLine(
+            xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
       } else {
         g.setColor(Value.multiColor);
         g.fillOval(xSpine - SPINE_DOT / 2, y0 - SPINE_DOT / 2, SPINE_DOT, SPINE_DOT);

File: src/main/java/com/cburch/logisim/circuit/SplitterParameters.java
Patch:
@@ -65,7 +65,8 @@ class SplitterParameters {
     } else { // > or <
       final var m = facing == Direction.WEST ? -1 : 1;
       dxEnd0 = m * width;
-      dyEnd0 = justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
+      dyEnd0 =
+          justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
       ddxEnd = 0;
       ddyEnd = gap;
       dxEndSpine = -m * (width - offs);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -44,7 +44,8 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   // user interface methods
   //
   @Override
-  public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
+  public void drawGhost(
+      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
     final var g = context.getGraphics();
     final var dir = attrs.getValue(Wire.DIR_ATTR);
     final var len = attrs.getValue(Wire.LEN_ATTR);

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -39,7 +39,7 @@ void merge(Wire a, Wire b) {
       var set0 = map.get(a);
       var set1 = map.get(b);
       if (set0 == null && set1 == null) {
-        set0 = new ArrayList<Wire>(2);
+        set0 = new ArrayList<>(2);
         set0.add(a);
         set0.add(b);
         map.put(a, set0);
@@ -167,7 +167,7 @@ private void doOverlaps(CircuitMutator mutator) {
     final var wirePoints = new HashMap<Location, ArrayList<Wire>>();
     for (final var w : circuit.getWires()) {
       for (final var loc : w) {
-        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<Wire>(3));
+        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<>(3));
         locWires.add(w);
       }
     }

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitCustomAppearance.java
Patch:
@@ -28,11 +28,11 @@
 public class CircuitCustomAppearance extends Drawing {
 
   private final CircuitAppearance parent;
-  
+
   public CircuitCustomAppearance(CircuitAppearance parent) {
     this.parent = parent;
   }
-  
+
   @Override
   public void addObjects(int index, Collection<? extends CanvasObject> shapes) {
     parent.addObjects(index, shapes);
@@ -50,7 +50,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -20,7 +20,8 @@
 
 class DefaultAppearance {
 
-  public static List<CanvasObject> build(Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
+  public static List<CanvasObject> build(
+      Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
     if (style == CircuitAttributes.APPEAR_CLASSIC) {
       return DefaultClassicAppearance.build(pins);
     } else if (style == CircuitAttributes.APPEAR_FPGA) {

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementWithPoker.java
Patch:
@@ -68,5 +68,4 @@ public Boolean mouseInside(InstanceState state, MouseEvent e) {
   }
 
   public abstract void performClickAction(InstanceState state, MouseEvent e);
-
 }

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -158,7 +158,7 @@ private void performUpdate(
       }
     }
     // handle replacements
-    final var addsCopy = new ArrayList<Instance>(adds);
+    final var addsCopy = new ArrayList<>(adds);
     for (final var entry : replaces.entrySet()) {
       final var port = oldObjects.remove(entry.getKey());
       if (port != null) {

File: src/main/java/com/cburch/logisim/comp/AbstractComponent.java
Patch:
@@ -47,5 +47,4 @@ public Bounds getBounds(Graphics g) {
   public EndData getEnd(int index) {
     return getEnds().get(index);
   }
-
 }

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -41,8 +41,7 @@ public interface ComponentFactory extends AttributeDefaultProvider {
 
   void removeComponent(Circuit circ, Component c, CircuitState state);
 
-  void drawGhost(
-      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
+  void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
 
   @Override
   Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver);

File: src/main/java/com/cburch/logisim/data/Attribute.java
Patch:
@@ -69,7 +69,7 @@ public void setHidden(boolean val) {
   public boolean isHidden() {
     return hidden;
   }
-  
+
   public boolean isToSave() {
     return true;
   }

File: src/main/java/com/cburch/logisim/data/AttributeSet.java
Patch:
@@ -43,8 +43,8 @@ default void removeAttributeListener(AttributeListener l) {
   <V> void setValue(Attribute<V> attr, V value);
 
   /**
-   * Returns attributes that may also be changed as a side effect of changing attr to value
-   * or changing attr back to its current value from value. This method does not change attr.
+   * Returns attributes that may also be changed as a side effect of changing attr to value or
+   * changing attr back to its current value from value. This method does not change attr.
    *
    * @param attr The attribute whose change is being considered
    * @param value The new value for attr that is being considered

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -214,5 +214,4 @@ public static AttributeSet fixedSet(Attribute<?>[] attrs, Object[] initValues) {
       return EMPTY;
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -35,7 +35,7 @@ private BooleanAttribute(String name, StringGetter disp) {
 
     @Override
     public Boolean parse(String value) {
-      return vals[Boolean.valueOf(value) ? 0 : 1];
+      return vals[Boolean.parseBoolean(value) ? 0 : 1];
     }
 
     @Override

File: src/main/java/com/cburch/logisim/file/FileStatistics.java
Patch:
@@ -70,7 +70,7 @@ private FileStatistics(List<Count> counts, Count totalWithout, Count totalWith)
   }
 
   public static FileStatistics compute(LogisimFile file, Circuit circuit) {
-    final var include = new HashSet<Circuit>(file.getCircuits());
+    final var include = new HashSet<>(file.getCircuits());
     final var countMap = new HashMap<Circuit, Map<ComponentFactory, Count>>();
     doRecursiveCount(circuit, include, countMap);
     doUniqueCounts(countMap.get(circuit), countMap);

File: src/main/java/com/cburch/logisim/file/LoadedLibrary.java
Patch:
@@ -183,7 +183,7 @@ private void resolveChanges(Library old) {
       fireLibraryEvent(LibraryEvent.SET_NAME, base.getDisplayName());
     }
 
-    final var changes = new HashSet<Library>(old.getLibraries());
+    final var changes = new HashSet<>(old.getLibraries());
     base.getLibraries().forEach(changes::remove);
     for (final var lib : changes) {
       fireLibraryEvent(LibraryEvent.REMOVE_LIBRARY, lib);

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -94,7 +94,8 @@ public synchronized void mark(final int limit) {
   }
 
   /**
-   *  @return false - mark is not supported */
+   * @return false - mark is not supported
+   */
   @Override
   public boolean markSupported() {
     return false; // would be imprecise

File: src/main/java/com/cburch/logisim/fpga/data/SimpleRectangle.java
Patch:
@@ -112,5 +112,4 @@ public void paint(Graphics2D g) {
     }
     g1.dispose();
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -49,5 +49,4 @@ public void setParentNet(Net connectedNet, Byte bitIndex) {
     myOwnNet = connectedNet;
     myOwnNetBitIndex = bitIndex;
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Net.java
Patch:
@@ -158,8 +158,7 @@ public boolean hasBitSinks(int bitid) {
   }
 
   public List<ConnectionPoint> getBitSinks(int bitIndex) {
-    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size()))
-      return new ArrayList<>();
+    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size())) return new ArrayList<>();
     return new ArrayList<>(sinkList.get(bitIndex).getAll());
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/DialogNotification.java
Patch:
@@ -36,8 +36,7 @@ public static void showDialogNotification(Frame parent, String type, String stri
     GridBagConstraints c = new GridBagConstraints();
     JLabel message = new JLabel(string);
     JButton close = new JButton(S.get("FpgaBoardClose"));
-    ActionListener actionListener =
-        e -> dialog.dispose();
+    ActionListener actionListener = e -> dialog.dispose();
     close.addActionListener(actionListener);
 
     c.gridx = 0;
@@ -57,5 +56,4 @@ public static void showDialogNotification(Frame parent, String type, String stri
     dialog.setAlwaysOnTop(true);
     dialog.setVisible(true);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderListWindow.java
Patch:
@@ -22,7 +22,8 @@
 import javax.swing.event.ListDataEvent;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderListWindow extends JFrame implements BaseWindowListenerContract, BaseListDataListenerContract {
+public class FpgaCommanderListWindow extends JFrame
+    implements BaseWindowListenerContract, BaseListDataListenerContract {
 
   private final String Title;
   private final JList<Object> textArea = new JList<>();

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderTextWindow.java
Patch:
@@ -23,7 +23,8 @@
 import javax.swing.text.DefaultCaret;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderTextWindow extends JFrame implements BaseKeyListenerContract, BaseWindowListenerContract {
+public class FpgaCommanderTextWindow extends JFrame
+    implements BaseKeyListenerContract, BaseWindowListenerContract {
 
   private int FontSize;
   private final String Title;

File: src/main/java/com/cburch/logisim/fpga/gui/IoComponentSelector.java
Patch:
@@ -65,5 +65,4 @@ public void actionPerformed(ActionEvent e) {
     action_id = e.getActionCommand();
     diag.setVisible(false);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -547,7 +547,7 @@ public static void addAllWiresSorted(LineBuffer contents, Map<String, String> wi
     var maxNameLength = 0;
     for (var wire : wires.keySet())
       maxNameLength = Math.max(maxNameLength, wire.length());
-    final var sortedWires = new TreeSet<String>(wires.keySet());
+    final var sortedWires = new TreeSet<>(wires.keySet());
     for (var wire : sortedWires)
       contents.add("{{assign}}{{1}}{{2}}{{=}}{{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
     wires.clear();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -34,7 +34,7 @@ public class HdlParameters {
   public static final int MAP_GATE_INPUT_BUBLE = 7;
   public static final int MAP_POW2 = 8;
 
-  private class ParameterInfo {
+  private static class ParameterInfo {
     private final boolean isOnlyUsedForBusses;
     private boolean isIntParameter = true;
     private final String parameterName;
@@ -43,7 +43,7 @@ private class ParameterInfo {
     private long parameterValue = -1;
     private long multiplyValue = 1;
     private long offsetValue = 0;
-    private List<Attribute<?>> attributesList = new ArrayList<>();
+    private final List<Attribute<?>> attributesList = new ArrayList<>();
     private Map<AttributeOption, Integer> attributeOptionMap = new HashMap<>();
     private final Attribute<BitWidth> attributeToCheckForBus;
 

File: src/main/java/com/cburch/logisim/fpga/prefs/FpgaOptions.java
Patch:
@@ -153,7 +153,7 @@ public FpgaOptions(PreferencesFrame frame) {
     add(getMapCols(), c);
     localeChanged();
   }
-  
+
   private JPanel getVhdlOptions() {
     final var isVhdl = AppPreferences.HdlType.get().equals(HdlGeneratorFactory.VHDL);
     vhdlPan = new JPanel();
@@ -162,7 +162,8 @@ private JPanel getVhdlOptions() {
     gbc.gridx = 0;
     gbc.gridy = 0;
     gbc.fill = GridBagConstraints.HORIZONTAL;
-    vhdlKeywordUpperCase = ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
+    vhdlKeywordUpperCase =
+        ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
     vhdlPan.add(vhdlKeywordUpperCase, gbc);
     vhdlPan.setEnabled(isVhdl);
     vhdlKeywordUpperCase.setEnabled(isVhdl);
@@ -304,5 +305,4 @@ private void selectWorkSpace(Component parentComponent) {
       AppPreferences.FPGA_Workspace.set(file.getPath() + File.separator);
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/prefs/SoftwaresOptions.java
Patch:
@@ -105,7 +105,6 @@ public SoftwaresOptions(PreferencesFrame window) {
     c.insets = new Insets(2, 4, 4, 2);
     c.anchor = GridBagConstraints.BASELINE_LEADING;
 
-
     var gridY = 0;
 
     c.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -225,7 +225,7 @@ public void paste() {
     // find how far we have to translate shapes so that at least one of the
     // pasted shapes doesn't match what's already in the model
     final var raw = canvas.getModel().getObjectsFromBottom();
-    final var cur = new MatchingSet<CanvasObject>(raw);
+    final var cur = new MatchingSet<>(raw);
     int dx = 0;
     while (true) {
       // if any shapes in "add" aren't in canvas, we are done

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardContents.java
Patch:
@@ -22,7 +22,8 @@ class ClipboardContents {
   private final Location anchorLocation;
   private final Direction anchorFacing;
 
-  public ClipboardContents(Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
+  public ClipboardContents(
+      Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
     this.onClipboard = java.util.List.copyOf(onClipboard);
     this.anchorLocation = anchorLocation;
     this.anchorFacing = anchorFacing;

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -159,7 +159,7 @@ private void apply() {
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();
-    final var toAdd = new ArrayList<TreePath>(Arrays.asList(checked));
+    final var toAdd = new ArrayList<>(Arrays.asList(checked));
 
     // Remove existing dynamic objects that are no longer checked.
     final var toRemove = new ArrayList<CanvasObject>();
@@ -182,7 +182,7 @@ private void apply() {
     // sort the remaining shapes
     toAdd.sort(new CompareByLocations());
 
-    final var avoid = new ArrayList<CanvasObject>(model.getObjectsFromBottom());
+    final var avoid = new ArrayList<>(model.getObjectsFromBottom());
     for (var i = avoid.size() - 1; i >= 0; i--) {
       if (avoid.get(i) instanceof AppearanceAnchor) avoid.remove(i);
     }

File: src/main/java/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -95,7 +95,7 @@ public void attributeListChanged(AttributeEvent e) {
 
     // compute the new list of rows, possible adding into hash map
     final var newRows = new ArrayList<AttrRow>();
-    final var missing = new HashSet<Attribute<?>>(rowMap.keySet());
+    final var missing = new HashSet<>(rowMap.keySet());
     /* put the vhdl/verilog row */
     final var rowd = new HDLrow(null);
     newRows.add(rowd);

File: src/main/java/com/cburch/logisim/gui/generic/FontSelector.java
Patch:
@@ -40,9 +40,9 @@ public class FontSelector extends JPanel implements JInputComponent, ActionListe
 
   private final Set<String> fontNames;
   private Font currentFont = StdAttr.DEFAULT_LABEL_FONT;
-  private JTextArea preview = new JTextArea(3, 20);
-  private JList<String> selectableFontFamilies;
-  private JList<Integer> selectableFontSize;
+  private final JTextArea preview = new JTextArea(3, 20);
+  private final JList<String> selectableFontFamilies;
+  private final JList<Integer> selectableFontSize;
   private JCheckBox boldAttribute;
   private JCheckBox italicAttribute;
   private int fontSize;

File: src/main/java/com/cburch/logisim/gui/generic/GridPainter.java
Patch:
@@ -200,7 +200,4 @@ public void propertyChange(PropertyChangeEvent event) {
       }
     }
   }
-
-
-
 }

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerModel.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-/**
+/*
  * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
  */
 
@@ -84,7 +84,8 @@ public void projectChanged(ProjectEvent event) {
   private void setLogisimFile(LogisimFile file) {
     final var oldRoot = (Node<?>) getRoot();
     oldRoot.decommission();
-    setRoot((file == null)
+    setRoot(
+        (file == null)
             ? null
             : new ProjectExplorerLibraryNode(this, file, uiElement, showMouseTools));
     fireStructureChanged();

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -99,7 +99,7 @@ private void fillArray() {
     y++;
 
     if (!registers.isEmpty()) {
-      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).collect(Collectors.toList());
+      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).toList();
       for (final var key : keys) {
         constraints.gridy = y;
         constraints.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/generic/TikZInfo.java
Patch:
@@ -297,11 +297,9 @@ private void optimize() {
   }
 
   private String getCharRepresentation(int i) {
-    final var chars = new StringBuilder();
     final var repeat = i / 26;
     final var charId = i % 26;
-    chars.append(String.valueOf((char) (charId + 'A')).repeat(repeat + 1));
-    return chars.toString();
+    return String.valueOf((char) (charId + 'A')).repeat(repeat + 1);
   }
 
   private String getFontDefinition(int i) {

File: src/main/java/com/cburch/logisim/gui/generic/ZoomModel.java
Patch:
@@ -35,5 +35,4 @@ public interface ZoomModel {
   void addPropertyChangeListener(String prop, PropertyChangeListener l);
 
   void removePropertyChangeListener(String prop, PropertyChangeListener l);
-
 }

File: src/main/java/com/cburch/logisim/gui/hex/BufferedLineReader.java
Patch:
@@ -123,8 +123,7 @@ public String readLine() throws IOException {
       ret.append(buf, initPos, bufPos - initPos);
 
       // refill buffer, if necessary and possible
-      if (!refill())
-        return ret.toString(); // note: file ended without newline
+      if (!refill()) return ret.toString(); // note: file ended without newline
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/hex/HexFrame.java
Patch:
@@ -63,7 +63,9 @@ public HexFrame(Project project, Instance instance, HexModel model) {
     close.addActionListener(myListener);
 
     final var pref = editor.getPreferredSize();
-    final var scroll = new JScrollPane(editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
+    final var scroll =
+        new JScrollPane(
+            editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
     pref.height = Math.min(pref.height, pref.width * 3 / 2);
     scroll.setPreferredSize(pref);
     scroll.getViewport().setBackground(editor.getBackground());

File: src/main/java/com/cburch/logisim/gui/icons/CircuitIcon.java
Patch:
@@ -10,5 +10,4 @@ public class CircuitIcon extends BaseIcon {
   protected void paintIcon(Graphics2D g2d) {
     SubcircuitFactory.paintEvolutionIcon(g2d);
   }
-
 }

File: src/main/java/com/cburch/logisim/gui/icons/CounterIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class CounterIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/JoystickIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class JoystickIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -16,7 +16,7 @@
 
 public class ShifterIcon extends BaseIcon {
 
-  private int state = 2;
+  private final int state = 2;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/log/ComponentSelector.java
Patch:
@@ -225,7 +225,7 @@ private boolean computeChildren() { // returns true if changed
       final var newChildren = new ArrayList<TreeNode<?>>();
       final var subcircs = new ArrayList<Component>();
       var changed = false;
-      // todo: hide from display any unselectable things that also have no children
+      // TODO: hide from display any unselectable things that also have no children
       for (final var c : circ.getNonWires()) {
         // For DRIVEABLE_CLOCKS do not recurse into subcircuits
         if (c.getFactory() instanceof SubcircuitFactory && mode != DRIVEABLE_CLOCKS) {

File: src/main/java/com/cburch/logisim/gui/log/TablePanel.java
Patch:
@@ -47,7 +47,7 @@ public TablePanel(LogFrame frame) {
     tableView = new TableView();
     final var pane =
         new JScrollPane(
-                tableView,
+            tableView,
             JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
             JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
     pane.setVerticalScrollBar(vsb);
@@ -97,7 +97,7 @@ class TableView extends JPanel {
     private static final long serialVersionUID = 1L;
 
     private void computePreferredSize() {
-      // todo: sizing is terrible
+      // TODO: sizing is terrible
       final var model = getModel();
       final var columns = model.getSignalCount();
       if (columns == 0) {

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -90,7 +90,7 @@ public class Frame extends LFrame.MainWindow implements LocaleListener {
   private final HorizontalSplitPane leftRegion;
   private final HorizontalSplitPane rightRegion;
   private final HorizontalSplitPane editRegion;
-  private MainRegionVerticalSplitPane mainRegion;
+  private final MainRegionVerticalSplitPane mainRegion;
   private final JPanel rightPanel;
   private final JPanel mainPanelSuper;
   private final CardPanel mainPanel;
@@ -228,7 +228,7 @@ public Frame(Project project) {
   /**
    * Content aware VerticalSplitPane that handles main layout changes with bit of extra logic.
    */
-  private class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
+  private static class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
     private final JComponent componentTree;
     private final JComponent mainCanvas;
     private Direction orientation;

File: src/main/java/com/cburch/logisim/gui/menu/Popups.java
Patch:
@@ -91,7 +91,8 @@ private static class CircuitPopup extends JPopupMenu implements ActionListener {
         }
       }
       main.setEnabled(canChange && file.getMainCircuit() != circuit);
-      remove.setEnabled(canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
+      remove.setEnabled(
+          canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
     }
 
     @Override

File: src/main/java/com/cburch/logisim/gui/menu/ProjectLibraryActions.java
Patch:
@@ -143,7 +143,8 @@ public static void doUnloadLibraries(Project proj) {
   public static void doUnloadLibrary(Project proj, Library lib) {
     final var message = proj.getLogisimFile().getUnloadLibraryMessage(lib);
     if (message != null) {
-      OptionPane.showMessageDialog(proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
+      OptionPane.showMessageDialog(
+          proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
     } else {
       proj.doAction(LogisimFileActions.unloadLibrary(lib));
     }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -115,7 +115,9 @@ public void actionPerformed(ActionEvent event) {
         final var opt = (ComboOption) gateUndefined.getSelectedItem();
         if (opt != null) {
           final var attrs = getOptions().getAttributeSet();
-          getProject().doAction(OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
+          getProject()
+              .doAction(
+                  OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
         }
       } else if (source == memUnknown) {
         AppPreferences.Memory_Startup_Unknown.set(memUnknown.isSelected());

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -137,7 +137,9 @@ public WindowOptions(PreferencesFrame window) {
     panel.add(importantB);
 
     zoomLabel = new JLabel(S.get("windowToolbarZoomfactor"));
-    zoomValue = new ZoomSlider(JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
+    zoomValue =
+        new ZoomSlider(
+            JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
     zoomAutoButton = new JButton();
     zoomAutoButton.addActionListener(listener);
     zoomAutoButton.setActionCommand(cmdSetAutoScaleFactor);

File: src/main/java/com/cburch/logisim/gui/start/SplashScreen.java
Patch:
@@ -54,6 +54,7 @@ public class SplashScreen extends JWindow {
   boolean inClose = false; // for avoiding mutual recursion
   final JProgressBar progress = new JProgressBar(0, PROGRESS_MAX);
   final long startTime = System.currentTimeMillis();
+
   public SplashScreen() {
     setName(BuildInfo.displayName);
     JPanel imagePanel = About.getImagePanel();

File: src/main/java/com/cburch/logisim/gui/test/TestFrame.java
Patch:
@@ -278,7 +278,6 @@ public void propagationCompleted(Simulator.Event e) {
     public void simulatorStateChanged(Simulator.Event e) {
       // do nothing
     }
-
   }
 
   private class WindowMenuManager extends WindowMenuItemManager

File: src/main/java/com/cburch/logisim/instance/InstanceLoggerAdapter.java
Patch:
@@ -24,7 +24,8 @@ class InstanceLoggerAdapter implements LoggableContract {
   private InstanceLogger logger;
   private InstanceStateImpl state;
 
-  public InstanceLoggerAdapter(InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
+  public InstanceLoggerAdapter(
+      InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
     try {
       this.comp = comp;
       this.logger = loggerClass.getDeclaredConstructor().newInstance();

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -88,7 +88,9 @@ public Caret getPokeCaret(ComponentUserEvent event) {
     final var isAccepted = poker.init(state, e);
     if (isAccepted) {
       this.state = state;
-      this.context = new ComponentDrawContext(event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
+      this.context =
+          new ComponentDrawContext(
+              event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
       mousePressed(e);
       return this;
     }

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -131,7 +131,8 @@ public void textChanged(TextFieldEvent e) {
     }
   }
 
-  void update(Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
+  void update(
+      Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
     final var wasReg = shouldRegister();
     this.labelAttr = labelAttr;
     this.fontAttr = fontAttr;

File: src/main/java/com/cburch/logisim/prefs/ConvertEventListener.java
Patch:
@@ -10,5 +10,5 @@
 package com.cburch.logisim.prefs;
 
 public interface ConvertEventListener {
-  public void attributeValueChanged(ConvertEvent e);
+  void attributeValueChanged(ConvertEvent e);
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitor.java
Patch:
@@ -17,11 +17,11 @@
 public interface PrefMonitor<E> extends PreferenceChangeListener {
   void addPropertyChangeListener(PropertyChangeListener listener);
 
-  public E get();
+  E get();
 
-  public boolean getBoolean();
+  boolean getBoolean();
 
-  public String getIdentifier();
+  String getIdentifier();
 
   boolean isSource(PropertyChangeEvent event);
 

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorBoolean.java
Patch:
@@ -67,7 +67,6 @@ public JCheckBox getCheckBox() {
 
   @Override
   public void actionPerformed(ActionEvent e) {
-    if (e.getSource() == box)
-      set(box.isSelected());
+    if (e.getSource() == box) set(box.isSelected());
   }
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorInt.java
Patch:
@@ -37,8 +37,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
       final var newValue = prefs.getInt(name, dflt);
       if (newValue != oldValue) {
         value = newValue;
-        AppPreferences.firePropertyChange(
-            name, oldValue, newValue);
+        AppPreferences.firePropertyChange(name, oldValue, newValue);
       }
     }
   }

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -91,7 +91,7 @@ private static boolean checkValidFilename(
     LibraryTools.buildLibraryList(proj.getLogisimFile(), tempSet);
     LibraryTools.buildToolList(proj.getLogisimFile(), forbiddenNames);
     forbiddenNames.addAll(tempSet.keySet());
-    var pattern = Pattern.compile("[^a-z0-9_.]", Pattern.CASE_INSENSITIVE);
+    var pattern = Pattern.compile("[^a-z\\d_.]", Pattern.CASE_INSENSITIVE);
     var matcher = pattern.matcher(filename);
     if (matcher.find()) {
       isOk = false;
@@ -489,7 +489,7 @@ public static boolean doSaveAs(Project proj) {
     if (!selectedFile.getName().endsWith(Loader.LOGISIM_EXTENSION)) {
       var old = selectedFile.getName();
       int ext0 = old.lastIndexOf('.');
-      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}[0-9]?", old.substring(ext0))) {
+      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}\\d?", old.substring(ext0))) {
         selectedFile = new File(selectedFile.getParentFile(), old + Loader.LOGISIM_EXTENSION);
       } else {
         var ext = old.substring(ext0);

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -213,5 +213,4 @@ public static boolean windowNamed(String name) {
     }
     return false;
   }
-
 }

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -36,10 +36,10 @@
 
 public class SocBus extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocBus";
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusInfo.java
Patch:
@@ -54,6 +54,7 @@ public void paint(Graphics g, Bounds b) {
     g.setColor(color);
     g.fillRect(b.getX(), b.getY(), b.getWidth(), b.getHeight());
     g.setColor(Color.BLACK);
-    GraphicsUtil.drawCenteredText(g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
+    GraphicsUtil.drawCenteredText(
+        g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/ListeningFrame.java
Patch:
@@ -12,7 +12,8 @@
 import java.awt.event.WindowEvent;
 import javax.swing.JFrame;
 
-public class ListeningFrame extends JFrame implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
+public class ListeningFrame extends JFrame
+    implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
 
   private static final long serialVersionUID = 1L;
   private final StringGetter title;

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUart.java
Patch:
@@ -33,10 +33,10 @@
 
 public class JtagUart extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocJtagUart";
 

File: src/main/java/com/cburch/logisim/soc/util/AssemblerAsmInstruction.java
Patch:
@@ -115,7 +115,8 @@ public boolean replaceLabels(Map<String, Long> labels, Map<AssemblerToken, Strin
     return true;
   }
 
-  public boolean replaceDefines(Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
+  public boolean replaceDefines(
+      Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
     for (final var parameter : parameters) {
       for (final var assemblerToken : parameter) {
         if (assemblerToken.getType() == AssemblerToken.MAYBE_LABEL) {

File: src/main/java/com/cburch/logisim/soc/util/AssemblerMacro.java
Patch:
@@ -102,8 +102,7 @@ public boolean checkForMacros(HashMap<AssemblerToken, StringGetter> errors, Set<
           errors.put(token, S.getter("AssemblerMacroCannotUseRecurency"));
           hasErrors = true;
         }
-        if (names.contains(token.getValue()))
-          token.setType(AssemblerToken.MACRO);
+        if (names.contains(token.getValue())) token.setType(AssemblerToken.MACRO);
       }
     }
     return hasErrors;

File: src/main/java/com/cburch/logisim/soc/vga/SocVgaShape.java
Patch:
@@ -37,7 +37,8 @@ public void setBounds(int width, int height) {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    VgaState.VgaDisplayState data = (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
+    VgaState.VgaDisplayState data =
+        (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
     if (state == null || data == null) {
       Color c = g.getColor();
       g.setColor(Color.BLUE);

File: src/main/java/com/cburch/logisim/std/Builtin.java
Patch:
@@ -32,10 +32,10 @@
 
 public class Builtin extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Builtin";
 

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -18,10 +18,10 @@
 
 public class ArithmeticLibrary extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Arithmetic";
 

File: src/main/java/com/cburch/logisim/std/arith/BitFinder.java
Patch:
@@ -31,10 +31,10 @@
 
 public class BitFinder extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "BitFinder";
 

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -31,10 +31,10 @@
 
 public class Comparator extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Comparator";
 

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -59,7 +59,7 @@ public void clearDrawsSuppressed() {
 
   public void clearSelected() {
     if (!selected.isEmpty()) {
-      final var oldSelected = new ArrayList<CanvasObject>(selected);
+      final var oldSelected = new ArrayList<>(selected);
       selected.clear();
       suppressed.clear();
       setHandleSelected(null);

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -33,5 +33,4 @@ protected void paintIcon(Graphics2D gfx) {
 
     gfx.drawRect(0, scale(13), wh, wh);
   }
-
 }

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -96,7 +96,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/draw/shapes/DrawAttr.java
Patch:
@@ -93,7 +93,8 @@ public class DrawAttr {
   private static final List<Attribute<?>> ATTRS_RRECT_FILL =
       createAttributes(new Attribute[] {PAINT_TYPE, FILL_COLOR, CORNER_RADIUS});
   private static final List<Attribute<?>> ATTRS_RRECT_BOTH =
-      createAttributes(new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
+      createAttributes(
+          new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
 
   private DrawAttr() {
     throw new IllegalStateException("Utility class. No instantiation allowed.");

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -47,7 +47,8 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
     } else {
       final var h0 = ret.prevHandle;
       final var h1 = ret.nextHandle;
-      final var p = LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
+      final var p =
+          LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
       ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
       return ret;
     }

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -114,7 +114,8 @@ public Cursor getCursor(Canvas canvas) {
   @Override
   public void keyPressed(Canvas canvas, KeyEvent e) {
     final var code = e.getKeyCode();
-    if (active && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
+    if (active
+        && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
       updateMouse(canvas, lastMouseX, lastMouseY, e.getModifiersEx());
     }
   }

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -17,10 +17,10 @@
 /** The library of components that the user can access. */
 public class Components extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Components";
 

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -30,10 +30,10 @@
  */
 class GrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter";
 

File: src/main/java/com/cburch/gray/GrayIncrementer.java
Patch:
@@ -25,10 +25,10 @@
  */
 class GrayIncrementer extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Code Incrementer";
 

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -26,10 +26,10 @@
  */
 class SimpleGrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter (Simple)";
 

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -41,7 +41,9 @@ public static void main(String[] args) {
         FlatIntelliJLaf.installLafInfo();
 
         UIManager.setLookAndFeel(AppPreferences.LookAndFeel.get());
-        UIManager.put("ToolTip.font", new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
+        UIManager.put(
+            "ToolTip.font",
+            new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
       }
     } catch (ClassNotFoundException
         | UnsupportedLookAndFeelException

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -30,8 +30,7 @@ public class ExportLatexButton extends JButton {
   ExportLatexButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExportTableButton.java
Patch:
@@ -33,8 +33,7 @@ public class ExportTableButton extends JButton {
   ExportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -37,7 +37,6 @@ public void componentResized(ComponentEvent arg0) {
         repaint();
       }
     }
-
   }
 
   public static class NamedExpression {
@@ -57,7 +56,6 @@ public static class NamedExpression {
     }
   }
 
-
   private static final long serialVersionUID = 1L;
 
   private final MyListener myListener = new MyListener();

File: src/main/java/com/cburch/logisim/analyze/gui/ImportTableButton.java
Patch:
@@ -32,8 +32,7 @@ public class ImportTableButton extends JButton {
   ImportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doLoad());
+    addActionListener(event -> doLoad());
   }
 
   void localeChanged() {
@@ -90,7 +89,8 @@ void doLoad() {
         }
         lastFile = file;
       } catch (IOException e) {
-        OptionPane.showMessageDialog(parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(
+            parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
       }
     }
   }

File: src/main/java/com/cburch/logisim/analyze/model/Entry.java
Patch:
@@ -99,5 +99,4 @@ public void preferenceChange(PreferenceChangeEvent evt) {
       fireChange();
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -238,7 +238,7 @@ static List<Implicant> computeMinimal(int format, AnalyzerModel model, String va
 
     // Now build up our sum-of-products expression
     // from the remaining terms
-    final var ret = new ArrayList<Implicant>(retSet);
+    final var ret = new ArrayList<>(retSet);
     Collections.sort(ret);
     return ret;
   }
@@ -356,7 +356,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
       final var idx = table.getVisibleRowIndex(i);
       final var dc = table.getVisibleRowDcMask(i);
       final var imp = new Implicant(dc, idx);
-      final var region = regions.computeIfAbsent(val, k -> new HashSet<Implicant>());
+      final var region = regions.computeIfAbsent(val, k -> new HashSet<>());
       region.add(imp);
     }
     // For each region...
@@ -383,7 +383,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
         current = next;
       }
 
-      final var sorted = new ArrayList<Implicant>(all);
+      final var sorted = new ArrayList<>(all);
       sorted.sort(sortByGenerality);
       final var chosen = new ArrayList<Implicant>();
       for (final var implicant : sorted) {

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -302,8 +302,7 @@ private static boolean implicantsSame(List<Implicant> a, List<Implicant> b) {
 
   private static boolean isAllUndefined(Entry[] a) {
     for (final var entry : a) {
-      if (entry == Entry.ZERO || entry == Entry.ONE)
-        return false;
+      if (entry == Entry.ZERO || entry == Entry.ONE) return false;
     }
     return true;
   }

File: src/main/java/com/cburch/logisim/analyze/model/ParserException.java
Patch:
@@ -16,7 +16,7 @@ public class ParserException extends Exception {
   private final StringGetter message;
   private final int start;
   private final int length;
-  
+
   public ParserException(StringGetter message, int start) {
     this(message, start, 1);
   }

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -98,7 +98,8 @@ public void move(Var variable, int delta) {
       throw new IllegalArgumentException("cannot move index " + index + " by " + delta);
     }
     if (newIndex > data.size() - 1) {
-      throw new IllegalArgumentException("Cannot move index " + index + " by " + delta + ": size " + data.size());
+      throw new IllegalArgumentException(
+          "Cannot move index " + index + " by " + delta + ": size " + data.size());
     }
     if (index == newIndex) return;
     data.remove(index);

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -271,7 +271,7 @@ public static SortedMap<Instance, String> getPinLabels(Circuit circuit) {
     }
 
     // Process first the pins that the user has given labels.
-    final var pinList = new ArrayList<Instance>(ret.keySet());
+    final var pinList = new ArrayList<>(ret.keySet());
     final var labelsTaken = new HashSet<String>();
     for (final var pin : pinList) {
       var label = pin.getAttributeSet().getValue(StdAttr.LABEL);

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -132,7 +132,8 @@ public static class LockException extends IllegalStateException {
     private final transient Thread mutatingThread;
     private final CircuitMutatorImpl mutatingMutator;
 
-    public LockException(String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
+    public LockException(
+        String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
       super(msg);
       circuit = circ;
       serialNumber = serial;

File: src/main/java/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -42,7 +42,7 @@ public void add(Circuit circuit, Component comp) {
 
   @Override
   public void clear(Circuit circuit) {
-    final var comps = new HashSet<Component>(circuit.getNonWires());
+    final var comps = new HashSet<>(circuit.getNonWires());
     comps.addAll(circuit.getWires());
     if (!comps.isEmpty()) modified.add(circuit);
     log.add(CircuitChange.clear(circuit, comps));
@@ -142,7 +142,8 @@ public void setForCircuit(Circuit circuit, Attribute<?> attr, Object newValue) {
     final var oldValue = attrs.getValue(a);
     log.add(CircuitChange.setForCircuit(circuit, attr, oldValue, newValue));
     attrs.setValue(a, newValue);
-    if (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
+    if (attr == CircuitAttributes.NAME_ATTR
+        || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
       circuit.getAppearance().recomputeDefaultAppearance();
     }
   }

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -354,7 +354,7 @@ void processDirtyComponents() {
   }
 
   void processDirtyPoints() {
-    final var dirty = new HashSet<Location>(dirtyPoints);
+    final var dirty = new HashSet<>(dirtyPoints);
     dirtyPoints.clear();
     if (circuit.wires.isMapVoided()) {
       for (var i = 3; i >= 0; i--) {

File: src/main/java/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -251,7 +251,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // make a WireBundle object for each end of a splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       for (final var end : ends) {
         final var p = end.getLocation();
         final var pb = ret.createBundleAt(p);
@@ -271,7 +271,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // determine the bundles at the end of each splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       int index = -1;
       for (final var end : ends) {
         index++;
@@ -359,7 +359,7 @@ private void connectTunnels(BundleMap ret) {
     for (final var comp : tunnels) {
       final var label = comp.getAttributeSet().getValue(StdAttr.LABEL).trim();
       if (!label.equals("")) {
-        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<Location>(3));
+        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<>(3));
         tunnelSet.add(comp.getLocation());
       }
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -138,7 +138,8 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       if (fanout >= 3) {
         GraphicsUtil.switchToWidth(g, SPINE_WIDTH);
         g.setColor(Value.multiColor);
-        g.drawLine(xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
+        g.drawLine(
+            xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
       } else {
         g.setColor(Value.multiColor);
         g.fillOval(xSpine - SPINE_DOT / 2, y0 - SPINE_DOT / 2, SPINE_DOT, SPINE_DOT);

File: src/main/java/com/cburch/logisim/circuit/SplitterParameters.java
Patch:
@@ -65,7 +65,8 @@ class SplitterParameters {
     } else { // > or <
       final var m = facing == Direction.WEST ? -1 : 1;
       dxEnd0 = m * width;
-      dyEnd0 = justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
+      dyEnd0 =
+          justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
       ddxEnd = 0;
       ddyEnd = gap;
       dxEndSpine = -m * (width - offs);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -44,7 +44,8 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   // user interface methods
   //
   @Override
-  public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
+  public void drawGhost(
+      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
     final var g = context.getGraphics();
     final var dir = attrs.getValue(Wire.DIR_ATTR);
     final var len = attrs.getValue(Wire.LEN_ATTR);

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -39,7 +39,7 @@ void merge(Wire a, Wire b) {
       var set0 = map.get(a);
       var set1 = map.get(b);
       if (set0 == null && set1 == null) {
-        set0 = new ArrayList<Wire>(2);
+        set0 = new ArrayList<>(2);
         set0.add(a);
         set0.add(b);
         map.put(a, set0);
@@ -167,7 +167,7 @@ private void doOverlaps(CircuitMutator mutator) {
     final var wirePoints = new HashMap<Location, ArrayList<Wire>>();
     for (final var w : circuit.getWires()) {
       for (final var loc : w) {
-        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<Wire>(3));
+        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<>(3));
         locWires.add(w);
       }
     }

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitCustomAppearance.java
Patch:
@@ -28,11 +28,11 @@
 public class CircuitCustomAppearance extends Drawing {
 
   private final CircuitAppearance parent;
-  
+
   public CircuitCustomAppearance(CircuitAppearance parent) {
     this.parent = parent;
   }
-  
+
   @Override
   public void addObjects(int index, Collection<? extends CanvasObject> shapes) {
     parent.addObjects(index, shapes);
@@ -50,7 +50,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -20,7 +20,8 @@
 
 class DefaultAppearance {
 
-  public static List<CanvasObject> build(Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
+  public static List<CanvasObject> build(
+      Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
     if (style == CircuitAttributes.APPEAR_CLASSIC) {
       return DefaultClassicAppearance.build(pins);
     } else if (style == CircuitAttributes.APPEAR_FPGA) {

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementWithPoker.java
Patch:
@@ -68,5 +68,4 @@ public Boolean mouseInside(InstanceState state, MouseEvent e) {
   }
 
   public abstract void performClickAction(InstanceState state, MouseEvent e);
-
 }

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -158,7 +158,7 @@ private void performUpdate(
       }
     }
     // handle replacements
-    final var addsCopy = new ArrayList<Instance>(adds);
+    final var addsCopy = new ArrayList<>(adds);
     for (final var entry : replaces.entrySet()) {
       final var port = oldObjects.remove(entry.getKey());
       if (port != null) {

File: src/main/java/com/cburch/logisim/comp/AbstractComponent.java
Patch:
@@ -47,5 +47,4 @@ public Bounds getBounds(Graphics g) {
   public EndData getEnd(int index) {
     return getEnds().get(index);
   }
-
 }

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -41,8 +41,7 @@ public interface ComponentFactory extends AttributeDefaultProvider {
 
   void removeComponent(Circuit circ, Component c, CircuitState state);
 
-  void drawGhost(
-      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
+  void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
 
   @Override
   Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver);

File: src/main/java/com/cburch/logisim/data/Attribute.java
Patch:
@@ -69,7 +69,7 @@ public void setHidden(boolean val) {
   public boolean isHidden() {
     return hidden;
   }
-  
+
   public boolean isToSave() {
     return true;
   }

File: src/main/java/com/cburch/logisim/data/AttributeSet.java
Patch:
@@ -43,8 +43,8 @@ default void removeAttributeListener(AttributeListener l) {
   <V> void setValue(Attribute<V> attr, V value);
 
   /**
-   * Returns attributes that may also be changed as a side effect of changing attr to value
-   * or changing attr back to its current value from value. This method does not change attr.
+   * Returns attributes that may also be changed as a side effect of changing attr to value or
+   * changing attr back to its current value from value. This method does not change attr.
    *
    * @param attr The attribute whose change is being considered
    * @param value The new value for attr that is being considered

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -214,5 +214,4 @@ public static AttributeSet fixedSet(Attribute<?>[] attrs, Object[] initValues) {
       return EMPTY;
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -35,7 +35,7 @@ private BooleanAttribute(String name, StringGetter disp) {
 
     @Override
     public Boolean parse(String value) {
-      return vals[Boolean.valueOf(value) ? 0 : 1];
+      return vals[Boolean.parseBoolean(value) ? 0 : 1];
     }
 
     @Override

File: src/main/java/com/cburch/logisim/file/FileStatistics.java
Patch:
@@ -70,7 +70,7 @@ private FileStatistics(List<Count> counts, Count totalWithout, Count totalWith)
   }
 
   public static FileStatistics compute(LogisimFile file, Circuit circuit) {
-    final var include = new HashSet<Circuit>(file.getCircuits());
+    final var include = new HashSet<>(file.getCircuits());
     final var countMap = new HashMap<Circuit, Map<ComponentFactory, Count>>();
     doRecursiveCount(circuit, include, countMap);
     doUniqueCounts(countMap.get(circuit), countMap);

File: src/main/java/com/cburch/logisim/file/LoadedLibrary.java
Patch:
@@ -183,7 +183,7 @@ private void resolveChanges(Library old) {
       fireLibraryEvent(LibraryEvent.SET_NAME, base.getDisplayName());
     }
 
-    final var changes = new HashSet<Library>(old.getLibraries());
+    final var changes = new HashSet<>(old.getLibraries());
     base.getLibraries().forEach(changes::remove);
     for (final var lib : changes) {
       fireLibraryEvent(LibraryEvent.REMOVE_LIBRARY, lib);

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -94,7 +94,8 @@ public synchronized void mark(final int limit) {
   }
 
   /**
-   *  @return false - mark is not supported */
+   * @return false - mark is not supported
+   */
   @Override
   public boolean markSupported() {
     return false; // would be imprecise

File: src/main/java/com/cburch/logisim/fpga/data/SimpleRectangle.java
Patch:
@@ -112,5 +112,4 @@ public void paint(Graphics2D g) {
     }
     g1.dispose();
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -49,5 +49,4 @@ public void setParentNet(Net connectedNet, Byte bitIndex) {
     myOwnNet = connectedNet;
     myOwnNetBitIndex = bitIndex;
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Net.java
Patch:
@@ -158,8 +158,7 @@ public boolean hasBitSinks(int bitid) {
   }
 
   public List<ConnectionPoint> getBitSinks(int bitIndex) {
-    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size()))
-      return new ArrayList<>();
+    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size())) return new ArrayList<>();
     return new ArrayList<>(sinkList.get(bitIndex).getAll());
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/DialogNotification.java
Patch:
@@ -36,8 +36,7 @@ public static void showDialogNotification(Frame parent, String type, String stri
     GridBagConstraints c = new GridBagConstraints();
     JLabel message = new JLabel(string);
     JButton close = new JButton(S.get("FpgaBoardClose"));
-    ActionListener actionListener =
-        e -> dialog.dispose();
+    ActionListener actionListener = e -> dialog.dispose();
     close.addActionListener(actionListener);
 
     c.gridx = 0;
@@ -57,5 +56,4 @@ public static void showDialogNotification(Frame parent, String type, String stri
     dialog.setAlwaysOnTop(true);
     dialog.setVisible(true);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderListWindow.java
Patch:
@@ -22,7 +22,8 @@
 import javax.swing.event.ListDataEvent;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderListWindow extends JFrame implements BaseWindowListenerContract, BaseListDataListenerContract {
+public class FpgaCommanderListWindow extends JFrame
+    implements BaseWindowListenerContract, BaseListDataListenerContract {
 
   private final String Title;
   private final JList<Object> textArea = new JList<>();

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderTextWindow.java
Patch:
@@ -23,7 +23,8 @@
 import javax.swing.text.DefaultCaret;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderTextWindow extends JFrame implements BaseKeyListenerContract, BaseWindowListenerContract {
+public class FpgaCommanderTextWindow extends JFrame
+    implements BaseKeyListenerContract, BaseWindowListenerContract {
 
   private int FontSize;
   private final String Title;

File: src/main/java/com/cburch/logisim/fpga/gui/IoComponentSelector.java
Patch:
@@ -65,5 +65,4 @@ public void actionPerformed(ActionEvent e) {
     action_id = e.getActionCommand();
     diag.setVisible(false);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -547,7 +547,7 @@ public static void addAllWiresSorted(LineBuffer contents, Map<String, String> wi
     var maxNameLength = 0;
     for (var wire : wires.keySet())
       maxNameLength = Math.max(maxNameLength, wire.length());
-    final var sortedWires = new TreeSet<String>(wires.keySet());
+    final var sortedWires = new TreeSet<>(wires.keySet());
     for (var wire : sortedWires)
       contents.add("{{assign}}{{1}}{{2}}{{=}}{{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
     wires.clear();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -34,7 +34,7 @@ public class HdlParameters {
   public static final int MAP_GATE_INPUT_BUBLE = 7;
   public static final int MAP_POW2 = 8;
 
-  private class ParameterInfo {
+  private static class ParameterInfo {
     private final boolean isOnlyUsedForBusses;
     private boolean isIntParameter = true;
     private final String parameterName;
@@ -43,7 +43,7 @@ private class ParameterInfo {
     private long parameterValue = -1;
     private long multiplyValue = 1;
     private long offsetValue = 0;
-    private List<Attribute<?>> attributesList = new ArrayList<>();
+    private final List<Attribute<?>> attributesList = new ArrayList<>();
     private Map<AttributeOption, Integer> attributeOptionMap = new HashMap<>();
     private final Attribute<BitWidth> attributeToCheckForBus;
 

File: src/main/java/com/cburch/logisim/fpga/prefs/FpgaOptions.java
Patch:
@@ -153,7 +153,7 @@ public FpgaOptions(PreferencesFrame frame) {
     add(getMapCols(), c);
     localeChanged();
   }
-  
+
   private JPanel getVhdlOptions() {
     final var isVhdl = AppPreferences.HdlType.get().equals(HdlGeneratorFactory.VHDL);
     vhdlPan = new JPanel();
@@ -162,7 +162,8 @@ private JPanel getVhdlOptions() {
     gbc.gridx = 0;
     gbc.gridy = 0;
     gbc.fill = GridBagConstraints.HORIZONTAL;
-    vhdlKeywordUpperCase = ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
+    vhdlKeywordUpperCase =
+        ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
     vhdlPan.add(vhdlKeywordUpperCase, gbc);
     vhdlPan.setEnabled(isVhdl);
     vhdlKeywordUpperCase.setEnabled(isVhdl);
@@ -304,5 +305,4 @@ private void selectWorkSpace(Component parentComponent) {
       AppPreferences.FPGA_Workspace.set(file.getPath() + File.separator);
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/prefs/SoftwaresOptions.java
Patch:
@@ -105,7 +105,6 @@ public SoftwaresOptions(PreferencesFrame window) {
     c.insets = new Insets(2, 4, 4, 2);
     c.anchor = GridBagConstraints.BASELINE_LEADING;
 
-
     var gridY = 0;
 
     c.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -225,7 +225,7 @@ public void paste() {
     // find how far we have to translate shapes so that at least one of the
     // pasted shapes doesn't match what's already in the model
     final var raw = canvas.getModel().getObjectsFromBottom();
-    final var cur = new MatchingSet<CanvasObject>(raw);
+    final var cur = new MatchingSet<>(raw);
     int dx = 0;
     while (true) {
       // if any shapes in "add" aren't in canvas, we are done

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardContents.java
Patch:
@@ -22,7 +22,8 @@ class ClipboardContents {
   private final Location anchorLocation;
   private final Direction anchorFacing;
 
-  public ClipboardContents(Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
+  public ClipboardContents(
+      Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
     this.onClipboard = java.util.List.copyOf(onClipboard);
     this.anchorLocation = anchorLocation;
     this.anchorFacing = anchorFacing;

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -159,7 +159,7 @@ private void apply() {
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();
-    final var toAdd = new ArrayList<TreePath>(Arrays.asList(checked));
+    final var toAdd = new ArrayList<>(Arrays.asList(checked));
 
     // Remove existing dynamic objects that are no longer checked.
     final var toRemove = new ArrayList<CanvasObject>();
@@ -182,7 +182,7 @@ private void apply() {
     // sort the remaining shapes
     toAdd.sort(new CompareByLocations());
 
-    final var avoid = new ArrayList<CanvasObject>(model.getObjectsFromBottom());
+    final var avoid = new ArrayList<>(model.getObjectsFromBottom());
     for (var i = avoid.size() - 1; i >= 0; i--) {
       if (avoid.get(i) instanceof AppearanceAnchor) avoid.remove(i);
     }

File: src/main/java/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -95,7 +95,7 @@ public void attributeListChanged(AttributeEvent e) {
 
     // compute the new list of rows, possible adding into hash map
     final var newRows = new ArrayList<AttrRow>();
-    final var missing = new HashSet<Attribute<?>>(rowMap.keySet());
+    final var missing = new HashSet<>(rowMap.keySet());
     /* put the vhdl/verilog row */
     final var rowd = new HDLrow(null);
     newRows.add(rowd);

File: src/main/java/com/cburch/logisim/gui/generic/FontSelector.java
Patch:
@@ -40,9 +40,9 @@ public class FontSelector extends JPanel implements JInputComponent, ActionListe
 
   private final Set<String> fontNames;
   private Font currentFont = StdAttr.DEFAULT_LABEL_FONT;
-  private JTextArea preview = new JTextArea(3, 20);
-  private JList<String> selectableFontFamilies;
-  private JList<Integer> selectableFontSize;
+  private final JTextArea preview = new JTextArea(3, 20);
+  private final JList<String> selectableFontFamilies;
+  private final JList<Integer> selectableFontSize;
   private JCheckBox boldAttribute;
   private JCheckBox italicAttribute;
   private int fontSize;

File: src/main/java/com/cburch/logisim/gui/generic/GridPainter.java
Patch:
@@ -200,7 +200,4 @@ public void propertyChange(PropertyChangeEvent event) {
       }
     }
   }
-
-
-
 }

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerModel.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-/**
+/*
  * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
  */
 
@@ -84,7 +84,8 @@ public void projectChanged(ProjectEvent event) {
   private void setLogisimFile(LogisimFile file) {
     final var oldRoot = (Node<?>) getRoot();
     oldRoot.decommission();
-    setRoot((file == null)
+    setRoot(
+        (file == null)
             ? null
             : new ProjectExplorerLibraryNode(this, file, uiElement, showMouseTools));
     fireStructureChanged();

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -99,7 +99,7 @@ private void fillArray() {
     y++;
 
     if (!registers.isEmpty()) {
-      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).collect(Collectors.toList());
+      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).toList();
       for (final var key : keys) {
         constraints.gridy = y;
         constraints.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/generic/TikZInfo.java
Patch:
@@ -297,11 +297,9 @@ private void optimize() {
   }
 
   private String getCharRepresentation(int i) {
-    final var chars = new StringBuilder();
     final var repeat = i / 26;
     final var charId = i % 26;
-    chars.append(String.valueOf((char) (charId + 'A')).repeat(repeat + 1));
-    return chars.toString();
+    return String.valueOf((char) (charId + 'A')).repeat(repeat + 1);
   }
 
   private String getFontDefinition(int i) {

File: src/main/java/com/cburch/logisim/gui/generic/ZoomModel.java
Patch:
@@ -35,5 +35,4 @@ public interface ZoomModel {
   void addPropertyChangeListener(String prop, PropertyChangeListener l);
 
   void removePropertyChangeListener(String prop, PropertyChangeListener l);
-
 }

File: src/main/java/com/cburch/logisim/gui/hex/BufferedLineReader.java
Patch:
@@ -123,8 +123,7 @@ public String readLine() throws IOException {
       ret.append(buf, initPos, bufPos - initPos);
 
       // refill buffer, if necessary and possible
-      if (!refill())
-        return ret.toString(); // note: file ended without newline
+      if (!refill()) return ret.toString(); // note: file ended without newline
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/hex/HexFrame.java
Patch:
@@ -63,7 +63,9 @@ public HexFrame(Project project, Instance instance, HexModel model) {
     close.addActionListener(myListener);
 
     final var pref = editor.getPreferredSize();
-    final var scroll = new JScrollPane(editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
+    final var scroll =
+        new JScrollPane(
+            editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
     pref.height = Math.min(pref.height, pref.width * 3 / 2);
     scroll.setPreferredSize(pref);
     scroll.getViewport().setBackground(editor.getBackground());

File: src/main/java/com/cburch/logisim/gui/icons/CircuitIcon.java
Patch:
@@ -10,5 +10,4 @@ public class CircuitIcon extends BaseIcon {
   protected void paintIcon(Graphics2D g2d) {
     SubcircuitFactory.paintEvolutionIcon(g2d);
   }
-
 }

File: src/main/java/com/cburch/logisim/gui/icons/CounterIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class CounterIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/JoystickIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class JoystickIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -16,7 +16,7 @@
 
 public class ShifterIcon extends BaseIcon {
 
-  private int state = 2;
+  private final int state = 2;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/log/ComponentSelector.java
Patch:
@@ -225,7 +225,7 @@ private boolean computeChildren() { // returns true if changed
       final var newChildren = new ArrayList<TreeNode<?>>();
       final var subcircs = new ArrayList<Component>();
       var changed = false;
-      // todo: hide from display any unselectable things that also have no children
+      // TODO: hide from display any unselectable things that also have no children
       for (final var c : circ.getNonWires()) {
         // For DRIVEABLE_CLOCKS do not recurse into subcircuits
         if (c.getFactory() instanceof SubcircuitFactory && mode != DRIVEABLE_CLOCKS) {

File: src/main/java/com/cburch/logisim/gui/log/TablePanel.java
Patch:
@@ -47,7 +47,7 @@ public TablePanel(LogFrame frame) {
     tableView = new TableView();
     final var pane =
         new JScrollPane(
-                tableView,
+            tableView,
             JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
             JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
     pane.setVerticalScrollBar(vsb);
@@ -97,7 +97,7 @@ class TableView extends JPanel {
     private static final long serialVersionUID = 1L;
 
     private void computePreferredSize() {
-      // todo: sizing is terrible
+      // TODO: sizing is terrible
       final var model = getModel();
       final var columns = model.getSignalCount();
       if (columns == 0) {

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -90,7 +90,7 @@ public class Frame extends LFrame.MainWindow implements LocaleListener {
   private final HorizontalSplitPane leftRegion;
   private final HorizontalSplitPane rightRegion;
   private final HorizontalSplitPane editRegion;
-  private MainRegionVerticalSplitPane mainRegion;
+  private final MainRegionVerticalSplitPane mainRegion;
   private final JPanel rightPanel;
   private final JPanel mainPanelSuper;
   private final CardPanel mainPanel;
@@ -228,7 +228,7 @@ public Frame(Project project) {
   /**
    * Content aware VerticalSplitPane that handles main layout changes with bit of extra logic.
    */
-  private class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
+  private static class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
     private final JComponent componentTree;
     private final JComponent mainCanvas;
     private Direction orientation;

File: src/main/java/com/cburch/logisim/gui/menu/Popups.java
Patch:
@@ -91,7 +91,8 @@ private static class CircuitPopup extends JPopupMenu implements ActionListener {
         }
       }
       main.setEnabled(canChange && file.getMainCircuit() != circuit);
-      remove.setEnabled(canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
+      remove.setEnabled(
+          canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
     }
 
     @Override

File: src/main/java/com/cburch/logisim/gui/menu/ProjectLibraryActions.java
Patch:
@@ -143,7 +143,8 @@ public static void doUnloadLibraries(Project proj) {
   public static void doUnloadLibrary(Project proj, Library lib) {
     final var message = proj.getLogisimFile().getUnloadLibraryMessage(lib);
     if (message != null) {
-      OptionPane.showMessageDialog(proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
+      OptionPane.showMessageDialog(
+          proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
     } else {
       proj.doAction(LogisimFileActions.unloadLibrary(lib));
     }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -115,7 +115,9 @@ public void actionPerformed(ActionEvent event) {
         final var opt = (ComboOption) gateUndefined.getSelectedItem();
         if (opt != null) {
           final var attrs = getOptions().getAttributeSet();
-          getProject().doAction(OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
+          getProject()
+              .doAction(
+                  OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
         }
       } else if (source == memUnknown) {
         AppPreferences.Memory_Startup_Unknown.set(memUnknown.isSelected());

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -137,7 +137,9 @@ public WindowOptions(PreferencesFrame window) {
     panel.add(importantB);
 
     zoomLabel = new JLabel(S.get("windowToolbarZoomfactor"));
-    zoomValue = new ZoomSlider(JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
+    zoomValue =
+        new ZoomSlider(
+            JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
     zoomAutoButton = new JButton();
     zoomAutoButton.addActionListener(listener);
     zoomAutoButton.setActionCommand(cmdSetAutoScaleFactor);

File: src/main/java/com/cburch/logisim/gui/start/SplashScreen.java
Patch:
@@ -54,6 +54,7 @@ public class SplashScreen extends JWindow {
   boolean inClose = false; // for avoiding mutual recursion
   final JProgressBar progress = new JProgressBar(0, PROGRESS_MAX);
   final long startTime = System.currentTimeMillis();
+
   public SplashScreen() {
     setName(BuildInfo.displayName);
     JPanel imagePanel = About.getImagePanel();

File: src/main/java/com/cburch/logisim/gui/test/TestFrame.java
Patch:
@@ -278,7 +278,6 @@ public void propagationCompleted(Simulator.Event e) {
     public void simulatorStateChanged(Simulator.Event e) {
       // do nothing
     }
-
   }
 
   private class WindowMenuManager extends WindowMenuItemManager

File: src/main/java/com/cburch/logisim/instance/InstanceLoggerAdapter.java
Patch:
@@ -24,7 +24,8 @@ class InstanceLoggerAdapter implements LoggableContract {
   private InstanceLogger logger;
   private InstanceStateImpl state;
 
-  public InstanceLoggerAdapter(InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
+  public InstanceLoggerAdapter(
+      InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
     try {
       this.comp = comp;
       this.logger = loggerClass.getDeclaredConstructor().newInstance();

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -88,7 +88,9 @@ public Caret getPokeCaret(ComponentUserEvent event) {
     final var isAccepted = poker.init(state, e);
     if (isAccepted) {
       this.state = state;
-      this.context = new ComponentDrawContext(event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
+      this.context =
+          new ComponentDrawContext(
+              event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
       mousePressed(e);
       return this;
     }

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -131,7 +131,8 @@ public void textChanged(TextFieldEvent e) {
     }
   }
 
-  void update(Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
+  void update(
+      Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
     final var wasReg = shouldRegister();
     this.labelAttr = labelAttr;
     this.fontAttr = fontAttr;

File: src/main/java/com/cburch/logisim/prefs/ConvertEventListener.java
Patch:
@@ -10,5 +10,5 @@
 package com.cburch.logisim.prefs;
 
 public interface ConvertEventListener {
-  public void attributeValueChanged(ConvertEvent e);
+  void attributeValueChanged(ConvertEvent e);
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitor.java
Patch:
@@ -17,11 +17,11 @@
 public interface PrefMonitor<E> extends PreferenceChangeListener {
   void addPropertyChangeListener(PropertyChangeListener listener);
 
-  public E get();
+  E get();
 
-  public boolean getBoolean();
+  boolean getBoolean();
 
-  public String getIdentifier();
+  String getIdentifier();
 
   boolean isSource(PropertyChangeEvent event);
 

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorBoolean.java
Patch:
@@ -67,7 +67,6 @@ public JCheckBox getCheckBox() {
 
   @Override
   public void actionPerformed(ActionEvent e) {
-    if (e.getSource() == box)
-      set(box.isSelected());
+    if (e.getSource() == box) set(box.isSelected());
   }
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorInt.java
Patch:
@@ -37,8 +37,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
       final var newValue = prefs.getInt(name, dflt);
       if (newValue != oldValue) {
         value = newValue;
-        AppPreferences.firePropertyChange(
-            name, oldValue, newValue);
+        AppPreferences.firePropertyChange(name, oldValue, newValue);
       }
     }
   }

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -91,7 +91,7 @@ private static boolean checkValidFilename(
     LibraryTools.buildLibraryList(proj.getLogisimFile(), tempSet);
     LibraryTools.buildToolList(proj.getLogisimFile(), forbiddenNames);
     forbiddenNames.addAll(tempSet.keySet());
-    var pattern = Pattern.compile("[^a-z0-9_.]", Pattern.CASE_INSENSITIVE);
+    var pattern = Pattern.compile("[^a-z\\d_.]", Pattern.CASE_INSENSITIVE);
     var matcher = pattern.matcher(filename);
     if (matcher.find()) {
       isOk = false;
@@ -489,7 +489,7 @@ public static boolean doSaveAs(Project proj) {
     if (!selectedFile.getName().endsWith(Loader.LOGISIM_EXTENSION)) {
       var old = selectedFile.getName();
       int ext0 = old.lastIndexOf('.');
-      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}[0-9]?", old.substring(ext0))) {
+      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}\\d?", old.substring(ext0))) {
         selectedFile = new File(selectedFile.getParentFile(), old + Loader.LOGISIM_EXTENSION);
       } else {
         var ext = old.substring(ext0);

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -213,5 +213,4 @@ public static boolean windowNamed(String name) {
     }
     return false;
   }
-
 }

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -36,10 +36,10 @@
 
 public class SocBus extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocBus";
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusInfo.java
Patch:
@@ -54,6 +54,7 @@ public void paint(Graphics g, Bounds b) {
     g.setColor(color);
     g.fillRect(b.getX(), b.getY(), b.getWidth(), b.getHeight());
     g.setColor(Color.BLACK);
-    GraphicsUtil.drawCenteredText(g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
+    GraphicsUtil.drawCenteredText(
+        g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/ListeningFrame.java
Patch:
@@ -12,7 +12,8 @@
 import java.awt.event.WindowEvent;
 import javax.swing.JFrame;
 
-public class ListeningFrame extends JFrame implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
+public class ListeningFrame extends JFrame
+    implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
 
   private static final long serialVersionUID = 1L;
   private final StringGetter title;

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUart.java
Patch:
@@ -33,10 +33,10 @@
 
 public class JtagUart extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocJtagUart";
 

File: src/main/java/com/cburch/logisim/soc/util/AssemblerAsmInstruction.java
Patch:
@@ -115,7 +115,8 @@ public boolean replaceLabels(Map<String, Long> labels, Map<AssemblerToken, Strin
     return true;
   }
 
-  public boolean replaceDefines(Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
+  public boolean replaceDefines(
+      Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
     for (final var parameter : parameters) {
       for (final var assemblerToken : parameter) {
         if (assemblerToken.getType() == AssemblerToken.MAYBE_LABEL) {

File: src/main/java/com/cburch/logisim/soc/util/AssemblerMacro.java
Patch:
@@ -102,8 +102,7 @@ public boolean checkForMacros(HashMap<AssemblerToken, StringGetter> errors, Set<
           errors.put(token, S.getter("AssemblerMacroCannotUseRecurency"));
           hasErrors = true;
         }
-        if (names.contains(token.getValue()))
-          token.setType(AssemblerToken.MACRO);
+        if (names.contains(token.getValue())) token.setType(AssemblerToken.MACRO);
       }
     }
     return hasErrors;

File: src/main/java/com/cburch/logisim/soc/vga/SocVgaShape.java
Patch:
@@ -37,7 +37,8 @@ public void setBounds(int width, int height) {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    VgaState.VgaDisplayState data = (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
+    VgaState.VgaDisplayState data =
+        (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
     if (state == null || data == null) {
       Color c = g.getColor();
       g.setColor(Color.BLUE);

File: src/main/java/com/cburch/logisim/std/Builtin.java
Patch:
@@ -32,10 +32,10 @@
 
 public class Builtin extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Builtin";
 

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -18,10 +18,10 @@
 
 public class ArithmeticLibrary extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Arithmetic";
 

File: src/main/java/com/cburch/logisim/std/arith/BitFinder.java
Patch:
@@ -31,10 +31,10 @@
 
 public class BitFinder extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "BitFinder";
 

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -31,10 +31,10 @@
 
 public class Comparator extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Comparator";
 

File: src/main/java/com/cburch/logisim/std/arith/ShifterHdlGeneratorFactory.java
Patch:
@@ -177,7 +177,7 @@ private LineBuffer getStageFunctionalityVhdl(int stageNumber, int nrOfBits) {
           .add("""
                                dataA({{nrOfBits2}} {{downto}} 0)&s_stage0ShiftIn
                                   {{when}} {{shiftMode}} = 0 {{or}} {{shiftMode}} = 1 {{else}}
-                               s_stage0ShiftIn&dataA( {{nrOfBits2}} {{downto}} 1 );
+                               s_stage0ShiftIn&dataA( {{nrOfBits1}} {{downto}} 1 );
             """);
     } else {
       contents

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -59,7 +59,7 @@ public void clearDrawsSuppressed() {
 
   public void clearSelected() {
     if (!selected.isEmpty()) {
-      final var oldSelected = new ArrayList<CanvasObject>(selected);
+      final var oldSelected = new ArrayList<>(selected);
       selected.clear();
       suppressed.clear();
       setHandleSelected(null);

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -33,5 +33,4 @@ protected void paintIcon(Graphics2D gfx) {
 
     gfx.drawRect(0, scale(13), wh, wh);
   }
-
 }

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -96,7 +96,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/draw/shapes/DrawAttr.java
Patch:
@@ -93,7 +93,8 @@ public class DrawAttr {
   private static final List<Attribute<?>> ATTRS_RRECT_FILL =
       createAttributes(new Attribute[] {PAINT_TYPE, FILL_COLOR, CORNER_RADIUS});
   private static final List<Attribute<?>> ATTRS_RRECT_BOTH =
-      createAttributes(new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
+      createAttributes(
+          new Attribute[] {PAINT_TYPE, STROKE_WIDTH, STROKE_COLOR, FILL_COLOR, CORNER_RADIUS});
 
   private DrawAttr() {
     throw new IllegalStateException("Utility class. No instantiation allowed.");

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -47,7 +47,8 @@ public static ClosestResult getClosestPoint(Location loc, boolean closed, Handle
     } else {
       final var h0 = ret.prevHandle;
       final var h1 = ret.nextHandle;
-      final var p = LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
+      final var p =
+          LineUtil.nearestPointSegment(xq, yq, h0.getX(), h0.getY(), h1.getX(), h1.getY());
       ret.loc = Location.create((int) Math.round(p[0]), (int) Math.round(p[1]));
       return ret;
     }

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -114,7 +114,8 @@ public Cursor getCursor(Canvas canvas) {
   @Override
   public void keyPressed(Canvas canvas, KeyEvent e) {
     final var code = e.getKeyCode();
-    if (active && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
+    if (active
+        && (code == KeyEvent.VK_SHIFT || code == KeyEvent.VK_ALT || code == KeyEvent.VK_CONTROL)) {
       updateMouse(canvas, lastMouseX, lastMouseY, e.getModifiersEx());
     }
   }

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -17,10 +17,10 @@
 /** The library of components that the user can access. */
 public class Components extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Components";
 

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -30,10 +30,10 @@
  */
 class GrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter";
 

File: src/main/java/com/cburch/gray/GrayIncrementer.java
Patch:
@@ -25,10 +25,10 @@
  */
 class GrayIncrementer extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Code Incrementer";
 

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -26,10 +26,10 @@
  */
 class SimpleGrayCounter extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Gray Counter (Simple)";
 

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -41,7 +41,9 @@ public static void main(String[] args) {
         FlatIntelliJLaf.installLafInfo();
 
         UIManager.setLookAndFeel(AppPreferences.LookAndFeel.get());
-        UIManager.put("ToolTip.font", new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
+        UIManager.put(
+            "ToolTip.font",
+            new FontUIResource("SansSerif", Font.BOLD, AppPreferences.getScaled(12)));
       }
     } catch (ClassNotFoundException
         | UnsupportedLookAndFeelException

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -30,8 +30,7 @@ public class ExportLatexButton extends JButton {
   ExportLatexButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExportTableButton.java
Patch:
@@ -33,8 +33,7 @@ public class ExportTableButton extends JButton {
   ExportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doSave());
+    addActionListener(event -> doSave());
   }
 
   void localeChanged() {

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -37,7 +37,6 @@ public void componentResized(ComponentEvent arg0) {
         repaint();
       }
     }
-
   }
 
   public static class NamedExpression {
@@ -57,7 +56,6 @@ public static class NamedExpression {
     }
   }
 
-
   private static final long serialVersionUID = 1L;
 
   private final MyListener myListener = new MyListener();

File: src/main/java/com/cburch/logisim/analyze/gui/ImportTableButton.java
Patch:
@@ -32,8 +32,7 @@ public class ImportTableButton extends JButton {
   ImportTableButton(JFrame parent, AnalyzerModel model) {
     this.parent = parent;
     this.model = model;
-    addActionListener(
-        event -> doLoad());
+    addActionListener(event -> doLoad());
   }
 
   void localeChanged() {
@@ -90,7 +89,8 @@ void doLoad() {
         }
         lastFile = file;
       } catch (IOException e) {
-        OptionPane.showMessageDialog(parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(
+            parent, e.getMessage(), S.get("openErrorTitle"), OptionPane.ERROR_MESSAGE);
       }
     }
   }

File: src/main/java/com/cburch/logisim/analyze/model/Entry.java
Patch:
@@ -99,5 +99,4 @@ public void preferenceChange(PreferenceChangeEvent evt) {
       fireChange();
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -238,7 +238,7 @@ static List<Implicant> computeMinimal(int format, AnalyzerModel model, String va
 
     // Now build up our sum-of-products expression
     // from the remaining terms
-    final var ret = new ArrayList<Implicant>(retSet);
+    final var ret = new ArrayList<>(retSet);
     Collections.sort(ret);
     return ret;
   }
@@ -356,7 +356,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
       final var idx = table.getVisibleRowIndex(i);
       final var dc = table.getVisibleRowDcMask(i);
       final var imp = new Implicant(dc, idx);
-      final var region = regions.computeIfAbsent(val, k -> new HashSet<Implicant>());
+      final var region = regions.computeIfAbsent(val, k -> new HashSet<>());
       region.add(imp);
     }
     // For each region...
@@ -383,7 +383,7 @@ static SortedMap<Implicant, String> computePartition(AnalyzerModel model) {
         current = next;
       }
 
-      final var sorted = new ArrayList<Implicant>(all);
+      final var sorted = new ArrayList<>(all);
       sorted.sort(sortByGenerality);
       final var chosen = new ArrayList<Implicant>();
       for (final var implicant : sorted) {

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -302,8 +302,7 @@ private static boolean implicantsSame(List<Implicant> a, List<Implicant> b) {
 
   private static boolean isAllUndefined(Entry[] a) {
     for (final var entry : a) {
-      if (entry == Entry.ZERO || entry == Entry.ONE)
-        return false;
+      if (entry == Entry.ZERO || entry == Entry.ONE) return false;
     }
     return true;
   }

File: src/main/java/com/cburch/logisim/analyze/model/ParserException.java
Patch:
@@ -16,7 +16,7 @@ public class ParserException extends Exception {
   private final StringGetter message;
   private final int start;
   private final int length;
-  
+
   public ParserException(StringGetter message, int start) {
     this(message, start, 1);
   }

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -98,7 +98,8 @@ public void move(Var variable, int delta) {
       throw new IllegalArgumentException("cannot move index " + index + " by " + delta);
     }
     if (newIndex > data.size() - 1) {
-      throw new IllegalArgumentException("Cannot move index " + index + " by " + delta + ": size " + data.size());
+      throw new IllegalArgumentException(
+          "Cannot move index " + index + " by " + delta + ": size " + data.size());
     }
     if (index == newIndex) return;
     data.remove(index);

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -271,7 +271,7 @@ public static SortedMap<Instance, String> getPinLabels(Circuit circuit) {
     }
 
     // Process first the pins that the user has given labels.
-    final var pinList = new ArrayList<Instance>(ret.keySet());
+    final var pinList = new ArrayList<>(ret.keySet());
     final var labelsTaken = new HashSet<String>();
     for (final var pin : pinList) {
       var label = pin.getAttributeSet().getValue(StdAttr.LABEL);

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -132,7 +132,8 @@ public static class LockException extends IllegalStateException {
     private final transient Thread mutatingThread;
     private final CircuitMutatorImpl mutatingMutator;
 
-    public LockException(String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
+    public LockException(
+        String msg, Circuit circ, int serial, Thread thread, CircuitMutatorImpl mutator) {
       super(msg);
       circuit = circ;
       serialNumber = serial;

File: src/main/java/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -42,7 +42,7 @@ public void add(Circuit circuit, Component comp) {
 
   @Override
   public void clear(Circuit circuit) {
-    final var comps = new HashSet<Component>(circuit.getNonWires());
+    final var comps = new HashSet<>(circuit.getNonWires());
     comps.addAll(circuit.getWires());
     if (!comps.isEmpty()) modified.add(circuit);
     log.add(CircuitChange.clear(circuit, comps));
@@ -142,7 +142,8 @@ public void setForCircuit(Circuit circuit, Attribute<?> attr, Object newValue) {
     final var oldValue = attrs.getValue(a);
     log.add(CircuitChange.setForCircuit(circuit, attr, oldValue, newValue));
     attrs.setValue(a, newValue);
-    if (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
+    if (attr == CircuitAttributes.NAME_ATTR
+        || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
       circuit.getAppearance().recomputeDefaultAppearance();
     }
   }

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -354,7 +354,7 @@ void processDirtyComponents() {
   }
 
   void processDirtyPoints() {
-    final var dirty = new HashSet<Location>(dirtyPoints);
+    final var dirty = new HashSet<>(dirtyPoints);
     dirtyPoints.clear();
     if (circuit.wires.isMapVoided()) {
       for (var i = 3; i >= 0; i--) {

File: src/main/java/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -251,7 +251,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // make a WireBundle object for each end of a splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       for (final var end : ends) {
         final var p = end.getLocation();
         final var pb = ret.createBundleAt(p);
@@ -271,7 +271,7 @@ private void computeBundleMap(BundleMap ret) {
 
     // determine the bundles at the end of each splitter
     for (final var spl : splitters) {
-      final var ends = new ArrayList<EndData>(spl.getEnds());
+      final var ends = new ArrayList<>(spl.getEnds());
       int index = -1;
       for (final var end : ends) {
         index++;
@@ -359,7 +359,7 @@ private void connectTunnels(BundleMap ret) {
     for (final var comp : tunnels) {
       final var label = comp.getAttributeSet().getValue(StdAttr.LABEL).trim();
       if (!label.equals("")) {
-        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<Location>(3));
+        final var tunnelSet = tunnelSets.computeIfAbsent(label, k -> new ArrayList<>(3));
         tunnelSet.add(comp.getLocation());
       }
     }

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -138,7 +138,8 @@ static void drawLegacy(ComponentDrawContext context, SplitterAttributes attrs, L
       if (fanout >= 3) {
         GraphicsUtil.switchToWidth(g, SPINE_WIDTH);
         g.setColor(Value.multiColor);
-        g.drawLine(xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
+        g.drawLine(
+            xSpine, y1 + (dy > 0 ? 10 : -10), xSpine, y1 + (fanout - 1) * dy + (dy > 0 ? 10 : -10));
       } else {
         g.setColor(Value.multiColor);
         g.fillOval(xSpine - SPINE_DOT / 2, y0 - SPINE_DOT / 2, SPINE_DOT, SPINE_DOT);

File: src/main/java/com/cburch/logisim/circuit/SplitterParameters.java
Patch:
@@ -65,7 +65,8 @@ class SplitterParameters {
     } else { // > or <
       final var m = facing == Direction.WEST ? -1 : 1;
       dxEnd0 = m * width;
-      dyEnd0 = justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
+      dyEnd0 =
+          justify == 0 ? -gap * (fanout / 2) : m * justify > 0 ? 10 : -(10 + gap * (fanout - 1));
       ddxEnd = 0;
       ddyEnd = gap;
       dxEndSpine = -m * (width - offs);

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -44,7 +44,8 @@ public Component createComponent(Location loc, AttributeSet attrs) {
   // user interface methods
   //
   @Override
-  public void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
+  public void drawGhost(
+      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
     final var g = context.getGraphics();
     final var dir = attrs.getValue(Wire.DIR_ATTR);
     final var len = attrs.getValue(Wire.LEN_ATTR);

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -39,7 +39,7 @@ void merge(Wire a, Wire b) {
       var set0 = map.get(a);
       var set1 = map.get(b);
       if (set0 == null && set1 == null) {
-        set0 = new ArrayList<Wire>(2);
+        set0 = new ArrayList<>(2);
         set0.add(a);
         set0.add(b);
         map.put(a, set0);
@@ -167,7 +167,7 @@ private void doOverlaps(CircuitMutator mutator) {
     final var wirePoints = new HashMap<Location, ArrayList<Wire>>();
     for (final var w : circuit.getWires()) {
       for (final var loc : w) {
-        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<Wire>(3));
+        final var locWires = wirePoints.computeIfAbsent(loc, k -> new ArrayList<>(3));
         locWires.add(w);
       }
     }

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitCustomAppearance.java
Patch:
@@ -28,11 +28,11 @@
 public class CircuitCustomAppearance extends Drawing {
 
   private final CircuitAppearance parent;
-  
+
   public CircuitCustomAppearance(CircuitAppearance parent) {
     this.parent = parent;
   }
-  
+
   @Override
   public void addObjects(int index, Collection<? extends CanvasObject> shapes) {
     parent.addObjects(index, shapes);
@@ -50,7 +50,7 @@ public List<CanvasObject> getObjectsFromBottom() {
 
   @Override
   public List<CanvasObject> getObjectsFromTop() {
-    final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());
+    final var ret = new ArrayList<>(getObjectsFromBottom());
     Collections.reverse(ret);
     return ret;
   }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -20,7 +20,8 @@
 
 class DefaultAppearance {
 
-  public static List<CanvasObject> build(Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
+  public static List<CanvasObject> build(
+      Collection<Instance> pins, AttributeOption style, boolean isFixed, String circuitName) {
     if (style == CircuitAttributes.APPEAR_CLASSIC) {
       return DefaultClassicAppearance.build(pins);
     } else if (style == CircuitAttributes.APPEAR_FPGA) {

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementWithPoker.java
Patch:
@@ -68,5 +68,4 @@ public Boolean mouseInside(InstanceState state, MouseEvent e) {
   }
 
   public abstract void performClickAction(InstanceState state, MouseEvent e);
-
 }

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -158,7 +158,7 @@ private void performUpdate(
       }
     }
     // handle replacements
-    final var addsCopy = new ArrayList<Instance>(adds);
+    final var addsCopy = new ArrayList<>(adds);
     for (final var entry : replaces.entrySet()) {
       final var port = oldObjects.remove(entry.getKey());
       if (port != null) {

File: src/main/java/com/cburch/logisim/comp/AbstractComponent.java
Patch:
@@ -47,5 +47,4 @@ public Bounds getBounds(Graphics g) {
   public EndData getEnd(int index) {
     return getEnds().get(index);
   }
-
 }

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -41,8 +41,7 @@ public interface ComponentFactory extends AttributeDefaultProvider {
 
   void removeComponent(Circuit circ, Component c, CircuitState state);
 
-  void drawGhost(
-      ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
+  void drawGhost(ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs);
 
   @Override
   Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver);

File: src/main/java/com/cburch/logisim/data/Attribute.java
Patch:
@@ -69,7 +69,7 @@ public void setHidden(boolean val) {
   public boolean isHidden() {
     return hidden;
   }
-  
+
   public boolean isToSave() {
     return true;
   }

File: src/main/java/com/cburch/logisim/data/AttributeSet.java
Patch:
@@ -43,8 +43,8 @@ default void removeAttributeListener(AttributeListener l) {
   <V> void setValue(Attribute<V> attr, V value);
 
   /**
-   * Returns attributes that may also be changed as a side effect of changing attr to value
-   * or changing attr back to its current value from value. This method does not change attr.
+   * Returns attributes that may also be changed as a side effect of changing attr to value or
+   * changing attr back to its current value from value. This method does not change attr.
    *
    * @param attr The attribute whose change is being considered
    * @param value The new value for attr that is being considered

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -214,5 +214,4 @@ public static AttributeSet fixedSet(Attribute<?>[] attrs, Object[] initValues) {
       return EMPTY;
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -35,7 +35,7 @@ private BooleanAttribute(String name, StringGetter disp) {
 
     @Override
     public Boolean parse(String value) {
-      return vals[Boolean.valueOf(value) ? 0 : 1];
+      return vals[Boolean.parseBoolean(value) ? 0 : 1];
     }
 
     @Override

File: src/main/java/com/cburch/logisim/file/FileStatistics.java
Patch:
@@ -70,7 +70,7 @@ private FileStatistics(List<Count> counts, Count totalWithout, Count totalWith)
   }
 
   public static FileStatistics compute(LogisimFile file, Circuit circuit) {
-    final var include = new HashSet<Circuit>(file.getCircuits());
+    final var include = new HashSet<>(file.getCircuits());
     final var countMap = new HashMap<Circuit, Map<ComponentFactory, Count>>();
     doRecursiveCount(circuit, include, countMap);
     doUniqueCounts(countMap.get(circuit), countMap);

File: src/main/java/com/cburch/logisim/file/LoadedLibrary.java
Patch:
@@ -183,7 +183,7 @@ private void resolveChanges(Library old) {
       fireLibraryEvent(LibraryEvent.SET_NAME, base.getDisplayName());
     }
 
-    final var changes = new HashSet<Library>(old.getLibraries());
+    final var changes = new HashSet<>(old.getLibraries());
     base.getLibraries().forEach(changes::remove);
     for (final var lib : changes) {
       fireLibraryEvent(LibraryEvent.REMOVE_LIBRARY, lib);

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -94,7 +94,8 @@ public synchronized void mark(final int limit) {
   }
 
   /**
-   *  @return false - mark is not supported */
+   * @return false - mark is not supported
+   */
   @Override
   public boolean markSupported() {
     return false; // would be imprecise

File: src/main/java/com/cburch/logisim/fpga/data/SimpleRectangle.java
Patch:
@@ -112,5 +112,4 @@ public void paint(Graphics2D g) {
     }
     g1.dispose();
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -49,5 +49,4 @@ public void setParentNet(Net connectedNet, Byte bitIndex) {
     myOwnNet = connectedNet;
     myOwnNetBitIndex = bitIndex;
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Net.java
Patch:
@@ -158,8 +158,7 @@ public boolean hasBitSinks(int bitid) {
   }
 
   public List<ConnectionPoint> getBitSinks(int bitIndex) {
-    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size()))
-      return new ArrayList<>();
+    if ((bitIndex < 0) || (bitIndex >= sourceNetsList.size())) return new ArrayList<>();
     return new ArrayList<>(sinkList.get(bitIndex).getAll());
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/DialogNotification.java
Patch:
@@ -36,8 +36,7 @@ public static void showDialogNotification(Frame parent, String type, String stri
     GridBagConstraints c = new GridBagConstraints();
     JLabel message = new JLabel(string);
     JButton close = new JButton(S.get("FpgaBoardClose"));
-    ActionListener actionListener =
-        e -> dialog.dispose();
+    ActionListener actionListener = e -> dialog.dispose();
     close.addActionListener(actionListener);
 
     c.gridx = 0;
@@ -57,5 +56,4 @@ public static void showDialogNotification(Frame parent, String type, String stri
     dialog.setAlwaysOnTop(true);
     dialog.setVisible(true);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderListWindow.java
Patch:
@@ -22,7 +22,8 @@
 import javax.swing.event.ListDataEvent;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderListWindow extends JFrame implements BaseWindowListenerContract, BaseListDataListenerContract {
+public class FpgaCommanderListWindow extends JFrame
+    implements BaseWindowListenerContract, BaseListDataListenerContract {
 
   private final String Title;
   private final JList<Object> textArea = new JList<>();

File: src/main/java/com/cburch/logisim/fpga/gui/FpgaCommanderTextWindow.java
Patch:
@@ -23,7 +23,8 @@
 import javax.swing.text.DefaultCaret;
 
 @SuppressWarnings("serial")
-public class FpgaCommanderTextWindow extends JFrame implements BaseKeyListenerContract, BaseWindowListenerContract {
+public class FpgaCommanderTextWindow extends JFrame
+    implements BaseKeyListenerContract, BaseWindowListenerContract {
 
   private int FontSize;
   private final String Title;

File: src/main/java/com/cburch/logisim/fpga/gui/IoComponentSelector.java
Patch:
@@ -65,5 +65,4 @@ public void actionPerformed(ActionEvent e) {
     action_id = e.getActionCommand();
     diag.setVisible(false);
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -547,7 +547,7 @@ public static void addAllWiresSorted(LineBuffer contents, Map<String, String> wi
     var maxNameLength = 0;
     for (var wire : wires.keySet())
       maxNameLength = Math.max(maxNameLength, wire.length());
-    final var sortedWires = new TreeSet<String>(wires.keySet());
+    final var sortedWires = new TreeSet<>(wires.keySet());
     for (var wire : sortedWires)
       contents.add("{{assign}}{{1}}{{2}}{{=}}{{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
     wires.clear();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -34,7 +34,7 @@ public class HdlParameters {
   public static final int MAP_GATE_INPUT_BUBLE = 7;
   public static final int MAP_POW2 = 8;
 
-  private class ParameterInfo {
+  private static class ParameterInfo {
     private final boolean isOnlyUsedForBusses;
     private boolean isIntParameter = true;
     private final String parameterName;
@@ -43,7 +43,7 @@ private class ParameterInfo {
     private long parameterValue = -1;
     private long multiplyValue = 1;
     private long offsetValue = 0;
-    private List<Attribute<?>> attributesList = new ArrayList<>();
+    private final List<Attribute<?>> attributesList = new ArrayList<>();
     private Map<AttributeOption, Integer> attributeOptionMap = new HashMap<>();
     private final Attribute<BitWidth> attributeToCheckForBus;
 

File: src/main/java/com/cburch/logisim/fpga/prefs/FpgaOptions.java
Patch:
@@ -153,7 +153,7 @@ public FpgaOptions(PreferencesFrame frame) {
     add(getMapCols(), c);
     localeChanged();
   }
-  
+
   private JPanel getVhdlOptions() {
     final var isVhdl = AppPreferences.HdlType.get().equals(HdlGeneratorFactory.VHDL);
     vhdlPan = new JPanel();
@@ -162,7 +162,8 @@ private JPanel getVhdlOptions() {
     gbc.gridx = 0;
     gbc.gridy = 0;
     gbc.fill = GridBagConstraints.HORIZONTAL;
-    vhdlKeywordUpperCase = ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
+    vhdlKeywordUpperCase =
+        ((PrefMonitorBoolean) AppPreferences.VhdlKeywordsUpperCase).getCheckBox();
     vhdlPan.add(vhdlKeywordUpperCase, gbc);
     vhdlPan.setEnabled(isVhdl);
     vhdlKeywordUpperCase.setEnabled(isVhdl);
@@ -304,5 +305,4 @@ private void selectWorkSpace(Component parentComponent) {
       AppPreferences.FPGA_Workspace.set(file.getPath() + File.separator);
     }
   }
-
 }

File: src/main/java/com/cburch/logisim/fpga/prefs/SoftwaresOptions.java
Patch:
@@ -105,7 +105,6 @@ public SoftwaresOptions(PreferencesFrame window) {
     c.insets = new Insets(2, 4, 4, 2);
     c.anchor = GridBagConstraints.BASELINE_LEADING;
 
-
     var gridY = 0;
 
     c.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -225,7 +225,7 @@ public void paste() {
     // find how far we have to translate shapes so that at least one of the
     // pasted shapes doesn't match what's already in the model
     final var raw = canvas.getModel().getObjectsFromBottom();
-    final var cur = new MatchingSet<CanvasObject>(raw);
+    final var cur = new MatchingSet<>(raw);
     int dx = 0;
     while (true) {
       // if any shapes in "add" aren't in canvas, we are done

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardContents.java
Patch:
@@ -22,7 +22,8 @@ class ClipboardContents {
   private final Location anchorLocation;
   private final Direction anchorFacing;
 
-  public ClipboardContents(Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
+  public ClipboardContents(
+      Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
     this.onClipboard = java.util.List.copyOf(onClipboard);
     this.anchorLocation = anchorLocation;
     this.anchorFacing = anchorFacing;

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateDialog.java
Patch:
@@ -159,7 +159,7 @@ private void apply() {
 
     // TreePath[] roots = tree.getCheckingRoots();
     final var checked = tree.getCheckingPaths();
-    final var toAdd = new ArrayList<TreePath>(Arrays.asList(checked));
+    final var toAdd = new ArrayList<>(Arrays.asList(checked));
 
     // Remove existing dynamic objects that are no longer checked.
     final var toRemove = new ArrayList<CanvasObject>();
@@ -182,7 +182,7 @@ private void apply() {
     // sort the remaining shapes
     toAdd.sort(new CompareByLocations());
 
-    final var avoid = new ArrayList<CanvasObject>(model.getObjectsFromBottom());
+    final var avoid = new ArrayList<>(model.getObjectsFromBottom());
     for (var i = avoid.size() - 1; i >= 0; i--) {
       if (avoid.get(i) instanceof AppearanceAnchor) avoid.remove(i);
     }

File: src/main/java/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -95,7 +95,7 @@ public void attributeListChanged(AttributeEvent e) {
 
     // compute the new list of rows, possible adding into hash map
     final var newRows = new ArrayList<AttrRow>();
-    final var missing = new HashSet<Attribute<?>>(rowMap.keySet());
+    final var missing = new HashSet<>(rowMap.keySet());
     /* put the vhdl/verilog row */
     final var rowd = new HDLrow(null);
     newRows.add(rowd);

File: src/main/java/com/cburch/logisim/gui/generic/FontSelector.java
Patch:
@@ -40,9 +40,9 @@ public class FontSelector extends JPanel implements JInputComponent, ActionListe
 
   private final Set<String> fontNames;
   private Font currentFont = StdAttr.DEFAULT_LABEL_FONT;
-  private JTextArea preview = new JTextArea(3, 20);
-  private JList<String> selectableFontFamilies;
-  private JList<Integer> selectableFontSize;
+  private final JTextArea preview = new JTextArea(3, 20);
+  private final JList<String> selectableFontFamilies;
+  private final JList<Integer> selectableFontSize;
   private JCheckBox boldAttribute;
   private JCheckBox italicAttribute;
   private int fontSize;

File: src/main/java/com/cburch/logisim/gui/generic/GridPainter.java
Patch:
@@ -200,7 +200,4 @@ public void propertyChange(PropertyChangeEvent event) {
       }
     }
   }
-
-
-
 }

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerModel.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-/**
+/*
  * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
  */
 
@@ -84,7 +84,8 @@ public void projectChanged(ProjectEvent event) {
   private void setLogisimFile(LogisimFile file) {
     final var oldRoot = (Node<?>) getRoot();
     oldRoot.decommission();
-    setRoot((file == null)
+    setRoot(
+        (file == null)
             ? null
             : new ProjectExplorerLibraryNode(this, file, uiElement, showMouseTools));
     fireStructureChanged();

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -99,7 +99,7 @@ private void fillArray() {
     y++;
 
     if (!registers.isEmpty()) {
-      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).collect(Collectors.toList());
+      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).toList();
       for (final var key : keys) {
         constraints.gridy = y;
         constraints.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/generic/TikZInfo.java
Patch:
@@ -297,11 +297,9 @@ private void optimize() {
   }
 
   private String getCharRepresentation(int i) {
-    final var chars = new StringBuilder();
     final var repeat = i / 26;
     final var charId = i % 26;
-    chars.append(String.valueOf((char) (charId + 'A')).repeat(repeat + 1));
-    return chars.toString();
+    return String.valueOf((char) (charId + 'A')).repeat(repeat + 1);
   }
 
   private String getFontDefinition(int i) {

File: src/main/java/com/cburch/logisim/gui/generic/ZoomModel.java
Patch:
@@ -35,5 +35,4 @@ public interface ZoomModel {
   void addPropertyChangeListener(String prop, PropertyChangeListener l);
 
   void removePropertyChangeListener(String prop, PropertyChangeListener l);
-
 }

File: src/main/java/com/cburch/logisim/gui/hex/BufferedLineReader.java
Patch:
@@ -123,8 +123,7 @@ public String readLine() throws IOException {
       ret.append(buf, initPos, bufPos - initPos);
 
       // refill buffer, if necessary and possible
-      if (!refill())
-        return ret.toString(); // note: file ended without newline
+      if (!refill()) return ret.toString(); // note: file ended without newline
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/hex/HexFrame.java
Patch:
@@ -63,7 +63,9 @@ public HexFrame(Project project, Instance instance, HexModel model) {
     close.addActionListener(myListener);
 
     final var pref = editor.getPreferredSize();
-    final var scroll = new JScrollPane(editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
+    final var scroll =
+        new JScrollPane(
+            editor, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
     pref.height = Math.min(pref.height, pref.width * 3 / 2);
     scroll.setPreferredSize(pref);
     scroll.getViewport().setBackground(editor.getBackground());

File: src/main/java/com/cburch/logisim/gui/icons/CircuitIcon.java
Patch:
@@ -10,5 +10,4 @@ public class CircuitIcon extends BaseIcon {
   protected void paintIcon(Graphics2D g2d) {
     SubcircuitFactory.paintEvolutionIcon(g2d);
   }
-
 }

File: src/main/java/com/cburch/logisim/gui/icons/CounterIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class CounterIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/JoystickIcon.java
Patch:
@@ -15,7 +15,7 @@
 
 public class JoystickIcon extends BaseIcon {
 
-  private int state = 1;
+  private final int state = 1;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -16,7 +16,7 @@
 
 public class ShifterIcon extends BaseIcon {
 
-  private int state = 2;
+  private final int state = 2;
 
   @Override
   protected void paintIcon(Graphics2D g2) {

File: src/main/java/com/cburch/logisim/gui/log/ComponentSelector.java
Patch:
@@ -225,7 +225,7 @@ private boolean computeChildren() { // returns true if changed
       final var newChildren = new ArrayList<TreeNode<?>>();
       final var subcircs = new ArrayList<Component>();
       var changed = false;
-      // todo: hide from display any unselectable things that also have no children
+      // TODO: hide from display any unselectable things that also have no children
       for (final var c : circ.getNonWires()) {
         // For DRIVEABLE_CLOCKS do not recurse into subcircuits
         if (c.getFactory() instanceof SubcircuitFactory && mode != DRIVEABLE_CLOCKS) {

File: src/main/java/com/cburch/logisim/gui/log/TablePanel.java
Patch:
@@ -47,7 +47,7 @@ public TablePanel(LogFrame frame) {
     tableView = new TableView();
     final var pane =
         new JScrollPane(
-                tableView,
+            tableView,
             JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
             JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
     pane.setVerticalScrollBar(vsb);
@@ -97,7 +97,7 @@ class TableView extends JPanel {
     private static final long serialVersionUID = 1L;
 
     private void computePreferredSize() {
-      // todo: sizing is terrible
+      // TODO: sizing is terrible
       final var model = getModel();
       final var columns = model.getSignalCount();
       if (columns == 0) {

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -90,7 +90,7 @@ public class Frame extends LFrame.MainWindow implements LocaleListener {
   private final HorizontalSplitPane leftRegion;
   private final HorizontalSplitPane rightRegion;
   private final HorizontalSplitPane editRegion;
-  private MainRegionVerticalSplitPane mainRegion;
+  private final MainRegionVerticalSplitPane mainRegion;
   private final JPanel rightPanel;
   private final JPanel mainPanelSuper;
   private final CardPanel mainPanel;
@@ -228,7 +228,7 @@ public Frame(Project project) {
   /**
    * Content aware VerticalSplitPane that handles main layout changes with bit of extra logic.
    */
-  private class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
+  private static class MainRegionVerticalSplitPane extends VerticalSplitPane implements PropertyChangeListener {
     private final JComponent componentTree;
     private final JComponent mainCanvas;
     private Direction orientation;

File: src/main/java/com/cburch/logisim/gui/menu/Popups.java
Patch:
@@ -91,7 +91,8 @@ private static class CircuitPopup extends JPopupMenu implements ActionListener {
         }
       }
       main.setEnabled(canChange && file.getMainCircuit() != circuit);
-      remove.setEnabled(canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
+      remove.setEnabled(
+          canChange && file.getCircuitCount() > 1 && proj.getDependencies().canRemove(circuit));
     }
 
     @Override

File: src/main/java/com/cburch/logisim/gui/menu/ProjectLibraryActions.java
Patch:
@@ -143,7 +143,8 @@ public static void doUnloadLibraries(Project proj) {
   public static void doUnloadLibrary(Project proj, Library lib) {
     final var message = proj.getLogisimFile().getUnloadLibraryMessage(lib);
     if (message != null) {
-      OptionPane.showMessageDialog(proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
+      OptionPane.showMessageDialog(
+          proj.getFrame(), message, S.get("unloadErrorTitle"), OptionPane.ERROR_MESSAGE);
     } else {
       proj.doAction(LogisimFileActions.unloadLibrary(lib));
     }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -115,7 +115,9 @@ public void actionPerformed(ActionEvent event) {
         final var opt = (ComboOption) gateUndefined.getSelectedItem();
         if (opt != null) {
           final var attrs = getOptions().getAttributeSet();
-          getProject().doAction(OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
+          getProject()
+              .doAction(
+                  OptionsActions.setAttribute(attrs, Options.ATTR_GATE_UNDEFINED, opt.getValue()));
         }
       } else if (source == memUnknown) {
         AppPreferences.Memory_Startup_Unknown.set(memUnknown.isSelected());

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -137,7 +137,9 @@ public WindowOptions(PreferencesFrame window) {
     panel.add(importantB);
 
     zoomLabel = new JLabel(S.get("windowToolbarZoomfactor"));
-    zoomValue = new ZoomSlider(JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
+    zoomValue =
+        new ZoomSlider(
+            JSlider.HORIZONTAL, 100, 300, (int) (AppPreferences.SCALE_FACTOR.get() * 100));
     zoomAutoButton = new JButton();
     zoomAutoButton.addActionListener(listener);
     zoomAutoButton.setActionCommand(cmdSetAutoScaleFactor);

File: src/main/java/com/cburch/logisim/gui/start/SplashScreen.java
Patch:
@@ -54,6 +54,7 @@ public class SplashScreen extends JWindow {
   boolean inClose = false; // for avoiding mutual recursion
   final JProgressBar progress = new JProgressBar(0, PROGRESS_MAX);
   final long startTime = System.currentTimeMillis();
+
   public SplashScreen() {
     setName(BuildInfo.displayName);
     JPanel imagePanel = About.getImagePanel();

File: src/main/java/com/cburch/logisim/gui/test/TestFrame.java
Patch:
@@ -278,7 +278,6 @@ public void propagationCompleted(Simulator.Event e) {
     public void simulatorStateChanged(Simulator.Event e) {
       // do nothing
     }
-
   }
 
   private class WindowMenuManager extends WindowMenuItemManager

File: src/main/java/com/cburch/logisim/instance/InstanceLoggerAdapter.java
Patch:
@@ -24,7 +24,8 @@ class InstanceLoggerAdapter implements LoggableContract {
   private InstanceLogger logger;
   private InstanceStateImpl state;
 
-  public InstanceLoggerAdapter(InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
+  public InstanceLoggerAdapter(
+      InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
     try {
       this.comp = comp;
       this.logger = loggerClass.getDeclaredConstructor().newInstance();

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -88,7 +88,9 @@ public Caret getPokeCaret(ComponentUserEvent event) {
     final var isAccepted = poker.init(state, e);
     if (isAccepted) {
       this.state = state;
-      this.context = new ComponentDrawContext(event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
+      this.context =
+          new ComponentDrawContext(
+              event.getCanvas(), event.getCanvas().getCircuit(), circState, null, null);
       mousePressed(e);
       return this;
     }

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -131,7 +131,8 @@ public void textChanged(TextFieldEvent e) {
     }
   }
 
-  void update(Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
+  void update(
+      Attribute<String> labelAttr, Attribute<Font> fontAttr, int x, int y, int halign, int valign) {
     final var wasReg = shouldRegister();
     this.labelAttr = labelAttr;
     this.fontAttr = fontAttr;

File: src/main/java/com/cburch/logisim/prefs/ConvertEventListener.java
Patch:
@@ -10,5 +10,5 @@
 package com.cburch.logisim.prefs;
 
 public interface ConvertEventListener {
-  public void attributeValueChanged(ConvertEvent e);
+  void attributeValueChanged(ConvertEvent e);
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitor.java
Patch:
@@ -17,11 +17,11 @@
 public interface PrefMonitor<E> extends PreferenceChangeListener {
   void addPropertyChangeListener(PropertyChangeListener listener);
 
-  public E get();
+  E get();
 
-  public boolean getBoolean();
+  boolean getBoolean();
 
-  public String getIdentifier();
+  String getIdentifier();
 
   boolean isSource(PropertyChangeEvent event);
 

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorBoolean.java
Patch:
@@ -67,7 +67,6 @@ public JCheckBox getCheckBox() {
 
   @Override
   public void actionPerformed(ActionEvent e) {
-    if (e.getSource() == box)
-      set(box.isSelected());
+    if (e.getSource() == box) set(box.isSelected());
   }
 }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorInt.java
Patch:
@@ -37,8 +37,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
       final var newValue = prefs.getInt(name, dflt);
       if (newValue != oldValue) {
         value = newValue;
-        AppPreferences.firePropertyChange(
-            name, oldValue, newValue);
+        AppPreferences.firePropertyChange(name, oldValue, newValue);
       }
     }
   }

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -91,7 +91,7 @@ private static boolean checkValidFilename(
     LibraryTools.buildLibraryList(proj.getLogisimFile(), tempSet);
     LibraryTools.buildToolList(proj.getLogisimFile(), forbiddenNames);
     forbiddenNames.addAll(tempSet.keySet());
-    var pattern = Pattern.compile("[^a-z0-9_.]", Pattern.CASE_INSENSITIVE);
+    var pattern = Pattern.compile("[^a-z\\d_.]", Pattern.CASE_INSENSITIVE);
     var matcher = pattern.matcher(filename);
     if (matcher.find()) {
       isOk = false;
@@ -489,7 +489,7 @@ public static boolean doSaveAs(Project proj) {
     if (!selectedFile.getName().endsWith(Loader.LOGISIM_EXTENSION)) {
       var old = selectedFile.getName();
       int ext0 = old.lastIndexOf('.');
-      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}[0-9]?", old.substring(ext0))) {
+      if (ext0 < 0 || !Pattern.matches("\\.\\p{L}{2,}\\d?", old.substring(ext0))) {
         selectedFile = new File(selectedFile.getParentFile(), old + Loader.LOGISIM_EXTENSION);
       } else {
         var ext = old.substring(ext0);

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -213,5 +213,4 @@ public static boolean windowNamed(String name) {
     }
     return false;
   }
-
 }

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -36,10 +36,10 @@
 
 public class SocBus extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocBus";
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusInfo.java
Patch:
@@ -54,6 +54,7 @@ public void paint(Graphics g, Bounds b) {
     g.setColor(color);
     g.fillRect(b.getX(), b.getY(), b.getWidth(), b.getHeight());
     g.setColor(Color.BLACK);
-    GraphicsUtil.drawCenteredText(g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
+    GraphicsUtil.drawCenteredText(
+        g, ident == null ? S.get("SocBusNotConnected") : ident, b.getCenterX(), b.getCenterY());
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/ListeningFrame.java
Patch:
@@ -12,7 +12,8 @@
 import java.awt.event.WindowEvent;
 import javax.swing.JFrame;
 
-public class ListeningFrame extends JFrame implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
+public class ListeningFrame extends JFrame
+    implements BaseWindowListenerContract, LocaleListener, CircuitListener, ComponentListener {
 
   private static final long serialVersionUID = 1L;
   private final StringGetter title;

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUart.java
Patch:
@@ -33,10 +33,10 @@
 
 public class JtagUart extends SocInstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "SocJtagUart";
 

File: src/main/java/com/cburch/logisim/soc/util/AssemblerAsmInstruction.java
Patch:
@@ -115,7 +115,8 @@ public boolean replaceLabels(Map<String, Long> labels, Map<AssemblerToken, Strin
     return true;
   }
 
-  public boolean replaceDefines(Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
+  public boolean replaceDefines(
+      Map<String, Integer> defines, Map<AssemblerToken, StringGetter> errors) {
     for (final var parameter : parameters) {
       for (final var assemblerToken : parameter) {
         if (assemblerToken.getType() == AssemblerToken.MAYBE_LABEL) {

File: src/main/java/com/cburch/logisim/soc/util/AssemblerMacro.java
Patch:
@@ -102,8 +102,7 @@ public boolean checkForMacros(HashMap<AssemblerToken, StringGetter> errors, Set<
           errors.put(token, S.getter("AssemblerMacroCannotUseRecurency"));
           hasErrors = true;
         }
-        if (names.contains(token.getValue()))
-          token.setType(AssemblerToken.MACRO);
+        if (names.contains(token.getValue())) token.setType(AssemblerToken.MACRO);
       }
     }
     return hasErrors;

File: src/main/java/com/cburch/logisim/soc/vga/SocVgaShape.java
Patch:
@@ -37,7 +37,8 @@ public void setBounds(int width, int height) {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    VgaState.VgaDisplayState data = (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
+    VgaState.VgaDisplayState data =
+        (state == null) ? null : (VgaState.VgaDisplayState) getData(state);
     if (state == null || data == null) {
       Color c = g.getColor();
       g.setColor(Color.BLUE);

File: src/main/java/com/cburch/logisim/std/Builtin.java
Patch:
@@ -32,10 +32,10 @@
 
 public class Builtin extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Builtin";
 

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -18,10 +18,10 @@
 
 public class ArithmeticLibrary extends Library {
   /**
-   * Unique identifier of the library, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the library, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all libraries.
+   * <p>Identifier value must MUST be unique string among all libraries.
    */
   public static final String _ID = "Arithmetic";
 

File: src/main/java/com/cburch/logisim/std/arith/BitFinder.java
Patch:
@@ -31,10 +31,10 @@
 
 public class BitFinder extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "BitFinder";
 

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -31,10 +31,10 @@
 
 public class Comparator extends InstanceFactory {
   /**
-   * Unique identifier of the tool, used as reference in project files.
-   * Do NOT change as it will prevent project files from loading.
+   * Unique identifier of the tool, used as reference in project files. Do NOT change as it will
+   * prevent project files from loading.
    *
-   * Identifier value must MUST be unique string among all tools.
+   * <p>Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "Comparator";
 

File: src/main/java/com/cburch/logisim/std/arith/ShifterHdlGeneratorFactory.java
Patch:
@@ -177,7 +177,7 @@ private LineBuffer getStageFunctionalityVhdl(int stageNumber, int nrOfBits) {
           .add("""
                                dataA({{nrOfBits2}} {{downto}} 0)&s_stage0ShiftIn
                                   {{when}} {{shiftMode}} = 0 {{or}} {{shiftMode}} = 1 {{else}}
-                               s_stage0ShiftIn&dataA( {{nrOfBits2}} {{downto}} 1 );
+                               s_stage0ShiftIn&dataA( {{nrOfBits1}} {{downto}} 1 );
             """);
     } else {
       contents

File: src/main/java/com/cburch/logisim/std/gates/AbstractBufferHdlGenerator.java
Patch:
@@ -31,6 +31,8 @@ public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponen
     final var nrOfBits = componentInfo.getComponent().getAttributeSet().getValue(StdAttr.WIDTH).getWidth();
     final var dest = (nrOfBits == 1) ? Hdl.getNetName(componentInfo, 0, false, nets) : Hdl.getBusName(componentInfo, 0, nets);
     final var source = (nrOfBits == 1) ? Hdl.getNetName(componentInfo, 1, false, nets) : Hdl.getBusName(componentInfo, 1, nets);
+    if (!componentInfo.isEndConnected(0))
+      return LineBuffer.getBuffer().add("");
     return LineBuffer.getHdlBuffer().add("{{assign}}{{1}}{{=}}{{2}}{{3}};", dest, isInverter ? Hdl.notOperator() : "", source);
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -52,7 +52,7 @@ public void propagateTtl(InstanceState state) {
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));
-    if (state.getPortValue(0) == Value.TRUE) {
+    if (state.getPortValue(0) == Value.FALSE) {
       data.setValue(Value.createKnown(data.getWidth(), 0));
     } else if (triggered) {
       Value[] vals = data.getValue().getAll();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -52,7 +52,7 @@ public void propagateTtl(InstanceState state) {
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));
-    if (state.getPortValue(0) == Value.TRUE) {
+    if (state.getPortValue(0) == Value.FALSE) {
       data.setValue(Value.createKnown(data.getWidth(), 0));
     } else if (triggered) {
       Value[] vals = data.getValue().getAll();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -52,7 +52,7 @@ public void propagateTtl(InstanceState state) {
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));
-    if (state.getPortValue(0) == Value.TRUE) {
+    if (state.getPortValue(0) == Value.FALSE) {
       data.setValue(Value.createKnown(data.getWidth(), 0));
     } else if (triggered) {
       Value[] vals = data.getValue().getAll();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -52,7 +52,7 @@ public void propagateTtl(InstanceState state) {
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));
-    if (state.getPortValue(0) == Value.TRUE) {
+    if (state.getPortValue(0) == Value.FALSE) {
       data.setValue(Value.createKnown(data.getWidth(), 0));
     } else if (triggered) {
       Value[] vals = data.getValue().getAll();

File: src/main/java/com/cburch/logisim/gui/icons/ArithmeticIcon.java
Patch:
@@ -39,7 +39,7 @@ public void setInvalid(boolean invalid) {
   @Override
   protected void paintIcon(Graphics2D g2) {
     g2.setStroke(new BasicStroke(scale(2)));
-//    g2.setColor(Color.BLACK);
+//    g2.setColor(Color.BLACK); // WIP
     final var scale = opp.length() >= nrOfChars ? nrOfChars : 1;
     final var yOff = opp.length() > nrOfChars ? getIconHeight() >> 2 : getIconHeight() >> 1;
     var font = g2.getFont().deriveFont((float) getIconWidth() / scale).deriveFont(Font.BOLD);

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -31,7 +31,7 @@ protected void paintIcon(Graphics2D g2) {
       }
     }
     final var f = g2.getFont().deriveFont(scale((float) 6)).deriveFont(Font.BOLD);
-//    g2.setColor(Color.BLACK);
+//    g2.setColor(Color.BLACK); // WIP
     g2.drawRect(0, scale(4), scale(16), scale(8));
     final var t = new TextLayout(s.toString(), f, g2.getFontRenderContext());
     final var x = scale((float) 8) - (float) t.getBounds().getCenterX();

File: src/main/java/com/cburch/logisim/std/bfh/BinToBcd.java
Patch:
@@ -55,6 +55,7 @@ public void paintInstance(InstancePainter painter) {
     final var nrOfBits = painter.getAttributeValue(BinToBcd.ATTR_BinBits);
     final var nrOfPorts = (int) (Math.log10(Math.pow(2.0, nrOfBits.getWidth())) + 1.0);
 
+    gfx.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
     painter.drawBounds();
     painter.drawPort(BINin, "Bin", Direction.EAST);
     for (var i = nrOfPorts; i > 0; i--)

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -211,14 +211,14 @@ public void propagate(CircuitState circuitState) {
       g.setColor(new Color(cm.getRGB(color)));
       g.fillRect(x, y, 1, 1);
       if (RESET_SYNC.equals(resetOption) && val(circuitState, P_RST) == Value.TRUE) {
-        g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
+        g.setColor(Color.BLACK);
         g.fillRect(0, 0, w, h);
       }
     }
 
     if (!RESET_SYNC.equals(resetOption) && val(circuitState, P_RST) == Value.TRUE) {
       final var g = state.img.getGraphics();
-      g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
+      g.setColor(Color.BLACK);
       g.fillRect(0, 0, w, h);
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractTtlGate.java
Patch:
@@ -194,7 +194,8 @@ protected void paintBase(InstancePainter painter, boolean drawname, boolean ghos
     var yp = y;
     var width = bds.getWidth();
     var height = bds.getHeight();
-    g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
+    if (!ghost)
+      g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
     for (byte i = 0; i < this.pinNumber; i++) {
       if (i < this.pinNumber / 2) {
         if (dir == Direction.WEST || dir == Direction.EAST) xp = i * 20 + (10 - PIN_WIDTH / 2) + x;

File: src/main/java/com/cburch/logisim/std/wiring/Probe.java
Patch:
@@ -224,7 +224,7 @@ static void paintValue(InstancePainter painter, Value value, boolean colored) {
         (int) ((bds.getX() + bds.getWidth() - LabelValueXOffset) / 0.7),
         (int) ((bds.getY() + bds.getHeight() - 2) / 0.7));
     g2.scale(1.0 / 0.7, 1.0 / 0.7);
-    g.setColor(new Color(AppPreferences.COMPONENT_COLOR.get()));
+    g.setColor(Color.BLACK);
     if (radix == null || radix == RadixOption.RADIX_2) {
       int x = bds.getX();
       int y = bds.getY();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474.java
Patch:
@@ -137,7 +137,7 @@ public void propagateTtl(InstanceState state) {
   }
 
   private void drawState(Graphics g, int x, int y, int ID, TtlRegisterData state) {
-    if (state != null) return;
+    if (state == null) return;
     g.setColor(state.getValue().get(ID).getColor());
     g.fillOval(x + 33, y + 30, 8, 8);
     g.setColor(Color.WHITE);

File: src/main/java/com/cburch/logisim/std/ttl/Drawgates.java
Patch:
@@ -183,7 +183,7 @@ static void paintXor(Graphics g, int x, int y, int width, int height, boolean ne
 
   /**
    * Draws the schematic symbol for an open-collector/open-drain output
-   * 
+   *
    * @param g Graphics context to draw to
    * @param x x position of symbol
    * @param y y position of symbol

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HdlGenerator.java
Patch:
@@ -72,8 +72,8 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
           assign Q7n       = ~curState[0];
           assign enable    = ~CKIh & {{tick}};
           assign parData   = {P7, P6, P5, P4, P3, P2, P1, P0};
-          assign nextState = enable == 0 ? curState :
-                             SHnLD == 0 ? parData : {SER, curState[7:1]};
+          assign nextState = SHnLD == 0 ? parData :
+                             enable == 0 ? curState : {SER, curState[7:1]};
           always @(posedge {{CLK}})
           begin
              curState = nextState;

File: src/main/java/com/cburch/logisim/std/ttl/Drawgates.java
Patch:
@@ -183,6 +183,7 @@ static void paintXor(Graphics g, int x, int y, int width, int height, boolean ne
 
   /**
    * Draws the schematic symbol for an open-collector/open-drain output
+   * 
    * @param g Graphics context to draw to
    * @param x x position of symbol
    * @param y y position of symbol

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74138.java
Patch:
@@ -93,9 +93,9 @@ protected byte mapPort(byte dsIdx) {
 
   protected void computeState(InstanceState state, byte inEn1, byte inEn2a, byte inEn2b, byte inA, byte inB, byte inC, byte[] outPorts) {
     final var enabled =
-      state.getPortValue(mapPort(inEn1)) == Value.TRUE &&   // Active HIGH
-      state.getPortValue(mapPort(inEn2a)) == Value.FALSE && // Active LOW
-      state.getPortValue(mapPort(inEn2b)) == Value.FALSE;   // Active LOW
+        state.getPortValue(mapPort(inEn1)) == Value.TRUE        // Active HIGH
+        && state.getPortValue(mapPort(inEn2a)) == Value.FALSE   // Active LOW
+        && state.getPortValue(mapPort(inEn2b)) == Value.FALSE;  // Active LOW
     final var A = state.getPortValue(mapPort(inA)) == Value.TRUE ? (byte) 1 : 0;
     final var B = state.getPortValue(mapPort(inB)) == Value.TRUE ? (byte) 2 : 0;
     final var C = state.getPortValue(mapPort(inC)) == Value.TRUE ? (byte) 4 : 0;

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -835,6 +835,7 @@ private void drawLinedHeader(Graphics2D gfx, int x, int y) {
             new Point(x + 8 * cellWidth, y + 8 + rows * cellHeight));
       }
       default -> {
+        // none
       }
     }
     switch (rows) {

File: src/main/java/com/cburch/logisim/comp/TextFieldCaret.java
Patch:
@@ -267,8 +267,6 @@ protected void arrowKeyMaybePressed(KeyEvent e, boolean shift, boolean ctrl) {
         }
         e.consume();
       }
-      default -> {
-      }
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/FlipFlopIcon.java
Patch:
@@ -108,8 +108,8 @@ private void paintEvolutionIcon(Graphics2D g2) {
         p.lineTo(scale(8), scale(9));
       }
       default -> {
+        // do nothing. Should not really happen.
       }
-      // do nothing. Should not really happen.
     }
     g2.draw(p);
   }

File: src/main/java/com/cburch/logisim/comp/TextFieldCaret.java
Patch:
@@ -302,7 +302,8 @@ protected void normalKeyPressed(KeyEvent e, boolean shift) {
         }
       }
       default -> {
-      }// ignore
+        // ignore
+      }
     }
   }
 

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -489,8 +489,8 @@ private void toLogisimFile(Element elt, Project proj) {
             circuitsData.add(circData);
           }
           default -> {
+            // do nothing
           }
-          // do nothing
         }
       }
 

File: src/main/java/com/cburch/logisim/fpga/data/FpgaIoInformationContainer.java
Patch:
@@ -491,8 +491,8 @@ public Element getDocumentElement(Document doc) {
           case IoComponentTypes.ROTATION_CW_90, IoComponentTypes.ROTATION_CCW_90 ->
               result.setAttribute(BoardWriterClass.MAP_ROTATION, Integer.toString(myRotation));
           default -> {
+            // no rotation
           }
-          // no rotation
         }
       }
       if (CollectionUtil.isNotEmpty(myInputPins)) {

File: src/main/java/com/cburch/logisim/gui/icons/FlipFlopIcon.java
Patch:
@@ -49,8 +49,8 @@ private void paintClassicIcon(Graphics2D g2) {
       case SR_FLIPFLOP -> str = "SR";
       case REGISTER -> str = "00";
       default -> {
+        // do nothing. Should not really happen.
       }
-      // do nothing. Should not really happen.
     }
     final var f = g2.getFont().deriveFont((float) ((double) AppPreferences.getIconSize() / 2.1));
     final var l = new TextLayout(str, f, g2.getFontRenderContext());

File: src/main/java/com/cburch/logisim/gui/icons/OpenSaveIcon.java
Patch:
@@ -73,8 +73,8 @@ protected void paintIcon(Graphics2D g2) {
         g2.fillPolygon(xPoints, yPoints, 7);
       }
       default -> {
+        // do nothing. should not really happen.
       }
-      // do nothing. should not really happen.
     }
   }
 }

File: src/main/java/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -261,8 +261,8 @@ public boolean labelKeyboardHandler(int keyCode, AttributeSet attrs, String comp
         return true;
       }
       default -> {
+        // nothing
       }
-      // nothing
     }
     return false;
   }

File: src/main/java/com/cburch/logisim/vhdl/gui/HdlToolbarModel.java
Patch:
@@ -77,8 +77,8 @@ void doAction(String action) {
       case HDL_EXPORT -> editor.doExport();
       case HDL_VALIDATE -> editor.doValidate();
       default -> {
+        // nothing to do here
       }
-      // nothing to do here
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -198,7 +198,7 @@ private void initThemePreviewer() {
       previewPanel.add(new JButton("Preview"));
       previewPanel.add(new JCheckBox("Preview"));
       previewPanel.add(new JRadioButton("Preview"));
-      previewPanel.add(new JComboBox<>(new String[] {"Preview 1", "Preview 2"}));
+      previewPanel.add(new JComboBox<>(new String[]{"Preview 1", "Preview 2"}));
       previewContainer.add(previewPanel);
       UIManager.setLookAndFeel(previousLF);
     } catch (IllegalAccessException

File: src/main/java/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -75,7 +75,8 @@ public interface StdAttr {
 
   AttributeOption SELECT_BOTTOM_LEFT =
       new AttributeOption("bl", S.getter("stdSelectBottomLeftOption"));
-  AttributeOption SELECT_TOP_RIGHT = new AttributeOption("tr", S.getter("stdSelectTopRightOption"));
+  AttributeOption SELECT_TOP_RIGHT =
+      new AttributeOption("tr", S.getter("stdSelectTopRightOption"));
   Attribute<AttributeOption> SELECT_LOC =
       Attributes.forOption(
           "selloc",

File: src/main/java/com/cburch/logisim/soc/data/SocBusStateInfo.java
Patch:
@@ -268,9 +268,9 @@ public void initializeTransaction(SocBusTransaction trans, String busId) {
     if (slaves.isEmpty()) trans.setError(SocBusTransaction.NO_SLAVES_ERROR);
     else if (trans.isReadTransaction()
         && trans.isWriteTransaction()
-        && !trans.isAtomicTransaction())
+        && !trans.isAtomicTransaction()) {
       trans.setError(SocBusTransaction.NONE_ATOMIC_READ_WRITE_ERROR);
-    else {
+    } else {
       for (int i = 0; i < slaves.size(); i++) {
         if (slaves.get(i).canHandleTransaction(trans)) {
           nrOfReponders++;

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -869,8 +869,8 @@ private void drawLinedHeader(Graphics2D gfx, int x, int y) {
                 x + cols * cellWidth + 8 + headHeight + (headHeight >> 2), y + 7 * cellHeight));
       }
       default -> {
+        // none
       }
-      // none
     }
   }
 

File: src/main/java/com/cburch/logisim/analyze/gui/TableTabCaret.java
Patch:
@@ -89,8 +89,8 @@ public Void doInBackground() {
           model.expandVisibleRows();
         }
         default -> {
+          // do nothing
         }
-        // do nothing
       }
     }
 

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -496,8 +496,8 @@ public void listChanged(VariableListEvent event) {
         case VariableListEvent.MOVE -> fireTableRowsUpdated(0, listCopy.length - 1);
         case VariableListEvent.REPLACE -> fireTableRowsUpdated(idx, idx);
         default -> {
+          // do nothing
         }
-        // do nothing
       }
     }
 

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionTab.java
Patch:
@@ -181,8 +181,8 @@ public void listChanged(VariableListEvent event) {
           return;
         }
         default -> {
+          // none
         }
-        // none
       }
     }
 

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -836,7 +836,6 @@ private void drawLinedHeader(Graphics2D gfx, int x, int y) {
       }
       default -> {
       }
-      // none
     }
     switch (rows) {
       case 2 ->

File: src/main/java/com/cburch/logisim/std/memory/RamAppearance.java
Patch:
@@ -465,8 +465,8 @@ private static Port getLEPort(int portIndex, AttributeSet attrs) {
       case 2 -> result.setToolTip(S.getter("ramLETip2"));
       case 3 -> result.setToolTip(S.getter("ramLETip3"));
       default -> {
+        // none
       }
-      // none
     }
     return result;
   }
@@ -483,8 +483,8 @@ private static Port getBEPort(int portIndex, AttributeSet attrs) {
       case 2 -> result.setToolTip(S.getter("ramByteEnableTip2"));
       case 3 -> result.setToolTip(S.getter("ramByteEnableTip3"));
       default -> {
+        // none
       }
-      // none
     }
     return result;
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -52,7 +52,7 @@ public void propagateTtl(InstanceState state) {
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));
-    if (state.getPortValue(0) == Value.TRUE) {
+    if (state.getPortValue(0) == Value.FALSE) {
       data.setValue(Value.createKnown(data.getWidth(), 0));
     } else if (triggered) {
       Value[] vals = data.getValue().getAll();

File: src/main/java/com/cburch/draw/icons/DrawShapeIcon.java
Patch:
@@ -48,7 +48,7 @@ protected void paintIcon(Graphics2D gfx) {
         // FIXME: rounded rect shape looks almost as regular rectangle on smaller zoom factor
         gfx.drawRoundRect(x, y, width, height, y, y);
       }
-      case ELIPSE, default -> {
+      default -> {
         gfx.setColor(Color.BLUE);
         gfx.drawOval(x, y, width, height);
       }

File: src/main/java/com/cburch/logisim/LogisimVersion.java
Patch:
@@ -168,7 +168,7 @@ public int hashCode() {
   @Override
   public String toString() {
     var sfx = "";
-    if (suffix != "") {
+    if (!suffix.equals("")) {
       sfx = separator + suffix;
     }
     return format(major, minor, patch, sfx);

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -358,7 +358,7 @@ public static void paintPartialMap(Graphics2D g,
             part = (float) width / (float) nrOfPins;
             boxXpos = x + (int) ((float) pinNr * part);
             boxYpos = y;
-            boxWidth = (int) ((float) (pinNr + 1) * part) - (int) ((float) (pinNr * part));
+            boxWidth = (int) ((float) (pinNr + 1) * part) - (int) (pinNr * part);
             boxHeight = height;
             break;
           }

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -99,7 +99,7 @@ private void fillArray() {
     y++;
 
     if (!registers.isEmpty()) {
-      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).collect(Collectors.toList());
+      final var keys = registers.keySet().stream().sorted(new AlphanumComparator()).toList();
       for (final var key : keys) {
         constraints.gridy = y;
         constraints.gridx = 0;

File: src/main/java/com/cburch/logisim/gui/generic/TikZInfo.java
Patch:
@@ -297,11 +297,9 @@ private void optimize() {
   }
 
   private String getCharRepresentation(int i) {
-    final var chars = new StringBuilder();
     final var repeat = i / 26;
     final var charId = i % 26;
-    chars.append(String.valueOf((char) (charId + 'A')).repeat(repeat + 1));
-    return chars.toString();
+    return String.valueOf((char) (charId + 'A')).repeat(repeat + 1);
   }
 
   private String getFontDefinition(int i) {

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -245,7 +245,7 @@ public static Template getTemplate() {
     return switch (templateType) {
       case TEMPLATE_EMPTY -> getEmptyTemplate();
       case TEMPLATE_CUSTOM -> getCustomTemplate();
-      case TEMPLATE_PLAIN, default -> getPlainTemplate();
+      default -> getPlainTemplate();
     };
   }
 

File: src/main/java/com/cburch/logisim/std/arith/FpToInt.java
Patch:
@@ -100,7 +100,7 @@ public void propagate(InstanceState state) {
 
     if (roundMode.getValue().equals("ceil")) out_val = (long) Math.ceil(a_val);
     else if (roundMode.getValue().equals("floor")) out_val = (long) Math.floor(a_val);
-    else if (roundMode.getValue().equals("round")) out_val = (long) Math.round(a_val);
+    else if (roundMode.getValue().equals("round")) out_val = Math.round(a_val);
     else out_val = (long) a_val;
 
     final var out = Value.createKnown(dataWidthOut, out_val);

File: src/main/java/com/cburch/logisim/std/io/HexDigit.java
Patch:
@@ -201,7 +201,7 @@ public static int getSegs(int value) {
           case U -> SEG_B_MASK | SEG_C_MASK | SEG_E_MASK | SEG_F_MASK
               | SEG_D_MASK;  // a "U" for static icon
           case u -> SEG_C_MASK | SEG_E_MASK | SEG_D_MASK;  // a "u" for static icon
-          case BLANK, default -> 0;
+          default -> 0;
         };
 
         break;

File: src/main/java/com/cburch/logisim/std/io/LedArrayColumnScanningHdlGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public static LineBuffer getGenericMap(int nrOfRows, int nrOfColumns, long fpgaC
     final var nrColAddrBits = LedArrayGenericHdlGeneratorFactory.getNrOfBitsRequired(nrOfColumns);
     final var scanningReload = (int) (fpgaClockFrequency / 1000);
     final var nrOfScanningBitsCount = LedArrayGenericHdlGeneratorFactory.getNrOfBitsRequired(scanningReload);
-    final var maxNrLeds = ((int) Math.pow(2.0, (double) nrColAddrBits)) * nrOfRows;
+    final var maxNrLeds = ((int) Math.pow(2.0, nrColAddrBits)) * nrOfRows;
     final var generics = new HashMap<String, String>();
     generics.put(NR_OF_LEDS_STRING, Integer.toString(nrOfRows * nrOfColumns));
     generics.put(MAX_NR_LEDS_STRING, Integer.toString(maxNrLeds));

File: src/main/java/com/cburch/logisim/std/io/LedArrayRowScanningHdlGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public static LineBuffer getGenericMap(int nrOfRows, int nrOfColumns, long FpgaC
     final var nrRowAddrBits = LedArrayGenericHdlGeneratorFactory.getNrOfBitsRequired(nrOfRows);
     final var scanningReload = (int) (FpgaClockFrequency / 1000);
     final var nrOfScanningBits = LedArrayGenericHdlGeneratorFactory.getNrOfBitsRequired(scanningReload);
-    final var maxNrLeds = ((int) Math.pow(2.0, (double) nrRowAddrBits)) * nrOfRows;
+    final var maxNrLeds = ((int) Math.pow(2.0, nrRowAddrBits)) * nrOfRows;
     final var generics = new HashMap<String, String>();
     generics.put(NR_OF_LEDS_STRING, Integer.toString(nrOfRows * nrOfColumns));
     generics.put(NR_OF_ROWS_STRING, Integer.toString(nrOfRows));

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410.java
Patch:
@@ -36,12 +36,12 @@ public Ttl7410() {
   }
 
   public Ttl7410(String val, boolean inverted) {
-    super(val, (byte) pinCount, outPorts, new Ttl7410HdlGenerator(inverted, true));
+    super(val, pinCount, outPorts, new Ttl7410HdlGenerator(inverted, true));
     this.inverted = inverted;
   }
 
   public Ttl7410(String val, boolean inverted, boolean isOR) {
-    super(val, (byte) pinCount, outPorts, new Ttl7410HdlGenerator(inverted, !isOR));
+    super(val, pinCount, outPorts, new Ttl7410HdlGenerator(inverted, !isOR));
     this.inverted = inverted;
     isAND = !isOR;
   }

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerModel.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-/**
+/*
  * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
  */
 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -276,7 +276,6 @@ protected static void addOption(Options opts, String stringBaseKey, String longK
    * @param stringBaseKey String localization base key.
    * @param shortKey Argument short key (i.e. "c" for "-c").
    * @param longKey Argument ling key (i.e. "foo" for "--foo").
-   * @param expectedArgsCount Number of required option arguments.
    */
   protected static void addOption(Options opts, String stringBaseKey, String shortKey, String longKey) {
     addOption(opts, stringBaseKey, shortKey, longKey, 0);

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1526,7 +1526,7 @@ void decodeHexAddressedBytes() throws IOException {
           for (; j < m; j++) {
             int d;
             try {
-              d = hex2int(word.charAt(i));
+              d = hex2int(word.charAt(j));
             } catch (NumberFormatException e) {
               warn("Character '%s' is not a hex digit.", OutputStreamEscaper.escape(word.charAt(i)));
               continue;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HdlGenerator.java
Patch:
@@ -56,7 +56,7 @@ public LineBuffer getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
         .add("110", "000")
         .add("000", "110");
     contents.add(decoder.getHdlCode()).empty();
-    if (Hdl.isVerilog()) {
+    if (Hdl.isVhdl()) {
       contents.addVhdlKeywords().add("""
             oppA   <= A3&A2&A1&A0;
             oppB   <= B3&B2&B1&B0;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1526,7 +1526,7 @@ void decodeHexAddressedBytes() throws IOException {
           for (; j < m; j++) {
             int d;
             try {
-              d = hex2int(word.charAt(i));
+              d = hex2int(word.charAt(j));
             } catch (NumberFormatException e) {
               warn("Character '%s' is not a hex digit.", OutputStreamEscaper.escape(word.charAt(i)));
               continue;

File: src/main/java/com/cburch/logisim/gui/main/KeyboardToolSelection.java
Patch:
@@ -35,7 +35,7 @@ public static void register(Toolbar toolbar) {
     int mask = toolbar.getToolkit().getMenuShortcutKeyMaskEx();
     for (int i = 0; i < 10; i++) {
       KeyStroke keyStroke = KeyStroke.getKeyStroke((char) ('0' + i), mask);
-      int j = (i == 0 ? 10 : i - 1);
+      int j = (i == 0 ? 10 - 1 : i - 1);
       KeyboardToolSelection action = new KeyboardToolSelection(toolbar, j);
       String key = "ToolSelect" + i;
       amap.put(key, action);

File: src/main/java/com/cburch/logisim/std/arith/ShifterHdlGeneratorFactory.java
Patch:
@@ -94,7 +94,7 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
         contents
             .empty()
             .addRemarkBlock("The result is assigned here")
-            .add("assign result = s_stage{{1}}Result", nrOfShiftBits - 1);
+            .add("assign result = s_stage{{1}}Result;", nrOfShiftBits - 1);
       }
     }
     return contents.empty();
@@ -135,7 +135,7 @@ private LineBuffer getStageFunctionalityVerilog(int stageNumber, int nrOfBits) {
                                      ({{shiftMode}} == 4) ?
                                      s_stage{{stageNumber1}}Result[{{nrOfBitsToShift1}}:0] : 0;
 
-          assign s_stage{{stageNumber1}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
+          assign s_stage{{stageNumber}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
                                      s_stage{{stageNumber1}}Result :
                                      (({{shiftMode}} == 0)||({{shiftMode}} == 1)) ?
                                      {s_stage{{stageNumber1}}Result[{{bitsShiftDiff1}}:0],s_stage{{stageNumber}}ShiftIn} :

File: src/main/java/com/cburch/logisim/std/memory/RamHdlGeneratorFactory.java
Patch:
@@ -62,6 +62,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myPorts
             .add(Port.INPUT, String.format("byteEnable%d", idx), 1, byteEnableOffset + nrBePorts - idx - 1);
       }
+      myPorts.add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs));
       var nrOfMems = nrBePorts;
       if (truncated) {
         myTypedWires
@@ -75,6 +76,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myTypedWires
             .addWire(String.format("s_byteMem%dContents", mem), ByteArrayId);
     } else {
+      myPorts.add(Port.INPUT, "oe", 1, Hdl.oneBit());
       myTypedWires
           .addArray(MemArrayId, MemArrayStr, nrOfBits, ramEntries)
           .addWire("s_memContents", MemArrayId);
@@ -86,7 +88,6 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "address", nrOfaddressLines, RamAppearance.getAddrIndex(0, attrs))
         .add(Port.INPUT, "dataIn", nrOfBits, RamAppearance.getDataInIndex(0, attrs))
         .add(Port.INPUT, "we", 1, RamAppearance.getWEIndex(0, attrs))
-        .add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs))
         .add(Port.OUTPUT, "dataOut", nrOfBits, RamAppearance.getDataOutIndex(0, attrs));
     if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, RamAppearance.getClkIndex(0, attrs));
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HdlGenerator.java
Patch:
@@ -56,7 +56,7 @@ public LineBuffer getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
         .add("110", "000")
         .add("000", "110");
     contents.add(decoder.getHdlCode()).empty();
-    if (Hdl.isVerilog()) {
+    if (Hdl.isVhdl()) {
       contents.addVhdlKeywords().add("""
             oppA   <= A3&A2&A1&A0;
             oppB   <= B3&B2&B1&B0;

File: src/main/java/com/cburch/logisim/std/arith/ShifterHdlGeneratorFactory.java
Patch:
@@ -94,7 +94,7 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
         contents
             .empty()
             .addRemarkBlock("The result is assigned here")
-            .add("assign result = s_stage{{1}}Result", nrOfShiftBits - 1);
+            .add("assign result = s_stage{{1}}Result;", nrOfShiftBits - 1);
       }
     }
     return contents.empty();
@@ -135,7 +135,7 @@ private LineBuffer getStageFunctionalityVerilog(int stageNumber, int nrOfBits) {
                                      ({{shiftMode}} == 4) ?
                                      s_stage{{stageNumber1}}Result[{{nrOfBitsToShift1}}:0] : 0;
 
-          assign s_stage{{stageNumber1}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
+          assign s_stage{{stageNumber}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
                                      s_stage{{stageNumber1}}Result :
                                      (({{shiftMode}} == 0)||({{shiftMode}} == 1)) ?
                                      {s_stage{{stageNumber1}}Result[{{bitsShiftDiff1}}:0],s_stage{{stageNumber}}ShiftIn} :

File: src/main/java/com/cburch/logisim/std/arith/ShifterHdlGeneratorFactory.java
Patch:
@@ -94,7 +94,7 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
         contents
             .empty()
             .addRemarkBlock("The result is assigned here")
-            .add("assign result = s_stage{{1}}Result", nrOfShiftBits - 1);
+            .add("assign result = s_stage{{1}}Result;", nrOfShiftBits - 1);
       }
     }
     return contents.empty();
@@ -135,7 +135,7 @@ private LineBuffer getStageFunctionalityVerilog(int stageNumber, int nrOfBits) {
                                      ({{shiftMode}} == 4) ?
                                      s_stage{{stageNumber1}}Result[{{nrOfBitsToShift1}}:0] : 0;
 
-          assign s_stage{{stageNumber1}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
+          assign s_stage{{stageNumber}}Result  = (shiftAmount[{{stageNumber}}]==0) ?
                                      s_stage{{stageNumber1}}Result :
                                      (({{shiftMode}} == 0)||({{shiftMode}} == 1)) ?
                                      {s_stage{{stageNumber1}}Result[{{bitsShiftDiff1}}:0],s_stage{{stageNumber}}ShiftIn} :

File: src/main/java/com/cburch/logisim/std/memory/RamHdlGeneratorFactory.java
Patch:
@@ -62,6 +62,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myPorts
             .add(Port.INPUT, String.format("byteEnable%d", idx), 1, byteEnableOffset + nrBePorts - idx - 1);
       }
+      myPorts.add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs));
       var nrOfMems = nrBePorts;
       if (truncated) {
         myTypedWires
@@ -75,6 +76,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myTypedWires
             .addWire(String.format("s_byteMem%dContents", mem), ByteArrayId);
     } else {
+      myPorts.add(Port.INPUT, "oe", 1, Hdl.oneBit());
       myTypedWires
           .addArray(MemArrayId, MemArrayStr, nrOfBits, ramEntries)
           .addWire("s_memContents", MemArrayId);
@@ -86,7 +88,6 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "address", nrOfaddressLines, RamAppearance.getAddrIndex(0, attrs))
         .add(Port.INPUT, "dataIn", nrOfBits, RamAppearance.getDataInIndex(0, attrs))
         .add(Port.INPUT, "we", 1, RamAppearance.getWEIndex(0, attrs))
-        .add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs))
         .add(Port.OUTPUT, "dataOut", nrOfBits, RamAppearance.getDataOutIndex(0, attrs));
     if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, RamAppearance.getClkIndex(0, attrs));
   }

File: src/main/java/com/cburch/logisim/std/memory/RamHdlGeneratorFactory.java
Patch:
@@ -62,6 +62,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myPorts
             .add(Port.INPUT, String.format("byteEnable%d", idx), 1, byteEnableOffset + nrBePorts - idx - 1);
       }
+      myPorts.add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs));
       var nrOfMems = nrBePorts;
       if (truncated) {
         myTypedWires
@@ -75,6 +76,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myTypedWires
             .addWire(String.format("s_byteMem%dContents", mem), ByteArrayId);
     } else {
+      myPorts.add(Port.INPUT, "oe", 1, Hdl.oneBit());
       myTypedWires
           .addArray(MemArrayId, MemArrayStr, nrOfBits, ramEntries)
           .addWire("s_memContents", MemArrayId);
@@ -86,7 +88,6 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "address", nrOfaddressLines, RamAppearance.getAddrIndex(0, attrs))
         .add(Port.INPUT, "dataIn", nrOfBits, RamAppearance.getDataInIndex(0, attrs))
         .add(Port.INPUT, "we", 1, RamAppearance.getWEIndex(0, attrs))
-        .add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs))
         .add(Port.OUTPUT, "dataOut", nrOfBits, RamAppearance.getDataOutIndex(0, attrs));
     if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, RamAppearance.getClkIndex(0, attrs));
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74139.java
Patch:
@@ -63,8 +63,8 @@ public Ttl74139() {
         _ID,
         (byte) 16,
         new byte[] {
-                L1_nY0, L1_nY1, L1_nY2, L1_nY3,
-                L2_nY0, L2_nY1, L2_nY2, L2_nY3
+          L1_nY0, L1_nY1, L1_nY2, L1_nY3,
+          L2_nY0, L2_nY1, L2_nY2, L2_nY3
         },
         new String[] {
           "1nG Enable (active LOW)", "1A", "1B", "1nY0", "1nY1", "1nY2", "1nY3",

File: src/main/java/com/cburch/logisim/gui/main/KeyboardToolSelection.java
Patch:
@@ -35,7 +35,7 @@ public static void register(Toolbar toolbar) {
     int mask = toolbar.getToolkit().getMenuShortcutKeyMaskEx();
     for (int i = 0; i < 10; i++) {
       KeyStroke keyStroke = KeyStroke.getKeyStroke((char) ('0' + i), mask);
-      int j = (i == 0 ? 10 : i - 1);
+      int j = (i == 0 ? 10 - 1 : i - 1);
       KeyboardToolSelection action = new KeyboardToolSelection(toolbar, j);
       String key = "ToolSelect" + i;
       amap.put(key, action);

File: src/main/java/com/cburch/logisim/gui/main/KeyboardToolSelection.java
Patch:
@@ -35,7 +35,7 @@ public static void register(Toolbar toolbar) {
     int mask = toolbar.getToolkit().getMenuShortcutKeyMaskEx();
     for (int i = 0; i < 10; i++) {
       KeyStroke keyStroke = KeyStroke.getKeyStroke((char) ('0' + i), mask);
-      int j = (i == 0 ? 10 : i - 1);
+      int j = (i == 0 ? 10 - 1 : i - 1);
       KeyboardToolSelection action = new KeyboardToolSelection(toolbar, j);
       String key = "ToolSelect" + i;
       amap.put(key, action);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlWires.java
Patch:
@@ -82,8 +82,6 @@ public int get(String wireName) {
   }
 
   public void removeWires() {
-    final var iterator = myWires.iterator();
-    while (iterator.hasNext())
-      if (iterator.next().isWire()) iterator.remove();
+    myWires.clear();
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/RamHdlGeneratorFactory.java
Patch:
@@ -88,7 +88,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "we", 1, RamAppearance.getWEIndex(0, attrs))
         .add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs))
         .add(Port.OUTPUT, "dataOut", nrOfBits, RamAppearance.getDataOutIndex(0, attrs));
-    if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, ByteArrayId);
+    if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, RamAppearance.getClkIndex(0, attrs));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -111,6 +111,7 @@ private void fillArray() {
         constraints.gridx++;
         final var selReg = registers.get(key);
         var mainCircState = proj.getCircuitState();
+        if (mainCircState == null) continue;
         while (mainCircState.getParentState() != null) { // Get the main circuit
           mainCircState = mainCircState.getParentState();
         }

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -111,6 +111,7 @@ private void fillArray() {
         constraints.gridx++;
         final var selReg = registers.get(key);
         var mainCircState = proj.getCircuitState();
+        if (mainCircState == null) continue;
         while (mainCircState.getParentState() != null) { // Get the main circuit
           mainCircState = mainCircState.getParentState();
         }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74164.java
Patch:
@@ -143,7 +143,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
   }
 
   private void drawState(Graphics2D gfx, int x, int y, int height, ShiftRegisterData state) {
-    if (state != null) return;
+    if (state == null) return;
     for (var i = 0; i < 8; i++) {
       gfx.setColor(state.get(7 - i).getColor());
       gfx.fillOval(x + 36 + i * 10, y + height / 2 - 4, 8, 8);

File: src/main/java/com/cburch/logisim/fpga/download/DownloadBase.java
Patch:
@@ -87,10 +87,11 @@ protected boolean mapDesign(String circuitName) {
      * name plus component/sub-circuit name
      */
     myMappableResources = rootSheet.getBoardMap(myBoardInformation.getBoardName());
-    if (myMappableResources == null)
+    if (myMappableResources == null) {
       myMappableResources = new MappableResourcesContainer(myBoardInformation, rootSheet);
-    else
+    } else {
       myMappableResources.updateMapableComponents();
+    }
 
     return true;
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHdlGeneratorFactory.java
Patch:
@@ -32,8 +32,8 @@ public BitSelectorHdlGeneratorFactory() {
     super();
     myParametersList
         .add(SELECT_BITS_STRING, SELECT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.SELECT_ATTR)
-        .add(INPUT_BITS_STRING, INPUT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
-        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID)
+        .add(INPUT_BITS_STRING, INPUT_BITS_ID)
+        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
         .addBusOnly(BitSelector.GROUP_ATTR, OUTPUTS_BITS_STRING, OUTPUT_BITS_ID);
     myWires
         .addWire("s_extendedVector", EXTENDED_BITS_ID);

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHdlGeneratorFactory.java
Patch:
@@ -42,6 +42,8 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "demuxIn", nrOfBits, hasenable ? selectInputIndex + 2 : selectInputIndex + 1);
     if (hasenable)
       myPorts.add(Port.INPUT, "enable", 1, selectInputIndex + 1, false);
+    else
+      myPorts.add(Port.INPUT, "enable", 1, Hdl.oneBit());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHdlGeneratorFactory.java
Patch:
@@ -42,6 +42,8 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "demuxIn", nrOfBits, hasenable ? selectInputIndex + 2 : selectInputIndex + 1);
     if (hasenable)
       myPorts.add(Port.INPUT, "enable", 1, selectInputIndex + 1, false);
+    else
+      myPorts.add(Port.INPUT, "enable", 1, Hdl.oneBit());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/download/DownloadBase.java
Patch:
@@ -87,10 +87,11 @@ protected boolean mapDesign(String circuitName) {
      * name plus component/sub-circuit name
      */
     myMappableResources = rootSheet.getBoardMap(myBoardInformation.getBoardName());
-    if (myMappableResources == null)
+    if (myMappableResources == null) {
       myMappableResources = new MappableResourcesContainer(myBoardInformation, rootSheet);
-    else
+    } else {
       myMappableResources.updateMapableComponents();
+    }
 
     return true;
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHdlGeneratorFactory.java
Patch:
@@ -32,8 +32,8 @@ public BitSelectorHdlGeneratorFactory() {
     super();
     myParametersList
         .add(SELECT_BITS_STRING, SELECT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.SELECT_ATTR)
-        .add(INPUT_BITS_STRING, INPUT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
-        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID)
+        .add(INPUT_BITS_STRING, INPUT_BITS_ID)
+        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
         .addBusOnly(BitSelector.GROUP_ATTR, OUTPUTS_BITS_STRING, OUTPUT_BITS_ID);
     myWires
         .addWire("s_extendedVector", EXTENDED_BITS_ID);

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHdlGeneratorFactory.java
Patch:
@@ -42,6 +42,8 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "demuxIn", nrOfBits, hasenable ? selectInputIndex + 2 : selectInputIndex + 1);
     if (hasenable)
       myPorts.add(Port.INPUT, "enable", 1, selectInputIndex + 1, false);
+    else
+      myPorts.add(Port.INPUT, "enable", 1, Hdl.oneBit());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHdlGeneratorFactory.java
Patch:
@@ -32,8 +32,8 @@ public BitSelectorHdlGeneratorFactory() {
     super();
     myParametersList
         .add(SELECT_BITS_STRING, SELECT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.SELECT_ATTR)
-        .add(INPUT_BITS_STRING, INPUT_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
-        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID)
+        .add(INPUT_BITS_STRING, INPUT_BITS_ID)
+        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID, HdlParameters.MAP_INT_ATTRIBUTE, BitSelector.EXTENDED_ATTR)
         .addBusOnly(BitSelector.GROUP_ATTR, OUTPUTS_BITS_STRING, OUTPUT_BITS_ID);
     myWires
         .addWire("s_extendedVector", EXTENDED_BITS_ID);

File: src/main/java/com/cburch/logisim/fpga/download/DownloadBase.java
Patch:
@@ -87,10 +87,11 @@ protected boolean mapDesign(String circuitName) {
      * name plus component/sub-circuit name
      */
     myMappableResources = rootSheet.getBoardMap(myBoardInformation.getBoardName());
-    if (myMappableResources == null)
+    if (myMappableResources == null) {
       myMappableResources = new MappableResourcesContainer(myBoardInformation, rootSheet);
-    else
+    } else {
       myMappableResources.updateMapableComponents();
+    }
 
     return true;
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlWires.java
Patch:
@@ -82,8 +82,6 @@ public int get(String wireName) {
   }
 
   public void removeWires() {
-    final var iterator = myWires.iterator();
-    while (iterator.hasNext())
-      if (iterator.next().isWire()) iterator.remove();
+    myWires.clear();
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/RamHdlGeneratorFactory.java
Patch:
@@ -88,7 +88,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         .add(Port.INPUT, "we", 1, RamAppearance.getWEIndex(0, attrs))
         .add(Port.INPUT, "oe", 1, RamAppearance.getOEIndex(0, attrs))
         .add(Port.OUTPUT, "dataOut", nrOfBits, RamAppearance.getDataOutIndex(0, attrs));
-    if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, ByteArrayId);
+    if (!async) myPorts.add(Port.CLOCK, HdlPorts.getClockName(1), 1, RamAppearance.getClkIndex(0, attrs));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Drawgates.java
Patch:
@@ -156,7 +156,7 @@ static void paintPortNames(InstancePainter painter, int x, int y, int height, St
             y
                 + height
                 - AbstractTtlGate.PIN_HEIGHT
-                - portsPerRow
+                - 7
                 - i * (height - 2 * AbstractTtlGate.PIN_HEIGHT - 11));
       }
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74192.java
Patch:
@@ -222,7 +222,7 @@ public void propagateTtl(InstanceState state) {
       if (counter < 0) {
         counter = maxVal;
       }
-    }else if (cntU_rising && cntD_unchanged_high) { // count up
+    } else if (cntU_rising && cntD_unchanged_high) { // count up
       counter++;
       if (counter > maxVal) {
         counter = 0;

File: src/main/java/com/cburch/logisim/tools/PokeTool.java
Patch:
@@ -216,7 +216,7 @@ public void mouseDragged(Canvas canvas, Graphics g, MouseEvent e) {
       int x = (int) (oldPosition.getX() - m.getX());
       int y = (int) (oldPosition.getY() - m.getY());
       canvas.setCursor(move);
-      canvas.setScrollBar(canvas.getHorizzontalScrollBar() + x, canvas.getVerticalScrollBar() + y);
+      canvas.setScrollBar(canvas.getHorizontalScrollBar() + x, canvas.getVerticalScrollBar() + y);
     }
   }
 

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlSimConstants.java
Patch:
@@ -77,6 +77,8 @@ public enum State {
   public static final String SIM_COMP_PATH = SIM_PATH + "comp/";
   public static final String SIM_TOP_FILENAME = "top_sim.vhdl";
   public static final String VHDL_COMPONENT_SIM_NAME = "LogisimVhdlSimComp_";
+  // FIXME: hardcoded path. The "../src/" asks for troubles!
+  public static final String VHDL_COMPILE_COMMAND = "vcom -reportprogress 300 -work work ../src/";
   public static final VhdlSimNameAttribute SIM_NAME_ATTR =
       new VhdlSimNameAttribute("vhdlSimName", S.getter("vhdlSimName"));
 }

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclComp.java
Patch:
@@ -65,8 +65,7 @@ public void generate(List<Component> comps) {
             ? ((VhdlEntity) fact).getSimName(state.getInstance().getAttributeSet())
             : ((VhdlEntityComponent) fact).getSimName(state.getInstance().getAttributeSet());
 
-        // FIXME: hardcoded path. The "../src/" asks for troubles!
-        compFiles.append("vcom -reportprogress 300 -work work ../src/")
+        compFiles.append(VhdlSimConstants.VHDL_COMPILE_COMMAND)
             .append(componentName)
             .append(".vhdl")
             .append(System.getProperty("line.separator"));

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -106,7 +106,7 @@ public void start() {
             final var errorMessage = new StringBuilder(
                     "You may disable VHDL simulation in the simulation menu if this occurs again\n\n");
             
-            String msgCheckOnError = String.format("\"%s%s",
+            final var msgCheckOnError = String.format("\"%s%s",
                     VhdlSimConstants.VHDL_COMPILE_COMMAND, VhdlSimConstants.VHDL_COMPONENT_SIM_NAME);
 
             /* Here we check that the binder has correctly started */

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlTypes.java
Patch:
@@ -88,10 +88,10 @@ public String getTypeDefinition() {
       final var contents = new StringBuilder();
       if (Hdl.isVhdl()) {
         contents.append(
-            LineBuffer.formatVhdl("{{type}} {{1}} {{is}} {{array}} ( {{2}} {{downto}} 0 ) {{of}}std_logic_vector( ", 
+            LineBuffer.formatVhdl("{{type}} {{1}} {{is}} {{array}} ( {{2}} {{downto}} 0 ) {{of}} std_logic_vector( ", 
                 myTypeName, myNrOfEntries))
             .append(myGenericBitWidth == null ? Integer.toString(myBitWidth - 1) : String.format("%s - 1", myGenericBitWidth))
-            .append(LineBuffer.formatVhdl("{{downto}} 0);"));
+            .append(LineBuffer.formatVhdl(" " + "{{downto}} 0);")); // Important: The leading space is required 
       } else {
         contents.append("typedef logic [")
             .append(myGenericBitWidth == null ? Integer.toString(myBitWidth - 1) : String.format("%s - 1", myGenericBitWidth))

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlTypes.java
Patch:
@@ -88,10 +88,10 @@ public String getTypeDefinition() {
       final var contents = new StringBuilder();
       if (Hdl.isVhdl()) {
         contents.append(
-            LineBuffer.formatVhdl("{{type}} {{1}} {{is}} {{array}} ( {{2}} {{downto}} 0 ) {{of}}std_logic_vector( ", 
+            LineBuffer.formatVhdl("{{type}} {{1}} {{is}} {{array}} ( {{2}} {{downto}} 0 ) {{of}} std_logic_vector( ", 
                 myTypeName, myNrOfEntries))
             .append(myGenericBitWidth == null ? Integer.toString(myBitWidth - 1) : String.format("%s - 1", myGenericBitWidth))
-            .append(LineBuffer.formatVhdl("{{downto}} 0);"));
+            .append(LineBuffer.formatVhdl(" {{downto}} 0);"));
       } else {
         contents.append("typedef logic [")
             .append(myGenericBitWidth == null ? Integer.toString(myBitWidth - 1) : String.format("%s - 1", myGenericBitWidth))

File: src/main/java/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -92,5 +92,4 @@ public void removeAttributeListener(AttributeListener l) {
   public void setReadOnly(Attribute<?> attr, boolean value) {
     throw new UnsupportedOperationException();
   }
-
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442.java
Patch:
@@ -25,7 +25,7 @@ public class Ttl7442 extends AbstractTtlGate {
   private boolean isExec3 = false;
   private boolean isGray = false;
 
-  private static final byte pinCount = 14;
+  private static final byte pinCount = 16;
   private static final byte[] outPins = {1, 2, 3, 4, 5, 6, 7, 9, 10, 11};
   private static final String[] pinNames = {"O0", "O1", "O2", "O3", "O4", "O5", "O6", "O7", "O8", "O9", "D", "C", "B", "A"};
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464.java
Patch:
@@ -48,7 +48,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     int[] posX, posY;
     for (var i = 0; i < 4; i++) {
       if (!isIEC) {
-        int tmpOff = (i == 0) | (i == 3) ? 2 : 0;
+        int tmpOff = (i == 0) || (i == 3) ? 2 : 0;
         posX = new int[] {x + 105, x + 107 + tmpOff, x + 107 + tmpOff, x + 111};
         posY = new int[] {y + 20 + i * 10, y + 20 + i * 10, y + 32 + i * 2, y + 32 + i * 2};
         gfx.drawPolyline(posX, posY, 4);

File: src/main/java/com/cburch/logisim/gui/chrono/ChronoPanel.java
Patch:
@@ -305,11 +305,11 @@ public void setModel(Model newModel) {
   public Color[] rowColors(SignalInfo item, boolean isSelected) {
     if (isSelected) return selectColors;
     final var spotlight = model.getSpotlight();
-    if (spotlight != null && spotlight.info == item) return SPOT;
-    return PLAIN;
+    return (spotlight != null && spotlight.info == item) ? SPOT : PLAIN;
   }
 
   private static Color darker(Color c) {
+    if (c == null) return null;
     final var hsb = Color.RGBtoHSB(c.getRed(), c.getGreen(), c.getBlue(), null);
     final var s = 0.8f;
     return (hsb[1] == 0.0)

File: src/main/java/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -92,5 +92,4 @@ public void removeAttributeListener(AttributeListener l) {
   public void setReadOnly(Attribute<?> attr, boolean value) {
     throw new UnsupportedOperationException();
   }
-
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442.java
Patch:
@@ -25,7 +25,7 @@ public class Ttl7442 extends AbstractTtlGate {
   private boolean isExec3 = false;
   private boolean isGray = false;
 
-  private static final byte pinCount = 14;
+  private static final byte pinCount = 16;
   private static final byte[] outPins = {1, 2, 3, 4, 5, 6, 7, 9, 10, 11};
   private static final String[] pinNames = {"O0", "O1", "O2", "O3", "O4", "O5", "O6", "O7", "O8", "O9", "D", "C", "B", "A"};
 

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlSimConstants.java
Patch:
@@ -77,6 +77,7 @@ public enum State {
   public static final String SIM_COMP_PATH = SIM_PATH + "comp/";
   public static final String SIM_TOP_FILENAME = "top_sim.vhdl";
   public static final String VHDL_COMPONENT_SIM_NAME = "LogisimVhdlSimComp_";
+  // FIXME: hardcoded path. The "../src/" asks for troubles!
   public static final String VHDL_COMPILE_COMMAND = "vcom -reportprogress 300 -work work ../src/";
   public static final VhdlSimNameAttribute SIM_NAME_ATTR =
       new VhdlSimNameAttribute("vhdlSimName", S.getter("vhdlSimName"));

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -106,7 +106,8 @@ public void start() {
             final var errorMessage = new StringBuilder(
                     "You may disable VHDL simulation in the simulation menu if this occurs again\n\n");
             
-            String msgCheckOnError = "\"" + VhdlSimConstants.VHDL_COMPILE_COMMAND + VhdlSimConstants.VHDL_COMPONENT_SIM_NAME;
+            String msgCheckOnError = String.format("\"%s%s",
+                    VhdlSimConstants.VHDL_COMPILE_COMMAND, VhdlSimConstants.VHDL_COMPONENT_SIM_NAME);
 
             /* Here we check that the binder has correctly started */
             while ((line = reader.readLine()) != null) {

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclComp.java
Patch:
@@ -65,7 +65,6 @@ public void generate(List<Component> comps) {
             ? ((VhdlEntity) fact).getSimName(state.getInstance().getAttributeSet())
             : ((VhdlEntityComponent) fact).getSimName(state.getInstance().getAttributeSet());
 
-        // FIXME: hardcoded path. The "../src/" asks for troubles!
         compFiles.append(VhdlSimConstants.VHDL_COMPILE_COMMAND)
             .append(componentName)
             .append(".vhdl")

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlSimConstants.java
Patch:
@@ -77,6 +77,7 @@ public enum State {
   public static final String SIM_COMP_PATH = SIM_PATH + "comp/";
   public static final String SIM_TOP_FILENAME = "top_sim.vhdl";
   public static final String VHDL_COMPONENT_SIM_NAME = "LogisimVhdlSimComp_";
+  public static final String VHDL_COMPILE_COMMAND = "vcom -reportprogress 300 -work work ../src/";
   public static final VhdlSimNameAttribute SIM_NAME_ATTR =
       new VhdlSimNameAttribute("vhdlSimName", S.getter("vhdlSimName"));
 }

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclComp.java
Patch:
@@ -66,7 +66,7 @@ public void generate(List<Component> comps) {
             : ((VhdlEntityComponent) fact).getSimName(state.getInstance().getAttributeSet());
 
         // FIXME: hardcoded path. The "../src/" asks for troubles!
-        compFiles.append("vcom -reportprogress 300 -work work ../src/")
+        compFiles.append(VhdlSimConstants.VHDL_COMPILE_COMMAND)
             .append(componentName)
             .append(".vhdl")
             .append(System.getProperty("line.separator"));

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorTclBinder.java
Patch:
@@ -139,6 +139,9 @@ public void start() {
 
                 vsim.tclStartCallback();
                 return;
+              } else if (line.contains("\"vcom -reportprogress 300 -work work ../src/LogisimVhdlSimComp")) {
+                // Last line of error log. Do not read next line or it will be stuck
+                break;
               }
             }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -245,7 +245,7 @@ public static String vectorLoopId() {
   public static String splitVector(int start, int end) {
     if (start == end) return LineBuffer.formatHdl("{{<}}{{2}}{{>}}", start);
     return isVhdl()
-                ? LineBuffer.formatHdl("({{1}}{{2}}{{3}}) ", start, vectorLoopId(), end)
+                ? LineBuffer.formatHdl("({{1}}{{2}}{{3}})", start, vectorLoopId(), end)
                 : LineBuffer.formatHdl("[{{1}}:{{2}}]", start, end);
   }
 
@@ -376,7 +376,7 @@ public static String getBusNameContinues(netlistComponent comp, int endIndex, Ne
     if (nrOfBits == 1) return getNetName(comp, endIndex, true, theNets);
     if (!theNets.isContinuesBus(comp, endIndex)) return null;
     final var connectedNet = connectionInformation.get((byte) 0).getParentNet();
-    return LineBuffer.formatHdl("{{1}}{{2}}{{<}}{{3}}{{4}}{{5}}{{>}}",
+    return LineBuffer.formatHdl("{{1}}{{2}}{{3}}",
         BUS_NAME,
         theNets.getNetId(connectedNet),
         splitVector(connectionInformation.get((byte) (connectionInformation.getNrOfBits() - 1)).getParentNetBitIndex(),

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHdlGeneratorFactory.java
Patch:
@@ -20,7 +20,7 @@ public class BitExtenderHdlGeneratorFactory extends InlinedHdlGeneratorFactory {
 
   @Override
   public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
-    final var contents = LineBuffer.getBuffer();
+    final var contents = LineBuffer.getHdlBuffer();
     int nrOfPins = componentInfo.nrOfEnds();
     for (int i = 1; i < nrOfPins; i++) {
       if (!componentInfo.isEndConnected(i)) {
@@ -60,7 +60,7 @@ public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponen
           if (componentInfo.getEnd(1).getNrOfBits() > 1) {
             contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), Hdl.getBusEntryName(componentInfo, 1, true, bit, nets));
           } else {
-            contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets) + Hdl.getNetName(componentInfo, 1, true, nets));
+            contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), Hdl.getNetName(componentInfo, 1, true, nets));
           }
         } else {
           contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), replacement);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -245,7 +245,7 @@ public static String vectorLoopId() {
   public static String splitVector(int start, int end) {
     if (start == end) return LineBuffer.formatHdl("{{<}}{{2}}{{>}}", start);
     return isVhdl()
-                ? LineBuffer.formatHdl("({{1}}{{2}}{{3}}) ", start, vectorLoopId(), end)
+                ? LineBuffer.formatHdl("({{1}}{{2}}{{3}})", start, vectorLoopId(), end)
                 : LineBuffer.formatHdl("[{{1}}:{{2}}]", start, end);
   }
 
@@ -376,7 +376,7 @@ public static String getBusNameContinues(netlistComponent comp, int endIndex, Ne
     if (nrOfBits == 1) return getNetName(comp, endIndex, true, theNets);
     if (!theNets.isContinuesBus(comp, endIndex)) return null;
     final var connectedNet = connectionInformation.get((byte) 0).getParentNet();
-    return LineBuffer.formatHdl("{{1}}{{2}}{{<}}{{3}}{{4}}{{5}}{{>}}",
+    return LineBuffer.formatHdl("{{1}}{{2}}{{3}}",
         BUS_NAME,
         theNets.getNetId(connectedNet),
         splitVector(connectionInformation.get((byte) (connectionInformation.getNrOfBits() - 1)).getParentNetBitIndex(),

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHdlGeneratorFactory.java
Patch:
@@ -20,7 +20,7 @@ public class BitExtenderHdlGeneratorFactory extends InlinedHdlGeneratorFactory {
 
   @Override
   public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
-    final var contents = LineBuffer.getBuffer();
+    final var contents = LineBuffer.getHdlBuffer();
     int nrOfPins = componentInfo.nrOfEnds();
     for (int i = 1; i < nrOfPins; i++) {
       if (!componentInfo.isEndConnected(i)) {
@@ -60,7 +60,7 @@ public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponen
           if (componentInfo.getEnd(1).getNrOfBits() > 1) {
             contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), Hdl.getBusEntryName(componentInfo, 1, true, bit, nets));
           } else {
-            contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets) + Hdl.getNetName(componentInfo, 1, true, nets));
+            contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), Hdl.getNetName(componentInfo, 1, true, nets));
           }
         } else {
           contents.add("{{assign}} {{1}} {{=}} {{2}};", Hdl.getBusEntryName(componentInfo, 0, true, bit, nets), replacement);

File: src/main/java/com/cburch/logisim/fpga/data/BoardInformation.java
Patch:
@@ -96,7 +96,7 @@ public String getComponentType(BoardRectangle rect) {
   public String getDriveStrength(BoardRectangle rect) {
     for (final var comp : myComponents) {
       if (comp.getRectangle().equals(rect)) {
-        return DriveStrength.getContraintedDriveStrength(comp.getDrive());
+        return DriveStrength.getConstrainedDriveStrength(comp.getDrive());
       }
     }
     return "";
@@ -136,7 +136,7 @@ public int getNrOfDefinedComponents() {
   public String getPullBehavior(BoardRectangle rect) {
     for (final var comp : myComponents) {
       if (comp.getRectangle().equals(rect)) {
-        return PullBehaviors.getContraintedPullString(comp.getPullBehavior());
+        return PullBehaviors.getConstrainedPullString(comp.getPullBehavior());
       }
     }
     return "";

File: src/main/java/com/cburch/logisim/fpga/data/DriveStrength.java
Patch:
@@ -13,7 +13,7 @@
 import java.util.List;
 
 public class DriveStrength {
-  public static String getContraintedDriveStrength(char id) {
+  public static String getConstrainedDriveStrength(char id) {
     if ((id > DEFAULT_STENGTH) && (id <= DRIVE_24)) {
       return BEHAVIOR_STRINGS[id].replace(" mA", " ");
     }

File: src/main/java/com/cburch/logisim/fpga/data/PullBehaviors.java
Patch:
@@ -14,7 +14,7 @@
 import java.util.List;
 
 public class PullBehaviors {
-  public static String getContraintedPullString(char id) {
+  public static String getConstrainedPullString(char id) {
     switch (id) {
       case PULL_UP:
         return "PULLUP";

File: src/main/java/com/cburch/logisim/fpga/download/XilinxDownload.java
Patch:
@@ -276,13 +276,13 @@ private ArrayList<String> getPinLocStrings() {
             if (info.getPullBehavior() != PullBehaviors.UNKNOWN
                 && info.getPullBehavior() != PullBehaviors.FLOAT) {
               temp.append("| ")
-                  .append(PullBehaviors.getContraintedPullString(info.getPullBehavior()))
+                  .append(PullBehaviors.getConstrainedPullString(info.getPullBehavior()))
                   .append(" ");
             }
             if (info.getDrive() != DriveStrength.UNKNOWN
                 && info.getDrive() != DriveStrength.DEFAULT_STENGTH) {
               temp.append("| DRIVE = ")
-                  .append(DriveStrength.getContraintedDriveStrength(info.getDrive())).append(" ");
+                  .append(DriveStrength.getConstrainedDriveStrength(info.getDrive())).append(" ");
             }
             if (info.getIoStandard() != IoStandards.UNKNOWN
                 && info.getIoStandard() != IoStandards.DEFAULT_STANDARD) {

File: src/main/java/com/cburch/logisim/fpga/data/BoardInformation.java
Patch:
@@ -96,7 +96,7 @@ public String getComponentType(BoardRectangle rect) {
   public String getDriveStrength(BoardRectangle rect) {
     for (final var comp : myComponents) {
       if (comp.getRectangle().equals(rect)) {
-        return DriveStrength.GetContraintedDriveStrength(comp.getDrive());
+        return DriveStrength.getContraintedDriveStrength(comp.getDrive());
       }
     }
     return "";

File: src/main/java/com/cburch/logisim/fpga/download/XilinxDownload.java
Patch:
@@ -282,7 +282,7 @@ private ArrayList<String> getPinLocStrings() {
             if (info.getDrive() != DriveStrength.UNKNOWN
                 && info.getDrive() != DriveStrength.DEFAULT_STENGTH) {
               temp.append("| DRIVE = ")
-                  .append(DriveStrength.GetContraintedDriveStrength(info.getDrive())).append(" ");
+                  .append(DriveStrength.getContraintedDriveStrength(info.getDrive())).append(" ");
             }
             if (info.getIoStandard() != IoStandards.UNKNOWN
                 && info.getIoStandard() != IoStandards.DEFAULT_STANDARD) {

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -67,7 +67,6 @@ void append(ReplacementMap next) {
 
       for (final var a : as) {
         final var aDst = this.map.computeIfAbsent(a, k -> new HashSet<>(cs.size()));
-        // should happen when b pre-existed only
         aDst.remove(b);
         aDst.addAll(cs);
       }

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -114,7 +114,7 @@ private static class SimThread extends UniquelyNamedThread {
     private boolean autoPropagating = true;
     private boolean autoTicking = false;
     private double autoTickFreq = 1.0; // Hz
-    private long autoTickNanos = Math.round(1e9 / autoTickFreq);
+    private long autoTickNanos = Math.round(1.0e9 / autoTickFreq);
     private int manualTicksRequested = 0;
     private int manualStepsRequested = 0;
     private boolean nudgeRequested = false;
@@ -201,7 +201,7 @@ synchronized boolean setTickFrequency(double freq) {
       if (autoTickFreq == freq)
         return false;
       autoTickFreq = freq;
-      autoTickNanos = freq <= 0 ? 0 : Math.round(1e9 / autoTickFreq);
+      autoTickNanos = freq <= 0 ? 0 : Math.round(1.0e9 / autoTickFreq);
       notifyAll();
       return true;
     }
@@ -321,7 +321,7 @@ private boolean loop() {
         try {
           stepPoints.clear();
           if (prop != null) prop.reset();
-          sim.fireSimulatorReset(); // todo: fixme: ack, wrong thread!
+          sim.fireSimulatorReset(); // TODO: fixme: ack, wrong thread!
         } catch (Exception err) {
           oops = true;
           err.printStackTrace();

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -36,7 +36,6 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
     for (var i = 0; same && i < desired.length; i++) {
       if (actual[i] != desired[i]) {
         same = false;
-        break;
       }
     }
     setEnabled(!same);

File: src/main/java/com/cburch/logisim/circuit/WireBundle.java
Patch:
@@ -19,7 +19,7 @@ class WireBundle {
   private Value pullValue = Value.UNKNOWN;
   private WireBundle parent;
   private Location widthDeterminant = null;
-  private boolean isBuss = false;
+  private boolean isBus_ = false;
   WireThread[] threads = null;
   final CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<>(); // points
   // bundle
@@ -69,7 +69,7 @@ WidthIncompatibilityData getWidthIncompatibilityData() {
   }
 
   boolean isBus() {
-    return isBuss;
+    return isBus_;
   }
 
   void isolate() {
@@ -88,7 +88,7 @@ void setWidth(BitWidth width, Location det) {
     }
     if (this.width != BitWidth.UNKNOWN) {
       if (width.equals(this.width)) {
-        isBuss = width.getWidth() > 1;
+        isBus_ = width.getWidth() > 1;
         // nothing to do
       } else { // the widths are broken: Create incompatibilityData
         // holding this info

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditPopup.java
Patch:
@@ -65,7 +65,7 @@ protected void fire(LogisimMenuItem item) {
   @Override
   protected boolean isEnabled(LogisimMenuItem item) {
     final var value = enabled.get(item);
-    return value != null && value;
+    return (value != null) && value;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/tools/LibraryTools.java
Patch:
@@ -59,10 +59,11 @@ public static boolean buildToolList(Library lib, Map<String, AddTool> tools) {
     var ret = true;
     if (!"Base".equals(lib.getName())) {
       for (final var tool1 : lib.getTools()) {
-        if (tools.containsKey(tool1.getName().toUpperCase()))
+        if (tools.containsKey(tool1.getName().toUpperCase())) {
           ret = false;
-        else
+        } else {
           tools.put(tool1.getName().toUpperCase(), (AddTool) tool1);
+        }
       }
     }
     for (final var sublib : lib.getLibraries()) {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -256,7 +256,7 @@ public void propagate(InstanceState state) {
 
       // FIXME: hardcoded string
       throw new UnsupportedOperationException(
-          "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");
+          "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");     // FIXME: hardcoded string
     }
   }
 
@@ -279,7 +279,7 @@ public void saveFile(AttributeSet attrs) {
       writer.print(content);
       writer.close();
     } catch (IOException e) {
-      logger.error("Could not create vhdl file: {}", e.getMessage());
+      logger.error("Could not create VHDL file: {}", e.getMessage());     // FIXME: hardcoded string
       e.printStackTrace();
     }
   }

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -67,7 +67,6 @@ void append(ReplacementMap next) {
 
       for (final var a : as) {
         final var aDst = this.map.computeIfAbsent(a, k -> new HashSet<>(cs.size()));
-        // should happen when b pre-existed only
         aDst.remove(b);
         aDst.addAll(cs);
       }

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -114,7 +114,7 @@ private static class SimThread extends UniquelyNamedThread {
     private boolean autoPropagating = true;
     private boolean autoTicking = false;
     private double autoTickFreq = 1.0; // Hz
-    private long autoTickNanos = Math.round(1e9 / autoTickFreq);
+    private long autoTickNanos = Math.round(1.0e9 / autoTickFreq);
     private int manualTicksRequested = 0;
     private int manualStepsRequested = 0;
     private boolean nudgeRequested = false;
@@ -201,7 +201,7 @@ synchronized boolean setTickFrequency(double freq) {
       if (autoTickFreq == freq)
         return false;
       autoTickFreq = freq;
-      autoTickNanos = freq <= 0 ? 0 : Math.round(1e9 / autoTickFreq);
+      autoTickNanos = freq <= 0 ? 0 : Math.round(1.0e9 / autoTickFreq);
       notifyAll();
       return true;
     }
@@ -321,7 +321,7 @@ private boolean loop() {
         try {
           stepPoints.clear();
           if (prop != null) prop.reset();
-          sim.fireSimulatorReset(); // todo: fixme: ack, wrong thread!
+          sim.fireSimulatorReset(); // TODO: fixme: ack, wrong thread!
         } catch (Exception err) {
           oops = true;
           err.printStackTrace();

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -36,7 +36,6 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
     for (var i = 0; same && i < desired.length; i++) {
       if (actual[i] != desired[i]) {
         same = false;
-        break;
       }
     }
     setEnabled(!same);

File: src/main/java/com/cburch/logisim/circuit/WireBundle.java
Patch:
@@ -19,7 +19,7 @@ class WireBundle {
   private Value pullValue = Value.UNKNOWN;
   private WireBundle parent;
   private Location widthDeterminant = null;
-  private boolean isBuss = false;
+  private boolean isBus_ = false;
   WireThread[] threads = null;
   final CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<>(); // points
   // bundle
@@ -69,7 +69,7 @@ WidthIncompatibilityData getWidthIncompatibilityData() {
   }
 
   boolean isBus() {
-    return isBuss;
+    return isBus_;
   }
 
   void isolate() {
@@ -88,7 +88,7 @@ void setWidth(BitWidth width, Location det) {
     }
     if (this.width != BitWidth.UNKNOWN) {
       if (width.equals(this.width)) {
-        isBuss = width.getWidth() > 1;
+        isBus_ = width.getWidth() > 1;
         // nothing to do
       } else { // the widths are broken: Create incompatibilityData
         // holding this info

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditPopup.java
Patch:
@@ -65,7 +65,7 @@ protected void fire(LogisimMenuItem item) {
   @Override
   protected boolean isEnabled(LogisimMenuItem item) {
     final var value = enabled.get(item);
-    return value != null && value;
+    return (value != null) && value;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/tools/LibraryTools.java
Patch:
@@ -59,10 +59,11 @@ public static boolean buildToolList(Library lib, Map<String, AddTool> tools) {
     var ret = true;
     if (!"Base".equals(lib.getName())) {
       for (final var tool1 : lib.getTools()) {
-        if (tools.containsKey(tool1.getName().toUpperCase()))
+        if (tools.containsKey(tool1.getName().toUpperCase())) {
           ret = false;
-        else
+        } else {
           tools.put(tool1.getName().toUpperCase(), (AddTool) tool1);
+        }
       }
     }
     for (final var sublib : lib.getLibraries()) {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -256,7 +256,7 @@ public void propagate(InstanceState state) {
 
       // FIXME: hardcoded string
       throw new UnsupportedOperationException(
-          "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");
+          "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");     // FIXME: hardcoded string
     }
   }
 
@@ -279,7 +279,7 @@ public void saveFile(AttributeSet attrs) {
       writer.print(content);
       writer.close();
     } catch (IOException e) {
-      logger.error("Could not create vhdl file: {}", e.getMessage());
+      logger.error("Could not create VHDL file: {}", e.getMessage());     // FIXME: hardcoded string
       e.printStackTrace();
     }
   }

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -220,7 +220,7 @@ public void paintInstance(InstancePainter painter) {
   @Override
   public void propagate(InstanceState state) {
     final var in = Buffer.repair(state, state.getPortValue(1));
-    state.setPort(0, in.not().not(), GateAttributes.DELAY);
+    state.setPort(0, in, GateAttributes.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -220,7 +220,7 @@ public void paintInstance(InstancePainter painter) {
   @Override
   public void propagate(InstanceState state) {
     final var in = Buffer.repair(state, state.getPortValue(1));
-    state.setPort(0, in.not().not(), GateAttributes.DELAY);
+    state.setPort(0, in, GateAttributes.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -109,7 +109,7 @@ void checkForWritePermission(String operationName, Circuit circuit) {
     }
   }
 
-  void execute(CircuitTransaction xn) {
+  public void execute(CircuitTransaction xn) {
     if (mutatingThread == Thread.currentThread()) {
       xn.run(mutatingMutator);
     } else {

File: src/main/java/com/cburch/logisim/std/wiring/PinAttributes.java
Patch:
@@ -80,7 +80,7 @@ public <V> V getValue(Attribute<V> attr) {
     if (attr == ATTR_DUMMY) return (V) "nochange";
     return super.getValue(attr);
   }
-
+  
   boolean isInput() {
     return type != EndData.OUTPUT_ONLY;
   }

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -42,6 +42,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
+import java.util.regex.Pattern;
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Result;
@@ -399,7 +400,7 @@ Element fromLibrary(Library lib) {
       if (lib instanceof LoadedLibrary) {
         final var origFile = LibraryManager.getLibraryFilePath(file.getLoader(), desc);
         if (origFile != null) {
-          final var names = origFile.split(File.separator);
+          final var names = origFile.split(Pattern.quote(File.separator));
           final var filename = names[names.length - 1];
           final var newFile = String.format("%s%s%s", librariesPath, File.separator, filename);
           try {

File: src/main/java/com/cburch/logisim/fpga/settings/BoardList.java
Patch:
@@ -93,7 +93,7 @@ private static Collection<String> getBoardsfromJar(Pattern pattern, String match
 
   public BoardList() {
     final var classPath = System.getProperty("java.class.path", File.pathSeparator);
-    final var classPathElements = classPath.split(File.pathSeparator);
+    final var classPathElements = classPath.split(Pattern.quote(File.pathSeparator));
     final var pattern = Pattern.compile(".*.xml");
     for (final var element : classPathElements) {
       definedBoards.addAll(getBoards(pattern, boardResourcePath, element));

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -42,6 +42,7 @@
 import java.util.Collections;
 import java.util.Comparator;
 import java.util.HashMap;
+import java.util.regex.Pattern;
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Result;
@@ -399,7 +400,7 @@ Element fromLibrary(Library lib) {
       if (lib instanceof LoadedLibrary) {
         final var origFile = LibraryManager.getLibraryFilePath(file.getLoader(), desc);
         if (origFile != null) {
-          final var names = origFile.split(File.separator);
+          final var names = origFile.split(Pattern.quote(File.separator));
           final var filename = names[names.length - 1];
           final var newFile = String.format("%s%s%s", librariesPath, File.separator, filename);
           try {

File: src/main/java/com/cburch/logisim/fpga/settings/BoardList.java
Patch:
@@ -93,7 +93,7 @@ private static Collection<String> getBoardsfromJar(Pattern pattern, String match
 
   public BoardList() {
     final var classPath = System.getProperty("java.class.path", File.pathSeparator);
-    final var classPathElements = classPath.split(File.pathSeparator);
+    final var classPathElements = classPath.split(Pattern.quote(File.pathSeparator));
     final var pattern = Pattern.compile(".*.xml");
     for (final var element : classPathElements) {
       definedBoards.addAll(getBoards(pattern, boardResourcePath, element));

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -387,6 +387,7 @@ public void repairCustomAppearance(List<CanvasObject> oldCustomAppearanceElement
           if (item instanceof AppearanceAnchor newAnchor) {
             final var translates = new HashSet<CanvasObject>();
             translates.add(oldAnchor);
+            oldAnchor.setValue(AppearanceAnchor.FACING, newAnchor.getValue(AppearanceAnchor.FACING));
             final var dx = newAnchor.getLocation().getX() - oldAnchor.getLocation().getX();
             final var dy = newAnchor.getLocation().getY() - oldAnchor.getLocation().getY();
             final var action = new ModelTranslateAction(this, translates, dx , dy);

File: src/main/java/com/cburch/logisim/std/wiring/PinAttributes.java
Patch:
@@ -80,7 +80,7 @@ public <V> V getValue(Attribute<V> attr) {
     if (attr == ATTR_DUMMY) return (V) "nochange";
     return super.getValue(attr);
   }
-
+  
   boolean isInput() {
     return type != EndData.OUTPUT_ONLY;
   }

File: src/main/java/com/cburch/logisim/std/wiring/ProbeAttributes.java
Patch:
@@ -58,7 +58,7 @@ public static AttributeOption getDefaultProbeAppearance() {
   Font labelfont = StdAttr.DEFAULT_LABEL_FONT;
   RadixOption radix = RadixOption.RADIX_2;
   BitWidth width = BitWidth.ONE;
-  AttributeOption appearance = StdAttr.APPEAR_CLASSIC;
+  AttributeOption appearance = getDefaultProbeAppearance();
 
   public ProbeAttributes() {}
 

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -559,7 +559,7 @@ public void setNotation(Notation notation) {
   }
 
   private String label(int row, int rows) {
-    if (row >= 0 && row < rows) {
+    if (row < 0 || row >= rows) {
       throw new RuntimeException(LineBuffer.format("Row {{1}} is outside range of {{2}} rows.", row, rows));
     }
     return switch (rows) {

File: src/test/java/com/cburch/logisim/fpga/hdlgenerator/HdlTest.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-package com.cburch.logisim;
+package com.cburch.logisim.fpga.hdlgenerator;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertFalse;
@@ -16,6 +16,7 @@
 import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.Mockito.mockStatic;
 
+import com.cburch.logisim.TestBase;
 import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import java.lang.reflect.InvocationTargetException;
 import java.util.List;

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -198,7 +198,7 @@ public Frame(Project project) {
     state.stateChanged();
     project.getVhdlSimulator().addVhdlSimStateListener(state);
 
-    mainRegion = new MainRegionVerticalSplitPane(leftRegion, rightRegion);
+    mainRegion = new MainRegionVerticalSplitPane(leftRegion, rightPanel);
     getContentPane().add(mainRegion, BorderLayout.CENTER);
 
     localeChanged();

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -198,7 +198,7 @@ public Frame(Project project) {
     state.stateChanged();
     project.getVhdlSimulator().addVhdlSimStateListener(state);
 
-    mainRegion = new MainRegionVerticalSplitPane(leftRegion, rightRegion);
+    mainRegion = new MainRegionVerticalSplitPane(leftRegion, rightPanel);
     getContentPane().add(mainRegion, BorderLayout.CENTER);
 
     localeChanged();

File: src/test/java/com/cburch/logisim/fpga/hdlgenerator/HdlTest.java
Patch:
@@ -7,7 +7,7 @@
  * This is free software released under GNU GPLv3 license
  */
 
-package com.cburch.logisim;
+package com.cburch.logisim.fpga.hdlgenerator;
 
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.junit.jupiter.api.Assertions.assertFalse;
@@ -16,6 +16,7 @@
 import static org.junit.jupiter.api.Assertions.fail;
 import static org.mockito.Mockito.mockStatic;
 
+import com.cburch.logisim.TestBase;
 import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import java.lang.reflect.InvocationTargetException;
 import java.util.List;

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -559,7 +559,7 @@ public void setNotation(Notation notation) {
   }
 
   private String label(int row, int rows) {
-    if (row >= 0 && row < rows) {
+    if (row < 0 || row >= rows) {
       throw new RuntimeException(LineBuffer.format("Row {{1}} is outside range of {{2}} rows.", row, rows));
     }
     return switch (rows) {

File: src/main/java/com/cburch/contracts/BaseMouseListenerContract.java
Patch:
@@ -6,7 +6,6 @@
  *
  * This is free software released under GNU GPLv3 license
  */
-
 package com.cburch.contracts;
 
 import java.awt.event.MouseEvent;

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -184,7 +184,7 @@ private HashMap<Component, Component> copyComponents(
     for (Component comp : components) {
       Location oldLoc = comp.getLocation();
       AttributeSet attrs =
-          translate | (comp.getFactory() instanceof Rom) | (comp.getFactory() instanceof Ram)
+          translate || (comp.getFactory() instanceof Rom) || (comp.getFactory() instanceof Ram)
               ? comp.getAttributeSet()
               : (AttributeSet) comp.getAttributeSet().clone();
       int newX = oldLoc.getX() + dx;

File: src/main/java/com/cburch/logisim/util/EventSourceWeakSupport.java
Patch:
@@ -17,8 +17,6 @@
 public class EventSourceWeakSupport<L> implements Iterable<L> {
   private final ConcurrentLinkedQueue<WeakReference<L>> listeners = new ConcurrentLinkedQueue<>();
 
-  public EventSourceWeakSupport() {}
-
   public void add(L listener) {
     listeners.add(new WeakReference<>(listener));
   }

File: src/main/java/com/cburch/logisim/util/GraphicsUtil.java
Patch:
@@ -233,9 +233,9 @@ public static Rectangle getTextBounds(Graphics g, String text, int x, int y, int
     return ret;
   }
 
-  public static void switchToWidth(Graphics g, int width) {
-    if (g instanceof Graphics2D g2d) {
-      g2d.setStroke(new BasicStroke((float) width));
+  public static void switchToWidth(Graphics gfx, int width) {
+    if (gfx instanceof Graphics2D g2d) {
+      g2d.setStroke(new BasicStroke(width));
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -184,7 +184,7 @@ private HashMap<Component, Component> copyComponents(
     for (Component comp : components) {
       Location oldLoc = comp.getLocation();
       AttributeSet attrs =
-          translate | (comp.getFactory() instanceof Rom) | (comp.getFactory() instanceof Ram)
+          translate || (comp.getFactory() instanceof Rom) || (comp.getFactory() instanceof Ram)
               ? comp.getAttributeSet()
               : (AttributeSet) comp.getAttributeSet().clone();
       int newX = oldLoc.getX() + dx;

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -184,7 +184,7 @@ private HashMap<Component, Component> copyComponents(
     for (Component comp : components) {
       Location oldLoc = comp.getLocation();
       AttributeSet attrs =
-          translate | (comp.getFactory() instanceof Rom) | (comp.getFactory() instanceof Ram)
+          translate || (comp.getFactory() instanceof Rom) || (comp.getFactory() instanceof Ram)
               ? comp.getAttributeSet()
               : (AttributeSet) comp.getAttributeSet().clone();
       int newX = oldLoc.getX() + dx;

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -159,7 +159,7 @@ public WindowOptions(PreferencesFrame window) {
     setLayout(new TableLayout(1));
     final var but = new JButton();
     but.addActionListener(listener);
-    but.setActionCommand("reset");
+    but.setActionCommand(cmdResetWindowLayout);
     but.setText(S.get("windowToolbarReset"));
     add(but);
     for (final var check : checks) {

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -38,7 +38,7 @@ public SRFFHDLGeneratorFactory() {
     @Override
     public LineBuffer getUpdateLogic() {
       return LineBuffer.getHdlBuffer()
-          .add("{{assign}} s_next_state{{=}}(s_currentState{{or}}s){{and}}{{not}}(r);");
+          .add("{{assign}} s_nextState{{=}}(s_currentState{{or}}s){{and}}{{not}}(r);");
     }
   }
 

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -38,7 +38,7 @@ public SRFFHDLGeneratorFactory() {
     @Override
     public LineBuffer getUpdateLogic() {
       return LineBuffer.getHdlBuffer()
-          .add("{{assign}} s_next_state{{=}}(s_currentState{{or}}s){{and}}{{not}}(r);");
+          .add("{{assign}} s_nextState{{=}}(s_currentState{{or}}s){{and}}{{not}}(r);");
     }
   }
 

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -187,13 +187,12 @@ public Font parse(String value) {
 
     @Override
     public String toDisplayString(Font font) {
-      if (font == null) return "???";
-      return font.getFamily() + " " + FontUtil.toStyleDisplayString(font.getStyle()) + " " + font.getSize();
+      return font == null ? "???" : String.format("%s %s %s", font.getFamily(), FontUtil.toStyleDisplayString(font.getStyle()), font.getSize());
     }
 
     @Override
     public String toStandardString(Font font) {
-      return toDisplayString(font);
+      return font == null ? "???" : String.format("%s %s %s", font.getFamily(), FontUtil.toStyleStandardString(font.getStyle()), font.getSize());
     }
   }
 

File: src/main/java/com/cburch/logisim/std/base/Text.java
Patch:
@@ -23,7 +23,6 @@
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
-import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.StringUtil;
 import java.awt.Color;
@@ -189,7 +188,7 @@ public void paintInstance(InstancePainter painter) {
     final var y = loc.getY();
     final var gfx = painter.getGraphics();
     gfx.translate(x, y);
-    gfx.setColor(painter.getAttributeValue(StdAttr.LABEL_COLOR));
+    gfx.setColor(painter.getAttributeValue(ATTR_COLOR));
     paintGhost(painter);
     gfx.translate(-x, -y);
   }

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -187,13 +187,12 @@ public Font parse(String value) {
 
     @Override
     public String toDisplayString(Font font) {
-      if (font == null) return "???";
-      return font.getFamily() + " " + FontUtil.toStyleDisplayString(font.getStyle()) + " " + font.getSize();
+      return font == null ? "???" : String.format("%s %s %s", font.getFamily(), FontUtil.toStyleDisplayString(font.getStyle()), font.getSize());
     }
 
     @Override
     public String toStandardString(Font font) {
-      return toDisplayString(font);
+      return font == null ? "???" : String.format("%s %s %s", font.getFamily(), FontUtil.toStyleStandardString(font.getStyle()), font.getSize());
     }
   }
 

File: src/main/java/com/cburch/logisim/std/arith/AdderHdlGeneratorFactory.java
Patch:
@@ -57,7 +57,7 @@ public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs)
       if (nrOfBits == 1) {
         contents.add("result   <= s_sumResult(0);");
       } else {
-        contents.add("result   <= s_sumResult( ({{1}}-1) DOWNTO 0 )", NR_OF_BITS_STRING);
+        contents.add("result   <= s_sumResult( ({{1}}-1) DOWNTO 0 );", NR_OF_BITS_STRING);
       }
       contents.add("carryOut <= s_sumResult({{1}}-1);", EXTENDED_BITS_STRING);
     } else {

File: src/main/java/com/cburch/logisim/std/arith/AdderHdlGeneratorFactory.java
Patch:
@@ -57,7 +57,7 @@ public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs)
       if (nrOfBits == 1) {
         contents.add("result   <= s_sumResult(0);");
       } else {
-        contents.add("result   <= s_sumResult( ({{1}}-1) DOWNTO 0 )", NR_OF_BITS_STRING);
+        contents.add("result   <= s_sumResult( ({{1}}-1) DOWNTO 0 );", NR_OF_BITS_STRING);
       }
       contents.add("carryOut <= s_sumResult({{1}}-1);", EXTENDED_BITS_STRING);
     } else {

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -558,7 +558,7 @@ public LineBuffer addRemarkBlock(String remarkText) {
    * @param nrOfIndentSpaces Number of extra indentation spaces.
    * @return Instance of self for easy chaining.
    */
-  public LineBuffer addRemarkBlock(String remarkText, Integer nrOfIndentSpaces) {
+  public LineBuffer addRemarkBlock(String remarkText, int nrOfIndentSpaces) {
     add(buildRemarkBlock(remarkText, nrOfIndentSpaces));
     return this;
   }
@@ -570,7 +570,7 @@ public LineBuffer addRemarkBlock(String remarkText, Integer nrOfIndentSpaces) {
    * @param nrOfIndentSpaces Number of extra indentation spaces.
    * @return Constructed lines of remark block.
    */
-  protected ArrayList<String> buildRemarkBlock(String remarkText, Integer nrOfIndentSpaces) {
+  protected ArrayList<String> buildRemarkBlock(String remarkText, int nrOfIndentSpaces) {
     final var maxRemarkLength = MAX_LINE_LENGTH - 2 * Hdl.remarkOverhead() - nrOfIndentSpaces;
     final var remarkLines = remarkText.split("\n");
     final var oneLine = new StringBuilder();

File: src/main/java/com/cburch/logisim/soc/gui/TraceWindowTableModel.java
Patch:
@@ -77,7 +77,8 @@ public void rebuild() {
       for (var i = 0; i < getColumnCount(); i++) {
         table.getColumnModel().getColumn(i).setPreferredWidth(AppPreferences.getScaled(boxWidth));
       }
-      table.setRowHeight(AppPreferences.getScaled(2 * SocBusStateInfo.TRACE_HEIGHT + SocBusStateInfo.TRACE_HEIGHT / 2));
+      final var height = 2 * SocBusStateInfo.TRACE_HEIGHT + SocBusStateInfo.TRACE_HEIGHT / 2;
+      table.setRowHeight(AppPreferences.getScaled(height));
       table
           .getTableHeader()
           .setPreferredSize(new Dimension(AppPreferences.getScaled(boxWidth), AppPreferences.getScaled(20)));

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -69,11 +69,11 @@ public void windowOpened(WindowEvent event) {
     }
   }
 
-
   public static final String PROJECT_LIST_PROPERTY = "projectList";
   private static final WeakHashMap<Window, Point> frameLocations = new WeakHashMap<>();
   private static final MyListener myListener = new MyListener();
-  private static final PropertyChangeWeakSupport propertySupport = new PropertyChangeWeakSupport(Projects.class);
+  private static final PropertyChangeWeakSupport propertySupport =
+      new PropertyChangeWeakSupport(Projects.class);
   private static final ArrayList<Project> openProjects = new ArrayList<>();
   private static Frame mostRecentFrame = null;
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Vhdl.java
Patch:
@@ -11,6 +11,7 @@ public class Vhdl {
 
   private static final String[] RESERVED_VHDL_WORDS = {
       "abs",
+      "all",
       "access",
       "after",
       "alias",
@@ -43,8 +44,8 @@ public class Vhdl {
       "generic",
       "group",
       "guarded",
-      "integer",
       "if",
+      "integer",
       "impure",
       "in",
       "inertial",

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceCanvas.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.draw.model.ReorderRequest;
 import com.cburch.draw.undo.UndoAction;
 import com.cburch.logisim.circuit.Circuit;
-import com.cburch.logisim.circuit.CircuitAttributes;
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.circuit.appear.AppearanceElement;
 import com.cburch.logisim.data.Bounds;
@@ -283,8 +282,7 @@ public void setCircuit(Project proj, CircuitState circuitState) {
     this.proj = proj;
     this.circuitState = circuitState;
     final var circuit = circuitState.getCircuit();
-    circuit.getStaticAttributes().setValue(CircuitAttributes.APPEARANCE_ATTR, CircuitAttributes.APPEAR_CUSTOM);
-    setModel(circuit.getAppearance(), this);
+    setModel(circuit.getAppearance().getCustomAppearanceDrawing(), this);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlAppearance.java
Patch:
@@ -22,7 +22,7 @@
 public class VhdlAppearance extends CircuitAppearance {
   VhdlAppearance(List<CanvasObject> shapes) {
     super(null);
-    setObjectsForce(shapes);
+    setObjectsForce(shapes, true);
   }
 
   static VhdlAppearance create(List<Instance> pins, String name, AttributeOption style) {

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceCanvas.java
Patch:
@@ -21,7 +21,6 @@
 import com.cburch.draw.model.ReorderRequest;
 import com.cburch.draw.undo.UndoAction;
 import com.cburch.logisim.circuit.Circuit;
-import com.cburch.logisim.circuit.CircuitAttributes;
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.circuit.appear.AppearanceElement;
 import com.cburch.logisim.data.Bounds;
@@ -283,8 +282,7 @@ public void setCircuit(Project proj, CircuitState circuitState) {
     this.proj = proj;
     this.circuitState = circuitState;
     final var circuit = circuitState.getCircuit();
-    circuit.getStaticAttributes().setValue(CircuitAttributes.APPEARANCE_ATTR, CircuitAttributes.APPEAR_CUSTOM);
-    setModel(circuit.getAppearance(), this);
+    setModel(circuit.getAppearance().getCustomAppearanceDrawing(), this);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -427,7 +427,7 @@ public void setObjectsForce(List<? extends CanvasObject> shapesBase, boolean isD
         defaultCanvasObjects.clear();
         defaultCanvasObjects.addAll(shapes);
       } else {
-        super.removeObjects(new ArrayList<>(getObjectsFromBottom()));
+        super.removeObjects(new ArrayList<>(getCustomObjectsFromBottom()));
         super.addObjects(0, shapes);
       }
     } finally {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlAppearance.java
Patch:
@@ -22,7 +22,7 @@
 public class VhdlAppearance extends CircuitAppearance {
   VhdlAppearance(List<CanvasObject> shapes) {
     super(null);
-    setObjectsForce(shapes);
+    setObjectsForce(shapes,true);
   }
 
   static VhdlAppearance create(List<Instance> pins, String name, AttributeOption style) {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -295,8 +295,7 @@ private ArrayList<Instance> getPins() {
       a.setValue(Pin.ATTR_TYPE, !p.getType().equals(Port.INPUT));
       a.setValue(StdAttr.FACING, !p.getType().equals(Port.INPUT) ? Direction.WEST : Direction.EAST);
       a.setValue(StdAttr.WIDTH, p.getWidth());
-      InstanceComponent ic =
-          (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, y), a);
+      InstanceComponent ic = (InstanceComponent) Pin.FACTORY.createComponent(Location.create(100, y), a);
       pins.add(ic.getInstance());
       y += 10;
     }

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -413,14 +413,14 @@ private void toLogisimFile(Element elt, Project proj) {
       }
 
       // first, load the sublibraries
-      final var libsToAddAfter = new HashSet<LogisimFile>();
+      final var libsToAddAfter = new HashSet<Library>();
       final var baseLibsToEnable = new HashSet<String>();
       final var libsLoaded = new HashSet<String>();
       for (final var o : XmlIterator.forChildElements(elt, "lib")) {
         final var lib = toLibrary(o, isHolyCrossFile, isEvolutionFile);
         if (lib instanceof LoadedLibrary loadedLib) {
-          if (loadedLib.getBase() instanceof LogisimFile logiLib) {
-            libsToAddAfter.add(logiLib);
+          if (loadedLib.getBase() instanceof LogisimFile) {
+            libsToAddAfter.add(lib);
             continue;
           }
         }

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -413,14 +413,14 @@ private void toLogisimFile(Element elt, Project proj) {
       }
 
       // first, load the sublibraries
-      final var libsToAddAfter = new HashSet<LogisimFile>();
+      final var libsToAddAfter = new HashSet<Library>();
       final var baseLibsToEnable = new HashSet<String>();
       final var libsLoaded = new HashSet<String>();
       for (final var o : XmlIterator.forChildElements(elt, "lib")) {
         final var lib = toLibrary(o, isHolyCrossFile, isEvolutionFile);
         if (lib instanceof LoadedLibrary loadedLib) {
-          if (loadedLib.getBase() instanceof LogisimFile logiLib) {
-            libsToAddAfter.add(logiLib);
+          if (loadedLib.getBase() instanceof LogisimFile) {
+            libsToAddAfter.add(lib);
             continue;
           }
         }

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -65,7 +65,7 @@ public CircuitAppearance(Circuit circuit) {
     myListener = new MyListener();
     suppressRecompute = false;
     addCanvasModelListener(myListener);
-    circuit.getStaticAttributes().addAttributeListener(this);
+    if (circuit != null) circuit.getStaticAttributes().addAttributeListener(this);
     defaultCanvasObjects = new ArrayList<CanvasObject>();
     recomputeDefaultAppearance();
     defaultCustomAppearance = DefaultCustomAppearance.build(circuitPins.getPins()); 
@@ -267,7 +267,7 @@ public SortedMap<Location, Instance> getPortOffsets(Direction facing) {
   }
 
   public boolean isDefaultAppearance() {
-    return !circuit.getStaticAttributes().getValue(CircuitAttributes.APPEARANCE_ATTR).equals(CircuitAttributes.APPEAR_CUSTOM);
+    return (circuit == null) || !circuit.getStaticAttributes().getValue(CircuitAttributes.APPEARANCE_ATTR).equals(CircuitAttributes.APPEAR_CUSTOM);
   }
   
   public List<CanvasObject> getCustomObjectsFromBottom() {

File: src/main/java/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -51,7 +51,7 @@ public interface StdAttr {
       Attributes.forString("label", S.getter("stdLabelAttr"));
   Attribute<Font> LABEL_FONT =
       Attributes.forFont("labelfont", S.getter("stdLabelFontAttr"));
-  Font DEFAULT_LABEL_FONT = new Font("SansSerif", Font.BOLD, 16);
+  Font DEFAULT_LABEL_FONT = new Font("SansSerif.Bold", Font.PLAIN, 16);
   Attribute<Color> LABEL_COLOR =
       Attributes.forColor("labelcolor", S.getter("ioLabelColorAttr"));
   Color DEFAULT_LABEL_COLOR = Color.BLUE;

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -65,7 +65,7 @@ public CircuitAppearance(Circuit circuit) {
     myListener = new MyListener();
     suppressRecompute = false;
     addCanvasModelListener(myListener);
-    circuit.getStaticAttributes().addAttributeListener(this);
+    if (circuit != null) circuit.getStaticAttributes().addAttributeListener(this);
     defaultCanvasObjects = new ArrayList<CanvasObject>();
     recomputeDefaultAppearance();
     defaultCustomAppearance = DefaultCustomAppearance.build(circuitPins.getPins()); 
@@ -267,7 +267,7 @@ public SortedMap<Location, Instance> getPortOffsets(Direction facing) {
   }
 
   public boolean isDefaultAppearance() {
-    return !circuit.getStaticAttributes().getValue(CircuitAttributes.APPEARANCE_ATTR).equals(CircuitAttributes.APPEAR_CUSTOM);
+    return ((circuit == null) || !circuit.getStaticAttributes().getValue(CircuitAttributes.APPEARANCE_ATTR).equals(CircuitAttributes.APPEAR_CUSTOM));
   }
   
   public List<CanvasObject> getCustomObjectsFromBottom() {

File: src/main/java/com/cburch/logisim/circuit/CircuitHdlGeneratorFactory.java
Patch:
@@ -70,8 +70,9 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
         myPorts.add(Port.INPUT, CorrectLabel.getCorrectLabel(name), nrOfBits, 0);
       }
     }
-    if (outputBubbles > 0)
+    if (outputBubbles > 0) {
       myPorts.add(Port.OUTPUT, LOCAL_OUTPUT_BUBBLE_BUS_NAME, outputBubbles > 1 ? outputBubbles : 0, 0);
+    }
     for (var output = 0; output < theNetlist.numberOfOutputPorts(); output++) {
       final var selectedInput = theNetlist.getOutputPin(output);
       if (selectedInput != null)  {
@@ -431,7 +432,7 @@ public Map<String, String> getPortMap(Netlist nets, Object theMapInfo) {
     if (myNetList.numberOfOutputBubbles() > 0) {
       portMap.put(LOCAL_OUTPUT_BUBBLE_BUS_NAME,
           LineBuffer.format("{{1}}{{2}}", topLevel ? Preamble : LOCAL_OUTPUT_BUBBLE_BUS_NAME,
-              topLevel ? LOCAL_OUTPUT_BUBBLE_BUS_NAME : getBubbleIndex(componentInfo, 0)));
+              topLevel ? LOCAL_OUTPUT_BUBBLE_BUS_NAME : getBubbleIndex(componentInfo, 1)));
     }
 
     final var nrOfIOBubbles = myNetList.numberOfInOutBubbles();

File: src/main/java/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -51,7 +51,7 @@ public interface StdAttr {
       Attributes.forString("label", S.getter("stdLabelAttr"));
   Attribute<Font> LABEL_FONT =
       Attributes.forFont("labelfont", S.getter("stdLabelFontAttr"));
-  Font DEFAULT_LABEL_FONT = new Font("SansSerif", Font.BOLD, 16);
+  Font DEFAULT_LABEL_FONT = new Font("SansSerif.Bold", Font.PLAIN, 16);
   Attribute<Color> LABEL_COLOR =
       Attributes.forColor("labelcolor", S.getter("ioLabelColorAttr"));
   Color DEFAULT_LABEL_COLOR = Color.BLUE;

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceToolbarModel.java
Patch:
@@ -51,6 +51,8 @@ public AppearanceToolbarModel(AbstractTool selectTool, ShowStateTool showStateTo
     for (final var tool : tools) {
       rawItems.add(new ToolbarToolItem(tool));
     }
+    rawItems.add(new ResetAppearanceTool(canvas, true));
+    rawItems.add(new ResetAppearanceTool(canvas, false));
     rawItems.add(showStateTool);
     items = Collections.unmodifiableList(rawItems);
     canvas.addPropertyChangeListener(Canvas.TOOL_PROPERTY, this);

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateTool.java
Patch:
@@ -20,14 +20,12 @@ public class ShowStateTool implements ToolbarClickableItem {
 
   private final AppearanceView view;
   private final AppearanceCanvas canvas;
-  private final DrawingAttributeSet attrs;
   private final Icon icon;
   private final Icon pressed;
 
   public ShowStateTool(AppearanceView view, AppearanceCanvas canvas, DrawingAttributeSet attrs) {
     this.view = view;
     this.canvas = canvas;
-    this.attrs = attrs;
     icon = new ShowStateIcon(false);
     pressed = new ShowStateIcon(true);
   }
@@ -39,6 +37,7 @@ public Dimension getDimension(Object orientation) {
 
   @Override
   public String getToolTip() {
+    //FIXME: hardcoded string
     return "Select state to be shown";
   }
 

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -93,7 +93,7 @@ private void fireChanged(CanvasModelEvent e) {
   public List<CanvasObject> getObjectsFromBottom() {
     return Collections.unmodifiableList(canvasObjects);
   }
-
+  
   @Override
   public List<CanvasObject> getObjectsFromTop() {
     final var ret = new ArrayList<CanvasObject>(getObjectsFromBottom());

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -278,7 +278,7 @@ public void addCircuitListener(CircuitListener what) {
 
   public void recalcDefaultShape() {
     if (appearance.isDefaultAppearance()) {
-      appearance.recomputeDefaultAppearance();
+      appearance.recomputeDefaultAppearance(true);
     }
   }
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -143,7 +143,7 @@ public void setForCircuit(Circuit circuit, Attribute<?> attr, Object newValue) {
     log.add(CircuitChange.setForCircuit(circuit, attr, oldValue, newValue));
     attrs.setValue(a, newValue);
     if (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
-      circuit.getAppearance().recomputeDefaultAppearance();
+      circuit.getAppearance().recomputeDefaultAppearance(true);
     }
   }
 }

File: src/main/java/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -342,7 +342,7 @@ protected Map<Circuit, Integer> getAccessedCircuits() {
 
     @Override
     protected void run(CircuitMutator mutator) {
-      source.getAppearance().recomputeDefaultAppearance();
+      source.getAppearance().recomputeDefaultAppearance(source.getAppearance().isDefaultAppearance());
     }
   }
 

File: src/main/java/com/cburch/logisim/std/wiring/Probe.java
Patch:
@@ -299,7 +299,7 @@ public Bounds getOffsetBounds(AttributeSet attrsBase) {
         attrs.facing,
         attrs.width,
         attrs.radix,
-        attrs.Appearance == ProbeAttributes.APPEAR_EVOLUTION_NEW,
+        attrs.appearance == ProbeAttributes.APPEAR_EVOLUTION_NEW,
         false);
   }
 

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -254,7 +254,6 @@ Library findLibrary(Tool tool) {
 
   Element fromCircuit(Circuit circuit) {
     final var ret = doc.createElement("circuit");
-System.out.println("circuit:");
     ret.setAttribute("name", circuit.getName());
     addAttributeSetContent(ret, circuit.getStaticAttributes(), CircuitAttributes.DEFAULT_STATIC_ATTRIBUTES, false);
     if (!circuit.getAppearance().isDefaultAppearance()) {

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -41,7 +41,7 @@ private static class defaultStaticAttributeProvider implements AttributeDefaultP
     @Override
     public Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver) {
       final var ret = AttributeSets.fixedSet(STATIC_ATTRS, STATIC_DEFAULTS);
-      ret.setValue(APPEARANCE_ATTR, AppPreferences.getDefaultCircuitAppearance());
+      ret.setValue(APPEARANCE_ATTR, StdAttr.APPEAR_CLASSIC);
       return ret.getValue(attr);
     }
 

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -10,7 +10,6 @@
 package com.cburch.logisim.file;
 
 import com.cburch.draw.model.AbstractCanvasObject;
-import com.cburch.logisim.LogisimVersion;
 import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.circuit.CircuitAttributes;
 import com.cburch.logisim.circuit.Wire;
@@ -255,6 +254,7 @@ Library findLibrary(Tool tool) {
 
   Element fromCircuit(Circuit circuit) {
     final var ret = doc.createElement("circuit");
+System.out.println("circuit:");
     ret.setAttribute("name", circuit.getName());
     addAttributeSetContent(ret, circuit.getStaticAttributes(), CircuitAttributes.DEFAULT_STATIC_ATTRIBUTES, false);
     if (!circuit.getAppearance().isDefaultAppearance()) {

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -423,8 +423,11 @@ public static boolean doExportProject(Project proj) {
       final var exportCircDir = String.format("%s%s%s", exportRootDir, File.separator, Loader.LOGISIM_CIRCUIT_DIR);
       try {
         final var path = Paths.get(exportRootDir);
+        // FIXME: Disabled project deletion, ask the user what to do, for the moment the files are "overwritten"
+        /*
         if (Files.exists(path) && Files.exists(Paths.get(exportLibDir)) && Files.exists(Paths.get(exportCircDir)))
           Files.walk(path).sorted(Comparator.reverseOrder()).map(Path::toFile).forEach(File::delete);
+        */
         Files.createDirectories(Paths.get(exportLibDir));
         Files.createDirectories(Paths.get(exportCircDir));
       } catch (IOException e) {

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -356,15 +356,15 @@ public boolean save(LogisimFile file, File dest) {
     final var backupCreated = (backup != null) && dest.renameTo(backup);
 
     FileOutputStream fwrite = null;
+    final var oldFile = getMainFile();
     try {
+      setMainFile(dest);
       fwrite = new FileOutputStream(dest);
       file.write(fwrite, this, dest, null);
       file.setName(toProjectName(dest));
-
-      final var oldFile = getMainFile();
-      setMainFile(dest);
       LibraryManager.instance.fileSaved(this, dest, oldFile, file);
     } catch (IOException e) {
+      setMainFile(oldFile);
       if (backupCreated) recoverBackup(backup, dest);
       if (dest.exists() && dest.length() == 0) {
         // FIXME: delete can fail. Ensure we will not have snowball effect here!

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -386,7 +386,7 @@ Element fromLibrary(Library lib) {
       if (!isUsed && !"#Base".equals(desc)) {
         return null;
       }
-      if (lib instanceof LoadedLibrary loadedlib) {
+      if (lib instanceof LoadedLibrary) {
         final var origFile = LibraryManager.getLibraryFilePath(file.getLoader(), desc);
         if (origFile != null) {
           final var names = origFile.split(File.separator);

File: src/main/java/com/cburch/logisim/file/XmlCircuitReader.java
Patch:
@@ -179,7 +179,7 @@ private void buildCircuit(XmlReader.CircuitData circData, CircuitMutator mutator
       if ("comp".equals(subEltName)) {
         try {
           var comp = knownComponents.get(sub_elt);
-          if (comp == null) getComponent(sub_elt, reader, isHolyCross, isEvolution);
+          if (comp == null) comp = getComponent(sub_elt, reader, isHolyCross, isEvolution);
           if (comp != null) {
             /* filter out empty text boxes */
             if (comp.getFactory() instanceof Text) {

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -104,7 +104,7 @@ void addErrors(XmlReaderException exception, String context) {
     }
 
     Library findLibrary(String libName) throws XmlReaderException {
-      if ("".equals(libName)) return file;
+      if (libName == null || libName.isEmpty()) return file;
       final var ret = libs.get(libName);
       if (ret == null) throw new XmlReaderException(S.get("libMissingError", libName));
       return ret;

File: src/main/java/com/cburch/logisim/file/XmlCircuitReader.java
Patch:
@@ -179,7 +179,7 @@ private void buildCircuit(XmlReader.CircuitData circData, CircuitMutator mutator
       if ("comp".equals(subEltName)) {
         try {
           var comp = knownComponents.get(sub_elt);
-          if (comp == null) getComponent(sub_elt, reader, isHolyCross, isEvolution);
+          if (comp == null) comp = getComponent(sub_elt, reader, isHolyCross, isEvolution);
           if (comp != null) {
             /* filter out empty text boxes */
             if (comp.getFactory() instanceof Text) {

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -104,7 +104,7 @@ void addErrors(XmlReaderException exception, String context) {
     }
 
     Library findLibrary(String libName) throws XmlReaderException {
-      if ("".equals(libName)) return file;
+      if (libName == null || libName.isEmpty()) return file;
       final var ret = libs.get(libName);
       if (ret == null) throw new XmlReaderException(S.get("libMissingError", libName));
       return ret;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHdlGeneratorFactory.java
Patch:
@@ -80,7 +80,7 @@ public List<String> getArchitecture(Netlist theNetlist, AttributeSet attrs, Stri
 
       final var components = getComponentDeclarationSection(theNetlist, attrs);
       if (!components.isEmpty())
-        contents.addRemarkBlock("Here all used components are defined").add(components).empty();
+        contents.addRemarkBlock("Here all used components are defined", 3).add(components.getWithIndent()).empty();
 
       final var typedWires = myTypedWires.getTypedWires();
       final var mySignals = new HashMap<String, String>();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -225,6 +225,7 @@ public String getParameterValue(AttributeSet attrs) {
                 final var attrValue = attrs.getValue(attr);
                 if (attrValue instanceof Integer intVal) selectedValue *= intVal;
                 else if (attrValue instanceof Long longVal) selectedValue *= longVal;
+                else if (attrValue instanceof BitWidth width) selectedValue *= width.getWidth();
                 else throw new UnsupportedOperationException("Requested attribute is not an Integer or Long");
               }
             }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlParameters.java
Patch:
@@ -205,7 +205,9 @@ public String getParameterValue(AttributeSet attrs) {
           var bubbleMask = 0L;
           var mask = 1L;
           for (var i = 0; i < nrOfInputs; i++) {
-            final var inputIsInverted = attrs.getValue(new NegateAttribute(i, null));
+            // VHDL is particular with the general type std_logic_vector, as it does an upto, so we have to exchange the bits
+            final var realIndex = Hdl.isVhdl() ? nrOfInputs - i - 1 : i;   
+            final var inputIsInverted = attrs.getValue(new NegateAttribute(realIndex, null));
             if (Boolean.TRUE.equals(inputIsInverted)) bubbleMask |= mask;
             mask <<= 1L;
           }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/TickComponentHdlGeneratorFactory.java
Patch:
@@ -83,14 +83,14 @@ public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs)
       contents.addVhdlKeywords().add("""
           s_tickNext   <= '1' {{when}} s_countReg = std_logic_vector(to_unsigned(0, {{nrOfCounterBits}})) {{else}} '0';
           s_countNext  <= ({{others}} => '0') {{when}} s_tickReg /= '0' {{and}} s_tickReg /= '1' {{else}} -- For simulation only!
-                           std_logic_vector(to_unsigned((ReloadValue-1), {{nrOfCounterBits}})) {{when}} s_tickNext = '1' {{else}}
+                           std_logic_vector(to_unsigned((reloadValue-1), {{nrOfCounterBits}})) {{when}} s_tickNext = '1' {{else}}
                            std_logic_vector(unsigned(s_countReg)-1);
 
           """);
     } else {
       contents.add("""
               assign s_tickNext  = (s_countReg == 0) ? 1'b1 : 1'b0;
-              assign s_countNext = (s_countReg == 0) ? ReloadValue-1 : s_countReg-1;
+              assign s_countNext = (s_countReg == 0) ? reloadValue-1 : s_countReg-1;
 
               """)
           .addRemarkBlock("Here the simulation only initial is defined")

File: src/main/java/com/cburch/logisim/std/gates/AbstractBufferHdlGenerator.java
Patch:
@@ -31,7 +31,7 @@ public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponen
     final var nrOfBits = componentInfo.getComponent().getAttributeSet().getValue(StdAttr.WIDTH).getWidth();
     final var dest = (nrOfBits == 1) ? Hdl.getNetName(componentInfo, 0, false, nets) : Hdl.getBusName(componentInfo, 0, nets);
     final var source = (nrOfBits == 1) ? Hdl.getNetName(componentInfo, 1, false, nets) : Hdl.getBusName(componentInfo, 1, nets);
-    return LineBuffer.getHdlBuffer().add("{{1}}{{=}}{{2}}{{3}};", dest, isInverter ? Hdl.notOperator() : "", source);
+    return LineBuffer.getHdlBuffer().add("{{assign}}{{1}}{{=}}{{2}}{{3}};", dest, isInverter ? Hdl.notOperator() : "", source);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHdlGeneratorFactory.java
Patch:
@@ -360,7 +360,7 @@ public List<String> getComponentInstantiation(Netlist theNetlist, AttributeSet a
   }
 
   @Override
-  public List<String> getComponentMap(Netlist nets, Long componentId, Object componentInfo, String name) {
+  public LineBuffer getComponentMap(Netlist nets, Long componentId, Object componentInfo, String name) {
     final var contents = LineBuffer.getHdlBuffer();
     final var parameterMap = new TreeMap<String, String>();
     final var portMap = getPortMap(nets, componentInfo);
@@ -470,8 +470,7 @@ else if (componentInfo instanceof netlistComponent comp) {
       oneLine.append(");");
       contents.add(oneLine.toString());
     }
-    contents.add("");
-    return contents.getWithIndent();
+    return contents;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -230,7 +230,7 @@ public static String getBusNameContinues(netlistComponent comp, int endIndex, Ne
     if (nrOfBits == 1) return getNetName(comp, endIndex, true, theNets);
     if (!theNets.isContinuesBus(comp, endIndex)) return null;
     final var connectedNet = connectionInformation.get((byte) 0).getParentNet();
-    return LineBuffer.format("{{1}}{{2}}{{<}}{{3}}{{4}}{{5}}{{>}}",
+    return LineBuffer.formatHdl("{{1}}{{2}}{{<}}{{3}}{{4}}{{5}}{{>}}",
         BUS_NAME,
         theNets.getNetId(connectedNet),
         connectionInformation.get((byte) (connectionInformation.getNrOfBits() - 1)).getParentNetBitIndex(),
@@ -246,7 +246,7 @@ public static String getBusName(netlistComponent comp, int endIndex, Netlist the
     if (!theNets.isContinuesBus(comp, endIndex)) return null;
     final var ConnectedNet = connectionInformation.get((byte) 0).getParentNet();
     if (ConnectedNet.getBitWidth() != nrOfBits) return getBusNameContinues(comp, endIndex, theNets);
-    return LineBuffer.format("{{1}}{{2}}", BUS_NAME, theNets.getNetId(ConnectedNet));
+    return LineBuffer.formatHdl("{{1}}{{2}}", BUS_NAME, theNets.getNetId(ConnectedNet));
   }
 
   public static String getClockNetName(netlistComponent comp, int endIndex, Netlist theNets) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlGeneratorFactory.java
Patch:
@@ -49,7 +49,7 @@ List<String> getComponentInstantiation(
       AttributeSet attrs,
       String componentName);
 
-  List<String> getComponentMap(
+  LineBuffer getComponentMap(
       Netlist nets,
       Long componentId,
       Object componentInfo,

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/InlinedHdlGeneratorFactory.java
Patch:
@@ -35,7 +35,7 @@ public List<String> getComponentInstantiation(Netlist theNetlist, AttributeSet a
   }
 
   @Override
-  public List<String> getComponentMap(Netlist nets, Long componentId, Object componentInfo, String name) {
+  public LineBuffer getComponentMap(Netlist nets, Long componentId, Object componentInfo, String name) {
     throw new IllegalAccessError("BUG: getComponentMap not supported");
   }
 

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -411,9 +411,8 @@ void reset() {
   }
 
   public void setData(Component comp, Object data) {
-    if (data instanceof CircuitState oldState) {
-      final var newState = (CircuitState) data;
-      // FIXME: What's the purpose of this block? The condition always false here.
+    if (data instanceof CircuitState newState) {
+      final var oldState = (CircuitState) componentData.get(comp);
       if (oldState != newState) {
         // There's something new going on with this subcircuit.
         // Maybe the subcircuit is new, or perhaps it's being

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -407,7 +407,7 @@ public static void addAllWiresSorted(LineBuffer contents, Map<String, String> wi
       maxNameLength = Math.max(maxNameLength, wire.length());
     final var sortedWires = new TreeSet<String>(wires.keySet());
     for (var wire : sortedWires) 
-      contents.add("   {{assign}}{{1}}{{2}} {{=}} {{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
+      contents.add("{{assign}}{{1}}{{2}}{{=}}{{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
     wires.clear();
   }
 }

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -411,9 +411,8 @@ void reset() {
   }
 
   public void setData(Component comp, Object data) {
-    if (data instanceof CircuitState oldState) {
-      final var newState = (CircuitState) data;
-      // FIXME: What's the purpose of this block? The condition always false here.
+    if (data instanceof CircuitState newState) {
+      final var oldState = (CircuitState) componentData.get(comp);
       if (oldState != newState) {
         // There's something new going on with this subcircuit.
         // Maybe the subcircuit is new, or perhaps it's being

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/Hdl.java
Patch:
@@ -407,7 +407,7 @@ public static void addAllWiresSorted(LineBuffer contents, Map<String, String> wi
       maxNameLength = Math.max(maxNameLength, wire.length());
     final var sortedWires = new TreeSet<String>(wires.keySet());
     for (var wire : sortedWires) 
-      contents.add("   {{assign}}{{1}}{{2}} {{=}} {{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
+      contents.add("{{assign}}{{1}}{{2}}{{=}}{{3}};", wire, " ".repeat(maxNameLength - wire.length()), wires.get(wire));
     wires.clear();
   }
 }

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRomPanel.java
Patch:
@@ -293,13 +293,13 @@ public void paintComponent(Graphics g) {
       if (data.columnHovered < inputs * 2)
         g.drawOval(
             IMAGE_BORDER + 4 + 20 * data.columnHovered,
-            IMAGE_BORDER + 64 + 40 * data.rowhovered,
+            IMAGE_BORDER + 64 + 40 * data.rowHovered,
             12,
             12);
       else
         g.drawOval(
             IMAGE_BORDER + 14 + 40 * (inputs + 1) + 40 * (data.columnHovered - 2 * inputs),
-            IMAGE_BORDER + 64 + 40 * data.rowhovered,
+            IMAGE_BORDER + 64 + 40 * data.rowHovered,
             12,
             12);
     }

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -390,7 +390,7 @@ void reset() {
         final var remove = ram.reset(this, Instance.getInstanceFor(comp));
         if (remove) componentData.put(comp, null);
       } else if (comp.getFactory() instanceof Buzzer) {
-        Buzzer.StopBuzzerSound(comp, this);
+        Buzzer.stopBuzzerSound(comp, this);
       } else if (!(comp.getFactory() instanceof SubcircuitFactory)) {
         if (componentData.get(comp) instanceof ComponentDataGuiProvider guiProvider)
           guiProvider.destroy();

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRom.java
Patch:
@@ -125,7 +125,7 @@ public static class ContentsCell extends JLabel implements BaseMouseListenerCont
     @Override
     public void mouseClicked(MouseEvent e) {
       if (data == null) return;
-      if (data.editWindow() == 1) data.ClearMatrixValues();
+      if (data.editWindow() == 1) data.clearMatrixValues();
     }
   }
 
@@ -160,8 +160,8 @@ public PlaMenu(Instance instance) {
     public void actionPerformed(ActionEvent evt) {
       PlaRomData data = PlaRom.getPlaRomData(instance, circState);
       if (evt.getSource() == edit) {
-        if (data.editWindow() == 1) data.ClearMatrixValues();
-      } else if (evt.getSource() == clear) data.ClearMatrixValues();
+        if (data.editWindow() == 1) data.clearMatrixValues();
+      } else if (evt.getSource() == clear) data.clearMatrixValues();
       // if something changed
       if (!data.getSavedData().equals(instance.getAttributeValue(CONTENTS_ATTR))) {
         instance.fireInvalidated();

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRomPanel.java
Patch:
@@ -290,15 +290,15 @@ public void paintComponent(Graphics g) {
     }
     if (hover) {
       g.setColor(Value.TRUE_COLOR);
-      if (data.columnhovered < inputs * 2)
+      if (data.columnHovered < inputs * 2)
         g.drawOval(
-            IMAGE_BORDER + 4 + 20 * data.columnhovered,
+            IMAGE_BORDER + 4 + 20 * data.columnHovered,
             IMAGE_BORDER + 64 + 40 * data.rowhovered,
             12,
             12);
       else
         g.drawOval(
-            IMAGE_BORDER + 14 + 40 * (inputs + 1) + 40 * (data.columnhovered - 2 * inputs),
+            IMAGE_BORDER + 14 + 40 * (inputs + 1) + 40 * (data.columnHovered - 2 * inputs),
             IMAGE_BORDER + 64 + 40 * data.rowhovered,
             12,
             12);

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -133,7 +133,7 @@ public List<String> getEntity(Netlist nets, AttributeSet attrs, String component
   }
 
   @Override
-  public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
+  public Map<String, String> getPortMap(Netlist nets, Object mapInfo) {
     final var map = new TreeMap<String, String>();
     if (!(mapInfo instanceof netlistComponent)) return map;
     final var ComponentInfo = (netlistComponent) mapInfo;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlGeneratorFactory.java
Patch:
@@ -12,6 +12,8 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.netlistComponent;
+import com.cburch.logisim.util.LineBuffer;
+
 import java.util.List;
 import java.util.Set;
 
@@ -26,8 +28,6 @@ public interface HdlGeneratorFactory {
   public static final String LOCAL_OUTPUT_BUBBLE_BUS_NAME = "LOGISIM_OUTPUT_BUBBLES";
   public static final String LOCAL_INOUT_BUBBLE_BUS_NAME = "LOGISIM_INOUT_BUBBLES";
   public static final String FPGA_TOP_LEVEL_NAME = "LogisimToplevelShell";
-  public static final int PORT_ALLIGNMENT_SIZE = 26;
-  public static final int SIGNAL_ALLIGNMENT_SIZE = 35;
 
   boolean generateAllHDLDescriptions(
       Set<String> handledComponents,
@@ -55,7 +55,7 @@ List<String> getComponentMap(
       Object componentInfo,
       String name);
 
-  List<String> getInlinedCode(
+  LineBuffer getInlinedCode(
       Netlist nets,
       Long componentId,
       netlistComponent componentInfo,

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHdlGeneratorFactory.java
Patch:
@@ -188,7 +188,7 @@ public ArrayList<String> getComponentDeclarationSection(Netlist theNetlist, Attr
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents = LineBuffer.getHdlBuffer();
     final var nrOfClockTrees = theNetlist.numberOfClockTrees();
     /* First we process all components */
@@ -232,7 +232,7 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet
         contents.add(LedArrayGenericHDLGeneratorFactory.getArrayConnections(array, myLedArrays.indexOf(array)));
       }
     }
-    return contents.get();
+    return contents;
   }
 
   private static ArrayList<String> getToplevelCode(MapComponent component) {

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -58,7 +58,7 @@ public boolean isHdlSupportedTarget(AttributeSet attrs) {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STR);
     final var nrOfBits = attrs.getValue(bin2bcd.ATTR_BinBits);
@@ -170,7 +170,7 @@ public ArrayList<String> getModuleFunctionality(Netlist netlist, AttributeSet at
     } else {
       Reporter.report.addFatalError("Strange, this should not happen as Verilog is not yet supported!\n");
     }
-    return contents.getWithIndent();
+    return contents;
   }
 
   private ArrayList<String> getAdd3Block(String srcName, int srcStartId, String destName, int destStartId, String processName) {

File: src/main/java/com/cburch/logisim/std/gates/EvenParityGate.java
Patch:
@@ -18,13 +18,12 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.util.LineBuffer;
 import java.awt.Graphics2D;
-import java.util.ArrayList;
 
 class EvenParityGate extends AbstractGate {
   private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
-    public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return LineBuffer.getBuffer().add(GetParity(true, nrOfInputs, bitwidth > 1)).empty().get();
+    public LineBuffer getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
+      return LineBuffer.getBuffer().add(getParity(true, nrOfInputs, bitwidth > 1)).empty();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/gates/OddParityGate.java
Patch:
@@ -18,13 +18,12 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.util.LineBuffer;
 import java.awt.Graphics2D;
-import java.util.ArrayList;
 
 class OddParityGate extends AbstractGate {
   private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
-    public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return LineBuffer.getBuffer().add(GetParity(false, nrOfInputs, bitwidth > 1)).empty().get();
+    public LineBuffer getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
+      return LineBuffer.getBuffer().add(getParity(false, nrOfInputs, bitwidth > 1)).empty();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/io/HexDigitHdlGeneratorFactory.java
Patch:
@@ -16,12 +16,11 @@
 import com.cburch.logisim.fpga.hdlgenerator.WithSelectHdlGenerator;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class HexDigitHdlGeneratorFactory extends InlinedHdlGeneratorFactory {
 
   @Override
-  public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
+  public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
     final var startId = componentInfo.getLocalBubbleOutputStartId();
     final var bubbleBusName = LOCAL_OUTPUT_BUBBLE_BUS_NAME;
     final var signalName = LineBuffer.format("{{1}}{{<}}{{2}}{{3}}{{4}}{{>}}", bubbleBusName, (startId + 6), Hdl.vectorLoopId(), startId);
@@ -56,7 +55,7 @@ public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, netlistC
     }
     if (componentInfo.getComponent().getAttributeSet().getValue(SevenSegment.ATTR_DP))
       contents.add("{{assign}} {{bubbleBusName}}{{<}}{{1}}{{>}} {{=}} {{dpName}};", (startId + 7));
-    return contents.getWithIndent();
+    return contents;
   }
 
 }

File: src/main/java/com/cburch/logisim/std/io/LedArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -211,7 +211,7 @@ public ArrayList<String> getColumnCounterCode() {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents =
         LineBuffer.getBuffer()
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
@@ -239,7 +239,6 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           """);
     } else {
       contents.add("""
-
           genvar i;
           generate
              for (i = 0; i < {{nrOfRows}}; i = i + 1)
@@ -251,6 +250,6 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           endgenerate
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/io/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -81,7 +81,7 @@ PORT MAP ( {{outs}} => {{outs}}{{id}},
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents =
         LineBuffer.getBuffer()
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
@@ -104,6 +104,6 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           endgenerate
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/io/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -206,7 +206,7 @@ public ArrayList<String> getRowCounterCode() {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents =
         LineBuffer.getBuffer()
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
@@ -234,7 +234,6 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           """);
     } else {
       contents.add("""
-          
           genvar i;
           generate
              for (i = 0; i < {{nrOfColumns}}; i = i + 1)
@@ -246,7 +245,7 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           endgenerate
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 
 }

File: src/main/java/com/cburch/logisim/std/io/RGBArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -80,7 +80,7 @@ PORT MAP ( {{addr }} => {{addr}}{{id}},
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents =
         LineBuffer.getBuffer()
             .pair("nrOfLeds", NR_OF_LEDS_STRING)
@@ -120,7 +120,6 @@ public ArrayList<String> getModuleFunctionality(Netlist netlist, AttributeSet at
           """);
     } else {
       contents.add("""
-
           genvar i;
           generate
              for (i = 0; i < {{nrOfRows}}; i = i + 1)
@@ -138,6 +137,6 @@ public ArrayList<String> getModuleFunctionality(Netlist netlist, AttributeSet at
           endgenerate
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/io/RGBArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -74,7 +74,7 @@ PORT MAP ( {{outsR}} => {{outsR}}{{id}},
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer(sharedPairs);
 
     if (Hdl.isVhdl()) {
@@ -98,6 +98,6 @@ public ArrayList<String> getModuleFunctionality(Netlist TheNetlist, AttributeSet
           endgenerate
           """);
     }
-    return contents.getWithIndent(3);
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/io/RGBArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -82,7 +82,7 @@ PORT MAP ( {{addr }} => {{addr}}{{id}}
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents =
         (new LineBuffer(sharedPairs))
             .pair("activeLow", ACTIVE_LOW_STRING)
@@ -117,7 +117,6 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet
           """);
     } else {
       contents.add("""
-          
           genvar i;
           generate
              for (i = 0; i < {{nrOfColumns}}; i = i + 1)
@@ -135,6 +134,6 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet
           endgenerate" +
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -17,7 +17,6 @@
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class RamHDLGeneratorFactory extends AbstractHdlGeneratorFactory {
 
@@ -93,7 +92,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents = LineBuffer.getHdlBuffer()
         .pair("clock", HdlPorts.getClockName(1))
         .pair("tick", HdlPorts.getTickName(1));
@@ -224,7 +223,7 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetlist, AttributeSet
                 """);
       }
     }
-    return contents.getWithIndent();
+    return contents;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -19,7 +19,6 @@
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
 
@@ -83,7 +82,7 @@ public SortedMap<String, String> getPortMap(Netlist Nets, Object MapInfo) {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents =
         LineBuffer.getBuffer()
             .pair("seed", SEED_STR)
@@ -227,6 +226,6 @@ WHEN s_mult_shift_reg(0) = '1' ELSE
           end
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -19,7 +19,6 @@
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
 
@@ -66,7 +65,7 @@ public SortedMap<String, String> getPortMap(Netlist Nets, Object MapInfo) {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer()
             .pair("invertClock", INVERT_CLOCK_STRING)
             .pair("clock", HdlPorts.getClockName(1))
@@ -124,6 +123,6 @@ public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs
             """);
       }
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -293,7 +293,7 @@ public ArrayList<String> getEntity(Netlist nets, AttributeSet attrs, String comp
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents = LineBuffer.getHdlBuffer()
         .pair("clock", HdlPorts.getClockName(1))
         .pair("tick", HdlPorts.getTickName(1))
@@ -338,6 +338,6 @@ PORT MAP ( Reset       => Reset,
           endgenerate
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -15,7 +15,6 @@
 import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class DecoderHDLGeneratorFactory extends AbstractHdlGeneratorFactory {
 
@@ -37,7 +36,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer();
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     final var numOutputs = (1 << nrOfSelectBits);
@@ -56,6 +55,6 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet
         contents.add("assign DecoderOut_{{i}}{{space}} = (Enable&(sel == {{bin}})) ? 1'b1 : 1'b0;");
       }
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHDLGeneratorFactory.java
Patch:
@@ -16,7 +16,6 @@
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class DemultiplexerHDLGeneratorFactory extends AbstractHdlGeneratorFactory {
 
@@ -45,7 +44,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer();
     var space = "  ";
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
@@ -64,6 +63,6 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet
         contents.add("assign DemuxOut_{{1}}{{2}} = (Enable&(sel == {{3}} )) ? DemuxIn : 0;", i, space, binValue);
       }
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -16,7 +16,6 @@
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class MultiplexerHDLGeneratorFactory extends AbstractHdlGeneratorFactory {
 
@@ -46,7 +45,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer();
     int nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     if (Hdl.isVhdl()) {
@@ -94,6 +93,6 @@ else case (Sel)
           .add("   endcase")
           .add("end");
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -17,7 +17,6 @@
 import com.cburch.logisim.fpga.hdlgenerator.HdlParameters;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
 
@@ -72,7 +71,7 @@ public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
   }
 
   @Override
-  public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs) {
+  public LineBuffer getModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents = LineBuffer.getBuffer()
             .pair("selBits", NR_OF_SELECT_BITS_STRING)
             .pair("inBits", NR_OF_INPUT_BITS_STRING);
@@ -133,6 +132,6 @@ public ArrayList<String> getModuleFunctionality(Netlist nets, AttributeSet attrs
           assign s_address[0] = (v_select_4_vector[3:2] == 0) ? v_select_4_vector[1] : v_select_4_vector[3];
           """);
     }
-    return contents.getWithIndent();
+    return contents;
   }
 }

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -153,6 +153,7 @@ public LineBuffer addHdlPairs() {
         .pair("or", Hdl.orOperator())
         .pair("and", Hdl.andOperator())
         .pair("not", Hdl.notOperator())
+        .pair("xor", Hdl.xorOperator())
         .pair("bracketOpen", Hdl.bracketOpen())
         .pair("bracketClose", Hdl.bracketClose())
         .pair("<", Hdl.bracketOpen())

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableFileFilter.java
Patch:
@@ -28,7 +28,7 @@ public boolean accept(File f) {
     if (!f.isFile()) return true;
     final var name = f.getName();
     final var i = name.lastIndexOf('.');
-    return (i > 0 && name.substring(i).toLowerCase().equals(extention));
+    return (i > 0 && name.substring(i).equalsIgnoreCase(extention));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/analyze/model/VariableListEvent.java
Patch:
@@ -9,6 +9,9 @@
 
 package com.cburch.logisim.analyze.model;
 
+// NOTE: silly members' names are mostly to avoid refactoring of the whole codebase due to record's
+// getters not using Bean naming convention (so i.e. `foo()` instead of `getFoo()`. We may change
+// that in future, but for now it looks stupid in this file only.
 public record VariableListEvent(VariableList getSource, int getType, Var getVariable, Integer getIndex, Integer getBitIndex) {
 
   public static final int ALL_REPLACED = 0;

File: src/main/java/com/cburch/logisim/fpga/file/ImageXmlFactory.java
Patch:
@@ -31,7 +31,7 @@ public class ImageXmlFactory {
   static final Logger logger = LoggerFactory.getLogger(ImageXmlFactory.class);
 
   private String[] CodeTable;
-  private StringBuffer AsciiStream;
+  private StringBuilder AsciiStream;
   private final String[] InitialCodeTable = {
     "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s",
     "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L",
@@ -135,7 +135,7 @@ public void CreateStream(Image BoardPicture) {
     }
     byte[] data = blaat.toByteArray();
     CodeTable = CreateCodeTable(data);
-    AsciiStream = new StringBuffer();
+    AsciiStream = new StringBuilder();
     AsciiStream.append(V2_Identifier);
     for (byte datum : data) {
       String code = CodeTable[datum + 128];
@@ -249,7 +249,7 @@ public void SetCodeTable(String[] Table) {
   }
 
   public void SetCompressedString(String stream) {
-    AsciiStream = new StringBuffer();
+    AsciiStream = new StringBuilder();
     AsciiStream.append(stream);
   }
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlTypes.java
Patch:
@@ -43,7 +43,7 @@ public HdlEnum add(String entry) {
 
     @Override
     public String getTypeDefinition() {
-      final var contents = new StringBuffer();
+      final var contents = new StringBuilder();
       if (Hdl.isVhdl()) contents.append(String.format("TYPE %s IS ( ", myTypeName));
       else contents.append("typedef enum { ");
       var first = true;
@@ -85,7 +85,7 @@ public HdlArray(String name, int nrOfBits, int nrOfEntries) {
 
     @Override
     public String getTypeDefinition() {
-      final var contents = new StringBuffer();
+      final var contents = new StringBuilder();
       if (Hdl.isVhdl()) {
         contents.append(String.format("Type %s IS ARRAY( %d DOWNTO 0 ) OF std_logic_vector( ", myTypeName, myNrOfEntries))
             .append(myGenericBitWidth == null ? Integer.toString(myBitWidth - 1) : String.format("%s - 1", myGenericBitWidth))

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHdlGeneratorFactory.java
Patch:
@@ -236,7 +236,7 @@ public LineBuffer getModuleFunctionality(Netlist theNetlist, AttributeSet attrs)
   }
 
   private static ArrayList<String> getToplevelCode(MapComponent component) {
-    final var temp = new StringBuffer();
+    final var temp = new StringBuilder();
     final var contents = new ArrayList<String>();
     if (component.getNrOfPins() <= 0) {
       // FIXME: hardcoded string
@@ -289,7 +289,7 @@ private static ArrayList<String> getToplevelCode(MapComponent component) {
     return contents;
   }
 
-  private static void allign(StringBuffer s) {
-    while (s.length() < 40) s.append(" ");
+  private static void allign(StringBuilder str) {
+    while (str.length() < 40) str.append(" ");
   }
 }

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -589,11 +589,11 @@ private static RC handleArgTemplate(Startup startup, Option opt) {
       return RC.OK;
     }
     // okay, not a file, let's look for empty and plain
-    if (option.toLowerCase().equals("empty")) {
+    if (option.equalsIgnoreCase("empty")) {
       startup.templEmpty = true;
       return RC.OK;
     }
-    if (option.toLowerCase().equals("plain")) {
+    if (option.equalsIgnoreCase("plain")) {
       startup.templPlain = true;
       return RC.OK;
     }

File: src/main/java/com/cburch/logisim/std/io/TtyState.java
Patch:
@@ -18,15 +18,15 @@ class TtyState implements InstanceData, Cloneable {
   private Value lastClock;
   private String[] rowData;
   private int colCount;
-  private final StringBuffer lastRow;
+  private final StringBuilder lastRow;
   private int row;
   private boolean sendStdout;
 
   public TtyState(int rows, int cols) {
     lastClock = Value.UNKNOWN;
     rowData = new String[rows - 1];
     colCount = cols;
-    lastRow = new StringBuffer(cols);
+    lastRow = new StringBuilder(cols);
     sendStdout = false;
     clear();
   }

File: src/main/java/com/cburch/logisim/util/Softwares.java
Patch:
@@ -26,7 +26,7 @@
 
 public final class Softwares {
 
-  private static boolean createWorkLibrary(File tmpDir, String questaPath, StringBuffer result)
+  private static boolean createWorkLibrary(File tmpDir, String questaPath, StringBuilder result)
       throws IOException, InterruptedException {
     BufferedReader reader = null;
 
@@ -142,7 +142,7 @@ private static boolean validatePath(String path, String software) {
     return true;
   }
 
-  public static int validateVhdl(String vhdl, StringBuffer title, StringBuffer result) {
+  public static int validateVhdl(String vhdl, StringBuilder title, StringBuilder result) {
     if (!AppPreferences.QUESTA_VALIDATION.get()) return SUCCESS;
 
     final var questaPath = getQuestaPath();

File: src/test/java/com/cburch/logisim/TestBase.java
Patch:
@@ -25,12 +25,12 @@ public class TestBase {
    */
   protected String getRandomString(int length, boolean includeDigits) {
     // chose a Character random from this String
-    final var allowedCharsBuilder = new StringBuffer("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
+    final var allowedCharsBuilder = new StringBuilder("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
     allowedCharsBuilder.append(allowedCharsBuilder.toString().toLowerCase());
     if (includeDigits) allowedCharsBuilder.append("0123456789");
     final var allowedChars = allowedCharsBuilder.toString();
 
-    // create StringBuffer size of AlphaNumericString
+    // create StringBuilder size of AlphaNumericString
     final var sb = new StringBuilder(length);
 
     for (var i = 0; i < length; i++) {

File: src/main/java/com/cburch/logisim/circuit/CircuitMapInfo.java
Patch:
@@ -12,6 +12,7 @@
 import com.cburch.logisim.fpga.data.BoardRectangle;
 import com.cburch.logisim.fpga.data.MapComponent;
 import java.util.ArrayList;
+import java.util.List;
 
 public class CircuitMapInfo {
 
@@ -107,7 +108,7 @@ public MapComponent getMap() {
     return myMap;
   }
 
-  public ArrayList<CircuitMapInfo> getPinMaps() {
+  public List<CircuitMapInfo> getPinMaps() {
     return pinmaps;
   }
 }

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -17,7 +17,6 @@
 import java.util.Collections;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.Map;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -711,7 +711,7 @@ else if (maps.get(i) != null) {
   }
 
   public static void getComplexMap(Element Map, CircuitMapInfo cmap) throws DOMException {
-    ArrayList<CircuitMapInfo> pinmaps = cmap.getPinMaps();
+    List<CircuitMapInfo> pinmaps = cmap.getPinMaps();
     if (pinmaps != null) {
       var s = new StringBuilder();
       var first = true;

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeModel.java
Patch:
@@ -74,7 +74,7 @@ public Object getChild(Object parent, int index) {
   public int getChildCount(Object parent) {
     return (parent instanceof TreeNode node)
            ? node.getChildCount()
-           : null;
+           : 0;
   }
 
   public CircuitState getCurrentView() {

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeModel.java
Patch:
@@ -74,7 +74,7 @@ public Object getChild(Object parent, int index) {
   public int getChildCount(Object parent) {
     return (parent instanceof TreeNode node)
            ? node.getChildCount()
-           : null;
+           : 0;
   }
 
   public CircuitState getCurrentView() {

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeModel.java
Patch:
@@ -74,7 +74,7 @@ public Object getChild(Object parent, int index) {
   public int getChildCount(Object parent) {
     return (parent instanceof TreeNode node)
            ? node.getChildCount()
-           : null;
+           : 0;
   }
 
   public CircuitState getCurrentView() {

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -171,8 +171,7 @@ public boolean overlaps(CanvasObject other) {
     final var rand = new Random();
     if (c.getWidth() == 0 || c.getHeight() == 0) {
       return false;
-    } else if (other instanceof AbstractCanvasObject) {
-      AbstractCanvasObject that = (AbstractCanvasObject) other;
+    } else if (other instanceof AbstractCanvasObject that) {
       for (var i = 0; i < OVERLAP_TRIES; i++) {
         if (i % 2 == 0) {
           final var loc = this.getRandomPoint(c, rand);

File: src/main/java/com/cburch/draw/shapes/FillableCanvasObject.java
Patch:
@@ -54,9 +54,7 @@ public <V> V getValue(Attribute<V> attr) {
 
   @Override
   public boolean matches(CanvasObject other) {
-    if (!(other instanceof FillableCanvasObject)) return false;
-
-    final var that = (FillableCanvasObject) other;
+    if (!(other instanceof FillableCanvasObject that)) return false;
     var ret = this.paintType == that.paintType;
     if (ret && this.paintType != DrawAttr.PAINT_FILL) {
       ret =

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -304,8 +304,7 @@ public boolean isClosed() {
 
   @Override
   public boolean matches(CanvasObject other) {
-    if (other instanceof Poly) {
-      final var that = (Poly) other;
+    if (other instanceof Poly that) {
       final var a = this.handles;
       final var b = that.handles;
       if (this.closed != that.closed || a.length != b.length) {

File: src/main/java/com/cburch/draw/shapes/Rectangular.java
Patch:
@@ -172,8 +172,7 @@ boolean isInRect(int qx, int qy, int x0, int y0, int w, int h) {
 
   @Override
   public boolean matches(CanvasObject other) {
-    if (other instanceof Rectangular) {
-      final var that = (Rectangular) other;
+    if (other instanceof Rectangular that) {
       return this.bounds.equals(that.bounds) && super.matches(that);
     }
 

File: src/main/java/com/cburch/draw/tools/SelectTool.java
Patch:
@@ -116,10 +116,10 @@ public void draw(Canvas canvas, Graphics gfx) {
       // unscale the coordinate system so that the stroke width isn't scaled
       var zoom = 1.0;
       final var gfxCopy = gfx.create();
-      if (gfxCopy instanceof Graphics2D) {
+      if (gfxCopy instanceof Graphics2D g2d) {
         zoom = canvas.getZoomFactor();
         if (zoom != 1.0) {
-          ((Graphics2D) gfxCopy).scale(1.0 / zoom, 1.0 / zoom);
+          g2d.scale(1.0 / zoom, 1.0 / zoom);
         }
       }
       GraphicsUtil.switchToWidth(gfxCopy, 1);

File: src/main/java/com/cburch/draw/util/EditableLabel.java
Patch:
@@ -129,8 +129,7 @@ public boolean contains(int qx, int qy) {
 
   @Override
   public boolean equals(Object other) {
-    if (other instanceof EditableLabel) {
-      EditableLabel that = (EditableLabel) other;
+    if (other instanceof EditableLabel that) {
       return this.x == that.x
           && this.y == that.y
           && this.text.equals(that.text)

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionTab.java
Patch:
@@ -101,9 +101,7 @@ public void fireTableChanged(TableModelEvent event) {
     @Override
     public void setValueAt(Object obj, int row, int column) {
       final var ne = listCopy[row];
-      if (!(obj instanceof NamedExpression))
-        return;
-      final var e = (NamedExpression) obj;
+      if (!(obj instanceof NamedExpression e)) return;
       if (ne != e && !ne.name.equals(e.name)) return;
       listCopy[row] = e;
       if (e.expr != null) model.getOutputExpressions().setExpression(e.name, e.expr, e.exprString);

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -479,8 +479,7 @@ public void paintComponent(Graphics gfx) {
   }
 
   public void paintKmap(Graphics gfx, boolean selectionBlock) {
-    if (!(gfx instanceof Graphics2D)) return;
-    Graphics2D g2 = (Graphics2D) gfx;
+    if (!(gfx instanceof Graphics2D g2)) return;
     if (AppPreferences.AntiAliassing.getBoolean()) {
       g2.setRenderingHint(
           RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -281,9 +281,9 @@ public int compareTo(Implicant o) {
 
   @Override
   public boolean equals(Object other) {
-    if (!(other instanceof Implicant)) return false;
-    final var o = (Implicant) other;
-    return this.unknowns == o.unknowns && this.values == o.values;
+    return (other instanceof Implicant o)
+           ? this.unknowns == o.unknowns && this.values == o.values
+           : false;
   }
 
   public int getRow() {

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -47,9 +47,9 @@ public LocationBit(Location l, int b) {
 
     @Override
     public boolean equals(Object other) {
-      if (!(other instanceof LocationBit)) return false;
-      final var that = (LocationBit) other;
-      return (that.loc.equals(this.loc) && that.bit == this.bit);
+      return (other instanceof LocationBit that)
+             ? (that.loc.equals(this.loc) && that.bit == this.bit)
+             : false;
     }
 
     @Override

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -30,9 +30,9 @@ private Entry(CircuitState state, T item) {
 
     @Override
     public boolean equals(Object other) {
-      if (!(other instanceof Entry)) return false;
-      final var o = (Entry) other;
-      return state.equals(o.state) && item.equals(o.item);
+      return (other instanceof Entry o)
+             ? state.equals(o.state) && item.equals(o.item)
+             : false;
     }
 
     @Override

File: src/main/java/com/cburch/logisim/circuit/Propagator.java
Patch:
@@ -34,9 +34,9 @@ public ComponentPoint(Component cause, Location loc) {
 
     @Override
     public boolean equals(Object other) {
-      if (!(other instanceof ComponentPoint)) return false;
-      final var o = (ComponentPoint) other;
-      return this.cause.equals(o.cause) && this.loc.equals(o.loc);
+      return (other instanceof ComponentPoint o)
+             ? this.cause.equals(o.cause) && this.loc.equals(o.loc)
+             : false;
     }
 
     @Override

File: src/main/java/com/cburch/logisim/circuit/SplitterAttributes.java
Patch:
@@ -355,8 +355,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
       if (appear.equals(appearance)) return;
       appear = appearance;
       parameters = null;
-    } else if (attr instanceof BitOutAttribute) {
-      final var bitOutAttr = (BitOutAttribute) attr;
+    } else if (attr instanceof BitOutAttribute bitOutAttr) {
       int val = (value instanceof Integer) ? (Integer) value : ((BitOutOption) value).value + 1;
       if (val >= 0 && val <= fanout) {
         if (bitEnd[bitOutAttr.which] == (byte) val) return;

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -72,8 +72,8 @@ public Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver) {
       } else {
         return SplitterAttributes.APPEAR_LEFT;
       }
-    } else if (attr instanceof SplitterAttributes.BitOutAttribute) {
-      return ((SplitterAttributes.BitOutAttribute) attr).getDefault();
+    } else if (attr instanceof SplitterAttributes.BitOutAttribute bitOutAttr) {
+      return bitOutAttr.getDefault();
     } else {
       return super.getDefaultAttributeValue(attr, ver);
     }

File: src/main/java/com/cburch/logisim/circuit/WidthIncompatibilityData.java
Patch:
@@ -32,10 +32,9 @@ public void add(Location p, BitWidth w) {
 
   @Override
   public boolean equals(Object other) {
-    if (!(other instanceof WidthIncompatibilityData)) return false;
+    if (!(other instanceof WidthIncompatibilityData o)) return false;
     if (this == other) return true;
 
-    final var o = (WidthIncompatibilityData) other;
     if (this.size() != o.size()) return false;
     for (var i = 0; i < this.size(); i++) {
       final var p = o.getPoint(i);

File: src/main/java/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -158,8 +158,7 @@ public boolean endsAt(Location pt) {
 
   @Override
   public boolean equals(Object other) {
-    if (!(other instanceof Wire)) return false;
-    final var w = (Wire) other;
+    if (!(other instanceof Wire w)) return false;
     return w.e0.equals(this.e0) && w.e1.equals(this.e1);
   }
 

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -79,9 +79,7 @@ private void doMerges(CircuitMutator mutator) {
         Iterator<?> atit = at.iterator();
         Object at0 = atit.next();
         Object at1 = atit.next();
-        if (at0 instanceof Wire && at1 instanceof Wire) {
-          final var w0 = (Wire) at0;
-          final var w1 = (Wire) at1;
+        if (at0 instanceof Wire w0 && at1 instanceof Wire w1) {
           if (w0.isParallel(w1)) {
             sets.merge(w0, w1);
           }

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -200,9 +200,8 @@ public SortedMap<Location, Instance> getPortOffsets(Direction facing) {
       if (shape instanceof AppearancePort appPort) {
         ports.add(appPort);
       } else if (shape instanceof AppearanceAnchor appAnchor) {
-        final var o = appAnchor;
-        anchor = o.getLocation();
-        defaultFacing = o.getFacingDirection();
+        anchor = appAnchor.getLocation();
+        defaultFacing = appAnchor.getFacingDirection();
       }
     }
 

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -126,8 +126,7 @@ private void performUpdate(
     AppearanceAnchor anchor = null;
     for (final var obj : appearance.getObjectsFromBottom()) {
       if (obj instanceof AppearancePort appPort) {
-        final var port = appPort;
-        oldObjects.put(port.getPin(), port);
+        oldObjects.put(appPort.getPin(), appPort);
       } else if (obj instanceof AppearanceAnchor appAnchor) {
         anchor = appAnchor;
       }

File: src/main/java/com/cburch/logisim/comp/EndData.java
Patch:
@@ -35,9 +35,8 @@ public EndData(Location loc, BitWidth width, int type, boolean exclusive) {
 
   @Override
   public boolean equals(Object other) {
-    if (!(other instanceof EndData)) return false;
+    if (!(other instanceof EndData o)) return false;
     if (other == this) return true;
-    final var o = (EndData) other;
     return o.loc.equals(this.loc)
         && o.width.equals(this.width)
         && o.i_o == this.i_o

File: src/main/java/com/cburch/logisim/data/Bounds.java
Patch:
@@ -168,9 +168,9 @@ public boolean contains(Location p, int allowedError) {
 
   @Override
   public boolean equals(Object otherObj) {
-    if (!(otherObj instanceof Bounds)) return false;
-    final var other = (Bounds) otherObj;
-    return x == other.x && y == other.y && wid == other.wid && ht == other.ht;
+    return (otherObj instanceof Bounds other)
+           ? x == other.x && y == other.y && wid == other.wid && ht == other.ht
+           : false;
   }
 
   public Bounds expand(int d) { // d pixels in each direction

File: src/main/java/com/cburch/logisim/data/Location.java
Patch:
@@ -74,9 +74,9 @@ public int compareTo(Location other) {
 
   @Override
   public boolean equals(Object otherObj) {
-    if (!(otherObj instanceof Location)) return false;
-    final var other = (Location) otherObj;
-    return this.x == other.x && this.y == other.y;
+    return (otherObj instanceof Location other)
+           ? this.x == other.x && this.y == other.y
+           : false;
   }
 
   public int getX() {

File: src/main/java/com/cburch/logisim/file/FileStatistics.java
Patch:
@@ -135,8 +135,8 @@ private static Count getTotal(List<Count> counts, Set<Circuit> exclude) {
     for (final var count : counts) {
       final var factory = count.getFactory();
       Circuit factoryCirc = null;
-      if (factory instanceof SubcircuitFactory) {
-        factoryCirc = ((SubcircuitFactory) factory).getSubcircuit();
+      if (factory instanceof SubcircuitFactory sub) {
+        factoryCirc = sub.getSubcircuit();
       }
       if (exclude == null || !exclude.contains(factoryCirc)) {
         ret.simpleCount += count.simpleCount;

File: src/main/java/com/cburch/logisim/file/MouseMappings.java
Patch:
@@ -122,7 +122,7 @@ void replaceAll(Map<Tool, Tool> toolMap) {
     for (final var entry : map.entrySet()) {
       final var key = entry.getKey();
       final var tool = entry.getValue();
-      final var searchFor = (tool instanceof AddTool) ? ((AddTool) tool).getFactory() : tool;
+      final var searchFor = (tool instanceof AddTool addTool) ? addTool.getFactory() : tool;
       changed |= replaceInMap(toolMap, tool, searchFor, key);
     }
     if (changed) fireMouseMappingsChanged();

File: src/main/java/com/cburch/logisim/file/ToolbarData.java
Patch:
@@ -138,7 +138,7 @@ public Object move(int from, int to) {
 
   public Object remove(int pos) {
     Object ret = contents.remove(pos);
-    if (ret instanceof Tool) removeAttributeListeners((Tool) ret);
+    if (ret instanceof Tool tool) removeAttributeListeners(tool);
     fireToolbarChanged();
     return ret;
   }

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -252,9 +252,9 @@ Element fromCircuit(Circuit circuit) {
     addAttributeSetContent(ret, circuit.getStaticAttributes(), null);
     if (!circuit.getAppearance().isDefaultAppearance()) {
       final var appear = doc.createElement("appear");
-      for (Object o : circuit.getAppearance().getObjectsFromBottom()) {
-        if (o instanceof AbstractCanvasObject) {
-          final var elt = ((AbstractCanvasObject) o).toSvgElement(doc);
+      for (Object obj : circuit.getAppearance().getObjectsFromBottom()) {
+        if (obj instanceof AbstractCanvasObject canvasObject) {
+          final var elt = canvasObject.toSvgElement(doc);
           if (elt != null) {
             appear.appendChild(elt);
           }

File: src/main/java/com/cburch/logisim/fpga/data/FpgaCommanderListModel.java
Patch:
@@ -45,8 +45,7 @@ public void clear() {
 
   public void add(Object toAdd) {
     count++;
-    if (toAdd instanceof SimpleDRCContainer) {
-      SimpleDRCContainer add = (SimpleDRCContainer) toAdd;
+    if (toAdd instanceof SimpleDRCContainer add) {
       if (add.getSupressCount()) count--;
       else add.setListNumber(count);
     }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Netlist.java
Patch:
@@ -256,8 +256,7 @@ public int designRuleCheckResult(boolean isTopLevel, ArrayList<String> sheetName
     // we have to go down the tree to build first all subcircuits
     final var handledCircuits = new ArrayList<Circuit>();
     for (final var comp : myCircuit.getNonWires()) {
-      if (comp.getFactory() instanceof SubcircuitFactory) {
-        final var factory = (SubcircuitFactory) comp.getFactory();
+      if (comp.getFactory() instanceof SubcircuitFactory factory) {
         final var subCircuit = factory.getSubcircuit();
         if (handledCircuits.contains(subCircuit)) continue;
         handledCircuits.add(subCircuit);

File: src/main/java/com/cburch/logisim/fpga/gui/ListModelCellRenderer.java
Patch:
@@ -45,8 +45,8 @@ public Component getListCellRendererComponent(
     setBackground(list.getBackground());
     setForeground(list.getForeground());
     StringBuilder Line = new StringBuilder();
-    if (value instanceof SimpleDRCContainer) {
-      msg = (SimpleDRCContainer) value;
+    if (value instanceof SimpleDRCContainer cont) {
+      msg = cont;
     }
     setIcon((msg != null && msg.isDrcInfoPresent()) ? DRCError : NoDRC);
     if (msg != null) {

File: src/main/java/com/cburch/logisim/fpga/gui/PartialMapDialog.java
Patch:
@@ -416,8 +416,8 @@ public void actionPerformed(ActionEvent e) {
       }
       return;
     }
-    if (e.getSource() instanceof JComboBox) {
-      update((JComboBox<String>) e.getSource());
+    if (e.getSource() instanceof JComboBox box) {
+      update(box);
       return;
     }
     if (e.getActionCommand().equals("Ok")) {

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -42,7 +42,7 @@ public void addErrorIncrement(String message) {
 
   public void addError(Object message) {
     if (myCommander == null) {
-      if (message instanceof String) logger.error((String) message);
+      if (message instanceof String msg) logger.error(msg);
     } else {
       if (message instanceof String)
         myCommander.addErrors(new SimpleDRCContainer(message, SimpleDRCContainer.LEVEL_NORMAL));

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -143,8 +143,7 @@ public void delete() {
         remove.add(obj);
       } else {
         select.add(obj);
-        if (obj instanceof AppearanceAnchor) {
-          final var anchor = (AppearanceAnchor) obj;
+        if (obj instanceof AppearanceAnchor anchor) {
           anchorLocation = anchor.getLocation();
           anchorFacing = anchor.getFacingDirection();
         }

File: src/main/java/com/cburch/logisim/gui/appear/CanvasActionAdapter.java
Patch:
@@ -30,8 +30,8 @@ public CanvasActionAdapter(Circuit circuit, Action action) {
   }
 
   private boolean affectsPorts() {
-    if (canvasAction instanceof ModelAction) {
-      for (final var obj : ((ModelAction) canvasAction).getObjects()) {
+    if (canvasAction instanceof ModelAction action) {
+      for (final var obj : action.getObjects()) {
         if (obj instanceof AppearanceElement) return true;
       }
     }

File: src/main/java/com/cburch/logisim/gui/appear/LayoutPopupManager.java
Patch:
@@ -50,7 +50,7 @@ public LayoutPopupManager(CanvasPane canvasPane, AppearanceCanvas canvas) {
   private Set<AppearancePort> getSelectedPorts() {
     final var ports = new HashSet<AppearancePort>();
     for (final var o : canvas.getSelection().getSelected()) {
-      if (o instanceof AppearancePort) ports.add((AppearancePort) o);
+      if (o instanceof AppearancePort appPort) ports.add(appPort);
     }
     return ports;
   }
@@ -150,7 +150,7 @@ private void showPopup(Set<CanvasObject> shapes) {
     final var pins = new ArrayList<Instance>();
     final var elts = new ArrayList<Instance>();
     for (final var shape : shapes) {
-      if (shape instanceof AppearancePort) pins.add(((AppearancePort) shape).getPin());
+      if (shape instanceof AppearancePort appPort) pins.add(appPort.getPin());
       else elts.add(((DynamicElement) shape).getFirstInstance().getInstance());
     }
     hideCurrentPopup();

File: src/main/java/com/cburch/logisim/gui/appear/SelectionAction.java
Patch:
@@ -79,7 +79,7 @@ public void doIt(Project proj) {
 
   private AppearanceAnchor findAnchor(CanvasModel canvasModel) {
     for (final Object obj : canvasModel.getObjectsFromTop()) {
-      if (obj instanceof AppearanceAnchor) return (AppearanceAnchor) obj;
+      if (obj instanceof AppearanceAnchor anchor) return anchor;
     }
     return null;
   }

File: src/main/java/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -241,8 +241,7 @@ public boolean isValueEditable() {
 
     @Override
     public boolean multiEditCompatible(AttrTableModelRow other) {
-      if (!(other instanceof AttrRow)) return false;
-      final var o = (AttrRow) other;
+      if (!(other instanceof AttrRow o)) return false;
       if (!(((Object) attr) instanceof SplitterAttributes.BitOutAttribute)) return false;
       if (!(((Object) o.attr) instanceof SplitterAttributes.BitOutAttribute)) return false;
       final var a = (SplitterAttributes.BitOutAttribute) (Object) attr;

File: src/main/java/com/cburch/logisim/gui/generic/OptionPane.java
Patch:
@@ -43,7 +43,7 @@ public class OptionPane {
   public static void showMessageDialog(Component parentComponent, Object message) {
     if (Main.hasGui()) {
       JOptionPane.showMessageDialog(parentComponent, message);
-    } else if (message instanceof String) logger.info((String) message);
+    } else if (message instanceof String msg) logger.info(msg);
   }
 
   public static void showMessageDialog(

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -184,10 +184,10 @@ void decommission() {
     if (file != null) {
       file.removeLibraryListener(this);
     }
-    for (Enumeration<?> en = children(); en.hasMoreElements(); ) {
+    for (final var en = children(); en.hasMoreElements(); ) {
       final var n = en.nextElement();
-      if (n instanceof ProjectExplorerModel.Node<?>) {
-        ((ProjectExplorerModel.Node<?>) n).decommission();
+      if (n instanceof ProjectExplorerModel.Node<?> node) {
+        node.decommission();
       }
     }
   }

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -62,9 +62,9 @@ private void fillArray() {
     for (final var circ : proj.getLogisimFile().getCircuits()) {
       getAllRegisters(circ);
     }
-    if (proj.getLogisimFile().getLibrary("prodis_v1.3") instanceof LoadedLibrary) {
-      if (((LoadedLibrary) proj.getLogisimFile().getLibrary("prodis_v1.3")).getBase() instanceof LogisimFile) {
-        for (final var circ : ((LogisimFile) ((LoadedLibrary) proj.getLogisimFile().getLibrary("prodis_v1.3")).getBase()).getCircuits()) {
+    if (proj.getLogisimFile().getLibrary("prodis_v1.3") instanceof LoadedLibrary loadedLib) {
+      if (loadedLib.getBase() instanceof LogisimFile lsFile) {
+        for (final var circ : lsFile.getCircuits()) {
           getAllRegisters(circ);
         }
       }

File: src/main/java/com/cburch/logisim/gui/log/SelectionList.java
Patch:
@@ -97,8 +97,7 @@ private static class SignalInfoRenderer extends DefaultTableCellRenderer {
     @Override
     public java.awt.Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
       final java.awt.Component ret = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
-      if (ret instanceof JLabel && value instanceof SignalInfo) {
-        final var label = (JLabel) ret;
+      if ((ret instanceof JLabel label) && value instanceof SignalInfo) {
         final var item = (SignalInfo) value;
         label.setIcon(item.icon);
         label.setText(item + " [" + item.getRadix().toDisplayString() + "]");

File: src/main/java/com/cburch/logisim/gui/log/SignalInfo.java
Patch:
@@ -340,8 +340,7 @@ public static void paintIcon(Component comp, Object opt, java.awt.Component c, G
   @Override
   public boolean equals(Object other) {
     if (other == this) return true;
-    if (!(other instanceof SignalInfo)) return false;
-    final var o = (SignalInfo) other;
+    if (!(other instanceof SignalInfo o)) return false;
     return Arrays.equals(path, o.path) && Objects.equals(option, o.option);
   }
 

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -148,8 +148,7 @@ public void setValueRequested(Attribute<Object> attr, Object value) throws AttrT
       comps.addAll(selection.getComponents());
       for (Component comp : comps) {
         if (!(comp instanceof Wire)) {
-          if (comp.getFactory() instanceof SubcircuitFactory) {
-            SubcircuitFactory fac = (SubcircuitFactory) comp.getFactory();
+          if (comp.getFactory() instanceof SubcircuitFactory fac) {
             if (attr.equals(CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE)
                 || attr.equals(CircuitAttributes.NAME_ATTR)) {
               try {

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -447,8 +447,7 @@ public String getToolTipText(MouseEvent event) {
       ComponentUserEvent e = null;
       for (Component comp : getCircuit().getAllContaining(loc)) {
         Object makerObj = comp.getFeature(ToolTipMaker.class);
-        if (makerObj instanceof ToolTipMaker) {
-          ToolTipMaker maker = (ToolTipMaker) makerObj;
+        if (makerObj instanceof ToolTipMaker maker) {
           if (e == null) {
             e = new ComponentUserEvent(this, loc.getX(), loc.getY());
           }

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -202,8 +202,8 @@ void paintContents(Graphics g, Project proj) {
     g.setColor(Color.black);
 
     var gfxScaled = g.create();
-    if (zoomFactor != 1.0 && gfxScaled instanceof Graphics2D) {
-      ((Graphics2D) gfxScaled).scale(zoomFactor, zoomFactor);
+    if (zoomFactor != 1.0 && gfxScaled instanceof Graphics2D g2d) {
+      g2d.scale(zoomFactor, zoomFactor);
     }
     drawWithUserState(g, gfxScaled, proj);
     drawWidthIncompatibilityData(g, gfxScaled, proj);

File: src/main/java/com/cburch/logisim/gui/main/CircuitJList.java
Patch:
@@ -46,7 +46,7 @@ public List<Circuit> getSelectedCircuits() {
     if (selected.length > 0) {
       ArrayList<Circuit> ret = new ArrayList<>(selected.length);
       for (Object sel : selected) {
-        if (sel instanceof Circuit) ret.add((Circuit) sel);
+        if (sel instanceof Circuit circ) ret.add(circ);
       }
       return ret;
     } else {

File: src/main/java/com/cburch/logisim/gui/main/ExportImage.java
Patch:
@@ -221,8 +221,8 @@ private void export(Circuit circuit) {
         g.fillRect(0, 0, width, height);
         g.setColor(Color.black);
       }
-      if (g instanceof Graphics2D) {
-        ((Graphics2D) g).scale(scale, scale);
+      if (g instanceof Graphics2D g2d) {
+        g2d.scale(scale, scale);
         g.translate(-bds.getX(), -bds.getY());
       } else {
         OptionPane.showMessageDialog(frame, S.get("couldNotCreateImage"));

File: src/main/java/com/cburch/logisim/gui/main/LogisimToolbarItem.java
Patch:
@@ -85,9 +85,8 @@ public boolean isSelectable() {
 
   @Override
   public void paintIcon(Component destination, Graphics gfx) {
-    if (!isSelectable() && gfx instanceof Graphics2D) {
-      Composite c = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f);
-      ((Graphics2D) gfx).setComposite(c);
+    if (!isSelectable() && gfx instanceof Graphics2D g2d) {
+      g2d.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.3f));
     }
 
     if (icon == null) {

File: src/main/java/com/cburch/logisim/gui/main/SimulationExplorer.java
Patch:
@@ -60,9 +60,7 @@ public void mouseClicked(MouseEvent e) {
       TreePath path = tree.getPathForLocation(e.getX(), e.getY());
       if (path != null) {
         Object last = path.getLastPathComponent();
-        if (last instanceof SimulationTreeCircuitNode) {
-          SimulationTreeCircuitNode node;
-          node = (SimulationTreeCircuitNode) last;
+        if (last instanceof SimulationTreeCircuitNode node) {
           project.setCircuitState(node.getCircuitState());
         }
       }

File: src/main/java/com/cburch/logisim/gui/main/SimulationToolbarModel.java
Patch:
@@ -86,8 +86,8 @@ public boolean isSelected(ToolbarItem item) {
 
   @Override
   public void itemSelected(ToolbarItem item) {
-    if (item instanceof LogisimToolbarItem) {
-      ((LogisimToolbarItem) item).doAction();
+    if (item instanceof LogisimToolbarItem toolbarItem) {
+      toolbarItem.doAction();
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/main/ToolboxToolbarModel.java
Patch:
@@ -89,9 +89,7 @@ public boolean isSelected(ToolbarItem item) {
 
   @Override
   public void itemSelected(ToolbarItem item) {
-    if (item instanceof LogisimToolbarItem) {
-      ((LogisimToolbarItem) item).doAction();
-    }
+    if (item instanceof LogisimToolbarItem toolbarItem) toolbarItem.doAction();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/opts/MouseOptions.java
Patch:
@@ -304,9 +304,8 @@ public void mousePressed(MouseEvent e) {
     @Override
     public void selectionChanged(ProjectExplorer.Event event) {
       final var target = event.getTarget();
-      if (target instanceof ProjectExplorerToolNode) {
-        final var tool = ((ProjectExplorerToolNode) target).getValue();
-        setCurrentTool(tool);
+      if (target instanceof ProjectExplorerToolNode toolNode) {
+        setCurrentTool(toolNode.getValue());
       } else {
         setCurrentTool(null);
       }

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarOptions.java
Patch:
@@ -165,9 +165,8 @@ private void doMove(int delta) {
     @Override
     public void doubleClicked(ProjectExplorer.Event event) {
       final var target = event.getTarget();
-      if (target instanceof ProjectExplorerToolNode) {
-        final var tool = ((ProjectExplorerToolNode) target).getValue();
-        doAddTool(tool);
+      if (target instanceof ProjectExplorerToolNode toolNode) {
+        doAddTool(toolNode.getValue());
       }
     }
 

File: src/main/java/com/cburch/logisim/gui/prefs/ColorChooserButton.java
Patch:
@@ -45,8 +45,7 @@ public void propertyChange(PropertyChangeEvent evt) {
   @Override
   public void actionPerformed(ActionEvent e) {
     final var but = (JButton) e.getSource();
-    if (but.getIcon() instanceof ColorIcon) {
-      final var i = (ColorIcon) but.getIcon();
+    if (but.getIcon() instanceof ColorIcon i) {
       i.update(frame);
     }
   }

File: src/main/java/com/cburch/logisim/gui/test/TestPanel.java
Patch:
@@ -113,9 +113,9 @@ public void getRowData(int firstRow, int numRows, ValueTable.Cell[][] rowData) {
       var failed = false;
       if (row < numPass + numFail) {
         final var err = results[row];
-        if (err instanceof FailException) {
+        if (err instanceof FailException failEx) {
           failed = true;
-          for (final var e : ((FailException) err).getAll()) {
+          for (final var e : failEx.getAll()) {
             var col = e.getColumn();
             msg[col] = S.get("expectedValueMessage", e.getExpected().toDisplayString(getColumnValueRadix(col + 1)));
             altdata[col] = e.getComputed();

File: src/main/java/com/cburch/logisim/instance/Instance.java
Patch:
@@ -23,7 +23,9 @@
 public final class Instance implements Location.At {
 
   public static Instance getInstanceFor(Component comp) {
-    return (comp instanceof InstanceComponent) ? ((InstanceComponent) comp).getInstance() : null;
+    return (comp instanceof InstanceComponent instComp)
+           ? instComp.getInstance()
+           : null;
   }
 
   public static InstanceComponent getComponentFor(Instance instance) {

File: src/main/java/com/cburch/logisim/proj/Project.java
Patch:
@@ -63,8 +63,7 @@ public void libraryChanged(LibraryEvent event) {
         Object data = event.getData();
         if (data instanceof AddTool) {
           Object factory = ((AddTool) data).getFactory();
-          if (factory instanceof SubcircuitFactory) {
-            final var fact = (SubcircuitFactory) factory;
+          if (factory instanceof SubcircuitFactory fact) {
             if (fact.getSubcircuit() == getCurrentCircuit()) {
               setCurrentCircuit(file.getMainCircuit());
             }
@@ -480,7 +479,7 @@ public void setCircuitState(CircuitState value) {
           newCircuit.addCircuitListener(l);
         }
         final var circTickFrequency = newCircuit.getTickFrequency();
-        final var simTickFrequency = simulator.getTickFrequency(); 
+        final var simTickFrequency = simulator.getTickFrequency();
         if (circTickFrequency < 0) {
           newCircuit.setTickFrequency(simTickFrequency);
         } else if (circTickFrequency != simTickFrequency) {

File: src/main/java/com/cburch/logisim/soc/bus/SocBusMenuProvider.java
Patch:
@@ -60,8 +60,7 @@ public MenuExtender getMenu(Instance inst) {
   @Override
   public void actionPerformed(ActionEvent e) {
     Object source = e.getSource();
-    if (source instanceof InstanceMenuItem) {
-      InstanceMenuItem info = (InstanceMenuItem) source;
+    if (source instanceof InstanceMenuItem info) {
       Instance inst = info.getInstance();
       if (myInfo.containsKey(inst)) {
         switch (info.getFunction()) {

File: src/main/java/com/cburch/logisim/soc/data/SocSimulationManager.java
Patch:
@@ -43,8 +43,8 @@ public SocBusSelector(Window source, SocBusInfo value) {
       super(S.get("SocBusSelectAttrClick"));
       myCirc = null;
       this.repaint();
-      if (source instanceof Frame) {
-        myCirc = ((Frame) source).getProject().getCurrentCircuit();
+      if (source instanceof Frame frame) {
+        myCirc = frame.getProject().getCurrentCircuit();
       }
       myValue = value;
       addMouseListener(this);

File: src/main/java/com/cburch/logisim/soc/data/SocUpMenuProvider.java
Patch:
@@ -330,9 +330,8 @@ public MenuExtender getMenu(Instance inst) {
   @Override
   public void actionPerformed(ActionEvent e) {
     Object source = e.getSource();
-    if (source instanceof InstanceMenuItem) {
-      InstanceMenuItem info = (InstanceMenuItem) source;
-      Instance inst = info.getInstance();
+    if (source instanceof InstanceMenuItem info) {
+      final var inst = info.getInstance();
       if (myInfo.containsKey(inst)) {
         switch (info.getFunction()) {
           case LOAD_ELF_FUNCTION:

File: src/main/java/com/cburch/logisim/std/io/Keyboard.java
Patch:
@@ -127,8 +127,9 @@ public static void addToBuffer(InstanceState state, char[] newChars) {
   }
 
   private static int getBufferLength(Object bufferAttr) {
-    if (bufferAttr instanceof Integer) return (Integer) bufferAttr;
-    else return 32;
+    return (bufferAttr instanceof Integer)
+           ? (Integer) bufferAttr
+           : 32;
   }
 
   private static KeyboardData getKeyboardState(InstanceState state) {

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -166,9 +166,9 @@ public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
         "FPGA_out",
         String.format(
             "%s(%d DOWNTO %d)",
-            LOCAL_OUTPUT_BUBBLE_BUS_NAME
-                + ComponentInfo.getLocalBubbleOutputEndId()
-                + ComponentInfo.getLocalBubbleOutputStartId()));
+            LOCAL_OUTPUT_BUBBLE_BUS_NAME,
+            ComponentInfo.getLocalBubbleOutputEndId(),
+            ComponentInfo.getLocalBubbleOutputStartId()));
     map.putAll(
         Hdl.getNetMap(
             "Addr_Data_LB_o",

File: src/main/java/com/cburch/logisim/std/io/Tty.java
Patch:
@@ -41,8 +41,9 @@ public class Tty extends InstanceFactory implements DynamicElementProvider {
   public static final String _ID = "TTY";
 
   private static int getColumnCount(Object val) {
-    if (val instanceof Integer) return (Integer) val;
-    else return 16;
+    return (val instanceof Integer)
+           ? (Integer) val
+           : 16;
   }
 
   private static int getRowCount(Object val) {

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -166,9 +166,9 @@ public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
         "FPGA_out",
         String.format(
             "%s(%d DOWNTO %d)",
-            LOCAL_OUTPUT_BUBBLE_BUS_NAME
-                + ComponentInfo.getLocalBubbleOutputEndId()
-                + ComponentInfo.getLocalBubbleOutputStartId()));
+            LOCAL_OUTPUT_BUBBLE_BUS_NAME,
+            ComponentInfo.getLocalBubbleOutputEndId(),
+            ComponentInfo.getLocalBubbleOutputStartId()));
     map.putAll(
         Hdl.getNetMap(
             "Addr_Data_LB_o",

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -166,9 +166,9 @@ public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
         "FPGA_out",
         String.format(
             "%s(%d DOWNTO %d)",
-            LOCAL_OUTPUT_BUBBLE_BUS_NAME
-                + ComponentInfo.getLocalBubbleOutputEndId()
-                + ComponentInfo.getLocalBubbleOutputStartId()));
+            LOCAL_OUTPUT_BUBBLE_BUS_NAME,
+            ComponentInfo.getLocalBubbleOutputEndId(),
+            ComponentInfo.getLocalBubbleOutputStartId()));
     map.putAll(
         Hdl.getNetMap(
             "Addr_Data_LB_o",

File: src/main/java/com/cburch/logisim/circuit/CircuitHDLGeneratorFactory.java
Patch:
@@ -412,7 +412,7 @@ public ArrayList<String> getModuleFunctionality(Netlist theNetList, AttributeSet
             contents.addRemarkBlock("Here all in-lined components are defined");
             isFirstLine = false;
           }
-          contents.add(worker.getInlinedCode(theNetList, id++, comp, inlinedName));
+          contents.add(worker.getInlinedCode(theNetList, id++, comp, inlinedName).getWithIndent());
           compIds.put(InlinedId, id);
         }
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHdlGeneratorFactory.java
Patch:
@@ -498,7 +498,7 @@ private String getInstanceIdentifier(Object componentInfo, Long componentId) {
 
   /* Here all public entries for HDL generation are defined */
   @Override
-  public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo,
+  public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo,
       String circuitName) {
     throw new IllegalAccessError("BUG: Inline code not supported");
   }

File: src/main/java/com/cburch/logisim/std/io/HexDigitHdlGeneratorFactory.java
Patch:
@@ -16,12 +16,11 @@
 import com.cburch.logisim.fpga.hdlgenerator.WithSelectHdlGenerator;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
-import java.util.ArrayList;
 
 public class HexDigitHdlGeneratorFactory extends InlinedHdlGeneratorFactory {
 
   @Override
-  public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
+  public LineBuffer getInlinedCode(Netlist nets, Long componentId, netlistComponent componentInfo, String circuitName) {
     final var startId = componentInfo.getLocalBubbleOutputStartId();
     final var bubbleBusName = LOCAL_OUTPUT_BUBBLE_BUS_NAME;
     final var signalName = LineBuffer.format("{{1}}{{<}}{{2}}{{3}}{{4}}{{>}}", bubbleBusName, (startId + 6), Hdl.vectorLoopId(), startId);
@@ -56,7 +55,7 @@ public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, netlistC
     }
     if (componentInfo.getComponent().getAttributeSet().getValue(SevenSegment.ATTR_DP))
       contents.add("{{assign}} {{bubbleBusName}}{{<}}{{1}}{{>}} {{=}} {{dpName}};", (startId + 7));
-    return contents.getWithIndent();
+    return contents;
   }
 
 }

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -113,7 +113,7 @@ public void attributeValueChanged(AttributeEvent e) {
             || e.getValue() == APPEAR_FPGA
             || e.getValue() == APPEAR_EVOLUTION) {
           source.getAppearance().setDefaultAppearance(true);
-          source.RecalcDefaultShape();
+          source.recalcDefaultShape();
         }
       }
     }
@@ -126,7 +126,7 @@ static AttributeSet createBaseAttrs(Circuit source, String name) {
     ret.addAttributeListener(new StaticListener(source));
     return ret;
   }
-  
+
   public static final Attribute<String> NAME_ATTR =
       Attributes.forString("circuit", S.getter("circuitName"));
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -80,15 +80,15 @@ protected Map<Circuit, Integer> getAccessedCircuits() {
             final var sibling = ((SubcircuitFactory) factory).getSubcircuit();
             final var isFirstForCirc = supercircsDone.add(sibling);
             if (isFirstForCirc) {
-              for (Circuit supercirc : sibling.getCircuitsUsingThis()) {
+              for (final var supercirc : sibling.getCircuitsUsingThis()) {
                 accessMap.put(supercirc, READ_WRITE);
               }
             }
           } else if (factory instanceof VhdlEntity) {
             final var sibling = (VhdlEntity) factory;
-            boolean isFirstForVhdl = vhdlDone.add(sibling);
+            final var isFirstForVhdl = vhdlDone.add(sibling);
             if (isFirstForVhdl) {
-              for (Circuit supercirc : sibling.getCircuitsUsingThis()) {
+              for (final var supercirc : sibling.getCircuitsUsingThis()) {
                 accessMap.put(supercirc, READ_WRITE);
               }
             }

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -30,7 +30,7 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
     addActionListener(this);
 
     final var attrs = (SplitterAttributes) splitter.getAttributeSet();
-    final var actual = attrs.bit_end;
+    final var actual = attrs.bitEnd;
     final var desired = SplitterAttributes.computeDistribution(attrs.fanout, actual.length, order);
     var same = actual.length == desired.length;
     for (var i = 0; same && i < desired.length; i++) {
@@ -46,7 +46,7 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
   @Override
   public void actionPerformed(ActionEvent e) {
     final var attrs = (SplitterAttributes) splitter.getAttributeSet();
-    final var actual = attrs.bit_end;
+    final var actual = attrs.bitEnd;
     final var desired = SplitterAttributes.computeDistribution(attrs.fanout, actual.length, order);
     final var xn = new CircuitMutation(proj.getCircuitState().getCircuit());
     for (int i = 0, n = Math.min(actual.length, desired.length); i < n; i++) {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -22,8 +22,8 @@ static void drawLabels(ComponentDrawContext context, SplitterAttributes attrs, L
     final var ends = new String[attrs.fanout + 1];
     var curEnd = -1;
     var cur0 = 0;
-    for (int i = 0, n = attrs.bit_end.length; i <= n; i++) {
-      final var bit = i == n ? -1 : attrs.bit_end[i];
+    for (int i = 0, n = attrs.bitEnd.length; i <= n; i++) {
+      final var bit = i == n ? -1 : attrs.bitEnd[i];
       if (bit != curEnd) {
         int cur1 = i - 1;
         String toAdd;

File: src/main/java/com/cburch/logisim/comp/ComponentListener.java
Patch:
@@ -18,7 +18,7 @@ default void endChanged(ComponentEvent e) {
     // no-op implementation
   }
 
-  default void LabelChanged(ComponentEvent e) {
+  default void labelChanged(ComponentEvent e) {
     // no-op implementation
   }
 }

File: src/main/java/com/cburch/logisim/fpga/gui/FPGACommander.java
Patch:
@@ -394,7 +394,7 @@ private void Annotate(boolean ClearExistingLabels) {
     Circuit root = MyProject.getLogisimFile().getCircuit(CircuitName);
     if (root != null) {
       if (ClearExistingLabels) {
-        root.ClearAnnotationLevel();
+        root.clearAnnotationLevel();
       }
       root.Annotate(ClearExistingLabels, false);
       Reporter.report.addInfo(S.get("FpgaGuiAnnotationDone"));

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -33,7 +33,6 @@
 import com.cburch.logisim.tools.ToolTipMaker;
 import com.cburch.logisim.util.EventSourceWeakSupport;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringGetter;
 import com.cburch.logisim.util.SyntaxChecker;
 import com.cburch.logisim.util.UnmodifiableList;
 import java.awt.Font;
@@ -286,7 +285,7 @@ private void fireLabelChanged(AttributeEvent attre) {
       ComponentEvent e = null;
       for (final var listener : listeners) {
         if (e == null) e = new ComponentEvent(this, null, attre);
-        listener.LabelChanged(e);
+        listener.labelChanged(e);
       }
     }
   }

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -24,7 +24,6 @@
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.LibraryTools;
 import com.cburch.logisim.util.JFileChoosers;
-import com.cburch.logisim.util.StringUtil;
 import java.awt.Component;
 import java.io.File;
 import java.io.IOException;
@@ -235,7 +234,7 @@ public static void doMerge(Component parent, Project baseProject) {
 
   private static void updatecircs(LogisimFile lib, Project proj) {
     for (final var circ : lib.getCircuits()) {
-      circ.SetProject(proj);
+      circ.setProject(proj);
     }
     for (final var libs : lib.getLibraries()) {
       if (libs instanceof LoadedLibrary) {

File: src/main/java/com/cburch/logisim/soc/gui/ListeningFrame.java
Patch:
@@ -66,7 +66,7 @@ public void circuitChanged(CircuitEvent event) {
   }
 
   @Override
-  public void LabelChanged(ComponentEvent e) {
+  public void labelChanged(ComponentEvent e) {
     updateTitle();
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/TraceWindowTableModel.java
Patch:
@@ -182,7 +182,7 @@ public void mouseClicked(MouseEvent e) {
   }
 
   @Override
-  public void LabelChanged(ComponentEvent e) {
+  public void labelChanged(ComponentEvent e) {
     rebuild();
   }
 

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -379,7 +379,7 @@ private boolean loop() {
 
     @Override
     public void run() {
-      while(true) {
+      while (true) {
         try {
           if (!loop()) return;
         } catch (Throwable e) {

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -113,7 +113,7 @@ public void attributeValueChanged(AttributeEvent e) {
             || e.getValue() == APPEAR_FPGA
             || e.getValue() == APPEAR_EVOLUTION) {
           source.getAppearance().setDefaultAppearance(true);
-          source.RecalcDefaultShape();
+          source.recalcDefaultShape();
         }
       }
     }
@@ -126,7 +126,7 @@ static AttributeSet createBaseAttrs(Circuit source, String name) {
     ret.addAttributeListener(new StaticListener(source));
     return ret;
   }
-  
+
   public static final Attribute<String> NAME_ATTR =
       Attributes.forString("circuit", S.getter("circuitName"));
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -80,15 +80,15 @@ protected Map<Circuit, Integer> getAccessedCircuits() {
             final var sibling = ((SubcircuitFactory) factory).getSubcircuit();
             final var isFirstForCirc = supercircsDone.add(sibling);
             if (isFirstForCirc) {
-              for (Circuit supercirc : sibling.getCircuitsUsingThis()) {
+              for (final var supercirc : sibling.getCircuitsUsingThis()) {
                 accessMap.put(supercirc, READ_WRITE);
               }
             }
           } else if (factory instanceof VhdlEntity) {
             final var sibling = (VhdlEntity) factory;
-            boolean isFirstForVhdl = vhdlDone.add(sibling);
+            final var isFirstForVhdl = vhdlDone.add(sibling);
             if (isFirstForVhdl) {
-              for (Circuit supercirc : sibling.getCircuitsUsingThis()) {
+              for (final var supercirc : sibling.getCircuitsUsingThis()) {
                 accessMap.put(supercirc, READ_WRITE);
               }
             }

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -30,7 +30,7 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
     addActionListener(this);
 
     final var attrs = (SplitterAttributes) splitter.getAttributeSet();
-    final var actual = attrs.bit_end;
+    final var actual = attrs.bitEnd;
     final var desired = SplitterAttributes.computeDistribution(attrs.fanout, actual.length, order);
     var same = actual.length == desired.length;
     for (var i = 0; same && i < desired.length; i++) {
@@ -46,7 +46,7 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
   @Override
   public void actionPerformed(ActionEvent e) {
     final var attrs = (SplitterAttributes) splitter.getAttributeSet();
-    final var actual = attrs.bit_end;
+    final var actual = attrs.bitEnd;
     final var desired = SplitterAttributes.computeDistribution(attrs.fanout, actual.length, order);
     final var xn = new CircuitMutation(proj.getCircuitState().getCircuit());
     for (int i = 0, n = Math.min(actual.length, desired.length); i < n; i++) {

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -22,8 +22,8 @@ static void drawLabels(ComponentDrawContext context, SplitterAttributes attrs, L
     final var ends = new String[attrs.fanout + 1];
     var curEnd = -1;
     var cur0 = 0;
-    for (int i = 0, n = attrs.bit_end.length; i <= n; i++) {
-      final var bit = i == n ? -1 : attrs.bit_end[i];
+    for (int i = 0, n = attrs.bitEnd.length; i <= n; i++) {
+      final var bit = i == n ? -1 : attrs.bitEnd[i];
       if (bit != curEnd) {
         int cur1 = i - 1;
         String toAdd;

File: src/main/java/com/cburch/logisim/comp/ComponentListener.java
Patch:
@@ -18,7 +18,7 @@ default void endChanged(ComponentEvent e) {
     // no-op implementation
   }
 
-  default void LabelChanged(ComponentEvent e) {
+  default void labelChanged(ComponentEvent e) {
     // no-op implementation
   }
 }

File: src/main/java/com/cburch/logisim/fpga/gui/FPGACommander.java
Patch:
@@ -394,7 +394,7 @@ private void Annotate(boolean ClearExistingLabels) {
     Circuit root = MyProject.getLogisimFile().getCircuit(CircuitName);
     if (root != null) {
       if (ClearExistingLabels) {
-        root.ClearAnnotationLevel();
+        root.clearAnnotationLevel();
       }
       root.Annotate(ClearExistingLabels, false);
       Reporter.report.addInfo(S.get("FpgaGuiAnnotationDone"));

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -33,7 +33,6 @@
 import com.cburch.logisim.tools.ToolTipMaker;
 import com.cburch.logisim.util.EventSourceWeakSupport;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.StringGetter;
 import com.cburch.logisim.util.SyntaxChecker;
 import com.cburch.logisim.util.UnmodifiableList;
 import java.awt.Font;
@@ -286,7 +285,7 @@ private void fireLabelChanged(AttributeEvent attre) {
       ComponentEvent e = null;
       for (final var listener : listeners) {
         if (e == null) e = new ComponentEvent(this, null, attre);
-        listener.LabelChanged(e);
+        listener.labelChanged(e);
       }
     }
   }

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -24,7 +24,6 @@
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.LibraryTools;
 import com.cburch.logisim.util.JFileChoosers;
-import com.cburch.logisim.util.StringUtil;
 import java.awt.Component;
 import java.io.File;
 import java.io.IOException;
@@ -235,7 +234,7 @@ public static void doMerge(Component parent, Project baseProject) {
 
   private static void updatecircs(LogisimFile lib, Project proj) {
     for (final var circ : lib.getCircuits()) {
-      circ.SetProject(proj);
+      circ.setProject(proj);
     }
     for (final var libs : lib.getLibraries()) {
       if (libs instanceof LoadedLibrary) {

File: src/main/java/com/cburch/logisim/soc/gui/ListeningFrame.java
Patch:
@@ -66,7 +66,7 @@ public void circuitChanged(CircuitEvent event) {
   }
 
   @Override
-  public void LabelChanged(ComponentEvent e) {
+  public void labelChanged(ComponentEvent e) {
     updateTitle();
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/TraceWindowTableModel.java
Patch:
@@ -182,7 +182,7 @@ public void mouseClicked(MouseEvent e) {
   }
 
   @Override
-  public void LabelChanged(ComponentEvent e) {
+  public void labelChanged(ComponentEvent e) {
     rebuild();
   }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHdlGeneratorFactory.java
Patch:
@@ -702,7 +702,7 @@ private ArrayList<String> getVHDLBlackBox(Netlist theNetlist, AttributeSet attrs
       var firstEntry = true;
       var currentEntry = 0;
       // now we process in order
-      var direction = (myPorts.keySet(Port.INOUT).size() > 0 ) ? "IN   ": "IN ";
+      var direction = (myPorts.keySet(Port.INOUT).size() > 0) ? "IN   " : "IN ";
       final var myInputs = new TreeSet<String>(myPorts.keySet(Port.INPUT));
       myInputs.addAll(tickers);
       for (final var input : myInputs) {
@@ -719,7 +719,7 @@ private ArrayList<String> getVHDLBlackBox(Netlist theNetlist, AttributeSet attrs
         firstEntry = getPortEntry(contents, firstEntry, nrOfEntries, currentEntry, inout, direction, type, maxNameLength);
         currentEntry++;
       }
-      direction = (myPorts.keySet(Port.INOUT).size() > 0 ) ? "OUT  ": "OUT";
+      direction = (myPorts.keySet(Port.INOUT).size() > 0) ? "OUT  " : "OUT";
       final var myOutputs = new TreeSet<String>(myPorts.keySet(Port.OUTPUT));
       for (final var output : myOutputs) {
         nrOfPortBits = myPorts.get(output, attrs);
@@ -730,7 +730,7 @@ private ArrayList<String> getVHDLBlackBox(Netlist theNetlist, AttributeSet attrs
     }
     contents.add("{{1}} {{2}};", isEntity ? "END ENTITY" : "END", isEntity ? componentName : "COMPONENT").empty();
     contents.empty();
-    return contents.get();
+    return contents.getWithIndent(isEntity ? 0 : 1);
   }
   
   private boolean getPortEntry(LineBuffer contents, boolean firstEntry, int nrOfEntries, int currentEntry,

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74163.java
Patch:
@@ -38,9 +38,9 @@ public void propagateTtl(InstanceState state) {
         counter = 0;
       } else if (nLoad == 0) {
         counter = state.getPortValue(PORT_INDEX_A).toLongValue()
-            + state.getPortValue(PORT_INDEX_B).toLongValue() << 1
-            + state.getPortValue(PORT_INDEX_C).toLongValue() << 2
-            + state.getPortValue(PORT_INDEX_D).toLongValue() << 3;
+            + (state.getPortValue(PORT_INDEX_B).toLongValue() << 1)
+            + (state.getPortValue(PORT_INDEX_C).toLongValue() << 2)
+            + (state.getPortValue(PORT_INDEX_D).toLongValue() << 3);
       } else  if (state.getPortValue(PORT_INDEX_EnP).and(state.getPortValue(PORT_INDEX_EnT)).toLongValue() == 1) {
         counter = (counter + 1) & 15;
       }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74163.java
Patch:
@@ -38,9 +38,9 @@ public void propagateTtl(InstanceState state) {
         counter = 0;
       } else if (nLoad == 0) {
         counter = state.getPortValue(PORT_INDEX_A).toLongValue()
-            + state.getPortValue(PORT_INDEX_B).toLongValue() << 1
-            + state.getPortValue(PORT_INDEX_C).toLongValue() << 2
-            + state.getPortValue(PORT_INDEX_D).toLongValue() << 3;
+            + (state.getPortValue(PORT_INDEX_B).toLongValue() << 1)
+            + (state.getPortValue(PORT_INDEX_C).toLongValue() << 2)
+            + (state.getPortValue(PORT_INDEX_D).toLongValue() << 3);
       } else  if (state.getPortValue(PORT_INDEX_EnP).and(state.getPortValue(PORT_INDEX_EnT)).toLongValue() == 1) {
         counter = (counter + 1) & 15;
       }

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -18,7 +18,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.fpga.designrulecheck.netlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.util.StringGetter;
 import java.awt.Color;
 
@@ -68,7 +68,7 @@ void drawGhost(
    */
   Object getFeature(Object key, AttributeSet attrs);
 
-  HDLGeneratorFactory getHDLGenerator(AttributeSet attrs);
+  HdlGeneratorFactory getHDLGenerator(AttributeSet attrs);
 
   String getHDLName(AttributeSet attrs);
 

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Netlist.java
Patch:
@@ -22,7 +22,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.fpga.gui.Reporter;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.std.wiring.Clock;
@@ -2177,7 +2177,7 @@ private boolean hasGatedClock(
       List<Set<netlistComponent>> nonPinGatedComponents,
       Set<netlistComponent> warnedComponents) {
     var isGatedClock = false;
-    final var clockNetName = HDL.getClockNetName(comp, clockPinIndex, this);
+    final var clockNetName = Hdl.getClockNetName(comp, clockPinIndex, this);
     if (clockNetName.isEmpty()) {
       /* we search for the source in case it is connected otherwise we ignore */
       final var connection = comp.getEnd(clockPinIndex).get((byte) 0);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HdlGeneratorFactory.java
Patch:
@@ -16,10 +16,10 @@
 import java.util.ArrayList;
 import java.util.Set;
 
-public interface HDLGeneratorFactory {
+public interface HdlGeneratorFactory {
 
-  public static final String NET_NAME = HDL.NET_NAME;
-  public static final String BUS_NAME = HDL.BUS_NAME;
+  public static final String NET_NAME = Hdl.NET_NAME;
+  public static final String BUS_NAME = Hdl.BUS_NAME;
   public static final String CLOCK_TREE_NAME = "LOGISIM_CLOCK_TREE_";
   public static final String VHDL = "VHDL";
   public static final String VERILOG = "Verilog";

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/InlinedHdlGeneratorFactory.java
Patch:
@@ -16,7 +16,7 @@
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.netlistComponent;
 
-public class InlinedHDLGeneratorFactory implements HDLGeneratorFactory {
+public class InlinedHdlGeneratorFactory implements HdlGeneratorFactory {
 
   @Override
   public boolean generateAllHDLDescriptions(Set<String> handledComponents, String workingDirectory,

File: src/main/java/com/cburch/logisim/fpga/prefs/FPGAOptions.java
Patch:
@@ -11,7 +11,7 @@
 
 import static com.cburch.logisim.fpga.Strings.S;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.prefs.ColorChooserButton;
 import com.cburch.logisim.gui.prefs.OptionsPanel;
@@ -102,8 +102,8 @@ public FPGAOptions(PreferencesFrame frame) {
             AppPreferences.HdlType,
             S.getter("HDLLanguageUsed"),
             new PrefOption[] {
-              new PrefOption(HDLGeneratorFactory.VHDL, S.getter("VHDL")),
-              new PrefOption(HDLGeneratorFactory.VERILOG, S.getter("Verilog"))
+              new PrefOption(HdlGeneratorFactory.VHDL, S.getter("VHDL")),
+              new PrefOption(HdlGeneratorFactory.VERILOG, S.getter("Verilog"))
             });
 
     GridBagLayout layout = new GridBagLayout();

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -13,7 +13,7 @@
 import com.cburch.logisim.circuit.RadixOption;
 import com.cburch.logisim.data.AttributeOption;
 import com.cburch.logisim.data.Direction;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.gui.start.Startup;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LocaleListener;
@@ -463,8 +463,8 @@ public static int getIconBorder() {
       create(
           new PrefMonitorStringOpts(
               "afterAdd",
-              new String[] {HDLGeneratorFactory.VHDL, HDLGeneratorFactory.VERILOG},
-              HDLGeneratorFactory.VHDL));
+              new String[] {HdlGeneratorFactory.VHDL, HdlGeneratorFactory.VERILOG},
+              HdlGeneratorFactory.VHDL));
   public static final PrefMonitor<String> SelectedBoard =
       create(new PrefMonitorString("SelectedBoard", null));
 

File: src/main/java/com/cburch/logisim/std/gates/AbstractGate.java
Patch:
@@ -22,7 +22,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.file.Options;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -68,11 +68,11 @@ static Value pullOutput(Value value, Object outType) {
 
   private boolean paintInputLines;
 
-  protected AbstractGate(String name, StringGetter desc, HDLGeneratorFactory generator) {
+  protected AbstractGate(String name, StringGetter desc, HdlGeneratorFactory generator) {
     this(name, desc, false, generator);
   }
 
-  protected AbstractGate(String name, StringGetter desc, boolean isXor, HDLGeneratorFactory generator) {
+  protected AbstractGate(String name, StringGetter desc, boolean isXor, HdlGeneratorFactory generator) {
     super(name, desc, generator);
     this.isXor = isXor;
     setFacingAttribute(StdAttr.FACING);

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -72,7 +72,7 @@ static Value repair(InstanceState state, Value v) {
   public static final InstanceFactory FACTORY = new Buffer();
 
   private Buffer() {
-    super(_ID, S.getter("bufferComponent"), new AbstractBufferHDLGenerator(false));
+    super(_ID, S.getter("bufferComponent"), new AbstractBufferHdlGenerator(false));
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,

File: src/main/java/com/cburch/logisim/std/gates/ControlledBuffer.java
Patch:
@@ -60,7 +60,7 @@ private ControlledBuffer(boolean isInverter) {
         isInverter
             ? S.getter("controlledInverterComponent")
             : S.getter("controlledBufferComponent"),
-        new ControlledBufferHDLGenerator());
+        new ControlledBufferHdlGenerator());
     this.isInverter = isInverter;
     if (isInverter) {
       setAttributes(

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -84,7 +84,7 @@ static void configureLabel(Instance instance, boolean isRectangular, Location co
   public static final InstanceFactory FACTORY = new NotGate();
 
   private NotGate() {
-    super(_ID, S.getter("notGateComponent"), new AbstractBufferHDLGenerator(true));
+    super(_ID, S.getter("notGateComponent"), new AbstractBufferHdlGenerator(true));
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,

File: src/main/java/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -29,7 +29,7 @@ public class DotMatrix extends DotMatrixBase {
   public static final String _ID = "DotMatrix";
 
   public DotMatrix() {
-    super(_ID, S.getter("dotMatrixComponent"), 5, 7, new DotMatrixHDLGeneratorFactory());
+    super(_ID, S.getter("dotMatrixComponent"), 5, 7, new DotMatrixHdlGeneratorFactory());
   }
 
   public static final Attribute<BitWidth> ATTR_MATRIX_COLS =

File: src/main/java/com/cburch/logisim/std/io/DotMatrixBase.java
Patch:
@@ -40,7 +40,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.data.ComponentMapInformationContainer;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.gui.icons.LedMatrixIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceData;
@@ -222,7 +222,7 @@ public void setScaleY(int val) {
     scaleY = val;
   }
 
-  public DotMatrixBase(String name, StringGetter displayName, int cols, int rows, HDLGeneratorFactory generator) {
+  public DotMatrixBase(String name, StringGetter displayName, int cols, int rows, HdlGeneratorFactory generator) {
     super(name, displayName, generator, true);
     setAttributes(
         new Attribute<?>[] {

File: src/main/java/com/cburch/logisim/std/io/HexDigit.java
Patch:
@@ -14,7 +14,6 @@
 import com.cburch.logisim.circuit.appear.DynamicElement;
 import com.cburch.logisim.circuit.appear.DynamicElementProvider;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;
@@ -55,7 +54,7 @@ protected enum NoDataDisplayMode {
   static final NoDataDisplayMode NO_DATA_DISPLAY = NoDataDisplayMode.BLANK;
 
   public HexDigit() {
-    super(_ID, S.getter("hexDigitComponent"), new HexDigitHDLGeneratorFactory(), true);
+    super(_ID, S.getter("hexDigitComponent"), new HexDigitHdlGeneratorFactory(), true);
     setAttributes(
         new Attribute[] {
           IoLibrary.ATTR_ON_COLOR,

File: src/main/java/com/cburch/logisim/std/io/LedBar.java
Patch:
@@ -21,7 +21,6 @@
 
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeOption;
-import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Attributes;
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Value;
@@ -108,7 +107,7 @@ public AttributeOption getAttributeItemSelect() {
   /* ****************************************************************** */
 
   public LedBar() {
-    super(_ID, S.getter("ioLedBarComponent"), 8, 1, new LedBarHDLGeneratorFactory());
+    super(_ID, S.getter("ioLedBarComponent"), 8, 1, new LedBarHdlGeneratorFactory());
     setIcon(new LedBarIcon());
 
     ATTR_DOT_SHAPE.setHidden(true);

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlop.java
Patch:
@@ -21,7 +21,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.netlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -132,7 +132,7 @@ private static class StateData extends ClockState implements InstanceData {
   private final Attribute<AttributeOption> triggerAttribute;
 
   protected AbstractFlipFlop(String name, String iconName, StringGetter desc, int numInputs,
-      boolean allowLevelTriggers, HDLGeneratorFactory generator) {
+      boolean allowLevelTriggers, HdlGeneratorFactory generator) {
     super(name, desc, generator);
     this.numInputs = numInputs;
     setIconName(iconName);
@@ -147,7 +147,7 @@ protected AbstractFlipFlop(String name, String iconName, StringGetter desc, int
   }
 
   protected AbstractFlipFlop(
-      String name, Icon icon, StringGetter desc, int numInputs, boolean allowLevelTriggers, HDLGeneratorFactory generator) {
+      String name, Icon icon, StringGetter desc, int numInputs, boolean allowLevelTriggers, HdlGeneratorFactory generator) {
     super(name, desc, generator);
     this.numInputs = numInputs;
     setIcon(icon);

File: src/main/java/com/cburch/logisim/std/memory/DFlipFlop.java
Patch:
@@ -12,7 +12,7 @@
 import static com.cburch.logisim.std.Strings.S;
 
 import com.cburch.logisim.data.Value;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
@@ -38,7 +38,7 @@ public DFFHDLGeneratorFactory() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator() + "D;");
+      contents.add("   " + Hdl.assignPreamble() + "s_next_state" + Hdl.assignOperator() + "D;");
       return contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -20,7 +20,7 @@
 import com.cburch.logisim.data.Attributes;
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Bounds;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.gui.hex.HexFrame;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -99,7 +99,7 @@ public void metainfoChanged(HexModel source) {}
 
   private final WeakHashMap<Instance, File> currentInstanceFiles;
 
-  Mem(String name, StringGetter desc, int extraPorts, HDLGeneratorFactory generator, boolean needsLabel) {
+  Mem(String name, StringGetter desc, int extraPorts, HdlGeneratorFactory generator, boolean needsLabel) {
     super(name, desc, generator, needsLabel);
     currentInstanceFiles = new WeakHashMap<>();
     setInstancePoker(MemPoker.class);

File: src/main/java/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -123,7 +123,7 @@ public void mouseClicked(MouseEvent e) {
   private final WeakHashMap<Instance, MemListener> memListeners;
 
   public Rom() {
-    super(_ID, S.getter("romComponent"), 0, new RomHDLGeneratorFactory(), true);
+    super(_ID, S.getter("romComponent"), 0, new RomHdlGeneratorFactory(), true);
     setIcon(new ArithmeticIcon("ROM", 3));
     memListeners = new WeakHashMap<>();
   }

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -12,7 +12,7 @@
 import static com.cburch.logisim.std.Strings.S;
 
 import com.cburch.logisim.data.Value;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
@@ -38,7 +38,7 @@ public TFFHDLGeneratorFactory() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       return LineBuffer.getBuffer()
-          .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
+          .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", Hdl.assignPreamble(), Hdl.assignOperator(), Hdl.xorOperator())
           .getWithIndent();
     }
   }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -11,12 +11,12 @@
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
-import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.AbstractHdlGeneratorFactory;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;
 
-public class AbstractGateHDLGenerator extends AbstractHDLGeneratorFactory {
+public class AbstractGateHDLGenerator extends AbstractHdlGeneratorFactory {
 
   private final boolean isInverter;
 

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlops.java
Patch:
@@ -12,7 +12,7 @@
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.netlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstancePoker;
 import com.cburch.logisim.instance.InstanceState;
@@ -26,7 +26,7 @@ public class AbstractOctalFlops extends AbstractTtlGate {
 
   private boolean HasWe;
 
-  protected AbstractOctalFlops(String name, byte pins, byte[] outputports, String[] Ttlportnames, HDLGeneratorFactory generator) {
+  protected AbstractOctalFlops(String name, byte pins, byte[] outputports, String[] Ttlportnames, HdlGeneratorFactory generator) {
     super(name, pins, outputports, Ttlportnames, 80, generator);
     super.setInstancePoker(Poker.class);
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7400.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -31,8 +31,8 @@ private static class NandGateHDLGeneratorFactory extends AbstractGateHDLGenerato
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
-              + HDL.notOperator() + "(gate_" + index + "_A" + HDL.andOperator() + "gate_" + index + "B);");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
+              + Hdl.notOperator() + "(gate_" + index + "_A" + Hdl.andOperator() + "gate_" + index + "B);");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7402.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -28,8 +28,8 @@ private static class NorGateHDLGeneratorFactory extends AbstractGateHDLGenerator
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
-              + HDL.notOperator() + "(gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B);");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
+              + Hdl.notOperator() + "(gate_" + index + "_A" + Hdl.orOperator() + "gate_" + index + "B);");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7404.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -35,8 +35,8 @@ public NotGateHDLGeneratorFactory() {
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
-              + HDL.notOperator() + "(gate_" + index + "_A);");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
+              + Hdl.notOperator() + "(gate_" + index + "_A);");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -28,8 +28,8 @@ private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerato
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator() + HDL.notOperator()
-              + "(gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B);");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator() + Hdl.notOperator()
+              + "(gate_" + index + "_A" + Hdl.xorOperator() + "gate_" + index + "_B);");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -28,8 +28,8 @@ private static class OrGateHDLGeneratorFactory extends AbstractGateHDLGenerator
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
-              + "gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B;");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
+              + "gate_" + index + "_A" + Hdl.orOperator() + "gate_" + index + "B;");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7434.java
Patch:
@@ -19,7 +19,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -45,7 +45,7 @@ public BufferGateHDLGeneratorFactory() {
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
                   + "(gate_" + index + "_A);");
       contents.add("");
       return contents;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442HDLGenerator.java
Patch:
@@ -30,12 +30,12 @@
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
-import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.AbstractHdlGeneratorFactory;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;
 
-public class Ttl7442HDLGenerator extends AbstractHDLGeneratorFactory {
+public class Ttl7442HDLGenerator extends AbstractHdlGeneratorFactory {
 
   private final boolean IsExes3;
   private final boolean IsGray;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -9,7 +9,7 @@
 
 package com.cburch.logisim.std.ttl;
 
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.Hdl;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import java.util.ArrayList;
@@ -28,8 +28,8 @@ private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator
     @Override
     public ArrayList<String> getLogicFunction(int index) {
       final var contents = new ArrayList<String>();
-      contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
-              + "gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B;");
+      contents.add("   " + Hdl.assignPreamble() + "gate_" + index + "_O" + Hdl.assignOperator()
+              + "gate_" + index + "_A" + Hdl.xorOperator() + "gate_" + index + "_B;");
       contents.add("");
       return contents;
     }

File: src/main/java/com/cburch/logisim/std/wiring/BitExtender.java
Patch:
@@ -58,7 +58,7 @@ public class BitExtender extends InstanceFactory {
   public static final BitExtender FACTORY = new BitExtender();
 
   public BitExtender() {
-    super(_ID, S.getter("extenderComponent"), new BitExtenderHDLGeneratorFactory());
+    super(_ID, S.getter("extenderComponent"), new BitExtenderHdlGeneratorFactory());
     setIconName("extender.gif");
     setAttributes(
         new Attribute[] {ATTR_IN_WIDTH, ATTR_OUT_WIDTH, ATTR_TYPE},

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -109,7 +109,7 @@ public void computeExpression(ExpressionComputer.Map expressionMap) {
     }
   }
 
-  private static class ConstantHDLGeneratorFactory extends AbstractConstantHDLGeneratorFactory {
+  private static class ConstantHdlGeneratorFactory extends AbstractConstantHdlGeneratorFactory {
     @Override
     public long getConstant(AttributeSet attrs) {
       return attrs.getValue(Constant.ATTR_VALUE);
@@ -127,7 +127,7 @@ public long getConstant(AttributeSet attrs) {
   private static final List<Attribute<?>> ATTRIBUTES = Arrays.asList(StdAttr.FACING, StdAttr.WIDTH, ATTR_VALUE);
 
   public Constant() {
-    super(_ID, S.getter("constantComponent"), new ConstantHDLGeneratorFactory());
+    super(_ID, S.getter("constantComponent"), new ConstantHdlGeneratorFactory());
     setFacingAttribute(StdAttr.FACING);
     setKeyConfigurator(
         JoinedConfigurator.create(

File: src/main/java/com/cburch/logisim/std/wiring/DoNotConnect.java
Patch:
@@ -16,7 +16,7 @@
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.fpga.hdlgenerator.InlinedHDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.InlinedHdlGeneratorFactory;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -36,7 +36,7 @@ public class DoNotConnect extends InstanceFactory {
   public static final String _ID = "NoConnect";
 
   public DoNotConnect() {
-    super(_ID, S.getter("noConnectionComponent"), new InlinedHDLGeneratorFactory());
+    super(_ID, S.getter("noConnectionComponent"), new InlinedHdlGeneratorFactory());
     setIconName("noconnect.gif");
     setAttributes(new Attribute[] {StdAttr.WIDTH}, new Object[] {BitWidth.ONE});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));

File: src/main/java/com/cburch/logisim/std/wiring/Ground.java
Patch:
@@ -39,7 +39,7 @@ public class Ground extends InstanceFactory {
   public static final String _ID = "Ground";
 
   public Ground() {
-    super(_ID, S.getter("groundComponent"), new AbstractConstantHDLGeneratorFactory());
+    super(_ID, S.getter("groundComponent"), new AbstractConstantHdlGeneratorFactory());
     setIconName("ground.gif");
     setAttributes(
         new Attribute[] {StdAttr.FACING, StdAttr.WIDTH},

File: src/main/java/com/cburch/logisim/std/wiring/Power.java
Patch:
@@ -38,7 +38,7 @@ public class Power extends InstanceFactory {
    */
   public static final String _ID = "Power";
 
-  private static class PowerHDLGeneratorFactory extends AbstractConstantHDLGeneratorFactory {
+  private static class PowerHdlGeneratorFactory extends AbstractConstantHdlGeneratorFactory {
     @Override
     public long getConstant(AttributeSet attrs) {
       long ConstantValue = 0;
@@ -51,7 +51,7 @@ public long getConstant(AttributeSet attrs) {
   }
 
   public Power() {
-    super(_ID, S.getter("powerComponent"), new PowerHDLGeneratorFactory());
+    super(_ID, S.getter("powerComponent"), new PowerHdlGeneratorFactory());
     setIconName("power.gif");
     setAttributes(
         new Attribute[] {StdAttr.FACING, StdAttr.WIDTH},

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -12,7 +12,7 @@
 import static com.cburch.logisim.util.Strings.S;
 
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.fpga.hdlgenerator.HdlGeneratorFactory;
 import com.cburch.logisim.gui.generic.OptionPane;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
@@ -33,7 +33,7 @@ public static String getErrorMessage(String val) {
         message = message.concat(S.get("variableDoubleUnderscore"));
       }
       if (hdl != null) {
-        message = message.concat(hdl.equals(HDLGeneratorFactory.VHDL)
+        message = message.concat(hdl.equals(HdlGeneratorFactory.VHDL)
                                 ? S.get("variableVHDLKeyword")
                                 : S.get("variableVerilogKeyword"));
       }

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -180,7 +180,7 @@ public static String getIoLabel(int nrPins, int id, IoComponentTypes comp) {
     return comp == IoComponentTypes.LocalBus
        ? ReptarLocalBus.getIoLabel(id)
        : (nrPins > 1) ? S.get("FpgaIoPins", id) : S.get("FpgaIoPin");
-    }
+  }
 
   public static int GetNrOfFPGAPins(IoComponentTypes comp) {
     return getFpgaInOutRequirement(comp)

File: src/main/java/com/cburch/logisim/fpga/data/IoComponentTypes.java
Patch:
@@ -178,8 +178,8 @@ public static String getOutputLabel(int nrPins, int nrOfRows, int nrOfColumns, i
 
   public static String getIoLabel(int nrPins, int id, IoComponentTypes comp) {
     return comp == IoComponentTypes.LocalBus
-           ? ReptarLocalBus.getIoLabel(id)
-           : (nrPins > 1) ? S.get("FpgaIoPins", id) : S.get("FpgaIoPin");
+       ? ReptarLocalBus.getIoLabel(id)
+       : (nrPins > 1) ? S.get("FpgaIoPins", id) : S.get("FpgaIoPin");
     }
 
   public static int GetNrOfFPGAPins(IoComponentTypes comp) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -265,7 +265,7 @@ public static ArrayList<String> getLedArrayConnections(FPGAIOInformationContaine
     for (var pin = 0; pin < info.getNrOfPins(); pin++) {
       connections.pair("pin", pin);
       if (!info.pinIsMapped(pin)) {
-        connections.add("{{assign}} s_{{ins}}{{id}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
+        connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
       } else {
         connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{1}};", info.getPinMap(pin).getHdlSignalName(info.getMapPin(pin)));
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -265,7 +265,7 @@ public static ArrayList<String> getLedArrayConnections(FPGAIOInformationContaine
     for (var pin = 0; pin < info.getNrOfPins(); pin++) {
       connections.pair("pin", pin);
       if (!info.pinIsMapped(pin)) {
-        connections.add("{{assign}} s_{{ins}}{{id}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
+        connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
       } else {
         connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{1}};", info.getPinMap(pin).getHdlSignalName(info.getMapPin(pin)));
       }

File: src/main/java/com/cburch/draw/shapes/Rectangular.java
Patch:
@@ -143,7 +143,7 @@ private Handle[] getHandleArray(HandleGesture gesture) {
       new Handle(this, newX1, newY1),
       new Handle(this, newX0, newY1)
     };
-}
+  }
 
   @Override
   public List<Handle> getHandles(HandleGesture gesture) {

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -144,8 +144,7 @@ static void validateHeader(String line, VariableList inputs, VariableList output
       if (value.equals("|")) {
         if (cur != inputs) throw new IOException(String.format("Line %d: Separator '|' must appear only once.", lineno));
         cur = outputs;
-      }
-      if (value.matches("[a-zA-Z][a-zA-Z_0-9]*")) {
+      } else if (value.matches("[a-zA-Z][a-zA-Z_0-9]*")) {
         cur.add(new Var(value, 1));
       } else {
         var m = NAME_FORMAT.matcher(value);

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -144,8 +144,7 @@ static void validateHeader(String line, VariableList inputs, VariableList output
       if (value.equals("|")) {
         if (cur != inputs) throw new IOException(String.format("Line %d: Separator '|' must appear only once.", lineno));
         cur = outputs;
-      }
-      if (value.matches("[a-zA-Z][a-zA-Z_0-9]*")) {
+      } else if (value.matches("[a-zA-Z][a-zA-Z_0-9]*")) {
         cur.add(new Var(value, 1));
       } else {
         var m = NAME_FORMAT.matcher(value);

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -226,7 +226,7 @@ public boolean CreateDownloadScripts() {
   }
 
   private ArrayList<String> getPinLocStrings() {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     for (final var key : MapInfo.getMappableResources().keySet()) {
       final var map = MapInfo.getMappableResources().get(key);
       for (var i = 0; i < map.getNrOfPins(); i++) {

File: src/main/java/com/cburch/logisim/fpga/file/FileWriter.java
Patch:
@@ -25,7 +25,7 @@ public class FileWriter {
   public static final String ARCHITECTURE_EXTENSION = "_behavior";
 
   public static ArrayList<String> getExtendedLibrary() {
-    final var lines = new LineBuffer();
+    final var lines = LineBuffer.getBuffer();
     lines.add("""
            
                LIBRARY ieee;
@@ -37,7 +37,7 @@ public static ArrayList<String> getExtendedLibrary() {
   }
 
   public static ArrayList<String> getStandardLibrary() {
-    final var lines = new LineBuffer();
+    final var lines = LineBuffer.getBuffer();
     lines.add("""
       
               LIBRARY ieee;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/WithSelectHDLGenerator.java
Patch:
@@ -76,7 +76,7 @@ public WithSelectHDLGenerator setDefault(String binairyAssignValue) {
   }
 
   public ArrayList<String> getHdlCode() {
-    final var contents = (new LineBuffer()).addHdlPairs()
+    final var contents = LineBuffer.getHdlBuffer()
         .pair("sourceName", sourceSignal)
         .pair("destName", destinationSignal)
         .pair("regName", regName)

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -45,7 +45,7 @@ public AdderHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
       Contents.add("""

File: src/main/java/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -63,7 +63,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     Contents.pair("twosComplement", TWOS_COMPLEMENT_STRING);
 
     final var nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -47,7 +47,7 @@ public DividerHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = (new LineBuffer())
+    final var Contents = LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STRING)
             .pair("unsigned", UNSIGNED_STRING)
             .pair("calcBits", CALC_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -48,7 +48,7 @@ public MultiplierHDLGeneratorFactory() {
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents =
-        (new LineBuffer())
+          LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STRING)
             .pair("unsigned", UNSIGNED_STRING)
             .pair("calcBits", CALC_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/arith/NegatorHDLGeneratorFactory.java
Patch:
@@ -34,7 +34,7 @@ public NegatorHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) {
       int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
       Contents.add(

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -46,7 +46,7 @@ public SubtractorHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
       Contents.add("""

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -35,7 +35,7 @@ public bcd2sevensegHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             Segment_a <= s_output_value(0);
             Segment_b <= s_output_value(1);

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -23,7 +23,7 @@ public class bin2bcdHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
   private static final String NR_OF_BITS_STR = "NrOfBits";
   private static final int NR_OF_BITS_ID = -1;
-  
+
   public bin2bcdHDLGeneratorFactory() {
     super();
     myParametersList
@@ -59,7 +59,7 @@ public boolean isHDLSupportedTarget(AttributeSet attrs) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STR);
     final var nrOfBits = attrs.getValue(bin2bcd.ATTR_BinBits);
     final var nrOfPorts = (int) (Math.log10(1 << nrOfBits.getWidth()) + 1.0);
@@ -174,7 +174,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet at
   }
 
   private ArrayList<String> getAdd3Block(String srcName, int srcStartId, String destName, int destStartId, String processName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("srcName", srcName)
         .pair("srcStartId", srcStartId)
         .pair("srcDownTo", (srcStartId - 3))

File: src/main/java/com/cburch/logisim/std/gates/ControlledBufferHDLGenerator.java
Patch:
@@ -21,7 +21,7 @@ public class ControlledBufferHDLGenerator extends InlinedHDLGeneratorFactory {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var triName = HDL.getNetName(componentInfo, 2, true, nets);
     var inpName = "";
     var outpName = "";

File: src/main/java/com/cburch/logisim/std/gates/EvenParityGate.java
Patch:
@@ -24,7 +24,7 @@ class EvenParityGate extends AbstractGate {
   private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer()).add(GetParity(true, nrOfInputs, bitwidth > 1)).empty().get();
+      return LineBuffer.getBuffer().add(GetParity(true, nrOfInputs, bitwidth > 1)).empty().get();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/gates/OddParityGate.java
Patch:
@@ -24,9 +24,7 @@ class OddParityGate extends AbstractGate {
   private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      final var contents = new LineBuffer();
-      contents.add(GetParity(false, nrOfInputs, bitwidth > 1)).empty();
-      return contents.get();
+      return LineBuffer.getBuffer().add(GetParity(false, nrOfInputs, bitwidth > 1)).empty().get();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/gates/PLAHDLGeneratorFactory.java
Patch:
@@ -63,6 +63,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
     return contents.get();
   }
 
+  @Override
   public boolean isHDLSupportedTarget(AttributeSet attrs) {
     return HDL.isVHDL();
   }

File: src/main/java/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -27,7 +27,7 @@ class XnorGate extends AbstractGate {
   private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add(
               isOneHot
                   ? GetOneHot(true, nrOfInputs, bitwidth > 1)

File: src/main/java/com/cburch/logisim/std/gates/XorGate.java
Patch:
@@ -29,7 +29,7 @@ class XorGate extends AbstractGate {
   private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> getLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add(
               isOneHot
                   ? GetOneHot(false, nrOfInputs, bitwidth > 1)

File: src/main/java/com/cburch/logisim/std/io/AbstractSimpleIOHDLGeneratorFactory.java
Patch:
@@ -18,16 +18,16 @@
 import com.cburch.logisim.util.LineBuffer;
 
 public class AbstractSimpleIOHDLGeneratorFactory extends InlinedHDLGeneratorFactory {
-  
+
   private final boolean isInputComponent;
-  
+
   public AbstractSimpleIOHDLGeneratorFactory(boolean isInputComponent) {
     this.isInputComponent = isInputComponent;
   }
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     for (int i = 0; i < componentInfo.nrOfEnds(); i++) {
       if (componentInfo.isEndConnected(i) && isInputComponent) {
         final var pressPassive = componentInfo.getComponent().getAttributeSet().getValue(Button.ATTR_PRESS) ==  Button.BUTTON_PRESS_PASSIVE;

File: src/main/java/com/cburch/logisim/std/io/DotMatrixHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@ protected Attribute<BitWidth> getAttributeColumns() {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist netlist, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     final var colBased = componentInfo.getComponent().getAttributeSet().getValue(DotMatrixBase.ATTR_INPUT_TYPE) == DotMatrixBase.INPUT_COLUMN;
     final var rowBased = componentInfo.getComponent().getAttributeSet().getValue(DotMatrixBase.ATTR_INPUT_TYPE) == DotMatrixBase.INPUT_ROW;
     final var rows = componentInfo.getComponent().getAttributeSet().getValue(getAttributeRows()).getWidth();

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@ public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistC
     final var bubbleBusName = LOCAL_OUTPUT_BUBBLE_BUS_NAME;
     final var signalName = LineBuffer.format("{{1}}{{<}}{{2}}{{3}}{{4}}{{>}}", bubbleBusName, (startId + 6), HDL.vectorLoopId(), startId);
     final var contents =
-        (new LineBuffer()).addHdlPairs()
+        LineBuffer.getHdlBuffer()
             .pair("bubbleBusName", bubbleBusName)
             .pair("sigName", signalName)
             .pair("dpName", HDL.getNetName(componentInfo, HexDigit.DP, true, nets));

File: src/main/java/com/cburch/logisim/std/io/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -195,7 +195,7 @@ public static SortedMap<String, Integer> getInternalSignals(char typeId, int nrO
   }
 
   public static ArrayList<String> GetComponentMap(char typeId, int nrOfRows, int nrOfColumns, int identifier, long FpgaClockFrequency, boolean isActiveLow) {
-    final var componentMap = (new LineBuffer())
+    final var componentMap = LineBuffer.getBuffer()
             .add(HDL.isVHDL()
                 ? "   array" + identifier + " : " + getSpecificHDLName(typeId)
                 : "   " + getSpecificHDLName(typeId));

File: src/main/java/com/cburch/logisim/std/io/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -38,7 +38,7 @@ public LedArrayLedDefaultHDLGeneratorFactory() {
 
   public static ArrayList<String> getGenericMap(int nrOfRows, int nrOfColumns, long fpgaClockFrequency, boolean activeLow) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("nrOfLeds", NR_OF_LEDS_STRING)
             .pair("ledsCount", nrOfRows * nrOfColumns)
             .pair("rows", nrOfRows)
@@ -62,7 +62,7 @@ GENERIC MAP ( {{nrOfLeds}} => {{ledsCount}},
 
   public static ArrayList<String> getPortMap(int id) {
     final var map =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("id", id)
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
             .pair("outs", LedArrayGenericHDLGeneratorFactory.LedArrayOutputs);
@@ -83,7 +83,7 @@ PORT MAP ( {{outs}} => {{outs}}{{id}},
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
             .pair("outs", LedArrayGenericHDLGeneratorFactory.LedArrayOutputs);
 

File: src/main/java/com/cburch/logisim/std/io/LedBarHDLGeneratorFactory.java
Patch:
@@ -28,7 +28,7 @@ protected Attribute<BitWidth> getAttributeColumns() {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist netlist, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     final var isSingleBus = componentInfo.getComponent().getAttributeSet().getValue(LedBar.ATTR_INPUT_TYPE).equals(LedBar.INPUT_ONE_WIRE);
     final var nrOfSegments = componentInfo.getComponent().getAttributeSet().getValue(getAttributeColumns()).getWidth();
     for (var pin = 0; pin < nrOfSegments; pin++) {

File: src/main/java/com/cburch/logisim/std/io/RGBArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -21,7 +21,7 @@
 public class RGBArrayColumnScanningHDLGeneratorFactory extends LedArrayColumnScanningHDLGeneratorFactory {
 
   public static final String HDL_IDENTIFIER =  "RGBArrayColumnScanning";
-  
+
   public RGBArrayColumnScanningHDLGeneratorFactory() {
     super();
     myWires
@@ -42,7 +42,7 @@ public RGBArrayColumnScanningHDLGeneratorFactory() {
 
   public static ArrayList<String> getPortMap(int id) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("addr", LedArrayGenericHDLGeneratorFactory.LedArrayColumnAddress)
             .pair("clock", TickComponentHDLGeneratorFactory.FPGA_CLOCK)
             .pair("insR", LedArrayGenericHDLGeneratorFactory.LedArrayRedInputs)
@@ -82,7 +82,7 @@ PORT MAP ( {{addr }} => {{addr}}{{id}},
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("nrOfLeds", NR_OF_LEDS_STRING)
             .pair("nrOfRows", NR_OF_ROWS_STRING)
             .pair("activeLow", ACTIVE_LOW_STRING)

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -38,7 +38,7 @@ public ReptarLocalBusHDLGeneratorFactory() {
 
   @Override
   public ArrayList<String> getArchitecture(Netlist nets, AttributeSet attrs, String componentName) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) {
       contents
           .pair("compName", componentName)
@@ -80,7 +80,7 @@ port map (
 
   @Override
   public ArrayList<String> getComponentInstantiation(Netlist theNetlist, AttributeSet attrs, String componentName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             COMPONENT LocalBus
                PORT ( SP6_LB_WAIT3_i     : IN  std_logic;
@@ -103,7 +103,7 @@ public ArrayList<String> getComponentInstantiation(Netlist theNetlist, Attribute
 
   @Override
   public ArrayList<String> getEntity(Netlist nets, AttributeSet attrs, String componentName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("compName", componentName)
         .add(FileWriter.getGenerateRemark(componentName, nets.projName()))
         .add(FileWriter.getExtendedLibrary())

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -85,7 +85,7 @@ public SortedMap<String, String> getPortMap(Netlist Nets, Object MapInfo) {
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("seed", SEED_STR)
             .pair("nrOfBits", NR_OF_BITS_STR)
             .pair("GlobalClock", HDLPorts.getClockName(1))

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -67,7 +67,7 @@ public SortedMap<String, String> getPortMap(Netlist Nets, Object MapInfo) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("invertClock", INVERT_CLOCK_STRING)
             .pair("clock", HDLPorts.getClockName(1))
             .pair("Tick", HDLPorts.getTickName(1));

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -37,7 +37,7 @@ public TFFHDLGeneratorFactory() {
 
     @Override
     public ArrayList<String> GetUpdateLogic() {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
           .getWithIndent();
     }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -48,7 +48,7 @@ public BitSelectorHDLGeneratorFactory() {
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("extBits", EXTENDED_BITS_STRING)
             .pair("inBits", INPUT_BITS_STRING)
             .pair("outBits", OUTPUTS_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -38,7 +38,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     final var numOutputs = (1 << nrOfSelectBits);
     var space = " ";

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHDLGeneratorFactory.java
Patch:
@@ -46,7 +46,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     var space = "  ";
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     var numOutputs = (1 << nrOfSelectBits);

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -47,7 +47,7 @@ public void getGenerationTimeWiresPorts(Netlist theNetlist, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     int nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     if (HDL.isVHDL()) {
       contents.add("make_mux : PROCESS( Enable,");

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -73,7 +73,7 @@ public SortedMap<String, String> getPortMap(Netlist nets, Object mapInfo) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("selBits", NR_OF_SELECT_BITS_STRING)
             .pair("inBits", NR_OF_INPUT_BITS_STRING);
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -19,11 +19,11 @@
 public class AbstractGateHDLGenerator extends AbstractHDLGeneratorFactory {
 
   private final boolean isInverter;
-  
+
   public AbstractGateHDLGenerator() {
     this(false);
   }
-  
+
   public AbstractGateHDLGenerator(boolean isInverter) {
     super();
     this.isInverter = isInverter;
@@ -50,7 +50,7 @@ public ArrayList<String> GetLogicFunction(int index) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var nrOfGates = isInverter ? 6 : 4;
     for (var i = 0; i < nrOfGates; i++) {
       contents.addRemarkBlock("Here gate %d is described", i).add(GetLogicFunction(i));

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -57,7 +57,7 @@ public AbstractOctalFlopsHDLGenerator(boolean hasClockEnable) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("CLK", HDLPorts.CLOCK)
         .pair("tick", HDLPorts.TICK)
         .add("""

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -46,7 +46,7 @@ public Ttl74165HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("CK", HDLPorts.CLOCK)
         .pair("Tick", HDLPorts.TICK)
         .add("""

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -44,7 +44,7 @@ public Ttl74175HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("CLK", HDLPorts.CLOCK)
         .pair("tick", HDLPorts.TICK)
         .add("""

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -45,7 +45,7 @@ public Ttl74283HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             oppA   <= "0"&A4&A3&A2&A1;
             oppB   <= "0"&B4&B3&B2&B1;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -43,7 +43,7 @@ public Ttl7447HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .add("""
             Sega  <= segments(0);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -44,7 +44,7 @@ public Ttl7474HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .pair("CLK1", HDLPorts.getClockName(1))
         .pair("CLK2", HDLPorts.getClockName(2))

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -48,7 +48,7 @@ public Ttl7485HDLGenerator() {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .add("""
             oppA   <= A3&A2&A1&A0;

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -25,7 +25,7 @@ public ArrayList<String> getInlinedCode(
       Long componentId,
       NetlistComponent componentInfo,
       String circuitName) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int NrOfPins = componentInfo.nrOfEnds();
     for (int i = 1; i < NrOfPins; i++) {
       if (!componentInfo.isEndConnected(i)) {

File: src/main/java/com/cburch/logisim/std/wiring/ClockHDLGeneratorFactory.java
Patch:
@@ -40,7 +40,7 @@ public class ClockHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
   private static final int PHASE_ID = -3;
   private static final String NR_OF_BITS_STR = "NrOfBits";
   private static final int NR_OF_BITS_ID = -4;
-  
+
   public ClockHDLGeneratorFactory() {
     super("base");
     myParametersList

File: src/test/java/com/cburch/logisim/LineBufferTest.java
Patch:
@@ -299,7 +299,7 @@ public void testDefaultConstructorIsNotPublic()  {
       assertEquals(0, ctor.getParameterCount());
       // FIXME: temporary change!
       // assertTrue(Modifier.isPublic(ctor.getModifiers()));
-      assertTrue(Modifier.isPublic(ctor.getModifiers()));
+      assertFalse(Modifier.isPublic(ctor.getModifiers()));
       found = true;
       break;
     }

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -226,7 +226,7 @@ public boolean CreateDownloadScripts() {
   }
 
   private ArrayList<String> getPinLocStrings() {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     for (final var key : MapInfo.getMappableResources().keySet()) {
       final var map = MapInfo.getMappableResources().get(key);
       for (var i = 0; i < map.getNrOfPins(); i++) {

File: src/main/java/com/cburch/logisim/fpga/file/FileWriter.java
Patch:
@@ -25,7 +25,7 @@ public class FileWriter {
   public static final String ARCHITECTURE_EXTENSION = "_behavior";
 
   public static ArrayList<String> getExtendedLibrary() {
-    final var lines = new LineBuffer();
+    final var lines = LineBuffer.getBuffer();
     lines.add("""
            
                LIBRARY ieee;
@@ -37,7 +37,7 @@ public static ArrayList<String> getExtendedLibrary() {
   }
 
   public static ArrayList<String> getStandardLibrary() {
-    final var lines = new LineBuffer();
+    final var lines = LineBuffer.getBuffer();
     lines.add("""
       
               LIBRARY ieee;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -62,7 +62,7 @@ public boolean generateAllHDLDescriptions(
 
   @Override
   public ArrayList<String> getArchitecture(Netlist theNetlist, AttributeSet attrs, String componentName) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     final var inputs = GetInputList(theNetlist, attrs);
     final var inOuts = GetInOutList(theNetlist, attrs);
     final var outputs = GetOutputList(theNetlist, attrs);
@@ -370,7 +370,7 @@ public ArrayList<String> GetComponentDeclarationSection(Netlist TheNetlist, Attr
 
   @Override
   public ArrayList<String> getComponentInstantiation(Netlist theNetlist, AttributeSet attrs, String componentName) {
-    var Contents = new LineBuffer();
+    var Contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) Contents.add(GetVHDLBlackBox(theNetlist, attrs, componentName, false));
     return Contents.get();
   }
@@ -526,7 +526,7 @@ public ArrayList<String> getEntity(
       Netlist theNetlist,
       AttributeSet attrs,
       String componentName) {
-    var Contents = new LineBuffer();
+    var Contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) {
       Contents.add(FileWriter.getGenerateRemark(componentName, theNetlist.projName()))
           .add(FileWriter.getExtendedLibrary())

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -211,7 +211,7 @@ public SortedMap<String, Integer> GetInputList(Netlist theNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var nrOfClockTrees = theNetlist.numberOfClockTrees();
     /* First we process all components */
     contents.addRemarkBlock("Here all signal adaptations are performed");

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/WithSelectHDLGenerator.java
Patch:
@@ -76,7 +76,7 @@ public WithSelectHDLGenerator setDefault(String binairyAssignValue) {
   }
 
   public ArrayList<String> getHdlCode() {
-    final var contents = (new LineBuffer()).addHdlPairs()
+    final var contents = LineBuffer.getHdlBuffer()
         .pair("sourceName", sourceSignal)
         .pair("destName", destinationSignal)
         .pair("regName", regName)

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -51,7 +51,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
       Contents.add("""

File: src/main/java/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -68,7 +68,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     Contents.pair("twosComplement", TWOS_COMPLEMENT_STRING);
 
     final var nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -51,7 +51,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = (new LineBuffer())
+    final var Contents = LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STRING)
             .pair("unsigned", UNSIGNED_STRING)
             .pair("calcBits", CALC_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -53,7 +53,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents =
-        (new LineBuffer())
+          LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STRING)
             .pair("unsigned", UNSIGNED_STRING)
             .pair("calcBits", CALC_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/arith/NegatorHDLGeneratorFactory.java
Patch:
@@ -40,7 +40,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) {
       int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
       Contents.add(

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -52,7 +52,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
       Contents.add("""

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -47,7 +47,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             Segment_a <= s_output_value(0);
             Segment_b <= s_output_value(1);

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -25,7 +25,7 @@ public class bin2bcdHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
   private static final String NR_OF_BITS_STR = "NrOfBits";
   private static final int NR_OF_BITS_ID = -1;
-  
+
   public bin2bcdHDLGeneratorFactory() {
     super();
     myParametersList
@@ -89,7 +89,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("nrOfBits", NR_OF_BITS_STR);
     final var nrOfBits = attrs.getValue(bin2bcd.ATTR_BinBits);
     final var nrOfPorts = (int) (Math.log10(1 << nrOfBits.getWidth()) + 1.0);
@@ -204,7 +204,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet at
   }
 
   private ArrayList<String> getAdd3Block(String srcName, int srcStartId, String destName, int destStartId, String processName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("srcName", srcName)
         .pair("srcStartId", srcStartId)
         .pair("srcDownTo", (srcStartId - 3))

File: src/main/java/com/cburch/logisim/std/gates/ControlledBufferHDLGenerator.java
Patch:
@@ -21,7 +21,7 @@ public class ControlledBufferHDLGenerator extends InlinedHDLGeneratorFactory {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var triName = HDL.getNetName(componentInfo, 2, true, nets);
     var inpName = "";
     var outpName = "";

File: src/main/java/com/cburch/logisim/std/gates/EvenParityGate.java
Patch:
@@ -24,7 +24,7 @@ class EvenParityGate extends AbstractGate {
   private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer()).add(GetParity(true, nrOfInputs, bitwidth > 1)).empty().get();
+      return LineBuffer.getBuffer().add(GetParity(true, nrOfInputs, bitwidth > 1)).empty().get();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/gates/OddParityGate.java
Patch:
@@ -24,7 +24,7 @@ class OddParityGate extends AbstractGate {
   private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      final var contents = new LineBuffer();
+      final var contents = LineBuffer.getBuffer();
       contents.add(GetParity(false, nrOfInputs, bitwidth > 1)).empty();
       return contents.get();
     }

File: src/main/java/com/cburch/logisim/std/gates/PLAHDLGeneratorFactory.java
Patch:
@@ -44,7 +44,7 @@ private static String zeros(int sz) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var tt = attrs.getValue(PLA.ATTR_TABLE);
     final var outSz = attrs.getValue(PLA.ATTR_OUT_WIDTH).getWidth();
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -27,7 +27,7 @@ class XnorGate extends AbstractGate {
   private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add(
               isOneHot
                   ? GetOneHot(true, nrOfInputs, bitwidth > 1)

File: src/main/java/com/cburch/logisim/std/gates/XorGate.java
Patch:
@@ -29,7 +29,7 @@ class XorGate extends AbstractGate {
   private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator {
     @Override
     public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add(
               isOneHot
                   ? GetOneHot(false, nrOfInputs, bitwidth > 1)

File: src/main/java/com/cburch/logisim/std/io/AbstractSimpleIOHDLGeneratorFactory.java
Patch:
@@ -18,16 +18,16 @@
 import com.cburch.logisim.util.LineBuffer;
 
 public class AbstractSimpleIOHDLGeneratorFactory extends InlinedHDLGeneratorFactory {
-  
+
   private final boolean isInputComponent;
-  
+
   public AbstractSimpleIOHDLGeneratorFactory(boolean isInputComponent) {
     this.isInputComponent = isInputComponent;
   }
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     for (int i = 0; i < componentInfo.nrOfEnds(); i++) {
       if (componentInfo.isEndConnected(i) && isInputComponent) {
         final var pressPassive = componentInfo.getComponent().getAttributeSet().getValue(Button.ATTR_PRESS) ==  Button.BUTTON_PRESS_PASSIVE;

File: src/main/java/com/cburch/logisim/std/io/DotMatrixHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@ protected Attribute<BitWidth> getAttributeColumns() {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist netlist, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     final var colBased = componentInfo.getComponent().getAttributeSet().getValue(DotMatrixBase.ATTR_INPUT_TYPE) == DotMatrixBase.INPUT_COLUMN;
     final var rowBased = componentInfo.getComponent().getAttributeSet().getValue(DotMatrixBase.ATTR_INPUT_TYPE) == DotMatrixBase.INPUT_ROW;
     final var rows = componentInfo.getComponent().getAttributeSet().getValue(getAttributeRows()).getWidth();

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@ public ArrayList<String> getInlinedCode(Netlist nets, Long componentId, NetlistC
     final var bubbleBusName = LOCAL_OUTPUT_BUBBLE_BUS_NAME;
     final var signalName = LineBuffer.format("{{1}}{{<}}{{2}}{{3}}{{4}}{{>}}", bubbleBusName, (startId + 6), HDL.vectorLoopId(), startId);
     final var contents =
-        (new LineBuffer()).addHdlPairs()
+        LineBuffer.getHdlBuffer()
             .pair("bubbleBusName", bubbleBusName)
             .pair("sigName", signalName)
             .pair("dpName", HDL.getNetName(componentInfo, HexDigit.DP, true, nets));

File: src/main/java/com/cburch/logisim/std/io/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -195,7 +195,7 @@ public static SortedMap<String, Integer> getInternalSignals(char typeId, int nrO
   }
 
   public static ArrayList<String> GetComponentMap(char typeId, int nrOfRows, int nrOfColumns, int identifier, long FpgaClockFrequency, boolean isActiveLow) {
-    final var componentMap = (new LineBuffer())
+    final var componentMap = LineBuffer.getBuffer()
             .add(HDL.isVHDL()
                 ? "   array" + identifier + " : " + getSpecificHDLName(typeId)
                 : "   " + getSpecificHDLName(typeId));

File: src/main/java/com/cburch/logisim/std/io/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -36,7 +36,7 @@ public LedArrayLedDefaultHDLGeneratorFactory() {
 
   public static ArrayList<String> getGenericMap(int nrOfRows, int nrOfColumns, long fpgaClockFrequency, boolean activeLow) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("nrOfLeds", NR_OF_LEDS_STRING)
             .pair("ledsCount", nrOfRows * nrOfColumns)
             .pair("rows", nrOfRows)
@@ -60,7 +60,7 @@ GENERIC MAP ( {{nrOfLeds}} => {{ledsCount}},
 
   public static ArrayList<String> getPortMap(int id) {
     final var map =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("id", id)
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
             .pair("outs", LedArrayGenericHDLGeneratorFactory.LedArrayOutputs);
@@ -95,7 +95,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
             .pair("outs", LedArrayGenericHDLGeneratorFactory.LedArrayOutputs);
 

File: src/main/java/com/cburch/logisim/std/io/LedBarHDLGeneratorFactory.java
Patch:
@@ -28,7 +28,7 @@ protected Attribute<BitWidth> getAttributeColumns() {
 
   @Override
   public ArrayList<String> getInlinedCode(Netlist netlist, Long componentId, NetlistComponent componentInfo, String circuitName) {
-    final var contents = (new LineBuffer()).addHdlPairs();
+    final var contents = LineBuffer.getHdlBuffer();
     final var isSingleBus = componentInfo.getComponent().getAttributeSet().getValue(LedBar.ATTR_INPUT_TYPE).equals(LedBar.INPUT_ONE_WIRE);
     final var nrOfSegments = componentInfo.getComponent().getAttributeSet().getValue(getAttributeColumns()).getWidth();
     for (var pin = 0; pin < nrOfSegments; pin++) {

File: src/main/java/com/cburch/logisim/std/io/RGBArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -22,7 +22,7 @@
 public class RGBArrayColumnScanningHDLGeneratorFactory extends LedArrayColumnScanningHDLGeneratorFactory {
 
   public static final String HDL_IDENTIFIER =  "RGBArrayColumnScanning";
-  
+
   public RGBArrayColumnScanningHDLGeneratorFactory() {
     super();
     myWires
@@ -33,7 +33,7 @@ public RGBArrayColumnScanningHDLGeneratorFactory() {
 
   public static ArrayList<String> getPortMap(int id) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("addr", LedArrayGenericHDLGeneratorFactory.LedArrayColumnAddress)
             .pair("clock", TickComponentHDLGeneratorFactory.FPGA_CLOCK)
             .pair("insR", LedArrayGenericHDLGeneratorFactory.LedArrayRedInputs)
@@ -93,7 +93,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("nrOfLeds", NR_OF_LEDS_STRING)
             .pair("nrOfRows", NR_OF_ROWS_STRING)
             .pair("activeLow", ACTIVE_LOW_STRING)

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -24,7 +24,7 @@ public class ReptarLocalBusHDLGeneratorFactory extends AbstractHDLGeneratorFacto
 
   @Override
   public ArrayList<String> getArchitecture(Netlist nets, AttributeSet attrs, String componentName) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     if (HDL.isVHDL()) {
       contents
           .pair("compName", componentName)
@@ -66,7 +66,7 @@ port map (
 
   @Override
   public ArrayList<String> getComponentInstantiation(Netlist theNetlist, AttributeSet attrs, String componentName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             COMPONENT LocalBus
                PORT ( SP6_LB_WAIT3_i     : IN  std_logic;
@@ -89,7 +89,7 @@ public ArrayList<String> getComponentInstantiation(Netlist theNetlist, Attribute
 
   @Override
   public ArrayList<String> getEntity(Netlist nets, AttributeSet attrs, String componentName) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .pair("compName", componentName)
         .add(FileWriter.getGenerateRemark(componentName, nets.projName()))
         .add(FileWriter.getExtendedLibrary())

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -118,7 +118,7 @@ public SortedMap<String, Integer> GetMemList(AttributeSet attrs) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var be = attrs.getValue(RamAttributes.ATTR_ByteEnables);
     final var byteEnables = be != null && be.equals(RamAttributes.BUS_WITH_BYTEENABLES);
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -74,7 +74,7 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("seed", SEED_STR)
             .pair("nrOfBits", NR_OF_BITS_STR)
             .addRemarkBlock("This is a multicycle implementation of the Random Component")

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -53,7 +53,7 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("invertClock", INVERT_CLOCK_STRING);
     if (HDL.isVHDL()) {
       contents.add("""

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -58,7 +58,7 @@ public Map<String, Integer> GetInputPorts() {
 
     @Override
     public ArrayList<String> GetUpdateLogic() {
-      return (new LineBuffer())
+      return LineBuffer.getBuffer()
           .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
           .getWithIndent();
     }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -53,7 +53,7 @@ public SortedMap<String, Integer> GetInputList(Netlist theNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("extBits", EXTENDED_BITS_STRING)
             .pair("inBits", INPUT_BITS_STRING)
             .pair("outBits", OUTPUTS_BITS_STRING);

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@ public SortedMap<String, Integer> GetInputList(Netlist theNetList, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     final var numOutputs = (1 << nrOfSelectBits);
     var space = " ";

File: src/main/java/com/cburch/logisim/std/plexers/DemultiplexerHDLGeneratorFactory.java
Patch:
@@ -43,7 +43,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     var space = "  ";
     final var nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     var numOutputs = (1 << nrOfSelectBits);

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -44,7 +44,7 @@ public SortedMap<String, Integer> GetInputList(Netlist theNetList, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     int nrOfSelectBits = attrs.getValue(PlexersLibrary.ATTR_SELECT).getWidth();
     if (HDL.isVHDL()) {
       contents.add("make_mux : PROCESS( Enable,");

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -51,7 +51,7 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = (new LineBuffer())
+    final var contents = LineBuffer.getBuffer()
             .pair("selBits", NR_OF_SELECT_BITS_STRING)
             .pair("inBits", NR_OF_INPUT_BITS_STRING);
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -51,7 +51,7 @@ public ArrayList<String> GetLogicFunction(int index) {
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     final var nrOfGates = (IsInverter()) ? 6 : 4;
     for (var i = 0; i < nrOfGates; i++) {
       contents.addRemarkBlock("Here gate %d is described", i).add(GetLogicFunction(i));

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -66,7 +66,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             enable <= tick and NOT(nCLKen);
             nexts  <= D7&D6&D5&D4&D3&D2&D1&D0 WHEN enable = '1' ELSE state;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -61,7 +61,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             Q7  <= CurState(0);
             Q7n <= NOT(CurState(0));

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -59,7 +59,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             NextState <= CurState WHEN tick = '0' ELSE
                          D4&D3&D2&D1;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -58,7 +58,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    return (new LineBuffer())
+    return LineBuffer.getBuffer()
         .add("""
             oppA   <= "0"&A4&A3&A2&A1;
             oppB   <= "0"&B4&B3&B2&B1;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -56,7 +56,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .add("""
             Sega  <= segments(0,

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -60,7 +60,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .add("""
             Q1  <= state1;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -61,7 +61,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
+    final var contents = LineBuffer.getBuffer();
     return contents
         .add("""
             oppA   <= A3&A2&A1&A0;

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -25,7 +25,7 @@ public ArrayList<String> getInlinedCode(
       Long componentId,
       NetlistComponent componentInfo,
       String circuitName) {
-    final var Contents = new LineBuffer();
+    final var Contents = LineBuffer.getBuffer();
     int NrOfPins = componentInfo.nrOfEnds();
     for (int i = 1; i < NrOfPins; i++) {
       if (!componentInfo.isEndConnected(i)) {

File: src/main/java/com/cburch/logisim/std/wiring/ClockHDLGeneratorFactory.java
Patch:
@@ -39,7 +39,7 @@ public class ClockHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
   private static final int PHASE_ID = -3;
   private static final String NR_OF_BITS_STR = "NrOfBits";
   private static final int NR_OF_BITS_ID = -4;
-  
+
   public ClockHDLGeneratorFactory() {
     super("base");
     myParametersList
@@ -76,7 +76,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents =
-        (new LineBuffer())
+        LineBuffer.getBuffer()
             .pair("phase", PHASE_STR)
             .pair("nrOfBits", NR_OF_BITS_STR)
             .pair("lowTick", LOW_TICK_STR)

File: src/test/java/com/cburch/logisim/LineBufferTest.java
Patch:
@@ -299,7 +299,7 @@ public void testDefaultConstructorIsNotPublic()  {
       assertEquals(0, ctor.getParameterCount());
       // FIXME: temporary change!
       // assertTrue(Modifier.isPublic(ctor.getModifiers()));
-      assertTrue(Modifier.isPublic(ctor.getModifiers()));
+      assertFalse(Modifier.isPublic(ctor.getModifiers()));
       found = true;
       break;
     }

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -42,8 +42,10 @@ public class LineBuffer implements RandomAccess {
 
   /**
    * Default constructor.
+   *
+   * @deprecated use getBuffer() instead
    */
-  protected LineBuffer() {
+  public LineBuffer() {
     super();
     addDefaultPairs();
   }

File: src/test/java/com/cburch/logisim/LineBufferTest.java
Patch:
@@ -292,10 +292,10 @@ public void testDefaultConstructorIsNotPublic()  {
     assertTrue(ctors.length > 0);
 
     var found = false;
-    for(final var ctor : ctors) {
+    for (final var ctor : ctors) {
       // we care default, argumentless ctor only.
       if (!ctor.getDeclaringClass().equals(LineBuffer.class)) continue;
-      if(ctor.getParameterCount() != 0) continue;
+      if (ctor.getParameterCount() != 0) continue;
       assertEquals(0, ctor.getParameterCount());
       assertFalse(Modifier.isPublic(ctor.getModifiers()));
       found = true;

File: src/main/java/com/cburch/logisim/std/memory/CounterAttributes.java
Patch:
@@ -28,7 +28,7 @@ public CounterAttributes() {
     base =
         AttributeSets.fixedSet(
             new Attribute<?>[] {
-              Counter.ATTR_BITS,
+              StdAttr.WIDTH,
               Counter.ATTR_MAX,
               Counter.ATTR_ON_GOAL,
               StdAttr.EDGE_TRIGGER,

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -14,6 +14,7 @@
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.HDLParameters;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;
@@ -31,7 +32,7 @@ public SubtractorHDLGeneratorFactory() {
     super();
     myParametersList
         .addBusOnly(NR_OF_BITS_STRING, NR_OF_BITS_ID)
-        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID, -1);
+        .add(EXTENDED_BITS_STRING, EXTENDED_BITS_ID, HDLParameters.MAP_OFFSET, 1);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -34,6 +34,7 @@ public class AbstractHDLGeneratorFactory implements HDLGeneratorFactory {
 
   private final String subDirectoryName;
   protected final HDLParameters myParametersList = new HDLParameters();
+  protected final HDLWires myWires = new HDLWires();
 
   public AbstractHDLGeneratorFactory() {
     final var className = getClass().toString().replace('.', ':').replace(' ', ':'); 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDLParameters.java
Patch:
@@ -285,12 +285,12 @@ public HDLParameters add(String name, int id) {
    *                   (1) An Attribute<AttributeOption>, the selected attribute
    *                   (2) A Map from AttributeOption to Integer values
    *                   Example:
-   *                <pre>add("ExampleOption", -1, MAP_ATTRIBUTE_OPTION, Comparator.MODE_ATTR, 
+   *                    add("ExampleOption", -1, MAP_ATTRIBUTE_OPTION, Comparator.MODE_ATTR, 
    *                     new HashMap<AttributeOption, Integer>() {{ 
    *                       put(Comparator.UNSIGNED_OPTION, 0); 
    *                       put(Comparator.SIGNED_OPTION, 1); 
    *                     }}
-   *                    );</pre>
+   *                    );
    *                    
    * ln2: Map the log base 2 value of the addition of all args to the generic, example:
    *      add("exampleln2", -1, MAP_LN2, Clock.ATTR_HIGH, Clock.ATTR_LOW)                    

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDLParameters.java
Patch:
@@ -285,12 +285,12 @@ public HDLParameters add(String name, int id) {
    *                   (1) An Attribute<AttributeOption>, the selected attribute
    *                   (2) A Map from AttributeOption to Integer values
    *                   Example:
-   *                   add("ExampleOption", -1, MAP_ATTRIBUTE_OPTION, Comparator.MODE_ATTR, 
+   *                <pre>add("ExampleOption", -1, MAP_ATTRIBUTE_OPTION, Comparator.MODE_ATTR, 
    *                     new HashMap<AttributeOption, Integer>() {{ 
    *                       put(Comparator.UNSIGNED_OPTION, 0); 
    *                       put(Comparator.SIGNED_OPTION, 1); 
    *                     }}
-   *                    );
+   *                    );</pre>
    *                    
    * ln2: Map the log base 2 value of the addition of all args to the generic, example:
    *      add("exampleln2", -1, MAP_LN2, Clock.ATTR_HIGH, Clock.ATTR_LOW)                    

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -15,6 +15,7 @@
 import com.cburch.logisim.fpga.gui.Reporter;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDL;
+import com.cburch.logisim.fpga.hdlgenerator.HDLParameters;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;
 import java.util.SortedMap;
@@ -27,7 +28,7 @@ public class bin2bcdHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
   
   public bin2bcdHDLGeneratorFactory() {
     super();
-    myParametersList.add(NR_OF_BITS_STR, NR_OF_BITS_ID, bin2bcd.ATTR_BinBits);
+    myParametersList.add(NR_OF_BITS_STR, NR_OF_BITS_ID, HDLParameters.MAP_INT_ATTRIBUTE, bin2bcd.ATTR_BinBits);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/GateAttributes.java
Patch:
@@ -21,7 +21,7 @@
 import java.awt.Font;
 import java.util.List;
 
-class GateAttributes extends AbstractAttributeSet {
+public class GateAttributes extends AbstractAttributeSet {
   static final int MAX_INPUTS = 64;
   static final int DELAY = 1;
 

File: src/main/java/com/cburch/logisim/std/gates/NegateAttribute.java
Patch:
@@ -14,9 +14,8 @@
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.Attributes;
 import com.cburch.logisim.data.Direction;
-import com.cburch.logisim.util.StringUtil;
 
-class NegateAttribute extends Attribute<Boolean> {
+public class NegateAttribute extends Attribute<Boolean> {
   private static final Attribute<Boolean> BOOLEAN_ATTR = Attributes.forBoolean("negateDummy");
 
   final int index;

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,9 +207,7 @@ public static void setLocale(Locale loc) {
 
   private static final ArrayList<LocaleManager> managers = new ArrayList<>();
 
-  private static final String DATE_FORMAT = S.get("dateFormat");
-
-  public static final SimpleDateFormat parserSDF = new SimpleDateFormat(LocaleManager.DATE_FORMAT);
+  public static final SimpleDateFormat parserSDF = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ");
 
   private static final ArrayList<LocaleListener> listeners = new ArrayList<>();
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -63,7 +63,7 @@ public LocalePreference() {
       super("locale", "");
 
       String localeStr = this.get();
-      if (localeStr != null && !localeStr.equals("")) {
+      if (!("".equals(localeStr))) {
         LocaleManager.setLocale(new Locale(localeStr));
       }
       LocaleManager.addLocaleListener(myListener);

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -207,7 +207,8 @@ public static void setLocale(Locale loc) {
 
   private static final ArrayList<LocaleManager> managers = new ArrayList<>();
 
-  private static final String DATE_FORMAT = S.get("dateFormat");
+  // FIXME: we should NOT use own format const, but utilise what platform provides!
+  private static final String DATE_FORMAT = "yyyy-MM-dd HH:mm:mm:sss";
 
   public static final SimpleDateFormat parserSDF = new SimpleDateFormat(LocaleManager.DATE_FORMAT);
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDL.java
Patch:
@@ -164,11 +164,11 @@ public static String shiftrOperator(String signal, int with, int nrOfBits, boole
     if (arithmetic) {
       return isVHDL()
         ? LineBuffer.format("({{1}} DOWNTO 0 => {{2}}({{1}})) & {{2}}{{3}}", with - 1, signal, splitVector(with - 1, with - nrOfBits))
-        : LineBuffer.format("{{{{1}}{{{2}}[{{1}}-1]}},{{2}}{{3}}}", with, signal, splitVector(with - 1, with - nrOfBits));
+        : LineBuffer.format("{ {{{1}}{{{2}}[{{1}}-1]}},{{2}}{{3}}}", with, signal, splitVector(with - 1, with - nrOfBits));
     } else {
       return isVHDL()
         ? LineBuffer.format("{{1}}{{2}}{{1}} & {{3}}{{4}", nrOfBits == 1 ? "'" : "\"", "0".repeat(nrOfBits), signal, splitVector(with - 1, with - nrOfBits))
-        : LineBuffer.format("{{{{1}}{1'b0}},{{2}}{{3}}}", with, signal, splitVector(with - 1, with - nrOfBits));
+        : LineBuffer.format("{ {{{1}}{1'b0}},{{2}}{{3}}}", with, signal, splitVector(with - 1, with - nrOfBits));
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -152,7 +152,6 @@ static void doPrint(File file) {
   private static final String ARG_TEST_CIRC_GEN_LONG = "new-file-format";
   private static final String ARG_LOCALE_SHORT = "o";
   private static final String ARG_LOCALE_LONG = "locale";
-  private static final String ARG_CLEAR_PREFS_SHORT = "r";
   private static final String ARG_CLEAR_PREFS_LONG = "clear-prefs";
   private static final String ARG_SUBSTITUTE_SHORT = "s";
   private static final String ARG_SUBSTITUTE_LONG = "substitute";
@@ -342,11 +341,11 @@ public static Startup parseArgs(String[] args) {
     // see whether we'll be using any graphics
     var isTty = false;
     var shallClearPreferences = false;
-    if (cmd.hasOption(ARG_TTY_SHORT) || cmd.hasOption(ARG_TEST_FGPA_SHORT)) {
+    if (cmd.hasOption(ARG_TTY_SHORT) || cmd.hasOption(ARG_TEST_FGPA_SHORT) || cmd.hasOption(ARG_TEST_FGPA_LONG)) {
       isTty = true;
       Main.headless = true;
     } else {
-      shallClearPreferences = cmd.hasOption(ARG_CLEAR_PREFS_SHORT);
+      shallClearPreferences = cmd.hasOption(ARG_CLEAR_PREFS_LONG);
     }
 
     if (!isTty) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/InlinedHDLGeneratorFactory.java
Patch:
@@ -43,7 +43,7 @@ public ArrayList<String> getComponentMap(Netlist nets, Long componentId, Netlist
 
   @Override
   public String getComponentStringIdentifier() {
-    throw new IllegalAccessError("BUG: getComponentStringIdentifier not supported");
+    return "Logisim_InLined";
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -246,7 +246,7 @@ public ArrayList<String> GetHDLWiring(Netlist TheNets) {
                   .append(bit)
                   .append(HDL.BracketClose());
             } else {
-              OneLine.append(BUS_NAME).append(TheNets.getNetId(ThisNet));
+              OneLine.append(NET_NAME).append(TheNets.getNetId(ThisNet));
             }
             while (OneLine.length() < SIGNAL_ALLIGNMENT_SIZE) OneLine.append(" ");
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDL.java
Patch:
@@ -124,7 +124,7 @@ public static String getConstantVector(long value, int nrOfBits) {
     final var bitString = new StringBuffer();
     var mask = 1L << (nrOfBits - 1);
     if (HDL.isVHDL()) 
-      bitString.append('"');
+      bitString.append(nrOfBits == 1 ? '\'' : '"');
     else
       bitString.append(LineBuffer.format("{{1}}'b", nrOfBits));
     while (mask != 0) {
@@ -133,7 +133,7 @@ public static String getConstantVector(long value, int nrOfBits) {
       // fix in case of a 64-bit vector
       if (mask < 0) mask &= Long.MAX_VALUE;
     }
-    if (HDL.isVHDL()) bitString.append('"');
+    if (HDL.isVHDL()) bitString.append(nrOfBits == 1 ? '\'' : '"');
     return bitString.toString();
   }
 

File: src/main/java/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -20,7 +20,6 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Value;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -159,10 +158,9 @@ public static boolean tick(CircuitState circState, int ticks, Component comp) {
   public static final Clock FACTORY = new Clock();
 
   private static final Icon toolIcon = Icons.getIcon("clock.gif");
-  private static final HDLGeneratorFactory HDL_FACTORY = new ClockHDLGeneratorFactory();
 
   public Clock() {
-    super(_ID, S.getter("clockComponent"), HDL_FACTORY);
+    super(_ID, S.getter("clockComponent"), new ClockHDLGeneratorFactory());
     setAttributes(
         new Attribute[] {
           StdAttr.FACING, ATTR_HIGH, ATTR_LOW, ATTR_PHASE, StdAttr.LABEL, StdAttr.LABEL_LOC, StdAttr.LABEL_FONT

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -22,7 +22,6 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -126,10 +125,9 @@ public long GetConstant(AttributeSet attrs) {
   private static final Font DEFAULT_FONT = new Font("monospaced", Font.PLAIN, 12);
 
   private static final List<Attribute<?>> ATTRIBUTES = Arrays.asList(StdAttr.FACING, StdAttr.WIDTH, ATTR_VALUE);
-  private static final HDLGeneratorFactory HDL_GENERATOR = new ConstantHDLGeneratorFactory();
 
   public Constant() {
-    super(_ID, S.getter("constantComponent"), HDL_GENERATOR);
+    super(_ID, S.getter("constantComponent"), new ConstantHDLGeneratorFactory());
     setFacingAttribute(StdAttr.FACING);
     setKeyConfigurator(
         JoinedConfigurator.create(

File: src/main/java/com/cburch/logisim/std/wiring/DoNotConnect.java
Patch:
@@ -16,7 +16,6 @@
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.InlinedHdlGeneratorFactory;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -35,10 +34,9 @@ public class DoNotConnect extends InstanceFactory {
    * Identifier value must MUST be unique string among all tools.
    */
   public static final String _ID = "NoConnect";
-  private static final HDLGeneratorFactory HDL_GENERATOR = new InlinedHdlGeneratorFactory();
 
   public DoNotConnect() {
-    super(_ID, S.getter("noConnectionComponent"), HDL_GENERATOR);
+    super(_ID, S.getter("noConnectionComponent"), new InlinedHdlGeneratorFactory());
     setIconName("noconnect.gif");
     setAttributes(new Attribute[] {StdAttr.WIDTH}, new Object[] {BitWidth.ONE});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -274,7 +274,7 @@ public static ArrayList<String> getLedArrayConnections(FPGAIOInformationContaine
     for (var pin = 0; pin < info.getNrOfPins(); pin++) {
       connections.pair("pin", pin);
       if (!info.pinIsMapped(pin)) {
-        connections.add("{{assign}} s_{{ins}}{{id}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
+        connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{0b}};");
       } else {
         connections.add("{{assign}} s_{{ins}}{{id}}{{<}}{{pin}}{{>}} {{=}} {{1}};", info.getPinMap(pin).getHdlSignalName(info.getMapPin(pin)));
       }

File: src/main/java/com/cburch/logisim/std/io/PortIO.java
Patch:
@@ -491,7 +491,7 @@ public void propagate(InstanceState state) {
       var pinIndexCorrection = -BitWidth.MAXWIDTH;
       for (var pinIndex = 0; pinIndex < nrOfPins; pinIndex++) {
         if ((pinIndex % BitWidth.MAXWIDTH) == 0) {
-          if (portType.equals(INOUTME))
+          if ((portType.equals(INOUTME)) && (pinIndex > 0))
             enableValue = state.getPortValue(currentPortIndex++);
           inputValue = state.getPortValue(currentPortIndex++);
           pinIndexCorrection += BitWidth.MAXWIDTH;

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -34,7 +34,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
         .setDefault(0L);
     for (var addr = 0L; addr < (1L << addressWidth); addr++) {
       final var romValue = romContents.get(addr); 
-      if (romValue != 0) generator.add(addr, romValue);
+      if (romValue != 0L) generator.add(addr, romValue);
     }
     return (new LineBuffer()).add(generator.getHdlCode()).getWithIndent(3);
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/WithSelectHDLGenerator.java
Patch:
@@ -65,12 +65,12 @@ public WithSelectHDLGenerator add(String binairySelectValue, Long assignValue) {
     return this;
   }
   
-  public WithSelectHDLGenerator addDefault(Long assignValue) {
+  public WithSelectHDLGenerator setDefault(Long assignValue) {
     defaultValue = assignValue;
     return this;
   }
   
-  public WithSelectHDLGenerator addDefault(String binairyAssignValue) {
+  public WithSelectHDLGenerator setDefault(String binairyAssignValue) {
     defaultValue = binairyStringToInt(binairyAssignValue);
     return this;
   }

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -51,7 +51,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
           .add(12L, "0111001")
           .add(13L, "1011110")
           .add(14L, "1111001")
-          .addDefault("1110001");
+          .setDefault("1110001");
       contents.add(generator.getHdlCode());
     } else {
       contents.add("{{assign}} {{sigName}} {{=}} {{1}};", HDL.GetZeroVector(7, true));

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -35,7 +35,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
     contents.add("");
     if (componentInfo.isEndConnected(HexDigit.HEX)) {
       final var generator = new WithSelectHDLGenerator(componentInfo.getComponent().getAttributeSet().getValue(StdAttr.LABEL),
-          HDL.getBusName(componentInfo, HexDigit.HEX, nets), 4, signalName , 7);
+          HDL.getBusName(componentInfo, HexDigit.HEX, nets), 4, signalName, 7);
       generator.add(0, "0111111");
       generator.add(1, "0000110");
       generator.add(2, "1011011");

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -654,12 +654,14 @@ private static RC handleArgTestFpgaParseArg(Startup startup, String argVal) {
       startup.testCircuitHdlOnly = true;
       return RC.OK;
     }
+
     try {
       startup.testTickFrequency = Integer.parseUnsignedInt(argVal);
       return RC.OK;
     } catch (NumberFormatException ex) {
-      logger.error(S.get("argTestInvalidArguments"));
+      logger.error(S.get("argTestInvalidTickFrequency"));
     }
+
     return RC.QUIT;
   }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDL.java
Patch:
@@ -78,7 +78,7 @@ public static String equalOperator() {
   }
 
   public static String notEqualOperator() {
-    return isVHDL() ? " \= " : "!=";
+    return isVHDL() ? " \\= " : "!=";
   }
 
   public static String greaterOperator(String signalOne, String signalTwo, boolean signed, boolean equal) {
@@ -96,7 +96,7 @@ public static String lessOperator(String signalOne, String signalTwo, boolean si
                 ? "STD_LOGIC_VECTOR("+ (signed ? "SIGNED" : "UNSIGNED") +"("+ signalOne +")"
                 : (signed ? "$signed("+ signalOne +")" : signalOne))
             + (equal ? "<=" : "<")
-            + isVHDL()
+            + (isVHDL()
                 ? (signed ? "SIGNED" : "UNSIGNED") +"("+ signalTwo +"))"
                 : (signed ? "$signed("+ signalTwo +")" : signalTwo));
   }

File: src/main/java/com/cburch/draw/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelAddAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelChangeAttributeAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelDeleteHandleAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelEditTextAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelInsertHandleAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelMoveHandleAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelRemoveAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelReorderAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/actions/ModelTranslateAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/ActionDispatcher.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/Canvas.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/CanvasListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/CanvasTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/SelectionEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/canvas/SelectionListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/gui/AttrTableDrawManager.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/gui/AttrTableToolModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/gui/SelectionAttributes.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/icons/DrawCurveIcon.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/icons/DrawPolylineIcon.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/icons/DrawShapeIcon.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/AttributeMapKey.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/CanvasModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/CanvasModelEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/CanvasModelListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/CanvasObject.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/DrawingOverlaps.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/HandleGesture.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/model/ReorderRequest.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Curve.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/CurveUtil.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/DrawAttr.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/FillableCanvasObject.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Line.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/LineUtil.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/PolyUtil.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Rectangular.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/SvgCreator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/SvgReader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/AbstractToolbarModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/Toolbar.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarButton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarClickableItem.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarItem.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarModelEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarModelListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/toolbar/ToolbarSeparator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/AbstractTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/CurveTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/DrawingAttributeSet.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/LineTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/OvalTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/PolyTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/RectangleTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/RoundRectangleTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/SelectTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/tools/ToolbarToolItem.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/undo/Action.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/util/EditableLabel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/util/EditableLabelField.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/util/MatchingSet.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/util/TextMetrics.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/draw/util/ZOrder.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/CounterData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/CounterPoker.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/GrayIncrementer.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/HexEditor.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/HexModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/HexModelListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/Highlighter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/Measures.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/hex/Test.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/data/CsvInterpretor.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/data/CsvParameter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionRenderData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/data/Range.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableCsvFile.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableFileFilter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/AnalyzerManager.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/AnalyzerMenuListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/AnalyzerTab.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/BuildCircuitButton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/CsvReadParameterDialog.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/ExportTableButton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionTab.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/ImportTableButton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/MinimizedTab.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/OutputSelector.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/TabInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/TableTab.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/TableTabCaret.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/TableTabClip.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/AnalyzerModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Assignments.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Entry.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Expression.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Expressions.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Implicant.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressionsEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressionsListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Parser.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/ParserException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/TruthTable.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/TruthTableEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/TruthTableListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/Var.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/VariableListEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/analyze/model/VariableListListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/AnalyzeException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitAction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMapInfo.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitPoints.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitTransaction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitTransactionResult.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/ComponentDataGuiProvider.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/ExpressionComputer.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Propagator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/RadixOption.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SplitterAttributes.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SplitterParameters.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/SubcircuitPoker.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WidthIncompatibilityData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireBundle.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireSet.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireThread.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/WireUtil.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceAnchor.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceElement.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/AppearancePort.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceSvgReader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearanceEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearanceListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitPins.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultClassicAppearance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultEvolutionAppearance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementProvider.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementWithPoker.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/AbstractComponent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/AbstractComponentFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/Component.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentDrawContext.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentState.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ComponentUserEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/EndData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/ManagedComponent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/TextField.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/TextFieldCaret.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/TextFieldEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/comp/TextFieldListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Attribute.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeDefaultProvider.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeOption.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeOptionInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeSet.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/BitWidth.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Bounds.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Direction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/FailException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Location.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/TestException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/TestVector.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/data/Value.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/FileStatistics.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LibraryEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LibraryEventSource.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LibraryListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LibraryLoader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LibraryManager.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LoadFailedException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LoadedLibrary.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LoaderException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/MouseMappings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/Options.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/ProjectsDirty.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/ToolbarData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/XmlCircuitReader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/XmlIterator.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/XmlReaderException.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/Instance.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceData.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceDataSingleton.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceLogger.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceLoggerAdapter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstancePoker.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceState.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceStateImpl.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/Port.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/prefs/AbstractPrefMonitor.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/prefs/ConvertEvent.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/prefs/RecentProjects.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/prefs/Template.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/Action.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/Dependencies.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/Project.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/ProjectListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/Soc.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/Strings.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/bus/SocBusAttributes.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/bus/SocBusMenuProvider.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/AssemblerHighlighter.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusInfo.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusMasterInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusSlaveInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusSlaveListener.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusSnifferInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusStateInfo.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusTransaction.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocInstanceFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocMemMapModel.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocProcessorInterface.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocSimulationManager.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocSupport.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocUpMenuProvider.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/soc/data/SocUpSimulationState.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -70,7 +70,7 @@ public void AddError(Object Message) {
   }
 
   public void addFatalErrorFmt(String fmt, Object... args) {
-    addFatalErrorFmt(String.format(fmt, args));
+    AddFatalError(String.format(fmt, args));
   }
 
   public void AddFatalError(String Message) {

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -70,7 +70,7 @@ public void AddError(Object Message) {
   }
 
   public void addFatalErrorFmt(String fmt, Object... args) {
-    addFatalError(String.format(fmt, args));
+    AddFatalError(String.format(fmt, args));
   }
 
   public void AddFatalError(String Message) {

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -51,7 +51,7 @@ public void AddError(Object Message) {
   }
 
   public void addFatalErrorFmt(String fmt, Object... args) {
-    addFatalErrorFmt(String.format(fmt, args));
+    AddFatalError(String.format(fmt, args));
   }
 
   public void AddFatalError(String Message) {

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -70,7 +70,7 @@ public void AddError(Object Message) {
   }
 
   public void addFatalErrorFmt(String fmt, Object... args) {
-    addFatalErrorFmt(String.format(fmt, args));
+    addFatalError(String.format(fmt, args));
   }
 
   public void AddFatalError(String Message) {

File: src/main/java/com/cburch/logisim/fpga/gui/Reporter.java
Patch:
@@ -51,7 +51,7 @@ public void AddError(Object Message) {
   }
 
   public void addFatalErrorFmt(String fmt, Object... args) {
-    addFatalErrorFmt(String.format(fmt, args));
+    AddFatalError(String.format(fmt, args));
   }
 
   public void AddFatalError(String Message) {

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -280,7 +280,6 @@ public Circuit(String name, LogisimFile file, Project proj) {
     myNetList = new Netlist(this);
     myMappableResources = new HashMap<>();
     loadedMaps = new HashMap<>();
-    addCircuitListener(myNetList);
     isAnnotated = false;
     logiFile = file;
     staticAttrs.setValue(

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -257,7 +257,6 @@ public Circuit(String name, LogisimFile file, Project proj) {
     myNetList = new Netlist(this);
     myMappableResources = new HashMap<>();
     loadedMaps = new HashMap<>();
-    addCircuitListener(myNetList);
     isAnnotated = false;
     logiFile = file;
     staticAttrs.setValue(

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -280,7 +280,6 @@ public Circuit(String name, LogisimFile file, Project proj) {
     myNetList = new Netlist(this);
     myMappableResources = new HashMap<>();
     loadedMaps = new HashMap<>();
-    addCircuitListener(myNetList);
     isAnnotated = false;
     logiFile = file;
     staticAttrs.setValue(

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -257,7 +257,6 @@ public Circuit(String name, LogisimFile file, Project proj) {
     myNetList = new Netlist(this);
     myMappableResources = new HashMap<>();
     loadedMaps = new HashMap<>();
-    addCircuitListener(myNetList);
     isAnnotated = false;
     logiFile = file;
     staticAttrs.setValue(

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -110,7 +110,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           generate
              for (i = 0; i < nrOfLeds; i = i + 1)
              begin:outputs
-                assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[n] : {{ins}}[n];
+                assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[i] : {{ins}}[i];
              end
           endgenerate
           """);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -110,7 +110,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           generate
              for (i = 0; i < nrOfLeds; i = i + 1)
              begin:outputs
-                assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[n] : {{ins}}[n];
+                assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[i] : {{ins}}[i];
              end
           endgenerate
           """);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -108,7 +108,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
       contents.add("""
           genvar i;
           generate
-             for (i = 0; i < nrOfLeds; i = i + 1) begin
+             for (i = 0; i < nrOfLeds; i = i + 1)
+             begin:outputs
                 assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[n] : {{ins}}[n];
              end
           endgenerate

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -109,7 +109,7 @@ WHEN s_mult_shift_reg(0) = '1' ELSE
                 s_mac_lo_reg     <= std_logic_vector( unsigned(s_mac_lo_in_1) + unsigned(s_mac_lo_in_2) );
                 s_mac_hi_1_reg   <= s_mac_hi_1_next;
                 s_mac_hi_reg     <= std_logic_vector( unsigned(s_mac_hi_1_reg) + unsigned(s_mac_hi_in_2) +
-                                       unsigned(s_mac_lo_reg(24 DOWNTO 24) );
+                                       unsigned(s_mac_lo_reg(24 DOWNTO 24)) );
                 s_busy_pipe_reg  <= s_busy_pipe_next;
              END IF;
           END PROCESS make_shift_regs;

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -234,7 +234,7 @@ private ArrayList<String> GetStageFunctionalityVHDL(int stageNumber, int nrOfBit
       contents
           .add("""
             s_stage_0_shiftin <= DataA({{nrOfBits1}}) WHEN {{shiftMode}} = 1 OR {{shiftMode}} = 3 ELSE
-                                 DataA(0) WHEN {{shiftMode}} = 4 ELSE '0';")
+                                 DataA(0) WHEN {{shiftMode}} = 4 ELSE '0';
  
             s_stage_0_result  <= DataA
             """)

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -47,7 +47,6 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
               .pair("i", i);
       if (HDL.isVHDL()) {
         contents.add("""
-            DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND
             DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND
             {{space}}                             Enable = '1' ELSE '0';
             """);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -90,7 +90,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet
                   IF (nCLR2 = '0') THEN state2 <= '0';
                   ELSIF (nPRE2 = '1') THEN state2 <= '1';
                   ELSIF (rising_edge(CLK2)) THEN state2 <= next2;
-                  END IF;",
+                  END IF;
                END PROCESS ff2;
            """)
         .getWithIndent();

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -59,8 +59,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet
               """)
           .add(
               outputBits > 1
-                  ? "DataOut <= s_extended_vector(((to_integer(unsigned(Sel))+1) * {{outBits}})-1 DOWNTO to_integer(unsigned(Sel))*{{outBits}});"
-                  : "DataOut <= s_extended_vector(to_integer(unsigned(Sel)));");
+                  ? "DataOut <= s_extended_vector( ((to_integer(unsigned(Sel))+1) * {{outBits}})-1 DOWNTO to_integer(unsigned(Sel))*{{outBits}} );"
+                  : "DataOut <= s_extended_vector( to_integer(unsigned(Sel)) );");
     } else {
       contents.add("""
           assign s_extended_vector[{{extBits}}-1:{{inBits}}] = 0;

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -104,9 +104,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
              ** Here we assign the result                                             **
              ***************************************************************************/
              
-            .add("assign Result = s_stage_{{nrShiftBits}}_result;
+            assign Result = s_stage_{{1}}_result;
             
-            """, new LineBuffer.Pairs("nrShiftBits", (getNrofShiftBits(attrs) - 1)));
+            """, getNrofShiftBits(attrs) - 1);
       }
     }
     return contents.getWithIndent();
@@ -169,7 +169,7 @@ private ArrayList<String> GetStageFunctionalityVerilog(int stageNumber, int nrOf
           ** Here stage {{stageNumber}} of the binary shift tree is defined
           ***************************************************************************/
           
-          """, new LineBuffer.Pairs("stageNumber", stageNumber));
+          """);
     if (stageNumber == 0) {
       contents.add("""
           assign s_stage_0_shiftin = (({{shiftMode}} == 1) || ({{shiftMode}} == 3))

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -265,8 +265,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           generate
              for (i = 0; i < {{nrOfRows}}; i = i + 1) begin
                 assign {{outs}}[i] = (activeLow == 1)
-                    ? ~{{ins}}[i*nrOfColumns+s_columnCounterReg]
-                    : {{ins}}[i*nrOfColumns+s_columnCounterReg];
+                    ? ~{{ins}}[i * nrOfColumns + s_columnCounterReg]
+                    : {{ins}}[i * nrOfColumns + s_columnCounterReg];
              end
           endgenerate
           """);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -263,7 +263,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
                    ? ~{{ins}}[{{nrOfColumns}} * s_rowCounterReg + i]
                    :  {{ins}}[{{nrOfColumns}} * s_rowCounterReg + i];
              end
-          endgenerate" +
+          endgenerate
           """);
     }
     return contents.getWithIndent();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -131,7 +131,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet at
                    :  {{insR}}[i*nrOfColumns+s_columnCounterReg];
                 assign {{outsG}}[i] = (activeLow == 1)
                    ? ~{{insG}}[i*nrOfColumns+s_columnCounterReg]
-                   :  {{insG}[i*nrOfColumns+s_columnCounterReg];
+                   :  {{insG}}[i*nrOfColumns+s_columnCounterReg];
                 assign {{outsB}}[i] = (activeLow == 1)
                    ? ~{{insB}}[i*nrOfColumns+s_columnCounterReg]
                    :  [{insB}}[i*nrOfColumns+s_columnCounterReg];

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -25,7 +25,6 @@
 import com.cburch.logisim.tools.Tool;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
-import java.awt.Dimension;
 import java.awt.FontMetrics;
 import java.awt.Graphics;
 import java.awt.Graphics2D;

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -206,8 +206,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet at
                   s_level_10(15 DOWNTO 13) <= s_level_9(15 DOWNTO 13);
                   s_level_10(0)            <= s_level_9(0);
                   
-                  BCD1    <= s_level_10( 3 DOWNTO  0 );
-                  BCD10   <= s_level_10( 7 DOWNTO  4 );
+                  BCD1    <= s_level_10( 3 DOWNTO  0);
+                  BCD10   <= s_level_10( 7 DOWNTO  4);
                   BCD100  <= s_level_10(11 DOWNTO  8);
                   BCD1000 <= s_level_10(15 DOWNTO 12);
                   """)

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -37,8 +37,8 @@ public class ShiftRegisterHDLGeneratorFactory extends AbstractHDLGeneratorFactor
   private LineBuffer.Pairs sharedPairs =
       new LineBuffer.Pairs() {
         {
-          add("nrOfStages", NR_OF_STAGES_STR);
-          add("activeLevel", ACTIVE_LEVEL_STR);
+          pair("nrOfStages", NR_OF_STAGES_STR);
+          pair("activeLevel", ACTIVE_LEVEL_STR);
         }
       };
 

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -1,9 +1,9 @@
 /*
  * Logisim-evolution - digital logic design tool and simulator
  * Copyright by the Logisim-evolution developers
- * 
+ *
  * https://github.com/logisim-evolution/
- * 
+ *
  * This is free software released under GNU GPLv3 license
  */
 
@@ -63,7 +63,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
                       CASE (Sel) IS
                 """);
       for (var i = 0; i < (1 << nrOfSelectBits) - 1; i++)
-        contents.add("         WHEN {{1}} => MuxOut <= MuxIn_{{2}} ", IntToBin(i, nrOfSelectBits), i);
+        contents.add("         WHEN {{1}} => MuxOut <= MuxIn_{{2}};", IntToBin(i, nrOfSelectBits), i);
       contents.add("         WHEN OTHERS  => MuxOut <= MuxIn_{{1}};", (1 << nrOfSelectBits) - 1)
               .add("""
                          END CASE; 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -323,9 +323,9 @@ public static Startup parseArgs(String[] args) {
     addOption(opts, "argLocaleOption", ARG_LOCALE, ARG_LOCALE_LONG, 1);
     addOption(opts, "argTemplateOption", ARG_TEMPLATE, ARG_TEMPLATE_LONG, 1);
     addOption(opts, "argNoSplashOption", ARG_NO_SPLASH, ARG_NO_SPLASH_LONG);
-    addOption(opts, "argTestVectorOption", ARG_TEST_VECTOR, ARG_TEST_VECTOR_LONG, 2);    // FIXME: NO LANG STR FOR IT!
-    addOption(opts, "argTestCircuit", ARG_TEST_CIRCUIT, ARG_TEST_CIRCUIT_LONG, 1);   // FIXME add "Option" suffix to key name
-    addOption(opts, "argTestCircGen", ARG_TEST_CIRC_GEN, ARG_TEST_CIRC_GEN_LONG, 2);   // FIXME add "Option" suffix to key name
+    addOption(opts, "argTestVectorOption", ARG_TEST_VECTOR, ARG_TEST_VECTOR_LONG, 2);
+    addOption(opts, "argTestCircuitOption", ARG_TEST_CIRCUIT, ARG_TEST_CIRCUIT_LONG, 1);   // FIXME add "Option" suffix to key name
+    addOption(opts, "argTestCircGenOption", ARG_TEST_CIRC_GEN, ARG_TEST_CIRC_GEN_LONG, 2);   // FIXME add "Option" suffix to key name
 
     CommandLine cmd;
     try {

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -75,7 +75,7 @@ public static void main(String[] args) {
 
     final var startup = Startup.parseArgs(args);
     if (startup == null) System.exit(10);
-    if(startup.shallQuit()) System.exit(0);
+    if (startup.shallQuit()) System.exit(0);
 
     try {
       startup.run();

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -400,8 +400,8 @@ public static Startup parseArgs(String[] args) {
           return startup;
         default:
           continue;
-        }
       }
+    }
 
     // positional argument being files to load
     for (final var arg : cmd.getArgs()) {

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -49,10 +49,10 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
             .pair("busName", GetBusName(componentInfo, HexDigit.HEX, nets))
             .pair("bubbleBusName", bubbleBusName)
             .pair("startId", startId)
+            .pair("startId6", startId + 6)
             .pair("regName", LineBuffer.format("s_{{1}}_reg", componentInfo.getComponent().getAttributeSet().getValue(StdAttr.LABEL)))
             .pair("sigName", LineBuffer.format("{{1}}[{{2}}:{{3}}]", bubbleBusName, (startId + 6), startId))
             .pair("dpName", GetNetName(componentInfo, HexDigit.DP, true, nets));
-
     if (HDL.isVHDL()) {
       contents.add("");
       if (componentInfo.isEndConnected(HexDigit.HEX)) {

File: src/main/java/com/cburch/logisim/util/LibraryUtil.java
Patch:
@@ -19,7 +19,6 @@
 
 package com.cburch.logisim.util;
 
-import java.util.NoSuchElementException;
 
 public class LibraryUtil {
 
@@ -55,7 +54,7 @@ public static String getName(Class cls) {
         iaeEx.printStackTrace();
       }
     }
-
-    throw new NoSuchElementException("Missing " + ID_FIELD_NAME + " static const field for " + cls);
+    // for backward compatibility we return the class name 
+    return cls.getSimpleName();
   }
 }

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -317,7 +317,6 @@ public static Startup parseArgs(String[] args) {
     final var optionIter = cmd.iterator();
     while (optionIter.hasNext()) {
       final var opt = optionIter.next();
-      System.out.println(opt.getLongOpt());
       final var optHandlerRc = switch (opt.getOpt()) {
         case CMD_HELP -> printHelp(opts);
         case CMD_VERSION -> printVersion();

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -309,7 +309,6 @@ public static Startup parseArgs(String[] args) {
     // for each detected argument.
     final var optionIter = cmd.iterator();
     while (optionIter.hasNext()) {
-
       final var opt = optionIter.next();
       System.out.println(opt.getLongOpt());
       final var optHandlerRc = switch (opt.getOpt()) {
@@ -385,7 +384,7 @@ private static RC cmdTty(Startup startup, Option opt) {
     if (fmts.length > 0) {
       // FIXME: why we support multiple TTY typesw?
       for (final var singleFmt : fmts) {
-        final var val = switch(singleFmt.trim()) {
+        final var val = switch (singleFmt.trim()) {
           case "table" -> TtyInterface.FORMAT_TABLE;
           case "speed" -> TtyInterface.FORMAT_SPEED;
           case "tty" -> TtyInterface.FORMAT_TTY;

File: src/main/java/com/cburch/logisim/tools/Library.java
Patch:
@@ -73,7 +73,9 @@ public Library getLibrary(String name) {
     return null;
   }
 
-  public abstract boolean removeLibrary(String name);
+  public boolean removeLibrary(String name) {
+    return false;
+  }
 
   public Tool getTool(String name) {
     for (final var tool : getTools()) {

File: src/main/java/com/cburch/logisim/fpga/data/ConstantButton.java
Patch:
@@ -114,6 +114,7 @@ public boolean setSelectable(MapListModel.MapInfo comp) {
           case CONSTANT_ONE -> true;
           case CONSTANT_ZERO -> true;
           case CONSTANT_VALUE -> map.nrInputs() > 1;
+          case LEAVE_OPEN -> false;
           default -> throw new IllegalStateException("Unexpected value: " + myType);
         };
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -223,7 +223,7 @@ public ArrayList<String> getColumnCounterCode() {
               "assign s_tickNext = (s_scanningCounterReg == 0) ? 1'b1 : 1'b0;",
               "assign s_scanningCounterNext = (s_scanningCounterReg == 0) ? {{counterValue}} : s_scanningCounterReg - 1;",
               "assign s_columnCounterNext = (s_tickReg == 1'b0) ? s_columnCounterReg : ",
-              "                             (s_rowCounterReg == 0) ? nrOfColumns-1 : s_columnCounterReg-1;",
+              "                             (s_columnCounterReg == 0) ? nrOfColumns-1 : s_columnCounterReg-1;",
               "")
           .addRemarkBlock("Here the simulation only initial is defined")
           .addLines(
@@ -275,7 +275,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfRows}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfRows}}; i = i + 1)",
+          "   begin: outputs",
           "      assign {{outs}}[i] = (activeLow == 1)",
           "          ? ~{{ins}}[i*nrOfColumns+s_columnCounterReg]",
           "          : {{ins}}[i*nrOfColumns+s_columnCounterReg];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -272,7 +272,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outs}}[i] = (activeLow == 1)",
           "         ? ~{{ins}}[{{nrOfColumns}} * s_rowCounterReg + i]",
           "         :  {{ins}}[{{nrOfColumns}} * s_rowCounterReg + i];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -110,7 +110,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
       contents.addLines(
           "genvar i;",
           "generate",
-          "   for (i = 0; i < nrOfLeds; i = i + 1) begin",
+          "   for (i = 0; i < nrOfLeds; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outsR}}[i] = (activeLow == 1) ? ~{{insR}}[n] : {{insR}}[n];",
           "      assign {{outsG}}[i] = (activeLow == 1) ? ~{{insG}}[n] : {{insG}}[n];",
           "      assign {{outsB}}[i] = (activeLow == 1) ? ~{{insB}}[n] : {{insB}}[n];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -147,7 +147,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outsR}}[i] = (activeLow == 1)",
           "         ? ~{{insR}}[{{nrOfColumns}} * s_rowCounterReg + i]",
           "         : {{insR}}[nrOfColumns * s_rowCounterReg + i];",

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -84,7 +84,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
         .add("   {{1}}Q    {{2}}s_current_state_reg{{3}};", HDL.assignPreamble(), HDL.assignOperator(), SelectOperator)
         .add("   {{1}}Q_bar{{2}}{{3}}(s_current_state_reg{{4}});", HDL.assignPreamble(), HDL.assignOperator(), HDL.notOperator(), SelectOperator)
         .add("")
-        .add("Here the update logic is defined")
+        .addRemarkBlock("Here the update logic is defined")
         .add(GetUpdateLogic())
         .add("");
     if (HDL.isVerilog()) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -89,9 +89,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet at
             .pair("insR", LedArrayGenericHDLGeneratorFactory.LedArrayRedInputs)
             .pair("insG", LedArrayGenericHDLGeneratorFactory.LedArrayGreenInputs)
             .pair("insB", LedArrayGenericHDLGeneratorFactory.LedArrayBlueInputs)
-            .pair("outsR", LedArrayGenericHDLGeneratorFactory.LedArrayRedOutputs)
-            .pair("outsG", LedArrayGenericHDLGeneratorFactory.LedArrayGreenOutputs)
-            .pair("outsB", LedArrayGenericHDLGeneratorFactory.LedArrayBlueOutputs);
+            .pair("outsR", LedArrayGenericHDLGeneratorFactory.LedArrayRowRedOutputs)
+            .pair("outsG", LedArrayGenericHDLGeneratorFactory.LedArrayRowGreenOutputs)
+            .pair("outsB", LedArrayGenericHDLGeneratorFactory.LedArrayRowBlueOutputs);
 
     contents.add(getColumnCounterCode());
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/fpga/download/XilinxDownload.java
Patch:
@@ -268,9 +268,9 @@ public boolean CreateDownloadScripts() {
     contents.clear();
     if (RootNetList.numberOfClockTrees() > 0 || RootNetList.requiresGlobalClockConnection()) {
       contents
-          .addPair("clock", TickComponentHDLGeneratorFactory.FPGA_CLOCK)
-          .addPair("clockFreq", Download.GetClockFrequencyString(boardInfo))
-          .addPair("clockPin", GetXilinxClockPin(boardInfo))
+          .pair("clock", TickComponentHDLGeneratorFactory.FPGA_CLOCK)
+          .pair("clockFreq", Download.GetClockFrequencyString(boardInfo))
+          .pair("clockPin", GetXilinxClockPin(boardInfo))
           .addLines(
             "NET \"{{clock}}\" {{clockPin}} ;",
             "NET \"{{clock}}\" TNM_NET = \"{{clock}}\" ;",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/TickComponentHDLGeneratorFactory.java
Patch:
@@ -71,8 +71,8 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents =
         (new LineBuffer())
-            .withHdlPairs()
-            .addPair("nrOfCounterBits", NrOfCounterBitsStr)
+            .addHdlPairs()
+            .pair("nrOfCounterBits", NrOfCounterBitsStr)
             .add("")
             .addRemarkBlock("Here the Output is defined")
             .add(

File: src/main/java/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -63,7 +63,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents = new LineBuffer();
-    Contents.addPair("twosComplement", TwosComplementStr);
+    Contents.pair("twosComplement", TwosComplementStr);
 
     final var nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -64,9 +64,9 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents = (new LineBuffer())
-            .addPair("nrOfBits", NrOfBitsStr)
-            .addPair("unsigned", UnsignedStr)
-            .addPair("calcBits", CalcBitsStr);
+            .pair("nrOfBits", NrOfBitsStr)
+            .pair("unsigned", UnsignedStr)
+            .pair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
       Contents.addLines(

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -65,9 +65,9 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var Contents =
         (new LineBuffer())
-            .addPair("nrOfBits", NrOfBitsStr)
-            .addPair("unsigned", UnsignedStr)
-            .addPair("calcBits", CalcBitsStr);
+            .pair("nrOfBits", NrOfBitsStr)
+            .pair("unsigned", UnsignedStr)
+            .pair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
       Contents.addLines(

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -60,7 +60,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = (new LineBuffer())
-            .addPair("shiftMode", shiftModeStr);
+            .pair("shiftMode", shiftModeStr);
     final var nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
       contents
@@ -175,7 +175,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
 
   private ArrayList<String> GetStageFunctionalityVerilog(int stageNumber, int nrOfBits) {
     final var contents = (new LineBuffer())
-            .addPair("shiftMode", shiftModeStr);
+            .pair("shiftMode", shiftModeStr);
     final var nrOfBitsToShift = (1 << stageNumber);
     contents
         .add("/***************************************************************************")
@@ -213,7 +213,7 @@ private ArrayList<String> GetStageFunctionalityVerilog(int stageNumber, int nrOf
   }
 
   private ArrayList<String> GetStageFunctionalityVHDL(int stageNumber, int nrOfBits) {
-    final var contents = (new LineBuffer()).addPair("shiftMode", shiftModeStr);
+    final var contents = (new LineBuffer()).pair("shiftMode", shiftModeStr);
 
     final var nrOfBitsToShift = (1 << stageNumber);
     contents

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -70,7 +70,7 @@ private static class NotGateHDLGeneratorFactory extends AbstractGateHDLGenerator
     @Override
     public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean isOneHot) {
       return (new LineBuffer())
-          .withHdlPairs()
+          .addHdlPairs()
           .add("{{assign}} Result {{=}} {{not}}Input_1;")
           .add("")
           .getWithIndent();

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -46,7 +46,7 @@ public ArrayList<String> GetArchitecture(Netlist nets, AttributeSet attrs, Strin
     final var contents = new LineBuffer();
     if (HDL.isVHDL()) {
       contents
-          .addPair("compName", componentName)
+          .pair("compName", componentName)
           .add(FileWriter.getGenerateRemark(componentName, nets.projName()))
           .addLines(
               "",
@@ -112,7 +112,7 @@ public String getComponentStringIdentifier() {
   @Override
   public ArrayList<String> GetEntity(Netlist nets, AttributeSet attrs, String componentName) {
     return (new LineBuffer())
-        .addPair("compName", componentName)
+        .pair("compName", componentName)
         .add(FileWriter.getGenerateRemark(componentName, nets.projName()))
         .add(FileWriter.getExtendedLibrary())
         .addLines(

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -135,7 +135,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             "end");
       } else {
         contents
-            .addPair("activityLevel", ACTIVITY_LEVEL_STR)
+            .pair("activityLevel", ACTIVITY_LEVEL_STR)
             .addLines(
                 "always @(*)",
                 "begin",

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -72,7 +72,7 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = (new LineBuffer()).addPair("activeEdge", activeEdgeStr);
+    final var contents = (new LineBuffer()).pair("activeEdge", activeEdgeStr);
     contents.addRemarkBlock(
         "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
             + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down");

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -67,8 +67,8 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents =
         (new LineBuffer())
-            .addPair("seed", SEED_STR)
-            .addPair("nrOfBits", NR_OF_BITS_STR)
+            .pair("seed", SEED_STR)
+            .pair("nrOfBits", NR_OF_BITS_STR)
             .addRemarkBlock("This is a multicycle implementation of the Random Component")
             .empty();
 

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -67,7 +67,7 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents = (new LineBuffer())
-            .addPair("activeLevel", ACTIVE_LEVEL_STR);
+            .pair("activeLevel", ACTIVE_LEVEL_STR);
     if (HDL.isVHDL()) {
       contents.addLines(
           "Q <= s_state_reg;",

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -74,7 +74,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       return (new LineBuffer())
-          .withHdlPairs()
+          .addHdlPairs()
           .add("{{assign}} s_next_state {{=}} (s_current_state_reg {{or}} S) {{and}} {{not}}(R);")
           .getWithIndent();
     }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -66,9 +66,9 @@ public SortedMap<String, Integer> GetInputList(Netlist theNetlist, AttributeSet
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents =
         (new LineBuffer())
-            .addPair("extBits", EXTENDED_BITS_STR)
-            .addPair("inBits", INPUT_BITS_STR)
-            .addPair("outBits", OUTPUTS_BITS_STR);
+            .pair("extBits", EXTENDED_BITS_STR)
+            .pair("inBits", INPUT_BITS_STR)
+            .pair("outBits", OUTPUTS_BITS_STR);
     final var outputBits = attrs.getValue(BitSelector.GROUP_ATTR).getWidth();
     if (HDL.isVHDL()) {
       contents

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -61,9 +61,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
     var space = " ";
     for (var i = 0; i < numOutputs; i++) {
       if (i == 7) space = "";
-      contents.addPair("bin", IntToBin(i, nrOfSelectBits))
-              .addPair("space", space)
-              .addPair("i", i);
+      contents.pair("bin", IntToBin(i, nrOfSelectBits))
+              .pair("space", space)
+              .pair("i", i);
       if (HDL.isVHDL()) {
         contents.addLines(
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -62,8 +62,8 @@ public SortedMap<String, Integer> GetInputList(Netlist nets, AttributeSet attrs)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
     final var contents = (new LineBuffer())
-            .addPair("selBits", NR_OF_SELECT_BITS_STR)
-            .addPair("inBits", NR_OF_INPUT_BITS_STR);
+            .pair("selBits", NR_OF_SELECT_BITS_STR)
+            .pair("inBits", NR_OF_INPUT_BITS_STR);
     if (HDL.isVHDL()) {
       contents.addLines(
           "   -- Output Signals",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -53,7 +53,7 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       return (new LineBuffer())
-          .withHdlPairs()
+          .addHdlPairs()
           .add("{{assign}} gate_{{1}}_O {{=}} gate_{{1}}_A {{and}} gate_{{1}}_B;", index)
           .add("")
           .getWithIndent();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442HDLGenerator.java
Patch:
@@ -85,7 +85,7 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs) {
-    final var contents = (new LineBuffer()).withHdlPairs();
+    final var contents = (new LineBuffer()).addHdlPairs();
 
     if (IsExes3) {
       contents.addLines(

File: src/main/java/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -62,7 +62,7 @@ public ArrayList<String> GetInlinedCode(
       Long ComponentId,
       NetlistComponent ComponentInfo,
       String CircuitName) {
-    final var Contents = (new LineBuffer()).withHdlPairs();
+    final var Contents = (new LineBuffer()).addHdlPairs();
     int NrOfBits = ComponentInfo.getComponent().getEnd(0).getWidth().getWidth();
     if (ComponentInfo.isEndConnected(0)) {
       long ConstantValue = GetConstant(ComponentInfo.getComponent().getAttributeSet());

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -182,7 +182,7 @@ public LineBuffer clearBuffer() {
   /**
    * Adds line to the buffer only if line is not present already, formatting it first.
    *
-   * @param line Line to add if not present in buffer.
+   * @param fmt Line to add if not present in buffer.
    *
    * @return Instance of self for easy chaining.
    */

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -51,7 +51,7 @@ public static ArrayList<String> getGenericMap(int nrOfRows, int nrOfColumns, lon
             .addPair("ledsCount", nrOfRows * nrOfColumns)
             .addPair("rows", nrOfRows)
             .addPair("cols", nrOfColumns)
-            .addPair("activeLow", activeLow)
+            .addPair("activeLow", activeLowString)
             .addPair("activeLowVal", activeLow ? "1" : "0");
 
     if (HDL.isVHDL()) {
@@ -69,6 +69,7 @@ public static ArrayList<String> getGenericMap(int nrOfRows, int nrOfColumns, lon
   public static ArrayList<String> getPortMap(int id) {
     final var map =
         (new LineBuffer())
+            .addPair("id", id)
             .addPair("ins", LedArrayGenericHDLGeneratorFactory.LedArrayInputs)
             .addPair("outs", LedArrayGenericHDLGeneratorFactory.LedArrayOutputs);
     if (HDL.isVHDL()) {
@@ -123,7 +124,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "generate",
           "   for (i = 0; i < nrOfLeds; i = i + 1)",
           "   begin:outputs",
-          "      assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[n] : {{ins}}[n];",
+          "      assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[i] : {{ins}}[i];",
           "   end",
           "endgenerate");
     }

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -84,7 +84,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
         .add("   {{1}}Q    {{2}}s_current_state_reg{{3}};", HDL.assignPreamble(), HDL.assignOperator(), SelectOperator)
         .add("   {{1}}Q_bar{{2}}{{3}}(s_current_state_reg{{4}});", HDL.assignPreamble(), HDL.assignOperator(), HDL.notOperator(), SelectOperator)
         .add("")
-        .add("Here the update logic is defined")
+        .addRemarkBlock("Here the update logic is defined")
         .add(GetUpdateLogic())
         .add("");
     if (HDL.isVerilog()) {

File: src/main/java/com/cburch/logisim/fpga/data/ConstantButton.java
Patch:
@@ -114,6 +114,7 @@ public boolean setSelectable(MapListModel.MapInfo comp) {
           case CONSTANT_ONE -> true;
           case CONSTANT_ZERO -> true;
           case CONSTANT_VALUE -> map.nrInputs() > 1;
+          case LEAVE_OPEN -> false;
           default -> throw new IllegalStateException("Unexpected value: " + myType);
         };
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -283,7 +283,7 @@ public ArrayList<String> GetHDLWiring(Netlist TheNets) {
               OneLine.append(" ");
             }
 
-            Contents.addUnique("   {{assign}} {{1}} {{=}} {{2}}{{3}}{{bracketOpen}}{{4}}{{bracketClose}};",
+            Contents.add("   {{assign}} {{1}} {{=}} {{2}}{{3}}{{bracketOpen}}{{4}}{{bracketClose}};",
                 OneLine, BusName, TheNets.getNetId(Source.getParentNet()), Source.getParentNetBitIndex());
           }
           /* Next we perform all sink connections */
@@ -305,7 +305,7 @@ public ArrayList<String> GetHDLWiring(Netlist TheNets) {
             } else {
               OneLine.append(NetName).append(TheNets.getNetId(ThisNet));
             }
-            Contents.addUnique("   {{1}}{{2}};", HDL.assignPreamble(), OneLine);
+            Contents.add("   {{1}}{{2}};", HDL.assignPreamble(), OneLine);
           }
         }
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -142,7 +142,7 @@ public String getComponentStringIdentifier() {
 
   @Override
   public String GetSubDir() {
-     // This method returns the module directory where the HDL code needs to be placed
+    // This method returns the module directory where the HDL code needs to be placed
     return "ledarrays";
   }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -295,7 +295,7 @@ public String getComponentStringIdentifier() {
 
   @Override
   public String GetSubDir() {
-     // This method returns the module directory where the HDL code needs to be placed
+    // This method returns the module directory where the HDL code needs to be placed
     return "ledarrays";
   }
 

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -236,7 +236,7 @@ private ArrayList<String> GetStageFunctionalityVHDL(int stageNumber, int nrOfBit
         --- Here stage {{1}} of the binary shift tree is defined
         -----------------------------------------------------------------------------
           
-       """, new LineBuffer.Pairs("stageNumber", stageNumber));
+        """, new LineBuffer.Pairs("stageNumber", stageNumber));
 
     if (stageNumber == 0) {
       contents

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayColumnScanningHDLGeneratorFactory.java
Patch:
@@ -223,7 +223,7 @@ public ArrayList<String> getColumnCounterCode() {
               "assign s_tickNext = (s_scanningCounterReg == 0) ? 1'b1 : 1'b0;",
               "assign s_scanningCounterNext = (s_scanningCounterReg == 0) ? {{counterValue}} : s_scanningCounterReg - 1;",
               "assign s_columnCounterNext = (s_tickReg == 1'b0) ? s_columnCounterReg : ",
-              "                             (s_rowCounterReg == 0) ? nrOfColumns-1 : s_columnCounterReg-1;",
+              "                             (s_columnCounterReg == 0) ? nrOfColumns-1 : s_columnCounterReg-1;",
               "")
           .addRemarkBlock("Here the simulation only initial is defined")
           .addLines(
@@ -275,7 +275,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfRows}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfRows}}; i = i + 1)",
+          "   begin: outputs",
           "      assign {{outs}}[i] = (activeLow == 1)",
           "          ? ~{{ins}}[i*nrOfColumns+s_columnCounterReg]",
           "          : {{ins}}[i*nrOfColumns+s_columnCounterReg];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -121,7 +121,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
       contents.addLines(
           "genvar i;",
           "generate",
-          "   for (i = 0; i < nrOfLeds; i = i + 1) begin",
+          "   for (i = 0; i < nrOfLeds; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outs}}[i] = (activeLow == 1) ? ~{{ins}}[n] : {{ins}}[n];",
           "   end",
           "endgenerate");

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -272,7 +272,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outs}}[i] = (activeLow == 1)",
           "         ? ~{{ins}}[{{nrOfColumns}} * s_rowCounterReg + i]",
           "         :  {{ins}}[{{nrOfColumns}} * s_rowCounterReg + i];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayLedDefaultHDLGeneratorFactory.java
Patch:
@@ -110,7 +110,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
       contents.addLines(
           "genvar i;",
           "generate",
-          "   for (i = 0; i < nrOfLeds; i = i + 1) begin",
+          "   for (i = 0; i < nrOfLeds; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outsR}}[i] = (activeLow == 1) ? ~{{insR}}[n] : {{insR}}[n];",
           "      assign {{outsG}}[i] = (activeLow == 1) ? ~{{insG}}[n] : {{insG}}[n];",
           "      assign {{outsB}}[i] = (activeLow == 1) ? ~{{insB}}[n] : {{insB}}[n];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/RGBArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -147,7 +147,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet
           "",
           "genvar i;",
           "generate",
-          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1) begin",
+          "   for (i = 0; i < {{nrOfColumns}}; i = i + 1)",
+          "   begin:outputs",
           "      assign {{outsR}}[i] = (activeLow == 1)",
           "         ? ~{{insR}}[{{nrOfColumns}} * s_rowCounterReg + i]",
           "         : {{insR}}[nrOfColumns * s_rowCounterReg + i];",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -578,7 +578,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object MapInfo) {
           for (final var key : mapInfo.getMappableResources().keySet()) {
             final var comp = mapInfo.getMappableResources().get(key);
             if (comp.hasIOs()) {
-              final var id = comp.getIOBublePinId(i);
+              final var id = comp.getIoBubblePinId(i);
               if (id >= 0) {
                 compPin = id;
                 map = comp;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -578,7 +578,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object MapInfo) {
           for (final var key : mapInfo.getMappableResources().keySet()) {
             final var comp = mapInfo.getMappableResources().get(key);
             if (comp.hasIOs()) {
-              final var id = comp.getIOBublePinId(i);
+              final var id = comp.getIoBubblePinId(i);
               if (id >= 0) {
                 compPin = id;
                 map = comp;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayRowScanningHDLGeneratorFactory.java
Patch:
@@ -221,8 +221,8 @@ public ArrayList<String> getRowCounterCode() {
           assign s_rowCounterNext = (s_tickReg == 1'b0) ? s_rowCounterReg : 
                                     (s_rowCounterReg == 0) ? nrOfRows-1 : s_rowCounterReg-1;
           """)
-         .addRemarkBlock("Here the simulation only initial is defined")
-         .add("""
+          .addRemarkBlock("Here the simulation only initial is defined")
+          .add("""
           initial
           begin
              s_rowCounterReg      = 0;

File: src/main/java/com/cburch/logisim/data/Location.java
Patch:
@@ -86,6 +86,7 @@ private Location(int hashCode, int x, int y) {
     this.y = y;
   }
 
+  @Override
   public int compareTo(Location other) {
     return (this.x != other.x) ? this.x - other.x : this.y - other.y;
   }
@@ -140,7 +141,7 @@ public Location rotate(Direction from, Direction to, int xc, int yc) {
 
   @Override
   public String toString() {
-    return "(" + x + "," + y + ")";
+    return String.format("(%d,%d)", x, y);
   }
 
   public Location translate(Direction dir, int dist) {

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -283,7 +283,7 @@ private ArrayList<String> getPinLocStrings() {
     }
     final var ledArrayMap = DownloadBase.getLedArrayMaps(mapInfo, RootNetList, boardInfo);
     for (final var key : ledArrayMap.keySet())
-      contents.add("set_location_assignment {{1}}-to {{2}}", ledArrayMap.get(key), key);
+      contents.add("set_location_assignment {{1}} -to {{2}}", ledArrayMap.get(key), key);
     return contents.getWithIndent(4);
   }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -12,9 +12,9 @@
 
 public class LedArrayGenericHDLGeneratorFactory {
   public static String LedArrayOutputs = "externalLeds";
-  public static String LedArrayRedOutputs = "externalLeds";
-  public static String LedArrayGreenOutputs = "externalLeds";
-  public static String LedArrayBlueOutputs = "externalLeds";
+  public static String LedArrayRedOutputs = "externalRedLeds";
+  public static String LedArrayGreenOutputs = "externalGreenLeds";
+  public static String LedArrayBlueOutputs = "externalBlueLeds";
   public static String LedArrayRowOutputs = "rowLeds";
   public static String LedArrayRowRedOutputs = "rowRedLeds";
   public static String LedArrayRowGreenOutputs = "rowGreenLeds";

File: src/main/java/com/cburch/logisim/std/wiring/ClockHDLGeneratorFactory.java
Patch:
@@ -119,12 +119,12 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     Contents.add("").addRemarkBlock("Here the control signals are defined");
     if (HDL.isVHDL()) {
       Contents.addLines(
-          "s_counter_is_zero <= '1' WHEN s_counter_reg = std_logic_vector(to_unsigned(0,{{nrOfBitsStr}})) ELSE '0';",
+          "s_counter_is_zero <= '1' WHEN s_counter_reg = std_logic_vector(to_unsigned(0,{{nrOfBits}})) ELSE '0';",
           "s_counter_next    <= std_logic_vector(unsigned(s_counter_reg) - 1)",
           "                       WHEN s_counter_is_zero = '0' ELSE",
-          "                    std_logic_vector(to_unsigned(({{lowTick}}-1), {{nrOfBitsStr}}))",
+          "                    std_logic_vector(to_unsigned(({{lowTick}}-1), {{nrOfBits}}))",
           "                       WHEN s_derived_clock_reg(0) = '1' ELSE",
-          "                    std_logic_vector(to_unsigned(({{highTick}}-1), {{nrOfBitsStr}}));"
+          "                    std_logic_vector(to_unsigned(({{highTick}}-1), {{nrOfBits}}));"
       );
     } else {
       Contents.addLines(

File: src/main/java/com/cburch/logisim/fpga/data/FPGACommanderListModel.java
Patch:
@@ -28,7 +28,7 @@
 
 package com.cburch.logisim.fpga.data;
 
-import com.cburch.logisim.fpga.designrulecheck.SimpleDRCContainer;
+import com.cburch.logisim.fpga.designrulecheck.simpleDRCContainer;
 import com.cburch.logisim.fpga.gui.ListModelCellRenderer;
 import java.util.ArrayList;
 import java.util.HashSet;
@@ -64,8 +64,8 @@ public void clear() {
 
   public void add(Object toAdd) {
     count++;
-    if (toAdd instanceof SimpleDRCContainer) {
-      SimpleDRCContainer add = (SimpleDRCContainer) toAdd;
+    if (toAdd instanceof simpleDRCContainer) {
+      simpleDRCContainer add = (simpleDRCContainer) toAdd;
       if (add.SupressCount()) count--;
       else add.SetListNumber(count);
     }

File: src/main/java/com/cburch/logisim/fpga/data/FPGAIOInformationContainer.java
Patch:
@@ -1000,9 +1000,9 @@ public boolean tryLedArrayMap(JPanel parent) {
       }
     }
     if (fact instanceof RgbLed) {
-      if (Driving == LedArrayDriving.RgbColumnScanning
-          || Driving == LedArrayDriving.RgbDefault
-          || Driving == LedArrayDriving.RgbRowScanning) {
+      if (Driving == LedArrayDriving.RGB_COLUMN_SCANNING
+          || Driving == LedArrayDriving.RGB_DEFAULT
+          || Driving == LedArrayDriving.RGB_ROW_SCANNING) {
         /* only if we have an RGB-array we are going to do something special */
         map.unmap(); /* remove all previous maps */
         return map.tryCompleteMap(this, selectedPin);

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockSourceContainer.java
Patch:
@@ -62,7 +62,7 @@ public int getClockId(Component comp) {
     if (!(comp.getFactory() instanceof Clock)) {
       return -1;
     }
-    for (Component clock : sources) {
+    for (final var clock : sources) {
       if (equals(comp, clock)) {
         return sources.indexOf(clock);
       }

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -257,14 +257,14 @@ private ArrayList<String> getPinLocStrings() {
           if (info != null) {
             final var ioStandard = info.GetIOStandard();
             if (ioStandard != IoStandards.UNKNOWN && ioStandard != IoStandards.DEFAULT_STANDARD)
-              contents.add("    set_property IOSTANDARD %s [get_ports {%s}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
+              contents.add("    set_property IOSTANDARD {{1}} [get_ports {{{2}}}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
           }
         }
       }
     }
     final var LedArrayMap = DownloadBase.getLedArrayMaps(MapInfo, RootNetList, BoardInfo);
     for (final var key : LedArrayMap.keySet()) {
-      contents.add("set_property PACKAGE_PIN %s [get_ports {%s}]", key, LedArrayMap.get(key));
+      contents.add("set_property PACKAGE_PIN {{1}} [get_ports {{{2}}}]", key, LedArrayMap.get(key));
     }
     return contents.get();
   }

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -163,9 +163,9 @@ public double GetTickfrequency() {
       i++;
     }
     return Double.parseDouble(number.toString()) * switch (extention) {
-      case 'K' -> 1000;
-      case 'M' -> 1000000;
-      default -> 1;
+      case 'K' -> 1000d;
+      case 'M' -> 1000000d;
+      default -> 1d;
     };
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -151,7 +151,7 @@ private static void updateLedArrayRequirements(
         }
         break;
       }
-      case LedArrayDriving.RgbDefault: {
+      case LedArrayDriving.RGB_DEFAULT: {
         nrOfPins = nrOfRows * nrOfColumns * 3;
         var preamble = "";
         for (var rgb = 0; rgb < 3; rgb++) {
@@ -176,7 +176,7 @@ private static void updateLedArrayRequirements(
         }
         break;
       }
-      case LedArrayDriving.RgbRowScanning: {
+      case LedArrayDriving.RGB_ROW_SCANNING: {
         final var nrBits = LedArrayGenericHDLGeneratorFactory.getNrOfBitsRequired(nrOfRows);
         nrOfPins = nrBits + 3 * nrOfColumns;
         var preamble = "";
@@ -206,7 +206,7 @@ private static void updateLedArrayRequirements(
         }
         break;
       }
-      case LedArrayDriving.RgbColumnScanning: {
+      case LedArrayDriving.RGB_COLUMN_SCANNING: {
         final var nrBits = LedArrayGenericHDLGeneratorFactory.getNrOfBitsRequired(nrOfColumns);
         nrOfPins = nrBits + 3 * nrOfRows;
         var preamble = "";

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -74,7 +74,7 @@ public ToplevelHDLGeneratorFactory(long fpgaClock, double tickClock, Circuit top
           comp.setArrayId(ledArrays.indexOf(comp));
           hasLedArray = true;
           if (!(comp.getArrayDriveMode() == LedArrayDriving.LED_DEFAULT)
-              && !(comp.getArrayDriveMode() == LedArrayDriving.RgbDefault))
+              && !(comp.getArrayDriveMode() == LedArrayDriving.RGB_DEFAULT))
             hasScanningLedArray = true;
         }
       }

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -111,7 +111,7 @@ public static void doAddCircuit(Project proj) {
       /* Checking for valid names */
       if (name.isEmpty()) {
         error = new JLabel(S.get("circuitNameMissingError"));
-      } else if (CorrectLabel.IsKeyword(name, false)) {
+      } else if (CorrectLabel.isKeyword(name, false)) {
         error = new JLabel("\"" + name + "\": " + S.get("circuitNameKeyword"));
       } else if (!SyntaxChecker.isVariableNameAcceptable(name, false)) {
         error = new JLabel("\"" + name + "\": " + S.get("circuitNameInvalidName"));

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -158,7 +158,7 @@ public void attributeValueChanged(AttributeEvent e) {
         } else if (getFactory().getName().equalsIgnoreCase(value)) {
           OptionPane.showMessageDialog(null, S.get("MatchedLabelNameError"));
           e.getSource().setValue(lattr, oldValue);
-        } else if (CorrectLabel.IsKeyword(value, false)) {
+        } else if (CorrectLabel.isKeyword(value, false)) {
           OptionPane.showMessageDialog(null, "\"" + value + "\": " + S.get("KeywordNameError"));
           e.getSource().setValue(lattr, oldValue);
         } else {

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&DataB;",
           "s_sum_result     <= std_logic_vector(unsigned(s_extended_dataA)+",

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -69,7 +69,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dividend({{calcBits}}-1 DOWNTO {{nrOfBits}}) <= Upper;",
           "s_extended_dividend({{nrOfBits}}-1 DOWNTO 0) <= INP_A;",
           "s_div_result <= std_logic_vector(unsigned(s_extended_dividend) / unsigned(INP_B))",

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_mult_result <= std_logic_vector(unsigned(INP_A)*unsigned(INP_B))",
           "                    WHEN {{unsigned}}= 1 ELSE",
           "                 std_logic_vector(signed(INP_A)*signed(INP_B));",
@@ -82,7 +82,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "Mult_hi       <= s_new_result({{calcBits}}-1 DOWNTO {{nrOfBits}});",
           "Mult_lo       <= s_new_result({{nrOfBits}}-1 DOWNTO 0);");
     } else {
-      Contents.add(
+      Contents.addLines(
           "reg[{{calcBits}}-1:0] s_Cin;",
           "reg[{{calcBits}}-1:0] s_mult_unsigned;",
           "reg[{{calcBits}}-1:0] s_interm_result;",

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_inverted_dataB <= NOT(DataB);",
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&s_inverted_dataB;",
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
               : "Result <= s_sum_result( (" + NrOfBitsStr + "-1) DOWNTO 0 );");
       Contents.add("BorrowOut <= NOT(s_sum_result(" + ExtendedBitsStr + "-1));");
     } else {
-      Contents.add(
+      Contents.addLines(
           "assign   {s_carry,Result} = DataA + ~(DataB) + ~(BorrowIn);",
           "assign   BorrowOut = ~s_carry;");
     }

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -75,7 +75,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "Segment_a <= s_output_value(0);",
             "Segment_b <= s_output_value(1);",
             "Segment_c <= s_output_value(2);",

File: src/main/java/com/cburch/logisim/std/gates/AbstractGateHDLGenerator.java
Patch:
@@ -107,7 +107,7 @@ else if (i < 1000)
               .add("{{1}}Input_{{2}};", whenLineBegin, (i + 1));
         }
       } else {
-        contents.add("   assign s_signal_invert_mask = %s;", BUBBLES_MASK);
+        contents.add("   assign s_signal_invert_mask = {{1}};", BUBBLES_MASK);
         for (var i = 0; i < nrOfInputs; i++) {
           contents.add(
               "   assign s_real_input_{{1}} = (s_signal_invert_mask[{{2}}]) ? ~Input_{{3}}: Input_{{4}};",

File: src/main/java/com/cburch/logisim/std/gates/ControlledBufferHDLGenerator.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       outpName = GetNetName(componentInfo, 0, true, nets);
       triState = HDL.isVHDL() ? "'Z'" : "1'bZ";
     }
-    if (componentInfo.EndIsConnected(2) && componentInfo.EndIsConnected(0)) {
+    if (componentInfo.isEndConnected(2) && componentInfo.isEndConnected(0)) {
       final var invert = ((ControlledBuffer) componentInfo.GetComponent().getFactory()).isInverter()
               ? HDL.notOperator()
               : "";

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.std.Strings.S;
 
-import com.cburch.logisim.analyze.model.Expression;
 import com.cburch.logisim.analyze.model.Expressions;
 import com.cburch.logisim.circuit.ExpressionComputer;
 import com.cburch.logisim.comp.TextField;
@@ -42,9 +41,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;

File: src/main/java/com/cburch/logisim/std/gates/PLAHDLGeneratorFactory.java
Patch:
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           contents.add("{{1}}{{2}} WHEN std_match(Index, {{3}}) ELSE", leader, bits(r.outBits), bits(r.inBits));
           leader = indent;
         }
-        contents.add("%s%s;", leader, zeros(outSz));
+        contents.add("{{1}}{{2}};", leader, zeros(outSz));
       }
     } else {
       // TODO

File: src/main/java/com/cburch/logisim/std/io/AbstractLedHDLGeneratorFactory.java
Patch:
@@ -41,13 +41,13 @@ public class AbstractLedHDLGeneratorFactory extends AbstractHDLGeneratorFactory
   @Override
   public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
     final var contents = new ArrayList<String>();
-    for (var i = 0; i < componentInfo.NrOfEnds(); i++) {
+    for (var i = 0; i < componentInfo.nrOfEnds(); i++) {
       contents.add(
           "   "
               + HDL.assignPreamble()
               + HDLGeneratorFactory.LocalOutputBubbleBusname
               + HDL.BracketOpen()
-              + (componentInfo.GetLocalBubbleOutputStartId() + i)
+              + (componentInfo.getLocalBubbleOutputStartId() + i)
               + HDL.BracketClose()
               + HDL.assignOperator()
               + GetNetName(componentInfo, i, true, nets)

File: src/main/java/com/cburch/logisim/std/io/ButtonHDLGeneratorFactory.java
Patch:
@@ -41,8 +41,8 @@ public class ButtonHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
   @Override
   public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
     final var contents = new ArrayList<String>();
-    for (int i = 0; i < componentInfo.NrOfEnds(); i++) {
-      if (componentInfo.EndIsConnected(i)) {
+    for (int i = 0; i < componentInfo.nrOfEnds(); i++) {
+      if (componentInfo.isEndConnected(i)) {
         final var pressPassive = componentInfo.GetComponent().getAttributeSet().getValue(Button.ATTR_PRESS) ==  Button.BUTTON_PRESS_PASSIVE;
         contents.add(
             "   "
@@ -52,7 +52,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
                 + (pressPassive ? HDL.notOperator() : "")
                 + HDLGeneratorFactory.LocalInputBubbleBusname
                 + HDL.BracketOpen()
-                + (componentInfo.GetLocalBubbleInputStartId() + i)
+                + (componentInfo.getLocalBubbleInputStartId() + i)
                 + HDL.BracketClose()
                 + ";");
       }

File: src/main/java/com/cburch/logisim/std/io/LedBarHDLGeneratorFactory.java
Patch:
@@ -53,9 +53,9 @@ public ArrayList<String> GetInlinedCode(Netlist netlist, Long componentId, Netli
     for (var pin = 0; pin < nrOfSegments; pin++) {
       final var destPin = HDLGeneratorFactory.LocalOutputBubbleBusname
           + HDL.BracketOpen()
-          + (componentInfo.GetLocalBubbleOutputStartId() + pin)
+          + (componentInfo.getLocalBubbleOutputStartId() + pin)
           + HDL.BracketClose();
-      final var sourcePin = isSingleBus ? GetBusEntryName(componentInfo, 0, true, pin, netlist) 
+      final var sourcePin = isSingleBus ? GetBusEntryName(componentInfo, 0, true, pin, netlist)
           : GetNetName(componentInfo, pin, true, netlist);
       contents.add("   " + HDL.assignPreamble() + destPin + HDL.assignOperator() + sourcePin + ";");
     }

File: src/main/java/com/cburch/logisim/std/io/PortHDLGeneratorFactory.java
Patch:
@@ -57,7 +57,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
     final var nBus = (((size - 1) / BitWidth.MAXWIDTH) + 1);
     if (dir == PortIO.INPUT) {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleInputStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleInputStartId() + i * BitWidth.MAXWIDTH;
         var end = start - 1;
         end += Math.min(size, BitWidth.MAXWIDTH);
         size -= BitWidth.MAXWIDTH;
@@ -76,7 +76,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       }
     } else if (dir == PortIO.OUTPUT) {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleOutputStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleOutputStartId() + i * BitWidth.MAXWIDTH;
         var end = start - 1;
         end += Math.min(size, BitWidth.MAXWIDTH);
         size -= BitWidth.MAXWIDTH;
@@ -86,7 +86,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       }
     } else {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleInOutStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleInOutStartId() + i * BitWidth.MAXWIDTH;
         final var nbits = Math.min(size, BitWidth.MAXWIDTH);
         final var end = start - 1 + nbits;
         size -= nbits;

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -77,7 +77,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
         "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
             + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down");
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "CompareOut   <= s_carry;",
           "CountValue   <= s_counter_value;",
           "",
@@ -146,7 +146,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "   END IF;",
           "END PROCESS make_flops;");
     } else {
-      contents.add(
+      contents.addLines(
           "",
           "assign CompareOut = s_carry;",
           "assign CountValue = ({{activeEdge}}) ? s_counter_value : s_counter_value_neg_edge;",
@@ -258,7 +258,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     if (!(mapInfo instanceof NetlistComponent)) return map;
     final var componentInfo = (NetlistComponent) mapInfo;
     final var attrs = componentInfo.GetComponent().getAttributeSet();
-    if (!componentInfo.EndIsConnected(Counter.CK)) {
+    if (!componentInfo.isEndConnected(Counter.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Counter\" in circuit \""
               + nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -73,7 +73,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             .empty();
 
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "Q            <= s_output_reg;",
           "s_InitSeed   <= X\"0005DEECE66D\" WHEN {{seed}} = 0 ELSE",
           "                X\"0000\"&std_logic_vector(to_unsigned({{seed}}, 32))",
@@ -157,7 +157,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           "      END IF;",
           "   END PROCESS make_output;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign Q = s_output_reg;",
           "assign s_InitSeed = ({{seed}}) ? {{seed}}} : 48'h5DEECE66D;",
           "assign s_reset = (s_reset_reg==3'b010) ? 1'b1 : 1'b0;",
@@ -239,7 +239,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     var gatedClock = false;
     var hasClock = true;
     var activeLow = false;
-    if (!comp.EndIsConnected(Random.CK)) {
+    if (!comp.isEndConnected(Random.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Random\" in circuit \""
               + Nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -73,7 +73,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       return (new LineBuffer())
-          .add("%s s_next_state %s s_current_state_reg %sT;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
+          .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
           .getWithIndent();
     }
   }

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
               .addPair("space", space)
               .addPair("i", i);
       if (HDL.isVHDL()) {
-        contents.add(
+        contents.addLines(
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "{{space}}                             Enable = '1' ELSE '0';");

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
       for (var i = 0; i < (1 << nrOfSelectBits); i++) {
         contents.add("                    MuxIn_{{1}},", i);
       }
-      contents.add(
+      contents.addLines(
           "                    Sel )",
           "BEGIN",
           "   IF (Enable = '0') THEN",
@@ -86,7 +86,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
                    "      END CASE;", "   END IF;",
                    "END PROCESS make_mux;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign MuxOut = s_selected_vector;",
           "",
           "always @(*)",

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -86,7 +86,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "enable <= tick and NOT(nCLKen);",
             "nexts  <= D7&D6&D5&D4&D3&D2&D1&D0 WHEN enable = '1' ELSE state;",
             "Q0     <= state(0);",
@@ -115,7 +115,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     var gatedClock = false;
     var hasClock = true;
     final var clockPinIndex = comp.GetComponent().getFactory().ClockPinIndex(null)[0];
-    if (!comp.EndIsConnected(clockPinIndex)) {
+    if (!comp.isEndConnected(clockPinIndex)) {
       Reporter.Report.AddSevereWarning(
           "Component \""
               + getComponentStringIdentifier()

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -29,7 +29,6 @@
 package com.cburch.logisim.std.ttl;
 
 import com.cburch.logisim.data.AttributeSet;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.util.LineBuffer;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -83,9 +83,8 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
-    return contents
-        .add(
+    return (new LineBuffer())
+        .addLines(
             "oppA   <= \"0\"&A4&A3&A2&A1;",
             "oppB   <= \"0\"&B4&B3&B2&B1;",
             "oppC   <= \"0000\"&Cin;",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -83,7 +83,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Sega  <= segments(0,",
             "Segb  <= segments(1,",
             "Segc  <= segments(2,",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -87,7 +87,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Q1  <= state1;",
             "nQ1 <= NOT(state1,",
             "Q2  <= state1;",
@@ -123,7 +123,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
       var gatedClock = false;
       var hasClock = true;
       int clockPinIndex = componentinfo.GetComponent().getFactory().ClockPinIndex(null)[i];
-      if (!componentinfo.EndIsConnected(clockPinIndex)) {
+      if (!componentinfo.isEndConnected(clockPinIndex)) {
         Reporter.Report.AddSevereWarning(
             "Component \"TTL7474\" in circuit \""
                 + Nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -88,7 +88,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "oppA   <= A3&A2&A1&A0;",
             "oppB   <= B3&B2&B1&B0;",
             "gt     <= '1' WHEN unsigned(oppA) > unsigned(oppB) ELSE '0';",

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -47,9 +47,9 @@ public ArrayList<String> GetInlinedCode(
       NetlistComponent ComponentInfo,
       String CircuitName) {
     final var Contents = new LineBuffer();
-    int NrOfPins = ComponentInfo.NrOfEnds();
+    int NrOfPins = ComponentInfo.nrOfEnds();
     for (int i = 1; i < NrOfPins; i++) {
-      if (!ComponentInfo.EndIsConnected(i)) {
+      if (!ComponentInfo.isEndConnected(i)) {
         Reporter.Report.AddError(
             "Bit Extender component has floating input connection in circuit \""
                 + CircuitName

File: src/main/java/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -160,12 +160,12 @@ public void stop(Circuit circ) {
   }
 
   public static boolean labelEndsWithNumber(String label) {
-    return CorrectLabel.Numbers.contains(label.substring(label.length() - 1));
+    return CorrectLabel.NUMBERS.contains(label.substring(label.length() - 1));
   }
 
   private int getLabelBaseEndIndex(String label) {
     var index = label.length();
-    while ((index > 1) && CorrectLabel.Numbers.contains(label.substring(index - 1, index))) index--;
+    while ((index > 1) && CorrectLabel.NUMBERS.contains(label.substring(index - 1, index))) index--;
     return (index - 1);
   }
 
@@ -214,7 +214,7 @@ public String askAndSetLabel(String componentName, String oldLabel, Circuit circ
       if (newLabel != null) {
         if (Circuit.IsCorrectLabel(circ.getName(), newLabel, circ.getNonWires(), attrs, compFactory, true)
             && SyntaxChecker.isVariableNameAcceptable(newLabel, true)
-            && !CorrectLabel.IsKeyword(newLabel, true)) {
+            && !CorrectLabel.isKeyword(newLabel, true)) {
           if (createAction) act.set(comp, StdAttr.LABEL, newLabel);
           else setLabel(newLabel, circ, compFactory);
           correct = true;

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -231,7 +231,7 @@ public LineBuffer add(Collection<String> lines) {
     return this;
   }
 
-  public LineBuffer add(String... lines) {
+  public LineBuffer addLines(String... lines) {
     return add(Arrays.asList(lines));
   }
 
@@ -340,7 +340,7 @@ public ArrayList<String> getWithIndent(String indent) {
    * @param remarkText Remark text.
    */
   public LineBuffer addRemarkBlock(String remarkText) {
-    return addRemarkBlock(remarkText, DEFAULT_INDENT);
+    return addRemarkBlock(remarkText, 0);
   }
 
   /**

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -43,7 +43,7 @@ public static String getErrorMessage(String val) {
     if (val.length() > 0) {
       variableMatcher = variablePattern.matcher(val);
       forbiddenMatcher = forbiddenPattern.matcher(val);
-      final var hdl = CorrectLabel.HDLCorrectLabel(val);
+      final var hdl = CorrectLabel.hdlCorrectLabel(val);
       var message = "";
       if (!variableMatcher.matches()) {
         message = message.concat(S.get("variableInvalidCharacters"));

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlContent.java
Patch:
@@ -122,6 +122,7 @@ protected VhdlContent(String name, LogisimFile file) {
     ports = new ArrayList<>();
   }
 
+  @Override
   public VhdlContent clone() {
     try {
       VhdlContent ret = (VhdlContent) super.clone();
@@ -225,7 +226,7 @@ public void aboutToSave() {
   public static boolean labelVHDLInvalid(String label) {
     if (!label.matches("^[A-Za-z][A-Za-z0-9_]*") || label.endsWith("_") || label.matches(".*__.*"))
       return (true);
-    return CorrectLabel.VHDLKeywords.contains(label.toLowerCase());
+    return CorrectLabel.VHDL_KEYWORDS.contains(label.toLowerCase());
   }
 
   public static boolean labelVHDLInvalidNotify(String label, LogisimFile file) {
@@ -234,7 +235,7 @@ public static boolean labelVHDLInvalidNotify(String label, LogisimFile file) {
         || label.endsWith("_")
         || label.matches(".*__.*")) {
       err = S.get("vhdlInvalidNameError");
-    } else if (CorrectLabel.VHDLKeywords.contains(label.toLowerCase())) {
+    } else if (CorrectLabel.VHDL_KEYWORDS.contains(label.toLowerCase())) {
       err = S.get("vhdlKeywordNameError");
     } else if (file != null && file.containsFactory(label)) {
       err = S.get("vhdlDuplicateNameError");

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -283,7 +283,7 @@ private ArrayList<String> getPinLocStrings() {
     }
     final var ledArrayMap = DownloadBase.getLedArrayMaps(mapInfo, RootNetList, boardInfo);
     for (final var key : ledArrayMap.keySet())
-      contents.add("set_location_assignment {{1}}-to {{2}}", ledArrayMap.get(key), key);
+      contents.add("set_location_assignment {{1}} -to {{2}}", ledArrayMap.get(key), key);
     return contents.getWithIndent(4);
   }
 

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -12,9 +12,9 @@
 
 public class LedArrayGenericHDLGeneratorFactory {
   public static String LedArrayOutputs = "externalLeds";
-  public static String LedArrayRedOutputs = "externalLeds";
-  public static String LedArrayGreenOutputs = "externalLeds";
-  public static String LedArrayBlueOutputs = "externalLeds";
+  public static String LedArrayRedOutputs = "externalRedLeds";
+  public static String LedArrayGreenOutputs = "externalGreenLeds";
+  public static String LedArrayBlueOutputs = "externalBlueLeds";
   public static String LedArrayRowOutputs = "rowLeds";
   public static String LedArrayRowRedOutputs = "rowRedLeds";
   public static String LedArrayRowGreenOutputs = "rowGreenLeds";

File: src/main/java/com/cburch/logisim/std/wiring/ClockHDLGeneratorFactory.java
Patch:
@@ -119,12 +119,12 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     Contents.add("").addRemarkBlock("Here the control signals are defined");
     if (HDL.isVHDL()) {
       Contents.addLines(
-          "s_counter_is_zero <= '1' WHEN s_counter_reg = std_logic_vector(to_unsigned(0,{{nrOfBitsStr}})) ELSE '0';",
+          "s_counter_is_zero <= '1' WHEN s_counter_reg = std_logic_vector(to_unsigned(0,{{nrOfBits}})) ELSE '0';",
           "s_counter_next    <= std_logic_vector(unsigned(s_counter_reg) - 1)",
           "                       WHEN s_counter_is_zero = '0' ELSE",
-          "                    std_logic_vector(to_unsigned(({{lowTick}}-1), {{nrOfBitsStr}}))",
+          "                    std_logic_vector(to_unsigned(({{lowTick}}-1), {{nrOfBits}}))",
           "                       WHEN s_derived_clock_reg(0) = '1' ELSE",
-          "                    std_logic_vector(to_unsigned(({{highTick}}-1), {{nrOfBitsStr}}));"
+          "                    std_logic_vector(to_unsigned(({{highTick}}-1), {{nrOfBits}}));"
       );
     } else {
       Contents.addLines(

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -257,14 +257,14 @@ private ArrayList<String> getPinLocStrings() {
           if (info != null) {
             final var ioStandard = info.GetIOStandard();
             if (ioStandard != IoStandards.UNKNOWN && ioStandard != IoStandards.DEFAULT_STANDARD)
-              contents.add("    set_property IOSTANDARD %s [get_ports {%s}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
+              contents.add("    set_property IOSTANDARD {{1}} [get_ports {{{2}}}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
           }
         }
       }
     }
     final var LedArrayMap = DownloadBase.getLedArrayMaps(MapInfo, RootNetList, BoardInfo);
     for (final var key : LedArrayMap.keySet()) {
-      contents.add("set_property PACKAGE_PIN %s [get_ports {%s}]", key, LedArrayMap.get(key));
+      contents.add("set_property PACKAGE_PIN {{1}} [get_ports {{{2}}}]", key, LedArrayMap.get(key));
     }
     return contents.get();
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -258,7 +258,7 @@ public ArrayList<String> GetArchitecture(Netlist theNetlist, AttributeSet attrs,
         Contents.empty();
         Contents.addRemarkBlock("Here all module parameters are defined with a dummy value");
         for (final var param : params.keySet()) {
-          Contents.add("   parameter %s = 1;", params.get(param));
+          Contents.add("   parameter {{1}} = 1;", params.get(param));
         }
         Contents.empty();
       }

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&DataB;",
           "s_sum_result     <= std_logic_vector(unsigned(s_extended_dataA)+",

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -69,7 +69,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dividend({{calcBits}}-1 DOWNTO {{nrOfBits}}) <= Upper;",
           "s_extended_dividend({{nrOfBits}}-1 DOWNTO 0) <= INP_A;",
           "s_div_result <= std_logic_vector(unsigned(s_extended_dividend) / unsigned(INP_B))",

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_mult_result <= std_logic_vector(unsigned(INP_A)*unsigned(INP_B))",
           "                    WHEN {{unsigned}}= 1 ELSE",
           "                 std_logic_vector(signed(INP_A)*signed(INP_B));",
@@ -82,7 +82,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "Mult_hi       <= s_new_result({{calcBits}}-1 DOWNTO {{nrOfBits}});",
           "Mult_lo       <= s_new_result({{nrOfBits}}-1 DOWNTO 0);");
     } else {
-      Contents.add(
+      Contents.addLines(
           "reg[{{calcBits}}-1:0] s_Cin;",
           "reg[{{calcBits}}-1:0] s_mult_unsigned;",
           "reg[{{calcBits}}-1:0] s_interm_result;",

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_inverted_dataB <= NOT(DataB);",
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&s_inverted_dataB;",
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
               : "Result <= s_sum_result( (" + NrOfBitsStr + "-1) DOWNTO 0 );");
       Contents.add("BorrowOut <= NOT(s_sum_result(" + ExtendedBitsStr + "-1));");
     } else {
-      Contents.add(
+      Contents.addLines(
           "assign   {s_carry,Result} = DataA + ~(DataB) + ~(BorrowIn);",
           "assign   BorrowOut = ~s_carry;");
     }

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -75,7 +75,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "Segment_a <= s_output_value(0);",
             "Segment_b <= s_output_value(1);",
             "Segment_c <= s_output_value(2);",

File: src/main/java/com/cburch/logisim/std/gates/AbstractGateHDLGenerator.java
Patch:
@@ -107,7 +107,7 @@ else if (i < 1000)
               .add("{{1}}Input_{{2}};", whenLineBegin, (i + 1));
         }
       } else {
-        contents.add("   assign s_signal_invert_mask = %s;", BUBBLES_MASK);
+        contents.add("   assign s_signal_invert_mask = {{1}};", BUBBLES_MASK);
         for (var i = 0; i < nrOfInputs; i++) {
           contents.add(
               "   assign s_real_input_{{1}} = (s_signal_invert_mask[{{2}}]) ? ~Input_{{3}}: Input_{{4}};",

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.std.Strings.S;
 
-import com.cburch.logisim.analyze.model.Expression;
 import com.cburch.logisim.analyze.model.Expressions;
 import com.cburch.logisim.circuit.ExpressionComputer;
 import com.cburch.logisim.comp.TextField;
@@ -42,9 +41,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;

File: src/main/java/com/cburch/logisim/std/gates/PLAHDLGeneratorFactory.java
Patch:
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           contents.add("{{1}}{{2}} WHEN std_match(Index, {{3}}) ELSE", leader, bits(r.outBits), bits(r.inBits));
           leader = indent;
         }
-        contents.add("%s%s;", leader, zeros(outSz));
+        contents.add("{{1}}{{2}};", leader, zeros(outSz));
       }
     } else {
       // TODO

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -58,7 +58,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       if (componentInfo.EndIsConnected(HexDigit.HEX)) {
         contents
             .add("WITH ({{busName}}) SELECT {{bubbleBusName}}( {{1}} DOWNTO {{startId}} ) <= ", (startId + 6))
-            .add(
+            .addLines(
                 "   \"0111111\" WHEN \"0000\",",
                 "   \"0000110\" WHEN \"0001\",",
                 "   \"1011011\" WHEN \"0010\",",
@@ -84,7 +84,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
     } else {
       if (componentInfo.EndIsConnected(HexDigit.HEX)) {
         contents
-            .add(
+            .addLines(
                 "",
                 "reg[6:0] {{regName}};",
                 "always @(*)",

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -77,7 +77,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
         "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
             + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down");
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "CompareOut   <= s_carry;",
           "CountValue   <= s_counter_value;",
           "",
@@ -146,7 +146,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "   END IF;",
           "END PROCESS make_flops;");
     } else {
-      contents.add(
+      contents.addLines(
           "",
           "assign CompareOut = s_carry;",
           "assign CountValue = ({{activeEdge}}) ? s_counter_value : s_counter_value_neg_edge;",

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -73,7 +73,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             .empty();
 
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "Q            <= s_output_reg;",
           "s_InitSeed   <= X\"0005DEECE66D\" WHEN {{seed}} = 0 ELSE",
           "                X\"0000\"&std_logic_vector(to_unsigned({{seed}}, 32))",
@@ -157,7 +157,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           "      END IF;",
           "   END PROCESS make_output;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign Q = s_output_reg;",
           "assign s_InitSeed = ({{seed}}) ? {{seed}}} : 48'h5DEECE66D;",
           "assign s_reset = (s_reset_reg==3'b010) ? 1'b1 : 1'b0;",

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -73,7 +73,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       return (new LineBuffer())
-          .add("%s s_next_state %s s_current_state_reg %sT;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
+          .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}} T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
           .getWithIndent();
     }
   }

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
               .addPair("space", space)
               .addPair("i", i);
       if (HDL.isVHDL()) {
-        contents.add(
+        contents.addLines(
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "{{space}}                             Enable = '1' ELSE '0';");

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
       for (var i = 0; i < (1 << nrOfSelectBits); i++) {
         contents.add("                    MuxIn_{{1}},", i);
       }
-      contents.add(
+      contents.addLines(
           "                    Sel )",
           "BEGIN",
           "   IF (Enable = '0') THEN",
@@ -86,7 +86,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
                    "      END CASE;", "   END IF;",
                    "END PROCESS make_mux;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign MuxOut = s_selected_vector;",
           "",
           "always @(*)",

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             .addPair("selBits", NR_OF_SELECT_BITS_STR)
             .addPair("inBits", NR_OF_INPUT_BITS_STR);
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "   -- Output Signals",
           "   GroupSelect <= NOT(s_in_is_zero) AND enable;",
           "   EnableOut   <= s_in_is_zero AND enable;",
@@ -102,7 +102,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           "      END IF;",
           "   END PROCESS make_addr;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign GroupSelect = ~s_in_is_zero&enable;",
           "assign EnableOut = s_in_is_zero&enable;",
           "assign Address = (~enable) ? 0 : s_address[{{selBits}}-1:0];",

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -86,7 +86,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "enable <= tick and NOT(nCLKen);",
             "nexts  <= D7&D6&D5&D4&D3&D2&D1&D0 WHEN enable = '1' ELSE state;",
             "Q0     <= state(0);",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -29,7 +29,6 @@
 package com.cburch.logisim.std.ttl;
 
 import com.cburch.logisim.data.AttributeSet;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.util.LineBuffer;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -84,9 +84,8 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
-    return contents
-        .add(
+    return (new LineBuffer())
+        .addLines(
             "NextState <= CurState WHEN tick = '0' ELSE",
             "             D4&D3&D2&D1;",
             "",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -83,9 +83,8 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
-    return contents
-        .add(
+    return (new LineBuffer())
+        .addLines(
             "oppA   <= \"0\"&A4&A3&A2&A1;",
             "oppB   <= \"0\"&B4&B3&B2&B1;",
             "oppC   <= \"0000\"&Cin;",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -83,7 +83,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Sega  <= segments(0,",
             "Segb  <= segments(1,",
             "Segc  <= segments(2,",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -87,7 +87,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Q1  <= state1;",
             "nQ1 <= NOT(state1,",
             "Q2  <= state1;",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -88,7 +88,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "oppA   <= A3&A2&A1&A0;",
             "oppB   <= B3&B2&B1&B0;",
             "gt     <= '1' WHEN unsigned(oppA) > unsigned(oppB) ELSE '0';",

File: src/main/java/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -68,12 +68,12 @@ public ArrayList<String> GetInlinedCode(
       long ConstantValue = GetConstant(ComponentInfo.GetComponent().getAttributeSet());
       if (ComponentInfo.GetComponent().getEnd(0).getWidth().getWidth() == 1) {
         /* Single Port net */
-        Contents.add("{{assign}} %s {{=}} %s;", GetNetName(ComponentInfo, 0, true, Nets), GetConvertOperator(ConstantValue, 1))
+        Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetNetName(ComponentInfo, 0, true, Nets), GetConvertOperator(ConstantValue, 1))
             .add("");
       } else {
         if (Nets.IsContinuesBus(ComponentInfo, 0)) {
           /* easy case */
-          Contents.add("{{assign}} %s {{=}} %s;", GetBusNameContinues(ComponentInfo, 0, Nets), GetConvertOperator(ConstantValue, NrOfBits));
+          Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetBusNameContinues(ComponentInfo, 0, Nets), GetConvertOperator(ConstantValue, NrOfBits));
           Contents.add("");
         } else {
           /* we have to enumerate all bits */
@@ -83,7 +83,7 @@ public ArrayList<String> GetInlinedCode(
             if ((mask & ConstantValue) != 0) ConstValue = HDL.oneBit();
             else ConstValue = HDL.zeroBit();
             mask <<= 1;
-            Contents.add("{{assign}} %s {{=}} %s;", GetBusEntryName(ComponentInfo, 0, true, bit, Nets), ConstValue);
+            Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetBusEntryName(ComponentInfo, 0, true, bit, Nets), ConstValue);
           }
           Contents.add("");
         }

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -231,7 +231,7 @@ public LineBuffer add(Collection<String> lines) {
     return this;
   }
 
-  public LineBuffer add(String... lines) {
+  public LineBuffer addLines(String... lines) {
     return add(Arrays.asList(lines));
   }
 

File: src/main/java/com/cburch/logisim/fpga/data/FPGACommanderListModel.java
Patch:
@@ -28,7 +28,7 @@
 
 package com.cburch.logisim.fpga.data;
 
-import com.cburch.logisim.fpga.designrulecheck.SimpleDRCContainer;
+import com.cburch.logisim.fpga.designrulecheck.simpleDRCContainer;
 import com.cburch.logisim.fpga.gui.ListModelCellRenderer;
 import java.util.ArrayList;
 import java.util.HashSet;
@@ -64,8 +64,8 @@ public void clear() {
 
   public void add(Object toAdd) {
     count++;
-    if (toAdd instanceof SimpleDRCContainer) {
-      SimpleDRCContainer add = (SimpleDRCContainer) toAdd;
+    if (toAdd instanceof simpleDRCContainer) {
+      simpleDRCContainer add = (simpleDRCContainer) toAdd;
       if (add.SupressCount()) count--;
       else add.SetListNumber(count);
     }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockSourceContainer.java
Patch:
@@ -62,7 +62,7 @@ public int getClockId(Component comp) {
     if (!(comp.getFactory() instanceof Clock)) {
       return -1;
     }
-    for (Component clock : sources) {
+    for (final var clock : sources) {
       if (equals(comp, clock)) {
         return sources.indexOf(clock);
       }

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -111,7 +111,7 @@ public static void doAddCircuit(Project proj) {
       /* Checking for valid names */
       if (name.isEmpty()) {
         error = new JLabel(S.get("circuitNameMissingError"));
-      } else if (CorrectLabel.IsKeyword(name, false)) {
+      } else if (CorrectLabel.isKeyword(name, false)) {
         error = new JLabel("\"" + name + "\": " + S.get("circuitNameKeyword"));
       } else if (!SyntaxChecker.isVariableNameAcceptable(name, false)) {
         error = new JLabel("\"" + name + "\": " + S.get("circuitNameInvalidName"));

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -158,7 +158,7 @@ public void attributeValueChanged(AttributeEvent e) {
         } else if (getFactory().getName().equalsIgnoreCase(value)) {
           OptionPane.showMessageDialog(null, S.get("MatchedLabelNameError"));
           e.getSource().setValue(lattr, oldValue);
-        } else if (CorrectLabel.IsKeyword(value, false)) {
+        } else if (CorrectLabel.isKeyword(value, false)) {
           OptionPane.showMessageDialog(null, "\"" + value + "\": " + S.get("KeywordNameError"));
           e.getSource().setValue(lattr, oldValue);
         } else {

File: src/main/java/com/cburch/logisim/std/gates/ControlledBufferHDLGenerator.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       outpName = GetNetName(componentInfo, 0, true, nets);
       triState = HDL.isVHDL() ? "'Z'" : "1'bZ";
     }
-    if (componentInfo.EndIsConnected(2) && componentInfo.EndIsConnected(0)) {
+    if (componentInfo.isEndConnected(2) && componentInfo.isEndConnected(0)) {
       final var invert = ((ControlledBuffer) componentInfo.GetComponent().getFactory()).isInverter()
               ? HDL.notOperator()
               : "";

File: src/main/java/com/cburch/logisim/std/io/AbstractLedHDLGeneratorFactory.java
Patch:
@@ -41,13 +41,13 @@ public class AbstractLedHDLGeneratorFactory extends AbstractHDLGeneratorFactory
   @Override
   public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
     final var contents = new ArrayList<String>();
-    for (var i = 0; i < componentInfo.NrOfEnds(); i++) {
+    for (var i = 0; i < componentInfo.nrOfEnds(); i++) {
       contents.add(
           "   "
               + HDL.assignPreamble()
               + HDLGeneratorFactory.LocalOutputBubbleBusname
               + HDL.BracketOpen()
-              + (componentInfo.GetLocalBubbleOutputStartId() + i)
+              + (componentInfo.getLocalBubbleOutputStartId() + i)
               + HDL.BracketClose()
               + HDL.assignOperator()
               + GetNetName(componentInfo, i, true, nets)

File: src/main/java/com/cburch/logisim/std/io/ButtonHDLGeneratorFactory.java
Patch:
@@ -41,8 +41,8 @@ public class ButtonHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
   @Override
   public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistComponent componentInfo, String circuitName) {
     final var contents = new ArrayList<String>();
-    for (int i = 0; i < componentInfo.NrOfEnds(); i++) {
-      if (componentInfo.EndIsConnected(i)) {
+    for (int i = 0; i < componentInfo.nrOfEnds(); i++) {
+      if (componentInfo.isEndConnected(i)) {
         final var pressPassive = componentInfo.GetComponent().getAttributeSet().getValue(Button.ATTR_PRESS) ==  Button.BUTTON_PRESS_PASSIVE;
         contents.add(
             "   "
@@ -52,7 +52,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
                 + (pressPassive ? HDL.notOperator() : "")
                 + HDLGeneratorFactory.LocalInputBubbleBusname
                 + HDL.BracketOpen()
-                + (componentInfo.GetLocalBubbleInputStartId() + i)
+                + (componentInfo.getLocalBubbleInputStartId() + i)
                 + HDL.BracketClose()
                 + ";");
       }

File: src/main/java/com/cburch/logisim/std/io/LedBarHDLGeneratorFactory.java
Patch:
@@ -53,9 +53,9 @@ public ArrayList<String> GetInlinedCode(Netlist netlist, Long componentId, Netli
     for (var pin = 0; pin < nrOfSegments; pin++) {
       final var destPin = HDLGeneratorFactory.LocalOutputBubbleBusname
           + HDL.BracketOpen()
-          + (componentInfo.GetLocalBubbleOutputStartId() + pin)
+          + (componentInfo.getLocalBubbleOutputStartId() + pin)
           + HDL.BracketClose();
-      final var sourcePin = isSingleBus ? GetBusEntryName(componentInfo, 0, true, pin, netlist) 
+      final var sourcePin = isSingleBus ? GetBusEntryName(componentInfo, 0, true, pin, netlist)
           : GetNetName(componentInfo, pin, true, netlist);
       contents.add("   " + HDL.assignPreamble() + destPin + HDL.assignOperator() + sourcePin + ";");
     }

File: src/main/java/com/cburch/logisim/std/io/PortHDLGeneratorFactory.java
Patch:
@@ -57,7 +57,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
     final var nBus = (((size - 1) / BitWidth.MAXWIDTH) + 1);
     if (dir == PortIO.INPUT) {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleInputStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleInputStartId() + i * BitWidth.MAXWIDTH;
         var end = start - 1;
         end += Math.min(size, BitWidth.MAXWIDTH);
         size -= BitWidth.MAXWIDTH;
@@ -76,7 +76,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       }
     } else if (dir == PortIO.OUTPUT) {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleOutputStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleOutputStartId() + i * BitWidth.MAXWIDTH;
         var end = start - 1;
         end += Math.min(size, BitWidth.MAXWIDTH);
         size -= BitWidth.MAXWIDTH;
@@ -86,7 +86,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       }
     } else {
       for (var i = 0; i < nBus; i++) {
-        final var start = componentInfo.GetLocalBubbleInOutStartId() + i * BitWidth.MAXWIDTH;
+        final var start = componentInfo.getLocalBubbleInOutStartId() + i * BitWidth.MAXWIDTH;
         final var nbits = Math.min(size, BitWidth.MAXWIDTH);
         final var end = start - 1 + nbits;
         size -= nbits;

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -258,7 +258,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     if (!(mapInfo instanceof NetlistComponent)) return map;
     final var componentInfo = (NetlistComponent) mapInfo;
     final var attrs = componentInfo.GetComponent().getAttributeSet();
-    if (!componentInfo.EndIsConnected(Counter.CK)) {
+    if (!componentInfo.isEndConnected(Counter.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Counter\" in circuit \""
               + nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -264,7 +264,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     map.putAll(GetNetMap("WE", true, comp, RamAppearance.getWEIndex(0, attrs), nets));
     map.putAll(GetNetMap("OE", true, comp, RamAppearance.getOEIndex(0, attrs), nets));
     if (!asynch) {
-      if (!comp.EndIsConnected(RamAppearance.getClkIndex(0, attrs))) {
+      if (!comp.isEndConnected(RamAppearance.getClkIndex(0, attrs))) {
         Reporter.Report.AddError(
             "Component \"RAM\" in circuit \""
                 + nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -239,7 +239,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     var gatedClock = false;
     var hasClock = true;
     var activeLow = false;
-    if (!comp.EndIsConnected(Random.CK)) {
+    if (!comp.isEndConnected(Random.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Random\" in circuit \""
               + Nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -188,7 +188,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     var hasClock = true;
     var activeLow = false;
     final var attrs = comp.GetComponent().getAttributeSet();
-    if (!comp.EndIsConnected(Register.CK)) {
+    if (!comp.isEndConnected(Register.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Register\" in circuit \""
               + Nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -309,7 +309,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     final var attrs = comp.GetComponent().getAttributeSet();
     final var nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     final var nrOfStages = attrs.getValue(ShiftRegister.ATTR_LENGTH);
-    if (!comp.EndIsConnected(ShiftRegister.CK)) {
+    if (!comp.isEndConnected(ShiftRegister.CK)) {
       Reporter.Report.AddSevereWarning(
           "Component \"Shift Register\" in circuit \""
               + nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -142,7 +142,7 @@ public SortedMap<Integer, String> GetParameterList(AttributeSet attrs) {
   @Override
   public SortedMap<String, Integer> GetParameterMap(Netlist nets, NetlistComponent componentInfo) {
     final var map = new TreeMap<String, Integer>();
-    final var nrOfBits = componentInfo.NrOfEnds() - 4;
+    final var nrOfBits = componentInfo.nrOfEnds() - 4;
     final var nrOfSelectBits = componentInfo.GetComponent().getEnd(nrOfBits + PriorityEncoder.OUT).getWidth().getWidth();
     map.put(NR_OF_SELECT_BITS_STR, nrOfSelectBits);
     map.put(NR_OF_INPUT_BITS_STR, 1 << nrOfSelectBits);
@@ -154,7 +154,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     final var map = new TreeMap<String, String>();
     if (!(mapInfo instanceof NetlistComponent)) return map;
     final var comp = (NetlistComponent) mapInfo;
-    final var nrOfBits = comp.NrOfEnds() - 4;
+    final var nrOfBits = comp.nrOfEnds() - 4;
     map.putAll(GetNetMap("enable", false, comp, nrOfBits + PriorityEncoder.EN_IN, nets));
     final var vectorList = new StringBuilder();
     for (var i = nrOfBits - 1; i >= 0; i--) {

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -115,7 +115,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     var gatedClock = false;
     var hasClock = true;
     final var clockPinIndex = comp.GetComponent().getFactory().ClockPinIndex(null)[0];
-    if (!comp.EndIsConnected(clockPinIndex)) {
+    if (!comp.isEndConnected(clockPinIndex)) {
       Reporter.Report.AddSevereWarning(
           "Component \""
               + getComponentStringIdentifier()

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -113,7 +113,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     var gatedClock = false;
     var hasClock = true;
     final var ClockPinIndex = comp.GetComponent().getFactory().ClockPinIndex(null)[0];
-    if (!comp.EndIsConnected(ClockPinIndex)) {
+    if (!comp.isEndConnected(ClockPinIndex)) {
       Reporter.Report.AddSevereWarning(
           "Component \"TTL74165\" in circuit \""
               + nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -117,7 +117,7 @@ public SortedMap<String, String> GetPortMap(Netlist nets, Object mapInfo) {
     var gatedClock = false;
     var hasClock = true;
     int clockPinIndex = comp.GetComponent().getFactory().ClockPinIndex(null)[0];
-    if (!comp.EndIsConnected(clockPinIndex)) {
+    if (!comp.isEndConnected(clockPinIndex)) {
       Reporter.Report.AddSevereWarning("Component \"TTL74165\" in circuit \"" + nets.getCircuitName()
               + "\" has no clock connection");
       hasClock = false;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -123,7 +123,7 @@ public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
       var gatedClock = false;
       var hasClock = true;
       int clockPinIndex = componentinfo.GetComponent().getFactory().ClockPinIndex(null)[i];
-      if (!componentinfo.EndIsConnected(clockPinIndex)) {
+      if (!componentinfo.isEndConnected(clockPinIndex)) {
         Reporter.Report.AddSevereWarning(
             "Component \"TTL7474\" in circuit \""
                 + Nets.getCircuitName()

File: src/main/java/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -64,7 +64,7 @@ public ArrayList<String> GetInlinedCode(
       String CircuitName) {
     final var Contents = (new LineBuffer()).withHdlPairs();
     int NrOfBits = ComponentInfo.GetComponent().getEnd(0).getWidth().getWidth();
-    if (ComponentInfo.EndIsConnected(0)) {
+    if (ComponentInfo.isEndConnected(0)) {
       long ConstantValue = GetConstant(ComponentInfo.GetComponent().getAttributeSet());
       if (ComponentInfo.GetComponent().getEnd(0).getWidth().getWidth() == 1) {
         /* Single Port net */

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -47,9 +47,9 @@ public ArrayList<String> GetInlinedCode(
       NetlistComponent ComponentInfo,
       String CircuitName) {
     final var Contents = new LineBuffer();
-    int NrOfPins = ComponentInfo.NrOfEnds();
+    int NrOfPins = ComponentInfo.nrOfEnds();
     for (int i = 1; i < NrOfPins; i++) {
-      if (!ComponentInfo.EndIsConnected(i)) {
+      if (!ComponentInfo.isEndConnected(i)) {
         Reporter.Report.AddError(
             "Bit Extender component has floating input connection in circuit \""
                 + CircuitName

File: src/main/java/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -160,12 +160,12 @@ public void stop(Circuit circ) {
   }
 
   public static boolean labelEndsWithNumber(String label) {
-    return CorrectLabel.Numbers.contains(label.substring(label.length() - 1));
+    return CorrectLabel.NUMBERS.contains(label.substring(label.length() - 1));
   }
 
   private int getLabelBaseEndIndex(String label) {
     var index = label.length();
-    while ((index > 1) && CorrectLabel.Numbers.contains(label.substring(index - 1, index))) index--;
+    while ((index > 1) && CorrectLabel.NUMBERS.contains(label.substring(index - 1, index))) index--;
     return (index - 1);
   }
 
@@ -214,7 +214,7 @@ public String askAndSetLabel(String componentName, String oldLabel, Circuit circ
       if (newLabel != null) {
         if (Circuit.IsCorrectLabel(circ.getName(), newLabel, circ.getNonWires(), attrs, compFactory, true)
             && SyntaxChecker.isVariableNameAcceptable(newLabel, true)
-            && !CorrectLabel.IsKeyword(newLabel, true)) {
+            && !CorrectLabel.isKeyword(newLabel, true)) {
           if (createAction) act.set(comp, StdAttr.LABEL, newLabel);
           else setLabel(newLabel, circ, compFactory);
           correct = true;

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -43,7 +43,7 @@ public static String getErrorMessage(String val) {
     if (val.length() > 0) {
       variableMatcher = variablePattern.matcher(val);
       forbiddenMatcher = forbiddenPattern.matcher(val);
-      final var hdl = CorrectLabel.HDLCorrectLabel(val);
+      final var hdl = CorrectLabel.hdlCorrectLabel(val);
       var message = "";
       if (!variableMatcher.matches()) {
         message = message.concat(S.get("variableInvalidCharacters"));

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlContent.java
Patch:
@@ -122,6 +122,7 @@ protected VhdlContent(String name, LogisimFile file) {
     ports = new ArrayList<>();
   }
 
+  @Override
   public VhdlContent clone() {
     try {
       VhdlContent ret = (VhdlContent) super.clone();
@@ -225,7 +226,7 @@ public void aboutToSave() {
   public static boolean labelVHDLInvalid(String label) {
     if (!label.matches("^[A-Za-z][A-Za-z0-9_]*") || label.endsWith("_") || label.matches(".*__.*"))
       return (true);
-    return CorrectLabel.VHDLKeywords.contains(label.toLowerCase());
+    return CorrectLabel.VHDL_KEYWORDS.contains(label.toLowerCase());
   }
 
   public static boolean labelVHDLInvalidNotify(String label, LogisimFile file) {
@@ -234,7 +235,7 @@ public static boolean labelVHDLInvalidNotify(String label, LogisimFile file) {
         || label.endsWith("_")
         || label.matches(".*__.*")) {
       err = S.get("vhdlInvalidNameError");
-    } else if (CorrectLabel.VHDLKeywords.contains(label.toLowerCase())) {
+    } else if (CorrectLabel.VHDL_KEYWORDS.contains(label.toLowerCase())) {
       err = S.get("vhdlKeywordNameError");
     } else if (file != null && file.containsFactory(label)) {
       err = S.get("vhdlDuplicateNameError");

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -257,14 +257,14 @@ private ArrayList<String> getPinLocStrings() {
           if (info != null) {
             final var ioStandard = info.GetIOStandard();
             if (ioStandard != IoStandards.UNKNOWN && ioStandard != IoStandards.DEFAULT_STANDARD)
-              contents.add("    set_property IOSTANDARD %s [get_ports {%s}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
+              contents.add("    set_property IOSTANDARD {{1}} [get_ports {{{2}}}]", IoStandards.GetConstraintedIoStandard(info.GetIOStandard()), netName);
           }
         }
       }
     }
     final var LedArrayMap = DownloadBase.getLedArrayMaps(MapInfo, RootNetList, BoardInfo);
     for (final var key : LedArrayMap.keySet()) {
-      contents.add("set_property PACKAGE_PIN %s [get_ports {%s}]", key, LedArrayMap.get(key));
+      contents.add("set_property PACKAGE_PIN {{1}} [get_ports {{{2}}}]", key, LedArrayMap.get(key));
     }
     return contents.get();
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -258,7 +258,7 @@ public ArrayList<String> GetArchitecture(Netlist theNetlist, AttributeSet attrs,
         Contents.empty();
         Contents.addRemarkBlock("Here all module parameters are defined with a dummy value");
         for (final var param : params.keySet()) {
-          Contents.add("   parameter %s = 1;", params.get(param));
+          Contents.add("   parameter {{1}} = 1;", params.get(param));
         }
         Contents.empty();
       }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -50,7 +50,6 @@
 import java.util.Set;
 import java.util.SortedMap;
 import java.util.TreeMap;
-import javax.sound.sampled.Line;
 
 public class CircuitHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&DataB;",
           "s_sum_result     <= std_logic_vector(unsigned(s_extended_dataA)+",

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -69,7 +69,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_extended_dividend({{calcBits}}-1 DOWNTO {{nrOfBits}}) <= Upper;",
           "s_extended_dividend({{nrOfBits}}-1 DOWNTO 0) <= INP_A;",
           "s_div_result <= std_logic_vector(unsigned(s_extended_dividend) / unsigned(INP_B))",

File: src/main/java/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
             .addPair("calcBits", CalcBitsStr);
 
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_mult_result <= std_logic_vector(unsigned(INP_A)*unsigned(INP_B))",
           "                    WHEN {{unsigned}}= 1 ELSE",
           "                 std_logic_vector(signed(INP_A)*signed(INP_B));",
@@ -82,7 +82,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "Mult_hi       <= s_new_result({{calcBits}}-1 DOWNTO {{nrOfBits}});",
           "Mult_lo       <= s_new_result({{nrOfBits}}-1 DOWNTO 0);");
     } else {
-      Contents.add(
+      Contents.addLines(
           "reg[{{calcBits}}-1:0] s_Cin;",
           "reg[{{calcBits}}-1:0] s_mult_unsigned;",
           "reg[{{calcBits}}-1:0] s_interm_result;",

File: src/main/java/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -66,7 +66,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     final var Contents = new LineBuffer();
     int nrOfBits = attrs.getValue(StdAttr.WIDTH).getWidth();
     if (HDL.isVHDL()) {
-      Contents.add(
+      Contents.addLines(
           "s_inverted_dataB <= NOT(DataB);",
           "s_extended_dataA <= \"0\"&DataA;",
           "s_extended_dataB <= \"0\"&s_inverted_dataB;",
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
               : "Result <= s_sum_result( (" + NrOfBitsStr + "-1) DOWNTO 0 );");
       Contents.add("BorrowOut <= NOT(s_sum_result(" + ExtendedBitsStr + "-1));");
     } else {
-      Contents.add(
+      Contents.addLines(
           "assign   {s_carry,Result} = DataA + ~(DataB) + ~(BorrowIn);",
           "assign   BorrowOut = ~s_carry;");
     }

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -75,7 +75,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "Segment_a <= s_output_value(0);",
             "Segment_b <= s_output_value(1);",
             "Segment_c <= s_output_value(2);",

File: src/main/java/com/cburch/logisim/std/gates/AbstractGateHDLGenerator.java
Patch:
@@ -107,7 +107,7 @@ else if (i < 1000)
               .add("{{1}}Input_{{2}};", whenLineBegin, (i + 1));
         }
       } else {
-        contents.add("   assign s_signal_invert_mask = %s;", BUBBLES_MASK);
+        contents.add("   assign s_signal_invert_mask = {{1}};", BUBBLES_MASK);
         for (var i = 0; i < nrOfInputs; i++) {
           contents.add(
               "   assign s_real_input_{{1}} = (s_signal_invert_mask[{{2}}]) ? ~Input_{{3}}: Input_{{4}};",

File: src/main/java/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.std.Strings.S;
 
-import com.cburch.logisim.analyze.model.Expression;
 import com.cburch.logisim.analyze.model.Expressions;
 import com.cburch.logisim.circuit.ExpressionComputer;
 import com.cburch.logisim.comp.TextField;
@@ -42,9 +41,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;

File: src/main/java/com/cburch/logisim/std/gates/PLAHDLGeneratorFactory.java
Patch:
@@ -81,7 +81,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           contents.add("{{1}}{{2}} WHEN std_match(Index, {{3}}) ELSE", leader, bits(r.outBits), bits(r.inBits));
           leader = indent;
         }
-        contents.add("%s%s;", leader, zeros(outSz));
+        contents.add("{{1}}{{2}};", leader, zeros(outSz));
       }
     } else {
       // TODO

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -58,7 +58,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
       if (componentInfo.EndIsConnected(HexDigit.HEX)) {
         contents
             .add("WITH ({{busName}}) SELECT {{bubbleBusName}}( {{1}} DOWNTO {{startId}} ) <= ", (startId + 6))
-            .add(
+            .addLines(
                 "   \"0111111\" WHEN \"0000\",",
                 "   \"0000110\" WHEN \"0001\",",
                 "   \"1011011\" WHEN \"0010\",",
@@ -84,7 +84,7 @@ public ArrayList<String> GetInlinedCode(Netlist nets, Long componentId, NetlistC
     } else {
       if (componentInfo.EndIsConnected(HexDigit.HEX)) {
         contents
-            .add(
+            .addLines(
                 "",
                 "reg[6:0] {{regName}};",
                 "always @(*)",

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -77,7 +77,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
         "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
             + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down");
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "CompareOut   <= s_carry;",
           "CountValue   <= s_counter_value;",
           "",
@@ -146,7 +146,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
           "   END IF;",
           "END PROCESS make_flops;");
     } else {
-      contents.add(
+      contents.addLines(
           "",
           "assign CompareOut = s_carry;",
           "assign CountValue = ({{activeEdge}}) ? s_counter_value : s_counter_value_neg_edge;",

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -73,7 +73,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             .empty();
 
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "Q            <= s_output_reg;",
           "s_InitSeed   <= X\"0005DEECE66D\" WHEN {{seed}} = 0 ELSE",
           "                X\"0000\"&std_logic_vector(to_unsigned({{seed}}, 32))",
@@ -157,7 +157,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           "      END IF;",
           "   END PROCESS make_output;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign Q = s_output_reg;",
           "assign s_InitSeed = ({{seed}}) ? {{seed}}} : 48'h5DEECE66D;",
           "assign s_reset = (s_reset_reg==3'b010) ? 1'b1 : 1'b0;",

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import com.cburch.logisim.util.LineBuffer;
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -73,7 +73,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       return (new LineBuffer())
-          .add("%s s_next_state %s s_current_state_reg %sT;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
+          .add("{{1}} s_next_state {{2}} s_current_state_reg {{3}}T;", HDL.assignPreamble(), HDL.assignOperator(), HDL.xorOperator())
           .getWithIndent();
     }
   }

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
               .addPair("space", space)
               .addPair("i", i);
       if (HDL.isVHDL()) {
-        contents.add(
+        contents.addLines(
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "DecoderOut_{{i}}{{space}}<= '1' WHEN sel = {{bin}} AND",
             "{{space}}                             Enable = '1' ELSE '0';");

File: src/main/java/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -70,7 +70,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
       for (var i = 0; i < (1 << nrOfSelectBits); i++) {
         contents.add("                    MuxIn_{{1}},", i);
       }
-      contents.add(
+      contents.addLines(
           "                    Sel )",
           "BEGIN",
           "   IF (Enable = '0') THEN",
@@ -86,7 +86,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetList, AttributeSet
                    "      END CASE;", "   END IF;",
                    "END PROCESS make_mux;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign MuxOut = s_selected_vector;",
           "",
           "always @(*)",

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -65,7 +65,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
             .addPair("selBits", NR_OF_SELECT_BITS_STR)
             .addPair("inBits", NR_OF_INPUT_BITS_STR);
     if (HDL.isVHDL()) {
-      contents.add(
+      contents.addLines(
           "   -- Output Signals",
           "   GroupSelect <= NOT(s_in_is_zero) AND enable;",
           "   EnableOut   <= s_in_is_zero AND enable;",
@@ -102,7 +102,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
           "      END IF;",
           "   END PROCESS make_addr;");
     } else {
-      contents.add(
+      contents.addLines(
           "assign GroupSelect = ~s_in_is_zero&enable;",
           "assign EnableOut = s_in_is_zero&enable;",
           "assign Address = (~enable) ? 0 : s_address[{{selBits}}-1:0];",

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -86,7 +86,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     return (new LineBuffer())
-        .add(
+        .addLines(
             "enable <= tick and NOT(nCLKen);",
             "nexts  <= D7&D6&D5&D4&D3&D2&D1&D0 WHEN enable = '1' ELSE state;",
             "Q0     <= state(0);",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -29,7 +29,6 @@
 package com.cburch.logisim.std.ttl;
 
 import com.cburch.logisim.data.AttributeSet;
-import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.util.LineBuffer;

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -84,9 +84,8 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
-    return contents
-        .add(
+    return (new LineBuffer())
+        .addLines(
             "NextState <= CurState WHEN tick = '0' ELSE",
             "             D4&D3&D2&D1;",
             "",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -83,9 +83,8 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
 
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
-    final var contents = new LineBuffer();
-    return contents
-        .add(
+    return (new LineBuffer())
+        .addLines(
             "oppA   <= \"0\"&A4&A3&A2&A1;",
             "oppB   <= \"0\"&B4&B3&B2&B1;",
             "oppC   <= \"0000\"&Cin;",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -83,7 +83,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Sega  <= segments(0,",
             "Segb  <= segments(1,",
             "Segc  <= segments(2,",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -87,7 +87,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "Q1  <= state1;",
             "nQ1 <= NOT(state1,",
             "Q2  <= state1;",

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -88,7 +88,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs, Netlist Nets)
   public ArrayList<String> GetModuleFunctionality(Netlist netlist, AttributeSet attrs) {
     final var contents = new LineBuffer();
     return contents
-        .add(
+        .addLines(
             "oppA   <= A3&A2&A1&A0;",
             "oppB   <= B3&B2&B1&B0;",
             "gt     <= '1' WHEN unsigned(oppA) > unsigned(oppB) ELSE '0';",

File: src/main/java/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -68,12 +68,12 @@ public ArrayList<String> GetInlinedCode(
       long ConstantValue = GetConstant(ComponentInfo.GetComponent().getAttributeSet());
       if (ComponentInfo.GetComponent().getEnd(0).getWidth().getWidth() == 1) {
         /* Single Port net */
-        Contents.add("{{assign}} %s {{=}} %s;", GetNetName(ComponentInfo, 0, true, Nets), GetConvertOperator(ConstantValue, 1))
+        Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetNetName(ComponentInfo, 0, true, Nets), GetConvertOperator(ConstantValue, 1))
             .add("");
       } else {
         if (Nets.IsContinuesBus(ComponentInfo, 0)) {
           /* easy case */
-          Contents.add("{{assign}} %s {{=}} %s;", GetBusNameContinues(ComponentInfo, 0, Nets), GetConvertOperator(ConstantValue, NrOfBits));
+          Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetBusNameContinues(ComponentInfo, 0, Nets), GetConvertOperator(ConstantValue, NrOfBits));
           Contents.add("");
         } else {
           /* we have to enumerate all bits */
@@ -83,7 +83,7 @@ public ArrayList<String> GetInlinedCode(
             if ((mask & ConstantValue) != 0) ConstValue = HDL.oneBit();
             else ConstValue = HDL.zeroBit();
             mask <<= 1;
-            Contents.add("{{assign}} %s {{=}} %s;", GetBusEntryName(ComponentInfo, 0, true, bit, Nets), ConstValue);
+            Contents.add("{{assign}} {{1}} {{=}} {{2}};", GetBusEntryName(ComponentInfo, 0, true, bit, Nets), ConstValue);
           }
           Contents.add("");
         }

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -231,7 +231,7 @@ public LineBuffer add(Collection<String> lines) {
     return this;
   }
 
-  public LineBuffer add(String... lines) {
+  public LineBuffer addLines(String... lines) {
     return add(Arrays.asList(lines));
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -163,9 +163,9 @@ public double GetTickfrequency() {
       i++;
     }
     return Double.parseDouble(number.toString()) * switch (extention) {
-      case 'K' -> 1000;
-      case 'M' -> 1000000;
-      default -> 1;
+      case 'K' -> 1000d;
+      case 'M' -> 1000000d;
+      default -> 1d;
     };
   }
 

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2State.java
Patch:
@@ -217,7 +217,9 @@ public void setControlRegister(int index, int value) {
         case 3:
           ienable = value;
           break;
-        // FIXME: what to do by default? throw Exception?
+        default:
+          // FIXME: what to do by default? throw Exception?
+          break;
       }
     }
 

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -340,7 +340,7 @@ public ArrayList<String> getWithIndent(String indent) {
    * @param remarkText Remark text.
    */
   public LineBuffer addRemarkBlock(String remarkText) {
-    return addRemarkBlock(remarkText, DEFAULT_INDENT);
+    return addRemarkBlock(remarkText, 0);
   }
 
   /**

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -163,9 +163,9 @@ public double GetTickfrequency() {
       i++;
     }
     return Double.parseDouble(number.toString()) * switch (extention) {
-      case 'K' -> 1000;
-      case 'M' -> 1000000;
-      default -> 1;
+      case 'K' -> 1000.0;
+      case 'M' -> 1000000.0;
+      default -> 1.0;
     };
   }
 

File: src/main/java/com/cburch/logisim/util/LineBuffer.java
Patch:
@@ -340,7 +340,7 @@ public ArrayList<String> getWithIndent(String indent) {
    * @param remarkText Remark text.
    */
   public LineBuffer addRemarkBlock(String remarkText) {
-    return addRemarkBlock(remarkText, DEFAULT_INDENT);
+    return addRemarkBlock(remarkText, 0);
   }
 
   /**

File: src/main/java/com/cburch/logisim/std/io/Button.java
Patch:
@@ -58,8 +58,6 @@
 import java.awt.event.KeyEvent;
 import java.awt.event.MouseEvent;
 
-import java.io.*;
-
 public class Button extends InstanceFactory {
   /**
    * Unique identifier of the tool, used as reference in project files.

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -274,7 +274,7 @@ private ArrayList<String> getPinLocStrings() {
           final var pairs = new LineBuffer.Pairs()
                   .add("pinLoc", map.getPinLocation(i))
                   .add("inv", map.isExternalInverted(i) ? "n_" : "")
-                  .add("hdlStr",map.getHdlString(i));
+                  .add("hdlStr", map.getHdlString(i));
           contents.add("set_location_assignment {{pinLoc}} -to {{inv}}{{hdlStr}}", pairs);
           if (map.requiresPullup(i))
             contents.add("set_instance_assignment -name WEAK_PULL_UP_RESISTOR ON -to {{inv}}{{hdlStr}}", pairs);

File: src/main/java/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -95,7 +95,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist theNetlist, AttributeSet
             "   case (Sel)");
         for (var i = 15; i > 0; i--) {
           contents.add("      {{1}} : s_selected_slice <= s_select_vector[({{2}}*{{outBits}})-1:{{1}}*{{outBits}}];", i, (i + 1));
-          }
+        }
         contents.add(
             "      default : s_selected_slice <= s_select_vector[{{outBits}}-1:0];",
             "   endcase",

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -135,7 +135,7 @@ public ArrayList<String> GetArchitecture(Netlist theNetlist, AttributeSet attrs,
         Contents.add(libs);
         Contents.empty();
       }
-      Contents.add("ARCHITECTURE PlatformIndependent OF {{`}} IS ", componentName);
+      Contents.add("ARCHITECTURE PlatformIndependent OF {{1}} IS ", componentName);
       Contents.add("");
       final var nrOfTypes = GetNrOfTypes(theNetlist, attrs);
       if (nrOfTypes > 0) {

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -275,9 +275,9 @@ private ArrayList<String> getPinLocStrings() {
                   .add("pinLoc", map.getPinLocation(i))
                   .add("inv", map.isExternalInverted(i) ? "n_" : "")
                   .add("hdlStr",map.getHdlString(i));
-          contents.add("set_location_assignment {{1}} -to {{2}}{{3}}", pairs);
+          contents.add("set_location_assignment {{pinLoc}} -to {{inv}}{{hdlStr}}", pairs);
           if (map.requiresPullup(i))
-            contents.add("set_instance_assignment -name WEAK_PULL_UP_RESISTOR ON -to {{1}}{{2}}", pairs);
+            contents.add("set_instance_assignment -name WEAK_PULL_UP_RESISTOR ON -to {{inv}}{{hdlStr}}", pairs);
         }
       }
     }

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -764,12 +764,12 @@ else if (cnt < NrOfPins.get(INPUT_ID) + NrOfPins.get(OUTPUT_ID))
             IOcomps.SetDefaultActivity(ActiveInput.getSelectedIndex());
             info.setActivityLevel(PinActivity.getId(ActiveInput.getSelectedItem().toString()));
           }
-          final var selectedRotation = mapRotation.getSelectedIndex();
-          info.setMapRotation(switch (selectedRotation) {
+          final var rotation = switch (mapRotation.getSelectedIndex()) {
             case 1 -> IOComponentTypes.ROTATION_CW_90;
             case 2 -> IOComponentTypes.ROTATION_CCW_90;
             default -> IOComponentTypes.ROTATION_ZERO;
-          });
+          };
+          info.setMapRotation(rotation);
           abort = true;
         }
       }

File: src/main/java/com/cburch/logisim/soc/data/SocBusTransaction.java
Patch:
@@ -113,7 +113,7 @@ public String getErrorMessage() {
         case BYTE_ACCESS -> S.get("SocTransactionByteAccesNoSupport");
         case HALF_WORD_ACCESS -> S.get("SocTransactionHalfWordAccesNoSupport");
         default -> S.get("SocTransactionWordAccesNoSupport");
-        };
+      };
       case READ_ONLY_ACCESS_ERROR -> S.get("SocTransactionReadOnlyAccessError");
       case WRITE_ONLY_ACCESS_ERROR -> S.get("SocTransactionWriteOnlyAccessError");
       case REGISTER_DOES_NOT_EXIST_ERROR -> S.get("SocTransactionRegisterDoesNotExist");
@@ -134,7 +134,7 @@ public String getShortErrorMessage() {
         case BYTE_ACCESS -> S.get("SocTransactionByteAccesNoSupportShort");
         case HALF_WORD_ACCESS -> S.get("SocTransactionHalfWordAccesNoSupportShort");
         default -> S.get("SocTransactionWordAccesNoSupportShort");
-        };
+      };
       case READ_ONLY_ACCESS_ERROR -> S.get("SocTransactionReadOnlyAccessErrorShort");
       case WRITE_ONLY_ACCESS_ERROR -> S.get("SocTransactionWriteOnlyAccessErrorShort");
       case REGISTER_DOES_NOT_EXIST_ERROR -> S.get("SocTransactionRegisterDoesNotExistShort");

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -765,7 +765,7 @@ else if (cnt < NrOfPins.get(INPUT_ID) + NrOfPins.get(OUTPUT_ID))
             info.setActivityLevel(PinActivity.getId(ActiveInput.getSelectedItem().toString()));
           }
           final var selectedRotation = mapRotation.getSelectedIndex();
-          info.setMapRotation( switch (selectedRotation) {
+          info.setMapRotation(switch (selectedRotation) {
             case 1 -> IOComponentTypes.ROTATION_CW_90;
             case 2 -> IOComponentTypes.ROTATION_CCW_90;
             default -> IOComponentTypes.ROTATION_ZERO;

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -165,7 +165,7 @@ public double GetTickfrequency() {
     return Double.parseDouble(number.toString()) * switch (extention) {
       case 'K' -> 1000;
       case 'M' -> 1000000;
-      default -> throw new IllegalStateException("Unexpected value: " + extention);
+      default -> 1;
     };
   }
 

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -765,7 +765,7 @@ else if (cnt < NrOfPins.get(INPUT_ID) + NrOfPins.get(OUTPUT_ID))
             info.setActivityLevel(PinActivity.getId(ActiveInput.getSelectedItem().toString()));
           }
           final var selectedRotation = mapRotation.getSelectedIndex();
-          info.setMapRotation(switch (selectedRotation) {
+          info.setMapRotation( switch (selectedRotation) {
             case 1 -> IOComponentTypes.ROTATION_CW_90;
             case 2 -> IOComponentTypes.ROTATION_CCW_90;
             default -> IOComponentTypes.ROTATION_ZERO;

File: src/main/java/com/cburch/logisim/fpga/data/FPGAIOInformationContainer.java
Patch:
@@ -498,7 +498,7 @@ public Element GetDocumentElement(Document doc) {
             result.setAttribute(BoardWriterClass.MAP_ROTATION, Integer.toString(myRotation));
             break;
           }
-          default : break;
+          default: break;
         }
       }
       if (MyInputPins != null && !MyInputPins.isEmpty()) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/LedArrayGenericHDLGeneratorFactory.java
Patch:
@@ -36,9 +36,9 @@ public static AbstractHDLGeneratorFactory getSpecificHDLGenerator(String type) {
       case LedArrayDriving.LED_DEFAULT -> new LedArrayLedDefaultHDLGeneratorFactory();
       case LedArrayDriving.LED_ROW_SCANNING -> new LedArrayRowScanningHDLGeneratorFactory();
       case LedArrayDriving.LED_COLUMN_SCANNING -> new LedArrayColumnScanningHDLGeneratorFactory();
-      case LedArrayDriving.RgbDefault  -> new RGBArrayLedDefaultHDLGeneratorFactory();
-      case LedArrayDriving.RgbRowScanning  -> new RGBArrayRowScanningHDLGeneratorFactory();
-      case LedArrayDriving.RgbColumnScanning  -> new RGBArrayColumnScanningHDLGeneratorFactory();
+      case LedArrayDriving.RgbDefault -> new RGBArrayLedDefaultHDLGeneratorFactory();
+      case LedArrayDriving.RgbRowScanning -> new RGBArrayRowScanningHDLGeneratorFactory();
+      case LedArrayDriving.RgbColumnScanning -> new RGBArrayColumnScanningHDLGeneratorFactory();
       default -> null;
     };
   }

File: src/main/java/com/cburch/logisim/fpga/download/XilinxDownload.java
Patch:
@@ -387,7 +387,7 @@ private ProcessBuilder Stage3PAR() {
           .add("logisim_par")
           .add("logisim_map.pcf");
     } else {
-      final var pinPullBehavior = switch(boardInfo.fpga.getUnusedPinsBehavior()) {
+      final var pinPullBehavior = switch (boardInfo.fpga.getUnusedPinsBehavior()) {
         case PullBehaviors.PULL_UP -> "pullup";
         case PullBehaviors.PULL_DOWN -> "pulldown";
         default -> "float";

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -259,7 +259,7 @@ public void paintInstance(InstancePainter painter) {
   public void propagate(InstanceState state) {
     var in = state.getPortValue(1);
     in = Buffer.repair(state, in);
-    state.setPort(0, in, GateAttributes.DELAY);
+    state.setPort(0, in.not().not(), GateAttributes.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -80,6 +80,7 @@ public class TtlLibrary extends Library {
       new FactoryDescription(Ttl74139.class, S.getter("TTL74139"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
+      new FactoryDescription(Ttl74163.class, S.getter("TTL74163"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),
       new FactoryDescription(Ttl74266.class, S.getter("TTL74266"), "ttl.gif"),
       new FactoryDescription(Ttl74273.class, S.getter("TTL74273"), "ttl.gif"),

File: src/main/java/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -74,9 +74,8 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     final var contents = new ContentBuilder();
     contents.addRemarkBlock(
-            "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
-                + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down"
-            );
+        "Functionality of the counter:\\ __Load_Count_|_mode\\ ____0____0___|_halt\\ "
+            + "____0____1___|_count_up_(default)\\ ____1____0___|load\\ ____1____1___|_count_down");
     if (HDL.isVHDL()) {
       contents
           .add("   CompareOut   <= s_carry;")

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -75,9 +75,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist nets, AttributeSet attrs
     final var rom = attrs.getValue(Rom.CONTENTS_ATTR);
     if (HDL.isVHDL()) {
       contents.add(
-        "   MakeRom : PROCESS( Address )",
-        "      BEGIN",
-        "         CASE (Address) IS");
+              "   MakeRom : PROCESS( Address )",
+              "      BEGIN",
+              "         CASE (Address) IS");
       for (addr = 0; addr < (1 << attrs.getValue(Mem.ADDR_ATTR).getWidth()); addr++) {
         if (rom.get(addr) != 0) {
           contents.add("            WHEN %s => Data <= %s;",

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imControlTransferInstructions.java
Patch:
@@ -185,9 +185,9 @@ public String getAsmInstruction() {
         if (immediate != 0) s.append((immediate >= 0) ? "+" : "").append(immediate);
         break;
       default:
-        s.append(RV32im_state.registerABINames[source2])
+        s.append(RV32im_state.registerABINames[source1])
             .append(",")
-            .append(RV32im_state.registerABINames[source1])
+            .append(RV32im_state.registerABINames[source2])
             .append(",pc");
         if (immediate != 0) s.append((immediate >= 0) ? "+" : "").append(immediate);
     }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imControlTransferInstructions.java
Patch:
@@ -185,9 +185,9 @@ public String getAsmInstruction() {
         if (immediate != 0) s.append((immediate >= 0) ? "+" : "").append(immediate);
         break;
       default:
-        s.append(RV32im_state.registerABINames[source2])
+        s.append(RV32im_state.registerABINames[source1])
             .append(",")
-            .append(RV32im_state.registerABINames[source1])
+            .append(RV32im_state.registerABINames[source2])
             .append(",pc");
         if (immediate != 0) s.append((immediate >= 0) ? "+" : "").append(immediate);
     }

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsInformation.java
Patch:
@@ -44,7 +44,7 @@ public class IOComponentsInformation {
   private int DefaultStandard = 0;
   private int DefaultDriveStrength = 0;
   private int DefaultPullSelection = 0;
-  private int DefaultActivity = 0;
+  private int DefaultActivity = 1;
   private final boolean mapMode;
   private final int imageHeight;
   private final FPGAIOInformationContainer[][] lookup;

File: src/main/java/com/cburch/logisim/LogisimVersion.java
Patch:
@@ -136,7 +136,7 @@ public int hashCode() {
   @Override
   public String toString() {
     String result = major + "." + minor + "." + patch;
-    if (!"".equals("")) {
+    if (!suffix.equals("")) {
       result += "-" + suffix;
     }
     return result;

File: src/test/java/com/cburch/logisim/LogisimVersionTest.java
Patch:
@@ -47,7 +47,7 @@ public class LogisimVersionTest {
   /** Test method for {@link com.cburch.logisim.LogisimVersion#fromString(java.lang.String)}. */
   @Test
   public void testFromString() {
-    String tests[] = {"1.2.3", "1.2.3-beta1"};
+    String[] tests = {"1.2.3", "1.2.3-beta1"};
     for (var test : tests) {
       assertNotNull(LogisimVersion.fromString(test));
       assertEquals(test, LogisimVersion.fromString(test).toString());

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -168,7 +168,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return true;
+    return attr.isToSave();
   }
 
   @Override

File: src/main/java/com/cburch/draw/tools/DrawingAttributeSet.java
Patch:
@@ -146,7 +146,7 @@ public boolean isReadOnly(Attribute<?> attr) {
   }
 
   public boolean isToSave(Attribute<?> attr) {
-    return true;
+    return attr.isToSave();
   }
 
   public void removeAttributeListener(AttributeListener l) {

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -264,7 +264,7 @@ public boolean isToSave(Attribute<?> attr) {
       if (aStatic == attr)
         return false;
     }
-    return true;
+    return attr.isToSave();
   }
 
   void setPinInstances(Instance[] value) {

File: src/main/java/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -105,7 +105,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return true;
+    return attr.isToSave();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -196,7 +196,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
         @Override
         public boolean isToSave(Attribute<?> attr) {
-          return true;
+          return attr.isToSave();
         }
 
         @Override

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartAttributes.java
Patch:
@@ -119,7 +119,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != JTAG_STATE;
+    return attr.isToSave() && attr != JTAG_STATE;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/memory/SocMemoryAttributes.java
Patch:
@@ -113,7 +113,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != SOCMEM_STATE;
+    return attr.isToSave() && attr != SOCMEM_STATE;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2Attributes.java
Patch:
@@ -124,7 +124,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != NIOS2_STATE;
+    return attr.isToSave() && attr != NIOS2_STATE;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/pio/PioAttributes.java
Patch:
@@ -172,7 +172,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != PIO_STATE;
+    return attr.isToSave() && attr != PIO_STATE;
   }
 
   @SuppressWarnings("unchecked")

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imAttributes.java
Patch:
@@ -120,7 +120,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != RV32IM_STATE;
+    return attr.isToSave() && attr != RV32IM_STATE;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/vga/VgaAttributes.java
Patch:
@@ -134,7 +134,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != VGA_STATE;
+    return attr.isToSave() && attr != VGA_STATE;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityAttributes.java
Patch:
@@ -146,6 +146,6 @@ public <V> void setValue(Attribute<V> attr, V value) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != VhdlSimConstants.SIM_NAME_ATTR;
+    return attr.isToSave() && attr != VhdlSimConstants.SIM_NAME_ATTR;
   }
 }

File: src/main/java/com/cburch/logisim/std/wiring/PinAttributes.java
Patch:
@@ -88,7 +88,7 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != ATTR_DUMMY;
+    return attr.isToSave() && attr != ATTR_DUMMY;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntityAttributes.java
Patch:
@@ -330,6 +330,6 @@ public void appearanceChanged(HdlModel source) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return attr != VhdlSimConstants.SIM_NAME_ATTR;
+    return attr.isToSave() && attr != VhdlSimConstants.SIM_NAME_ATTR;
   }
 }

File: src/main/java/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -105,7 +105,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
   @Override
   public boolean isToSave(Attribute<?> attr) {
-    return true;
+    return attr.isToSave();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -196,7 +196,7 @@ public boolean isReadOnly(Attribute<?> attr) {
 
         @Override
         public boolean isToSave(Attribute<?> attr) {
-          return true;
+          return attr.isToSave();
         }
 
         @Override

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Netlist.java
Patch:
@@ -1779,17 +1779,17 @@ private boolean HasHiddenSource(
     /* Check if we have a connection to another splitter */
     for (var currentSplitter : splitterList) {
       if (currentSplitter.equals(ignoreSplitter)) continue;
-      var ends = currentSplitter.getEnds();
+      final var ends = currentSplitter.getEnds();
       for (var end = 0; end < ends.size(); end++) {
         if (combinedNet.contains(ends.get(end).getLocation())) {
           /* Here we have to process the inherited bits of the parent */
           byte[] BusBitConnection = ((Splitter) currentSplitter).GetEndpoints();
           if (end == 0) {
             /* this is a main net, find the connected end */
-            byte SplitterEnd = BusBitConnection[combinedBitIndex];
+            var SplitterEnd = BusBitConnection[combinedBitIndex];
             /* Find the corresponding Net index */
             Byte Netindex = 0;
-            for (int index = 0; index < combinedBitIndex; index++) {
+            for (var index = 0; index < combinedBitIndex; index++) {
               if (BusBitConnection[index] == SplitterEnd) {
                 Netindex++;
               }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -155,7 +155,7 @@ public static ArrayList<String> getGenerateRemark(String compName, String projNa
     final String headOpen;
     final String headClose;
     
-    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated VHDL code";
+    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated " + (HDL.isVHDL() ? "VHDL" : "Verilog") + " code";
     final var headUrl  = " " + Main.APP_URL;
     final var headProj = " Project   : " + projName;
     final var headComp = " Component : " + compName;

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imControlTransferInstructions.java
Patch:
@@ -131,7 +131,6 @@ public boolean execute(Object state,  CircuitState cState) {
           jumped = true;
           cpuState.setProgramCounter(target);
         }
-System.out.println("BLT " + reg1 + " " + reg2 + " " + target + " " + jumped);
         return true;
       case INSTR_BGE:
         if (reg1 >= reg2) {
@@ -461,7 +460,6 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
             errors = true;
             break;
           }
-System.out.println(source1 + " " + source2);
           instruction = RV32imSupport.getBTypeInstruction(BRANCH, operation, source1, source2, immediate);
           break;
         default:

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -155,7 +155,7 @@ public static ArrayList<String> getGenerateRemark(String compName, String projNa
     final String headOpen;
     final String headClose;
     
-    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated VHDL code";
+    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated " + (HDL.isVHDL() ? "VHDL" : "Verilog") + " code";
     final var headUrl  = " " + Main.APP_URL;
     final var headProj = " Project   : " + projName;
     final var headComp = " Component : " + compName;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -155,7 +155,7 @@ public static ArrayList<String> getGenerateRemark(String compName, String projNa
     final String headOpen;
     final String headClose;
     
-    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated" + (HDL.isVHDL() ? "VHDL" : "Verilog") + " code";
+    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated " + (HDL.isVHDL() ? "VHDL" : "Verilog") + " code";
     final var headUrl  = " " + Main.APP_URL;
     final var headProj = " Project   : " + projName;
     final var headComp = " Component : " + compName;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -155,7 +155,7 @@ public static ArrayList<String> getGenerateRemark(String compName, String projNa
     final String headOpen;
     final String headClose;
     
-    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated VHDL code";
+    final var headText = " " + Main.APP_NAME + " goes FPGA automatic generated" + (HDL.isVHDL() ? "VHDL" : "Verilog") + " code";
     final var headUrl  = " " + Main.APP_URL;
     final var headProj = " Project   : " + projName;
     final var headComp = " Component : " + compName;

File: src/main/java/com/cburch/logisim/std/io/DotMatrixHDLGeneratorFactory.java
Patch:
@@ -80,7 +80,7 @@ public ArrayList<String> GetInlinedCode(Netlist netlist, Long componentId, Netli
         for (var c = 0; c < cols; c++) {
           final var rowwire = (rows == 1) ? GetNetName(componentInfo, 1, true, netlist)
               : GetBusEntryName(componentInfo, 1, true, r, netlist);
-          final var colwire = (rows == 1) ? GetNetName(componentInfo, 0, true, netlist)
+          final var colwire = (cols == 1) ? GetNetName(componentInfo, 0, true, netlist)
               : GetBusEntryName(componentInfo, 0, true, c, netlist);
           final var idx = r * cols + c + componentInfo.GetLocalBubbleOutputStartId();
           contents.add("   " + HDL.assignPreamble() + HDLGeneratorFactory.LocalOutputBubbleBusname

File: src/main/java/com/cburch/logisim/std/io/LedBarHDLGeneratorFactory.java
Patch:
@@ -38,7 +38,6 @@
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDL;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
-import com.cburch.logisim.instance.StdAttr;
 
 public class LedBarHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
@@ -50,7 +49,6 @@ protected Attribute<BitWidth> getAttributeColumns() {
   public ArrayList<String> GetInlinedCode(Netlist netlist, Long componentId, NetlistComponent componentInfo, String circuitName) {
     final var contents = new ArrayList<String>();
     final var isSingleBus = componentInfo.GetComponent().getAttributeSet().getValue(LedBar.ATTR_INPUT_TYPE).equals(LedBar.INPUT_ONE_WIRE);
-    final var label = componentInfo.GetComponent().getAttributeSet().getValue(StdAttr.LABEL);
     final var nrOfSegments = componentInfo.GetComponent().getAttributeSet().getValue(getAttributeColumns()).getWidth();
     for (var pin = 0; pin < nrOfSegments; pin++) {
       final var destPin = HDLGeneratorFactory.LocalOutputBubbleBusname

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -83,7 +83,7 @@ public static void main(String[] args) {
       final var printWriter = new PrintWriter(strWriter);
       e.printStackTrace(printWriter);
       OptionPane.showMessageDialog(null, strWriter.toString());
-      System.exit(-1);
+      System.exit(100);
     }
   }
 

File: src/main/java/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -51,9 +51,9 @@ public DotMatrix() {
     super(_ID, S.getter("dotMatrixComponent"), 5, 7);
   }
 
-  protected static final Attribute<BitWidth> ATTR_MATRIX_COLS =
+  public static final Attribute<BitWidth> ATTR_MATRIX_COLS =
       Attributes.forBitWidth("matrixcols", S.getter("ioMatrixCols"), 1, Value.MAX_WIDTH);
-  protected static final Attribute<BitWidth> ATTR_MATRIX_ROWS =
+  public static final Attribute<BitWidth> ATTR_MATRIX_ROWS =
       Attributes.forBitWidth("matrixrows", S.getter("ioMatrixRows"), 1, Value.MAX_WIDTH);
 
   public Attribute<BitWidth> getAttributeRows() {

File: src/main/java/com/cburch/logisim/std/io/LedBar.java
Patch:
@@ -42,7 +42,7 @@ public class LedBar extends DotMatrixBase {
 
   protected static final Attribute<BitWidth> ATTR_MATRIX_ROWS =
       Attributes.forBitWidth("matrixrows", S.getter("ioMatrixRows"), 1, Value.MAX_WIDTH);
-  protected static final Attribute<BitWidth> ATTR_MATRIX_COLS =
+  public static final Attribute<BitWidth> ATTR_MATRIX_COLS =
       Attributes.forBitWidth("matrixcols", S.getter("ioLedBarSegments"), 1, Value.MAX_WIDTH);
 
   protected static final Attribute<AttributeOption> ATTR_DOT_SHAPE =

File: src/main/java/com/cburch/logisim/fpga/data/MapListModel.java
Patch:
@@ -81,7 +81,7 @@ public void rebuild() {
       if (mappedList) {
         if (map.isCompleteMap(false)) {
           int idx = getInsertionPoint(map);
-          myItems.add(idx, new MapInfo(-1, map));
+          myItems.add(idx, new MapInfo(map.getNrOfPins() == 1 ? 0 : -1, map));
         } else {
           int idx = getInsertionPoint(map);
           for (int i = map.getNrOfPins() - 1; i >= 0; i--) {
@@ -91,7 +91,7 @@ public void rebuild() {
       } else {
         if (map.isNotMapped()) {
           int idx = getInsertionPoint(map);
-          myItems.add(idx, new MapInfo(-1, map));
+          myItems.add(idx, new MapInfo(map.getNrOfPins() == 1 ? 0 : -1, map));
         } else {
           int idx = getInsertionPoint(map);
           for (int i = map.getNrOfPins() - 1; i >= 0; i--) {

File: src/main/java/com/cburch/logisim/std/io/SevenSegment.java
Patch:
@@ -50,7 +50,6 @@
 import com.cburch.logisim.tools.key.DirectionConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
-import java.awt.Graphics;
 import java.awt.event.KeyEvent;
 import java.util.ArrayList;
 

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentTypes.java
Patch:
@@ -43,12 +43,12 @@ public enum IOComponentTypes {
   SevenSegmentNoDp,
   DIPSwitch,
   RGBLED,
+  LEDArray,
   PortIO,
   LocalBus,
   Bus,
   Open,
   Constant,
-  LedBar,
   Unknown;
 
   /*
@@ -176,8 +176,8 @@ public static int GetNrOfFPGAPins(IOComponentTypes comp) {
           IOComponentTypes.Pin,
           IOComponentTypes.RGBLED,
           IOComponentTypes.SevenSegment,
-          IOComponentTypes.SevenSegmentNoDp,
-          IOComponentTypes.LedBar);
+          IOComponentTypes.LEDArray,
+          IOComponentTypes.SevenSegmentNoDp);
 
   public static final EnumSet<IOComponentTypes> InOutComponentSet =
       EnumSet.of(IOComponentTypes.Pin, IOComponentTypes.PortIO);

File: src/main/java/com/cburch/logisim/fpga/file/BoardWriterClass.java
Patch:
@@ -62,6 +62,7 @@ public class BoardWriterClass {
   public static final String OutputSetString = "OutputPinSet";
   public static final String IOSetString = "BiDirPinSet";
   public static final String RectSetString = "Rect_x_y_w_h";
+  public static final String LedArrayInfoString = "LedArrayInfo";
   public static final String[] ClockSectionStrings = {
     "Frequency", "FPGApin", "PullBehavior", "IOStandard"
   };

File: src/main/java/com/cburch/logisim/gui/generic/ZoomControl.java
Patch:
@@ -31,7 +31,6 @@
 import static com.cburch.logisim.gui.Strings.S;
 
 import com.cburch.contracts.BaseMouseListenerContract;
-import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.gui.icons.ZoomIcon;
 import com.cburch.logisim.gui.main.Canvas;
 import com.cburch.logisim.prefs.AppPreferences;
@@ -47,7 +46,6 @@
 import java.awt.event.ActionListener;
 import java.awt.event.MouseAdapter;
 import java.awt.event.MouseEvent;
-import java.awt.event.MouseListener;
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.text.DecimalFormat;

File: src/main/java/com/cburch/logisim/std/io/DotMatrixBase.java
Patch:
@@ -329,7 +329,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.LABEL_LOC) {
       instance.computeLabelTextField(Instance.AVOID_LEFT);
     } else if (attr == StdAttr.SELECT_LOC) {
-        updatePorts(instance);
+      updatePorts(instance);
     } else if (attr == getAttributeRows()
         || attr == getAttributeColumns()
         || attr == getAttributeInputType()) {

File: src/main/java/com/cburch/logisim/std/gates/NandGate.java
Patch:
@@ -55,7 +55,7 @@ public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean
       oneLine.append("   ")
           .append(HDL.assignPreamble())
           .append("Result")
-          .append(HDL.andOperator())
+          .append(HDL.assignOperator())
           .append(HDL.notOperator())
           .append("(");
       final var tabWidth = oneLine.length();

File: src/main/java/com/cburch/logisim/std/gates/NandGate.java
Patch:
@@ -55,7 +55,7 @@ public ArrayList<String> GetLogicFunction(int nrOfInputs, int bitwidth, boolean
       oneLine.append("   ")
           .append(HDL.assignPreamble())
           .append("Result")
-          .append(HDL.andOperator())
+          .append(HDL.assignOperator())
           .append(HDL.notOperator())
           .append("(");
       final var tabWidth = oneLine.length();

File: src/main/java/com/cburch/draw/canvas/SelectionListener.java
Patch:
@@ -31,5 +31,7 @@
 import java.util.EventListener;
 
 public interface SelectionListener extends EventListener {
-  void selectionChanged(SelectionEvent e);
+  default void selectionChanged(SelectionEvent e) {
+    // default implementation
+  }
 }

File: src/main/java/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -87,6 +87,7 @@ public String getTitle() {
   //
   // SelectionListener method
   //
+  @Override
   public void selectionChanged(SelectionEvent e) {
     fireTitleChanged();
   }

File: src/main/java/com/cburch/draw/gui/SelectionAttributes.java
Patch:
@@ -141,11 +141,13 @@ private class Listener implements SelectionListener, AttributeListener {
     //
     // AttributeSet listener
     //
+    @Override
     public void attributeListChanged(AttributeEvent e) {
       // show selection attributes
       computeAttributeList(selected.keySet());
     }
 
+    @Override
     public void attributeValueChanged(AttributeEvent e) {
       if (selected.containsKey(e.getSource())) {
         @SuppressWarnings("unchecked")
@@ -189,6 +191,7 @@ private void computeAttributeList(Set<AttributeSet> attrsSet) {
     //
     // SelectionListener
     //
+    @Override
     public void selectionChanged(SelectionEvent ex) {
       Map<AttributeSet, CanvasObject> oldSel = selected;
       Map<AttributeSet, CanvasObject> newSel = new HashMap<>();

File: src/main/java/com/cburch/draw/toolbar/ToolbarButton.java
Patch:
@@ -28,15 +28,15 @@
 
 package com.cburch.draw.toolbar;
 
+import com.cburch.contracts.BaseMouseListenerContract;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
 import java.awt.Dimension;
 import java.awt.Graphics;
 import java.awt.event.MouseEvent;
-import java.awt.event.MouseListener;
 import javax.swing.JComponent;
 
-class ToolbarButton extends JComponent implements MouseListener {
+class ToolbarButton extends JComponent implements BaseMouseListenerContract {
   private static final long serialVersionUID = 1L;
 
   private static final int BORDER = 2;

File: src/main/java/com/cburch/draw/tools/LineTool.java
Patch:
@@ -166,7 +166,8 @@ public void toolDeselected(Canvas canvas) {
   private void updateMouse(Canvas canvas, int mx, int my, int mods) {
     if (active) {
       final var shift = (mods & MouseEvent.SHIFT_DOWN_MASK) != 0;
-      var newEnd = (shift) ? LineUtil.snapTo8Cardinals(mouseStart, mx, my) : Location.create(mx, my);
+      var newEnd =
+          (shift) ? LineUtil.snapTo8Cardinals(mouseStart, mx, my) : Location.create(mx, my);
 
       if ((mods & InputEvent.CTRL_DOWN_MASK) != 0) {
         var x = newEnd.getX();

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -63,7 +63,9 @@ public int hashCode() {
   private final HashSet<Entry<Location>> data =  new HashSet<>();
   private final HashSet<Entry<Component>> pendingInputs =  new HashSet<>();
 
-  PropagationPoints() { }
+  PropagationPoints() {
+    // no-op implementation
+  }
 
   void addPendingInput(CircuitState state, Component comp) {
     pendingInputs.add(new Entry<>(state, comp));

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -258,5 +258,7 @@ private static void placePins(
     }
   }
 
-  private DefaultHolyCrossAppearance() {}
+  private DefaultHolyCrossAppearance() {
+    // dummy, private
+  }
 }

File: src/main/java/com/cburch/logisim/gui/chrono/RightPanel.java
Patch:
@@ -50,9 +50,7 @@
 import java.util.List;
 import javax.swing.DefaultListSelectionModel;
 import javax.swing.JPanel;
-import javax.swing.JScrollBar;
 import javax.swing.JScrollPane;
-import javax.swing.JViewport;
 import javax.swing.ListSelectionModel;
 import javax.swing.SwingUtilities;
 import javax.swing.UIManager;

File: src/main/java/com/cburch/logisim/gui/generic/RegTabContent.java
Patch:
@@ -223,6 +223,7 @@ public void propagationCompleted(Simulator.Event e) {
 
   @Override
   public void simulatorStateChanged(Simulator.Event e) {
+    // FIXME: we should have some more advanced logic here?
     // throw new UnsupportedOperationException("Not supported yet.");
   }
 

File: src/main/java/com/cburch/logisim/gui/log/SignalInfo.java
Patch:
@@ -33,7 +33,6 @@
 import com.cburch.logisim.circuit.CircuitListener;
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.circuit.RadixOption;
-import com.cburch.logisim.circuit.ReplacementMap;
 import com.cburch.logisim.circuit.SubcircuitFactory;
 import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.comp.ComponentDrawContext;
@@ -132,12 +131,12 @@ public void setListener(Listener l) {
     listener = l;
   }
 
-  public void attributeListChanged(AttributeEvent e) {}
-
+  @Override
   public void attributeValueChanged(AttributeEvent e) {
     recomputeName();
   }
 
+  @Override
   public void circuitChanged(CircuitEvent event) {
     if (obsoleted) {
       return; // this SelectionItem doesn't appear to be alive any more
@@ -312,6 +311,7 @@ public String getDisplayName() {
     return fullname;
   }
 
+  @Override
   public Location getLocation() {
     return path[n - 1].getLocation();
   }

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -143,9 +143,6 @@ public void actionPerformed(ActionEvent event) {
       }
     }
 
-    @Override
-    public void attributeListChanged(AttributeEvent e) {}
-
     @Override
     public void attributeValueChanged(AttributeEvent e) {
       final Attribute<?> attr = e.getAttribute();

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarActions.java
Patch:
@@ -36,7 +36,9 @@
 import com.cburch.logisim.tools.Tool;
 
 class ToolbarActions {
-  private ToolbarActions() {}
+  private ToolbarActions() {
+    // private
+  }
 
   public static Action addSeparator(ToolbarData toolbar, int pos) {
     return new AddSeparator(toolbar, pos);

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -119,9 +119,6 @@ public void paintIcon(Component comp, Graphics g, int x, int y) {
   }
 
   private class Model extends AbstractListModel implements ToolbarListener, AttributeListener, PropertyChangeListener {
-    @Override
-    public void attributeListChanged(AttributeEvent e) {}
-
     @Override
     public void attributeValueChanged(AttributeEvent e) {
       repaint();

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -82,16 +82,17 @@ public void draw(Graphics g) {
   }
 
   @Override
-  public Bounds getBounds(Graphics g) {
+  public Bounds getBounds(Graphics gfx) {
     if (poker != null) {
-      context.setGraphics(g);
+      context.setGraphics(gfx);
       InstancePainter painter = new InstancePainter(context, comp);
       return poker.getBounds(painter);
     } else {
       return Bounds.EMPTY_BOUNDS;
     }
   }
 
+  @Override
   public Caret getPokeCaret(ComponentUserEvent event) {
     if (poker == null) {
       return null;

File: src/main/java/com/cburch/logisim/std/memory/RamState.java
Patch:
@@ -53,9 +53,6 @@ public class RamState extends MemState implements AttributeListener {
     contents.addHexModelListener(listener);
   }
 
-  @Override
-  public void attributeListChanged(AttributeEvent e) {}
-
   @Override
   public void attributeValueChanged(AttributeEvent e) {
     AttributeSet attrs = e.getSource();

File: src/main/java/com/cburch/logisim/std/wiring/DoNotConnect.java
Patch:
@@ -94,7 +94,9 @@ public void paintInstance(InstancePainter painter) {
   }
 
   @Override
-  public void propagate(InstanceState state) { }
+  public void propagate(InstanceState state) {
+    // do nothing
+  }
 
   @Override
   public boolean HDLSupportedComponent(AttributeSet attrs) {

File: src/main/java/com/cburch/logisim/util/UniquelyNamedThread.java
Patch:
@@ -45,8 +45,8 @@ private static String nextName(String prefix) {
     return prefix + "-" + id;
   }
 
-  // private UniquelyNamedThread() { }
-  // private UniquelyNamedThread(Runnable runnable) { }
+  // private UniquelyNamedThread() {}
+  // private UniquelyNamedThread(Runnable runnable) {}
 
   public UniquelyNamedThread(String prefix) {
     super(nextName(prefix));

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -371,7 +371,7 @@ public void ThreadFunc() {
               }
             }
 
-           var rvalues = new double[sampleRate];
+            var rvalues = new double[sampleRate];
             for (var i = 0; i < sampleRate; i += cycle) {
               System.arraycopy(values, 2 * cycle, rvalues, i, Math.min(cycle, sampleRate - i));
             }

File: src/main/java/com/cburch/logisim/gui/generic/ZoomModel.java
Patch:
@@ -30,6 +30,7 @@
 
 import java.awt.event.MouseEvent;
 import java.beans.PropertyChangeListener;
+import java.util.ArrayList;
 
 public interface ZoomModel {
   String ZOOM = "zoom";
@@ -42,7 +43,7 @@ public interface ZoomModel {
 
   double getZoomFactor();
 
-  double[] getZoomOptions();
+  ArrayList<Double> getZoomOptions();
 
   void setZoomFactor(double value);
 

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -96,7 +96,6 @@ private void buildContents() {
       if (tool == null) {
         newItems.add(new ToolbarSeparator(4));
       } else {
-        if (tool instanceof AddTool) tool.registerParent(frame.getToolbar());
         final var i = findItem(oldItems, tool);
         newItems.add(Objects.requireNonNullElseGet(i, () -> new ToolItem(tool)));
       }

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -59,7 +59,6 @@ public LayoutOptions(PreferencesFrame window) {
           new PrefBoolean(AppPreferences.AntiAliassing, S.getter("layoutAntiAliasing")),
           new PrefBoolean(AppPreferences.PRINTER_VIEW, S.getter("layoutPrinterView")),
           new PrefBoolean(AppPreferences.ATTRIBUTE_HALO, S.getter("layoutAttributeHalo")),
-          new PrefBoolean(AppPreferences.ANIMATED_ICONS, S.getter("layoutAnimatedIcons")),
           new PrefBoolean(AppPreferences.COMPONENT_TIPS, S.getter("layoutShowTips")),
           new PrefBoolean(AppPreferences.MOVE_KEEP_CONNECT, S.getter("layoutMoveKeepConnect")),
           new PrefBoolean(AppPreferences.ADD_SHOW_GHOSTS, S.getter("layoutAddShowGhosts")),

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -102,6 +102,7 @@ public void set(String value) {
   // methods for accessing preferences
   //
   private static class MyListener implements PreferenceChangeListener, LocaleListener {
+    @Override
     public void localeChanged() {
       final var loc = LocaleManager.getLocale();
       final var lang = loc.getLanguage();
@@ -110,6 +111,7 @@ public void localeChanged() {
       }
     }
 
+    @Override
     public void preferenceChange(PreferenceChangeEvent event) {
       final var prefs = event.getNode();
       final var prop = event.getKey();
@@ -556,8 +558,6 @@ public static void setDefaultGridColors() {
       create(new PrefMonitorBoolean("namedBoxesFixed", true));
   public static final PrefMonitor<Boolean> KMAP_LINED_STYLE =
       create(new PrefMonitorBoolean("KmapLinedStyle", false));
-  public static final PrefMonitor<Boolean> ANIMATED_ICONS =
-      create(new PrefMonitorBoolean("AnimatedIcons", false));
   public static final PrefMonitor<String> DefaultAppearance =
       create(
           new PrefMonitorStringOpts(

File: src/main/java/com/cburch/logisim/tools/Tool.java
Patch:
@@ -148,9 +148,6 @@ public void paintIcon(ComponentDrawContext c, int x, int y) {
     // dummy implementation
   }
 
-  public void registerParent(java.awt.Component parent) {
-    // dummy implementation
-  }
 
   public void select(Canvas canvas) {
     // dummy implementation

File: src/main/java/com/cburch/logisim/std/io/HexDigit.java
Patch:
@@ -70,7 +70,8 @@ protected enum NoDataDisplayMode {
     U,
     H
   }
-  final static NoDataDisplayMode NO_DATA_DISPLAY = NoDataDisplayMode.BLANK;
+
+  static final NoDataDisplayMode NO_DATA_DISPLAY = NoDataDisplayMode.BLANK;
 
   public HexDigit() {
     super(_ID, S.getter("hexDigitComponent"));

File: src/main/java/com/cburch/logisim/tools/Tool.java
Patch:
@@ -87,7 +87,7 @@ public Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver) {
    * Returns Tool unique ID as defined in its _ID constant.
    *
    * For each tool extending this class, define
-   *    public static final String _ID = "<UNIQUE ID>"
+   *    public static final String _ID = "UNIQUE_ID"
    *
    * @return unique ID of the tool
    */

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -157,9 +157,7 @@ public void localeChanged() {
     radix1.localeChanged();
     radix2.localeChanged();
     afterAdd.localeChanged();
-    DefaultAppear.localeChanged();
-    PrefPinAppearance.localeChanged();
-
+    defaultAppearance.localeChanged();
   }
 
 

File: src/main/java/com/cburch/logisim/std/io/Keyboard.java
Patch:
@@ -180,7 +180,7 @@ private static KeyboardData getKeyboardState(InstanceState state) {
   private static final Font DEFAULT_FONT = new Font("monospaced", Font.PLAIN, 12);
 
   @SuppressWarnings("checkstyle:IllegalTokenText")
-  private static final char FORM_FEED = '\u000c'; // control-L
+  private static final char FORM_FEED = 12; // control-L (LINE FEED)
 
   private static final Attribute<Integer> ATTR_BUFFER =
       Attributes.forIntegerRange("buflen", S.getter("keybBufferLengthAttr"), 1, 256);

File: src/main/java/com/cburch/draw/shapes/CurveUtil.java
Patch:
@@ -210,9 +210,9 @@ private static double[] solveCubic(double a, double b, double c, double d) {
         double u = 2 * Math.sqrt(-p / 3);
         double v = Math.acos(-Math.sqrt(-27 / p3) * q / 2) / 3;
         return new double[] {
-                u * Math.cos(v) + offset,
-                u * Math.cos(v + 2 * Math.PI / 3) + offset,
-                u * Math.cos(v + 4 * Math.PI / 3) + offset
+          u * Math.cos(v) + offset,
+          u * Math.cos(v + 2 * Math.PI / 3) + offset,
+          u * Math.cos(v + 4 * Math.PI / 3) + offset
         };
       } else {
         // D zero

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -40,7 +40,7 @@
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.Projects;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.Tool;
@@ -279,7 +279,7 @@ public void addVhdlContent(VhdlContent content, int index) {
   }
 
   public void addLibrary(Library lib) {
-    if (!lib.getName().equals(Base._ID)) {
+    if (!lib.getName().equals(BaseLibrary._ID)) {
       for (final var tool : lib.getTools()) {
         final var tool1 = (AddTool) tool;
         final var atrs = tool1.getAttributeSet();

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsListener.java
Patch:
@@ -31,5 +31,5 @@
 import java.awt.Rectangle;
 
 public interface IOComponentsListener {
-   void repaintRequest(Rectangle rect);
+  void repaintRequest(Rectangle rect);
 }

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.file.LibraryEvent;
 import com.cburch.logisim.file.LibraryListener;
 import com.cburch.logisim.file.LogisimFile;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import java.util.ArrayList;
@@ -67,7 +67,7 @@ public class ProjectExplorerLibraryNode extends ProjectExplorerModel.Node<Librar
   private void buildChildren() {
     Library lib = getValue();
     if (lib != null) {
-      boolean showLib = (showMouseTools & lib instanceof Base) || !lib.isHidden();
+      boolean showLib = (showMouseTools & lib instanceof BaseLibrary) || !lib.isHidden();
       if (showLib) {
         buildChildren(new ProjectExplorerToolNode(getModel(), null), lib.getTools(), 0);
         buildChildren(
@@ -108,7 +108,7 @@ private <T> void buildChildren(
     for (T tool : items) {
       if (tool instanceof Library && ((Library) tool).isHidden()) {
         if (!showMouseTools) continue;
-        else if (!(tool instanceof Base)) continue;
+        else if (!(tool instanceof BaseLibrary)) continue;
       }
       if (tool instanceof AddTool) {
         AddTool a = (AddTool) tool;

File: src/main/java/com/cburch/logisim/gui/main/ToolboxManip.java
Patch:
@@ -49,7 +49,7 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.ProjectEvent;
 import com.cburch.logisim.proj.ProjectListener;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.EditTool;
 import com.cburch.logisim.tools.Library;
@@ -77,7 +77,7 @@ private static void setDefaultTool(Tool lastSelected, Project proj) {
       proj.setTool(lastSelected);
     } else {
       for (Library sub : proj.getLogisimFile().getLibraries()) {
-        if (sub instanceof Base) {
+        if (sub instanceof BaseLibrary) {
           Tool tool = sub.getTool(EditTool._ID);
           if (tool != null) {
             proj.setTool(tool);

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Arithmetic extends Library {
+public class ArithmeticLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -74,7 +74,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Arithmetic.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(ArithmeticLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/arith/NegatorHDLGeneratorFactory.java
Patch:
@@ -50,7 +50,7 @@ public String getComponentStringIdentifier() {
 
   @Override
   public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet attrs) {
-    final var Inputs = new TreeMap<String, Integer> ();
+    final var Inputs = new TreeMap<String, Integer>();
     int inputbits = (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) ? 1 : NrOfBitsId;
     Inputs.put("DataX", inputbits);
     return Inputs;

File: src/main/java/com/cburch/logisim/std/base/BaseLibrary.java
Patch:
@@ -43,7 +43,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Base extends Library {
+public class BaseLibrary extends Library {
   /**
    * Unique identifier of the tool, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -56,7 +56,7 @@ public class Base extends Library {
   private final AddTool textAdder = new AddTool(Text.FACTORY);
   private final SelectTool selectTool = new SelectTool();
 
-  public Base() {
+  public BaseLibrary() {
     setHidden();
     WiringTool wiring = new WiringTool();
 

File: src/main/java/com/cburch/logisim/std/bfh/BfhLibrary.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class BFHPraktika extends Library {
+public class BfhLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -59,7 +59,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(BFHPraktika.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(BfhLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevenseg.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcd.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.BitWidth;

File: src/main/java/com/cburch/logisim/std/gates/GatesLibrary.java
Patch:
@@ -36,7 +36,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Gates extends Library {
+public class GatesLibrary extends Library {
 
   /**
    * Unique identifier of the tool, used as reference in project files.
@@ -48,7 +48,7 @@ public class Gates extends Library {
 
   private List<Tool> tools = null;
 
-  public Gates() {
+  public GatesLibrary() {
     tools =
         Arrays.asList(
             new Tool[] {

File: src/main/java/com/cburch/logisim/std/io/Button.java
Patch:
@@ -117,7 +117,7 @@ public Button() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -187,7 +187,7 @@ public void paintInstance(InstancePainter painter) {
       val = Value.FALSE;
     }
 
-    var color = painter.getAttributeValue(Io.ATTR_COLOR);
+    var color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/io/IoLibrary.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class Io extends Library {
+public class IoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files. Do NOT change as it will
    * prevent project files from loading.
@@ -89,7 +89,7 @@ public String getDisplayName() {
   public List<Tool> getTools() {
     if (tools == null) {
       tools = new ArrayList<>();
-      tools.addAll(FactoryDescription.getTools(Io.class, DESCRIPTIONS));
+      tools.addAll(FactoryDescription.getTools(IoLibrary.class, DESCRIPTIONS));
       tools.add(new AddTool(Video.factory));
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/Joystick.java
Patch:
@@ -98,7 +98,7 @@ public void paint(InstancePainter painter) {
       final var x1 = x - 15 + dx;
       final var y1 = y + 5 + dy;
       g.drawLine(x0, y0, x1, y1);
-      final var ballColor = painter.getAttributeValue(Io.ATTR_COLOR);
+      final var ballColor = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
       Joystick.drawBall(g, x1, y1, ballColor, true);
     }
 
@@ -156,7 +156,7 @@ private static void drawBall(Graphics g, int x, int y, Color c, boolean inColor)
 
   public Joystick() {
     super(_ID, S.getter("joystickComponent"));
-    setAttributes(new Attribute[] {ATTR_WIDTH, Io.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
+    setAttributes(new Attribute[] {ATTR_WIDTH, IoLibrary.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
     setKeyConfigurator(new BitWidthConfigurator(ATTR_WIDTH, 2, 5));
     setOffsetBounds(Bounds.create(-30, -10, 30, 30));
     setIcon(new JoystickIcon());
@@ -183,7 +183,7 @@ public void paintInstance(InstancePainter painter) {
     final var g = painter.getGraphics();
     g.drawRoundRect(x - 30, y - 10, 30, 30, 8, 8);
     g.drawRoundRect(x - 28, y - 8, 26, 26, 4, 4);
-    drawBall(g, x - 15, y + 5, painter.getAttributeValue(Io.ATTR_COLOR), painter.shouldDrawColor());
+    drawBall(g, x - 15, y + 5, painter.getAttributeValue(IoLibrary.ATTR_COLOR), painter.shouldDrawColor());
     painter.drawPorts();
   }
 

File: src/main/java/com/cburch/logisim/std/io/LedShape.java
Patch:
@@ -79,8 +79,8 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    final var offColor = path.leaf().getAttributeSet().getValue(Io.ATTR_OFF_COLOR);
-    final var onColor = path.leaf().getAttributeSet().getValue(Io.ATTR_ON_COLOR);
+    final var offColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_OFF_COLOR);
+    final var onColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ON_COLOR);
     final var x = bounds.getX() + 1;
     final var y = bounds.getY() + 1;
     final var w = bounds.getWidth() - 2;
@@ -91,7 +91,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      final var activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      final var activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       Object desired = activ ? Value.TRUE : Value.FALSE;
       final var data = (InstanceDataSingleton) getData(state);
       final var val = data == null ? Value.FALSE : (Value) data.getValue();

File: src/main/java/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -110,7 +110,7 @@ public RGBLed() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_ACTIVE,
+          IoLibrary.ATTR_ACTIVE,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -162,7 +162,7 @@ private void updatePorts(Instance instance) {
 
   @Override
   public boolean ActiveOnHigh(AttributeSet attrs) {
-    return attrs.getValue(Io.ATTR_ACTIVE);
+    return attrs.getValue(IoLibrary.ATTR_ACTIVE);
   }
 
   @Override
@@ -211,7 +211,7 @@ public void paintInstance(InstancePainter painter) {
 
     final var g = painter.getGraphics();
     if (painter.getShowState()) {
-      Boolean activ = painter.getAttributeValue(Io.ATTR_ACTIVE);
+      Boolean activ = painter.getAttributeValue(IoLibrary.ATTR_ACTIVE);
       final var mask = activ ? 0 : 7;
       summ ^= mask;
       final var red = ((summ >> RED) & 1) * 0xFF;

File: src/main/java/com/cburch/logisim/std/io/RGBLedShape.java
Patch:
@@ -57,7 +57,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      final var activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      final var activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       final var data = (InstanceDataSingleton) getData(state);
       var summ = (data == null ? 0 : (Integer) data.getValue());
       final var mask = activ ? 0 : 7;

File: src/main/java/com/cburch/logisim/std/io/Tty.java
Patch:
@@ -92,7 +92,7 @@ public Tty() {
     super(_ID, S.getter("ttyComponent"));
     setAttributes(
         new Attribute[] {
-          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, Io.ATTR_COLOR, Io.ATTR_BACKGROUND
+          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, IoLibrary.ATTR_COLOR, IoLibrary.ATTR_BACKGROUND
         },
         new Object[] {
             8,
@@ -166,7 +166,7 @@ public void paintInstance(InstancePainter painter) {
     final var bds = painter.getBounds();
     painter.drawClock(CK, Direction.EAST);
     if (painter.shouldDrawColor()) {
-      g.setColor(painter.getAttributeValue(Io.ATTR_BACKGROUND));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_BACKGROUND));
       g.fillRoundRect(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight(), 10, 10);
     }
     GraphicsUtil.switchToWidth(g, 2);
@@ -195,7 +195,7 @@ public void paintInstance(InstancePainter painter) {
       }
 
       g.setFont(DEFAULT_FONT);
-      g.setColor(painter.getAttributeValue(Io.ATTR_COLOR));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
       final var fm = g.getFontMetrics();
       int x = bds.getX() + BORDER;
       int y = bds.getY() + BORDER + (ROW_HEIGHT + fm.getAscent()) / 2;

File: src/main/java/com/cburch/logisim/std/io/extra/ExtraIoLibrary.java
Patch:
@@ -37,7 +37,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class ITA_IO extends Library {
+public class ExtraIoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -75,7 +75,7 @@ public List<? extends Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(ITA_IO.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(ExtraIoLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.LocaleManager;
 import java.awt.Color;
@@ -206,7 +206,7 @@ public Slider() {
           StdAttr.FACING,
           StdAttr.WIDTH,
           RadixOption.ATTRIBUTE,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_FONT,
           StdAttr.LABEL_VISIBILITY,
@@ -279,7 +279,7 @@ public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getBounds();
     SliderValue data = getValueState(painter);
     int x = bds.getX(), y = bds.getY();
-    painter.drawRoundBounds(painter.getAttributeValue(Io.ATTR_COLOR));
+    painter.drawRoundBounds(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
     GraphicsUtil.switchToWidth(g, 2);
     // slider line
     g.drawLine(x + 10, y + bds.getHeight() - 10, x + bds.getWidth() - 10, y + bds.getHeight() - 10);

File: src/main/java/com/cburch/logisim/std/io/extra/Switch.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.tools.key.DirectionConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
@@ -107,7 +107,7 @@ public Switch() {
         new Attribute[] {
           StdAttr.FACING,
           StdAttr.WIDTH,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT
@@ -170,7 +170,7 @@ private void paint(InstancePainter painter, boolean ghost) {
       active = data != null && (Boolean) data.getValue();
     }
 
-    Color color = painter.getAttributeValue(Io.ATTR_COLOR);
+    Color color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlop.java
Patch:
@@ -424,8 +424,8 @@ public void propagate(InstanceState state) {
       }
     }
 
-    state.setPort(n + 1, data.curValue, Memory.DELAY);
-    state.setPort(n + 2, data.curValue.not(), Memory.DELAY);
+    state.setPort(n + 1, data.curValue, MemoryLibrary.DELAY);
+    state.setPort(n + 2, data.curValue.not(), MemoryLibrary.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/MemoryLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Memory extends Library {
+public class MemoryLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -69,7 +69,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Memory.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(MemoryLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -116,7 +116,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
 
   @Override
   public void paintGhost(InstancePainter painter) {
-    Plexers.drawTrapezoid(
+    PlexersLibrary.drawTrapezoid(
         painter.getGraphics(), painter.getBounds(), painter.getAttributeValue(StdAttr.FACING), 9);
   }
 
@@ -125,7 +125,7 @@ public void paintInstance(InstancePainter painter) {
     final var g = painter.getGraphics();
     final var facing = painter.getAttributeValue(StdAttr.FACING);
 
-    Plexers.drawTrapezoid(g, painter.getBounds(), facing, 9);
+    PlexersLibrary.drawTrapezoid(g, painter.getBounds(), facing, 9);
     final var bds = painter.getBounds();
     g.setColor(Color.BLACK);
     GraphicsUtil.drawCenteredText(
@@ -159,7 +159,7 @@ public void propagate(InstanceState state) {
         group = Value.create(bits);
       }
     }
-    state.setPort(0, group, Plexers.DELAY);
+    state.setPort(0, group, PlexersLibrary.DELAY);
   }
 
   private void updatePorts(Instance instance) {

File: src/main/java/com/cburch/logisim/std/plexers/PlexersLibrary.java
Patch:
@@ -44,7 +44,7 @@
 import java.awt.Graphics;
 import java.util.List;
 
-public class Plexers extends Library {
+public class PlexersLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -175,7 +175,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Plexers.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(PlexersLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/tcl/TclLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Tcl extends Library {
+public class TclLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
@@ -60,7 +60,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Tcl.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TclLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -120,6 +120,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return !attrs.getValue(TTL.VCC_GND);
+    return !attrs.getValue(TtlLibrary.VCC_GND);
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -179,6 +179,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && (HDL.isVHDL()));
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && (HDL.isVHDL()));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410HDLGenerator.java
Patch:
@@ -125,6 +125,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7413HDLGenerator.java
Patch:
@@ -119,6 +119,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165.java
Patch:
@@ -107,7 +107,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
     @Override
     public void mouseReleased(InstanceState state, MouseEvent e) {
-      if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE)) return;
+      if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE)) return;
       if (isPressed && isInside(state, e)) {
         final var index = getIndex(state, e);
         System.out.println(index);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -173,6 +173,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -64,10 +64,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void ttlpropagate(InstanceState state) {
-    var data = (TTLRegisterData) state.getData();
+    var data = (TtlRegisterData) state.getData();
     if (data == null) {
       // changed = true;
-      data = new TTLRegisterData(BitWidth.create(4));
+      data = new TtlRegisterData(BitWidth.create(4));
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -172,6 +172,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -130,6 +130,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7430HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442HDLGenerator.java
Patch:
@@ -160,6 +160,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -154,6 +154,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7451HDLGenerator.java
Patch:
@@ -107,6 +107,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7458HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -182,6 +182,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -141,6 +141,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -37,7 +37,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class TTL extends Library {
+public class TtlLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -97,7 +97,7 @@ public class TTL extends Library {
   @Override
   public List<? extends Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(TTL.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TtlLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/ttl/TtlRegisterData.java
Patch:
@@ -33,12 +33,12 @@
 import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.prefs.AppPreferences;
 
-public class TTLRegisterData extends ClockState implements InstanceData {
+public class TtlRegisterData extends ClockState implements InstanceData {
 
   private Value value;
   private final BitWidth bits;
 
-  public TTLRegisterData(BitWidth width) {
+  public TtlRegisterData(BitWidth width) {
     value =
         (AppPreferences.Memory_Startup_Unknown.get())
             ? Value.createUnknown(width)

File: src/main/java/com/cburch/logisim/std/wiring/WiringLibrary.java
Patch:
@@ -42,7 +42,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Wiring extends Library {
+public class WiringLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
@@ -94,7 +94,7 @@ public List<Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(Wiring.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(WiringLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -54,7 +54,7 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.proj.Project;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.std.gates.GateKeyboardModifier;
 import com.cburch.logisim.std.wiring.ProbeAttributes;
 import com.cburch.logisim.tools.key.KeyConfigurationEvent;
@@ -201,7 +201,7 @@ private Tool determineNext(Project proj) {
     if (afterAdd.equals(AppPreferences.ADD_AFTER_UNCHANGED)) {
       return null;
     } else { // switch to Edit Tool
-      final var base = proj.getLogisimFile().getLibrary(Base._ID);
+      final var base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
       if (base == null) {
         return null;
       } else {
@@ -417,7 +417,7 @@ public void keyPressed(Canvas canvas, KeyEvent event) {
               break;
             case KeyEvent.VK_ESCAPE:
               final var proj = canvas.getProject();
-              final var base = proj.getLogisimFile().getLibrary(Base._ID);
+              final var base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
               final var next = (base == null) ? null : base.getTool(EditTool._ID);
               if (next != null) {
                 proj.setTool(next);

File: src/main/java/com/cburch/draw/shapes/CurveUtil.java
Patch:
@@ -210,9 +210,9 @@ private static double[] solveCubic(double a, double b, double c, double d) {
         double u = 2 * Math.sqrt(-p / 3);
         double v = Math.acos(-Math.sqrt(-27 / p3) * q / 2) / 3;
         return new double[] {
-                u * Math.cos(v) + offset,
-                u * Math.cos(v + 2 * Math.PI / 3) + offset,
-                u * Math.cos(v + 4 * Math.PI / 3) + offset
+          u * Math.cos(v) + offset,
+          u * Math.cos(v + 2 * Math.PI / 3) + offset,
+          u * Math.cos(v + 4 * Math.PI / 3) + offset
         };
       } else {
         // D zero

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsListener.java
Patch:
@@ -31,5 +31,5 @@
 import java.awt.Rectangle;
 
 public interface IOComponentsListener {
-   void repaintRequest(Rectangle rect);
+  void repaintRequest(Rectangle rect);
 }

File: src/main/java/com/cburch/logisim/std/arith/NegatorHDLGeneratorFactory.java
Patch:
@@ -50,7 +50,7 @@ public String getComponentStringIdentifier() {
 
   @Override
   public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet attrs) {
-    final var Inputs = new TreeMap<String, Integer> ();
+    final var Inputs = new TreeMap<String, Integer>();
     int inputbits = (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) ? 1 : NrOfBitsId;
     Inputs.put("DataX", inputbits);
     return Inputs;

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -40,7 +40,7 @@
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.Projects;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.Tool;
@@ -279,7 +279,7 @@ public void addVhdlContent(VhdlContent content, int index) {
   }
 
   public void addLibrary(Library lib) {
-    if (!lib.getName().equals(Base._ID)) {
+    if (!lib.getName().equals(BaseLibrary._ID)) {
       for (final var tool : lib.getTools()) {
         final var tool1 = (AddTool) tool;
         final var atrs = tool1.getAttributeSet();

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.file.LibraryEvent;
 import com.cburch.logisim.file.LibraryListener;
 import com.cburch.logisim.file.LogisimFile;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import java.util.ArrayList;
@@ -67,7 +67,7 @@ public class ProjectExplorerLibraryNode extends ProjectExplorerModel.Node<Librar
   private void buildChildren() {
     Library lib = getValue();
     if (lib != null) {
-      boolean showLib = (showMouseTools & lib instanceof Base) || !lib.isHidden();
+      boolean showLib = (showMouseTools & lib instanceof BaseLibrary) || !lib.isHidden();
       if (showLib) {
         buildChildren(new ProjectExplorerToolNode(getModel(), null), lib.getTools(), 0);
         buildChildren(
@@ -108,7 +108,7 @@ private <T> void buildChildren(
     for (T tool : items) {
       if (tool instanceof Library && ((Library) tool).isHidden()) {
         if (!showMouseTools) continue;
-        else if (!(tool instanceof Base)) continue;
+        else if (!(tool instanceof BaseLibrary)) continue;
       }
       if (tool instanceof AddTool) {
         AddTool a = (AddTool) tool;

File: src/main/java/com/cburch/logisim/gui/main/ToolboxManip.java
Patch:
@@ -49,7 +49,7 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.ProjectEvent;
 import com.cburch.logisim.proj.ProjectListener;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.EditTool;
 import com.cburch.logisim.tools.Library;
@@ -77,7 +77,7 @@ private static void setDefaultTool(Tool lastSelected, Project proj) {
       proj.setTool(lastSelected);
     } else {
       for (Library sub : proj.getLogisimFile().getLibraries()) {
-        if (sub instanceof Base) {
+        if (sub instanceof BaseLibrary) {
           Tool tool = sub.getTool(EditTool._ID);
           if (tool != null) {
             proj.setTool(tool);

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Arithmetic extends Library {
+public class ArithmeticLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -66,7 +66,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Arithmetic.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(ArithmeticLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/base/BaseLibrary.java
Patch:
@@ -43,7 +43,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Base extends Library {
+public class BaseLibrary extends Library {
   /**
    * Unique identifier of the tool, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -56,7 +56,7 @@ public class Base extends Library {
   private final AddTool textAdder = new AddTool(Text.FACTORY);
   private final SelectTool selectTool = new SelectTool();
 
-  public Base() {
+  public BaseLibrary() {
     setHidden();
     WiringTool wiring = new WiringTool();
 

File: src/main/java/com/cburch/logisim/std/bfh/BfhLibrary.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class BFHPraktika extends Library {
+public class BfhLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -59,7 +59,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(BFHPraktika.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(BfhLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevenseg.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 

File: src/main/java/com/cburch/logisim/std/bfh/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcd.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import static com.cburch.logisim.std.Strings.S;
 

File: src/main/java/com/cburch/logisim/std/bfh/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.library;
+package com.cburch.logisim.std.bfh;
 
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.BitWidth;

File: src/main/java/com/cburch/logisim/std/gates/GatesLibrary.java
Patch:
@@ -36,7 +36,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Gates extends Library {
+public class GatesLibrary extends Library {
 
   /**
    * Unique identifier of the tool, used as reference in project files.
@@ -48,7 +48,7 @@ public class Gates extends Library {
 
   private List<Tool> tools = null;
 
-  public Gates() {
+  public GatesLibrary() {
     tools =
         Arrays.asList(
             new Tool[] {

File: src/main/java/com/cburch/logisim/std/io/Button.java
Patch:
@@ -117,7 +117,7 @@ public Button() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -187,7 +187,7 @@ public void paintInstance(InstancePainter painter) {
       val = Value.FALSE;
     }
 
-    var color = painter.getAttributeValue(Io.ATTR_COLOR);
+    var color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/io/IoLibrary.java
Patch:
@@ -40,7 +40,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class Io extends Library {
+public class IoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files. Do NOT change as it will
    * prevent project files from loading.
@@ -89,7 +89,7 @@ public String getDisplayName() {
   public List<Tool> getTools() {
     if (tools == null) {
       tools = new ArrayList<>();
-      tools.addAll(FactoryDescription.getTools(Io.class, DESCRIPTIONS));
+      tools.addAll(FactoryDescription.getTools(IoLibrary.class, DESCRIPTIONS));
       tools.add(new AddTool(Video.factory));
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/Joystick.java
Patch:
@@ -98,7 +98,7 @@ public void paint(InstancePainter painter) {
       final var x1 = x - 15 + dx;
       final var y1 = y + 5 + dy;
       g.drawLine(x0, y0, x1, y1);
-      final var ballColor = painter.getAttributeValue(Io.ATTR_COLOR);
+      final var ballColor = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
       Joystick.drawBall(g, x1, y1, ballColor, true);
     }
 
@@ -156,7 +156,7 @@ private static void drawBall(Graphics g, int x, int y, Color c, boolean inColor)
 
   public Joystick() {
     super(_ID, S.getter("joystickComponent"));
-    setAttributes(new Attribute[] {ATTR_WIDTH, Io.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
+    setAttributes(new Attribute[] {ATTR_WIDTH, IoLibrary.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
     setKeyConfigurator(new BitWidthConfigurator(ATTR_WIDTH, 2, 5));
     setOffsetBounds(Bounds.create(-30, -10, 30, 30));
     setIcon(new JoystickIcon());
@@ -183,7 +183,7 @@ public void paintInstance(InstancePainter painter) {
     final var g = painter.getGraphics();
     g.drawRoundRect(x - 30, y - 10, 30, 30, 8, 8);
     g.drawRoundRect(x - 28, y - 8, 26, 26, 4, 4);
-    drawBall(g, x - 15, y + 5, painter.getAttributeValue(Io.ATTR_COLOR), painter.shouldDrawColor());
+    drawBall(g, x - 15, y + 5, painter.getAttributeValue(IoLibrary.ATTR_COLOR), painter.shouldDrawColor());
     painter.drawPorts();
   }
 

File: src/main/java/com/cburch/logisim/std/io/LedShape.java
Patch:
@@ -79,8 +79,8 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    final var offColor = path.leaf().getAttributeSet().getValue(Io.ATTR_OFF_COLOR);
-    final var onColor = path.leaf().getAttributeSet().getValue(Io.ATTR_ON_COLOR);
+    final var offColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_OFF_COLOR);
+    final var onColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ON_COLOR);
     final var x = bounds.getX() + 1;
     final var y = bounds.getY() + 1;
     final var w = bounds.getWidth() - 2;
@@ -91,7 +91,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      final var activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      final var activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       Object desired = activ ? Value.TRUE : Value.FALSE;
       final var data = (InstanceDataSingleton) getData(state);
       final var val = data == null ? Value.FALSE : (Value) data.getValue();

File: src/main/java/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -110,7 +110,7 @@ public RGBLed() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_ACTIVE,
+          IoLibrary.ATTR_ACTIVE,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -162,7 +162,7 @@ private void updatePorts(Instance instance) {
 
   @Override
   public boolean ActiveOnHigh(AttributeSet attrs) {
-    return attrs.getValue(Io.ATTR_ACTIVE);
+    return attrs.getValue(IoLibrary.ATTR_ACTIVE);
   }
 
   @Override
@@ -211,7 +211,7 @@ public void paintInstance(InstancePainter painter) {
 
     final var g = painter.getGraphics();
     if (painter.getShowState()) {
-      Boolean activ = painter.getAttributeValue(Io.ATTR_ACTIVE);
+      Boolean activ = painter.getAttributeValue(IoLibrary.ATTR_ACTIVE);
       final var mask = activ ? 0 : 7;
       summ ^= mask;
       final var red = ((summ >> RED) & 1) * 0xFF;

File: src/main/java/com/cburch/logisim/std/io/RGBLedShape.java
Patch:
@@ -57,7 +57,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      final var activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      final var activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       final var data = (InstanceDataSingleton) getData(state);
       var summ = (data == null ? 0 : (Integer) data.getValue());
       final var mask = activ ? 0 : 7;

File: src/main/java/com/cburch/logisim/std/io/Tty.java
Patch:
@@ -92,7 +92,7 @@ public Tty() {
     super(_ID, S.getter("ttyComponent"));
     setAttributes(
         new Attribute[] {
-          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, Io.ATTR_COLOR, Io.ATTR_BACKGROUND
+          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, IoLibrary.ATTR_COLOR, IoLibrary.ATTR_BACKGROUND
         },
         new Object[] {
             8,
@@ -166,7 +166,7 @@ public void paintInstance(InstancePainter painter) {
     final var bds = painter.getBounds();
     painter.drawClock(CK, Direction.EAST);
     if (painter.shouldDrawColor()) {
-      g.setColor(painter.getAttributeValue(Io.ATTR_BACKGROUND));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_BACKGROUND));
       g.fillRoundRect(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight(), 10, 10);
     }
     GraphicsUtil.switchToWidth(g, 2);
@@ -195,7 +195,7 @@ public void paintInstance(InstancePainter painter) {
       }
 
       g.setFont(DEFAULT_FONT);
-      g.setColor(painter.getAttributeValue(Io.ATTR_COLOR));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
       final var fm = g.getFontMetrics();
       int x = bds.getX() + BORDER;
       int y = bds.getY() + BORDER + (ROW_HEIGHT + fm.getAscent()) / 2;

File: src/main/java/com/cburch/logisim/std/io/extra/ExtraIoLibrary.java
Patch:
@@ -37,7 +37,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class ITA_IO extends Library {
+public class ExtraIoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -75,7 +75,7 @@ public List<? extends Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(ITA_IO.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(ExtraIoLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.LocaleManager;
 import java.awt.Color;
@@ -206,7 +206,7 @@ public Slider() {
           StdAttr.FACING,
           StdAttr.WIDTH,
           RadixOption.ATTRIBUTE,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_FONT,
           StdAttr.LABEL_VISIBILITY,
@@ -279,7 +279,7 @@ public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getBounds();
     SliderValue data = getValueState(painter);
     int x = bds.getX(), y = bds.getY();
-    painter.drawRoundBounds(painter.getAttributeValue(Io.ATTR_COLOR));
+    painter.drawRoundBounds(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
     GraphicsUtil.switchToWidth(g, 2);
     // slider line
     g.drawLine(x + 10, y + bds.getHeight() - 10, x + bds.getWidth() - 10, y + bds.getHeight() - 10);

File: src/main/java/com/cburch/logisim/std/io/extra/Switch.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.tools.key.DirectionConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
@@ -107,7 +107,7 @@ public Switch() {
         new Attribute[] {
           StdAttr.FACING,
           StdAttr.WIDTH,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT
@@ -170,7 +170,7 @@ private void paint(InstancePainter painter, boolean ghost) {
       active = data != null && (Boolean) data.getValue();
     }
 
-    Color color = painter.getAttributeValue(Io.ATTR_COLOR);
+    Color color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlop.java
Patch:
@@ -424,8 +424,8 @@ public void propagate(InstanceState state) {
       }
     }
 
-    state.setPort(n + 1, data.curValue, Memory.DELAY);
-    state.setPort(n + 2, data.curValue.not(), Memory.DELAY);
+    state.setPort(n + 1, data.curValue, MemoryLibrary.DELAY);
+    state.setPort(n + 2, data.curValue.not(), MemoryLibrary.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/MemoryLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Memory extends Library {
+public class MemoryLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -69,7 +69,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Memory.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(MemoryLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -116,7 +116,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
 
   @Override
   public void paintGhost(InstancePainter painter) {
-    Plexers.drawTrapezoid(
+    PlexersLibrary.drawTrapezoid(
         painter.getGraphics(), painter.getBounds(), painter.getAttributeValue(StdAttr.FACING), 9);
   }
 
@@ -125,7 +125,7 @@ public void paintInstance(InstancePainter painter) {
     final var g = painter.getGraphics();
     final var facing = painter.getAttributeValue(StdAttr.FACING);
 
-    Plexers.drawTrapezoid(g, painter.getBounds(), facing, 9);
+    PlexersLibrary.drawTrapezoid(g, painter.getBounds(), facing, 9);
     final var bds = painter.getBounds();
     g.setColor(Color.BLACK);
     GraphicsUtil.drawCenteredText(
@@ -159,7 +159,7 @@ public void propagate(InstanceState state) {
         group = Value.create(bits);
       }
     }
-    state.setPort(0, group, Plexers.DELAY);
+    state.setPort(0, group, PlexersLibrary.DELAY);
   }
 
   private void updatePorts(Instance instance) {

File: src/main/java/com/cburch/logisim/std/plexers/PlexersLibrary.java
Patch:
@@ -44,7 +44,7 @@
 import java.awt.Graphics;
 import java.util.List;
 
-public class Plexers extends Library {
+public class PlexersLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -175,7 +175,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Plexers.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(PlexersLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/tcl/TclLibrary.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Tcl extends Library {
+public class TclLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
@@ -60,7 +60,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Tcl.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TclLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -120,6 +120,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return !attrs.getValue(TTL.VCC_GND);
+    return !attrs.getValue(TtlLibrary.VCC_GND);
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -179,6 +179,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && (HDL.isVHDL()));
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && (HDL.isVHDL()));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410HDLGenerator.java
Patch:
@@ -125,6 +125,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7413HDLGenerator.java
Patch:
@@ -119,6 +119,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165.java
Patch:
@@ -107,7 +107,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
     @Override
     public void mouseReleased(InstanceState state, MouseEvent e) {
-      if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE)) return;
+      if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE)) return;
       if (isPressed && isInside(state, e)) {
         final var index = getIndex(state, e);
         System.out.println(index);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -173,6 +173,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175.java
Patch:
@@ -64,10 +64,10 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 
   @Override
   public void ttlpropagate(InstanceState state) {
-    var data = (TTLRegisterData) state.getData();
+    var data = (TtlRegisterData) state.getData();
     if (data == null) {
       // changed = true;
-      data = new TTLRegisterData(BitWidth.create(4));
+      data = new TtlRegisterData(BitWidth.create(4));
       state.setData(data);
     }
     var triggered = data.updateClock(state.getPortValue(7));

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -172,6 +172,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -130,6 +130,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7430HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442HDLGenerator.java
Patch:
@@ -160,6 +160,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -154,6 +154,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7451HDLGenerator.java
Patch:
@@ -107,6 +107,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7458HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -182,6 +182,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -141,6 +141,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -37,7 +37,7 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class TTL extends Library {
+public class TtlLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
@@ -97,7 +97,7 @@ public class TTL extends Library {
   @Override
   public List<? extends Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(TTL.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TtlLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/ttl/TtlRegisterData.java
Patch:
@@ -33,12 +33,12 @@
 import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.prefs.AppPreferences;
 
-public class TTLRegisterData extends ClockState implements InstanceData {
+public class TtlRegisterData extends ClockState implements InstanceData {
 
   private Value value;
   private final BitWidth bits;
 
-  public TTLRegisterData(BitWidth width) {
+  public TtlRegisterData(BitWidth width) {
     value =
         (AppPreferences.Memory_Startup_Unknown.get())
             ? Value.createUnknown(width)

File: src/main/java/com/cburch/logisim/std/wiring/WiringLibrary.java
Patch:
@@ -42,7 +42,7 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Wiring extends Library {
+public class WiringLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
@@ -94,7 +94,7 @@ public List<Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(Wiring.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(WiringLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -54,7 +54,7 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.proj.Project;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.std.gates.GateKeyboardModifier;
 import com.cburch.logisim.std.wiring.ProbeAttributes;
 import com.cburch.logisim.tools.key.KeyConfigurationEvent;
@@ -201,7 +201,7 @@ private Tool determineNext(Project proj) {
     if (afterAdd.equals(AppPreferences.ADD_AFTER_UNCHANGED)) {
       return null;
     } else { // switch to Edit Tool
-      final var base = proj.getLogisimFile().getLibrary(Base._ID);
+      final var base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
       if (base == null) {
         return null;
       } else {
@@ -417,7 +417,7 @@ public void keyPressed(Canvas canvas, KeyEvent event) {
               break;
             case KeyEvent.VK_ESCAPE:
               final var proj = canvas.getProject();
-              final var base = proj.getLogisimFile().getLibrary(Base._ID);
+              final var base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
               final var next = (base == null) ? null : base.getTool(EditTool._ID);
               if (next != null) {
                 proj.setTool(next);

File: src/main/java/com/cburch/logisim/std/io/Joystick.java
Patch:
@@ -156,8 +156,7 @@ private static void drawBall(Graphics g, int x, int y, Color c, boolean inColor)
 
   public Joystick() {
     super(_ID, S.getter("joystickComponent"));
-    setAttributes(new Attribute[] {ATTR_WIDTH, Io.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
-        new Attribute[] {ATTR_WIDTH, IoLibrary.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
+    setAttributes(new Attribute[] {ATTR_WIDTH, IoLibrary.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
     setKeyConfigurator(new BitWidthConfigurator(ATTR_WIDTH, 2, 5));
     setOffsetBounds(Bounds.create(-30, -10, 30, 30));
     setIcon(new JoystickIcon());

File: src/main/java/com/cburch/logisim/std/arith/Arithmetic.java
Patch:
@@ -60,8 +60,8 @@ public class Arithmetic extends Library {
     new FactoryDescription(FPDivider.class, S.getter("fpDividerComponent"), "divider.gif"),
     new FactoryDescription(FPNegator.class, S.getter("fpNegatorComponent"), "negator.gif"),
     new FactoryDescription(FPComparator.class, S.getter("fpComparatorComponent"), "comparator.gif"),
-    new FactoryDescription(FPToInt.class, S.getter("fpToIntComponent"), "fptoi.gif"),
-    new FactoryDescription(IntToFP.class, S.getter("intToFPComponent"), "itofp.gif"),
+    new FactoryDescription(FPToInt.class, S.getter("fpToIntComponent")),
+    new FactoryDescription(IntToFP.class, S.getter("intToFPComponent")),
   };
 
   private List<Tool> tools = null;

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -345,9 +345,8 @@ private void computeTitle() {
       title = StringUtil.format(S.get("titleFileKnown"), name);
     }
 
-    final var dirtyNarker = project.isFileDirty() ? "*" : "";
-    this.setTitle(
-        StringUtil.format("%s %s · %s", dirtyNarker, title, Main.APP_DISPLAY_NAME).trim());
+    final var dirtyMarker = project.isFileDirty() ? "*" : "";
+    this.setTitle(StringUtil.format("%s %s · %s", dirtyMarker, title, Main.APP_DISPLAY_NAME).trim());
     myProjectListener.enableSave();
   }
 

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -78,7 +78,7 @@
 import java.util.ArrayList;
 import javax.swing.Icon;
 
-public class AddTool extends Tool implements Transferable,PropertyChangeListener {
+public class AddTool extends Tool implements Transferable, PropertyChangeListener {
   private class MyAttributeListener implements AttributeListener {
     public void attributeListChanged(AttributeEvent e) {
       bounds = null;
@@ -751,7 +751,7 @@ public boolean sharesSource(Tool other) {
 
   @Override
   public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {
-    if(!isDataFlavorSupported(flavor))
+    if (!isDataFlavorSupported(flavor))
       throw new UnsupportedFlavorException(flavor);
     return this;
   }

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -402,9 +402,9 @@ public void addCircuitUsing(Component comp, Circuit circ) {
   public void removeCircuitUsing(Component comp) {
     circuitsUsingThis.remove(comp);
   }
-  
+
   @Override
-  public void removeComponent(Circuit circ, Component c , CircuitState state) {
+  public void removeComponent(Circuit circ, Component c, CircuitState state) {
     removeCircuitUsing(c);
   }
 }

File: src/main/java/com/cburch/logisim/vhdl/gui/HdlContentEditor.java
Patch:
@@ -250,7 +250,7 @@ private void configure(Project proj, HdlModel model) {
     close.addActionListener(frameListener);
     validate.addActionListener(frameListener);
 
-    AbstractTokenMakerFactory atmf = (AbstractTokenMakerFactory)TokenMakerFactory.getDefaultInstance();
+    AbstractTokenMakerFactory atmf = (AbstractTokenMakerFactory) TokenMakerFactory.getDefaultInstance();
     atmf.putMapping("text/vhdl", "com.cburch.logisim.vhdl.syntax.VhdlSyntax");
     editor = new RSyntaxTextArea(ROWS, COLUMNS);
     editor.setSyntaxEditingStyle("text/vhdl");

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -114,8 +114,8 @@ public SortedMap<String, Integer> GetParameterMap(
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("DataA", true, ComponentInfo, 0, Nets));
     PortMap.putAll(GetNetMap("DataB", true, ComponentInfo, 1, Nets));
     PortMap.putAll(GetNetMap("Result", true, ComponentInfo, 2, Nets));

File: src/main/java/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -152,8 +152,8 @@ public SortedMap<String, Integer> GetParameterMap(Netlist Nets, NetlistComponent
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("DataA", true, ComponentInfo, 0, Nets));
     PortMap.putAll(GetNetMap("DataB", true, ComponentInfo, 1, Nets));
     PortMap.putAll(GetNetMap("A_GT_B", true, ComponentInfo, 2, Nets));

File: src/main/java/com/cburch/logisim/std/arith/Divider.java
Patch:
@@ -75,8 +75,8 @@ static Value[] computeResult(BitWidth width, Value a, Value b, Value upper, bool
       BigInteger den = bb.equals(BigInteger.ZERO) ? BigInteger.valueOf(1) : bb;
 
       BigInteger[] res = num.divideAndRemainder(den);
-  	  long mask = w == 64 ? 0 : (-1L) << w;
-  	  mask ^= 0xFFFFFFFFFFFFFFFFL;
+      long mask = w == 64 ? 0 : (-1L) << w;
+      mask ^= 0xFFFFFFFFFFFFFFFFL;
       long result = res[0].and(BigInteger.valueOf(mask)).longValue();
       long rem = res[1].and(BigInteger.valueOf(mask)).longValue();
       return new Value[] {Value.createKnown(width, result), Value.createKnown(width, rem)};

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -121,8 +121,8 @@ public SortedMap<String, Integer> GetParameterMap(Netlist Nets, NetlistComponent
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("INP_A", true, ComponentInfo, Divider.IN0, Nets));
     PortMap.putAll(GetNetMap("INP_B", true, ComponentInfo, Divider.IN1, Nets));
     PortMap.putAll(GetNetMap("Upper", true, ComponentInfo, Divider.UPPER, Nets));

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -189,7 +189,7 @@ public void propagate(InstanceState state) {
     Value vd = state.getPortValue(IN1);
     Value vy; // y will by x shifted by d
     if (vd.isFullyDefined() && vx.getWidth() == bits) {
-      int d = (int)vd.toLongValue();
+      int d = (int) vd.toLongValue();
       Object shift = state.getAttributeValue(ATTR_SHIFT);
       if (d == 0) {
         vy = vx;

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -266,10 +266,10 @@ public void propagate(InstanceState state) {
 
   @Override
   public void paintIcon(InstancePainter painter) {
-    Graphics2D g = (Graphics2D)painter.getGraphics();
+    Graphics2D g = (Graphics2D) painter.getGraphics();
     if (painter.getGateShape() == AppPreferences.SHAPE_RECTANGULAR)
-      AbstractGate.paintIconIEC(g, "1", false,true);
+      AbstractGate.paintIconIEC(g, "1", false, true);
     else
-      AbstractGate.paintIconBufferANSI(g, false,false);
+      AbstractGate.paintIconBufferANSI(g, false, false);
   }
 }

File: src/main/java/com/cburch/logisim/std/gates/GateAttributes.java
Patch:
@@ -111,7 +111,7 @@ public <V> V getValue(Attribute<V> attr) {
     if (attr == ATTR_XOR) return (V) xorBehave;
     if (attr instanceof NegateAttribute) {
       int index = ((NegateAttribute) attr).index;
-      int bit = (int)(negated >> index) & 1;
+      int bit = (int) (negated >> index) & 1;
       return (V) Boolean.valueOf(bit == 1);
     }
     return null;

File: src/main/java/com/cburch/logisim/std/gates/GateFunctions.java
Patch:
@@ -48,7 +48,8 @@ static Value computeExactlyOne(Value[] inputs, int numInputs) {
         Value v = inputs[j].get(i);
         if (v == Value.TRUE) {
           count++;
-        } else if (v == Value.FALSE) {// do nothing
+        } else if (v == Value.FALSE) {
+          // do nothing
         } else {
           count = -1;
           break;

File: src/main/java/com/cburch/logisim/std/gates/NandGate.java
Patch:
@@ -120,7 +120,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    AndGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    AndGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/NorGate.java
Patch:
@@ -118,7 +118,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    OrGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    OrGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/PainterDin.java
Patch:
@@ -46,7 +46,8 @@ private static void paint(
       width -= 8;
     }
     int diam = Math.min(height, 2 * width);
-    if (dinType == AND) {// nothing to do
+    if (dinType == AND) {
+      // nothing to do
     } else if (dinType == OR) {
       paintOrLines(painter, width, height, drawBubble);
     } else if (dinType == XOR || dinType == XNOR) {

File: src/main/java/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -103,7 +103,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    XorGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    XorGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -258,7 +258,6 @@ public void paintInstance(InstancePainter painter) {
     painter.drawPorts();
   }
 
-  @Override
   /**
    * Propagate signals through the VHDL component. Logisim doesn't have a VHDL simulation tool. So
    * we need to use an external tool. We send signals to Questasim/Modelsim through a socket and a
@@ -268,6 +267,7 @@ public void paintInstance(InstancePainter painter) {
    * <p>This can be done only if Logisim could connect to the tcl server (socket). This is done in
    * Simulation.java.
    */
+  @Override
   public void propagate(InstanceState state) {
 
     if (state.getProject().getVhdlSimulator().isEnabled()

File: src/main/java/com/cburch/logisim/std/io/Led.java
Patch:
@@ -107,7 +107,7 @@ public Led() {
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
           true,
-          new ComponentMapInformationContainer( 0, 1, 0 )
+          new ComponentMapInformationContainer(0, 1, 0)
         });
     setFacingAttribute(StdAttr.FACING);
     setIcon(new LEDIcon(false));

File: src/main/java/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -126,7 +126,7 @@ public RGBLed() {
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
           true,
-          new ComponentMapInformationContainer( 0, 3, 0, null, GetLabels(), null )
+          new ComponentMapInformationContainer(0, 3, 0, null, GetLabels(), null)
         });
     setFacingAttribute(StdAttr.FACING);
     setIcon(new LEDIcon(true));

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -198,7 +198,7 @@ Value val(CircuitState s, int pin) {
   }
 
   int addr(CircuitState s, int pin) {
-    return (int)val(s, pin).toLongValue();
+    return (int) val(s, pin).toLongValue();
   }
 
   public void propagate(CircuitState circuitState) {
@@ -246,7 +246,7 @@ static void drawVideoIcon(ComponentDrawContext context, int x, int y) {
     g.setColor(Color.WHITE);
     g.fillRoundRect(scale(2), scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
     g.setColor(Color.BLACK);
-    g.drawRoundRect(scale(2),scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
+    g.drawRoundRect(scale(2), scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
     int five = scale(5);
     int ten = scale(10);
     g.setColor(Color.RED);

File: src/main/java/com/cburch/logisim/std/io/extra/DiagramState.java
Patch:
@@ -91,7 +91,7 @@ public void hastomoveback(boolean b) {
   public void moveback() { // move back all old values
     if (Length >= 1)
       for (byte i = 0; i < Inputs; i++) {
-          System.arraycopy(diagram[i], 1, diagram[i], 0, Length - 1);
+        System.arraycopy(diagram[i], 1, diagram[i], 0, Length - 1);
       }
   }
 

File: src/main/java/com/cburch/logisim/std/io/extra/ITA_IO.java
Patch:
@@ -56,7 +56,7 @@ public class ITA_IO extends Library {
 
   private List<Tool> tools = null;
   private final Tool[] ADD_TOOLS = {
-//    new AddTool(ProgrammableGenerator.FACTORY), /* TODO: Broken component, fix */
+    // new AddTool(ProgrammableGenerator.FACTORY), /* TODO: Broken component, fix */
   };
 
   @Override

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRom.java
Patch:
@@ -273,7 +273,7 @@ public static PlaRomData getPlaRomData(InstanceState state) {
 
   public PlaRom() {
     super(_ID, S.getter("PlaRomComponent"));
-    setIcon(new ArithmeticIcon("PLA",3));
+    setIcon(new ArithmeticIcon("PLA", 3));
     setAttributes(
         new Attribute[] {
           ATTR_INPUTS,

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -258,8 +258,7 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
     if (facing == Direction.EAST) return Bounds.create(-width, -height / 2, width, height);
     else if (facing == Direction.WEST) return Bounds.create(0, -height / 2, width, height);
     else if (facing == Direction.NORTH) return Bounds.create(-width / 2, 0, width, height);
-    else // Direction SUD
-    return Bounds.create(-width / 2, -height, width, height);
+    else return Bounds.create(-width / 2, -height, width, height); // Direction SUD
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/DFlipFlop.java
Patch:
@@ -72,7 +72,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+"D;");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator() + "D;");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/JKFlipFlop.java
Patch:
@@ -74,9 +74,9 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+
-          "("+HDL.notOperator()+"(s_current_state_reg)"+HDL.andOperator()+"J)"+HDL.orOperator());
-      Contents.add("         (s_current_state_reg"+HDL.andOperator()+HDL.notOperator()+"(K));");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator()
+              + "(" + HDL.notOperator() + "(s_current_state_reg)" + HDL.andOperator() + "J)" + HDL.orOperator());
+      Contents.add("         (s_current_state_reg" + HDL.andOperator() + HDL.notOperator() + "(K));");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -88,7 +88,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
 
         /////
         // Contents.add("      ELSIF (Clock'event AND (Clock = std_logic_vector(to_unsigned("
-        //		+ ActiveLevelStr + ",1)) )) THEN");
+        //           + ActiveLevelStr + ",1)) )) THEN");
       } else {
         Contents.add("      ELSIF (" + ActiveLevelStr + " = 1) THEN");
         Contents.add("         IF (Clock = '1') THEN");
@@ -103,7 +103,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
         Contents.add("            END IF;");
         Contents.add("         END IF;");
         // Contents.add("      ELSIF (Clock = std_logic_vector(to_unsigned("
-        //		+ ActiveLevelStr + ",1)) ) THEN");
+        //            + ActiveLevelStr + ",1)) ) THEN");
       }
       // Contents.add("         IF (ClockEnable = '1' AND Tick = '1') THEN");
       // Contents.add("            s_state_reg <= D;");

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -136,8 +136,8 @@ public String GetSubDir() {
 
   @Override
   public boolean HDLTargetSupported(AttributeSet attrs) {
-	   if (attrs == null) return false;
-	   if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
+    if (attrs == null) return false;
+    if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
     return attrs.getValue(Mem.LINE_ATTR).equals(Mem.SINGLE);
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -74,8 +74,8 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+
-          "(s_current_state_reg"+HDL.orOperator()+"S)"+HDL.andOperator()+HDL.notOperator()+"(R);");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator()
+              + "(s_current_state_reg" + HDL.orOperator() + "S)" + HDL.andOperator() + HDL.notOperator() + "(R);");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -72,8 +72,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+"s_current_state_reg"+
-                   HDL.xorOperator()+"T;");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator() + "s_current_state_reg" + HDL.xorOperator() + "T;");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -74,7 +74,7 @@ public BitSelector() {
             new BitWidthConfigurator(GROUP_ATTR, 1, Value.MAX_WIDTH, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
 
-    setIcon(new PlexerIcon(false,true));
+    setIcon(new PlexerIcon(false, true));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -143,7 +143,7 @@ public void propagate(InstanceState state) {
     if (!select.isFullyDefined()) {
       group = Value.createUnknown(groupBits);
     } else {
-      int shift = (int)select.toLongValue() * groupBits.getWidth();
+      int shift = (int) select.toLongValue() * groupBits.getWidth();
       if (shift >= data.getWidth()) {
         group = Value.createKnown(groupBits, 0);
       } else if (groupBits.getWidth() == 1) {

File: src/main/java/com/cburch/logisim/std/plexers/Decoder.java
Patch:
@@ -80,7 +80,7 @@ public Decoder() {
           Boolean.TRUE
         });
     setKeyConfigurator(new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0));
-    setIcon(new PlexerIcon(true,false));
+    setIcon(new PlexerIcon(true, false));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -296,7 +296,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = (int)sel.toLongValue();
+        outIndex = (int) sel.toLongValue();
         out = Value.TRUE;
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Demultiplexer.java
Patch:
@@ -87,7 +87,7 @@ public Demultiplexer() {
             new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
     setFacingAttribute(StdAttr.FACING);
-    setIcon(new PlexerIcon(true,false));
+    setIcon(new PlexerIcon(true, false));
   }
 
   @Override
@@ -297,7 +297,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = (int)sel.toLongValue();
+        outIndex = (int) sel.toLongValue();
         out = state.getPortValue(outputs + (enable ? 2 : 1));
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -107,7 +107,7 @@ public Multiplexer() {
         JoinedConfigurator.create(
             new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
-    setIcon(new PlexerIcon(false,false));
+    setIcon(new PlexerIcon(false, false));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -301,7 +301,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(inputs);
       if (sel.isFullyDefined()) {
-        out = state.getPortValue((int)sel.toLongValue());
+        out = state.getPortValue((int) sel.toLongValue());
       } else if (sel.isErrorValue()) {
         out = Value.createError(data);
       } else {

File: src/main/java/com/cburch/logisim/std/ttl/TTL.java
Patch:
@@ -76,8 +76,8 @@ public class TTL extends Library {
       new FactoryDescription(Ttl7474.class, S.getter("TTL7474"), "ttl.gif"),
       new FactoryDescription(Ttl7485.class, S.getter("TTL7485"), "ttl.gif"),
       new FactoryDescription(Ttl7486.class, S.getter("TTL7486"), "ttl.gif"),
-      new FactoryDescription(Ttl74125.class, S.getter("TTL74125"),"ttl.gif"),
-      new FactoryDescription(Ttl74139.class, S.getter("TTL74139"),"ttl.gif"),
+      new FactoryDescription(Ttl74125.class, S.getter("TTL74125"), "ttl.gif"),
+      new FactoryDescription(Ttl74139.class, S.getter("TTL74139"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7402.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          HDL.notOperator()+"(gate_"+index+"_A"+HDL.orOperator()+"gate_"+index+"B);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + HDL.notOperator() + "(gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7404.java
Patch:
@@ -62,8 +62,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          HDL.notOperator()+"(gate_"+index+"_A);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + HDL.notOperator() + "(gate_" + index + "_A);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          "gate_"+index+"_A"+HDL.andOperator()+"gate_"+index+"B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.andOperator() + "gate_" + index + "B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410.java
Patch:
@@ -50,8 +50,8 @@ public class Ttl7410 extends AbstractTtlGate {
   private boolean inverted = true;
   private boolean isAND = true;
 
-  private final static byte pinCount = 14;
-  private final static byte[] outPorts = {6, 8, 12};
+  private static final byte pinCount = 14;
+  private static final byte[] outPorts = {6, 8, 12};
 
   public Ttl7410() {
     super(_ID, pinCount, outPorts);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410HDLGenerator.java
Patch:
@@ -86,9 +86,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     ArrayList<String> Contents = new ArrayList<>();
     String Inv = Inverted ? HDL.notOperator() : "";
     String Func = andgate ? HDL.andOperator() : HDL.orOperator();
-    Contents.add("   "+HDL.assignPreamble()+"Y0"+HDL.assignOperator()+ Inv + " (A0 " + Func + " B0 " + Func + " C0);");
-    Contents.add("   "+HDL.assignPreamble()+"Y1"+HDL.assignOperator()+ Inv + " (A1 " + Func + " B1 " + Func + " C1);");
-    Contents.add("   "+HDL.assignPreamble()+"Y2"+HDL.assignOperator()+ Inv + " (A2 " + Func + " B2 " + Func + " C2);");
+    Contents.add("   " + HDL.assignPreamble() + "Y0" + HDL.assignOperator() + Inv + " (A0 " + Func + " B0 " + Func + " C0);");
+    Contents.add("   " + HDL.assignPreamble() + "Y1" + HDL.assignOperator() + Inv + " (A1 " + Func + " B1 " + Func + " C1);");
+    Contents.add("   " + HDL.assignPreamble() + "Y2" + HDL.assignOperator() + Inv + " (A2 " + Func + " B2 " + Func + " C2);");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74139.java
Patch:
@@ -79,9 +79,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     // we need to shorten it first to up to 4 characters to keep the diagram readable.
     final int label_len_max = 4;
     ArrayList<String> names = new ArrayList<>();
-    for (String name: portnames) {
+    for (String name : portnames) {
       String[] tmp = name.split("\\s+");
-      names.add((tmp[0].length() <= label_len_max) ? tmp[0] : tmp[0].substring(0,label_len_max));
+      names.add((tmp[0].length() <= label_len_max) ? tmp[0] : tmp[0].substring(0, label_len_max));
     }
     super.paintBase(painter, true, false);
     Drawgates.paintPortNames(painter, x, y, height, names.toArray(new String[0]));
@@ -90,7 +90,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
   // Port consts are datasheet based (1-indexed), but in code we have them 0-indexed
   // with GND, VCC omitted (thus indices are shifted comparing to datasheet numbers).
   protected byte mapPort(byte dsIdx) {
-    return (byte)((dsIdx <= GND) ? dsIdx - 1 : dsIdx - 2);
+    return (byte) ((dsIdx <= GND) ? dsIdx - 1 : dsIdx - 2);
   }
 
   protected void computeState(InstanceState state, byte inEn, byte inA, byte inB, byte[] outPorts) {

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+HDL.notOperator()+
-          "(gate_"+index+"_A"+HDL.xorOperator()+"gate_"+index+"_B);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator() + HDL.notOperator()
+              + "(gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74273.java
Patch:
@@ -75,7 +75,7 @@ public Ttl74273() {
   }
 
   @Override
-  public boolean HDLSupportedComponent( AttributeSet attrs) {
+  public boolean HDLSupportedComponent(AttributeSet attrs) {
     if (MyHDLGenerator == null) MyHDLGenerator = new Ttl74273HDLGenerator();
     return MyHDLGenerator.HDLTargetSupported(attrs);
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7430HDLGenerator.java
Patch:
@@ -68,9 +68,9 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     ArrayList<String> Contents = new ArrayList<>();
-    Contents.add("   "+HDL.assignPreamble()+"Y1"+HDL.assignOperator()+HDL.notOperator()+"(A"
-        + HDL.andOperator()+"B"+HDL.andOperator()+"C"+HDL.andOperator()+"D"+HDL.andOperator()+"E"+
-        HDL.andOperator()+"F"+HDL.andOperator()+"G"+HDL.andOperator()+"H);");
+    Contents.add("   " + HDL.assignPreamble() + "Y1" + HDL.assignOperator() + HDL.notOperator() + "(A"
+            + HDL.andOperator() + "B" + HDL.andOperator() + "C" + HDL.andOperator() + "D" + HDL.andOperator() + "E"
+            + HDL.andOperator() + "F" + HDL.andOperator() + "G" + HDL.andOperator() + "H);");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          "gate_"+index+"_A"+HDL.orOperator()+"gate_"+index+"B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454HDLGenerator.java
Patch:
@@ -68,9 +68,9 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     ArrayList<String> Contents = new ArrayList<>();
-    Contents.add("   "+HDL.assignPreamble()+"Y"+HDL.assignOperator()+HDL.notOperator()+
-        "((A"+HDL.andOperator()+"B)"+HDL.orOperator()+"(C"+HDL.andOperator()+"D)"+HDL.orOperator()+
-        "(E"+HDL.andOperator()+"F)"+HDL.orOperator()+"(G"+HDL.andOperator()+"H));");
+    Contents.add("   " + HDL.assignPreamble() + "Y" + HDL.assignOperator() + HDL.notOperator()
+            + "((A" + HDL.andOperator() + "B)" + HDL.orOperator() + "(C" + HDL.andOperator() + "D)" + HDL.orOperator()
+            + "(E" + HDL.andOperator() + "F)" + HDL.orOperator() + "(G" + HDL.andOperator() + "H));");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+"gate_"+index+"_A"+
-                   HDL.xorOperator()+"gate_"+index+"_B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -155,7 +155,7 @@ public static boolean tick(CircuitState circState, int ticks, Component comp) {
     ClockState state = (ClockState) circState.getData(comp);
     boolean dirty = false;
     if (state == null) {
-      state = new ClockState(ticks,attrs);
+      state = new ClockState(ticks, attrs);
       circState.setData(comp, state);
       dirty = true;
     } else {

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -122,7 +122,7 @@ public void computeExpression(ExpressionComputer.Map expressionMap) {
       int width = attrs.getValue(StdAttr.WIDTH).getWidth();
       Value v = Value.createKnown(BitWidth.create(width), attrs.getValue(ATTR_VALUE));
       for (int b = 0; b < width; b++) {
-        expressionMap.put(instance.getLocation(), b, Expressions.constant((int)v.get(b).toLongValue()));
+        expressionMap.put(instance.getLocation(), b, Expressions.constant((int) v.get(b).toLongValue()));
       }
     }
   }
@@ -225,8 +225,7 @@ public void paintIcon(InstancePainter painter) {
     int piny = 9;
     Direction dir = painter.getAttributeValue(StdAttr.FACING);
     if (dir == Direction.EAST) {
-    } // keep defaults
-    else if (dir == Direction.WEST) {
+    } else if (dir == Direction.WEST) {
       pinx = 4;
     } else if (dir == Direction.NORTH) {
       pinx = 9;

File: src/main/java/com/cburch/logisim/std/wiring/Wiring.java
Patch:
@@ -76,9 +76,9 @@ public class Wiring extends Library {
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(Power.class, S.getter("powerComponent"), "power.gif"),
     new FactoryDescription(Ground.class, S.getter("groundComponent"), "ground.gif"),
-    new FactoryDescription(DoNotConnect.class, S.getter("noConnectionComponent"),"noconnect.gif"),
+    new FactoryDescription(DoNotConnect.class, S.getter("noConnectionComponent"), "noconnect.gif"),
     new FactoryDescription(Transistor.class, S.getter("transistorComponent"), "trans0.gif"),
-    new FactoryDescription(TransmissionGate.class, S.getter("transmissionGateComponent"),"transmis.gif"),
+    new FactoryDescription(TransmissionGate.class, S.getter("transmissionGateComponent"), "transmis.gif"),
     new FactoryDescription(BitExtender.class, S.getter("extenderComponent"), "extender.gif"),
   };
 

File: src/main/java/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -114,8 +114,8 @@ public SortedMap<String, Integer> GetParameterMap(
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("DataA", true, ComponentInfo, 0, Nets));
     PortMap.putAll(GetNetMap("DataB", true, ComponentInfo, 1, Nets));
     PortMap.putAll(GetNetMap("Result", true, ComponentInfo, 2, Nets));

File: src/main/java/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -152,8 +152,8 @@ public SortedMap<String, Integer> GetParameterMap(Netlist Nets, NetlistComponent
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("DataA", true, ComponentInfo, 0, Nets));
     PortMap.putAll(GetNetMap("DataB", true, ComponentInfo, 1, Nets));
     PortMap.putAll(GetNetMap("A_GT_B", true, ComponentInfo, 2, Nets));

File: src/main/java/com/cburch/logisim/std/arith/Divider.java
Patch:
@@ -75,8 +75,8 @@ static Value[] computeResult(BitWidth width, Value a, Value b, Value upper, bool
       BigInteger den = bb.equals(BigInteger.ZERO) ? BigInteger.valueOf(1) : bb;
 
       BigInteger[] res = num.divideAndRemainder(den);
-  	  long mask = w == 64 ? 0 : (-1L) << w;
-  	  mask ^= 0xFFFFFFFFFFFFFFFFL;
+      long mask = w == 64 ? 0 : (-1L) << w;
+      mask ^= 0xFFFFFFFFFFFFFFFFL;
       long result = res[0].and(BigInteger.valueOf(mask)).longValue();
       long rem = res[1].and(BigInteger.valueOf(mask)).longValue();
       return new Value[] {Value.createKnown(width, result), Value.createKnown(width, rem)};

File: src/main/java/com/cburch/logisim/std/arith/DividerHDLGeneratorFactory.java
Patch:
@@ -121,8 +121,8 @@ public SortedMap<String, Integer> GetParameterMap(Netlist Nets, NetlistComponent
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("INP_A", true, ComponentInfo, Divider.IN0, Nets));
     PortMap.putAll(GetNetMap("INP_B", true, ComponentInfo, Divider.IN1, Nets));
     PortMap.putAll(GetNetMap("Upper", true, ComponentInfo, Divider.UPPER, Nets));

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -189,7 +189,7 @@ public void propagate(InstanceState state) {
     Value vd = state.getPortValue(IN1);
     Value vy; // y will by x shifted by d
     if (vd.isFullyDefined() && vx.getWidth() == bits) {
-      int d = (int)vd.toLongValue();
+      int d = (int) vd.toLongValue();
       Object shift = state.getAttributeValue(ATTR_SHIFT);
       if (d == 0) {
         vy = vx;

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -266,10 +266,10 @@ public void propagate(InstanceState state) {
 
   @Override
   public void paintIcon(InstancePainter painter) {
-    Graphics2D g = (Graphics2D)painter.getGraphics();
+    Graphics2D g = (Graphics2D) painter.getGraphics();
     if (painter.getGateShape() == AppPreferences.SHAPE_RECTANGULAR)
-      AbstractGate.paintIconIEC(g, "1", false,true);
+      AbstractGate.paintIconIEC(g, "1", false, true);
     else
-      AbstractGate.paintIconBufferANSI(g, false,false);
+      AbstractGate.paintIconBufferANSI(g, false, false);
   }
 }

File: src/main/java/com/cburch/logisim/std/gates/GateAttributes.java
Patch:
@@ -111,7 +111,7 @@ public <V> V getValue(Attribute<V> attr) {
     if (attr == ATTR_XOR) return (V) xorBehave;
     if (attr instanceof NegateAttribute) {
       int index = ((NegateAttribute) attr).index;
-      int bit = (int)(negated >> index) & 1;
+      int bit = (int) (negated >> index) & 1;
       return (V) Boolean.valueOf(bit == 1);
     }
     return null;

File: src/main/java/com/cburch/logisim/std/gates/GateFunctions.java
Patch:
@@ -48,7 +48,8 @@ static Value computeExactlyOne(Value[] inputs, int numInputs) {
         Value v = inputs[j].get(i);
         if (v == Value.TRUE) {
           count++;
-        } else if (v == Value.FALSE) {// do nothing
+        } else if (v == Value.FALSE) {
+          // do nothing
         } else {
           count = -1;
           break;

File: src/main/java/com/cburch/logisim/std/gates/NandGate.java
Patch:
@@ -120,7 +120,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    AndGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    AndGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/NorGate.java
Patch:
@@ -118,7 +118,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    OrGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    OrGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/gates/PainterDin.java
Patch:
@@ -46,7 +46,8 @@ private static void paint(
       width -= 8;
     }
     int diam = Math.min(height, 2 * width);
-    if (dinType == AND) {// nothing to do
+    if (dinType == AND) {
+      // nothing to do
     } else if (dinType == OR) {
       paintOrLines(painter, width, height, drawBubble);
     } else if (dinType == XOR || dinType == XNOR) {

File: src/main/java/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -103,7 +103,7 @@ protected void paintDinShape(InstancePainter painter, int width, int height, int
 
   @Override
   public void paintIconANSI(Graphics2D g, int iconSize, int borderSize, int negateSize) {
-    XorGate.paintIconANSI(g, iconSize, borderSize, negateSize,true);
+    XorGate.paintIconANSI(g, iconSize, borderSize, negateSize, true);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -258,7 +258,6 @@ public void paintInstance(InstancePainter painter) {
     painter.drawPorts();
   }
 
-  @Override
   /**
    * Propagate signals through the VHDL component. Logisim doesn't have a VHDL simulation tool. So
    * we need to use an external tool. We send signals to Questasim/Modelsim through a socket and a
@@ -268,6 +267,7 @@ public void paintInstance(InstancePainter painter) {
    * <p>This can be done only if Logisim could connect to the tcl server (socket). This is done in
    * Simulation.java.
    */
+  @Override
   public void propagate(InstanceState state) {
 
     if (state.getProject().getVhdlSimulator().isEnabled()

File: src/main/java/com/cburch/logisim/std/io/Led.java
Patch:
@@ -107,7 +107,7 @@ public Led() {
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
           true,
-          new ComponentMapInformationContainer( 0, 1, 0 )
+          new ComponentMapInformationContainer(0, 1, 0)
         });
     setFacingAttribute(StdAttr.FACING);
     setIcon(new LEDIcon(false));

File: src/main/java/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -126,7 +126,7 @@ public RGBLed() {
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
           true,
-          new ComponentMapInformationContainer( 0, 3, 0, null, GetLabels(), null )
+          new ComponentMapInformationContainer(0, 3, 0, null, GetLabels(), null)
         });
     setFacingAttribute(StdAttr.FACING);
     setIcon(new LEDIcon(true));

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -198,7 +198,7 @@ Value val(CircuitState s, int pin) {
   }
 
   int addr(CircuitState s, int pin) {
-    return (int)val(s, pin).toLongValue();
+    return (int) val(s, pin).toLongValue();
   }
 
   public void propagate(CircuitState circuitState) {
@@ -246,7 +246,7 @@ static void drawVideoIcon(ComponentDrawContext context, int x, int y) {
     g.setColor(Color.WHITE);
     g.fillRoundRect(scale(2), scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
     g.setColor(Color.BLACK);
-    g.drawRoundRect(scale(2),scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
+    g.drawRoundRect(scale(2), scale(2), scale(16 - 1), scale(16 - 1), scale(3), scale(3));
     int five = scale(5);
     int ten = scale(10);
     g.setColor(Color.RED);

File: src/main/java/com/cburch/logisim/std/io/extra/DiagramState.java
Patch:
@@ -91,7 +91,7 @@ public void hastomoveback(boolean b) {
   public void moveback() { // move back all old values
     if (Length >= 1)
       for (byte i = 0; i < Inputs; i++) {
-          System.arraycopy(diagram[i], 1, diagram[i], 0, Length - 1);
+        System.arraycopy(diagram[i], 1, diagram[i], 0, Length - 1);
       }
   }
 

File: src/main/java/com/cburch/logisim/std/io/extra/ITA_IO.java
Patch:
@@ -56,7 +56,7 @@ public class ITA_IO extends Library {
 
   private List<Tool> tools = null;
   private final Tool[] ADD_TOOLS = {
-//    new AddTool(ProgrammableGenerator.FACTORY), /* TODO: Broken component, fix */
+    // new AddTool(ProgrammableGenerator.FACTORY), /* TODO: Broken component, fix */
   };
 
   @Override

File: src/main/java/com/cburch/logisim/std/io/extra/PlaRom.java
Patch:
@@ -273,7 +273,7 @@ public static PlaRomData getPlaRomData(InstanceState state) {
 
   public PlaRom() {
     super(_ID, S.getter("PlaRomComponent"));
-    setIcon(new ArithmeticIcon("PLA",3));
+    setIcon(new ArithmeticIcon("PLA", 3));
     setAttributes(
         new Attribute[] {
           ATTR_INPUTS,

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -258,8 +258,7 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
     if (facing == Direction.EAST) return Bounds.create(-width, -height / 2, width, height);
     else if (facing == Direction.WEST) return Bounds.create(0, -height / 2, width, height);
     else if (facing == Direction.NORTH) return Bounds.create(-width / 2, 0, width, height);
-    else // Direction SUD
-    return Bounds.create(-width / 2, -height, width, height);
+    else return Bounds.create(-width / 2, -height, width, height); // Direction SUD
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/DFlipFlop.java
Patch:
@@ -72,7 +72,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+"D;");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator() + "D;");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/JKFlipFlop.java
Patch:
@@ -74,9 +74,9 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+
-          "("+HDL.notOperator()+"(s_current_state_reg)"+HDL.andOperator()+"J)"+HDL.orOperator());
-      Contents.add("         (s_current_state_reg"+HDL.andOperator()+HDL.notOperator()+"(K));");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator()
+              + "(" + HDL.notOperator() + "(s_current_state_reg)" + HDL.andOperator() + "J)" + HDL.orOperator());
+      Contents.add("         (s_current_state_reg" + HDL.andOperator() + HDL.notOperator() + "(K));");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -88,7 +88,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
 
         /////
         // Contents.add("      ELSIF (Clock'event AND (Clock = std_logic_vector(to_unsigned("
-        //		+ ActiveLevelStr + ",1)) )) THEN");
+        //           + ActiveLevelStr + ",1)) )) THEN");
       } else {
         Contents.add("      ELSIF (" + ActiveLevelStr + " = 1) THEN");
         Contents.add("         IF (Clock = '1') THEN");
@@ -103,7 +103,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
         Contents.add("            END IF;");
         Contents.add("         END IF;");
         // Contents.add("      ELSIF (Clock = std_logic_vector(to_unsigned("
-        //		+ ActiveLevelStr + ",1)) ) THEN");
+        //            + ActiveLevelStr + ",1)) ) THEN");
       }
       // Contents.add("         IF (ClockEnable = '1' AND Tick = '1') THEN");
       // Contents.add("            s_state_reg <= D;");

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -136,8 +136,8 @@ public String GetSubDir() {
 
   @Override
   public boolean HDLTargetSupported(AttributeSet attrs) {
-	   if (attrs == null) return false;
-	   if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
+    if (attrs == null) return false;
+    if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
     return attrs.getValue(Mem.LINE_ATTR).equals(Mem.SINGLE);
   }
 }

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -74,8 +74,8 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+
-          "(s_current_state_reg"+HDL.orOperator()+"S)"+HDL.andOperator()+HDL.notOperator()+"(R);");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator()
+              + "(s_current_state_reg" + HDL.orOperator() + "S)" + HDL.andOperator() + HDL.notOperator() + "(R);");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -72,8 +72,7 @@ public Map<String, Integer> GetInputPorts() {
     @Override
     public ArrayList<String> GetUpdateLogic() {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"s_next_state"+HDL.assignOperator()+"s_current_state_reg"+
-                   HDL.xorOperator()+"T;");
+      Contents.add("   " + HDL.assignPreamble() + "s_next_state" + HDL.assignOperator() + "s_current_state_reg" + HDL.xorOperator() + "T;");
       return Contents;
     }
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -74,7 +74,7 @@ public BitSelector() {
             new BitWidthConfigurator(GROUP_ATTR, 1, Value.MAX_WIDTH, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
 
-    setIcon(new PlexerIcon(false,true));
+    setIcon(new PlexerIcon(false, true));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -143,7 +143,7 @@ public void propagate(InstanceState state) {
     if (!select.isFullyDefined()) {
       group = Value.createUnknown(groupBits);
     } else {
-      int shift = (int)select.toLongValue() * groupBits.getWidth();
+      int shift = (int) select.toLongValue() * groupBits.getWidth();
       if (shift >= data.getWidth()) {
         group = Value.createKnown(groupBits, 0);
       } else if (groupBits.getWidth() == 1) {

File: src/main/java/com/cburch/logisim/std/plexers/Decoder.java
Patch:
@@ -80,7 +80,7 @@ public Decoder() {
           Boolean.TRUE
         });
     setKeyConfigurator(new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0));
-    setIcon(new PlexerIcon(true,false));
+    setIcon(new PlexerIcon(true, false));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -296,7 +296,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = (int)sel.toLongValue();
+        outIndex = (int) sel.toLongValue();
         out = Value.TRUE;
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Demultiplexer.java
Patch:
@@ -87,7 +87,7 @@ public Demultiplexer() {
             new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
     setFacingAttribute(StdAttr.FACING);
-    setIcon(new PlexerIcon(true,false));
+    setIcon(new PlexerIcon(true, false));
   }
 
   @Override
@@ -297,7 +297,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = (int)sel.toLongValue();
+        outIndex = (int) sel.toLongValue();
         out = state.getPortValue(outputs + (enable ? 2 : 1));
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -107,7 +107,7 @@ public Multiplexer() {
         JoinedConfigurator.create(
             new BitWidthConfigurator(Plexers.ATTR_SELECT, 1, 5, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
-    setIcon(new PlexerIcon(false,false));
+    setIcon(new PlexerIcon(false, false));
     setFacingAttribute(StdAttr.FACING);
   }
 
@@ -301,7 +301,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(inputs);
       if (sel.isFullyDefined()) {
-        out = state.getPortValue((int)sel.toLongValue());
+        out = state.getPortValue((int) sel.toLongValue());
       } else if (sel.isErrorValue()) {
         out = Value.createError(data);
       } else {

File: src/main/java/com/cburch/logisim/std/ttl/TTL.java
Patch:
@@ -76,8 +76,8 @@ public class TTL extends Library {
       new FactoryDescription(Ttl7474.class, S.getter("TTL7474"), "ttl.gif"),
       new FactoryDescription(Ttl7485.class, S.getter("TTL7485"), "ttl.gif"),
       new FactoryDescription(Ttl7486.class, S.getter("TTL7486"), "ttl.gif"),
-      new FactoryDescription(Ttl74125.class, S.getter("TTL74125"),"ttl.gif"),
-      new FactoryDescription(Ttl74139.class, S.getter("TTL74139"),"ttl.gif"),
+      new FactoryDescription(Ttl74125.class, S.getter("TTL74125"), "ttl.gif"),
+      new FactoryDescription(Ttl74139.class, S.getter("TTL74139"), "ttl.gif"),
       new FactoryDescription(Ttl74175.class, S.getter("TTL74175"), "ttl.gif"),
       new FactoryDescription(Ttl74161.class, S.getter("TTL74161"), "ttl.gif"),
       new FactoryDescription(Ttl74165.class, S.getter("TTL74165"), "ttl.gif"),

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7402.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          HDL.notOperator()+"(gate_"+index+"_A"+HDL.orOperator()+"gate_"+index+"B);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + HDL.notOperator() + "(gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7404.java
Patch:
@@ -62,8 +62,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          HDL.notOperator()+"(gate_"+index+"_A);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + HDL.notOperator() + "(gate_" + index + "_A);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          "gate_"+index+"_A"+HDL.andOperator()+"gate_"+index+"B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.andOperator() + "gate_" + index + "B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410.java
Patch:
@@ -50,8 +50,8 @@ public class Ttl7410 extends AbstractTtlGate {
   private boolean inverted = true;
   private boolean isAND = true;
 
-  private final static byte pinCount = 14;
-  private final static byte[] outPorts = {6, 8, 12};
+  private static final byte pinCount = 14;
+  private static final byte[] outPorts = {6, 8, 12};
 
   public Ttl7410() {
     super(_ID, pinCount, outPorts);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410HDLGenerator.java
Patch:
@@ -86,9 +86,9 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     ArrayList<String> Contents = new ArrayList<>();
     String Inv = Inverted ? HDL.notOperator() : "";
     String Func = andgate ? HDL.andOperator() : HDL.orOperator();
-    Contents.add("   "+HDL.assignPreamble()+"Y0"+HDL.assignOperator()+ Inv + " (A0 " + Func + " B0 " + Func + " C0);");
-    Contents.add("   "+HDL.assignPreamble()+"Y1"+HDL.assignOperator()+ Inv + " (A1 " + Func + " B1 " + Func + " C1);");
-    Contents.add("   "+HDL.assignPreamble()+"Y2"+HDL.assignOperator()+ Inv + " (A2 " + Func + " B2 " + Func + " C2);");
+    Contents.add("   " + HDL.assignPreamble() + "Y0" + HDL.assignOperator() + Inv + " (A0 " + Func + " B0 " + Func + " C0);");
+    Contents.add("   " + HDL.assignPreamble() + "Y1" + HDL.assignOperator() + Inv + " (A1 " + Func + " B1 " + Func + " C1);");
+    Contents.add("   " + HDL.assignPreamble() + "Y2" + HDL.assignOperator() + Inv + " (A2 " + Func + " B2 " + Func + " C2);");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74139.java
Patch:
@@ -79,9 +79,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     // we need to shorten it first to up to 4 characters to keep the diagram readable.
     final int label_len_max = 4;
     ArrayList<String> names = new ArrayList<>();
-    for (String name: portnames) {
+    for (String name : portnames) {
       String[] tmp = name.split("\\s+");
-      names.add((tmp[0].length() <= label_len_max) ? tmp[0] : tmp[0].substring(0,label_len_max));
+      names.add((tmp[0].length() <= label_len_max) ? tmp[0] : tmp[0].substring(0, label_len_max));
     }
     super.paintBase(painter, true, false);
     Drawgates.paintPortNames(painter, x, y, height, names.toArray(new String[0]));
@@ -90,7 +90,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
   // Port consts are datasheet based (1-indexed), but in code we have them 0-indexed
   // with GND, VCC omitted (thus indices are shifted comparing to datasheet numbers).
   protected byte mapPort(byte dsIdx) {
-    return (byte)((dsIdx <= GND) ? dsIdx - 1 : dsIdx - 2);
+    return (byte) ((dsIdx <= GND) ? dsIdx - 1 : dsIdx - 2);
   }
 
   protected void computeState(InstanceState state, byte inEn, byte inA, byte inB, byte[] outPorts) {

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+HDL.notOperator()+
-          "(gate_"+index+"_A"+HDL.xorOperator()+"gate_"+index+"_B);");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator() + HDL.notOperator()
+              + "(gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B);");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74273.java
Patch:
@@ -75,7 +75,7 @@ public Ttl74273() {
   }
 
   @Override
-  public boolean HDLSupportedComponent( AttributeSet attrs) {
+  public boolean HDLSupportedComponent(AttributeSet attrs) {
     if (MyHDLGenerator == null) MyHDLGenerator = new Ttl74273HDLGenerator();
     return MyHDLGenerator.HDLTargetSupported(attrs);
   }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7430HDLGenerator.java
Patch:
@@ -68,9 +68,9 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     ArrayList<String> Contents = new ArrayList<>();
-    Contents.add("   "+HDL.assignPreamble()+"Y1"+HDL.assignOperator()+HDL.notOperator()+"(A"
-        + HDL.andOperator()+"B"+HDL.andOperator()+"C"+HDL.andOperator()+"D"+HDL.andOperator()+"E"+
-        HDL.andOperator()+"F"+HDL.andOperator()+"G"+HDL.andOperator()+"H);");
+    Contents.add("   " + HDL.assignPreamble() + "Y1" + HDL.assignOperator() + HDL.notOperator() + "(A"
+            + HDL.andOperator() + "B" + HDL.andOperator() + "C" + HDL.andOperator() + "D" + HDL.andOperator() + "E"
+            + HDL.andOperator() + "F" + HDL.andOperator() + "G" + HDL.andOperator() + "H);");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+
-          "gate_"+index+"_A"+HDL.orOperator()+"gate_"+index+"B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.orOperator() + "gate_" + index + "B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454HDLGenerator.java
Patch:
@@ -68,9 +68,9 @@ public SortedMap<String, Integer> GetOutputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet attrs) {
     ArrayList<String> Contents = new ArrayList<>();
-    Contents.add("   "+HDL.assignPreamble()+"Y"+HDL.assignOperator()+HDL.notOperator()+
-        "((A"+HDL.andOperator()+"B)"+HDL.orOperator()+"(C"+HDL.andOperator()+"D)"+HDL.orOperator()+
-        "(E"+HDL.andOperator()+"F)"+HDL.orOperator()+"(G"+HDL.andOperator()+"H));");
+    Contents.add("   " + HDL.assignPreamble() + "Y" + HDL.assignOperator() + HDL.notOperator()
+            + "((A" + HDL.andOperator() + "B)" + HDL.orOperator() + "(C" + HDL.andOperator() + "D)" + HDL.orOperator()
+            + "(E" + HDL.andOperator() + "F)" + HDL.orOperator() + "(G" + HDL.andOperator() + "H));");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -54,8 +54,8 @@ public String getComponentStringIdentifier() {
     @Override
     public ArrayList<String> GetLogicFunction(int index) {
       ArrayList<String> Contents = new ArrayList<>();
-      Contents.add("   "+HDL.assignPreamble()+"gate_"+index+"_O"+HDL.assignOperator()+"gate_"+index+"_A"+
-                   HDL.xorOperator()+"gate_"+index+"_B;");
+      Contents.add("   " + HDL.assignPreamble() + "gate_" + index + "_O" + HDL.assignOperator()
+              + "gate_" + index + "_A" + HDL.xorOperator() + "gate_" + index + "_B;");
       Contents.add("");
       return Contents;
     }

File: src/main/java/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -155,7 +155,7 @@ public static boolean tick(CircuitState circState, int ticks, Component comp) {
     ClockState state = (ClockState) circState.getData(comp);
     boolean dirty = false;
     if (state == null) {
-      state = new ClockState(ticks,attrs);
+      state = new ClockState(ticks, attrs);
       circState.setData(comp, state);
       dirty = true;
     } else {

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -122,7 +122,7 @@ public void computeExpression(ExpressionComputer.Map expressionMap) {
       int width = attrs.getValue(StdAttr.WIDTH).getWidth();
       Value v = Value.createKnown(BitWidth.create(width), attrs.getValue(ATTR_VALUE));
       for (int b = 0; b < width; b++) {
-        expressionMap.put(instance.getLocation(), b, Expressions.constant((int)v.get(b).toLongValue()));
+        expressionMap.put(instance.getLocation(), b, Expressions.constant((int) v.get(b).toLongValue()));
       }
     }
   }
@@ -225,8 +225,7 @@ public void paintIcon(InstancePainter painter) {
     int piny = 9;
     Direction dir = painter.getAttributeValue(StdAttr.FACING);
     if (dir == Direction.EAST) {
-    } // keep defaults
-    else if (dir == Direction.WEST) {
+    } else if (dir == Direction.WEST) {
       pinx = 4;
     } else if (dir == Direction.NORTH) {
       pinx = 9;

File: src/main/java/com/cburch/logisim/std/wiring/Wiring.java
Patch:
@@ -76,9 +76,9 @@ public class Wiring extends Library {
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(Power.class, S.getter("powerComponent"), "power.gif"),
     new FactoryDescription(Ground.class, S.getter("groundComponent"), "ground.gif"),
-    new FactoryDescription(DoNotConnect.class, S.getter("noConnectionComponent"),"noconnect.gif"),
+    new FactoryDescription(DoNotConnect.class, S.getter("noConnectionComponent"), "noconnect.gif"),
     new FactoryDescription(Transistor.class, S.getter("transistorComponent"), "trans0.gif"),
-    new FactoryDescription(TransmissionGate.class, S.getter("transmissionGateComponent"),"transmis.gif"),
+    new FactoryDescription(TransmissionGate.class, S.getter("transmissionGateComponent"), "transmis.gif"),
     new FactoryDescription(BitExtender.class, S.getter("extenderComponent"), "extender.gif"),
   };
 

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -362,8 +362,8 @@ private static void propagateComponents(
         } catch (UnsupportedOperationException e) {
           throw new AnalyzeException.CannotHandle(comp.getFactory().getDisplayName());
         }
-      } else if (comp.getFactory() instanceof Pin) {// pins are handled elsewhere
-      } else if (comp.getFactory() instanceof SplitterFactory) {// splitters are handled elsewhere
+      } else if (comp.getFactory() instanceof Pin) { // pins are handled elsewhere
+      } else if (comp.getFactory() instanceof SplitterFactory) { // splitters are handled elsewhere
       } else {
         throw new AnalyzeException.CannotHandle(comp.getFactory().getDisplayName());
       }
@@ -428,7 +428,7 @@ private static String toValidLabel(String label) {
         afterWhitespace = false;
       } else if (Character.isWhitespace(c)) {
         afterWhitespace = true;
-      } else {// just ignore any other characters
+      } else { // just ignore any other characters
       }
     }
     if (end != null && ret.length() > 0) ret.append(end);

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -62,7 +62,7 @@ static Map<Circuit, Lock> acquireLocks(CircuitTransaction xn, CircuitMutatorImpl
           circuitLocks.put(circ, lock);
         } else if (access == CircuitTransaction.READ_WRITE) {
           Thread curThread = Thread.currentThread();
-          if (locker.mutatingThread == curThread) {// nothing to do - thread already has lock
+          if (locker.mutatingThread == curThread) { // nothing to do - thread already has lock
           } else {
             Lock lock = locker.circuitLock.writeLock();
             lock.lock();

File: src/main/java/com/cburch/logisim/circuit/ComponentDataGuiProvider.java
Patch:
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit;
 
 public interface ComponentDataGuiProvider {
-   void destroy();
+  void destroy();
 }

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -138,8 +138,8 @@ else if (stateMap.containsKey(e.state))
   }
 
   String getSingleStepMessage() {
-    String n = data.isEmpty() ? "no" : ""+data.size();
-    String m = pendingInputs.isEmpty() ? "no" : ""+pendingInputs.size();
+    String n = data.isEmpty() ? "no" : "" + data.size();
+    String m = pendingInputs.isEmpty() ? "no" : "" + pendingInputs.size();
     return S.fmt("singleStepMessage", n, m);
   }
 }

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -198,7 +198,7 @@ public void reset() {
   public String toString() {
     final ByteArrayOutputStream out = new ByteArrayOutputStream();
     try (PrintStream p = new PrintStream(out, true, StandardCharsets.UTF_8)) {
-        print(p);
+      print(p);
     } catch (Exception ignored) {
     }
     return out.toString(StandardCharsets.UTF_8);

File: src/main/java/com/cburch/logisim/circuit/WireUtil.java
Patch:
@@ -28,8 +28,6 @@
 
 package com.cburch.logisim.circuit;
 
-
-
 public class WireUtil {
   /*
   static CircuitPoints computeCircuitPoints(

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementProvider.java
Patch:
@@ -37,9 +37,9 @@
 public interface DynamicElementProvider {
 
   DynamicElement createDynamicElement(int x, int y, DynamicElement.Path path);
-  
-  static void removeDynamicElements(Circuit circuit, Component c){
-	if (!(c instanceof InstanceComponent)) return;
+
+  static void removeDynamicElements(Circuit circuit, Component c) {
+    if (!(c instanceof InstanceComponent)) return;
     HashSet<Circuit> allAffected = new HashSet<>();
     LinkedList<Circuit> todo = new LinkedList<>();
     todo.add(circuit);

File: src/main/java/com/cburch/logisim/comp/AbstractComponentFactory.java
Patch:
@@ -66,8 +66,8 @@ public boolean ActiveOnHigh(AttributeSet attrs) {
   public AttributeSet createAttributeSet() {
     return AttributeSets.EMPTY;
   }
-  
-  public void removeComponent(Circuit circ, Component c , CircuitState state) {}
+
+  public void removeComponent(Circuit circ, Component c, CircuitState state) {}
 
   public abstract Component createComponent(Location loc, AttributeSet attrs);
 
@@ -161,7 +161,7 @@ public void paintIcon(ComponentDrawContext context, int x, int y, AttributeSet a
   public boolean RequiresGlobalClock() {
     return false;
   }
-  
+
   public boolean isSocComponent() {
     return false;
   }

File: src/main/java/com/cburch/logisim/data/TestVector.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.data;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;
@@ -39,6 +36,9 @@
 import java.util.StringTokenizer;
 import javax.swing.filechooser.FileFilter;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class TestVector {
 
   private static class TestVectorFilter extends FileFilter {

File: src/main/java/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -292,7 +292,8 @@ public void doIt(Project proj) {
         }
       }
       LogiLibs.clear();
-      /*this we are going to do in two steps, first add the circuits with inputs, outputs and wires */
+      // this we are going to do in two steps, first add the circuits with inputs,
+      // outputs and wires
       for (Circuit circ : MergedCircuits) {
         Circuit NewCirc = null;
         boolean replace = false;

File: src/main/java/com/cburch/logisim/file/Options.java
Patch:
@@ -54,7 +54,9 @@ public class Options {
 
   public static final Integer sim_rand_dflt = 32;
 
-  private static final Attribute<?>[] ATTRIBUTES = {ATTR_GATE_UNDEFINED, ATTR_SIM_LIMIT, ATTR_SIM_RAND};
+  private static final Attribute<?>[] ATTRIBUTES = {
+    ATTR_GATE_UNDEFINED, ATTR_SIM_LIMIT, ATTR_SIM_RAND
+  };
   private static final Object[] DEFAULTS = {GATE_UNDEFINED_IGNORE, 1000, 0};
 
   private final AttributeSet attrs;

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -38,7 +38,7 @@
  */
 public class ReaderInputStream extends InputStream {
 
-  /** Source Reader */
+  /** Source Reader. */
   private Reader in;
 
   private String encoding = System.getProperty("file.encoding");
@@ -120,7 +120,8 @@ public synchronized void mark(final int limit) {
     }
   }
 
-  /** @return false - mark is not supported */
+  /**
+   *  @return false - mark is not supported */
   @Override
   public boolean markSupported() {
     return false; // would be imprecise

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -203,7 +203,7 @@ static void write(LogisimFile file, OutputStream out, LibraryLoader loader, File
   private final LogisimFile file;
   private final Document doc;
   /**
-   * Path of the file which is being written on disk -- used to relativize components stored in it
+   * Path of the file which is being written on disk -- used to relativize components stored in it.
    */
   private final String outFilepath;
 
@@ -297,7 +297,7 @@ Element fromCircuit(Circuit circuit) {
       if (elt != null) ret.appendChild(elt);
     }
     for (String board : circuit.getBoardMapNamestoSave()) {
-      Element elt = fromMap(circuit,board);
+      Element elt = fromMap(circuit, board);
       if (elt != null) ret.appendChild(elt);
     }
     return ret;

File: src/main/java/com/cburch/logisim/fpga/data/BoardManipulatorListener.java
Patch:
@@ -30,6 +30,7 @@
 
 public interface BoardManipulatorListener {
 
-   void boardNameChanged(String newBoardName);
-   void componentsChanged(IOComponentsInformation IOcomps);
+  void boardNameChanged(String newBoardName);
+
+  void componentsChanged(IOComponentsInformation IOcomps);
 }

File: src/main/java/com/cburch/logisim/fpga/data/DriveStrength.java
Patch:
@@ -74,5 +74,7 @@ public static LinkedList<String> getStrings() {
 
   public static final char Unknown = 255;
 
-  public static final String[] Behavior_strings = {"Default", "2 mA", "4 mA", "8 mA", "16 mA", "24 mA"};
+  public static final String[] Behavior_strings = {
+    "Default", "2 mA", "4 mA", "8 mA", "16 mA", "24 mA"
+  };
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockTreeFactory.java
Patch:
@@ -40,8 +40,8 @@ public ClockTreeFactory() {
     sourcetrees = new ArrayList<>();
   }
 
-  public void AddClockNet( ArrayList<String> HierarchyNames, int clocksourceid, 
-                           ConnectionPoint connection, boolean isPinClock ) {
+  public void AddClockNet(ArrayList<String> HierarchyNames, int clocksourceid,
+                           ConnectionPoint connection, boolean isPinClock) {
     ClockTreeContainer destination = null;
     for (ClockTreeContainer search : sourcetrees) {
       if (search.equals(HierarchyNames, clocksourceid)) {
@@ -64,7 +64,7 @@ public void AddClockSource(
       }
     }
     if (destination == null) {
-      destination = new ClockTreeContainer(HierarchyNames, clocksourceid,false);
+      destination = new ClockTreeContainer(HierarchyNames, clocksourceid, false);
       sourcetrees.add(destination);
     }
     destination.addSource(connection);

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAReportTabbedPane.java
Patch:
@@ -302,7 +302,7 @@ public void clearDRCTrace() {
     if (DRCTraceActive) {
       ActiveDRCContainer.ClearMarks();
       DRCTraceActive = false;
-      if (MyProject!=null) MyProject.repaintCanvas();
+      if (MyProject != null) MyProject.repaintCanvas();
     }
   }
 
@@ -363,7 +363,7 @@ private void GenerateDRCTrace(SimpleDRCContainer dc) {
     DRCTraceActive = true;
     ActiveDRCContainer = dc;
     if (dc.HasCircuit())
-      if (MyProject!= null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
+      if (MyProject != null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
         MyProject.setCurrentCircuit(dc.GetCircuit());
     dc.MarkComponents();
     if (MyProject != null) MyProject.repaintCanvas();

File: src/main/java/com/cburch/logisim/fpga/gui/ListModelCellRenderer.java
Patch:
@@ -48,7 +48,7 @@ public class ListModelCellRenderer extends JLabel implements ListCellRenderer<Ob
   private static final Color SEVERE = Color.yellow;
   private static final Color NORMAL = Color.LIGHT_GRAY;
   private static final Color ADDENDUM = Color.GRAY;
-  
+
   private static final DrcIcon NoDRC = new DrcIcon(false);
   private static final DrcIcon DRCError = new DrcIcon(true);
 
@@ -67,7 +67,7 @@ public Component getListCellRendererComponent(
     if (value instanceof SimpleDRCContainer) {
       msg = (SimpleDRCContainer) value;
     }
-    setIcon((msg != null && msg.DRCInfoPresent())?DRCError : NoDRC);
+    setIcon((msg != null && msg.DRCInfoPresent()) ? DRCError : NoDRC);
     if (msg != null) {
       switch (msg.Severity()) {
         case SimpleDRCContainer.LEVEL_SEVERE:

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -34,7 +34,6 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.util.ArrayList;
-
 import com.cburch.logisim.fpga.gui.Reporter;
 
 public class FileWriter {
@@ -217,7 +216,8 @@ public static boolean WriteContents(File outfile, ArrayList<String> Contents) {
       output.close();
       return true;
     } catch (Exception e) {
-      Reporter.Report.AddFatalError("Could not write to file \"" + outfile.getAbsolutePath() + "\"");
+      Reporter.Report.AddFatalError(
+          "Could not write to file \"" + outfile.getAbsolutePath() + "\"");
       return false;
     }
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -68,7 +68,8 @@ public ArrayList<String> GetComponentDeclarationSection(Netlist TheNetlist, Attr
           new TickComponentHDLGeneratorFactory(
               FpgaClockFrequency, TickFrequency);
       Components.addAll(
-          Ticker.GetComponentInstantiation(TheNetlist, null, Ticker.getComponentStringIdentifier()));
+          Ticker.GetComponentInstantiation(
+              TheNetlist, null, Ticker.getComponentStringIdentifier()));
       HDLGeneratorFactory ClockWorker =
           TheNetlist.GetAllClockSources()
               .get(0)

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -110,7 +110,7 @@ public void propagate(InstanceState state) {
     if (state.getPortValue(BCDin).isFullyDefined()
         & !state.getPortValue(BCDin).isErrorValue()
         & !state.getPortValue(BCDin).isUnknown()) {
-      int value = (int)state.getPortValue(BCDin).toLongValue();
+      int value = (int) state.getPortValue(BCDin).toLongValue();
       switch (value) {
         case 0:
           state.setPort(Segment_A, Value.createKnown(BitWidth.create(1), 1), PER_DELAY);

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -33,7 +33,6 @@
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDL;
-
 import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
@@ -104,8 +103,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("BCDin", true, ComponentInfo, bcd2sevenseg.BCDin, Nets));
     PortMap.putAll(GetNetMap("Segment_a", true, ComponentInfo, bcd2sevenseg.Segment_A, Nets));
     PortMap.putAll(GetNetMap("Segment_b", true, ComponentInfo, bcd2sevenseg.Segment_B, Nets));

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -111,7 +111,7 @@ public void propagate(InstanceState state) {
         (state.getPortValue(BINin).isFullyDefined()
                 & !state.getPortValue(BINin).isUnknown()
                 & !state.getPortValue(BINin).isErrorValue()
-            ? (int)state.getPortValue(BINin).toLongValue()
+            ? (int) state.getPortValue(BINin).toLongValue()
             : -1);
     BitWidth NrOfBits = state.getAttributeValue(bin2bcd.ATTR_BinBits);
     int NrOfPorts = (int) (Math.log10(Math.pow(2.0, NrOfBits.getWidth())) + 1.0);

File: src/main/java/com/cburch/logisim/gui/opts/OptionsFrame.java
Patch:
@@ -71,7 +71,7 @@ public OptionsFrame(Project project) {
       }
     });
     panels =
-          new OptionsPanel[] {
+        new OptionsPanel[] {
           new SimulateOptions(this),
           new ToolbarOptions(this),
           new MouseOptions(this),

File: src/main/java/com/cburch/logisim/gui/prefs/IntlOptions.java
Patch:
@@ -60,8 +60,7 @@ public IntlOptions(PreferencesFrame window) {
               new PrefOption(AppPreferences.SHAPE_SHAPED, S.getter("shapeShaped")),
               new PrefOption(AppPreferences.SHAPE_RECTANGULAR, S.getter("shapeRectangular"))
             });
-    //						new PrefOption(AppPreferences.SHAPE_DIN40700,
-    //								S.getter("shapeDIN40700"))
+    // new PrefOption(AppPreferences.SHAPE_DIN40700, S.getter("shapeDIN40700"))
 
     Box localePanel = new Box(BoxLayout.X_AXIS);
     localePanel.add(Box.createGlue());

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -267,7 +267,7 @@ public void actionPerformed(ActionEvent e) {
           proj.getFrame().repaint();
         }
       } else if (e.getActionCommand().equals(cmdResetGridColors)) {
-//        AppPreferences.resetWindow();
+        //        AppPreferences.resetWindow();
         List<Project> nowOpen = Projects.getOpenProjects();
         AppPreferences.setDefaultGridColors();
         for (Project proj : nowOpen) {

File: src/main/java/com/cburch/logisim/gui/start/AboutCredits.java
Patch:
@@ -46,7 +46,7 @@
 
 class AboutCredits extends JComponent {
   private static final long serialVersionUID = 1L;
-  /** Speed of how quickly the scrolling occurs */
+  /** Speed of how quickly the scrolling occurs. */
   private static final int MILLIS_PER_RASTER = 20;
 
   /**
@@ -250,7 +250,7 @@ public void center(int displayAreaWidth) {
 
     /**
      * As some internals depend on Graphics context which can not be available at creation time this
-     * method must be called before using Line to ensure all internals are initialized
+     * method must be called before using Line to ensure all internals are initialized.
      *
      * @param g Graphics context to use
      */

File: src/main/java/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -191,7 +191,7 @@ private static boolean displayTableRow(
       if ((format & FORMAT_TABLE_TABBED) != 0) sep = "\t";
       else if ((format & FORMAT_TABLE_CSV) != 0) sep = ",";
       else // if ((format & FORMAT_TABLE_PRETTY) != 0)
-      sep = " ";
+        sep = " ";
       if (showHeader) {
         for (int i = 0; i < headers.size(); i++) {
           if ((format & FORMAT_TABLE_TABBED) != 0) formats.add("%s");

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imSyntaxHighlighter.java
Patch:
@@ -36,10 +36,10 @@ public class RV32imSyntaxHighlighter extends AssemblerHighlighter {
   @Override
   public TokenMap getWordsToHighlight() {
     TokenMap map = super.getWordsToHighlight();
-    for (int i = 0 ; i < RV32im_state.registerABINames.length ; i++)
+    for (int i = 0; i < RV32im_state.registerABINames.length; i++)
       map.put(RV32im_state.registerABINames[i], Token.OPERATOR);
     map.put("pc", Token.OPERATOR);
-    for (int i = 0 ; i < 32 ; i++) map.put("x"+i, Token.OPERATOR);
+    for (int i = 0; i < 32; i++) map.put("x" + i, Token.OPERATOR);
     for (String opcode : RV32im_state.ASSEMBLER.getOpcodes())
       map.put(opcode.toLowerCase(), Token.RESERVED_WORD);
     return map;

File: src/main/java/com/cburch/draw/canvas/CanvasTool.java
Patch:
@@ -34,7 +34,7 @@
 import java.awt.event.MouseEvent;
 
 public abstract class CanvasTool {
-  /** This is because a popup menu may result from the subsequent mouse release */
+  /** This is because a popup menu may result from the subsequent mouse release. */
   public void cancelMousePress(Canvas canvas) {}
 
   public void draw(Canvas canvas, Graphics g) {}

File: src/main/java/com/cburch/draw/model/CanvasModelEvent.java
Patch:
@@ -60,6 +60,7 @@ public class CanvasModelEvent extends EventObject {
   private HandleGesture gesture;
   private String oldText;
   private String newText;
+
   // the boolean parameter is just because the compiler insists upon it to
   // avoid an erasure conflict with the first constructor
   private CanvasModelEvent(

File: src/main/java/com/cburch/draw/shapes/CurveUtil.java
Patch:
@@ -210,9 +210,9 @@ private static double[] solveCubic(double a, double b, double c, double d) {
         double u = 2 * Math.sqrt(-p / 3);
         double v = Math.acos(-Math.sqrt(-27 / p3) * q / 2) / 3;
         return new double[] {
-          u * Math.cos(v) + offset,
-          u * Math.cos(v + 2 * Math.PI / 3) + offset,
-          u * Math.cos(v + 4 * Math.PI / 3) + offset
+                u * Math.cos(v) + offset,
+                u * Math.cos(v + 2 * Math.PI / 3) + offset,
+                u * Math.cos(v + 4 * Math.PI / 3) + offset
         };
       } else {
         // D zero

File: src/main/java/com/cburch/draw/tools/AbstractTool.java
Patch:
@@ -52,7 +52,7 @@ public static AbstractTool[] getTools(DrawingAttributeSet attrs) {
     };
   }
 
-  /** This is because a popup menu may result from the subsequent mouse release */
+  /** This is because a popup menu may result from the subsequent mouse release. */
   @Override
   public void cancelMousePress(Canvas canvas) {}
 

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -153,8 +153,8 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    Location loc = Location.create(e.getX(), e.getY());
-    Bounds bds = Bounds.create(loc);
+    final var loc = Location.create(e.getX(), e.getY());
+    final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();
     lastMouseY = loc.getY();

File: src/main/java/com/cburch/draw/util/EditableLabel.java
Patch:
@@ -119,7 +119,7 @@ public void configureTextField(EditableLabelField field, double zoom) {
     }
 
     w = Math.max(w, dim.width);
-    int h = dim.height;
+    final int h = dim.height;
     switch (horzAlign) {
       case LEFT:
         x0 = x0 - border;

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -75,7 +75,8 @@ public List<AddTool> getTools() {
     return tools;
   }
 
-  public boolean removeLibrary(String Name) {
+  @Override
+  public boolean removeLibrary(String name) {
     return false;
   }
 }

File: src/main/java/com/cburch/hdl/HdlModel.java
Patch:
@@ -42,7 +42,7 @@ public interface HdlModel {
   /** Gets the content of the HDL-IP component. */
   String getContent();
 
-  /** Get the component's name */
+  /** Get the component's name. */
   String getName();
 
   /** Unregisters a listener for changes to the values. */

File: src/main/java/com/cburch/hex/Measures.java
Patch:
@@ -186,8 +186,8 @@ void recompute() {
   public long toAddress(int x, int y) {
     HexModel model = hex.getModel();
     if (model == null) return Integer.MIN_VALUE;
-    long addr0 = model.getFirstOffset();
-    long addr1 = model.getLastOffset();
+    final long addr0 = model.getFirstOffset();
+    final long addr1 = model.getLastOffset();
 
     long base = getBaseAddress(model) + ((long) y / cellHeight) * cols;
     int offs = (x - baseX) / (cellWidth + (spacerWidth + 2) / 4);

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -42,8 +42,6 @@
 import javax.swing.JFrame;
 
 public class ExportLatexButton extends JButton {
-
-  /** */
   private static final long serialVersionUID = 1L;
 
   private final JFrame parent;

File: src/main/java/com/cburch/logisim/LogisimVersion.java
Patch:
@@ -69,7 +69,7 @@ public static LogisimVersion fromString(String versionString) {
 
   /**
    * Compare two Logisim versions, returning positive non-zero value whether the one passed as
-   * parameter is newer than the current one, equal (0) or older (negative non-zero value)
+   * parameter is newer than the current one, equal (0) or older (negative non-zero value).
    *
    * @return Negative value if the current version is older than the one passed as parameter, zero
    *     if equal, positive if newer.
@@ -87,7 +87,7 @@ public int compareTo(LogisimVersion other) {
     return result;
   }
 
-  /** Build the hash code starting from the version number */
+  /** Build the hash code starting from the version number. */
   @Override
   public int hashCode() {
     int ret = major * 31 + minor;

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/SimpleDRCContainer.java
Patch:
@@ -163,8 +163,8 @@ public void MarkComponents() {
         }
       } else if (obj instanceof InstanceComponent) {
         InstanceComponent comp = (InstanceComponent) obj;
-        if ((MarkType & MARK_INSTANCE) != 0) comp.MarkInstance();
-        if ((MarkType & MARK_LABEL) != 0) comp.MarkLabel();
+        if ((MarkType & MARK_INSTANCE) != 0) comp.markInstance();
+        if ((MarkType & MARK_LABEL) != 0) comp.markLabel();
       } else {
       }
     }

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -85,7 +85,7 @@ public void computeEnabled() {
     Selection sel = canvas.getSelection();
     boolean selEmpty = sel.isEmpty();
     boolean canChange = proj.getLogisimFile().contains(circ);
-    boolean clipExists = !Clipboard.isEmpty();
+    final boolean clipExists = !Clipboard.isEmpty();
     boolean selHasRemovable = false;
     for (CanvasObject o : sel.getSelected()) {
       if (!(o instanceof AppearanceElement)) {

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardActions.java
Patch:
@@ -49,6 +49,7 @@ public class ClipboardActions extends Action {
   private final Map<CanvasObject, Integer> affected;
   private final ClipboardContents newClipboard;
   private ClipboardContents oldClipboard;
+
   private ClipboardActions(boolean remove, AppearanceCanvas canvas) {
     this.remove = remove;
     this.canvas = canvas;

File: src/main/java/com/cburch/logisim/gui/chrono/PopupMenu.java
Patch:
@@ -46,6 +46,7 @@ public class PopupMenu extends MouseAdapter {
 
   private class PopupContents extends JPopupMenu {
     private static final long serialVersionUID = 1L;
+
     public PopupContents() {
       super("Options");
       RadixOption radix = null;
@@ -59,7 +60,7 @@ public PopupContents() {
       }
       ButtonGroup g = new ButtonGroup();
       for (RadixOption r : RadixOption.OPTIONS) {
-        JRadioButtonMenuItem m = new JRadioButtonMenuItem(r.toDisplayString()); 
+        JRadioButtonMenuItem m = new JRadioButtonMenuItem(r.toDisplayString());
         add(m);
         m.setEnabled(signals.size() > 0);
         g.add(m);
@@ -91,7 +92,7 @@ public PopupContents() {
 
   private final List<Signal> signals;
   private final ChronoPanel chronoPanel;
-  
+
   public PopupMenu(ChronoPanel p, List<Signal> s) {
     chronoPanel = p;
     signals = s;

File: src/main/java/com/cburch/logisim/gui/generic/AttrTable.java
Patch:
@@ -77,6 +77,7 @@ public class AttrTable extends JPanel implements LocaleListener {
   private final TableModelAdapter tableModel;
   private final CellEditor editor = new CellEditor();
   private boolean titleEnabled;
+
   public AttrTable(Window parent) {
     super(new BorderLayout());
     this.parent = parent;

File: src/main/java/com/cburch/logisim/gui/generic/CanvasPane.java
Patch:
@@ -47,6 +47,7 @@ public class CanvasPane extends JScrollPane {
   private final Listener listener;
   private final ZoomListener zoomListener;
   private ZoomModel zoomModel;
+
   public CanvasPane(CanvasPaneContents contents) {
     super((Component) contents);
     this.contents = contents;

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerToolNode.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.gui.generic;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.circuit.CircuitEvent;
 import com.cburch.logisim.circuit.CircuitListener;
@@ -42,6 +39,9 @@
 import com.cburch.logisim.vhdl.base.VhdlContent;
 import com.cburch.logisim.vhdl.base.VhdlEntity;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class ProjectExplorerToolNode extends ProjectExplorerModel.Node<Tool>
     implements CircuitListener, HdlModelListener {
 

File: src/main/java/com/cburch/logisim/gui/generic/TikZWriter.java
Patch:
@@ -479,11 +479,11 @@ public boolean drawImage(
   public void dispose() {}
 
   public void WriteFile(File outfile) throws IOException {
-    MyInfo.WriteFile(outfile);
+    MyInfo.writeFile(outfile);
   }
 
   public void WriteSvg(int width, int height, File outfile)
       throws ParserConfigurationException, TransformerException {
-    MyInfo.WriteSvg(width, height, outfile);
+    MyInfo.writeSvg(width, height, outfile);
   }
 }

File: src/main/java/com/cburch/logisim/gui/icons/LedBarIcon.java
Patch:
@@ -41,7 +41,8 @@ protected void paintIcon(Graphics2D g2) {
     g2.setColor(Color.DARK_GRAY);
     g2.fillRect(0, 0, getIconWidth(), getIconHeight());
 
-    Color col1, col2;
+    Color col1;
+    Color col2;
     switch (state) {
       case 0:
         col1 = Color.gray;

File: src/main/java/com/cburch/logisim/gui/icons/SevenSegmentIcon.java
Patch:
@@ -38,9 +38,9 @@ public class SevenSegmentIcon extends AnimatedIcon {
   private final boolean isHexDisplay;
   private int state;
 
-  public SevenSegmentIcon(boolean HexDisplay) {
-    isHexDisplay = HexDisplay;
-    state = (HexDisplay) ? -1 : 3;
+  public SevenSegmentIcon(boolean isHexDisplay) {
+    this.isHexDisplay = isHexDisplay;
+    state = (isHexDisplay) ? -1 : 3;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -50,6 +50,7 @@ public void resetToStatic() {
     state = -1;
   }
 
+
   @Override
   protected void paintIcon(Graphics2D g2) {
     StringBuilder s = new StringBuilder();

File: src/main/java/com/cburch/logisim/gui/log/ValueTable.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.gui.log;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import static com.cburch.logisim.gui.Strings.S;
 
 import com.cburch.logisim.data.BitWidth;
@@ -53,6 +50,9 @@
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class ValueTable extends JPanel {
 
   private static final long serialVersionUID = 1L;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableComponentModel.java
Patch:
@@ -50,7 +50,7 @@ class AttrTableComponentModel extends AttributeSetTableModel {
     this.proj = proj;
     this.circ = circ;
     this.comp = comp;
-    SetInstance(comp.getFactory());
+    setInstance(comp.getFactory());
   }
 
   public Circuit getCircuit() {

File: src/main/java/com/cburch/logisim/gui/main/AttrTableToolModel.java
Patch:
@@ -50,8 +50,8 @@ public AttrTableToolModel(Project proj, Tool tool) {
     super(tool.getAttributeSet());
     if (tool instanceof AddTool) {
       AddTool mytool = (AddTool) tool;
-      SetInstance(mytool.getFactory());
-      SetIsTool();
+      setInstance(mytool.getFactory());
+      setIsTool();
     }
     this.proj = proj;
     this.tool = tool;

File: src/main/java/com/cburch/logisim/gui/main/ExportImage.java
Patch:
@@ -130,8 +130,8 @@ public static void doExport(Project proj) {
             OptionPane.QUESTION_MESSAGE);
     if (action != OptionPane.OK_OPTION) return;
     List<Circuit> circuits = list.getSelectedCircuits();
-    double scale = options.getScale();
-    boolean printerView = options.getPrinterView();
+    final double scale = options.getScale();
+    final boolean printerView = options.getPrinterView();
     if (circuits.isEmpty()) return;
 
     int fmt = options.getImageFormat();

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -235,10 +235,10 @@ public void paintIcon(Component destination, Graphics g) {
 
       // draw tool icon
       g.setColor(Color.BLACK);
-      Graphics g_copy = g.create();
-      ComponentDrawContext c = new ComponentDrawContext(destination, null, null, g, g_copy);
+      var gfxCopy = g.create();
+      var c = new ComponentDrawContext(destination, null, null, g, gfxCopy);
       tool.paintIcon(c, AppPreferences.IconBorder, AppPreferences.IconBorder);
-      g_copy.dispose();
+      gfxCopy.dispose();
     }
   }
 }

File: src/main/java/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -309,7 +309,7 @@ private void updateList(boolean ignoreIfSelectionSame) {
         this.selected = newSel;
       }
     } else {
-      Attribute<?>[] oldAttrs = this.attrs;
+      final Attribute<?>[] oldAttrs = this.attrs;
       Object[] oldValues = this.values;
       Attribute<?>[] newAttrs = new Attribute[attrMap.size()];
       Object[] newValues = new Object[newAttrs.length];

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeCircuitNode.java
Patch:
@@ -88,9 +88,9 @@ public void circuitChanged(CircuitEvent event) {
 
   public int compare(Component a, Component b) {
     if (a != b) {
-      String aName = a.getFactory().getDisplayName();
-      String bName = b.getFactory().getDisplayName();
-      int ret = aName.compareToIgnoreCase(bName);
+      var nameA = a.getFactory().getDisplayName();
+      var nameB = b.getFactory().getDisplayName();
+      int ret = nameA.compareToIgnoreCase(nameB);
       if (ret != 0) return ret;
     }
     return a.getLocation().toString().compareTo(b.getLocation().toString());

File: src/main/java/com/cburch/logisim/gui/main/Toolbox.java
Patch:
@@ -48,7 +48,7 @@ class Toolbox extends JPanel {
     Toolbar toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
-    toolbox = new ProjectExplorer(proj,false);
+    toolbox = new ProjectExplorer(proj, false);
     toolbox.setListener(new ToolboxManip(proj, toolbox));
     add(new JScrollPane(toolbox), BorderLayout.CENTER);
 

File: src/main/java/com/cburch/logisim/gui/main/ToolboxManip.java
Patch:
@@ -150,8 +150,8 @@ public JPopupMenu menuRequested(ProjectExplorer.Event event) {
       if (lib == proj.getLogisimFile()) {
         return Popups.forProject(proj);
       } else {
-        boolean is_top = event.getTreePath().getPathCount() <= 2;
-        return Popups.forLibrary(proj, lib, is_top);
+        final var isTop = event.getTreePath().getPathCount() <= 2;
+        return Popups.forLibrary(proj, lib, isTop);
       }
     } else {
       return null;

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -113,9 +113,9 @@ public int getIconWidth() {
     }
 
     public void paintIcon(Component comp, Graphics g, int x, int y) {
-      Graphics gNew = g.create();
-      tool.paintIcon(new ComponentDrawContext(comp, null, null, g, gNew), x + 2, y + 2);
-      gNew.dispose();
+      var gfxNew = g.create();
+      tool.paintIcon(new ComponentDrawContext(comp, null, null, g, gfxNew), x + 2, y + 2);
+      gfxNew.dispose();
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -596,7 +596,7 @@ boolean FpgaDownload(Project proj) {
             proj,
             testCircuitImpName,
             testTickFrequency,
-            new BoardReaderClass(AppPreferences.Boards.GetBoardFilePath(testCircuitImpBoard))
+            new BoardReaderClass(AppPreferences.Boards.getBoardFilePath(testCircuitImpBoard))
                 .GetBoardInformation(),
             testCircuitImpMapFile,
             false,

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -135,7 +135,8 @@ public Circuit getCircuit() {
   }
 
   /**
-   * @brief this function will return the instance data information
+   * This medthod returns the instance data information.
+   *
    * @pre it assumes that your circuit was instantiate before.
    */
   public InstanceData getData() {
@@ -147,7 +148,7 @@ public InstanceData getData() {
       return (InstanceData) circState.getData(comp);
     }
   }
-  
+
   public CircuitState getCircuitState() {
     return context.getCircuitState();
   }

File: src/main/java/com/cburch/logisim/prefs/ConvertEvent.java
Patch:
@@ -37,7 +37,7 @@ public ConvertEvent(AttributeOption value) {
     this.value = value;
   }
 
-  public AttributeOption GetValue() {
+  public AttributeOption getValue() {
     return value;
   }
 }

File: src/main/java/com/cburch/logisim/prefs/ConvertEventListener.java
Patch:
@@ -29,5 +29,5 @@
 package com.cburch.logisim.prefs;
 
 public interface ConvertEventListener {
-  void AttributeValueChanged(ConvertEvent e);
+  void attributeValueChanged(ConvertEvent e);
 }

File: src/main/java/com/cburch/logisim/proj/ProjectEvent.java
Patch:
@@ -50,7 +50,7 @@ public class ProjectEvent {
 
   private final int action;
   private final Project proj;
-  private Object old_data;
+  private Object oldData;
   private final Object data;
 
   ProjectEvent(int action, Project proj) {
@@ -68,7 +68,7 @@ public class ProjectEvent {
   ProjectEvent(int action, Project proj, Object old, Object data) {
     this.action = action;
     this.proj = proj;
-    this.old_data = old;
+    this.oldData = old;
     this.data = data;
   }
 
@@ -91,7 +91,7 @@ public LogisimFile getLogisimFile() {
   }
 
   public Object getOldData() {
-    return old_data;
+    return oldData;
   }
 
   public Project getProject() {

File: src/main/java/com/cburch/logisim/std/wiring/ProbeAttributes.java
Patch:
@@ -138,7 +138,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
   }
 
   @Override
-  public void AttributeValueChanged(ConvertEvent e) {
-    setValue(PROBEAPPEARANCE, e.GetValue());
+  public void attributeValueChanged(ConvertEvent e) {
+    setValue(PROBEAPPEARANCE, e.getValue());
   }
 }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imSyntaxHighlighter.java
Patch:
@@ -36,10 +36,10 @@ public class RV32imSyntaxHighlighter extends AssemblerHighlighter {
   @Override
   public TokenMap getWordsToHighlight() {
     TokenMap map = super.getWordsToHighlight();
-    for (int i = 0 ; i < RV32im_state.registerABINames.length ; i++)
+    for (int i = 0; i < RV32im_state.registerABINames.length; i++)
       map.put(RV32im_state.registerABINames[i], Token.OPERATOR);
     map.put("pc", Token.OPERATOR);
-    for (int i = 0 ; i < 32 ; i++) map.put("x"+i, Token.OPERATOR);
+    for (int i = 0; i < 32; i++) map.put("x" + i, Token.OPERATOR);
     for (String opcode : RV32im_state.ASSEMBLER.getOpcodes())
       map.put(opcode.toLowerCase(), Token.RESERVED_WORD);
     return map;

File: src/main/java/com/cburch/logisim/gui/opts/OptionsFrame.java
Patch:
@@ -71,7 +71,7 @@ public OptionsFrame(Project project) {
       }
     });
     panels =
-          new OptionsPanel[] {
+        new OptionsPanel[] {
           new SimulateOptions(this),
           new ToolbarOptions(this),
           new MouseOptions(this),

File: src/main/java/com/cburch/logisim/gui/prefs/IntlOptions.java
Patch:
@@ -60,8 +60,7 @@ public IntlOptions(PreferencesFrame window) {
               new PrefOption(AppPreferences.SHAPE_SHAPED, S.getter("shapeShaped")),
               new PrefOption(AppPreferences.SHAPE_RECTANGULAR, S.getter("shapeRectangular"))
             });
-    //						new PrefOption(AppPreferences.SHAPE_DIN40700,
-    //								S.getter("shapeDIN40700"))
+    // new PrefOption(AppPreferences.SHAPE_DIN40700, S.getter("shapeDIN40700"))
 
     Box localePanel = new Box(BoxLayout.X_AXIS);
     localePanel.add(Box.createGlue());

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -267,7 +267,7 @@ public void actionPerformed(ActionEvent e) {
           proj.getFrame().repaint();
         }
       } else if (e.getActionCommand().equals(cmdResetGridColors)) {
-//        AppPreferences.resetWindow();
+        //        AppPreferences.resetWindow();
         List<Project> nowOpen = Projects.getOpenProjects();
         AppPreferences.setDefaultGridColors();
         for (Project proj : nowOpen) {

File: src/main/java/com/cburch/logisim/gui/start/AboutCredits.java
Patch:
@@ -46,7 +46,7 @@
 
 class AboutCredits extends JComponent {
   private static final long serialVersionUID = 1L;
-  /** Speed of how quickly the scrolling occurs */
+  /** Speed of how quickly the scrolling occurs. */
   private static final int MILLIS_PER_RASTER = 20;
 
   /**
@@ -250,7 +250,7 @@ public void center(int displayAreaWidth) {
 
     /**
      * As some internals depend on Graphics context which can not be available at creation time this
-     * method must be called before using Line to ensure all internals are initialized
+     * method must be called before using Line to ensure all internals are initialized.
      *
      * @param g Graphics context to use
      */

File: src/main/java/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -191,7 +191,7 @@ private static boolean displayTableRow(
       if ((format & FORMAT_TABLE_TABBED) != 0) sep = "\t";
       else if ((format & FORMAT_TABLE_CSV) != 0) sep = ",";
       else // if ((format & FORMAT_TABLE_PRETTY) != 0)
-      sep = " ";
+        sep = " ";
       if (showHeader) {
         for (int i = 0; i < headers.size(); i++) {
           if ((format & FORMAT_TABLE_TABBED) != 0) formats.add("%s");

File: src/main/java/com/cburch/logisim/fpga/data/BoardManipulatorListener.java
Patch:
@@ -30,6 +30,7 @@
 
 public interface BoardManipulatorListener {
 
-   void boardNameChanged(String newBoardName);
-   void componentsChanged(IOComponentsInformation IOcomps);
+  void boardNameChanged(String newBoardName);
+
+  void componentsChanged(IOComponentsInformation IOcomps);
 }

File: src/main/java/com/cburch/logisim/fpga/data/DriveStrength.java
Patch:
@@ -74,5 +74,7 @@ public static LinkedList<String> getStrings() {
 
   public static final char Unknown = 255;
 
-  public static final String[] Behavior_strings = {"Default", "2 mA", "4 mA", "8 mA", "16 mA", "24 mA"};
+  public static final String[] Behavior_strings = {
+    "Default", "2 mA", "4 mA", "8 mA", "16 mA", "24 mA"
+  };
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockTreeFactory.java
Patch:
@@ -40,8 +40,8 @@ public ClockTreeFactory() {
     sourcetrees = new ArrayList<>();
   }
 
-  public void AddClockNet( ArrayList<String> HierarchyNames, int clocksourceid, 
-                           ConnectionPoint connection, boolean isPinClock ) {
+  public void AddClockNet(ArrayList<String> HierarchyNames, int clocksourceid,
+                           ConnectionPoint connection, boolean isPinClock) {
     ClockTreeContainer destination = null;
     for (ClockTreeContainer search : sourcetrees) {
       if (search.equals(HierarchyNames, clocksourceid)) {
@@ -64,7 +64,7 @@ public void AddClockSource(
       }
     }
     if (destination == null) {
-      destination = new ClockTreeContainer(HierarchyNames, clocksourceid,false);
+      destination = new ClockTreeContainer(HierarchyNames, clocksourceid, false);
       sourcetrees.add(destination);
     }
     destination.addSource(connection);

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAReportTabbedPane.java
Patch:
@@ -302,7 +302,7 @@ public void clearDRCTrace() {
     if (DRCTraceActive) {
       ActiveDRCContainer.ClearMarks();
       DRCTraceActive = false;
-      if (MyProject!=null) MyProject.repaintCanvas();
+      if (MyProject != null) MyProject.repaintCanvas();
     }
   }
 
@@ -363,7 +363,7 @@ private void GenerateDRCTrace(SimpleDRCContainer dc) {
     DRCTraceActive = true;
     ActiveDRCContainer = dc;
     if (dc.HasCircuit())
-      if (MyProject!= null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
+      if (MyProject != null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
         MyProject.setCurrentCircuit(dc.GetCircuit());
     dc.MarkComponents();
     if (MyProject != null) MyProject.repaintCanvas();

File: src/main/java/com/cburch/logisim/fpga/gui/ListModelCellRenderer.java
Patch:
@@ -48,7 +48,7 @@ public class ListModelCellRenderer extends JLabel implements ListCellRenderer<Ob
   private static final Color SEVERE = Color.yellow;
   private static final Color NORMAL = Color.LIGHT_GRAY;
   private static final Color ADDENDUM = Color.GRAY;
-  
+
   private static final DrcIcon NoDRC = new DrcIcon(false);
   private static final DrcIcon DRCError = new DrcIcon(true);
 
@@ -67,7 +67,7 @@ public Component getListCellRendererComponent(
     if (value instanceof SimpleDRCContainer) {
       msg = (SimpleDRCContainer) value;
     }
-    setIcon((msg != null && msg.DRCInfoPresent())?DRCError : NoDRC);
+    setIcon((msg != null && msg.DRCInfoPresent()) ? DRCError : NoDRC);
     if (msg != null) {
       switch (msg.Severity()) {
         case SimpleDRCContainer.LEVEL_SEVERE:

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -34,7 +34,6 @@
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.util.ArrayList;
-
 import com.cburch.logisim.fpga.gui.Reporter;
 
 public class FileWriter {
@@ -217,7 +216,8 @@ public static boolean WriteContents(File outfile, ArrayList<String> Contents) {
       output.close();
       return true;
     } catch (Exception e) {
-      Reporter.Report.AddFatalError("Could not write to file \"" + outfile.getAbsolutePath() + "\"");
+      Reporter.Report.AddFatalError(
+          "Could not write to file \"" + outfile.getAbsolutePath() + "\"");
       return false;
     }
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -68,7 +68,8 @@ public ArrayList<String> GetComponentDeclarationSection(Netlist TheNetlist, Attr
           new TickComponentHDLGeneratorFactory(
               FpgaClockFrequency, TickFrequency);
       Components.addAll(
-          Ticker.GetComponentInstantiation(TheNetlist, null, Ticker.getComponentStringIdentifier()));
+          Ticker.GetComponentInstantiation(
+              TheNetlist, null, Ticker.getComponentStringIdentifier()));
       HDLGeneratorFactory ClockWorker =
           TheNetlist.GetAllClockSources()
               .get(0)

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -110,7 +110,7 @@ public void propagate(InstanceState state) {
     if (state.getPortValue(BCDin).isFullyDefined()
         & !state.getPortValue(BCDin).isErrorValue()
         & !state.getPortValue(BCDin).isUnknown()) {
-      int value = (int)state.getPortValue(BCDin).toLongValue();
+      int value = (int) state.getPortValue(BCDin).toLongValue();
       switch (value) {
         case 0:
           state.setPort(Segment_A, Value.createKnown(BitWidth.create(1), 1), PER_DELAY);

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -33,7 +33,6 @@
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDL;
-
 import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
@@ -104,8 +103,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
   @Override
   public SortedMap<String, String> GetPortMap(Netlist Nets, Object MapInfo) {
     SortedMap<String, String> PortMap = new TreeMap<>();
-	if (!(MapInfo instanceof NetlistComponent)) return PortMap;
-	NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
+    if (!(MapInfo instanceof NetlistComponent)) return PortMap;
+    NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     PortMap.putAll(GetNetMap("BCDin", true, ComponentInfo, bcd2sevenseg.BCDin, Nets));
     PortMap.putAll(GetNetMap("Segment_a", true, ComponentInfo, bcd2sevenseg.Segment_A, Nets));
     PortMap.putAll(GetNetMap("Segment_b", true, ComponentInfo, bcd2sevenseg.Segment_B, Nets));

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -111,7 +111,7 @@ public void propagate(InstanceState state) {
         (state.getPortValue(BINin).isFullyDefined()
                 & !state.getPortValue(BINin).isUnknown()
                 & !state.getPortValue(BINin).isErrorValue()
-            ? (int)state.getPortValue(BINin).toLongValue()
+            ? (int) state.getPortValue(BINin).toLongValue()
             : -1);
     BitWidth NrOfBits = state.getAttributeValue(bin2bcd.ATTR_BinBits);
     int NrOfPorts = (int) (Math.log10(Math.pow(2.0, NrOfBits.getWidth())) + 1.0);

File: src/main/java/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -292,7 +292,8 @@ public void doIt(Project proj) {
         }
       }
       LogiLibs.clear();
-      /*this we are going to do in two steps, first add the circuits with inputs, outputs and wires */
+      // this we are going to do in two steps, first add the circuits with inputs,
+      // outputs and wires
       for (Circuit circ : MergedCircuits) {
         Circuit NewCirc = null;
         boolean replace = false;

File: src/main/java/com/cburch/logisim/file/Options.java
Patch:
@@ -54,7 +54,9 @@ public class Options {
 
   public static final Integer sim_rand_dflt = 32;
 
-  private static final Attribute<?>[] ATTRIBUTES = {ATTR_GATE_UNDEFINED, ATTR_SIM_LIMIT, ATTR_SIM_RAND};
+  private static final Attribute<?>[] ATTRIBUTES = {
+    ATTR_GATE_UNDEFINED, ATTR_SIM_LIMIT, ATTR_SIM_RAND
+  };
   private static final Object[] DEFAULTS = {GATE_UNDEFINED_IGNORE, 1000, 0};
 
   private final AttributeSet attrs;

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -38,7 +38,7 @@
  */
 public class ReaderInputStream extends InputStream {
 
-  /** Source Reader */
+  /** Source Reader. */
   private Reader in;
 
   private String encoding = System.getProperty("file.encoding");
@@ -120,7 +120,8 @@ public synchronized void mark(final int limit) {
     }
   }
 
-  /** @return false - mark is not supported */
+  /**
+   *  @return false - mark is not supported */
   @Override
   public boolean markSupported() {
     return false; // would be imprecise

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -203,7 +203,7 @@ static void write(LogisimFile file, OutputStream out, LibraryLoader loader, File
   private final LogisimFile file;
   private final Document doc;
   /**
-   * Path of the file which is being written on disk -- used to relativize components stored in it
+   * Path of the file which is being written on disk -- used to relativize components stored in it.
    */
   private final String outFilepath;
 
@@ -297,7 +297,7 @@ Element fromCircuit(Circuit circuit) {
       if (elt != null) ret.appendChild(elt);
     }
     for (String board : circuit.getBoardMapNamestoSave()) {
-      Element elt = fromMap(circuit,board);
+      Element elt = fromMap(circuit, board);
       if (elt != null) ret.appendChild(elt);
     }
     return ret;

File: src/main/java/com/cburch/logisim/data/TestVector.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.data;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import java.io.BufferedReader;
 import java.io.File;
 import java.io.FileReader;
@@ -39,6 +36,9 @@
 import java.util.StringTokenizer;
 import javax.swing.filechooser.FileFilter;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class TestVector {
 
   private static class TestVectorFilter extends FileFilter {

File: src/main/java/com/cburch/logisim/comp/AbstractComponentFactory.java
Patch:
@@ -66,8 +66,8 @@ public boolean ActiveOnHigh(AttributeSet attrs) {
   public AttributeSet createAttributeSet() {
     return AttributeSets.EMPTY;
   }
-  
-  public void removeComponent(Circuit circ, Component c , CircuitState state) {}
+
+  public void removeComponent(Circuit circ, Component c, CircuitState state) {}
 
   public abstract Component createComponent(Location loc, AttributeSet attrs);
 
@@ -161,7 +161,7 @@ public void paintIcon(ComponentDrawContext context, int x, int y, AttributeSet a
   public boolean RequiresGlobalClock() {
     return false;
   }
-  
+
   public boolean isSocComponent() {
     return false;
   }

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -362,8 +362,8 @@ private static void propagateComponents(
         } catch (UnsupportedOperationException e) {
           throw new AnalyzeException.CannotHandle(comp.getFactory().getDisplayName());
         }
-      } else if (comp.getFactory() instanceof Pin) {// pins are handled elsewhere
-      } else if (comp.getFactory() instanceof SplitterFactory) {// splitters are handled elsewhere
+      } else if (comp.getFactory() instanceof Pin) { // pins are handled elsewhere
+      } else if (comp.getFactory() instanceof SplitterFactory) { // splitters are handled elsewhere
       } else {
         throw new AnalyzeException.CannotHandle(comp.getFactory().getDisplayName());
       }
@@ -428,7 +428,7 @@ private static String toValidLabel(String label) {
         afterWhitespace = false;
       } else if (Character.isWhitespace(c)) {
         afterWhitespace = true;
-      } else {// just ignore any other characters
+      } else { // just ignore any other characters
       }
     }
     if (end != null && ret.length() > 0) ret.append(end);

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -62,7 +62,7 @@ static Map<Circuit, Lock> acquireLocks(CircuitTransaction xn, CircuitMutatorImpl
           circuitLocks.put(circ, lock);
         } else if (access == CircuitTransaction.READ_WRITE) {
           Thread curThread = Thread.currentThread();
-          if (locker.mutatingThread == curThread) {// nothing to do - thread already has lock
+          if (locker.mutatingThread == curThread) { // nothing to do - thread already has lock
           } else {
             Lock lock = locker.circuitLock.writeLock();
             lock.lock();

File: src/main/java/com/cburch/logisim/circuit/ComponentDataGuiProvider.java
Patch:
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit;
 
 public interface ComponentDataGuiProvider {
-   void destroy();
+  void destroy();
 }

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -138,8 +138,8 @@ else if (stateMap.containsKey(e.state))
   }
 
   String getSingleStepMessage() {
-    String n = data.isEmpty() ? "no" : ""+data.size();
-    String m = pendingInputs.isEmpty() ? "no" : ""+pendingInputs.size();
+    String n = data.isEmpty() ? "no" : "" + data.size();
+    String m = pendingInputs.isEmpty() ? "no" : "" + pendingInputs.size();
     return S.fmt("singleStepMessage", n, m);
   }
 }

File: src/main/java/com/cburch/logisim/circuit/ReplacementMap.java
Patch:
@@ -198,7 +198,7 @@ public void reset() {
   public String toString() {
     final ByteArrayOutputStream out = new ByteArrayOutputStream();
     try (PrintStream p = new PrintStream(out, true, StandardCharsets.UTF_8)) {
-        print(p);
+      print(p);
     } catch (Exception ignored) {
     }
     return out.toString(StandardCharsets.UTF_8);

File: src/main/java/com/cburch/logisim/circuit/WireUtil.java
Patch:
@@ -28,8 +28,6 @@
 
 package com.cburch.logisim.circuit;
 
-
-
 public class WireUtil {
   /*
   static CircuitPoints computeCircuitPoints(

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElementProvider.java
Patch:
@@ -37,9 +37,9 @@
 public interface DynamicElementProvider {
 
   DynamicElement createDynamicElement(int x, int y, DynamicElement.Path path);
-  
-  static void removeDynamicElements(Circuit circuit, Component c){
-	if (!(c instanceof InstanceComponent)) return;
+
+  static void removeDynamicElements(Circuit circuit, Component c) {
+    if (!(c instanceof InstanceComponent)) return;
     HashSet<Circuit> allAffected = new HashSet<>();
     LinkedList<Circuit> todo = new LinkedList<>();
     todo.add(circuit);

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -42,8 +42,6 @@
 import javax.swing.JFrame;
 
 public class ExportLatexButton extends JButton {
-
-  /** */
   private static final long serialVersionUID = 1L;
 
   private final JFrame parent;

File: src/main/java/com/cburch/draw/canvas/CanvasTool.java
Patch:
@@ -34,7 +34,7 @@
 import java.awt.event.MouseEvent;
 
 public abstract class CanvasTool {
-  /** This is because a popup menu may result from the subsequent mouse release */
+  /** This is because a popup menu may result from the subsequent mouse release. */
   public void cancelMousePress(Canvas canvas) {}
 
   public void draw(Canvas canvas, Graphics g) {}

File: src/main/java/com/cburch/draw/model/CanvasModelEvent.java
Patch:
@@ -60,6 +60,7 @@ public class CanvasModelEvent extends EventObject {
   private HandleGesture gesture;
   private String oldText;
   private String newText;
+
   // the boolean parameter is just because the compiler insists upon it to
   // avoid an erasure conflict with the first constructor
   private CanvasModelEvent(

File: src/main/java/com/cburch/draw/tools/AbstractTool.java
Patch:
@@ -52,7 +52,7 @@ public static AbstractTool[] getTools(DrawingAttributeSet attrs) {
     };
   }
 
-  /** This is because a popup menu may result from the subsequent mouse release */
+  /** This is because a popup menu may result from the subsequent mouse release. */
   @Override
   public void cancelMousePress(Canvas canvas) {}
 

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -153,8 +153,8 @@ public void mouseDragged(Canvas canvas, MouseEvent e) {
 
   @Override
   public void mousePressed(Canvas canvas, MouseEvent e) {
-    Location loc = Location.create(e.getX(), e.getY());
-    Bounds bds = Bounds.create(loc);
+    final var loc = Location.create(e.getX(), e.getY());
+    final var bds = Bounds.create(loc);
     dragStart = loc;
     lastMouseX = loc.getX();
     lastMouseY = loc.getY();

File: src/main/java/com/cburch/draw/util/EditableLabel.java
Patch:
@@ -119,7 +119,7 @@ public void configureTextField(EditableLabelField field, double zoom) {
     }
 
     w = Math.max(w, dim.width);
-    int h = dim.height;
+    final int h = dim.height;
     switch (horzAlign) {
       case LEFT:
         x0 = x0 - border;

File: src/main/java/com/cburch/gray/Components.java
Patch:
@@ -75,7 +75,8 @@ public List<AddTool> getTools() {
     return tools;
   }
 
-  public boolean removeLibrary(String Name) {
+  @Override
+  public boolean removeLibrary(String name) {
     return false;
   }
 }

File: src/main/java/com/cburch/hdl/HdlModel.java
Patch:
@@ -42,7 +42,7 @@ public interface HdlModel {
   /** Gets the content of the HDL-IP component. */
   String getContent();
 
-  /** Get the component's name */
+  /** Get the component's name. */
   String getName();
 
   /** Unregisters a listener for changes to the values. */

File: src/main/java/com/cburch/hex/Measures.java
Patch:
@@ -186,8 +186,8 @@ void recompute() {
   public long toAddress(int x, int y) {
     HexModel model = hex.getModel();
     if (model == null) return Integer.MIN_VALUE;
-    long addr0 = model.getFirstOffset();
-    long addr1 = model.getLastOffset();
+    final long addr0 = model.getFirstOffset();
+    final long addr1 = model.getLastOffset();
 
     long base = getBaseAddress(model) + ((long) y / cellHeight) * cols;
     int offs = (x - baseX) / (cellWidth + (spacerWidth + 2) / 4);

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -181,10 +181,10 @@ public void setValueRequested(Attribute<Object> attr, Object value) throws AttrT
           if (attr.equals(StdAttr.LABEL)) {
             if (labler.hasNext(circuit)) {
               if (comps.size() > 1) {
-                act.set(comp, attr, labler.GetNext(circuit, comp.getFactory()));
+                act.set(comp, attr, labler.getNext(circuit, comp.getFactory()));
               } else {
                 if (getAttributeSet().getValue(StdAttr.LABEL).equals(value)) return;
-                else act.set(comp, attr, labler.GetCurrent(circuit, comp.getFactory()));
+                else act.set(comp, attr, labler.getCurrent(circuit, comp.getFactory()));
               }
             } else act.set(comp, attr, "");
           } else act.set(comp, attr, value);

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -77,8 +77,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     ArrayList<String> Contents = new ArrayList<>();
     int NrOfGates = (IsInverter()) ? 6 : 4;
     for (int i = 0; i < NrOfGates; i++) {
-      Contents.addAll(
-          MakeRemarkBlock("Here gate " + i + " is described", 3));
+      Contents.addAll(MakeRemarkBlock("Here gate " + i + " is described", 3));
       Contents.addAll(GetLogicFunction(i));
     }
     return Contents;

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -358,7 +358,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
       handleMoveDrag(canvas, curDx, curDy, e.getModifiersEx());
     } else {
       SortedSet<Component> comps =
-          AutoLabel.Sort(canvas.getProject().getSelection().getComponents());
+          AutoLabel.sort(canvas.getProject().getSelection().getComponents());
       int KeybEvent = e.getKeyCode();
       boolean KeyTaken = false;
       for (Component comp : comps) {
@@ -376,7 +376,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
               new SetAttributeAction(
                   canvas.getCircuit(), S.getter("changeComponentAttributesAction"));
           KeyTaken |=
-              AutoLabler.LabelKeyboardHandler(
+              AutoLabler.labelKeyboardHandler(
                   KeybEvent,
                   comp.getAttributeSet(),
                   comp.getFactory().getDisplayName(),
@@ -556,7 +556,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {
             SetAttributeAction act =
                 new SetAttributeAction(
                     canvas.getCircuit(), S.getter("changeComponentAttributesAction"));
-            AutoLabler.AskAndSetLabel(
+            AutoLabler.askAndSetLabel(
                 comp.getFactory().getDisplayName(),
                 OldLabel,
                 canvas.getCircuit(),

File: src/main/java/com/cburch/logisim/util/AlphanumComparator.java
Patch:
@@ -29,6 +29,7 @@
  */
 
 package com.cburch.logisim.util;
+
 import java.util.Arrays;
 import java.util.Comparator;
 import java.util.List;
@@ -46,7 +47,7 @@ private boolean isDigit(char ch) {
     return ((ch >= 48) && (ch <= 57));
   }
 
-  /** Length of string is passed in for improved efficiency (only need to calculate it once) * */
+  /** Length of string is passed in for improved efficiency (only need to calculate it once). */
   private String getChunk(String s, int slength, int marker) {
     StringBuilder chunk = new StringBuilder();
     char c = s.charAt(marker);

File: src/main/java/com/cburch/logisim/util/GraphicsUtil.java
Patch:
@@ -64,7 +64,7 @@ public static void drawArrow2(Graphics g, int x0, int y0, int x1, int y1, int x2
     int[] ys = {y0, y1, y2};
     GraphicsUtil.switchToWidth(g, 7);
     g.drawPolyline(xs, ys, 3);
-    Color oldColor = g.getColor();
+    final Color oldColor = g.getColor();
     g.setColor(Color.WHITE);
     GraphicsUtil.switchToWidth(g, 3);
     g.drawPolyline(xs, ys, 3);

File: src/main/java/com/cburch/logisim/util/Icons.java
Patch:
@@ -51,7 +51,8 @@ public static ImageIcon getIcon(String name) {
     return icon;
   }
 
-  public static void paintRotated(Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
+  public static void paintRotated(
+      Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
     if (!(g instanceof Graphics2D) || dir == Direction.EAST) {
       icon.paintIcon(dest, g, x, y);
       return;

File: src/main/java/com/cburch/logisim/util/InputEventUtil.java
Patch:
@@ -51,9 +51,8 @@ public static int fromDisplayString(String str) {
     }
     return ret;
   }
-  
-  private static int parseInput(String s)
-  {
+
+  private static int parseInput(String s) {
     switch (s) {
       case CTRL:
         return InputEvent.CTRL_DOWN_MASK;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -183,10 +183,10 @@ public void setValueRequested(Attribute<Object> attr, Object value) throws AttrT
           if (attr.equals(StdAttr.LABEL)) {
             if (labler.hasNext(circuit)) {
               if (comps.size() > 1) {
-                act.set(comp, attr, labler.GetNext(circuit, comp.getFactory()));
+                act.set(comp, attr, labler.getNext(circuit, comp.getFactory()));
               } else {
                 if (getAttributeSet().getValue(StdAttr.LABEL).equals(value)) return;
-                else act.set(comp, attr, labler.GetCurrent(circuit, comp.getFactory()));
+                else act.set(comp, attr, labler.getCurrent(circuit, comp.getFactory()));
               }
             } else act.set(comp, attr, "");
           } else act.set(comp, attr, value);

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -77,8 +77,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist, AttributeSet
     ArrayList<String> Contents = new ArrayList<>();
     int NrOfGates = (IsInverter()) ? 6 : 4;
     for (int i = 0; i < NrOfGates; i++) {
-      Contents.addAll(
-          MakeRemarkBlock("Here gate " + i + " is described", 3));
+      Contents.addAll(MakeRemarkBlock("Here gate " + i + " is described", 3));
       Contents.addAll(GetLogicFunction(i));
     }
     return Contents;

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -358,7 +358,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
       handleMoveDrag(canvas, curDx, curDy, e.getModifiersEx());
     } else {
       SortedSet<Component> comps =
-          AutoLabel.Sort(canvas.getProject().getSelection().getComponents());
+          AutoLabel.sort(canvas.getProject().getSelection().getComponents());
       int KeybEvent = e.getKeyCode();
       boolean KeyTaken = false;
       for (Component comp : comps) {
@@ -376,7 +376,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
               new SetAttributeAction(
                   canvas.getCircuit(), S.getter("changeComponentAttributesAction"));
           KeyTaken |=
-              AutoLabler.LabelKeyboardHandler(
+              AutoLabler.labelKeyboardHandler(
                   KeybEvent,
                   comp.getAttributeSet(),
                   comp.getFactory().getDisplayName(),
@@ -556,7 +556,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {
             SetAttributeAction act =
                 new SetAttributeAction(
                     canvas.getCircuit(), S.getter("changeComponentAttributesAction"));
-            AutoLabler.AskAndSetLabel(
+            AutoLabler.askAndSetLabel(
                 comp.getFactory().getDisplayName(),
                 OldLabel,
                 canvas.getCircuit(),

File: src/main/java/com/cburch/logisim/util/AlphanumComparator.java
Patch:
@@ -29,6 +29,7 @@
  */
 
 package com.cburch.logisim.util;
+
 import java.util.Arrays;
 import java.util.Comparator;
 import java.util.List;
@@ -46,7 +47,7 @@ private boolean isDigit(char ch) {
     return ((ch >= 48) && (ch <= 57));
   }
 
-  /** Length of string is passed in for improved efficiency (only need to calculate it once) * */
+  /** Length of string is passed in for improved efficiency (only need to calculate it once). */
   private String getChunk(String s, int slength, int marker) {
     StringBuilder chunk = new StringBuilder();
     char c = s.charAt(marker);

File: src/main/java/com/cburch/logisim/util/GraphicsUtil.java
Patch:
@@ -64,7 +64,7 @@ public static void drawArrow2(Graphics g, int x0, int y0, int x1, int y1, int x2
     int[] ys = {y0, y1, y2};
     GraphicsUtil.switchToWidth(g, 7);
     g.drawPolyline(xs, ys, 3);
-    Color oldColor = g.getColor();
+    final Color oldColor = g.getColor();
     g.setColor(Color.WHITE);
     GraphicsUtil.switchToWidth(g, 3);
     g.drawPolyline(xs, ys, 3);

File: src/main/java/com/cburch/logisim/util/Icons.java
Patch:
@@ -51,7 +51,8 @@ public static ImageIcon getIcon(String name) {
     return icon;
   }
 
-  public static void paintRotated(Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
+  public static void paintRotated(
+      Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
     if (!(g instanceof Graphics2D) || dir == Direction.EAST) {
       icon.paintIcon(dest, g, x, y);
       return;

File: src/main/java/com/cburch/logisim/util/InputEventUtil.java
Patch:
@@ -51,9 +51,8 @@ public static int fromDisplayString(String str) {
     }
     return ret;
   }
-  
-  private static int parseInput(String s)
-  {
+
+  private static int parseInput(String s) {
     switch (s) {
       case CTRL:
         return InputEvent.CTRL_DOWN_MASK;

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/SimpleDRCContainer.java
Patch:
@@ -163,8 +163,8 @@ public void MarkComponents() {
         }
       } else if (obj instanceof InstanceComponent) {
         InstanceComponent comp = (InstanceComponent) obj;
-        if ((MarkType & MARK_INSTANCE) != 0) comp.MarkInstance();
-        if ((MarkType & MARK_LABEL) != 0) comp.MarkLabel();
+        if ((MarkType & MARK_INSTANCE) != 0) comp.markInstance();
+        if ((MarkType & MARK_LABEL) != 0) comp.markLabel();
       } else {
       }
     }

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -85,7 +85,7 @@ public void computeEnabled() {
     Selection sel = canvas.getSelection();
     boolean selEmpty = sel.isEmpty();
     boolean canChange = proj.getLogisimFile().contains(circ);
-    boolean clipExists = !Clipboard.isEmpty();
+    final boolean clipExists = !Clipboard.isEmpty();
     boolean selHasRemovable = false;
     for (CanvasObject o : sel.getSelected()) {
       if (!(o instanceof AppearanceElement)) {

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardActions.java
Patch:
@@ -49,6 +49,7 @@ public class ClipboardActions extends Action {
   private final Map<CanvasObject, Integer> affected;
   private final ClipboardContents newClipboard;
   private ClipboardContents oldClipboard;
+
   private ClipboardActions(boolean remove, AppearanceCanvas canvas) {
     this.remove = remove;
     this.canvas = canvas;

File: src/main/java/com/cburch/logisim/gui/chrono/PopupMenu.java
Patch:
@@ -46,6 +46,7 @@ public class PopupMenu extends MouseAdapter {
 
   private class PopupContents extends JPopupMenu {
     private static final long serialVersionUID = 1L;
+
     public PopupContents() {
       super("Options");
       RadixOption radix = null;
@@ -59,7 +60,7 @@ public PopupContents() {
       }
       ButtonGroup g = new ButtonGroup();
       for (RadixOption r : RadixOption.OPTIONS) {
-        JRadioButtonMenuItem m = new JRadioButtonMenuItem(r.toDisplayString()); 
+        JRadioButtonMenuItem m = new JRadioButtonMenuItem(r.toDisplayString());
         add(m);
         m.setEnabled(signals.size() > 0);
         g.add(m);
@@ -91,7 +92,7 @@ public PopupContents() {
 
   private final List<Signal> signals;
   private final ChronoPanel chronoPanel;
-  
+
   public PopupMenu(ChronoPanel p, List<Signal> s) {
     chronoPanel = p;
     signals = s;

File: src/main/java/com/cburch/logisim/gui/generic/AttrTable.java
Patch:
@@ -77,6 +77,7 @@ public class AttrTable extends JPanel implements LocaleListener {
   private final TableModelAdapter tableModel;
   private final CellEditor editor = new CellEditor();
   private boolean titleEnabled;
+
   public AttrTable(Window parent) {
     super(new BorderLayout());
     this.parent = parent;

File: src/main/java/com/cburch/logisim/gui/generic/CanvasPane.java
Patch:
@@ -47,6 +47,7 @@ public class CanvasPane extends JScrollPane {
   private final Listener listener;
   private final ZoomListener zoomListener;
   private ZoomModel zoomModel;
+
   public CanvasPane(CanvasPaneContents contents) {
     super((Component) contents);
     this.contents = contents;

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerToolNode.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.gui.generic;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.circuit.CircuitEvent;
 import com.cburch.logisim.circuit.CircuitListener;
@@ -42,6 +39,9 @@
 import com.cburch.logisim.vhdl.base.VhdlContent;
 import com.cburch.logisim.vhdl.base.VhdlEntity;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class ProjectExplorerToolNode extends ProjectExplorerModel.Node<Tool>
     implements CircuitListener, HdlModelListener {
 

File: src/main/java/com/cburch/logisim/gui/generic/TikZWriter.java
Patch:
@@ -479,11 +479,11 @@ public boolean drawImage(
   public void dispose() {}
 
   public void WriteFile(File outfile) throws IOException {
-    MyInfo.WriteFile(outfile);
+    MyInfo.writeFile(outfile);
   }
 
   public void WriteSvg(int width, int height, File outfile)
       throws ParserConfigurationException, TransformerException {
-    MyInfo.WriteSvg(width, height, outfile);
+    MyInfo.writeSvg(width, height, outfile);
   }
 }

File: src/main/java/com/cburch/logisim/gui/icons/LedBarIcon.java
Patch:
@@ -41,7 +41,8 @@ protected void paintIcon(Graphics2D g2) {
     g2.setColor(Color.DARK_GRAY);
     g2.fillRect(0, 0, getIconWidth(), getIconHeight());
 
-    Color col1, col2;
+    Color col1;
+    Color col2;
     switch (state) {
       case 0:
         col1 = Color.gray;

File: src/main/java/com/cburch/logisim/gui/icons/SevenSegmentIcon.java
Patch:
@@ -38,9 +38,9 @@ public class SevenSegmentIcon extends AnimatedIcon {
   private final boolean isHexDisplay;
   private int state;
 
-  public SevenSegmentIcon(boolean HexDisplay) {
-    isHexDisplay = HexDisplay;
-    state = (HexDisplay) ? -1 : 3;
+  public SevenSegmentIcon(boolean isHexDisplay) {
+    this.isHexDisplay = isHexDisplay;
+    state = (isHexDisplay) ? -1 : 3;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -50,6 +50,7 @@ public void resetToStatic() {
     state = -1;
   }
 
+
   @Override
   protected void paintIcon(Graphics2D g2) {
     StringBuilder s = new StringBuilder();

File: src/main/java/com/cburch/logisim/gui/log/ValueTable.java
Patch:
@@ -28,9 +28,6 @@
 
 package com.cburch.logisim.gui.log;
 
-/**
- * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
- */
 import static com.cburch.logisim.gui.Strings.S;
 
 import com.cburch.logisim.data.BitWidth;
@@ -53,6 +50,9 @@
 import javax.swing.event.ChangeEvent;
 import javax.swing.event.ChangeListener;
 
+/**
+ * Code taken from Cornell's version of Logisim: http://www.cs.cornell.edu/courses/cs3410/2015sp/
+ */
 public class ValueTable extends JPanel {
 
   private static final long serialVersionUID = 1L;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableComponentModel.java
Patch:
@@ -50,7 +50,7 @@ class AttrTableComponentModel extends AttributeSetTableModel {
     this.proj = proj;
     this.circ = circ;
     this.comp = comp;
-    SetInstance(comp.getFactory());
+    setInstance(comp.getFactory());
   }
 
   public Circuit getCircuit() {

File: src/main/java/com/cburch/logisim/gui/main/AttrTableToolModel.java
Patch:
@@ -50,8 +50,8 @@ public AttrTableToolModel(Project proj, Tool tool) {
     super(tool.getAttributeSet());
     if (tool instanceof AddTool) {
       AddTool mytool = (AddTool) tool;
-      SetInstance(mytool.getFactory());
-      SetIsTool();
+      setInstance(mytool.getFactory());
+      setIsTool();
     }
     this.proj = proj;
     this.tool = tool;

File: src/main/java/com/cburch/logisim/gui/main/ExportImage.java
Patch:
@@ -130,8 +130,8 @@ public static void doExport(Project proj) {
             OptionPane.QUESTION_MESSAGE);
     if (action != OptionPane.OK_OPTION) return;
     List<Circuit> circuits = list.getSelectedCircuits();
-    double scale = options.getScale();
-    boolean printerView = options.getPrinterView();
+    final double scale = options.getScale();
+    final boolean printerView = options.getPrinterView();
     if (circuits.isEmpty()) return;
 
     int fmt = options.getImageFormat();

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -235,10 +235,10 @@ public void paintIcon(Component destination, Graphics g) {
 
       // draw tool icon
       g.setColor(Color.BLACK);
-      Graphics g_copy = g.create();
-      ComponentDrawContext c = new ComponentDrawContext(destination, null, null, g, g_copy);
+      var gfxCopy = g.create();
+      var c = new ComponentDrawContext(destination, null, null, g, gfxCopy);
       tool.paintIcon(c, AppPreferences.IconBorder, AppPreferences.IconBorder);
-      g_copy.dispose();
+      gfxCopy.dispose();
     }
   }
 }

File: src/main/java/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -309,7 +309,7 @@ private void updateList(boolean ignoreIfSelectionSame) {
         this.selected = newSel;
       }
     } else {
-      Attribute<?>[] oldAttrs = this.attrs;
+      final Attribute<?>[] oldAttrs = this.attrs;
       Object[] oldValues = this.values;
       Attribute<?>[] newAttrs = new Attribute[attrMap.size()];
       Object[] newValues = new Object[newAttrs.length];

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeCircuitNode.java
Patch:
@@ -88,9 +88,9 @@ public void circuitChanged(CircuitEvent event) {
 
   public int compare(Component a, Component b) {
     if (a != b) {
-      String aName = a.getFactory().getDisplayName();
-      String bName = b.getFactory().getDisplayName();
-      int ret = aName.compareToIgnoreCase(bName);
+      var nameA = a.getFactory().getDisplayName();
+      var nameB = b.getFactory().getDisplayName();
+      int ret = nameA.compareToIgnoreCase(nameB);
       if (ret != 0) return ret;
     }
     return a.getLocation().toString().compareTo(b.getLocation().toString());

File: src/main/java/com/cburch/logisim/gui/main/Toolbox.java
Patch:
@@ -48,7 +48,7 @@ class Toolbox extends JPanel {
     Toolbar toolbar = new Toolbar(toolbarModel);
     add(toolbar, BorderLayout.NORTH);
 
-    toolbox = new ProjectExplorer(proj,false);
+    toolbox = new ProjectExplorer(proj, false);
     toolbox.setListener(new ToolboxManip(proj, toolbox));
     add(new JScrollPane(toolbox), BorderLayout.CENTER);
 

File: src/main/java/com/cburch/logisim/gui/main/ToolboxManip.java
Patch:
@@ -150,8 +150,8 @@ public JPopupMenu menuRequested(ProjectExplorer.Event event) {
       if (lib == proj.getLogisimFile()) {
         return Popups.forProject(proj);
       } else {
-        boolean is_top = event.getTreePath().getPathCount() <= 2;
-        return Popups.forLibrary(proj, lib, is_top);
+        final var isTop = event.getTreePath().getPathCount() <= 2;
+        return Popups.forLibrary(proj, lib, isTop);
       }
     } else {
       return null;

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -113,9 +113,9 @@ public int getIconWidth() {
     }
 
     public void paintIcon(Component comp, Graphics g, int x, int y) {
-      Graphics gNew = g.create();
-      tool.paintIcon(new ComponentDrawContext(comp, null, null, g, gNew), x + 2, y + 2);
-      gNew.dispose();
+      var gfxNew = g.create();
+      tool.paintIcon(new ComponentDrawContext(comp, null, null, g, gfxNew), x + 2, y + 2);
+      gfxNew.dispose();
     }
   }
 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -596,7 +596,7 @@ boolean FpgaDownload(Project proj) {
             proj,
             testCircuitImpName,
             testTickFrequency,
-            new BoardReaderClass(AppPreferences.Boards.GetBoardFilePath(testCircuitImpBoard))
+            new BoardReaderClass(AppPreferences.Boards.getBoardFilePath(testCircuitImpBoard))
                 .GetBoardInformation(),
             testCircuitImpMapFile,
             false,

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -135,7 +135,8 @@ public Circuit getCircuit() {
   }
 
   /**
-   * @brief this function will return the instance data information
+   * This medthod returns the instance data information.
+   *
    * @pre it assumes that your circuit was instantiate before.
    */
   public InstanceData getData() {
@@ -147,7 +148,7 @@ public InstanceData getData() {
       return (InstanceData) circState.getData(comp);
     }
   }
-  
+
   public CircuitState getCircuitState() {
     return context.getCircuitState();
   }

File: src/main/java/com/cburch/logisim/prefs/ConvertEvent.java
Patch:
@@ -37,7 +37,7 @@ public ConvertEvent(AttributeOption value) {
     this.value = value;
   }
 
-  public AttributeOption GetValue() {
+  public AttributeOption getValue() {
     return value;
   }
 }

File: src/main/java/com/cburch/logisim/prefs/ConvertEventListener.java
Patch:
@@ -29,5 +29,5 @@
 package com.cburch.logisim.prefs;
 
 public interface ConvertEventListener {
-  void AttributeValueChanged(ConvertEvent e);
+  void attributeValueChanged(ConvertEvent e);
 }

File: src/main/java/com/cburch/logisim/proj/ProjectEvent.java
Patch:
@@ -50,7 +50,7 @@ public class ProjectEvent {
 
   private final int action;
   private final Project proj;
-  private Object old_data;
+  private Object oldData;
   private final Object data;
 
   ProjectEvent(int action, Project proj) {
@@ -68,7 +68,7 @@ public class ProjectEvent {
   ProjectEvent(int action, Project proj, Object old, Object data) {
     this.action = action;
     this.proj = proj;
-    this.old_data = old;
+    this.oldData = old;
     this.data = data;
   }
 
@@ -91,7 +91,7 @@ public LogisimFile getLogisimFile() {
   }
 
   public Object getOldData() {
-    return old_data;
+    return oldData;
   }
 
   public Project getProject() {

File: src/main/java/com/cburch/logisim/std/wiring/ProbeAttributes.java
Patch:
@@ -138,7 +138,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
   }
 
   @Override
-  public void AttributeValueChanged(ConvertEvent e) {
-    setValue(PROBEAPPEARANCE, e.GetValue());
+  public void attributeValueChanged(ConvertEvent e) {
+    setValue(PROBEAPPEARANCE, e.getValue());
   }
 }

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1326,7 +1326,7 @@ public long[] rleNextVals() throws IOException {
         try {
           rleValue = Long.parseUnsignedLong(hexWord, 16);
         } catch (NumberFormatException e) {
-          try {            
+          try {
             rleValue = Long.parseLong(hexWord, 16);
           } catch (NumberFormatException f) {
             warn("\"%s\" is not valid hex data.", hexWord);
@@ -1337,7 +1337,7 @@ public long[] rleNextVals() throws IOException {
           rleCount = 1;
         } else {
           try {
-            rleValue = Long.parseUnsignedLong(word.substring(0), star);
+            rleCount = Long.parseUnsignedLong(word.substring(0, star));
           } catch (NumberFormatException e) {
             warn("\"%s\" is not valid (base-10 decimal) count.", word.substring(0, star));
             continue;

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1326,7 +1326,7 @@ public long[] rleNextVals() throws IOException {
         try {
           rleValue = Long.parseUnsignedLong(hexWord, 16);
         } catch (NumberFormatException e) {
-          try {            
+          try {
             rleValue = Long.parseLong(hexWord, 16);
           } catch (NumberFormatException f) {
             warn("\"%s\" is not valid hex data.", hexWord);
@@ -1337,7 +1337,7 @@ public long[] rleNextVals() throws IOException {
           rleCount = 1;
         } else {
           try {
-            rleValue = Long.parseUnsignedLong(word.substring(0), star);
+            rleCount = Long.parseUnsignedLong(word.substring(0, star));
           } catch (NumberFormatException e) {
             warn("\"%s\" is not valid (base-10 decimal) count.", word.substring(0, star));
             continue;

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -42,7 +42,7 @@
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.Projects;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.Tool;
@@ -282,7 +282,7 @@ public void addVhdlContent(VhdlContent content, int index) {
   }
 
   public void addLibrary(Library lib) {
-    if (!lib.getName().equals(Base._ID)) {
+    if (!lib.getName().equals(BaseLibrary._ID)) {
       for (Tool tool : lib.getTools()) {
         AddTool tool1 = (AddTool) tool;
         AttributeSet atrs = tool1.getAttributeSet();

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.file.LibraryEvent;
 import com.cburch.logisim.file.LibraryListener;
 import com.cburch.logisim.file.LogisimFile;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Library;
 import java.util.ArrayList;
@@ -67,7 +67,7 @@ public class ProjectExplorerLibraryNode extends ProjectExplorerModel.Node<Librar
   private void buildChildren() {
     Library lib = getValue();
     if (lib != null) {
-      boolean showLib = (showMouseTools & lib instanceof Base) || !lib.isHidden();
+      boolean showLib = (showMouseTools & lib instanceof BaseLibrary) || !lib.isHidden();
       if (showLib) {
         buildChildren(new ProjectExplorerToolNode(getModel(), null), lib.getTools(), 0);
         buildChildren(
@@ -107,7 +107,7 @@ private <T> void buildChildren(
     for (T tool : items) {
       if (tool instanceof Library && ((Library) tool).isHidden()) {
         if (!showMouseTools) continue;
-        else if (!(tool instanceof Base)) continue;
+        else if (!(tool instanceof BaseLibrary)) continue;
       }
       if (tool instanceof AddTool) {
         AddTool a = (AddTool) tool;

File: src/main/java/com/cburch/logisim/gui/main/ToolboxManip.java
Patch:
@@ -49,7 +49,7 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.ProjectEvent;
 import com.cburch.logisim.proj.ProjectListener;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.EditTool;
 import com.cburch.logisim.tools.Library;
@@ -77,7 +77,7 @@ private static void setDefaultTool(Tool lastSelected, Project proj) {
       proj.setTool(lastSelected);
     } else {
       for (Library sub : proj.getLogisimFile().getLibraries()) {
-        if (sub instanceof Base) {
+        if (sub instanceof BaseLibrary) {
           Tool tool = sub.getTool(EditTool._ID);
           if (tool != null) {
             proj.setTool(tool);

File: src/main/java/com/cburch/logisim/std/arith/ArithmeticLibrary.java
Patch:
@@ -35,14 +35,14 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Arithmetic extends Library {
+public class ArithmeticLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "Arithmetic";
+  public static final String _ID = "ArithmeticLibrary";
 
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(Adder.class, S.getter("adderComponent"), "adder.gif"),
@@ -66,7 +66,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Arithmetic.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(ArithmeticLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/base/BaseLibrary.java
Patch:
@@ -43,20 +43,20 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Base extends Library {
+public class BaseLibrary extends Library {
   /**
    * Unique identifier of the tool, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all tools.
    */
-  public static final String _ID = "Base";
+  public static final String _ID = "BaseLibrary";
 
   private final List<Tool> tools;
   private final AddTool textAdder = new AddTool(Text.FACTORY);
   private final SelectTool selectTool = new SelectTool();
 
-  public Base() {
+  public BaseLibrary() {
     setHidden();
     WiringTool wiring = new WiringTool();
 

File: src/main/java/com/cburch/logisim/std/bfh/BFHLibrary.java
Patch:
@@ -35,14 +35,14 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class BFHPraktika extends Library {
+public class BfhLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "BFH-Praktika";
+  public static final String _ID = "BFH-Library";
 
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(bin2bcd.class, S.getter("Bin2BCD")),
@@ -59,7 +59,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(BFHPraktika.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(BfhLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/gates/GatesLibrary.java
Patch:
@@ -36,19 +36,19 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Gates extends Library {
+public class GatesLibrary extends Library {
 
   /**
    * Unique identifier of the tool, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all tools.
    */
-  public static final String _ID = "Gates";
+  public static final String _ID = "GatesLibrary";
 
   private List<Tool> tools = null;
 
-  public Gates() {
+  public GatesLibrary() {
     tools =
         Arrays.asList(
             new Tool[] {

File: src/main/java/com/cburch/logisim/std/io/Button.java
Patch:
@@ -117,7 +117,7 @@ public Button() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -187,7 +187,7 @@ public void paintInstance(InstancePainter painter) {
       val = Value.FALSE;
     }
 
-    Color color = painter.getAttributeValue(Io.ATTR_COLOR);
+    Color color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/io/IoLibrary.java
Patch:
@@ -40,14 +40,14 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class Io extends Library {
+public class IoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files. Do NOT change as it will
    * prevent project files from loading.
    *
    * <p>Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "I/O";
+  public static final String _ID = "I/O-Library";
 
   public static final Attribute<Color> ATTR_COLOR =
       Attributes.forColor("color", S.getter("ioColorAttr"));
@@ -89,7 +89,7 @@ public String getDisplayName() {
   public List<Tool> getTools() {
     if (tools == null) {
       tools = new ArrayList<>();
-      tools.addAll(FactoryDescription.getTools(Io.class, DESCRIPTIONS));
+      tools.addAll(FactoryDescription.getTools(IoLibrary.class, DESCRIPTIONS));
       tools.add(new AddTool(Video.factory));
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/Joystick.java
Patch:
@@ -99,7 +99,7 @@ public void paint(InstancePainter painter) {
       int x1 = x - 15 + dx;
       int y1 = y + 5 + dy;
       g.drawLine(x0, y0, x1, y1);
-      Color ballColor = painter.getAttributeValue(Io.ATTR_COLOR);
+      Color ballColor = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
       Joystick.drawBall(g, x1, y1, ballColor, true);
     }
 
@@ -158,7 +158,7 @@ private static void drawBall(Graphics g, int x, int y, Color c, boolean inColor)
   public Joystick() {
     super(_ID, S.getter("joystickComponent"));
     setAttributes(
-        new Attribute[] {ATTR_WIDTH, Io.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
+        new Attribute[] {ATTR_WIDTH, IoLibrary.ATTR_COLOR}, new Object[] {BitWidth.create(4), Color.RED});
     setKeyConfigurator(new BitWidthConfigurator(ATTR_WIDTH, 2, 5));
     setOffsetBounds(Bounds.create(-30, -10, 30, 30));
     setIcon(new JoystickIcon());
@@ -185,7 +185,7 @@ public void paintInstance(InstancePainter painter) {
     Graphics g = painter.getGraphics();
     g.drawRoundRect(x - 30, y - 10, 30, 30, 8, 8);
     g.drawRoundRect(x - 28, y - 8, 26, 26, 4, 4);
-    drawBall(g, x - 15, y + 5, painter.getAttributeValue(Io.ATTR_COLOR), painter.shouldDrawColor());
+    drawBall(g, x - 15, y + 5, painter.getAttributeValue(IoLibrary.ATTR_COLOR), painter.shouldDrawColor());
     painter.drawPorts();
   }
 

File: src/main/java/com/cburch/logisim/std/io/LedShape.java
Patch:
@@ -78,8 +78,8 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public void paintDynamic(Graphics g, CircuitState state) {
-    Color offColor = path.leaf().getAttributeSet().getValue(Io.ATTR_OFF_COLOR);
-    Color onColor = path.leaf().getAttributeSet().getValue(Io.ATTR_ON_COLOR);
+    Color offColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_OFF_COLOR);
+    Color onColor = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ON_COLOR);
     int x = bounds.getX() + 1;
     int y = bounds.getY() + 1;
     int w = bounds.getWidth() - 2;
@@ -90,7 +90,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      Boolean activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      Boolean activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       Object desired = activ ? Value.TRUE : Value.FALSE;
       InstanceDataSingleton data = (InstanceDataSingleton) getData(state);
       Value val = data == null ? Value.FALSE : (Value) data.getValue();

File: src/main/java/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -110,7 +110,7 @@ public RGBLed() {
     setAttributes(
         new Attribute[] {
           StdAttr.FACING,
-          Io.ATTR_ACTIVE,
+          IoLibrary.ATTR_ACTIVE,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT,
@@ -162,7 +162,7 @@ private void updatePorts(Instance instance) {
 
   @Override
   public boolean ActiveOnHigh(AttributeSet attrs) {
-    return attrs.getValue(Io.ATTR_ACTIVE);
+    return attrs.getValue(IoLibrary.ATTR_ACTIVE);
   }
 
   @Override
@@ -211,7 +211,7 @@ public void paintInstance(InstancePainter painter) {
 
     Graphics g = painter.getGraphics();
     if (painter.getShowState()) {
-      Boolean activ = painter.getAttributeValue(Io.ATTR_ACTIVE);
+      Boolean activ = painter.getAttributeValue(IoLibrary.ATTR_ACTIVE);
       int mask = activ ? 0 : 7;
       summ ^= mask;
       int red = ((summ >> RED) & 1) * 0xFF;

File: src/main/java/com/cburch/logisim/std/io/RGBLedShape.java
Patch:
@@ -57,7 +57,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       g.fillOval(x, y, w, h);
       g.setColor(DynamicElement.COLOR);
     } else {
-      Boolean activ = path.leaf().getAttributeSet().getValue(Io.ATTR_ACTIVE);
+      Boolean activ = path.leaf().getAttributeSet().getValue(IoLibrary.ATTR_ACTIVE);
       InstanceDataSingleton data = (InstanceDataSingleton) getData(state);
       int summ = (data == null ? 0 : (Integer) data.getValue());
       int mask = activ ? 0 : 7;

File: src/main/java/com/cburch/logisim/std/io/Tty.java
Patch:
@@ -94,7 +94,7 @@ public Tty() {
     super(_ID, S.getter("ttyComponent"));
     setAttributes(
         new Attribute[] {
-          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, Io.ATTR_COLOR, Io.ATTR_BACKGROUND
+          ATTR_ROWS, ATTR_COLUMNS, StdAttr.EDGE_TRIGGER, IoLibrary.ATTR_COLOR, IoLibrary.ATTR_BACKGROUND
         },
         new Object[] {
             8,
@@ -168,7 +168,7 @@ public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getBounds();
     painter.drawClock(CK, Direction.EAST);
     if (painter.shouldDrawColor()) {
-      g.setColor(painter.getAttributeValue(Io.ATTR_BACKGROUND));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_BACKGROUND));
       g.fillRoundRect(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight(), 10, 10);
     }
     GraphicsUtil.switchToWidth(g, 2);
@@ -197,7 +197,7 @@ public void paintInstance(InstancePainter painter) {
       }
 
       g.setFont(DEFAULT_FONT);
-      g.setColor(painter.getAttributeValue(Io.ATTR_COLOR));
+      g.setColor(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
       FontMetrics fm = g.getFontMetrics();
       int x = bds.getX() + BORDER;
       int y = bds.getY() + BORDER + (ROW_HEIGHT + fm.getAscent()) / 2;

File: src/main/java/com/cburch/logisim/std/io/extra/ExtraIoLibrary.java
Patch:
@@ -37,14 +37,14 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class ITA_IO extends Library {
+public class ExtraIoLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "Input/Output-Extra";
+  public static final String _ID = "ExtraIO-Library";
 
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(Switch.class, S.getter("switchComponent"), "switch.gif"),
@@ -75,7 +75,7 @@ public List<? extends Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(ITA_IO.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(ExtraIoLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.LocaleManager;
 import java.awt.Color;
@@ -206,7 +206,7 @@ public Slider() {
           StdAttr.FACING,
           StdAttr.WIDTH,
           RadixOption.ATTRIBUTE,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_FONT,
           StdAttr.LABEL_VISIBILITY,
@@ -280,7 +280,7 @@ public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getBounds();
     SliderValue data = getValueState(painter);
     int x = bds.getX(), y = bds.getY();
-    painter.drawRoundBounds(painter.getAttributeValue(Io.ATTR_COLOR));
+    painter.drawRoundBounds(painter.getAttributeValue(IoLibrary.ATTR_COLOR));
     GraphicsUtil.switchToWidth(g, 2);
     // slider line
     g.drawLine(x + 10, y + bds.getHeight() - 10, x + bds.getWidth() - 10, y + bds.getHeight() - 10);

File: src/main/java/com/cburch/logisim/std/io/extra/Switch.java
Patch:
@@ -47,7 +47,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
-import com.cburch.logisim.std.io.Io;
+import com.cburch.logisim.std.io.IoLibrary;
 import com.cburch.logisim.tools.key.DirectionConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import java.awt.Color;
@@ -107,7 +107,7 @@ public Switch() {
         new Attribute[] {
           StdAttr.FACING,
           StdAttr.WIDTH,
-          Io.ATTR_COLOR,
+          IoLibrary.ATTR_COLOR,
           StdAttr.LABEL,
           StdAttr.LABEL_LOC,
           StdAttr.LABEL_FONT
@@ -170,7 +170,7 @@ private void paint(InstancePainter painter, boolean ghost) {
       active = data != null && (Boolean) data.getValue();
     }
 
-    Color color = painter.getAttributeValue(Io.ATTR_COLOR);
+    Color color = painter.getAttributeValue(IoLibrary.ATTR_COLOR);
     if (!painter.shouldDrawColor()) {
       int hue = (color.getRed() + color.getGreen() + color.getBlue()) / 3;
       color = new Color(hue, hue, hue);

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlop.java
Patch:
@@ -430,8 +430,8 @@ public void propagate(InstanceState state) {
       }
     }
 
-    state.setPort(n + 1, data.curValue, Memory.DELAY);
-    state.setPort(n + 2, data.curValue.not(), Memory.DELAY);
+    state.setPort(n + 1, data.curValue, MemoryLibrary.DELAY);
+    state.setPort(n + 2, data.curValue.not(), MemoryLibrary.DELAY);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/MemoryLibrary.java
Patch:
@@ -35,14 +35,14 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Memory extends Library {
+public class MemoryLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "Memory";
+  public static final String _ID = "MemoryLibrary";
 
   protected static final int DELAY = 5;
 
@@ -69,7 +69,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Memory.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(MemoryLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -117,7 +117,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
 
   @Override
   public void paintGhost(InstancePainter painter) {
-    Plexers.drawTrapezoid(
+    PlexersLibrary.drawTrapezoid(
         painter.getGraphics(), painter.getBounds(), painter.getAttributeValue(StdAttr.FACING), 9);
   }
 
@@ -126,7 +126,7 @@ public void paintInstance(InstancePainter painter) {
     Graphics g = painter.getGraphics();
     Direction facing = painter.getAttributeValue(StdAttr.FACING);
 
-    Plexers.drawTrapezoid(g, painter.getBounds(), facing, 9);
+    PlexersLibrary.drawTrapezoid(g, painter.getBounds(), facing, 9);
     Bounds bds = painter.getBounds();
     g.setColor(Color.BLACK);
     GraphicsUtil.drawCenteredText(
@@ -160,7 +160,7 @@ public void propagate(InstanceState state) {
         group = Value.create(bits);
       }
     }
-    state.setPort(0, group, Plexers.DELAY);
+    state.setPort(0, group, PlexersLibrary.DELAY);
   }
 
   private void updatePorts(Instance instance) {

File: src/main/java/com/cburch/logisim/std/plexers/PlexersLibrary.java
Patch:
@@ -44,14 +44,14 @@
 import java.awt.Graphics;
 import java.util.List;
 
-public class Plexers extends Library {
+public class PlexersLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "Plexers";
+  public static final String _ID = "PlexersLibrary";
 
   static boolean contains(Location loc, Bounds bds, Direction facing) {
     if (bds.contains(loc, 1)) {
@@ -175,7 +175,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Plexers.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(PlexersLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/tcl/TclLibrary.java
Patch:
@@ -35,15 +35,15 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class Tcl extends Library {
+public class TclLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "TCL";
+  public static final String _ID = "TCL-Library";
 
   private static final FactoryDescription[] DESCRIPTIONS = {
     new FactoryDescription(TclConsoleReds.class, S.getter("tclConsoleReds"), "tcl.gif"),
@@ -60,7 +60,7 @@ public String getDisplayName() {
   @Override
   public List<Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(Tcl.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TclLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -121,6 +121,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return !attrs.getValue(TTL.VCC_GND);
+    return !attrs.getValue(TtlLibrary.VCC_GND);
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlops.java
Patch:
@@ -83,7 +83,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
     @Override
     public void mouseReleased(InstanceState state, MouseEvent e) {
-      if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE)) return;
+      if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE)) return;
       if (isPressed && isInside(state, e)) {
         int index = getIndex(state, e);
         TTLRegisterData myState = (TTLRegisterData) state.getData();

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -179,6 +179,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && (HDL.isVHDL()));
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && (HDL.isVHDL()));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410HDLGenerator.java
Patch:
@@ -125,6 +125,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7413HDLGenerator.java
Patch:
@@ -119,6 +119,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74161.java
Patch:
@@ -124,7 +124,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
         @Override
         public void mouseReleased(InstanceState state, MouseEvent e) {
-            if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE).booleanValue()) return;
+            if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE).booleanValue()) return;
             if (isPressed && isInside(state, e)) {
                 int index = getIndex(state, e);
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165.java
Patch:
@@ -108,7 +108,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
     @Override
     public void mouseReleased(InstanceState state, MouseEvent e) {
-      if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE)) return;
+      if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE)) return;
       if (isPressed && isInside(state, e)) {
         int index = getIndex(state, e);
         System.out.println(index);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -173,6 +173,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -172,6 +172,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -130,6 +130,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7430HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7442HDLGenerator.java
Patch:
@@ -160,6 +160,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -154,6 +154,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7451HDLGenerator.java
Patch:
@@ -107,6 +107,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454HDLGenerator.java
Patch:
@@ -104,6 +104,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7458HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464HDLGenerator.java
Patch:
@@ -111,6 +111,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND));
+    return (!attrs.getValue(TtlLibrary.VCC_GND));
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474.java
Patch:
@@ -91,7 +91,7 @@ public void mousePressed(InstanceState state, MouseEvent e) {
 
     @Override
     public void mouseReleased(InstanceState state, MouseEvent e) {
-      if (!state.getAttributeValue(TTL.DRAW_INTERNAL_STRUCTURE)) return;
+      if (!state.getAttributeValue(TtlLibrary.DRAW_INTERNAL_STRUCTURE)) return;
       if (isPressed && isInside(state, e)) {
         int index = getIndex(state, e);
         TTLRegisterData myState = (TTLRegisterData) state.getData();

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -182,6 +182,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -141,6 +141,6 @@ public String GetSubDir() {
   public boolean HDLTargetSupported(AttributeSet attrs) {
     /* TODO: Add support for the ones with VCC and Ground Pin */
     if (attrs == null) return false;
-    return (!attrs.getValue(TTL.VCC_GND) && HDL.isVHDL());
+    return (!attrs.getValue(TtlLibrary.VCC_GND) && HDL.isVHDL());
   }
 }

File: src/main/java/com/cburch/logisim/std/ttl/TtlLibrary.java
Patch:
@@ -37,14 +37,14 @@
 import com.cburch.logisim.tools.Tool;
 import java.util.List;
 
-public class TTL extends Library {
+public class TtlLibrary extends Library {
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "TTL";
+  public static final String _ID = "TTL-Library";
 
   private static final FactoryDescription[] DESCRIPTIONS = {
       new FactoryDescription(Ttl7400.class, S.getter("TTL7400"), "ttl.gif"),
@@ -97,7 +97,7 @@ public class TTL extends Library {
   @Override
   public List<? extends Tool> getTools() {
     if (tools == null) {
-      tools = FactoryDescription.getTools(TTL.class, DESCRIPTIONS);
+      tools = FactoryDescription.getTools(TtlLibrary.class, DESCRIPTIONS);
     }
     return tools;
   }

File: src/main/java/com/cburch/logisim/std/wiring/WiringLibrary.java
Patch:
@@ -42,15 +42,15 @@
 import java.util.Arrays;
 import java.util.List;
 
-public class Wiring extends Library {
+public class WiringLibrary extends Library {
 
   /**
    * Unique identifier of the library, used as reference in project files.
    * Do NOT change as it will prevent project files from loading.
    *
    * Identifier value must MUST be unique string among all libraries.
    */
-  public static final String _ID = "Wiring";
+  public static final String _ID = "WiringLibrary";
 
   static final AttributeOption GATE_TOP_LEFT =
       new AttributeOption("tl", S.getter("wiringGateTopLeftOption"));
@@ -94,7 +94,7 @@ public List<Tool> getTools() {
     if (tools == null) {
       List<Tool> ret = new ArrayList<>(ADD_TOOLS.length + DESCRIPTIONS.length);
       ret.addAll(Arrays.asList(ADD_TOOLS));
-      ret.addAll(FactoryDescription.getTools(Wiring.class, DESCRIPTIONS));
+      ret.addAll(FactoryDescription.getTools(WiringLibrary.class, DESCRIPTIONS));
       tools = ret;
     }
     return tools;

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -56,7 +56,7 @@
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.proj.Dependencies;
 import com.cburch.logisim.proj.Project;
-import com.cburch.logisim.std.base.Base;
+import com.cburch.logisim.std.base.BaseLibrary;
 import com.cburch.logisim.std.gates.GateKeyboardModifier;
 import com.cburch.logisim.std.wiring.ProbeAttributes;
 import com.cburch.logisim.tools.key.KeyConfigurationEvent;
@@ -205,7 +205,7 @@ private Tool determineNext(Project proj) {
     if (afterAdd.equals(AppPreferences.ADD_AFTER_UNCHANGED)) {
       return null;
     } else { // switch to Edit Tool
-      Library base = proj.getLogisimFile().getLibrary(Base._ID);
+      Library base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
       if (base == null) {
         return null;
       } else {
@@ -422,7 +422,7 @@ public void keyPressed(Canvas canvas, KeyEvent event) {
               break;
             case KeyEvent.VK_ESCAPE:
               Project proj = canvas.getProject();
-              Library base = proj.getLogisimFile().getLibrary(Base._ID);
+              Library base = proj.getLogisimFile().getLibrary(BaseLibrary._ID);
               Tool next = (base == null) ? null : base.getTool(EditTool._ID);
               if (next != null) {
                 proj.setTool(next);

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -106,7 +106,7 @@ static String attrsToString(NamedNodeMap a) {
   }
 
   static int stringCompare(String a, String b) {
-    if (a == b) return 0;
+    if (a.equals(b)) return 0;
     else if (a == null) return -1;
     else if (b == null) return 1;
     else return a.compareTo(b);

File: src/main/java/com/cburch/logisim/std/io/LedCluster.java
Patch:
@@ -119,8 +119,6 @@ public LedCluster() {
         JoinedConfigurator.create(
             new BitWidthConfigurator(ATTR_SIZE),
             new DirectionConfigurator(StdAttr.LABEL_LOC, KeyEvent.ALT_DOWN_MASK)));
-
-    System.out.print(LedCluster.class.getSimpleName()+"\n");
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/prefs/PreferencesFrame.java
Patch:
@@ -56,8 +56,6 @@ public class PreferencesFrame extends LFrame.Dialog {
   private PreferencesFrame() {
     super(null);
 
-    System.out.print("Prefs\n");
-
     panels =
         new OptionsPanel[] {
           new TemplateOptions(this),

File: src/main/java/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -380,9 +380,7 @@ private void updatePorts(Instance instance) {
       }
     } else {
       if (rows <= 1) {
-        ps = new Port[] {new Port(0, 0, Port.INPUT, cols)};
-      } else if (cols <= 1) {
-        ps = new Port[] {new Port(0, 0, Port.INPUT, rows)};
+        ps = new Port[] {new Port(0, 0, Port.INPUT, cols), new Port(10 * cols, 0, Port.INPUT, rows)};
       } else {
         ps = new Port[] {new Port(0, 0, Port.INPUT, cols), new Port(0, 10, Port.INPUT, rows)};
       }

File: src/main/java/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -380,9 +380,7 @@ private void updatePorts(Instance instance) {
       }
     } else {
       if (rows <= 1) {
-        ps = new Port[] {new Port(0, 0, Port.INPUT, cols)};
-      } else if (cols <= 1) {
-        ps = new Port[] {new Port(0, 0, Port.INPUT, rows)};
+        ps = new Port[] {new Port(0, 0, Port.INPUT, cols), new Port(10 * cols, 0, Port.INPUT, rows)};
       } else {
         ps = new Port[] {new Port(0, 0, Port.INPUT, cols), new Port(0, 10, Port.INPUT, rows)};
       }

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1470,9 +1470,9 @@ void decodeHexPlainWords() throws IOException {
       while ((word = nextWord()) != null) {
         int i = 0, n = word.length();
         if (n >= 2 && (word.startsWith("0x") || word.startsWith("0X"))) i += 2;
-        int v = 0;
+        long v = 0;
         for (; i < n; i++) {
-          int d;
+          long d;
           try {
             d = hex2int(word.charAt(i));
           } catch (NumberFormatException e) {

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -1470,9 +1470,9 @@ void decodeHexPlainWords() throws IOException {
       while ((word = nextWord()) != null) {
         int i = 0, n = word.length();
         if (n >= 2 && (word.startsWith("0x") || word.startsWith("0X"))) i += 2;
-        int v = 0;
+        long v = 0;
         for (; i < n; i++) {
-          int d;
+          long d;
           try {
             d = hex2int(word.charAt(i));
           } catch (NumberFormatException e) {

File: src/main/java/com/cburch/logisim/analyze/model/TruthTable.java
Patch:
@@ -663,7 +663,9 @@ private void removeInput(int index, int oldCount) {
       // force an Entry column of each row.input to 'x', then remove it
       int b = (1 << (oldCount - 1 - index)); // _0001000
       boolean[] changed = new boolean[columns.size()];
-      for (Row r : rows) {
+      // loop rows by index to avoid java.util.ConcurrentModificationException
+      for (int i = 0; i < rows.size(); ++i) {
+        Row r = rows.get(i);
         if (r.inputs[index] == Entry.DONT_CARE)
           continue;
         setDontCare(r, b, true, changed);

File: src/main/java/com/cburch/draw/icons/DrawCurveIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.geom.GeneralPath;
 
-public class DrawCurveIcon extends AnnimatedIcon {
+public class DrawCurveIcon extends AnimatedIcon {
 
   private int states = 5;
 
@@ -73,7 +73,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     states++;
     states %= 6;
   }

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class DrawLineIcon extends AnnimatedIcon {
+public class DrawLineIcon extends AnimatedIcon {
 
   private int state = 3;
 
@@ -61,7 +61,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/draw/icons/DrawPolylineIcon.java
Patch:
@@ -28,14 +28,14 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.geom.GeneralPath;
 
-public class DrawPolylineIcon extends AnnimatedIcon {
+public class DrawPolylineIcon extends AnimatedIcon {
 
   private static final int[] points = {1, 14, 1, 1, 7, 8, 13, 4, 10, 13};
   private boolean closed = false;
@@ -67,7 +67,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state++;
     if (state == 2) state++;
     state %= (points.length + 1);

File: src/main/java/com/cburch/draw/icons/DrawShapeIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class DrawShapeIcon extends AnnimatedIcon {
+public class DrawShapeIcon extends AnimatedIcon {
 
   public static final int RECTANGLE = 0;
   public static final int ROUNDEDRECTANGLE = 1;
@@ -67,7 +67,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableCsvFile.java
Patch:
@@ -91,12 +91,12 @@ public static void doSave(File file, AnalyzerModel model) throws IOException {
     }
   }
 
-  public static void doLoad(File file, AnalyzerModel model, JFrame parrentFrame)
+  public static void doLoad(File file, AnalyzerModel model, JFrame parentFrame)
       throws IOException {
     CsvParameter param = new CsvParameter();
-    new CsvReadParameterDialog(param, file, parrentFrame);
+    new CsvReadParameterDialog(param, file, parentFrame);
     if (!param.isValid()) return;
-    CsvInterpretor cin = new CsvInterpretor(file, param, parrentFrame);
+    CsvInterpretor cin = new CsvInterpretor(file, param, parentFrame);
     cin.getTruthTable(model);
   }
 }

File: src/main/java/com/cburch/logisim/analyze/gui/CsvReadParameterDialog.java
Patch:
@@ -67,8 +67,8 @@ public class CsvReadParameterDialog extends JDialog implements ActionListener {
   private final String SepSpace;
   private boolean setVisible;
 
-  public CsvReadParameterDialog(CsvParameter sel, File file, JFrame parrentFrame) {
-    super(parrentFrame);
+  public CsvReadParameterDialog(CsvParameter sel, File file, JFrame parentFrame) {
+    super(parentFrame);
     setVisible = true;
     this.file = file;
     SepSpace = S.get("seperatorSpace");
@@ -80,7 +80,7 @@ public CsvReadParameterDialog(CsvParameter sel, File file, JFrame parrentFrame)
     quotes.addActionListener(this);
     seperators = new JComboBox<>(PossibleSeperators);
     seperators.addActionListener(this);
-    setLocationRelativeTo(parrentFrame);
+    setLocationRelativeTo(parentFrame);
     this.param = sel;
     GridBagLayout gb = new GridBagLayout();
     GridBagConstraints c = new GridBagConstraints();

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsInformation.java
Patch:
@@ -51,8 +51,8 @@ public class IOComponentsInformation {
   private FPGAIOInformationContainer highlighted;
   private ArrayList<IOComponentsListener> listeners;
 
-  public IOComponentsInformation(Frame parrentFrame, boolean mapMode) {
-    parent = parrentFrame;
+  public IOComponentsInformation(Frame parentFrame, boolean mapMode) {
+    parent = parentFrame;
     imageHeight = mapMode ? BoardManipulator.IMAGE_HEIGHT+BoardManipulator.CONSTANT_BAR_HEIGHT : BoardManipulator.IMAGE_HEIGHT;
     IOcomps = new ArrayList<>();
     lookup = new FPGAIOInformationContainer[BoardManipulator.IMAGE_WIDTH][imageHeight];

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -52,19 +52,19 @@ public int getChildsPortIndex() {
     return MyChildsPortIndex;
   }
 
-  public Net GetParrentNet() {
+  public Net GetParentNet() {
     return MyOwnNet;
   }
 
-  public Byte GetParrentNetBitIndex() {
+  public Byte GetParentNetBitIndex() {
     return MyOwnNetBitIndex;
   }
 
   public void setChildsPortIndex(int Index) {
     MyChildsPortIndex = Index;
   }
 
-  public void SetParrentNet(Net ConnectedNet, Byte BitIndex) {
+  public void SetParentNet(Net ConnectedNet, Byte BitIndex) {
     MyOwnNet = ConnectedNet;
     MyOwnNetBitIndex = BitIndex;
   }

File: src/main/java/com/cburch/logisim/fpga/gui/IOComponentSelector.java
Patch:
@@ -45,9 +45,9 @@ public class IOComponentSelector implements ActionListener{
   private final JDialog diag;
   private static final String CancelStr = "cancel";
   
-  public IOComponentSelector(Frame parrent) {
+  public IOComponentSelector(Frame parent) {
     action_id = CancelStr;
-    diag = new JDialog(parrent, S.get("FpgaBoardIOResources"));
+    diag = new JDialog(parent, S.get("FpgaBoardIOResources"));
     GridBagConstraints c = new GridBagConstraints();
     c.fill = GridBagConstraints.HORIZONTAL;
     c.gridx = 0;
@@ -66,7 +66,7 @@ public IOComponentSelector(Frame parrent) {
     c.gridy++;
     diag.add(cancel, c);
     diag.pack();
-    diag.setLocationRelativeTo(parrent);
+    diag.setLocationRelativeTo(parent);
     diag.setModal(true);
     diag.setResizable(false);
     diag.setAlwaysOnTop(true);

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -111,7 +111,7 @@ private <T> void buildChildren(
       }
       if (tool instanceof AddTool) {
         AddTool a = (AddTool) tool;
-        a.registerParrent(guiElement);
+        a.registerParent(guiElement);
       }
       ProjectExplorerModel.Node<T> node = nodeMap.get(tool);
 

File: src/main/java/com/cburch/logisim/gui/icons/ButtonIcon.java
Patch:
@@ -35,7 +35,7 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class ButtonIcon extends AnnimatedIcon {
+public class ButtonIcon extends AnimatedIcon {
 
   private int state = 0;
   private int index = 0;
@@ -49,7 +49,7 @@ public ButtonIcon(StringGetter sg) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
     if (name != null) {
       index = (index + 1) % name.toString().length();

File: src/main/java/com/cburch/logisim/gui/icons/CounterIcon.java
Patch:
@@ -33,11 +33,11 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class CounterIcon extends AnnimatedIcon {
+public class CounterIcon extends AnimatedIcon {
 
   private int state = 1;
 
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) % 100;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DiceIcon.java
Patch:
@@ -32,12 +32,12 @@
 import java.awt.Graphics2D;
 import java.util.concurrent.ThreadLocalRandom;
 
-public class DiceIcon extends AnnimatedIcon {
+public class DiceIcon extends AnimatedIcon {
 
   private int state = ThreadLocalRandom.current().nextInt(0, 6);
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = ThreadLocalRandom.current().nextInt(0, 6);
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DipswitchIcon.java
Patch:
@@ -33,12 +33,12 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class DipswitchIcon extends AnnimatedIcon {
+public class DipswitchIcon extends AnimatedIcon {
 
   private int state = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DrcIcon.java
Patch:
@@ -34,7 +34,7 @@
 import java.awt.font.TextLayout;
 import java.awt.geom.GeneralPath;
 
-public class DrcIcon extends AnnimatedIcon {
+public class DrcIcon extends AnimatedIcon {
 
   public final boolean empty;
   public int state = -1;
@@ -44,7 +44,7 @@ public DrcIcon(boolean isDrcError) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/JoystickIcon.java
Patch:
@@ -32,12 +32,12 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class JoystickIcon extends AnnimatedIcon {
+public class JoystickIcon extends AnimatedIcon {
 
   private int state = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) % 6;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/LEDIcon.java
Patch:
@@ -33,7 +33,7 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class LEDIcon extends AnnimatedIcon {
+public class LEDIcon extends AnimatedIcon {
 
   private final boolean isRGB;
   private int showstate;
@@ -66,7 +66,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     showstate++;
     showstate %= isRGB ? 8 : 2;
   }

File: src/main/java/com/cburch/logisim/gui/icons/LedMatrixIcon.java
Patch:
@@ -32,15 +32,15 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class LedMatrixIcon extends AnnimatedIcon {
+public class LedMatrixIcon extends AnimatedIcon {
 
   private double xDir = 0.7;
   private double yDir = 1;
   private double x = 2;
   private double y = 1;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     x += xDir;
     if (x < 0 || x > 3.5) {
       xDir = -xDir;

File: src/main/java/com/cburch/logisim/gui/icons/SevenSegmentIcon.java
Patch:
@@ -33,7 +33,7 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class SevenSegmentIcon extends AnnimatedIcon {
+public class SevenSegmentIcon extends AnimatedIcon {
 
   private final boolean isHexDisplay;
   private int state;
@@ -44,7 +44,7 @@ public SevenSegmentIcon(boolean HexDisplay) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state++;
     state %= isHexDisplay ? 16 : 10;
   }

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -34,12 +34,12 @@
 import java.awt.font.TextLayout;
 import java.util.concurrent.ThreadLocalRandom;
 
-public class ShifterIcon extends AnnimatedIcon {
+public class ShifterIcon extends AnimatedIcon {
 
   private int state = -1;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state >>= 1;
     int val = ThreadLocalRandom.current().nextInt(0, 2) << 2;
     state = (state | val) & 7;

File: src/main/java/com/cburch/logisim/gui/icons/ShowStateIcon.java
Patch:
@@ -35,7 +35,7 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class ShowStateIcon extends AnnimatedIcon {
+public class ShowStateIcon extends AnimatedIcon {
 
   private final boolean pressed;
   private int state;
@@ -76,7 +76,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 7;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/TtyIcon.java
Patch:
@@ -34,13 +34,13 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class TtyIcon extends AnnimatedIcon {
+public class TtyIcon extends AnimatedIcon {
 
   private static final String display = "__Hello World!__";
   private int index = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     index = (index + 1) % (display.length() - 2);
   }
 

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -95,7 +95,7 @@ private void buildContents() {
       if (tool == null) {
         newItems.add(new ToolbarSeparator(4));
       } else {
-        if (tool instanceof AddTool) tool.registerParrent(frame.getToolbar());
+        if (tool instanceof AddTool) tool.registerParent(frame.getToolbar());
         ToolbarItem i = findItem(oldItems, tool);
         if (i == null) {
           newItems.add(new ToolItem(tool));

File: src/main/java/com/cburch/logisim/soc/gui/TraceWindowTableModel.java
Patch:
@@ -58,15 +58,15 @@ public class TraceWindowTableModel extends AbstractTableModel
         CircuitListener {
 
   private static final long serialVersionUID = 1L;
-  private final SocBusMenuProvider.InstanceInformation parrent;
+  private final SocBusMenuProvider.InstanceInformation parent;
   private final HashMap<SocBusStateInfo.SocBusState, CircuitStateHolder.HierarchyInfo> myTraceList;
   private JTable table;
   private int BoxWidth = SocBusStateInfo.BlockWidth;
   public TraceWindowTableModel(
       HashMap<SocBusStateInfo.SocBusState, CircuitStateHolder.HierarchyInfo> traceList,
       SocBusMenuProvider.InstanceInformation p) {
     myTraceList = traceList;
-    parrent = p;
+    parent = p;
     rebuild();
   }
 
@@ -195,7 +195,7 @@ public void mouseClicked(MouseEvent e) {
         myTraceList.get(i).deregisterComponentListener(this);
         myTraceList.put(i, null);
         rebuild();
-        if (getColumnCount() == 0) parrent.destroyTraceWindow();
+        if (getColumnCount() == 0) parent.destroyTraceWindow();
       }
     }
   }

File: src/main/java/com/cburch/logisim/tools/Tool.java
Patch:
@@ -111,7 +111,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {}
 
   public void paintIcon(ComponentDrawContext c, int x, int y) {}
   
-  public void registerParrent(java.awt.Component parrent) {}
+  public void registerParent(java.awt.Component parent) {}
 
   public void select(Canvas canvas) {}
 

File: src/main/java/com/cburch/draw/icons/DrawCurveIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.geom.GeneralPath;
 
-public class DrawCurveIcon extends AnnimatedIcon {
+public class DrawCurveIcon extends AnimatedIcon {
 
   private int states = 5;
 
@@ -73,7 +73,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     states++;
     states %= 6;
   }

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class DrawLineIcon extends AnnimatedIcon {
+public class DrawLineIcon extends AnimatedIcon {
 
   private int state = 3;
 
@@ -61,7 +61,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/draw/icons/DrawPolylineIcon.java
Patch:
@@ -28,14 +28,14 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 import java.awt.geom.GeneralPath;
 
-public class DrawPolylineIcon extends AnnimatedIcon {
+public class DrawPolylineIcon extends AnimatedIcon {
 
   private static final int[] points = {1, 14, 1, 1, 7, 8, 13, 4, 10, 13};
   private boolean closed = false;
@@ -67,7 +67,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state++;
     if (state == 2) state++;
     state %= (points.length + 1);

File: src/main/java/com/cburch/draw/icons/DrawShapeIcon.java
Patch:
@@ -28,13 +28,13 @@
 
 package com.cburch.draw.icons;
 
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class DrawShapeIcon extends AnnimatedIcon {
+public class DrawShapeIcon extends AnimatedIcon {
 
   public static final int RECTANGLE = 0;
   public static final int ROUNDEDRECTANGLE = 1;
@@ -67,7 +67,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/ButtonIcon.java
Patch:
@@ -35,7 +35,7 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class ButtonIcon extends AnnimatedIcon {
+public class ButtonIcon extends AnimatedIcon {
 
   private int state = 0;
   private int index = 0;
@@ -49,7 +49,7 @@ public ButtonIcon(StringGetter sg) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
     if (name != null) {
       index = (index + 1) % name.toString().length();

File: src/main/java/com/cburch/logisim/gui/icons/CounterIcon.java
Patch:
@@ -33,11 +33,11 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class CounterIcon extends AnnimatedIcon {
+public class CounterIcon extends AnimatedIcon {
 
   private int state = 1;
 
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) % 100;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DiceIcon.java
Patch:
@@ -32,12 +32,12 @@
 import java.awt.Graphics2D;
 import java.util.concurrent.ThreadLocalRandom;
 
-public class DiceIcon extends AnnimatedIcon {
+public class DiceIcon extends AnimatedIcon {
 
   private int state = ThreadLocalRandom.current().nextInt(0, 6);
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = ThreadLocalRandom.current().nextInt(0, 6);
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DipswitchIcon.java
Patch:
@@ -33,12 +33,12 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class DipswitchIcon extends AnnimatedIcon {
+public class DipswitchIcon extends AnimatedIcon {
 
   private int state = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/DrcIcon.java
Patch:
@@ -34,7 +34,7 @@
 import java.awt.font.TextLayout;
 import java.awt.geom.GeneralPath;
 
-public class DrcIcon extends AnnimatedIcon {
+public class DrcIcon extends AnimatedIcon {
 
   public final boolean empty;
   public int state = -1;
@@ -44,7 +44,7 @@ public DrcIcon(boolean isDrcError) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 3;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/JoystickIcon.java
Patch:
@@ -32,12 +32,12 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class JoystickIcon extends AnnimatedIcon {
+public class JoystickIcon extends AnimatedIcon {
 
   private int state = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) % 6;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/LEDIcon.java
Patch:
@@ -33,7 +33,7 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class LEDIcon extends AnnimatedIcon {
+public class LEDIcon extends AnimatedIcon {
 
   private final boolean isRGB;
   private int showstate;
@@ -66,7 +66,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     showstate++;
     showstate %= isRGB ? 8 : 2;
   }

File: src/main/java/com/cburch/logisim/gui/icons/LedMatrixIcon.java
Patch:
@@ -32,15 +32,15 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class LedMatrixIcon extends AnnimatedIcon {
+public class LedMatrixIcon extends AnimatedIcon {
 
   private double xDir = 0.7;
   private double yDir = 1;
   private double x = 2;
   private double y = 1;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     x += xDir;
     if (x < 0 || x > 3.5) {
       xDir = -xDir;

File: src/main/java/com/cburch/logisim/gui/icons/SevenSegmentIcon.java
Patch:
@@ -33,7 +33,7 @@
 import java.awt.Color;
 import java.awt.Graphics2D;
 
-public class SevenSegmentIcon extends AnnimatedIcon {
+public class SevenSegmentIcon extends AnimatedIcon {
 
   private final boolean isHexDisplay;
   private int state;
@@ -44,7 +44,7 @@ public SevenSegmentIcon(boolean HexDisplay) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state++;
     state %= isHexDisplay ? 16 : 10;
   }

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -34,12 +34,12 @@
 import java.awt.font.TextLayout;
 import java.util.concurrent.ThreadLocalRandom;
 
-public class ShifterIcon extends AnnimatedIcon {
+public class ShifterIcon extends AnimatedIcon {
 
   private int state = -1;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state >>= 1;
     int val = ThreadLocalRandom.current().nextInt(0, 2) << 2;
     state = (state | val) & 7;

File: src/main/java/com/cburch/logisim/gui/icons/ShowStateIcon.java
Patch:
@@ -35,7 +35,7 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class ShowStateIcon extends AnnimatedIcon {
+public class ShowStateIcon extends AnimatedIcon {
 
   private final boolean pressed;
   private int state;
@@ -76,7 +76,7 @@ protected void paintIcon(Graphics2D g2) {
   }
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     state = (state + 1) & 7;
   }
 

File: src/main/java/com/cburch/logisim/gui/icons/TtyIcon.java
Patch:
@@ -34,13 +34,13 @@
 import java.awt.Graphics2D;
 import java.awt.font.TextLayout;
 
-public class TtyIcon extends AnnimatedIcon {
+public class TtyIcon extends AnimatedIcon {
 
   private static final String display = "__Hello World!__";
   private int index = 0;
 
   @Override
-  public void annimationUpdate() {
+  public void animationUpdate() {
     index = (index + 1) % (display.length() - 2);
   }
 

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -46,7 +46,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.gui.generic.OptionPane;
-import com.cburch.logisim.gui.icons.AnnimatedIcon;
+import com.cburch.logisim.gui.icons.AnimatedIcon;
 import com.cburch.logisim.gui.main.Canvas;
 import com.cburch.logisim.gui.main.SelectionActions;
 import com.cburch.logisim.gui.main.ToolAttributeAction;
@@ -168,8 +168,8 @@ public void registerParrent(java.awt.Component parrent) {
     ComponentFactory fac = getFactory();
     if (fac instanceof InstanceFactory) {
       InstanceFactory f = (InstanceFactory) fac;
-      if (f.getIcon() instanceof AnnimatedIcon) {
-        AnnimatedIcon i = (AnnimatedIcon) f.getIcon();
+      if (f.getIcon() instanceof AnimatedIcon) {
+        AnimatedIcon i = (AnimatedIcon) f.getIcon();
         i.registerParrent(parrent);
       }
     }

File: src/main/java/com/cburch/draw/icons/DrawLineIcon.java
Patch:
@@ -39,6 +39,7 @@ public class DrawLineIcon extends AnnimatedIcon {
   private int state = 3;
 
   @Override
+  @SuppressWarnings("fallthrough")
   protected void paintIcon(Graphics2D g2) {
     g2.setColor(Color.GRAY);
     g2.setStroke(new BasicStroke(AppPreferences.getScaled(1)));
@@ -48,10 +49,12 @@ protected void paintIcon(Graphics2D g2) {
         g2.setStroke(new BasicStroke(scale(2)));
         g2.setColor(Color.BLUE.darker());
         g2.drawLine(scale(1), scale(14), scale(14), scale(1));
+        // fall through
       case 2:
         g2.setColor(Color.GRAY);
         g2.setStroke(new BasicStroke(AppPreferences.getScaled(1)));
         g2.drawRect(scale(13), 0, wh, wh);
+        // fall through
       case 1:
         g2.drawRect(0, scale(13), wh, wh);
     }

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -202,8 +202,8 @@ public void keyPressed(KeyEvent e) {
             int dist = (int) (cursor % cols);
             if (dist == 0) setDot(0, shift);
             else setDot(cursor - dist, shift);
-            break;
           }
+          break;
         case KeyEvent.VK_END:
           if (cursor >= 0) {
             HexModel model = hex.getModel();

File: src/main/java/com/cburch/logisim/comp/TextFieldCaret.java
Patch:
@@ -188,6 +188,7 @@ protected void moveCaret(int dx, int dy, boolean shift, boolean ctrl) {
     if (!shift) end = pos;
   }
 
+  @SuppressWarnings("fallthrough")
   protected void controlKeyPressed(KeyEvent e, boolean shift) {
     boolean cut = false;
     switch (e.getKeyCode()) {

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -466,6 +466,7 @@ private void toLogisimFile(Element elt, Project proj) {
               loadMap(boardMap,BoardName,circData.circuit);
             }
             circuitsData.add(circData);
+            break;
           default:
             // do nothing
         }

File: src/main/java/com/cburch/logisim/gui/icons/SimulationIcon.java
Patch:
@@ -53,6 +53,7 @@ public void setType(int type) {
   }
 
   @Override
+  @SuppressWarnings("fallthrough")
   protected void paintIcon(Graphics2D g2) {
     int wh = getIconWidth() - scale(1);
     g2.setStroke(new BasicStroke(scale(1)));
@@ -77,6 +78,7 @@ protected void paintIcon(Graphics2D g2) {
         g2.fillRect(scale(10), scale(3), scale(1), scale(10));
         g2.setColor(Color.GREEN.darker());
         g2.drawRect(scale(10), scale(3), scale(1), scale(10));
+        // fall through
       case SIM_PLAY:
         int[] xpos = {scale(6), scale(10), scale(6)};
         int[] ypos = {scale(3), scale(8), scale(13)};
@@ -101,6 +103,7 @@ protected void paintIcon(Graphics2D g2) {
         int[] y1 = {(wh) / 4, (wh) / 4, (wh) / 4 - scale(4)};
         g2.fillPolygon(x1, y1, 3);
         g2.drawPolygon(x1, y1, 3);
+        // fall through
       case SIM_HALF_TICK:
         g2.setStroke(new BasicStroke(scale(2)));
         g2.setColor(Color.MAGENTA);

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2OtherControlInstructions.java
Patch:
@@ -145,6 +145,7 @@ public String getAsmInstruction() {
 
   public int getBinInstruction() { return instruction; }
 
+  @SuppressWarnings("fallthrough")
   public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
     valid = false;
     if (!Opcodes.contains(instr.getOpcode().toLowerCase())) return false;
@@ -172,7 +173,8 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
                              instr.setError(instr.getInstruction(), S.getter("AssemblerExpectedZeroOrOneArgument"));
                            }
                            break;
-      case INSTR_WRCTL   : first = 1; 
+      case INSTR_WRCTL   : first = 1;
+                           // fall through 
       case INSTR_RDCTL   : if (instr.getNrOfParameters() != 2) {
     	                     valid = false;
     	                     instr.setError(instr.getInstruction(), S.getter("AssemblerExpectedTwoArguments"));

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ProgramControlInstructions.java
Patch:
@@ -96,6 +96,7 @@ public Nios2ProgramControlInstructions() {
     }
   }
 
+  @SuppressWarnings("fallthrough")
   public boolean execute(Object processorState, CircuitState circuitState) {
     if (!valid) return false;
     Nios2State.ProcessorState cpuState = (Nios2State.ProcessorState) processorState;
@@ -120,6 +121,7 @@ public boolean execute(Object processorState, CircuitState circuitState) {
                           cpuState.setProgramCounter(valueA);
                           break;
       case INSTR_CALL   : cpuState.writeRegister(31, SocSupport.convUnsignedLong(nextpc));
+                          // fall through
       case INSTR_JMPI   : jumped = true;
                           cpuState.setProgramCounter(immediate<<2);
                           break;
@@ -349,10 +351,10 @@ public boolean setBinInstruction(int instr) {
                               Nios2Support.getRegBIndex(instr, Nios2Support.I_TYPE) != 0) {
                             valid = false;
                           }
+                          break;
         default         : immediate = Nios2Support.getImmediate(instr, Nios2Support.I_TYPE);
                           sourceA = Nios2Support.getRegAIndex(instr, Nios2Support.I_TYPE);
                           sourceB = Nios2Support.getRegBIndex(instr, Nios2Support.I_TYPE);
-                          break;
       }
     }
     return valid;

File: src/main/java/com/cburch/logisim/vhdl/syntax/VhdlSyntax.java
Patch:
@@ -33,6 +33,7 @@
 import org.fife.ui.rsyntaxtextarea.AbstractJFlexTokenMaker;
 import org.fife.ui.rsyntaxtextarea.Token;
 
+@SuppressWarnings("fallthrough")
 public class VhdlSyntax extends AbstractJFlexTokenMaker {
 
   /** This character denotes the end of file */

File: src/main/java/com/cburch/logisim/gui/log/OptionsPanel.java
Patch:
@@ -462,7 +462,7 @@ JPanel getPanel() {
       return panel;
     }
     E getValue() {
-      return (E)getSelectedItem();
+      return getItemAt(getSelectedIndex());
     }
     String renderAsText(E v) {
       return (v instanceof String) ? S.get((String)v) : v.toString();
@@ -479,7 +479,8 @@ class Renderer extends DefaultListCellRenderer {
       @Override
       public java.awt.Component getListCellRendererComponent(JList<?> list,
           Object w, int index, boolean isSelected, boolean cellHasFocus) {
-        String s = renderAsText((E)w);
+        @SuppressWarnings("unchecked")
+        final String s = renderAsText((E) w);
         return super.getListCellRendererComponent(list, s, index, isSelected, cellHasFocus);
       }
     }

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ProgramControlInstructions.java
Patch:
@@ -351,10 +351,10 @@ public boolean setBinInstruction(int instr) {
                               Nios2Support.getRegBIndex(instr, Nios2Support.I_TYPE) != 0) {
                             valid = false;
                           }
+                          break;
         default         : immediate = Nios2Support.getImmediate(instr, Nios2Support.I_TYPE);
                           sourceA = Nios2Support.getRegAIndex(instr, Nios2Support.I_TYPE);
                           sourceB = Nios2Support.getRegBIndex(instr, Nios2Support.I_TYPE);
-                          break;
       }
     }
     return valid;

File: src/main/java/com/cburch/logisim/gui/log/OptionsPanel.java
Patch:
@@ -462,7 +462,7 @@ JPanel getPanel() {
       return panel;
     }
     E getValue() {
-      return (E)getSelectedItem();
+      return getItemAt(getSelectedIndex());
     }
     String renderAsText(E v) {
       return (v instanceof String) ? S.get((String)v) : v.toString();
@@ -479,7 +479,8 @@ class Renderer extends DefaultListCellRenderer {
       @Override
       public java.awt.Component getListCellRendererComponent(JList<?> list,
           Object w, int index, boolean isSelected, boolean cellHasFocus) {
-        String s = renderAsText((E)w);
+        @SuppressWarnings("unchecked")
+        final String s = renderAsText((E) w);
         return super.getListCellRendererComponent(list, s, index, isSelected, cellHasFocus);
       }
     }

File: src/main/java/com/cburch/draw/actions/ModelChangeAttributeAction.java
Patch:
@@ -37,6 +37,7 @@
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 
 public class ModelChangeAttributeAction extends ModelAction {
@@ -66,7 +67,7 @@ public String getName() {
       for (AttributeMapKey key : newValues.keySet()) {
         Attribute<?> at = key.getAttribute();
         if (found) {
-          if (a == null ? at != null : !a.equals(at)) {
+          if (!Objects.equals(a, at)) {
             a = null;
             break;
           }

File: src/main/java/com/cburch/draw/canvas/Selection.java
Patch:
@@ -41,6 +41,7 @@
 import java.util.HashSet;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 
 public class Selection {
@@ -173,7 +174,7 @@ public void setHandleGesture(HandleGesture gesture) {
 
   public void setHandleSelected(Handle handle) {
     Handle cur = selectedHandle;
-    boolean same = cur == null ? handle == null : cur.equals(handle);
+    boolean same = Objects.equals(cur, handle);
     if (!same) {
       selectedHandle = handle;
       curHandleGesture = null;

File: src/main/java/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -40,7 +40,6 @@
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeSet;
-import com.cburch.logisim.gui.generic.AttrTableSetException;
 import com.cburch.logisim.gui.generic.AttributeSetTableModel;
 import java.util.HashMap;
 import java.util.Map;
@@ -93,7 +92,7 @@ public void selectionChanged(SelectionEvent e) {
   }
 
   @Override
-  public void setValueRequested(Attribute<Object> attr, Object value) throws AttrTableSetException {
+  public void setValueRequested(Attribute<Object> attr, Object value) {
     SelectionAttributes attrs = (SelectionAttributes) getAttributeSet();
     Map<AttributeMapKey, Object> oldVals;
     oldVals = new HashMap<>();

File: src/main/java/com/cburch/draw/gui/AttrTableToolModel.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.draw.tools.AbstractTool;
 import com.cburch.draw.tools.DrawingAttributeSet;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.gui.generic.AttrTableSetException;
 import com.cburch.logisim.gui.generic.AttributeSetTableModel;
 
 class AttrTableToolModel extends AttributeSetTableModel {
@@ -56,7 +55,7 @@ public void setTool(AbstractTool value) {
   }
 
   @Override
-  public void setValueRequested(Attribute<Object> attr, Object value) throws AttrTableSetException {
+  public void setValueRequested(Attribute<Object> attr, Object value) {
     defaults.setValue(attr, value);
   }
 }

File: src/main/java/com/cburch/draw/model/AttributeMapKey.java
Patch:
@@ -29,6 +29,7 @@
 package com.cburch.draw.model;
 
 import com.cburch.logisim.data.Attribute;
+import java.util.Objects;
 
 public class AttributeMapKey {
   private final Attribute<?> attr;
@@ -43,8 +44,8 @@ public AttributeMapKey(Attribute<?> attr, CanvasObject object) {
   public boolean equals(Object other) {
     if (!(other instanceof AttributeMapKey)) return false;
     AttributeMapKey o = (AttributeMapKey) other;
-    return (attr == null ? o.attr == null : attr.equals(o.attr))
-        && (object == null ? o.object == null : object.equals(o.object));
+    return (Objects.equals(attr, o.attr))
+        && (Objects.equals(object, o.object));
   }
 
   public Attribute<?> getAttribute() {

File: src/main/java/com/cburch/draw/model/Drawing.java
Patch:
@@ -81,7 +81,7 @@ private void addObjectsHelp(Map<? extends CanvasObject, Integer> shapes) {
     if (!shapes.isEmpty() && isChangeAllowed(e)) {
       for (Map.Entry<? extends CanvasObject, Integer> entry : shapes.entrySet()) {
         CanvasObject shape = entry.getKey();
-        int index = entry.getValue().intValue();
+        int index = entry.getValue();
         canvasObjects.add(index, shape);
         overlaps.addShape(shape);
       }
@@ -201,6 +201,7 @@ public void reorderObjects(List<ReorderRequest> requests) {
     for (ReorderRequest r : requests) {
       if (r.getFromIndex() != r.getToIndex()) {
         hasEffect = true;
+        break;
       }
     }
     CanvasModelEvent e = CanvasModelEvent.forReorder(this, requests);

File: src/main/java/com/cburch/draw/shapes/FillableCanvasObject.java
Patch:
@@ -118,7 +118,7 @@ public void updateValue(Attribute<?> attr, Object value) {
     } else if (attr == DrawAttr.FILL_COLOR) {
       fillColor = (Color) value;
     } else if (attr == DrawAttr.STROKE_WIDTH) {
-      strokeWidth = ((Integer) value).intValue();
+      strokeWidth = (Integer) value;
     }
   }
 }

File: src/main/java/com/cburch/draw/shapes/Line.java
Patch:
@@ -234,7 +234,7 @@ public void updateValue(Attribute<?> attr, Object value) {
     if (attr == DrawAttr.STROKE_COLOR) {
       strokeColor = (Color) value;
     } else if (attr == DrawAttr.STROKE_WIDTH) {
-      strokeWidth = ((Integer) value).intValue();
+      strokeWidth = (Integer) value;
     }
   }
 }

File: src/main/java/com/cburch/draw/shapes/RoundRectangle.java
Patch:
@@ -181,7 +181,7 @@ public Element toSvgElement(Document doc) {
   @Override
   public void updateValue(Attribute<?> attr, Object value) {
     if (attr == DrawAttr.CORNER_RADIUS) {
-      radius = ((Integer) value).intValue();
+      radius = (Integer) value;
     } else {
       super.updateValue(attr, value);
     }

File: src/main/java/com/cburch/draw/shapes/SvgCreator.java
Patch:
@@ -94,7 +94,7 @@ public static Element createPoly(Document doc, Poly poly) {
     boolean first = true;
     for (Handle h : poly.getHandles(null)) {
       if (!first) points.append(" ");
-      points.append(h.getX() + "," + h.getY());
+      points.append(h.getX()).append(",").append(h.getY());
       first = false;
     }
     elt.setAttribute("points", points.toString());
@@ -119,7 +119,7 @@ private static Element createRectangular(Document doc, Rectangular rect) {
 
   public static Element createRoundRectangle(Document doc, RoundRectangle rrect) {
     Element elt = createRectangular(doc, rrect);
-    int r = rrect.getValue(DrawAttr.CORNER_RADIUS).intValue();
+    int r = rrect.getValue(DrawAttr.CORNER_RADIUS);
     elt.setAttribute("rx", "" + r);
     elt.setAttribute("ry", "" + r);
     return elt;
@@ -205,7 +205,7 @@ private static void populateFill(Element elt, AbstractCanvasObject shape) {
 
   private static void populateStroke(Element elt, AbstractCanvasObject shape) {
     Integer width = shape.getValue(DrawAttr.STROKE_WIDTH);
-    if (width != null && width.intValue() != 1) {
+    if (width != null && width != 1) {
       elt.setAttribute("stroke-width", width.toString());
     }
     Color stroke = shape.getValue(DrawAttr.STROKE_COLOR);

File: src/main/java/com/cburch/draw/shapes/Text.java
Patch:
@@ -199,10 +199,10 @@ public void updateValue(Attribute<?> attr, Object value) {
       label.setColor((Color) value);
     } else if (attr == DrawAttr.HALIGNMENT) {
       Integer intVal = (Integer) ((AttributeOption) value).getValue();
-      label.setHorizontalAlignment(intVal.intValue());
+      label.setHorizontalAlignment(intVal);
     } else if (attr == DrawAttr.VALIGNMENT) {
       Integer intVal = (Integer) ((AttributeOption) value).getValue();
-      label.setVerticalAlignment(intVal.intValue());
+      label.setVerticalAlignment(intVal);
     }
   }
 }

File: src/main/java/com/cburch/draw/tools/RoundRectangleTool.java
Patch:
@@ -51,13 +51,13 @@ public CanvasObject createShape(int x, int y, int w, int h) {
 
   @Override
   public void drawShape(Graphics g, int x, int y, int w, int h) {
-    int r = 2 * attrs.getValue(DrawAttr.CORNER_RADIUS).intValue();
+    int r = 2 * attrs.getValue(DrawAttr.CORNER_RADIUS);
     g.drawRoundRect(x, y, w, h, r, r);
   }
 
   @Override
   public void fillShape(Graphics g, int x, int y, int w, int h) {
-    int r = 2 * attrs.getValue(DrawAttr.CORNER_RADIUS).intValue();
+    int r = 2 * attrs.getValue(DrawAttr.CORNER_RADIUS);
     g.fillRoundRect(x, y, w, h, r, r);
   }
 

File: src/main/java/com/cburch/draw/util/MatchingSet.java
Patch:
@@ -99,7 +99,7 @@ public void remove() {
   }
 
   private static class Member<E extends CanvasObject> {
-    E value;
+    final E value;
 
     public Member(E value) {
       this.value = value;

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -211,10 +211,8 @@ public void keyPressed(KeyEvent e) {
             if (model != null) {
               long end = model.getLastOffset();
               if (dest > end || dest == cursor) dest = end;
-              setDot(dest, shift);
-            } else {
-              setDot(dest, shift);
             }
+            setDot(dest, shift);
           }
           break;
         case KeyEvent.VK_PAGE_DOWN:

File: src/main/java/com/cburch/logisim/LogisimVersion.java
Patch:
@@ -85,7 +85,7 @@ public static LogisimVersion parse(String versionString) {
       if (parts.length >= 3) release = Integer.parseInt(parts[2]);
       if (parts.length >= 4) revision = Integer.parseInt(parts[3]);
       if (parts.length >= 5) variant = parts[4];
-    } catch (NumberFormatException e) {
+    } catch (NumberFormatException ignored) {
     }
     return (new LogisimVersion(major, minor, release, revision, variant));
   }

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionRenderData.java
Patch:
@@ -200,7 +200,7 @@ private void computeLineText() {
     	} else i--;
     }
     g.dispose();
-    lineText = lines.toArray(new String[lines.size()]);
+    lineText = lines.toArray(new String[0]);
   }
 
   private void computeLineY() {

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableFileFilter.java
Patch:
@@ -34,8 +34,8 @@
 
 public class TruthtableFileFilter extends FileFilter {
 
-  StringGetter description;
-  String extention;
+  final StringGetter description;
+  final String extention;
 
   public TruthtableFileFilter(StringGetter descr, String ext) {
     description = descr;

File: src/main/java/com/cburch/logisim/analyze/gui/BuildCircuitButton.java
Patch:
@@ -226,7 +226,7 @@ public void actionPerformed(ActionEvent event) {
   }
 
   private static class ProjectItem {
-    Project project;
+    final Project project;
 
     ProjectItem(Project project) {
       this.project = project;

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -60,7 +60,7 @@ public void componentResized(ComponentEvent arg0) {
   }
 
   public static class NamedExpression {
-    public String name;
+    public final String name;
     public Expression expr; // can be null
     public String exprString;
     public String err;

File: src/main/java/com/cburch/logisim/analyze/gui/OutputSelector.java
Patch:
@@ -72,7 +72,7 @@ public Dimension getPreferredSize() {
 
       @Override
       public Component getListCellRendererComponent(
-          JList<? extends Object> list,
+          JList<?> list,
           Object value,
           int index,
           boolean isSelected,

File: src/main/java/com/cburch/logisim/analyze/model/Assignments.java
Patch:
@@ -38,7 +38,7 @@ public Assignments() {}
 
   public boolean get(String variable) {
     Boolean value = map.get(variable);
-    return value != null && value.booleanValue();
+    return value != null && value;
   }
 
   public void put(String variable, boolean value) {

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -416,7 +416,7 @@ private OutputData getOutputData(String output, boolean create) {
     if (output == null) throw new IllegalArgumentException("null output name");
     OutputData ret = outputData.get(output);
     if (ret == null && create) {
-      if (model.getOutputs().bits.indexOf(output) < 0) {
+      if (!model.getOutputs().bits.contains(output)) {
         throw new IllegalArgumentException("unrecognized output " + output);
       }
       ret = new OutputData(output);

File: src/main/java/com/cburch/logisim/analyze/model/Var.java
Patch:
@@ -88,8 +88,8 @@ else if (w > 32)
   }
   
   public static class Bit {
-    public String name;
-    public int b; // -1 means no index
+    public final String name;
+    public final int b; // -1 means no index
     public Bit(String name, int b) {
       this.name = name;
       this.b = b;
@@ -141,7 +141,7 @@ public String bitName(int b) {
   }
 
   public Iterator<String> iterator() {
-    return new Iterator<String>() {
+    return new Iterator<>() {
       int b = width - 1;
 
       @Override

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -38,7 +38,6 @@
 import com.cburch.logisim.comp.ComponentFactory;
 import com.cburch.logisim.comp.ComponentListener;
 import com.cburch.logisim.comp.EndData;
-import com.cburch.logisim.comp.PositionComparator;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeSet;
@@ -242,7 +241,7 @@ public static boolean isInput(Component comp) {
     return comp.getEnd(0).getType() != EndData.INPUT_ONLY;
   }
 
-  private final int maxTimeoutTestBenchSec = 60000;
+  private static final int MAX_TIMEOUT_TEST_BENCH_SEC = 60000;
   private final MyComponentListener myComponentListener = new MyComponentListener();
   private final CircuitAppearance appearance;
   private final AttributeSet staticAttrs;
@@ -465,7 +464,7 @@ public boolean doTestBench(Project project, Instance[] pin, Value[] val) {
 
     TimeoutSimulation ts = new TimeoutSimulation();
     Timer timer = new Timer();
-    timer.schedule(ts, maxTimeoutTestBenchSec);
+    timer.schedule(ts, MAX_TIMEOUT_TEST_BENCH_SEC);
 
     while (true) {
       int i = 0;

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -111,7 +111,7 @@ public void attributeValueChanged(AttributeEvent e) {
             for (Component c : source.getNonWires()) {
               if (c.getFactory() instanceof Pin) {
                 String label = c.getAttributeSet().getValue(StdAttr.LABEL).toUpperCase();
-                if (label != null && !label.isEmpty() && label.equals(NewName.toUpperCase())) {
+                if (!label.isEmpty() && label.equals(NewName.toUpperCase())) {
                   String msg = S.get("CircuitSameInputOutputLabel");
                   OptionPane.showMessageDialog(null, "\"" + NewName + "\" : " + msg);
                   e.getSource().setValue(NAME_ATTR, OldName);

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -171,7 +171,7 @@ else if (action == CircuitEvent.ACTION_INVALIDATE) {
   private final Map<Location, Value> values = new HashMap<>();
   private CopyOnWriteArraySet<Component> dirtyComponents = new CopyOnWriteArraySet<>();
   private final CopyOnWriteArraySet<Location> dirtyPoints = new CopyOnWriteArraySet<>();
-  HashMap<Location, SetData> causes = new HashMap<>();
+  final HashMap<Location, SetData> causes = new HashMap<>();
 
   private static int lastId = 0;
   private final int id = lastId++;
@@ -402,7 +402,7 @@ void processDirtyPoints() {
           // try again...
           try {
             Thread.sleep(1);
-          } catch (InterruptedException e2) {
+          } catch (InterruptedException ignored) {
           }
           if (i == 0) e.printStackTrace();
         }

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -42,7 +42,7 @@
 class PropagationPoints {
   private static class Entry<T> {
     private final CircuitState state;
-    private T item;
+    private final T item;
 
     private Entry(CircuitState state, T item) {
       this.state = state;
@@ -62,8 +62,8 @@ public int hashCode() {
     }
   }
 
-  private HashSet<Entry<Location>> data =  new HashSet<>();
-  private HashSet<Entry<Component>> pendingInputs =  new HashSet<>();
+  private final HashSet<Entry<Location>> data =  new HashSet<>();
+  private final HashSet<Entry<Component>> pendingInputs =  new HashSet<>();
 
   PropagationPoints() { }
 

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -62,7 +62,7 @@ private static void appendBuf(StringBuilder buf, int start, int end) {
     if (start == end) {
       buf.append(start);
     } else {
-      buf.append(start + "-" + end);
+      buf.append(start).append("-").append(end);
     }
   }
 

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -55,6 +55,7 @@ public SplitterDistributeItem(Project proj, Splitter splitter, int order) {
     for (int i = 0; same && i < desired.length; i++) {
       if (actual[i] != desired[i]) {
         same = false;
+        break;
       }
     }
     setEnabled(!same);

File: src/main/java/com/cburch/logisim/circuit/WireBundle.java
Patch:
@@ -40,7 +40,7 @@ class WireBundle {
   private Location widthDeterminant = null;
   private boolean isBuss = false;
   WireThread[] threads = null;
-  CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<>(); // points
+  final CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<>(); // points
   // bundle
   // hits
   private WidthIncompatibilityData incompatibilityData = null;
@@ -108,15 +108,14 @@ void setWidth(BitWidth width, Location det) {
     if (this.width != BitWidth.UNKNOWN) {
       if (width.equals(this.width)) {
         isBuss = width.getWidth() > 1;
-        return; // the widths match, and the bundle is already set;
         // nothing to do
       } else { // the widths are broken: Create incompatibilityData
         // holding this info
         incompatibilityData = new WidthIncompatibilityData();
         incompatibilityData.add(widthDeterminant, this.width);
         incompatibilityData.add(det, width);
-        return;
       }
+      return; // the widths match, and the bundle is already set;
     }
     this.width = width;
     this.widthDeterminant = det;

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -54,7 +54,7 @@ public AttributeSet createAttributeSet() {
   @Override
   public Component createComponent(Location loc, AttributeSet attrs) {
     Object dir = attrs.getValue(Wire.dir_attr);
-    int len = attrs.getValue(Wire.len_attr).intValue();
+    int len = attrs.getValue(Wire.len_attr);
 
     if (dir == Wire.VALUE_HORZ) {
       return Wire.create(loc, loc.translate(len, 0));
@@ -71,7 +71,7 @@ public void drawGhost(
       ComponentDrawContext context, Color color, int x, int y, AttributeSet attrs) {
     Graphics g = context.getGraphics();
     Object dir = attrs.getValue(Wire.dir_attr);
-    int len = attrs.getValue(Wire.len_attr).intValue();
+    int len = attrs.getValue(Wire.len_attr);
 
     g.setColor(color);
     GraphicsUtil.switchToWidth(g, 3);
@@ -95,7 +95,7 @@ public String getName() {
   @Override
   public Bounds getOffsetBounds(AttributeSet attrs) {
     Object dir = attrs.getValue(Wire.dir_attr);
-    int len = attrs.getValue(Wire.len_attr).intValue();
+    int len = attrs.getValue(Wire.len_attr);
 
     if (dir == Wire.VALUE_HORZ) {
       return Bounds.create(0, -2, len, 5);

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearance.java
Patch:
@@ -278,7 +278,7 @@ public void paintSubcircuit(InstancePainter painter, Graphics g, Direction facin
     if (painter.getShowState()) {
       try {
         state = (CircuitState) painter.getData();
-      } catch (UnsupportedOperationException e) {
+      } catch (UnsupportedOperationException ignored) {
       }
     }
     for (CanvasObject shape : getObjectsFromBottom()) {

File: src/main/java/com/cburch/logisim/comp/TextFieldCaret.java
Patch:
@@ -241,7 +241,7 @@ protected void controlKeyPressed(KeyEvent e, boolean shift) {
             ++pos;
             end = pos;
           }
-        } catch (Exception ex) {
+        } catch (Exception ignored) {
         }
         e.consume();
         break;

File: src/main/java/com/cburch/logisim/data/Bounds.java
Patch:
@@ -56,7 +56,7 @@ public static Bounds create(Location pt) {
     return create(pt.getX(), pt.getY(), 1, 1);
   }
 
-  public static Bounds EMPTY_BOUNDS = new Bounds(0, 0, 0, 0);
+  public static final Bounds EMPTY_BOUNDS = new Bounds(0, 0, 0, 0);
 
   private static final Cache cache = new Cache();
 

File: src/main/java/com/cburch/logisim/data/Direction.java
Patch:
@@ -84,7 +84,6 @@ public Direction getRight() {
     if (this == Direction.EAST) return Direction.SOUTH;
     if (this == Direction.WEST) return Direction.NORTH;
     if (this == Direction.NORTH) return Direction.EAST;
-    if (this == Direction.SOUTH) return Direction.WEST;
     return Direction.WEST;
   }
 

File: src/main/java/com/cburch/logisim/data/TestVector.java
Patch:
@@ -134,7 +134,7 @@ private void parseHeader() throws IOException {
           int w = 0;
           try {
             w = Integer.parseInt(t.substring(s + 1, e));
-          } catch (NumberFormatException ex) {
+          } catch (NumberFormatException ignored) {
           }
 
           if (w < 1 || w > 64)

File: src/main/java/com/cburch/logisim/file/LoadedLibrary.java
Patch:
@@ -205,14 +205,14 @@ private void resolveChanges(Library old) {
     }
 
     HashSet<Library> changes = new HashSet<>(old.getLibraries());
-    changes.removeAll(base.getLibraries());
+    base.getLibraries().forEach(changes::remove);
     for (Library lib : changes) {
       fireLibraryEvent(LibraryEvent.REMOVE_LIBRARY, lib);
     }
 
     changes.clear();
     changes.addAll(base.getLibraries());
-    changes.removeAll(old.getLibraries());
+    old.getLibraries().forEach(changes::remove);
     for (Library lib : changes) {
       fireLibraryEvent(LibraryEvent.ADD_LIBRARY, lib);
     }

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -325,7 +325,7 @@ public LogisimFile openLogisimFile(File file, Map<File, File> substitutions)
     }
   }
 
-  public LogisimFile openLogisimFile(InputStream reader) throws LoadFailedException, IOException {
+  public LogisimFile openLogisimFile(InputStream reader) throws IOException {
     LogisimFile ret = null;
     try {
       ret = LogisimFile.load(reader, this);

File: src/main/java/com/cburch/logisim/file/MouseMappings.java
Patch:
@@ -116,11 +116,11 @@ public Tool getToolFor(int mods) {
   }
 
   public Tool getToolFor(Integer mods) {
-    if (mods.intValue() == cache_mods) {
+    if (mods == cache_mods) {
       return cache_tool;
     } else {
       Tool ret = map.get(mods);
-      cache_mods = mods.intValue();
+      cache_mods = mods;
       cache_tool = ret;
       return ret;
     }
@@ -185,7 +185,7 @@ public void setToolFor(int mods, Tool tool) {
   }
 
   public void setToolFor(Integer mods, Tool tool) {
-    if (mods.intValue() == cache_mods) cache_mods = -1;
+    if (mods == cache_mods) cache_mods = -1;
 
     if (tool == null) {
       Object old = map.remove(mods);

File: src/main/java/com/cburch/logisim/file/ProjectsDirty.java
Patch:
@@ -37,7 +37,7 @@
 
 class ProjectsDirty {
   private static class DirtyListener implements LibraryListener {
-    Project proj;
+    final Project proj;
 
     DirtyListener(Project proj) {
       this.proj = proj;

File: src/main/java/com/cburch/logisim/fpga/data/ComponentMapParser.java
Patch:
@@ -95,9 +95,7 @@ public int parseFile() {
     Document MapDoc = null;
     try {
       MapDoc = parser.parse(xml);
-    } catch (SAXException e) {
-      return ErrorParsingFile;
-    } catch (IOException e) {
+    } catch (SAXException | IOException e) {
       return ErrorParsingFile;
     }
 

File: src/main/java/com/cburch/logisim/fpga/data/ConstantButton.java
Patch:
@@ -70,7 +70,7 @@ public boolean tryMap(JPanel parent) {
   }
   
   private boolean getConstant(int pin, MapComponent map) {
-    Long v = 0L;
+    long v = 0L;
     boolean correct;
     do {
       correct = true;

File: src/main/java/com/cburch/logisim/fpga/data/MapListModel.java
Patch:
@@ -34,7 +34,7 @@
 
 public class MapListModel extends DefaultListModel<MapListModel.MapInfo> {
 	
-  public static class MapInfo extends Object {
+  public static class MapInfo {
     private final int pinNr;
     private final MapComponent map;
     

File: src/main/java/com/cburch/logisim/fpga/data/MappableResourcesContainer.java
Patch:
@@ -197,7 +197,7 @@ public ArrayList<String> GetMappedIOPinNames() {
       for (int i = 0 ; i < map.getNrOfPins() ; i++) {
         if (!map.isIO(i)) continue;
         if (map.isBoardMapped(i)) {
-          StringBuffer sb = new StringBuffer();
+          StringBuilder sb = new StringBuilder();
           if (map.isExternalInverted(i)) sb.append("n_");
           sb.append(map.getHdlString(i));
           result.add(sb.toString());
@@ -214,7 +214,7 @@ public ArrayList<String> GetMappedInputPinNames() {
       for (int i = 0 ; i < map.getNrOfPins() ; i++) {
         if (!map.isInput(i)) continue;
         if (map.isBoardMapped(i)) {
-          StringBuffer sb = new StringBuffer();
+          StringBuilder sb = new StringBuilder();
           if (map.isExternalInverted(i)) sb.append("n_");
           sb.append(map.getHdlString(i));
           result.add(sb.toString());
@@ -231,7 +231,7 @@ public ArrayList<String> GetMappedOutputPinNames() {
       for (int i = 0 ; i < map.getNrOfPins() ; i++) {
         if (!map.isOutput(i)) continue;
         if (map.isBoardMapped(i)) {
-          StringBuffer sb = new StringBuffer();
+          StringBuilder sb = new StringBuilder();
           if (map.isExternalInverted(i)) sb.append("n_");
           sb.append(map.getHdlString(i));
           result.add(sb.toString());

File: src/main/java/com/cburch/logisim/fpga/data/PullBehaviors.java
Patch:
@@ -65,13 +65,13 @@ public static LinkedList<String> getStrings() {
     return result;
   }
 
-  public static String PullAttributeString = "FPGAPinPullBehavior";
+  public static final String PullAttributeString = "FPGAPinPullBehavior";
   public static final char Float = 0;
   public static final char PullUp = 1;
 
   public static final char PullDown = 2;
 
   public static final char Unknown = 255;
 
-  public static String[] Behavior_strings = {"Float", "Pull Up", "Pull Down"};
+  public static final String[] Behavior_strings = {"Float", "Pull Up", "Pull Down"};
 }

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockSourceContainer.java
Patch:
@@ -34,7 +34,7 @@
 
 public class ClockSourceContainer {
 
-  ArrayList<Component> sources;
+  final ArrayList<Component> sources;
   boolean RequiresFPGAGlobalClock;
 
   public ClockSourceContainer() {

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Net.java
Patch:
@@ -180,10 +180,9 @@ public boolean hasBitSinks(int bitid) {
   }
 
   public ArrayList<ConnectionPoint> GetBitSinks(int bitIndex) {
-    ArrayList<ConnectionPoint> sinks = new ArrayList<>();
     if ((bitIndex < 0) || (bitIndex >= SourceNetsList.size()))
       return new ArrayList<>();
-    sinks.addAll(SinkList.get(bitIndex).GetConnections());
+    ArrayList<ConnectionPoint> sinks = new ArrayList<>(SinkList.get(bitIndex).GetConnections());
     return sinks;
   }
 

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -282,14 +282,14 @@ public boolean CreateDownloadScripts() {
   
   private ArrayList<String> GetPinLocStrings() {
     ArrayList<String> Contents = new ArrayList<>();
-    StringBuffer Temp = new StringBuffer();
+    StringBuilder Temp = new StringBuilder();
     for (ArrayList<String> key : MapInfo.getMappableResources().keySet()) {
       MapComponent map = MapInfo.getMappableResources().get(key);
       for (int i = 0 ; i < map.getNrOfPins() ; i++) {
         Temp.setLength(0);
         Temp.append("    set_location_assignment ");
         if (map.isMapped(i) && !map.IsOpenMapped(i) && !map.IsConstantMapped(i)) {
-          Temp.append(map.getPinLocation(i)+" -to ");
+          Temp.append(map.getPinLocation(i)).append(" -to ");
           if (map.isExternalInverted(i)) Temp.append("n_");
           Temp.append(map.getHdlString(i));
           Contents.add(Temp.toString());

File: src/main/java/com/cburch/logisim/fpga/download/Download.java
Patch:
@@ -68,8 +68,8 @@ public class Download extends DownloadBase implements Runnable, WindowListener {
   private double TickFrequency;
   private static final int BasicSteps = 5;
   private String MapFileName;
-  ArrayList<String> Entities = new ArrayList<>();
-  ArrayList<String> Architectures = new ArrayList<>();
+  final ArrayList<String> Entities = new ArrayList<>();
+  final ArrayList<String> Architectures = new ArrayList<>();
 
   private Process Executable;
   private final Object lock = new Object();
@@ -204,7 +204,7 @@ public void AddListener(ActionListener listener) {
   }
 
   public void RemoveListener(ActionListener listener) {
-    if (Listeners.contains(listener)) Listeners.remove(listener);
+    Listeners.remove(listener);
   }
 
   private void fireEvent(ActionEvent e) {

File: src/main/java/com/cburch/logisim/fpga/download/DownloadBase.java
Patch:
@@ -58,7 +58,7 @@ public abstract class DownloadBase {
   protected FPGAReport MyReporter;
   protected BoardInformation MyBoardInformation = null;
   protected MappableResourcesContainer MyMappableResources;
-  static String[] HDLPaths = {
+  static final String[] HDLPaths = {
     HDLGeneratorFactory.VERILOG.toLowerCase(),
     HDLGeneratorFactory.VHDL.toLowerCase(),
     "scripts",

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -207,7 +207,7 @@ public boolean CreateDownloadScripts() {
         contents.add("    set_property IOSTANDARD " + clockIoStandard + getPortsString);
       }
 
-      Long clockFrequency = BoardInfo.fpga.getClockFrequency();
+      long clockFrequency = BoardInfo.fpga.getClockFrequency();
       double clockPeriod = 1000000000.0 / clockFrequency;
       contents.add(
           "    create_clock -add -name sys_clk_pin -period "

File: src/main/java/com/cburch/logisim/fpga/file/ImageXmlFactory.java
Patch:
@@ -163,7 +163,7 @@ public void CreateStream(Image BoardPicture) {
   }
 
   public String GetCodeTable() {
-    StringBuffer result = new StringBuffer();
+    StringBuilder result = new StringBuilder();
     for (int i = 0; i < CodeTable.length; i++) {
       if (i != 0) {
         result.append(" ");

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -125,7 +125,7 @@ public double GetTickfrequency() {
     String TickIndex = frequenciesList.getSelectedItem().toString().trim().toUpperCase();
     int i = 0;
     /* first pass, find the number */
-    StringBuffer number = new StringBuffer();
+    StringBuilder number = new StringBuilder();
     while (i<TickIndex.length() && 
        (TickIndex.charAt(i)=='.' || Character.isDigit(TickIndex.charAt(i)))) 
       number.append(TickIndex.charAt(i++));
@@ -153,7 +153,7 @@ private void setSelectedFrequency(double freq) {
          return;
        }
      }
-     StringBuffer extention = new StringBuffer();
+     StringBuilder extention = new StringBuilder();
      extention.append(" ");
      double work = freq;
      if (work > 1000000.0) {
@@ -167,7 +167,7 @@ private void setSelectedFrequency(double freq) {
      extention.append("Hz");
      DecimalFormat df = new DecimalFormat("#.#####");
      df.setRoundingMode(RoundingMode.HALF_UP);
-     String tick = df.format(work)+extention.toString();
+     String tick = df.format(work)+ extention;
      frequenciesList.setSelectedItem(tick);
   }
   

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -136,10 +136,10 @@ public SortedMap<String, Integer> GetInputList(Netlist TheNetlist, AttributeSet
   @Override
   public ArrayList<String> GetModuleFunctionality(
       Netlist TheNetlist, AttributeSet attrs, FPGAReport Reporter, String HDLType) {
-    ArrayList<String> Contents = new ArrayList<>();
     int NrOfClockTrees = TheNetlist.NumberOfClockTrees();
     /* First we process all components */
-    Contents.addAll(MakeRemarkBlock("Here all signal adaptations are performed", 3, HDLType));
+    ArrayList<String> Contents = new ArrayList<>(
+        MakeRemarkBlock("Here all signal adaptations are performed", 3, HDLType));
     for (ArrayList<String> key : MyIOComponents.getMappableResources().keySet()) {
       MapComponent comp = MyIOComponents.getMappableResources().get(key);
       Contents.addAll(AbstractHDLGeneratorFactory.GetToplevelCode(HDLType, Reporter, comp));

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -132,11 +132,11 @@ private void updatePorts(Instance instance) {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
+    StringBuilder CompleteName = new StringBuilder();
     BitWidth nrofbits = attrs.getValue(bin2bcd.ATTR_BinBits);
     int NrOfPorts = (int) (Math.log10(1 << nrofbits.getWidth()) + 1.0);
     CompleteName.append(CorrectLabel.getCorrectLabel(this.getName()));
-    CompleteName.append("_" + NrOfPorts + "_bcd_ports");
+    CompleteName.append("_").append(NrOfPorts).append("_bcd_ports");
     return CompleteName.toString();
   }
 

File: src/main/java/com/cburch/logisim/fpga/settings/BoardList.java
Patch:
@@ -36,7 +36,6 @@
 import java.util.Enumeration;
 import java.util.regex.Pattern;
 import java.util.zip.ZipEntry;
-import java.util.zip.ZipException;
 import java.util.zip.ZipFile;
 
 public class BoardList {
@@ -87,8 +86,6 @@ private static Collection<String> getBoardsfromJar(Pattern p, String Match, File
     ZipFile zf;
     try {
       zf = new ZipFile(Dir);
-    } catch (ZipException e) {
-      throw new Error(e);
     } catch (IOException e) {
       throw new Error(e);
     }

File: src/main/java/com/cburch/logisim/fpga/settings/VendorSoftware.java
Patch:
@@ -38,7 +38,7 @@ public class VendorSoftware {
   public static final char VendorXilinx = 1;
   public static final char VendorVivado = 2;
   public static final char VendorUnknown = 255;
-  public static String[] Vendors = {"Altera", "Xilinx", "Vivado"};
+  public static final String[] Vendors = {"Altera", "Xilinx", "Vivado"};
   private static final String XilinxName = "XilinxToolsPath";
   private static final String AlteraName = "AlteraToolsPath";
   private static final String VivadoName = "VivadoToolsPath";

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditHandler.java
Patch:
@@ -90,6 +90,7 @@ public void computeEnabled() {
     for (CanvasObject o : sel.getSelected()) {
       if (!(o instanceof AppearanceElement)) {
         selHasRemovable = true;
+        break;
       }
     }
     boolean canRaise;
@@ -102,7 +103,7 @@ public void computeEnabled() {
       for (Map.Entry<CanvasObject, Integer> entry : zs.entrySet()) {
         if (!(entry.getKey() instanceof AppearanceElement)) {
           count++;
-          int z = entry.getValue().intValue();
+          int z = entry.getValue();
           if (z < zmin) zmin = z;
           if (z > zmax) zmax = z;
         }

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceEditPopup.java
Patch:
@@ -83,7 +83,7 @@ protected void fire(LogisimMenuItem item) {
   @Override
   protected boolean isEnabled(LogisimMenuItem item) {
     Boolean value = enabled.get(item);
-    return value != null && value.booleanValue();
+    return value != null && value;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/appear/ClipboardContents.java
Patch:
@@ -31,7 +31,6 @@
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
-import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
 
@@ -45,7 +44,7 @@ class ClipboardContents {
 
   public ClipboardContents(
       Collection<CanvasObject> onClipboard, Location anchorLocation, Direction anchorFacing) {
-    this.onClipboard = Collections.unmodifiableList(new ArrayList<>(onClipboard));
+    this.onClipboard = java.util.List.copyOf(onClipboard);
     this.anchorLocation = anchorLocation;
     this.anchorFacing = anchorFacing;
   }

File: src/main/java/com/cburch/logisim/gui/generic/CanvasPane.java
Patch:
@@ -128,12 +128,12 @@ public void componentShown(ComponentEvent e) {}
     public void propertyChange(PropertyChangeEvent e) {
       String prop = e.getPropertyName();
       if (prop.equals(ZoomModel.ZOOM)) {
-        double oldZoom = ((Double) e.getOldValue()).doubleValue();
+        double oldZoom = (Double) e.getOldValue();
         Rectangle r = getViewport().getViewRect();
         double cx = (r.x + r.width / 2) / oldZoom;
         double cy = (r.y + r.height / 2) / oldZoom;
 
-        double newZoom = ((Double) e.getNewValue()).doubleValue();
+        double newZoom = (Double) e.getNewValue();
         r = getViewport().getViewRect();
         int hv = (int) (cx * newZoom) - r.width / 2;
         int vv = (int) (cy * newZoom) - r.height / 2;

File: src/main/java/com/cburch/logisim/gui/generic/ComboBox.java
Patch:
@@ -44,14 +44,14 @@ public static class MultiCharSelectionManager implements JComboBox.KeySelectionM
     String prefix = "";
     long last;
 
-    static int currentIndex(ComboBoxModel<? extends Object> model) {
+    static int currentIndex(ComboBoxModel<?> model) {
       Object item = model.getSelectedItem();
       for (int i = 0; item != null && i < model.getSize(); i++)
         if (item.equals(model.getElementAt(i))) return i;
       return -1;
     }
 
-    public int selectionForKey(char ch, ComboBoxModel<? extends Object> model) {
+    public int selectionForKey(char ch, ComboBoxModel<?> model) {
       int idx = currentIndex(model);
       long now = System.currentTimeMillis();
       if (now > last + 500) {

File: src/main/java/com/cburch/logisim/gui/generic/GridPainter.java
Patch:
@@ -265,10 +265,10 @@ public void propertyChange(PropertyChangeEvent event) {
       String prop = event.getPropertyName();
       Object val = event.getNewValue();
       if (prop.equals(ZoomModel.ZOOM)) {
-        setZoomFactor(((Double) val).doubleValue());
+        setZoomFactor((Double) val);
         destination.repaint();
       } else if (prop.equals(ZoomModel.SHOW_GRID)) {
-        setShowGrid(((Boolean) val).booleanValue());
+        setShowGrid((Boolean) val);
         destination.repaint();
       }
     }

File: src/main/java/com/cburch/logisim/gui/generic/LFrame.java
Patch:
@@ -140,7 +140,7 @@ public static void attachIcon(Window frame) {
         set.invoke(frame, ICONS);
         success = true;
       }
-    } catch (Exception e) {
+    } catch (Exception ignored) {
     }
 
     if (!success && frame instanceof JFrame && DEFAULT_ICON != null) {

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -51,7 +51,7 @@ public class ProjectExplorerLibraryNode extends ProjectExplorerModel.Node<Librar
   private static final long serialVersionUID = 1L;
   private LogisimFile file;
   private JTree guiElement = null;
-  private boolean showMouseTools;
+  private final boolean showMouseTools;
 
   ProjectExplorerLibraryNode(ProjectExplorerModel model, Library lib, JTree gui, boolean showMouseTools) {
     super(model, lib);
@@ -107,7 +107,7 @@ private <T> void buildChildren(
     for (T tool : items) {
       if (tool instanceof Library && ((Library) tool).isHidden()) {
         if (!showMouseTools) continue;
-        else if (!(((Library) tool) instanceof Base)) continue;
+        else if (!(tool instanceof Base)) continue;
       }
       if (tool instanceof AddTool) {
         AddTool a = (AddTool) tool;

File: src/main/java/com/cburch/logisim/gui/generic/TikZWriter.java
Patch:
@@ -483,7 +483,7 @@ public void WriteFile(File outfile) throws IOException {
   }
 
   public void WriteSvg(int width, int height, File outfile)
-      throws IOException, ParserConfigurationException, TransformerException {
+      throws ParserConfigurationException, TransformerException {
     MyInfo.WriteSvg(width, height, outfile);
   }
 }

File: src/main/java/com/cburch/logisim/gui/generic/ZoomControl.java
Patch:
@@ -68,8 +68,8 @@ public class ZoomControl extends JPanel implements LocaleListener {
   private final Canvas canvas;
   private final JButton plus;
   private final JButton minus;
-  public AutoZoomButton ZoomButton;
-  public ResetZoomButton ResetButton;
+  public final AutoZoomButton ZoomButton;
+  public final ResetZoomButton ResetButton;
   private ZoomModel model;
   private SliderModel sliderModel;
 
@@ -302,7 +302,7 @@ public void propertyChange(PropertyChangeEvent evt) {
 
   private class ZoomButton extends JButton {
     private static final long serialVersionUID = 1L;
-    boolean out;
+    final boolean out;
 
     public ZoomButton(Icon icon, boolean left) {
       super(icon);

File: src/main/java/com/cburch/logisim/gui/icons/DrcIcon.java
Patch:
@@ -36,7 +36,7 @@
 
 public class DrcIcon extends AnnimatedIcon {
 
-  public boolean empty;
+  public final boolean empty;
   public int state = -1;
 
   public DrcIcon(boolean isDrcError) {

File: src/main/java/com/cburch/logisim/gui/icons/InfoIcon.java
Patch:
@@ -39,7 +39,7 @@
 
 public class InfoIcon implements Icon {
 
-  int wh = AppPreferences.getIconSize();
+  final int wh = AppPreferences.getIconSize();
 
   @Override
   public void paintIcon(Component c, Graphics g, int x, int y) {

File: src/main/java/com/cburch/logisim/gui/icons/QuestionIcon.java
Patch:
@@ -40,7 +40,7 @@
 
 public class QuestionIcon implements Icon {
 
-  int wh = AppPreferences.getIconSize();
+  final int wh = AppPreferences.getIconSize();
 
   @Override
   public void paintIcon(Component c, Graphics g, int x, int y) {

File: src/main/java/com/cburch/logisim/gui/icons/ShifterIcon.java
Patch:
@@ -52,7 +52,7 @@ public void resetToStatic() {
 
   @Override
   protected void paintIcon(Graphics2D g2) {
-    StringBuffer s = new StringBuffer();
+    StringBuilder s = new StringBuilder();
     if (state < 0) s.append("\u25b6" + "\u25b6" + "\u25b6");
     else {
       int mask = 4;

File: src/main/java/com/cburch/logisim/gui/icons/ShowStateIcon.java
Patch:
@@ -55,11 +55,11 @@ protected void paintIcon(Graphics2D g2) {
     g2.setColor(Color.BLACK);
     g2.drawRect(0, 0, getIconWidth(), getIconHeight() / 2);
     Font f = g2.getFont().deriveFont((float) getIconWidth() / (float) 2);
-    String str = Integer.toBinaryString(state);
+    StringBuilder str = new StringBuilder(Integer.toBinaryString(state));
     while (str.length() < 3) {
-      str = "0" + str;
+      str.insert(0, "0");
     }
-    TextLayout l = new TextLayout(str, f, g2.getFontRenderContext());
+    TextLayout l = new TextLayout(str.toString(), f, g2.getFontRenderContext());
     l.draw(
         g2,
         (float) ((double) getIconWidth() / 2.0 - l.getBounds().getCenterX()),

File: src/main/java/com/cburch/logisim/gui/icons/ZoomIcon.java
Patch:
@@ -36,9 +36,9 @@
 
 public class ZoomIcon extends AbstractIcon {
 
-  public static int ZOOMIN = 0;
-  public static int ZOOMOUT = 1;
-  public static int NOZOOM = 2;
+  public static final int ZOOMIN = 0;
+  public static final int ZOOMOUT = 1;
+  public static final int NOZOOM = 2;
 
   private final int zoomType;
 

File: src/main/java/com/cburch/logisim/gui/log/FilePanel.java
Patch:
@@ -31,7 +31,6 @@
 import static com.cburch.logisim.gui.Strings.S;
 
 import com.cburch.logisim.data.TestVector;
-import com.cburch.logisim.data.Value;
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.util.JFileChoosers;
 import com.cburch.logisim.util.StringUtil;
@@ -190,7 +189,7 @@ public void actionPerformed(ActionEvent event) {
             try {
               FileWriter delete = new FileWriter(file);
               delete.close();
-            } catch (IOException e) {
+            } catch (IOException ignored) {
             }
           } else if (option == 1) {
             // do nothing

File: src/main/java/com/cburch/logisim/gui/log/LogPanel.java
Patch:
@@ -32,7 +32,6 @@
 import com.cburch.logisim.gui.menu.LogisimMenuBar;
 import com.cburch.logisim.gui.menu.PrintHandler;
 import com.cburch.logisim.proj.Project;
-
 import java.awt.LayoutManager;
 import javax.swing.JPanel;
 

File: src/main/java/com/cburch/logisim/gui/log/Loggable.java
Patch:
@@ -35,11 +35,11 @@
 public interface Loggable {
   String getLogName(Object option);
 
-  public BitWidth getBitWidth(Object option);
+  BitWidth getBitWidth(Object option);
   
   Object[] getLogOptions();
 
   Value getLogValue(CircuitState state, Object option);
   
-  public boolean isInput(Object option);
+  boolean isInput(Object option);
 }

File: src/main/java/com/cburch/logisim/gui/log/Signal.java
Patch:
@@ -28,14 +28,13 @@
 
 package com.cburch.logisim.gui.log;
 
+import com.cburch.logisim.data.BitWidth;
+import com.cburch.logisim.data.Value;
 import java.awt.datatransfer.DataFlavor;
 import java.awt.datatransfer.Transferable;
 import java.awt.datatransfer.UnsupportedFlavorException;
 import java.util.ArrayList;
 
-import com.cburch.logisim.data.BitWidth;
-import com.cburch.logisim.data.Value;
-
 public class Signal {
 
 

File: src/main/java/com/cburch/logisim/gui/main/AttrTableComponentModel.java
Patch:
@@ -41,9 +41,9 @@
 import com.cburch.logisim.tools.SetAttributeAction;
 
 class AttrTableComponentModel extends AttributeSetTableModel {
-  Project proj;
-  Circuit circ;
-  Component comp;
+  final Project proj;
+  final Circuit circ;
+  final Component comp;
 
   AttrTableComponentModel(Project proj, Circuit circ, Component comp) {
     super(comp.getAttributeSet());

File: src/main/java/com/cburch/logisim/gui/main/AttrTableToolModel.java
Patch:
@@ -43,8 +43,8 @@
 import com.cburch.logisim.tools.Tool;
 
 public class AttrTableToolModel extends AttributeSetTableModel {
-  Project proj;
-  Tool tool;
+  final Project proj;
+  final Tool tool;
 
   public AttrTableToolModel(Project proj, Tool tool) {
     super(tool.getAttributeSet());

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -122,7 +122,7 @@ public class Canvas extends JPanel
   private static final Font TICK_RATE_FONT = new Font("serif", Font.BOLD, 12);
   private static final Color SINGLE_STEP_MSG_COLOR = Color.BLUE;
   private static final Font SINGLE_STEP_MSG_FONT = new Font("Sans Serif", Font.BOLD, 12);
-  public static Color defaultzoomButtonColor = Color.WHITE;
+  public static final Color defaultzoomButtonColor = Color.WHITE;
   // public static BufferedImage image;
   private final Project proj;
   private final Selection selection;
@@ -716,7 +716,7 @@ private void waitForRepaintDone() {
         while (inPaint) {
           repaintLock.wait();
         }
-      } catch (InterruptedException e) {
+      } catch (InterruptedException ignored) {
       }
     }
   }

File: src/main/java/com/cburch/logisim/gui/main/CanvasPaintThread.java
Patch:
@@ -94,7 +94,7 @@ public void run() {
             } else {
               lock.wait();
             }
-          } catch (InterruptedException e) {
+          } catch (InterruptedException ignored) {
           }
           now = System.currentTimeMillis();
           wait = nextRepaint - now;

File: src/main/java/com/cburch/logisim/gui/main/CircuitJList.java
Patch:
@@ -62,7 +62,7 @@ public CircuitJList(Project proj, boolean includeEmpty) {
 
   public List<Circuit> getSelectedCircuits() {
     Object[] selected = getSelectedValuesList().toArray();
-    if (selected != null && selected.length > 0) {
+    if (selected.length > 0) {
       ArrayList<Circuit> ret = new ArrayList<>(selected.length);
       for (Object sel : selected) {
         if (sel instanceof Circuit) ret.add((Circuit) sel);

File: src/main/java/com/cburch/logisim/gui/main/Selection.java
Patch:
@@ -198,7 +198,7 @@ public interface Listener {
   }
 
   public static class Event {
-    Object source;
+    final Object source;
 
     Event(Object source) {
       this.source = source;

File: src/main/java/com/cburch/logisim/gui/main/SelectionActions.java
Patch:
@@ -229,7 +229,7 @@ private static HashMap<Component, Component> getReplacementMap(Project proj) {
           droppedStr.append("\n  ");
           droppedStr.append(curName);
           if (curCount > 1) {
-            droppedStr.append(" \u00d7 " + curCount);
+            droppedStr.append(" \u00d7 ").append(curCount);
           }
 
           curName = nextName;

File: src/main/java/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -45,6 +45,7 @@
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Objects;
 import java.util.Set;
 
 class SelectionAttributes extends AbstractAttributeSet {
@@ -173,7 +174,7 @@ private static boolean isSame(
         }
         Object ov = oldValues[j];
         Object nv = entry.getValue();
-        if (ov == null ? nv != null : !ov.equals(nv)) {
+        if (!Objects.equals(ov, nv)) {
           return false;
         }
       }
@@ -341,7 +342,7 @@ private void updateList(boolean ignoreIfSelectionSame) {
         for (i = 0; i < oldValues.length; i++) {
           Object oldVal = oldValues[i];
           Object newVal = newValues[i];
-          boolean sameVals = oldVal == null ? newVal == null : oldVal.equals(newVal);
+          boolean sameVals = Objects.equals(oldVal, newVal);
           if (!sameVals) {
             @SuppressWarnings("unchecked")
             Attribute<Object> attr = (Attribute<Object>) oldAttrs[i];

File: src/main/java/com/cburch/logisim/gui/main/SelectionBase.java
Patch:
@@ -66,7 +66,7 @@ class SelectionBase {
   // Components
   final Set<Component> unionSet = CollectionUtil.createUnmodifiableSetUnion(selected, lifted);
   private final ArrayList<Selection.Listener> listeners = new ArrayList<>();
-  Project proj;
+  final Project proj;
   // Components
   // removed
   private Bounds bounds = Bounds.EMPTY_BOUNDS;
@@ -95,7 +95,7 @@ private static boolean shouldSnapComponent(Component comp) {
     Boolean shouldSnapValue =
         (Boolean)
             comp.getFactory().getFeature(ComponentFactory.SHOULD_SNAP, comp.getAttributeSet());
-    return shouldSnapValue == null || shouldSnapValue.booleanValue();
+    return shouldSnapValue == null || shouldSnapValue;
   }
 
   //
@@ -209,7 +209,7 @@ private HashMap<Component, Component> copyComponents(
       int newX = oldLoc.getX() + dx;
       int newY = oldLoc.getY() + dy;
       Object snap = comp.getFactory().getFeature(ComponentFactory.SHOULD_SNAP, attrs);
-      if (snap == null || ((Boolean) snap).booleanValue()) {
+      if (snap == null || (Boolean) snap) {
         newX = Canvas.snapXToGrid(newX);
         newY = Canvas.snapYToGrid(newY);
       }

File: src/main/java/com/cburch/logisim/gui/main/SimulationTreeNode.java
Patch:
@@ -35,8 +35,8 @@
 import javax.swing.tree.TreeNode;
 
 public class SimulationTreeNode implements TreeNode {
-  protected SimulationTreeModel model;
-  protected SimulationTreeNode parent;
+  protected final SimulationTreeModel model;
+  protected final SimulationTreeNode parent;
   protected ArrayList<TreeNode> children;
 
   public SimulationTreeNode(SimulationTreeModel model, SimulationTreeNode parent) {

File: src/main/java/com/cburch/logisim/gui/main/TickCounter.java
Patch:
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.gui.Strings.S;
 
-import com.cburch.logisim.circuit.Simulator;
 import com.cburch.logisim.circuit.Simulator;
 
 class TickCounter implements Simulator.Listener {

File: src/main/java/com/cburch/logisim/gui/menu/MenuFile.java
Patch:
@@ -32,7 +32,6 @@
 
 import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.main.Frame;
-import com.cburch.logisim.gui.opts.OptionsFrame;
 import com.cburch.logisim.gui.prefs.PreferencesFrame;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.ProjectActions;

File: src/main/java/com/cburch/logisim/gui/menu/MenuListener.java
Patch:
@@ -33,9 +33,9 @@
 import java.util.ArrayList;
 
 public class MenuListener {
-  protected LogisimMenuBar menubar;
-  protected ArrayList<EnabledListener> listeners;
-  protected EditListener editListener = new EditListener();
+  protected final LogisimMenuBar menubar;
+  protected final ArrayList<EnabledListener> listeners;
+  protected final EditListener editListener = new EditListener();
 
   public MenuListener(LogisimMenuBar menubar) {
     this.menubar = menubar;

File: src/main/java/com/cburch/logisim/gui/menu/MenuProject.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.proj.Project;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
-import javax.swing.JFrame;
 import javax.swing.JMenu;
 import javax.swing.JMenuItem;
 

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -38,7 +38,6 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.util.StringUtil;
 import com.cburch.logisim.vhdl.sim.VhdlSimulatorTop;
-
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.awt.event.KeyEvent;
@@ -409,7 +408,7 @@ public void actionPerformed(ActionEvent e) {
       } else if (src == ticksEnabled || src == LogisimMenuBar.TICK_ENABLE) {
         sim.setAutoTicking(!sim.isAutoTicking());
       } else if (src == assemblyWindow) {
-        if (assWin == null || assWin.isVisible() == false) {
+        if (assWin == null || !assWin.isVisible()) {
           assWin = new AssemblyWindow(proj);
           assWin.setVisible(true);
         } else {

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -331,7 +331,7 @@ public void windowLostFocus(WindowEvent arg0) {}
     dlog.setVisible(true);
     field.requestFocusInWindow();
     Object action = pane.getValue();
-    if (!(action instanceof Integer) || ((Integer) action).intValue() != OptionPane.OK_OPTION) {
+    if (!(action instanceof Integer) || (Integer) action != OptionPane.OK_OPTION) {
       return null;
     }
 

File: src/main/java/com/cburch/logisim/gui/menu/ProjectLibraryActions.java
Patch:
@@ -173,7 +173,7 @@ public static void doUnloadLibrary(Project proj, Library lib) {
   }
 
   private static class BuiltinOption {
-    Library lib;
+    final Library lib;
 
     BuiltinOption(Library lib) {
       this.lib = lib;

File: src/main/java/com/cburch/logisim/gui/menu/WindowManagers.java
Patch:
@@ -59,7 +59,7 @@ private static void computeListeners() {
     List<Project> nowOpen = Projects.getOpenProjects();
 
     HashSet<Project> closed = new HashSet<>(projectMap.keySet());
-    closed.removeAll(nowOpen);
+    nowOpen.forEach(closed::remove);
     for (Project proj : closed) {
       ProjectManager manager = projectMap.get(proj);
       manager.frameClosed(manager.getJFrame(false, null));

File: src/main/java/com/cburch/logisim/gui/opts/MouseOptions.java
Patch:
@@ -268,7 +268,7 @@ Tool getTool(int row) {
     public Object getValueAt(int row, int column) {
       Integer key = cur_keys.get(row);
       if (column == 0) {
-        return InputEventUtil.toDisplayString(key.intValue());
+        return InputEventUtil.toDisplayString(key);
       } else {
         Tool tool = getOptions().getMouseMappings().getToolFor(key);
         return tool.getDisplayName();

File: src/main/java/com/cburch/logisim/gui/opts/OptionsPanel.java
Patch:
@@ -28,7 +28,6 @@
 
 package com.cburch.logisim.gui.opts;
 
-import com.cburch.logisim.file.LogisimFile;
 import com.cburch.logisim.file.Options;
 import com.cburch.logisim.proj.Project;
 import java.awt.LayoutManager;

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -167,18 +167,18 @@ private void loadGateUndefined(Object val) {
 
     @SuppressWarnings("rawtypes")
     private void loadSimLimit(Integer val) {
-      int value = val.intValue();
+      int value = val;
       ComboBoxModel model = simLimit.getModel();
       for (int i = 0; i < model.getSize(); i++) {
         Integer opt = (Integer) model.getElementAt(i);
-        if (opt.intValue() == value) {
+        if (opt == value) {
           simLimit.setSelectedItem(opt);
         }
       }
     }
 
     private void loadSimRandomness(Integer val) {
-      simRandomness.setSelected(val.intValue() > 0);
+      simRandomness.setSelected(val > 0);
     }
   }
 }

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -72,7 +72,7 @@ public void localeChanged() {
   private static class ListRenderer extends DefaultListCellRenderer {
     @Override
     public Component getListCellRendererComponent(
-        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+        JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
       Component ret;
       Icon icon;
       if (value instanceof Tool) {

File: src/main/java/com/cburch/logisim/gui/prefs/TemplateOptions.java
Patch:
@@ -164,7 +164,7 @@ public void actionPerformed(ActionEvent event) {
             LogisimFile.load(reader2, loader); // to see if OK
             AppPreferences.setTemplateFile(file, template);
             AppPreferences.setTemplateType(AppPreferences.TEMPLATE_CUSTOM);
-          } catch (LoaderException ex) {
+          } catch (LoaderException ignored) {
           } catch (IOException ex) {
             OptionPane.showMessageDialog(
                 getPreferencesFrame(),
@@ -174,11 +174,11 @@ public void actionPerformed(ActionEvent event) {
           } finally {
             try {
               if (reader != null) reader.close();
-            } catch (IOException ex) {
+            } catch (IOException ignored) {
             }
             try {
               if (reader != null) reader2.close();
-            } catch (IOException ex) {
+            } catch (IOException ignored) {
             }
           }
         }

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -169,7 +169,7 @@ private void initThemePreviewer() {
     } catch (IllegalAccessException
         | UnsupportedLookAndFeelException
         | InstantiationException
-        | ClassNotFoundException e) {
+        | ClassNotFoundException ignored) {
     }
     previewContainer.repaint();
     previewContainer.revalidate();

File: src/main/java/com/cburch/logisim/gui/start/About.java
Patch:
@@ -266,7 +266,7 @@ public void paintComponent(Graphics g) {
         g.setColor(fadeColor);
         g.fillRect(x, y, IMAGE_WIDTH, IMAGE_HEIGHT);
         drawText(g, x, y);
-      } catch (Throwable t) {
+      } catch (Throwable ignored) {
       }
     }
   }
@@ -292,7 +292,7 @@ public void run() {
         panel.repaint();
         try {
           Thread.sleep(20);
-        } catch (InterruptedException ex) {
+        } catch (InterruptedException ignored) {
         }
       }
     }

File: src/main/java/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -573,7 +573,7 @@ public void run() {
               queue.addLast(add);
             }
           }
-        } catch (IOException e) {
+        } catch (IOException ignored) {
         }
       }
     }

File: src/main/java/com/cburch/logisim/gui/test/Model.java
Patch:
@@ -172,8 +172,8 @@ public boolean setResult(TestVector v, int idx, TestException err) {
   }
 
   public int sortedIndex(int i) {
-    if (i < failed.size()) return (failed.get(i)).intValue();
-    if (i < failed.size() + passed.size()) return (passed.get(i - failed.size())).intValue();
+    if (i < failed.size()) return failed.get(i);
+    if (i < failed.size() + passed.size()) return passed.get(i - failed.size());
     return i;
   }
 

File: src/main/java/com/cburch/logisim/gui/test/TestBench.java
Patch:
@@ -137,7 +137,7 @@ private boolean startSimulator() {
   }
 
   /* Main method in charge of launching the test bench */
-  public boolean startTestBench() throws LoadFailedException {
+  public boolean startTestBench() {
     Circuit circuit = (proj.getLogisimFile().getCircuit("logisim_test_verif"));
     proj.setCurrentCircuit(circuit);
 

File: src/main/java/com/cburch/logisim/gui/test/TestThread.java
Patch:
@@ -172,7 +172,7 @@ public void run() {
           if (canceled) return;
           try {
             Thread.sleep(1000);
-          } catch (InterruptedException e) {
+          } catch (InterruptedException ignored) {
           }
         }
         try {

File: src/main/java/com/cburch/logisim/instance/Instance.java
Patch:
@@ -56,7 +56,7 @@ public static InstanceComponent getComponentFor(Instance instance) {
   static Instance makeFor(InstanceComponent comp) { return new Instance(comp); }
   private Instance(InstanceComponent comp) { this.comp = comp; }
 
-  private InstanceComponent comp;
+  private final InstanceComponent comp;
 
   public void addAttributeListener() {
     comp.addAttributeListener(this);

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -379,8 +379,7 @@ public Object getFeature(Object key) {
       Object defaultTip = factory.getDefaultToolTip();
       if (hasToolTips || defaultTip != null) return this;
     } else if (key == TextEditable.class) {
-      InstanceTextField field = textField;
-      return field;
+      return textField;
     }
     return null;
   }

File: src/main/java/com/cburch/logisim/prefs/AbstractPrefMonitor.java
Patch:
@@ -43,7 +43,7 @@ public void addPropertyChangeListener(PropertyChangeListener listener) {
   }
 
   public boolean getBoolean() {
-    return ((Boolean) get()).booleanValue();
+    return (Boolean) get();
   }
 
   public String getIdentifier() {

File: src/main/java/com/cburch/logisim/prefs/FPGABoards.java
Patch:
@@ -71,7 +71,7 @@ public boolean contains(String entry) {
 
     public void insert(String entry) {
       ExternalBoards.insertSorted(entry);
-      FireChange(new ListDataEvent(this, 0, ExternalBoards.size(), ListDataEvent.INTERVAL_ADDED));
+      FireChange(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, ExternalBoards.size(), ListDataEvent.INTERVAL_ADDED));
     }
 
     public int indexOf(String entry) {
@@ -80,7 +80,7 @@ public int indexOf(String entry) {
 
     public void remove(String entry) {
       ExternalBoards.remove(entry);
-      FireChange(new ListDataEvent(this, 0, ExternalBoards.size(), ListDataEvent.INTERVAL_REMOVED));
+      FireChange(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, ExternalBoards.size(), ListDataEvent.INTERVAL_REMOVED));
     }
 
     public int NrOfExternalBoards() {
@@ -98,7 +98,7 @@ public int NrOfExternalBoards() {
       }
       if (removed)
         FireChange(
-            new ListDataEvent(this, 0, ExternalBoards.size(), ListDataEvent.INTERVAL_REMOVED));
+            new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, ExternalBoards.size(), ListDataEvent.INTERVAL_REMOVED));
       return ExternalBoards.size();
     }
 

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorBoolean.java
Patch:
@@ -35,7 +35,7 @@
 import javax.swing.JCheckBox;
 
 public class PrefMonitorBoolean extends AbstractPrefMonitor<Boolean> implements ActionListener {
-  protected boolean dflt;
+  protected final boolean dflt;
   protected boolean value;
   private JCheckBox box;
 
@@ -72,7 +72,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
   }
 
   public void set(Boolean newValue) {
-    boolean newVal = newValue.booleanValue();
+    boolean newVal = newValue;
     if (value != newVal) {
       AppPreferences.getPrefs().putBoolean(getIdentifier(), newVal);
     }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorDouble.java
Patch:
@@ -63,7 +63,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
   }
 
   public void set(Double newValue) {
-    double newVal = newValue.doubleValue();
+    double newVal = newValue;
     if (value != newVal) {
       AppPreferences.getPrefs().putDouble(getIdentifier(), newVal);
     }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorInt.java
Patch:
@@ -64,7 +64,7 @@ public void preferenceChange(PreferenceChangeEvent event) {
   }
 
   public void set(Integer newValue) {
-    int newVal = newValue.intValue();
+    int newVal = newValue;
     if (value != newVal) {
       AppPreferences.getPrefs().putInt(getIdentifier(), newVal);
     }

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorString.java
Patch:
@@ -28,12 +28,13 @@
 
 package com.cburch.logisim.prefs;
 
+import java.util.Objects;
 import java.util.prefs.PreferenceChangeEvent;
 import java.util.prefs.Preferences;
 
 class PrefMonitorString extends AbstractPrefMonitor<String> {
   private static boolean isSame(String a, String b) {
-    return a == null ? b == null : a.equals(b);
+    return Objects.equals(a, b);
   }
 
   private final String dflt;

File: src/main/java/com/cburch/logisim/prefs/PrefMonitorStringOpts.java
Patch:
@@ -28,12 +28,13 @@
 
 package com.cburch.logisim.prefs;
 
+import java.util.Objects;
 import java.util.prefs.PreferenceChangeEvent;
 import java.util.prefs.Preferences;
 
 class PrefMonitorStringOpts extends AbstractPrefMonitor<String> {
   private static boolean isSame(String a, String b) {
-    return a == null ? b == null : a.equals(b);
+    return Objects.equals(a, b);
   }
 
   private final String[] opts;

File: src/main/java/com/cburch/logisim/proj/Project.java
Patch:
@@ -61,9 +61,9 @@
 
 public class Project {
   private static class ActionData {
-    CircuitState circuitState;
-    HdlModel hdlModel;
-    Action action;
+    final CircuitState circuitState;
+    final HdlModel hdlModel;
+    final Action action;
 
     public ActionData(CircuitState circuitState, HdlModel hdlModel, Action action) {
       this.circuitState = circuitState;

File: src/main/java/com/cburch/logisim/proj/Projects.java
Patch:
@@ -73,7 +73,7 @@ public void windowClosing(WindowEvent event) {
         mostRecentFrame = frame;
         try {
           frameLocations.put(frame, frame.getLocationOnScreen());
-        } catch (Exception t) {
+        } catch (Exception ignored) {
         }
       }
     }

File: src/main/java/com/cburch/logisim/soc/data/SocBusStateInfo.java
Patch:
@@ -77,7 +77,7 @@ public interface SocBusStateListener {
   
   public static class SocBusState implements InstanceData,Cloneable,ComponentDataGuiProvider {
     
-    public class SocBusStateTrace extends JPanel {
+    public static class SocBusStateTrace extends JPanel {
       private static final long serialVersionUID = 1L;
 	  private final SocBusTransaction action;
       private final long index;
@@ -172,11 +172,11 @@ public void deregisterListener(SocBusStateListener l) {
     public SocBusStateTrace getEntry(int index, TraceWindowTableModel model) {
       if (index < 0 || index >= trace.size()) {
     	if (index == 0)
-    	  return new SocBusStateTrace(null,0,model);
+    	  return new SocBusStateTrace(null, 0, model);
         return null;
       }
       long indx = startTraceIndex+trace.size()-index-1;
-      return new SocBusStateTrace(trace.get(trace.size()-index-1),indx,model);
+      return new SocBusStateTrace(trace.get(trace.size() - index - 1), indx, model);
     }
 
     @Override

File: src/main/java/com/cburch/logisim/soc/data/SocBusTransaction.java
Patch:
@@ -45,9 +45,9 @@ public class SocBusTransaction {
   public static final int BLOCK_MARKER = 14;
   public static final int BLOCK_HEX = 78;
 
-  public static int READTransaction = 1;
-  public static int WRITETransaction = 2;
-  public static int ATOMICTransaction = 4;
+  public static final int READTransaction = 1;
+  public static final int WRITETransaction = 2;
+  public static final int ATOMICTransaction = 4;
   
   public static final int NoError = 0;
   public static final int NoResponsError = 1;

File: src/main/java/com/cburch/logisim/soc/data/SocMemMapModel.java
Patch:
@@ -71,7 +71,7 @@ public Component getTableCellRendererComponent(JTable table, Object value, boole
     }
   }
   
-  public class SlaveInfoRenderer extends JLabel implements TableCellRenderer {
+  public static class SlaveInfoRenderer extends JLabel implements TableCellRenderer {
 
     private static final long serialVersionUID = 1L;
 
@@ -167,7 +167,7 @@ public InstanceComponent getComponent() {
     }
   }
   
-  private class SlaveMap {
+  private static class SlaveMap {
     private final LinkedList<SlaveInfo> slaves;
     
     public SlaveMap() {

File: src/main/java/com/cburch/logisim/soc/data/SocSupport.java
Patch:
@@ -106,14 +106,14 @@ private static String getMasterHierName(CircuitState state) {
       states.add(s);
       s = s.getParentState();
     }
-    StringBuffer name = new StringBuffer();
-    name.append(s.getCircuit().getName()+":");
+    StringBuilder name = new StringBuilder();
+    name.append(s.getCircuit().getName()).append(":");
     for (int i = states.size()-1 ; i >= 0 ; i--) {
       for (Component c : s.getCircuit().getNonWires()) {
         if (c.getFactory() instanceof SubcircuitFactory) {
           CircuitState tmp = (CircuitState)s.getData(c);
           if (tmp.equals(states.get(i)))
-            name.append(getComponentName(c)+":");
+            name.append(getComponentName(c)).append(":");
         }
       }
       s = states.get(i);

File: src/main/java/com/cburch/logisim/soc/file/ElfSectionHeader.java
Patch:
@@ -92,7 +92,7 @@ public ElfSectionHeader( FileInputStream file , ElfHeader elfHeader) {
   }
   
   private String getString(byte[] buffer, int index) {
-    StringBuffer s = new StringBuffer();
+    StringBuilder s = new StringBuilder();
     int idx = index;
     while (idx < buffer.length && buffer[idx] != 0)
       s.append((char)buffer[idx++]);

File: src/main/java/com/cburch/logisim/soc/file/ProcessorReadElf.java
Patch:
@@ -80,12 +80,12 @@ public ProcessorReadElf(File elfFile , Instance instance, int architecture, bool
       status = ELF_HEADER_ERROR;
       return;
     }
-    Integer arch = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_MACHINE));
+    int arch = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_MACHINE));
     if (arch != architecture) {
       status = ARCHITECTURE_ERROR;
       return;
     }
-    Integer type = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_TYPE));
+    int type = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_TYPE));
     if (type != ElfHeader.ET_EXEC) {
       status = NO_EXECUTABLE_ERROR;
       return;
@@ -218,6 +218,6 @@ private boolean open() {
   private void close() {
     try {
       elfFileStream.close();
-    } catch (IOException e) {}
+    } catch (IOException ignored) {}
   }
 }

File: src/main/java/com/cburch/logisim/soc/gui/AssemblerPanel.java
Patch:
@@ -209,9 +209,9 @@ private void openFile() {
     textFile = chooser.getSelectedFile();
     try {
       BufferedReader reader = new BufferedReader(new FileReader(textFile));
-      StringBuffer s = new StringBuffer();
+      StringBuilder s = new StringBuilder();
       String st;
-      while ((st = reader.readLine()) != null) s.append(st + "\n");
+      while ((st = reader.readLine()) != null) s.append(st).append("\n");
       reader.close();
       asmWindow.setText(s.toString());
     } catch (IOException e) {

File: src/main/java/com/cburch/logisim/soc/gui/BreakpointPanel.java
Patch:
@@ -168,7 +168,7 @@ private ArrayList<Integer> getBreakpointLines() {
       else
         try {
           debugScrollPane.getGutter().toggleBookmark(line - 1);
-        } catch (BadLocationException e) {
+        } catch (BadLocationException ignored) {
         }
     }
     return lines;

File: src/main/java/com/cburch/logisim/soc/gui/CpuDrawSupport.java
Patch:
@@ -49,9 +49,9 @@ public class CpuDrawSupport {
   public static final int NrOfTraces = 21;
   public static final int TRACEHEIGHT = 20;
 
-  public static Bounds busConBounds = Bounds.create(50, 600, 280, 20);
-  public static Bounds simStateBounds = Bounds.create(340, 600, 270, 20);
-  public static Bounds upStateBounds = Bounds.create(50, 10, 590, 590);
+  public static final Bounds busConBounds = Bounds.create(50, 600, 280, 20);
+  public static final Bounds simStateBounds = Bounds.create(340, 600, 270, 20);
+  public static final Bounds upStateBounds = Bounds.create(50, 10, 590, 590);
 
   public static Bounds getBounds(int x, int y, int width, int height, boolean scale) {
     if (scale)

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartState.java
Patch:
@@ -96,7 +96,7 @@ public void writeDataRegister(int value) {
     }
     
     public Integer readDataRegister() {
-      Integer result = 0;
+      int result = 0;
       if (ReadFifo.isEmpty()) return 0;
       result = ReadFifo.getFirst()&0xFF;
       ReadFifo.removeFirst();
@@ -112,7 +112,7 @@ public void writeControlRegister(int value) {
     }
     
     public Integer readControlRegister() {
-      Integer result = 0;
+      int result = 0;
       if (readIrqEnable) result |= 1;
       if (writeIrqEnable) result |= 2;
       if (readIrqPending()) result |= 1<<8;

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ComparisonInstructions.java
Patch:
@@ -145,11 +145,11 @@ public boolean execute(Object processorState, CircuitState circuitState) {
 
   public String getAsmInstruction() {
     if (!valid) return null;
-    StringBuffer s = new StringBuffer();
+    StringBuilder s = new StringBuilder();
     s.append(Opcodes.get(operation));
     while (s.length() < Nios2Support.ASM_FIELD_SIZE) s.append(" ");
-    s.append(Nios2State.registerABINames[destination]+",");
-    s.append(Nios2State.registerABINames[sourceA]+",");
+    s.append(Nios2State.registerABINames[destination]).append(",");
+    s.append(Nios2State.registerABINames[sourceA]).append(",");
     if (operation >= INSTR_CMPEQI) {
       int imm = OpxCodes.get(operation) != SIGN_EXTEND ? immediate &0xFFFF : ((immediate<<16)>>16);
       s.append(imm);

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2ShiftAndRotateInstructions.java
Patch:
@@ -107,11 +107,11 @@ public boolean execute(Object processorState, CircuitState circuitState) {
 
   public String getAsmInstruction() {
     if (!valid) return null;
-    StringBuffer s = new StringBuffer();
+    StringBuilder s = new StringBuilder();
     s.append(Opcodes.get(operation));
     while (s.length() < Nios2Support.ASM_FIELD_SIZE) s.append(" ");
-    s.append(Nios2State.registerABINames[sourceC]+",");
-    s.append(Nios2State.registerABINames[sourceA]+",");
+    s.append(Nios2State.registerABINames[sourceC]).append(",");
+    s.append(Nios2State.registerABINames[sourceA]).append(",");
     if (operation < INSTR_ROLI) {
       s.append(Nios2State.registerABINames[sourceB]);
     } else {

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2State.java
Patch:
@@ -317,10 +317,10 @@ public void execute(CircuitState cState) {
       }
       TraceInfo trace = new TraceInfo(pc,instruction,exe.getAsmInstruction(),false);
       if (!exe.execute(this,cState)) {
-        StringBuffer s = new StringBuffer();
+        StringBuilder s = new StringBuilder();
         s.append(S.get("RV32imFetchExecutionError"));
         if (exe.getErrorMessage() != null)
-          s.append("\n"+exe.getErrorMessage());
+          s.append("\n").append(exe.getErrorMessage());
         OptionPane.showMessageDialog(null,s.toString(),
         SocSupport.getMasterName(cState,Nios2State.this.getName())+S.get("RV32imFetchTransaction"),OptionPane.ERROR_MESSAGE);
         simState.errorInExecution();
@@ -390,7 +390,7 @@ public void windowDeactivated(WindowEvent e) {}
   private final SocBusInfo attachedBus;
 
   public static final AssemblerInterface ASSEMBLER = new Nios2Assembler(); 
-  public static String[] registerABINames = {"zero","at","r2","r3","r4","r5","r6","r7",
+  public static final String[] registerABINames = {"zero","at","r2","r3","r4","r5","r6","r7",
                                              "r8","r9","r10","r11","r12","r13","r14","r15",
                                              "r16","r17","r18","r19","r20","r21","r22","r23","et","bt",
                                              "gp","sp","fp","ea","sstat","ra"};

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imEnvironmentCallAndBreakpoints.java
Patch:
@@ -35,6 +35,7 @@
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
 import com.cburch.logisim.soc.util.AssemblerExecutionInterface;
 import java.util.ArrayList;
+import java.util.Arrays;
 
 public class RV32imEnvironmentCallAndBreakpoints implements AssemblerExecutionInterface {
 
@@ -50,9 +51,7 @@ public class RV32imEnvironmentCallAndBreakpoints implements AssemblerExecutionIn
   private boolean valid;
   
   public ArrayList<String> getInstructions() {
-    ArrayList<String> opcodes = new ArrayList<>();
-    for (String asmOpcode : AsmOpcodes)
-      opcodes.add(asmOpcode);
+    ArrayList<String> opcodes = new ArrayList<>(Arrays.asList(AsmOpcodes));
     return opcodes;
   }
 

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32im_state.java
Patch:
@@ -237,10 +237,10 @@ public void execute(CircuitState cState) {
       }
       TraceInfo trace = new TraceInfo(pc,instruction,exe.getAsmInstruction(),false);
       if (!exe.execute(this,cState)) {
-        StringBuffer s = new StringBuffer();
+        StringBuilder s = new StringBuilder();
         s.append(S.get("RV32imFetchExecutionError"));
         if (exe.getErrorMessage() != null)
-          s.append("\n"+exe.getErrorMessage());
+          s.append("\n").append(exe.getErrorMessage());
         OptionPane.showMessageDialog(null,s.toString(),
               SocSupport.getMasterName(cState,RV32im_state.this.getName())+S.get("RV32imFetchTransaction"),OptionPane.ERROR_MESSAGE);
         simState.errorInExecution();
@@ -303,7 +303,7 @@ public void windowDeactivated(WindowEvent e) {}
   private final SocBusInfo attachedBus;
   
   public static final AssemblerInterface ASSEMBLER = new RV32imAssembler(); 
-  public static String[] registerABINames = {"zero","ra","sp","gp","tp","t0","t1","t2",
+  public static final String[] registerABINames = {"zero","ra","sp","gp","tp","t0","t1","t2",
                                               "s0","s1","a0","a1","a2","a3","a4","a5",
                                               "a6","a7","s2","s3","s4","s5","s6","s7","s8","s9",
                                               "s10","s11","t3","t4","t5","t6"};

File: src/main/java/com/cburch/logisim/soc/rv32im/Rv32imMemoryOrderingInstructions.java
Patch:
@@ -35,6 +35,7 @@
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
 import com.cburch.logisim.soc.util.AssemblerExecutionInterface;
 import java.util.ArrayList;
+import java.util.Arrays;
 
 public class Rv32imMemoryOrderingInstructions implements AssemblerExecutionInterface {
   
@@ -58,9 +59,7 @@ public class Rv32imMemoryOrderingInstructions implements AssemblerExecutionInter
   private int operation;
   
   public ArrayList<String> getInstructions() {
-    ArrayList<String> opcodes = new ArrayList<>();
-    for (String asmOpcode : AsmOpcodes)
-      opcodes.add(asmOpcode);
+    ArrayList<String> opcodes = new ArrayList<>(Arrays.asList(AsmOpcodes));
     return opcodes;
   }
 

File: src/main/java/com/cburch/logisim/soc/util/AssemblerAsmInstruction.java
Patch:
@@ -151,7 +151,7 @@ public void replacePcAndDoCalc(long pc,HashMap<AssemblerToken,StringGetter> erro
                  case AssemblerToken.MATH_ADD        : result = beforeValue+afterValue; break;
                  case AssemblerToken.MATH_SUBTRACT   : result = beforeValue-afterValue; break;
                  case AssemblerToken.MATH_SHIFT_LEFT : result = beforeValue<<afterValue; break;
-                 case AssemblerToken.MATH_SHIFT_RIGHT: result = beforeValue<<afterValue; break;
+                 case AssemblerToken.MATH_SHIFT_RIGHT: result = beforeValue>>afterValue; break;
                  case AssemblerToken.MATH_MUL        : result = beforeValue*afterValue; break;
                  case AssemblerToken.MATH_DIV        : if (afterValue == 0) 
                                                          errors.put(parameter[i+1], S.getter("AssemblerDivZero"));

File: src/main/java/com/cburch/logisim/soc/util/AssemblerMacro.java
Patch:
@@ -32,6 +32,7 @@
 
 import com.cburch.logisim.util.StringGetter;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.LinkedList;
@@ -83,8 +84,7 @@ public LinkedList<AssemblerToken> getMacroTokens() {
       if (token.getType() == AssemblerToken.MACRO_PARAMETER) {
         int index = token.getNumberValue()-1;
         AssemblerToken[] param = parameters.get(index);
-        for (AssemblerToken assemblerToken : param)
-          makroTokens.add(assemblerToken);
+        makroTokens.addAll(Arrays.asList(param));
       } else {
         AssemblerToken copy = new AssemblerToken(token.getType(),token.getValue(),token.getoffset());
     	makroTokens.add(copy);

File: src/main/java/com/cburch/logisim/soc/vga/VgaAttributes.java
Patch:
@@ -87,7 +87,9 @@ private static class VgaStateAttribute extends Attribute<VgaState> {
   
   
   @SuppressWarnings("serial")
-  public static final ArrayList<AttributeOption> MODES = new ArrayList<AttributeOption>() {{for (AttributeOption a : MODE_ARRAY) add(a);}};
+  public static final ArrayList<AttributeOption> MODES = new ArrayList<>() {{
+    this.addAll(Arrays.asList(MODE_ARRAY));
+  }};
   
   private static final List<Attribute<?>> ATTRIBUTES =
       Arrays.asList(

File: src/main/java/com/cburch/logisim/std/arith/Adder.java
Patch:
@@ -135,7 +135,7 @@ public Adder() {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
+    StringBuilder CompleteName = new StringBuilder();
     if (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) CompleteName.append("FullAdder");
     else CompleteName.append(CorrectLabel.getCorrectLabel(this.getName()));
     return CompleteName.toString();

File: src/main/java/com/cburch/logisim/std/arith/BitAdder.java
Patch:
@@ -81,7 +81,7 @@ protected void configureNewInstance(Instance instance) {
 
   private void configurePorts(Instance instance) {
     BitWidth inWidth = instance.getAttributeValue(StdAttr.WIDTH);
-    int inputs = instance.getAttributeValue(NUM_INPUTS).intValue();
+    int inputs = instance.getAttributeValue(NUM_INPUTS);
     int outWidth = computeOutputBits(inWidth.getWidth(), inputs);
 
     int y;
@@ -113,7 +113,7 @@ private void configurePorts(Instance instance) {
 
   @Override
   public Bounds getOffsetBounds(AttributeSet attrs) {
-    int inputs = attrs.getValue(NUM_INPUTS).intValue();
+    int inputs = attrs.getValue(NUM_INPUTS);
     int h = Math.max(40, 10 * inputs);
     int y = inputs < 4 ? 20 : (((inputs - 1) / 2) * 10 + 5);
     return Bounds.create(-40, -y, 40, h);
@@ -148,7 +148,7 @@ public void paintInstance(InstancePainter painter) {
   @Override
   public void propagate(InstanceState state) {
     int width = state.getAttributeValue(StdAttr.WIDTH).getWidth();
-    int inputs = state.getAttributeValue(NUM_INPUTS).intValue();
+    int inputs = state.getAttributeValue(NUM_INPUTS);
 
     // compute the number of 1 bits
     int minCount = 0; // number that are definitely 1

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -98,7 +98,7 @@ protected void configureNewInstance(Instance instance) {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
+    StringBuilder CompleteName = new StringBuilder();
     if (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) CompleteName.append("BitComparator");
     else CompleteName.append(CorrectLabel.getCorrectLabel(this.getName()));
     return CompleteName.toString();

File: src/main/java/com/cburch/logisim/std/arith/Negator.java
Patch:
@@ -66,7 +66,7 @@ public Negator() {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
+    StringBuilder CompleteName = new StringBuilder();
     if (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) CompleteName.append("BitNegator");
     else CompleteName.append(CorrectLabel.getCorrectLabel(this.getName()));
     return CompleteName.toString();

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -117,9 +117,7 @@ private void drawArrow(Graphics g, int x, int y, int d) {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
-    CompleteName.append("Shifter_" + attrs.getValue(StdAttr.WIDTH).getWidth() + "_bit");
-    return CompleteName.toString();
+    return "Shifter_" + attrs.getValue(StdAttr.WIDTH).getWidth() + "_bit";
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -338,7 +338,6 @@ private ArrayList<String> GetStageFunctionalityVHDL(int StageNumber, int NrOfBit
           "                        s_stage_0_shiftin&DataA("
               + (NrOfBits - 1)
               + " DOWNTO 1);");
-      Contents.add("");
     } else {
       Contents.add(
           "   s_stage_"
@@ -401,8 +400,8 @@ private ArrayList<String> GetStageFunctionalityVHDL(int StageNumber, int NrOfBit
               + " DOWNTO "
               + nr_of_bits_to_shift
               + " );");
-      Contents.add("");
     }
+    Contents.add("");
     return Contents;
   }
 

File: src/main/java/com/cburch/logisim/std/arith/Subtractor.java
Patch:
@@ -79,7 +79,7 @@ public Subtractor() {
 
   @Override
   public String getHDLName(AttributeSet attrs) {
-    StringBuffer CompleteName = new StringBuffer();
+    StringBuilder CompleteName = new StringBuilder();
     if (attrs.getValue(StdAttr.WIDTH).getWidth() == 1) CompleteName.append("FullSubtractor");
     else CompleteName.append(CorrectLabel.getCorrectLabel(this.getName()));
     return CompleteName.toString();

File: src/main/java/com/cburch/logisim/std/base/Base.java
Patch:
@@ -52,13 +52,12 @@ public Base() {
     setHidden();
     WiringTool wiring = new WiringTool();
 
-    tools = Arrays.asList(new Tool[] {
+    tools = Arrays.asList(
         new PokeTool(),
         new EditTool(selectTool, wiring),
         wiring,
         new TextTool(),
-        new MenuTool(),
-      });
+        new MenuTool());
     }
   
   @Override

File: src/main/java/com/cburch/logisim/std/gates/EvenParityGate.java
Patch:
@@ -44,14 +44,14 @@ private static class XNorGateHDLGeneratorFactory extends AbstractGateHDLGenerato
     @Override
     public ArrayList<String> GetLogicFunction(
         int nr_of_inputs, int bitwidth, boolean is_one_hot, String HDLType) {
-      ArrayList<String> Contents = new ArrayList<>();
-      Contents.addAll(GetParity(true, nr_of_inputs, bitwidth > 1, HDLType));
+      ArrayList<String> Contents = new ArrayList<>(
+          GetParity(true, nr_of_inputs, bitwidth > 1, HDLType));
       Contents.add("");
       return Contents;
     }
   }
 
-  public static EvenParityGate FACTORY = new EvenParityGate();
+  public static final EvenParityGate FACTORY = new EvenParityGate();
   private final String LABEL = "2k";
 
   private EvenParityGate() {

File: src/main/java/com/cburch/logisim/std/gates/GateAttributes.java
Patch:
@@ -137,15 +137,15 @@ public <V> void setValue(Attribute<V> attr, V value) {
     } else if (attr == ATTR_SIZE) {
       size = (AttributeOption) value;
     } else if (attr == ATTR_INPUTS) {
-      inputs = ((Integer) value).intValue();
+      inputs = (Integer) value;
       fireAttributeListChanged();
     } else if (attr == ATTR_XOR) {
       xorBehave = (AttributeOption) value;
     } else if (attr == ATTR_OUTPUT) {
       out = (AttributeOption) value;
     } else if (attr instanceof NegateAttribute) {
       int index = ((NegateAttribute) attr).index;
-      if (((Boolean) value).booleanValue()) {
+      if ((Boolean) value) {
         negated |= 1 << index;
       } else {
         negated &= ~(1 << index);

File: src/main/java/com/cburch/logisim/std/gates/NegateAttribute.java
Patch:
@@ -38,7 +38,7 @@
 class NegateAttribute extends Attribute<Boolean> {
   private static final Attribute<Boolean> BOOLEAN_ATTR = Attributes.forBoolean("negateDummy");
 
-  int index;
+  final int index;
   private final Direction side;
 
   public NegateAttribute(int index, Direction side) {

File: src/main/java/com/cburch/logisim/std/gates/OddParityGate.java
Patch:
@@ -44,14 +44,14 @@ private static class XorGateHDLGeneratorFactory extends AbstractGateHDLGenerator
     @Override
     public ArrayList<String> GetLogicFunction(
         int nr_of_inputs, int bitwidth, boolean is_one_hot, String HDLType) {
-      ArrayList<String> Contents = new ArrayList<>();
-      Contents.addAll(GetParity(false, nr_of_inputs, bitwidth > 1, HDLType));
+      ArrayList<String> Contents = new ArrayList<>(
+          GetParity(false, nr_of_inputs, bitwidth > 1, HDLType));
       Contents.add("");
       return Contents;
     }
   }
 
-  public static OddParityGate FACTORY = new OddParityGate();
+  public static final OddParityGate FACTORY = new OddParityGate();
   private final String ODD_PARITY_LABEL = "2k+1";
 
   private OddParityGate() {

File: src/main/java/com/cburch/logisim/std/gates/PLA.java
Patch:
@@ -76,9 +76,9 @@ class PLA extends InstanceFactory {
       Attributes.forBitWidth("in_width", S.getter("plaBitWidthIn"));
   static final Attribute<BitWidth> ATTR_OUT_WIDTH =
       Attributes.forBitWidth("out_width", S.getter("plaBitWidthOut"));
-  static Attribute<PLATable> ATTR_TABLE = new TruthTableAttribute();
+  static final Attribute<PLATable> ATTR_TABLE = new TruthTableAttribute();
 
-  public static InstanceFactory FACTORY = new PLA();
+  public static final InstanceFactory FACTORY = new PLA();
 
   private static final Color BACKGROUND_COLOR = new Color(230, 230, 230);
 

File: src/main/java/com/cburch/logisim/std/gates/PainterShaped.java
Patch:
@@ -68,7 +68,7 @@ private static GeneralPath computeShield(int width, int height) {
 
   private static int[] getInputLineLengths(GateAttributes attrs, AbstractGate factory) {
     int inputs = attrs.inputs;
-    int mainHeight = ((Integer) attrs.size.getValue()).intValue();
+    int mainHeight = (Integer) attrs.size.getValue();
     Integer key = inputs * 31 + mainHeight;
     Object ret = INPUT_LENGTHS.get(key);
     if (ret != null) {

File: src/main/java/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -57,7 +57,7 @@ public ArrayList<String> GetLogicFunction(
     }
   }
 
-  public static XnorGate FACTORY = new XnorGate();
+  public static final XnorGate FACTORY = new XnorGate();
 
   private XnorGate() {
     super("XNOR Gate", S.getter("xnorGateComponent"), true);

File: src/main/java/com/cburch/logisim/std/gates/XorGate.java
Patch:
@@ -70,7 +70,7 @@ protected static Expression xorExpression(Expression[] inputs, int numInputs) {
     return ret;
   }
 
-  public static XorGate FACTORY = new XorGate();
+  public static final XorGate FACTORY = new XorGate();
 
   private XorGate() {
     super("XOR Gate", S.getter("xorGateComponent"), true);
@@ -105,7 +105,7 @@ public String getRectangularLabel(AttributeSet attrs) {
     Object behavior = attrs.getValue(GateAttributes.ATTR_XOR);
     if (behavior == GateAttributes.XOR_ODD) {
       Object inputs = attrs.getValue(GateAttributes.ATTR_INPUTS);
-      if (inputs == null || ((Integer) inputs).intValue() != 2) {
+      if (inputs == null || (Integer) inputs != 2) {
         isOdd = true;
       }
     }

File: src/main/java/com/cburch/logisim/analyze/model/Var.java
Patch:
@@ -141,7 +141,7 @@ public String bitName(int b) {
   }
 
   public Iterator<String> iterator() {
-    return new Iterator<String>() {
+    return new Iterator<>() {
       int b = width - 1;
 
       @Override

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -452,7 +452,7 @@ public void addPendingInput(CircuitState state, Component comp) {
   private ArrayList<Listener> copyListeners() {
     ArrayList<Listener> copy;
     synchronized (lock) {
-      copy = new ArrayList<Listener>(listeners);
+      copy = new ArrayList<>(listeners);
     }
     return copy;
   }

File: src/main/java/com/cburch/logisim/fpga/data/ComponentMapParser.java
Patch:
@@ -95,9 +95,7 @@ public int parseFile() {
     Document MapDoc = null;
     try {
       MapDoc = parser.parse(xml);
-    } catch (SAXException e) {
-      return ErrorParsingFile;
-    } catch (IOException e) {
+    } catch (SAXException | IOException e) {
       return ErrorParsingFile;
     }
 

File: src/main/java/com/cburch/logisim/fpga/settings/BoardList.java
Patch:
@@ -87,8 +87,6 @@ private static Collection<String> getBoardsfromJar(Pattern p, String Match, File
     ZipFile zf;
     try {
       zf = new ZipFile(Dir);
-    } catch (ZipException e) {
-      throw new Error(e);
     } catch (IOException e) {
       throw new Error(e);
     }

File: src/main/java/com/cburch/logisim/gui/log/LogFrame.java
Patch:
@@ -167,7 +167,7 @@ private static String computeTitle(Model data, Project proj) {
   private static final long serialVersionUID = 1L;
   private Simulator curSimulator = null;
   private Model curModel;
-  private final Map<CircuitState, Model> modelMap = new HashMap<CircuitState, Model>();
+  private final Map<CircuitState, Model> modelMap = new HashMap<>();
   private final MyListener myListener = new MyListener();
   private final MyChangeListener myChangeListener = new MyChangeListener();
   

File: src/main/java/com/cburch/logisim/soc/vga/VgaAttributes.java
Patch:
@@ -87,7 +87,7 @@ private static class VgaStateAttribute extends Attribute<VgaState> {
   
   
   @SuppressWarnings("serial")
-  public static final ArrayList<AttributeOption> MODES = new ArrayList<AttributeOption>() {{
+  public static final ArrayList<AttributeOption> MODES = new ArrayList<>() {{
     this.addAll(Arrays.asList(MODE_ARRAY));
   }};
   

File: src/main/java/com/cburch/logisim/util/JDialogOk.java
Patch:
@@ -110,9 +110,7 @@ private void configure(boolean withCancel) {
     pane.add(contents, BorderLayout.CENTER);
     pane.add(buttons, BorderLayout.SOUTH);
     
-    getRootPane().registerKeyboardAction(new ActionListener() {
-        public void actionPerformed(ActionEvent e) { setVisible(false); cancelClicked(); dispose(); }
-      }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
+    getRootPane().registerKeyboardAction(e -> { setVisible(false); cancelClicked(); dispose(); }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
 
     addWindowListener(new WindowAdapter() {
       public void windowOpened(WindowEvent e) {

File: src/main/java/com/cburch/logisim/soc/util/AssemblerAsmInstruction.java
Patch:
@@ -151,7 +151,7 @@ public void replacePcAndDoCalc(long pc,HashMap<AssemblerToken,StringGetter> erro
                  case AssemblerToken.MATH_ADD        : result = beforeValue+afterValue; break;
                  case AssemblerToken.MATH_SUBTRACT   : result = beforeValue-afterValue; break;
                  case AssemblerToken.MATH_SHIFT_LEFT : result = beforeValue<<afterValue; break;
-                 case AssemblerToken.MATH_SHIFT_RIGHT: result = beforeValue<<afterValue; break;
+                 case AssemblerToken.MATH_SHIFT_RIGHT: result = beforeValue>>afterValue; break;
                  case AssemblerToken.MATH_MUL        : result = beforeValue*afterValue; break;
                  case AssemblerToken.MATH_DIV        : if (afterValue == 0) 
                                                          errors.put(parameter[i+1], S.getter("AssemblerDivZero"));

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/Netlist.java
Patch:
@@ -375,7 +375,6 @@ public int DesignRuleCheckResult(
         CompName.add(ComponentName);
       }
     }
-    drc.clear();
     drc.add(
         new SimpleDRCContainer(
             MyCircuit,
@@ -710,7 +709,6 @@ private boolean GenerateNetlist(FPGAReport Reporter, String HDLIdentifier) {
     Set<Location> InputsList = new HashSet<>();
     Set<Component> TunnelList = new HashSet<>();
     MyComplexSplitters.clear();
-    drc.clear();
     drc.add(
         new SimpleDRCContainer(
             MyCircuit,

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -401,7 +401,7 @@ public static Startup parseArgs(String[] args) {
         i++;
         if (i >= args.length) printUsage();
 
-        if (args[i].toUpperCase().endsWith("MAP.xml")) {
+        if (args[i].toUpperCase().endsWith("MAP.XML")) {
           ret.testCircuitImpMapFile = args[i];
           i++;
           if (i >= args.length) printUsage();

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -346,7 +346,7 @@ public void propagate(InstanceState state) {
         }
       }
 
-      new UnsupportedOperationException(
+      throw new UnsupportedOperationException(
           "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");
     }
   }

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -298,7 +298,7 @@ public void propagate(InstanceState state) {
         }
       }
 
-      new UnsupportedOperationException(
+      throw new UnsupportedOperationException(
           "VHDL component simulation is not supported. This could be because there is no Questasim/Modelsim simulation server running.");
     }
   }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -965,7 +965,7 @@ public Map<String, String> GetNetMap(
             /* Finally we can put all together */
             StringBuffer Vector = new StringBuffer();
             Vector.append("{");
-            for (int i = NrOfBits; i > 0; i++) {
+            for (int i = NrOfBits; i > 0; i--) {
               Vector.append(SeperateSignals.get(i - 1));
               if (i != 1) {
                 Vector.append(",");

File: src/main/java/com/cburch/logisim/analyze/gui/KarnaughMapPanel.java
Patch:
@@ -714,7 +714,7 @@ private void drawLinedHeader(Graphics2D g, int x, int y) {
     int headHeight = KLinedInfo.getHeaderHeight();
     for (int i = 0; i < inputCount; i++) {
       AttributedString header = Styled(model.getInputs().bits.get(i), HeaderFont);
-      Boolean rotated = false;
+      boolean rotated = false;
       int middleOffset = StyledWidth(header, ctx) >> 1;
       int xoffset = headHeight + 11;
       int yoffset = headHeight + 11;

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -298,7 +298,7 @@ void loadMap(Element board, String boardName, Circuit circ) {
         if (cmap.hasAttribute("open")) {
           map.put(key, new CircuitMapInfo());
         } else if (cmap.hasAttribute("vconst")) {
-          Long v;
+          long v;
           try {
             v = Long.parseLong(cmap.getAttribute("vconst"));
           } catch (NumberFormatException e) {

File: src/main/java/com/cburch/logisim/fpga/data/ConstantButton.java
Patch:
@@ -70,7 +70,7 @@ public boolean tryMap(JPanel parent) {
   }
   
   private boolean getConstant(int pin, MapComponent map) {
-    Long v = 0L;
+    long v = 0L;
     boolean correct;
     do {
       correct = true;

File: src/main/java/com/cburch/logisim/fpga/download/VivadoDownload.java
Patch:
@@ -207,7 +207,7 @@ public boolean CreateDownloadScripts() {
         contents.add("    set_property IOSTANDARD " + clockIoStandard + getPortsString);
       }
 
-      Long clockFrequency = BoardInfo.fpga.getClockFrequency();
+      long clockFrequency = BoardInfo.fpga.getClockFrequency();
       double clockPeriod = 1000000000.0 / clockFrequency;
       contents.add(
           "    create_clock -add -name sys_clk_pin -period "

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -154,7 +154,7 @@ public static void GetSimpleInformationDialog(Boolean deleteButton,
     JPanel InputsPanel = new JPanel();
     JPanel OutputsPanel = new JPanel();
     JPanel IOPanel = new JPanel();
-    Boolean abort = false;
+    boolean abort = false;
     ArrayList<JTextField> rectLocations = new ArrayList<>();
     ArrayList<String> oldInputLocations = new ArrayList<>();
     ArrayList<String> oldOutputLocations = new ArrayList<>();

File: src/main/java/com/cburch/logisim/soc/file/ProcessorReadElf.java
Patch:
@@ -80,12 +80,12 @@ public ProcessorReadElf(File elfFile , Instance instance, int architecture, bool
       status = ELF_HEADER_ERROR;
       return;
     }
-    Integer arch = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_MACHINE));
+    int arch = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_MACHINE));
     if (arch != architecture) {
       status = ARCHITECTURE_ERROR;
       return;
     }
-    Integer type = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_TYPE));
+    int type = ElfHeader.getIntValue(elfHeader.getValue(ElfHeader.E_TYPE));
     if (type != ElfHeader.ET_EXEC) {
       status = NO_EXECUTABLE_ERROR;
       return;

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartState.java
Patch:
@@ -96,7 +96,7 @@ public void writeDataRegister(int value) {
     }
     
     public Integer readDataRegister() {
-      Integer result = 0;
+      int result = 0;
       if (ReadFifo.isEmpty()) return 0;
       result = ReadFifo.getFirst()&0xFF;
       ReadFifo.removeFirst();
@@ -112,7 +112,7 @@ public void writeControlRegister(int value) {
     }
     
     public Integer readControlRegister() {
-      Integer result = 0;
+      int result = 0;
       if (readIrqEnable) result |= 1;
       if (writeIrqEnable) result |= 2;
       if (readIrqPending()) result |= 1<<8;

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imIntegerRegisterImmediateInstructions.java
Patch:
@@ -114,7 +114,7 @@ public boolean execute(Object state, CircuitState cState) {
                         break;
       case INSTR_SLLI : result = regVal << immediate;
                         break;
-      case INSTR_SRLI : Long val1 = ElfHeader.getLongValue(regVal);
+      case INSTR_SRLI : long val1 = ElfHeader.getLongValue(regVal);
                         val1 >>= immediate;
                         result = ElfHeader.getIntValue(val1);
                         break;

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imIntegerRegisterRegisterOperations.java
Patch:
@@ -94,7 +94,7 @@ public boolean execute(Object state, CircuitState cState) {
                         break;
       case INSTR_XOR  : result = opp1 ^ opp2;
                         break;
-      case INSTR_SRL  : Long val1 = ElfHeader.getLongValue(opp1);
+      case INSTR_SRL  : long val1 = ElfHeader.getLongValue(opp1);
                         val1 >>= (opp2&0x1F);
                         result = ElfHeader.getIntValue(val1);
                         break;

File: src/main/java/com/cburch/logisim/std/io/extra/DigitalOscilloscope.java
Patch:
@@ -271,13 +271,13 @@ public void paintInstance(InstancePainter painter) {
               && painter.getAttributeValue(VERT_LINE) != NO
               && showclock == 1) { // drawclocknumber
             nck--;
-            Integer cknum =
+            int cknum =
                 ((diagramstate.getclocknumber() - nck) > 0)
                     ? diagramstate.getclocknumber() - nck
                     : 100 + (diagramstate.getclocknumber() - nck - 1);
             g.setColor(painter.getAttributeValue(ATTR_COLOR).darker());
             GraphicsUtil.drawCenteredText(
-                g, cknum.toString(), x + border + 15 * j + 7, y + border + 5);
+                g, Integer.toString(cknum), x + border + 15 * j + 7, y + border + 5);
             if (showclock == 1 && i == 0)
               g.setColor(painter.getAttributeValue(ATTR_COLOR).darker().darker());
             else g.setColor(Color.BLACK);

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -249,9 +249,9 @@ public SortedMap<String, String> GetPortMap(
     SortedMap<String, String> PortMap = new TreeMap<>();
     if (!(MapInfo instanceof NetlistComponent)) return PortMap;
     NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
-    Boolean GatedClock = false;
-    Boolean HasClock = true;
-    Boolean ActiveLow = false;
+    boolean GatedClock = false;
+    boolean HasClock = true;
+    boolean ActiveLow = false;
     String ZeroBit = (HDLType.equals(VHDL)) ? "'0'" : "1'b0";
     String BracketOpen = (HDLType.equals(VHDL)) ? "(" : "[";
     String BracketClose = (HDLType.equals(VHDL)) ? ")" : "]";

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegister.java
Patch:
@@ -434,7 +434,7 @@ private void paintInstanceEvolution(InstancePainter painter) {
     Integer lenObj = painter.getAttributeValue(ATTR_LENGTH);
     int len = lenObj == null ? 8 : lenObj.intValue();
     Boolean parallelObj = painter.getAttributeValue(ATTR_LOAD);
-    Boolean Negedge = painter.getAttributeValue(StdAttr.EDGE_TRIGGER).equals(StdAttr.TRIG_FALLING);
+    boolean Negedge = painter.getAttributeValue(StdAttr.EDGE_TRIGGER).equals(StdAttr.TRIG_FALLING);
     DrawControl(painter, xpos, ypos, len, wid, parallelObj, Negedge);
     ShiftRegisterData data = (ShiftRegisterData) painter.getData();
 

File: src/main/java/com/cburch/logisim/std/ttl/AbstractOctalFlopsHDLGenerator.java
Patch:
@@ -112,8 +112,8 @@ public SortedMap<String, String> GetPortMap(
     SortedMap<String, String> PortMap = new TreeMap<>();
     if (!(MapInfo instanceof NetlistComponent)) return PortMap;
     NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
-    Boolean GatedClock = false;
-    Boolean HasClock = true;
+    boolean GatedClock = false;
+    boolean HasClock = true;
     int ClockPinIndex = ComponentInfo.GetComponent().getFactory().ClockPinIndex(null)[0];
     if (!ComponentInfo.EndIsConnected(ClockPinIndex)) {
       Reporter.AddSevereWarning(

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -111,8 +111,8 @@ public SortedMap<String, String> GetPortMap(
     SortedMap<String, String> PortMap = new TreeMap<>();
     if (!(MapInfo instanceof NetlistComponent)) return PortMap;
     NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
-    Boolean GatedClock = false;
-    Boolean HasClock = true;
+    boolean GatedClock = false;
+    boolean HasClock = true;
     int ClockPinIndex = ComponentInfo.GetComponent().getFactory().ClockPinIndex(null)[0];
     if (!ComponentInfo.EndIsConnected(ClockPinIndex)) {
       Reporter.AddSevereWarning(

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -112,8 +112,8 @@ public SortedMap<String, String> GetPortMap(
     SortedMap<String, String> PortMap = new TreeMap<>();
     if (!(MapInfo instanceof NetlistComponent)) return PortMap;
     NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
-    Boolean GatedClock = false;
-    Boolean HasClock = true;
+    boolean GatedClock = false;
+    boolean HasClock = true;
     int ClockPinIndex = ComponentInfo.GetComponent().getFactory().ClockPinIndex(null)[0];
     if (!ComponentInfo.EndIsConnected(ClockPinIndex)) {
       Reporter.AddSevereWarning(

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -119,8 +119,8 @@ public SortedMap<String, String> GetPortMap(
     if (!(MapInfo instanceof NetlistComponent)) return PortMap;
     NetlistComponent ComponentInfo = (NetlistComponent) MapInfo;
     for (int i = 0; i < 2; i++) {
-      Boolean GatedClock = false;
-      Boolean HasClock = true;
+      boolean GatedClock = false;
+      boolean HasClock = true;
       int ClockPinIndex = ComponentInfo.GetComponent().getFactory().ClockPinIndex(null)[i];
       if (!ComponentInfo.EndIsConnected(ClockPinIndex)) {
         Reporter.AddSevereWarning(

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -312,7 +312,7 @@ public static Startup parseArgs(String[] args) {
           loc = wxh[1].substring(p + 1);
           wxh[1] = wxh[1].substring(0, p);
           String[] xy = loc.split("\\+");
-          if (xy.length != 2 || xy[0].length() < 1 || xy[0].length() < 1) {
+          if (xy.length != 2 || xy[0].length() < 1 || xy[1].length() < 1) {
             logger.error("{}", S.get("argGeometryError"));
             System.exit(1);
           }

File: src/main/java/com/cburch/logisim/std/plexers/Decoder.java
Patch:
@@ -144,7 +144,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.FACING || attr == Plexers.ATTR_SELECT_LOC || attr == Plexers.ATTR_SELECT) {
       instance.recomputeBounds();
       updatePorts(instance);
-    } else if (attr == Plexers.ATTR_SELECT || attr == Plexers.ATTR_ENABLE) {
+    } else if (attr == Plexers.ATTR_ENABLE) {
       updatePorts(instance);
     } else if (attr == Plexers.ATTR_TRISTATE || attr == Plexers.ATTR_DISABLED) {
       instance.fireInvalidated();

File: src/main/java/com/cburch/logisim/std/plexers/PriorityEncoder.java
Patch:
@@ -104,8 +104,6 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.FACING || attr == Plexers.ATTR_SELECT) {
       instance.recomputeBounds();
       updatePorts(instance);
-    } else if (attr == Plexers.ATTR_SELECT) {
-      updatePorts(instance);
     } else if (attr == Plexers.ATTR_DISABLED) {
       instance.fireInvalidated();
     }

File: src/main/java/com/cburch/logisim/std/wiring/Transistor.java
Patch:
@@ -232,10 +232,11 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.FACING || attr == Wiring.ATTR_GATE) {
       instance.recomputeBounds();
       updatePorts(instance);
-    } else if (attr == StdAttr.WIDTH || attr == ATTR_TYPE) {
+    } else if (attr == StdAttr.WIDTH) {
       updatePorts(instance);
     } else if (attr == ATTR_TYPE) {
       instance.fireInvalidated();
+      updatePorts(instance);
     }
   }
 

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -164,7 +164,7 @@ public static void doSave(File file, AnalyzerModel model) throws IOException {
   }
 
   static final Pattern NAME_FORMAT =
-      Pattern.compile("([a-zA-Z][a-zA-Z_0-9]*)\\[(-?[0-9]+)\\.\\.(-?[0-9]+)\\]");
+      Pattern.compile("([a-zA-Z][a-zA-Z_0-9]*)\\[(-?[0-9]+)\\.\\.(-?[0-9]+)]");
 
   static void validateHeader(String line, VariableList inputs, VariableList outputs, int lineno)
       throws IOException {

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -38,7 +38,6 @@
 import com.cburch.logisim.comp.ComponentFactory;
 import com.cburch.logisim.comp.ComponentListener;
 import com.cburch.logisim.comp.EndData;
-import com.cburch.logisim.comp.PositionComparator;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeSet;
@@ -242,7 +241,7 @@ public static boolean isInput(Component comp) {
     return comp.getEnd(0).getType() != EndData.INPUT_ONLY;
   }
 
-  private final int maxTimeoutTestBenchSec = 60000;
+  private static final int MAX_TIMEOUT_TEST_BENCH_SEC = 60000;
   private final MyComponentListener myComponentListener = new MyComponentListener();
   private final CircuitAppearance appearance;
   private final AttributeSet staticAttrs;
@@ -465,7 +464,7 @@ public boolean doTestBench(Project project, Instance[] pin, Value[] val) {
 
     TimeoutSimulation ts = new TimeoutSimulation();
     Timer timer = new Timer();
-    timer.schedule(ts, maxTimeoutTestBenchSec);
+    timer.schedule(ts, MAX_TIMEOUT_TEST_BENCH_SEC);
 
     while (true) {
       int i = 0;

File: src/main/java/com/cburch/logisim/circuit/Propagator.java
Patch:
@@ -142,7 +142,7 @@ static Value computeValue(SetData causes) {
   private final CircuitState root; // root of state tree
 
   /** The number of clock cycles to let pass before deciding that the circuit is oscillating. */
-  private final int simLimit = 1000;
+  private static final int simLimit = 1000;
 
   /**
    * On average, one out of every 2**simRandomShift propagations through a component is delayed one

File: src/main/java/com/cburch/logisim/file/XmlReader.java
Patch:
@@ -713,7 +713,7 @@ public static String generateValidVHDLLabel(String initialLabel, String suffix)
     }
 
     // If the string has a ! or ~ symbol, then replace it with "NOT"
-    label = label.replaceAll("[\\!~]", "NOT_");
+    label = label.replaceAll("[!~]", "NOT_");
 
     // Force string to start with a letter
     if (!label.matches("^[A-Za-z].*$")) label = "L_" + label;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -727,10 +727,10 @@ public ArrayList<String> GetComponentMap(
             for (int vectorentries = 0; vectorentries < VectorList.length; vectorentries++) {
               String Entry = VectorList[vectorentries];
               if (Entry.contains("{")) {
-                Entry.replaceAll("{", "");
+                Entry = Entry.replace("{", "");
               }
               if (Entry.contains("}")) {
-                Entry.replaceAll("}", "");
+                Entry = Entry.replace("}", "");
               }
               OneLine.append(Entry);
               if (vectorentries < VectorList.length - 1) {

File: src/main/java/com/cburch/logisim/std/gates/PLATable.java
Patch:
@@ -346,8 +346,8 @@ public static class EditorDialog extends JDialog implements JInputDialog {
     /** */
     private static final long serialVersionUID = 1L;
 
-    private final float smallFont = 9.5f;
-    private final float tinyFont = 8.8f;
+    private static final float smallFont = 9.5f;
+    private static final float tinyFont = 8.8f;
     private final HeaderPanel hdrPanel;
     private final TablePanel ttPanel;
     private final JPanel ttScrollPanel;

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -297,7 +297,7 @@ public void propagate(InstanceState state) {
           && server_response.length() > 0
           && !server_response.equals("sync")) {
 
-        String[] parameters = server_response.split("\\:");
+        String[] parameters = server_response.split(":");
 
         String busValue = parameters[1];
 

File: src/main/java/com/cburch/logisim/std/io/ReptarLocalBus.java
Patch:
@@ -85,7 +85,7 @@ public static final String getIOLabel(int id) {
   public static final int IRQ_i = 9;
 
   /* Default Name. Very important for the genration of the VDHL Code */
-  private final String defaultLocalBusName = "LocalBus";
+  private static final String defaultLocalBusName = "LocalBus";
 
   public ReptarLocalBus() {
     super("ReptarLB", S.getter("repLBComponent"));

File: src/main/java/com/cburch/logisim/std/tcl/TclComponent.java
Patch:
@@ -266,7 +266,7 @@ void getPortsFromServer(InstanceState state, TclComponentData tclComponentData)
         && server_response.length() > 0
         && !server_response.equals("sync")) {
 
-      String[] parameters = server_response.split("\\:");
+      String[] parameters = server_response.split(":");
 
       /* Skip if we receive crap, still better than an out of range */
       if (parameters.length < 2) continue;

File: src/main/java/com/cburch/logisim/util/AlphanumComparator.java
Patch:
@@ -42,12 +42,12 @@
  * Collections.sort(your list, new AlphanumComparator());
  */
 public class AlphanumComparator implements Comparator<String> {
-  private final boolean isDigit(char ch) {
+  private boolean isDigit(char ch) {
     return ((ch >= 48) && (ch <= 57));
   }
 
   /** Length of string is passed in for improved efficiency (only need to calculate it once) * */
-  private final String getChunk(String s, int slength, int marker) {
+  private String getChunk(String s, int slength, int marker) {
     StringBuilder chunk = new StringBuilder();
     char c = s.charAt(marker);
     chunk.append(c);

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -249,7 +249,7 @@ public void propagate(InstanceState state) {
           && server_response.length() > 0
           && !server_response.equals("sync")) {
 
-        String[] parameters = server_response.split("\\:");
+        String[] parameters = server_response.split(":");
 
         String busValue = parameters[1];
 

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlParser.java
Patch:
@@ -161,7 +161,7 @@ public int getDefaultValue() {
   private static Pattern regex(String pattern) {
     pattern = pattern.trim();
     pattern = "^ " + pattern;
-    pattern = pattern.replaceAll("  ", "\\\\s+"); // Two spaces = required whitespace
+    pattern = pattern.replaceAll(" {2}", "\\\\s+"); // Two spaces = required whitespace
     pattern = pattern.replaceAll(" ", "\\\\s*"); // One space = optional whitespace
     return Pattern.compile(pattern, Pattern.DOTALL | Pattern.CASE_INSENSITIVE);
   }

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 4, 4, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 4, 5, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2021;

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 4, 4, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 4, 5, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2021;

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -73,8 +73,6 @@ public String getLogName(InstanceState state, Object option) {
 
     @Override
     public BitWidth getBitWidth(InstanceState state, Object option) {
-//      MemState s = (MemState)state.getData();
-//      return BitWidth.create(s.getDataBits());
       return state.getAttributeValue(Mem.DATA_ATTR);
     }
 

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -463,7 +463,7 @@ public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
     boolean asynch = trigger == null || trigger.equals(StdAttr.TRIG_HIGH) || trigger.equals(StdAttr.TRIG_LOW);
     boolean byteEnabled = RamAppearance.getNrLEPorts(attrs)==0;
     boolean syncRead = !attrs.containsAttribute(Mem.ASYNC_READ) || !attrs.getValue(Mem.ASYNC_READ);
-    boolean clearPin = attrs.getValue(RamAttributes.CLEAR_PIN);
+    boolean clearPin = attrs.getValue(RamAttributes.CLEAR_PIN) == null ? false : attrs.getValue(RamAttributes.CLEAR_PIN);
     boolean ReadAfterWrite = !attrs.containsAttribute(Mem.READ_ATTR) ||
     		                 attrs.getValue(Mem.READ_ATTR).equals(Mem.READAFTERWRITE);
     return HDLType.equals(VHDL) && separate && !asynch && byteEnabled && syncRead && !clearPin && ReadAfterWrite;

File: src/main/java/com/cburch/logisim/std/wiring/Probe.java
Patch:
@@ -67,8 +67,8 @@ public String getLogName(InstanceState state, Object option) {
 
     @Override
     public BitWidth getBitWidth(InstanceState state, Object option) {
-      StateData data = (StateData) state.getData();
-      return data == null || data.curValue == null ? null : data.curValue.getBitWidth();
+      ProbeAttributes attrs = (ProbeAttributes) state.getAttributeSet();
+      return attrs.width;
     }
 
     @Override

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -73,8 +73,6 @@ public String getLogName(InstanceState state, Object option) {
 
     @Override
     public BitWidth getBitWidth(InstanceState state, Object option) {
-//      MemState s = (MemState)state.getData();
-//      return BitWidth.create(s.getDataBits());
       return state.getAttributeValue(Mem.DATA_ATTR);
     }
 

File: src/main/java/com/cburch/logisim/std/wiring/Probe.java
Patch:
@@ -67,8 +67,8 @@ public String getLogName(InstanceState state, Object option) {
 
     @Override
     public BitWidth getBitWidth(InstanceState state, Object option) {
-      StateData data = (StateData) state.getData();
-      return data == null || data.curValue == null ? null : data.curValue.getBitWidth();
+      ProbeAttributes attrs = (ProbeAttributes) state.getAttributeSet();
+      return attrs.width;
     }
 
     @Override

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -463,7 +463,7 @@ public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
     boolean asynch = trigger == null || trigger.equals(StdAttr.TRIG_HIGH) || trigger.equals(StdAttr.TRIG_LOW);
     boolean byteEnabled = RamAppearance.getNrLEPorts(attrs)==0;
     boolean syncRead = !attrs.containsAttribute(Mem.ASYNC_READ) || !attrs.getValue(Mem.ASYNC_READ);
-    boolean clearPin = attrs.getValue(RamAttributes.CLEAR_PIN);
+    boolean clearPin = attrs.getValue(RamAttributes.CLEAR_PIN) == null ? false : attrs.getValue(RamAttributes.CLEAR_PIN);
     boolean ReadAfterWrite = !attrs.containsAttribute(Mem.READ_ATTR) ||
     		                 attrs.getValue(Mem.READ_ATTR).equals(Mem.READAFTERWRITE);
     return HDLType.equals(VHDL) && separate && !asynch && byteEnabled && syncRead && !clearPin && ReadAfterWrite;

File: src/main/java/com/cburch/logisim/std/base/Base.java
Patch:
@@ -62,7 +62,7 @@ public Base() {
         new MenuTool(),
         // TextTool uses internall Text.FACTORY, but also supports click-to-edit,
         // custom cursor, etc. A dedicated "add text tool" is useless.
-        /* new AddTool(Text.FACTORY), */
+        new AddTool(Text.FACTORY), //TODO: remove
       });
     }
 

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -137,7 +137,8 @@ public String GetSubDir() {
 
   @Override
   public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
-	if (attrs == null) return false;
+	   if (attrs == null) return false;
+	   if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
     return attrs.getValue(Mem.LINE_ATTR).equals(Mem.SINGLE);
   }
 }

File: src/main/java/com/cburch/logisim/std/base/Base.java
Patch:
@@ -62,7 +62,7 @@ public Base() {
         new MenuTool(),
         // TextTool uses internall Text.FACTORY, but also supports click-to-edit,
         // custom cursor, etc. A dedicated "add text tool" is useless.
-        /* new AddTool(Text.FACTORY), */
+        new AddTool(Text.FACTORY), //TODO: remove
       });
     }
 

File: src/main/java/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -137,7 +137,8 @@ public String GetSubDir() {
 
   @Override
   public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
-	if (attrs == null) return false;
+	   if (attrs == null) return false;
+	   if (attrs.getValue(Mem.LINE_ATTR) == null) return false;
     return attrs.getValue(Mem.LINE_ATTR).equals(Mem.SINGLE);
   }
 }

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -512,7 +512,7 @@ public void doTestVector(Project project, Instance[] pin, Value[] val) throws Te
       thr.printStackTrace();
     }
 
-    if (prop.isOscillating()) throw new TestException("oscilation detected");
+    if (prop.isOscillating()) throw new TestException("oscillation detected");
 
     FailException err = null;
 

File: src/main/java/com/cburch/logisim/gui/log/LogPanel.java
Patch:
@@ -70,7 +70,7 @@ public PrintHandler getPrintHandler() {
 //   return null;
 // }
 
-  protected LogFrame getLogFrame() {
+  public LogFrame getLogFrame() {
     return logFrame;
   }
   

File: src/main/java/com/cburch/logisim/gui/log/Loggable.java
Patch:
@@ -37,7 +37,7 @@ public interface Loggable {
 
   public BitWidth getBitWidth(Object option);
   
-  Object[] getLogOptions(CircuitState state);
+  Object[] getLogOptions();
 
   Value getLogValue(CircuitState state, Object option);
   

File: src/main/java/com/cburch/logisim/gui/main/CanvasPainter.java
Patch:
@@ -235,6 +235,8 @@ void paintContents(Graphics g, Project proj) {
     circState.drawOscillatingPoints(ptContext);
     gScaled.setColor(Color.BLUE);
     proj.getSimulator().drawStepPoints(ptContext);
+    gScaled.setColor(Color.MAGENTA); // fixme
+    proj.getSimulator().drawPendingInputs(ptContext);
     gScaled.dispose();
   }
 

File: src/main/java/com/cburch/logisim/gui/main/SimulationToolbarModel.java
Patch:
@@ -114,8 +114,8 @@ public void itemSelected(ToolbarItem item) {
 
   public void stateChanged(ChangeEvent e) {
     Simulator sim = project.getSimulator();
-    boolean running = sim != null && sim.isRunning();
-    boolean ticking = sim != null && sim.isTicking();
+    boolean running = sim != null && sim.isAutoPropagating();
+    boolean ticking = sim != null && sim.isAutoTicking();
     if (running) {
       RunToggleIcon.setType(SimulationIcon.SIM_PAUSE);
       simRunToggle.setToolTip(S.getter("simulateStopTip"));

File: src/main/java/com/cburch/logisim/gui/opts/SimulateOptions.java
Patch:
@@ -143,7 +143,7 @@ public void actionPerformed(ActionEvent event) {
       } else if (source == MemUnknown) {
         AppPreferences.Memory_Startup_Unknown.set(MemUnknown.isSelected());
         Simulator sim = getProject().getSimulator();
-        if (sim != null) sim.requestReset();
+        if (sim != null) sim.reset();
       }
     }
 

File: src/main/java/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -514,7 +514,7 @@ private static int runSimulation(
       }
       prevOutputs = curOutputs;
       tickCount++;
-      prop.tick();
+      prop.toggleClocks();
       prop.propagate();
     }
     long elapse = System.currentTimeMillis() - start;

File: src/main/java/com/cburch/logisim/gui/test/TestBench.java
Patch:
@@ -127,7 +127,7 @@ private boolean startSimulator() {
 
     VhdlSimulatorTop vsim = sim.getCircuitState().getProject().getVhdlSimulator();
     vsim.enable();
-    sim.setIsRunning(true);
+    sim.setAutoPropagation(true);
     /* TODO Timeout */
     while (vsim.isEnabled()) {
       Thread.yield();

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -223,7 +223,7 @@ public boolean getShowState() {
     return context.getShowState();
   }
 
-  public long getTickCount() {
+  public int getTickCount() {
     return context.getCircuitState().getPropagator().getTickCount();
   }
 

File: src/main/java/com/cburch/logisim/instance/InstanceState.java
Patch:
@@ -52,7 +52,7 @@ public interface InstanceState {
 
   Project getProject();
 
-  long getTickCount();
+  int getTickCount();
 
   boolean isCircuitRoot();
 

File: src/main/java/com/cburch/logisim/instance/InstanceStateImpl.java
Patch:
@@ -103,7 +103,7 @@ public Project getProject() {
     return circuitState.getProject();
   }
 
-  public long getTickCount() {
+  public int getTickCount() {
     return circuitState.getPropagator().getTickCount();
   }
 

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsInformation.java
Patch:
@@ -91,7 +91,7 @@ public boolean hasOverlap(BoardRectangle orig , BoardRectangle update) {
   public FPGAIOInformationContainer getHighligted() { return highlighted; }
   
   public boolean tryMap(JPanel parent) {
-	if (!mapMode) return false;
+   	if (!mapMode) return false;
     if (highlighted != null) return highlighted.tryMap(parent);
     return false;
   }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultHolyCrossAppearance.java
Patch:
@@ -141,7 +141,6 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
     edge.put(Direction.WEST, new ArrayList<>());
     int MaxLeftLabelLength = 0;
     int MaxRightLabelLength = 0;
-    String a = "", b = "";
     for (Instance pin : pins) {
       Direction pinEdge;
       String labelString = pin.getAttributeValue(StdAttr.LABEL);
@@ -150,13 +149,11 @@ public static List<CanvasObject> build(Collection<Instance> pins, String name) {
         pinEdge = Direction.EAST;
         if (LabelWidth > MaxRightLabelLength) {
           MaxRightLabelLength = LabelWidth;
-          b = labelString;
         }
       } else {
         pinEdge = Direction.WEST;
         if (LabelWidth > MaxLeftLabelLength) {
           MaxLeftLabelLength = LabelWidth;
-          a = labelString;
         }
       }
       List<Instance> e = edge.get(pinEdge);

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -435,10 +435,9 @@ private static class OptionComboRenderer<V> extends BasicComboBoxRenderer {
       this.attr = attr;
     }
 
-    @SuppressWarnings("rawtypes")
     @Override
     public Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
       Component ret =
           super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
       if (ret instanceof JLabel) {

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -65,7 +65,6 @@
 import javax.xml.transform.Result;
 import javax.xml.transform.Source;
 import javax.xml.transform.Transformer;
-import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
 import javax.xml.transform.TransformerFactory;
 import javax.xml.transform.dom.DOMSource;

File: src/main/java/com/cburch/logisim/fpga/gui/ListModelCellRenderer.java
Patch:
@@ -59,7 +59,7 @@ public ListModelCellRenderer(boolean countLines) {
 
   @Override
   public Component getListCellRendererComponent(
-      JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+      JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
     SimpleDRCContainer msg = null;
     setBackground(list.getBackground());
     setForeground(list.getForeground());

File: src/main/java/com/cburch/logisim/gui/appear/LayoutThumbnail.java
Patch:
@@ -32,7 +32,6 @@
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.circuit.appear.AppearancePort;
 import com.cburch.logisim.circuit.appear.DynamicElement;
-import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.comp.ComponentDrawContext;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.instance.Instance;

File: src/main/java/com/cburch/logisim/gui/hex/BufferedLineReader.java
Patch:
@@ -36,7 +36,6 @@
 import java.io.RandomAccessFile;
 import java.io.Reader;
 import java.io.StringReader;
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.StandardCharsets;
 
 /**
@@ -233,7 +232,6 @@ int underlyingReadBytes(byte[] bbuf, int off, int len) throws IOException {
 
   private static class Adapter extends InputStream {
     RandomAccessFile r;
-    int n;
 
     Adapter(RandomAccessFile in) {
       r = in;

File: src/main/java/com/cburch/logisim/gui/log/SelectionList.java
Patch:
@@ -88,7 +88,7 @@ private static class MyCellRenderer extends DefaultListCellRenderer {
 
     @Override
     public java.awt.Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean hasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean hasFocus) {
       java.awt.Component ret =
           super.getListCellRendererComponent(list, value, index, isSelected, hasFocus);
       if (ret instanceof JLabel && value instanceof SelectionItem) {

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -208,8 +208,6 @@ private void clearItems(ArrayList<CircuitStateMenuItem> items) {
   @Override
   void computeEnabled() {
     boolean present = currentState != null;
-    Simulator sim = this.currentSim;
-    boolean simRunning = sim != null && sim.isRunning();
     setEnabled(present);
     runToggle.setEnabled(present);
     reset.setEnabled(present);

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -72,7 +72,7 @@ public void localeChanged() {
   private static class ListRenderer extends DefaultListCellRenderer {
     @Override
     public Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
       Component ret;
       Icon icon;
       if (value instanceof Tool) {

File: src/main/java/com/cburch/logisim/prefs/Template.java
Patch:
@@ -35,7 +35,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
-import java.io.UnsupportedEncodingException;
 import java.nio.charset.StandardCharsets;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;

File: src/main/java/com/cburch/logisim/soc/data/SocBusTransaction.java
Patch:
@@ -55,7 +55,7 @@ public class SocBusTransaction {
   public static final int MultipleSlavesError = 3;
   public static final int NoneAtomicReadWriteError = 4;
   public static final int NoSocBusConnectedError = 5;
-  public static final int MisallignedAddressError = 6;
+  public static final int MisalignedAddressError = 6;
   public static final int AccessTypeNotSupportedError = 7;
   public static final int ReadOnlyAccessError = 8;
   public static final int WriteOnlyAccessError = 9;
@@ -108,7 +108,7 @@ public String getErrorMessage() {
       case MultipleSlavesError : return S.get("SocTransactionMultipleSlaveAnswers");
       case NoneAtomicReadWriteError : return S.get("SocTransactionNoneAtomicRW");
       case NoSocBusConnectedError : return S.get("SocTransactionNoBusConnected");
-      case MisallignedAddressError: return S.get("SocTransactionMisallignedAddress");
+      case MisalignedAddressError: return S.get("SocTransactionMisalignedAddress");
       case AccessTypeNotSupportedError : 
         switch (access) {
           case ByteAccess     : return S.get("SocTransactionByteAccesNoSupport");
@@ -130,7 +130,7 @@ public String getShortErrorMessage() {
       case MultipleSlavesError : return S.get("SocTransactionMultipleSlaveAnswersShort");
       case NoneAtomicReadWriteError : return S.get("SocTransactionNoneAtomicRWShort");
       case NoSocBusConnectedError : return S.get("SocTransactionNoBusConnectedShort");
-      case MisallignedAddressError: return S.get("SocTransactionMisallignedAddressShort");
+      case MisalignedAddressError: return S.get("SocTransactionMisalignedAddressShort");
       case AccessTypeNotSupportedError : 
         switch (access) {
           case ByteAccess     : return S.get("SocTransactionByteAccesNoSupportShort");

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartState.java
Patch:
@@ -327,7 +327,7 @@ public void handleTransaction(SocBusTransaction trans) {
       }
       return;
     }
-    trans.setError(SocBusTransaction.MisallignedAddressError);
+    trans.setError(SocBusTransaction.MisalignedAddressError);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2State.java
Patch:
@@ -197,7 +197,7 @@ public void setClock(Value clock, CircuitState cState) {
     public void SimButtonPressed() { simState.buttonPressed(); }
 
     public void setProgramCounter(int value) {
-      /* TODO: check for misalligned exception */
+      /* TODO: check for misaligned exception */
       pc = value;
     }
 

File: src/main/java/com/cburch/logisim/soc/pio/PioState.java
Patch:
@@ -395,7 +395,7 @@ public void handleTransaction(SocBusTransaction trans) {
                              break;
       case OUT_CLEAR_INDEX : handleOutputBitOperation(trans,true);
                              break;
-      default              : trans.setError(SocBusTransaction.MisallignedAddressError);
+      default              : trans.setError(SocBusTransaction.MisalignedAddressError);
                              break;
     }
   }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32im_state.java
Patch:
@@ -152,7 +152,7 @@ public void SimButtonPressed() {
     }
       
     public void setProgramCounter(int value) {
-      /* TODO: check for misalligned exception */
+      /* TODO: check for misaligned exception */
       pc = value;
     }
       

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -60,7 +60,6 @@
 import javax.sound.sampled.AudioInputStream;
 import javax.sound.sampled.AudioSystem;
 import javax.sound.sampled.Clip;
-import javax.sound.sampled.Mixer;
 
 public class Buzzer extends InstanceFactory {
 

File: src/main/java/com/cburch/logisim/std/memory/RamState.java
Patch:
@@ -34,10 +34,9 @@
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.instance.Instance;
-import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.std.memory.Mem.MemListener;
 
-public class RamState extends MemState implements InstanceData, AttributeListener {
+public class RamState extends MemState implements AttributeListener {
 
   private Instance parent;
   private final MemListener listener;

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -35,15 +35,13 @@
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.gui.FPGAReport;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
 
 public class SRFlipFlop extends AbstractFlipFlop {
-  private static class SRFFHDLGeneratorFactory extends AbstractFlipFlopHDLGeneratorFactory
-      implements HDLGeneratorFactory {
+  private static class SRFFHDLGeneratorFactory extends AbstractFlipFlopHDLGeneratorFactory {
     @Override
     public String ComponentName() {
       return "S-R Flip-Flop";

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -35,15 +35,13 @@
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.gui.FPGAReport;
-import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.Map;
 
 public class TFlipFlop extends AbstractFlipFlop {
-  private static class TFFHDLGeneratorFactory extends AbstractFlipFlopHDLGeneratorFactory
-      implements HDLGeneratorFactory {
+  private static class TFFHDLGeneratorFactory extends AbstractFlipFlopHDLGeneratorFactory {
     @Override
     public String ComponentName() {
       return "T Flip-Flop";

File: src/main/java/com/cburch/logisim/util/InputEventUtil.java
Patch:
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.util.Strings.S;
 
-import java.awt.Event;
 import java.awt.event.InputEvent;
 import java.util.ArrayList;
 import java.util.Iterator;

File: src/main/java/com/cburch/logisim/util/LocaleManager.java
Patch:
@@ -264,8 +264,6 @@ public static void setReplaceAccents(boolean value) {
   private ResourceBundle settings = null;
   private ResourceBundle locale = null;
 
-  private final ResourceBundle dflt_locale = null;
-
   public LocaleManager(String dir_name, String file_start) {
     this.dir_name = dir_name;
     this.file_start = file_start;

File: src/main/java/com/cburch/logisim/util/TextLineNumber.java
Patch:
@@ -51,7 +51,6 @@
 import java.awt.Insets;
 import java.awt.Point;
 import java.awt.Rectangle;
-import java.awt.geom.Rectangle2D;
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.util.HashMap;

File: src/main/java/com/cburch/logisim/vhdl/sim/VhdlSimulatorVhdlTop.java
Patch:
@@ -32,7 +32,6 @@
 import com.cburch.logisim.comp.ComponentFactory;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
-import com.cburch.logisim.std.hdl.VhdlContentComponent;
 import com.cburch.logisim.std.hdl.VhdlEntityComponent;
 import com.cburch.logisim.util.FileUtil;
 import com.cburch.logisim.util.LocaleManager;

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsInformation.java
Patch:
@@ -91,7 +91,7 @@ public boolean hasOverlap(BoardRectangle orig , BoardRectangle update) {
   public FPGAIOInformationContainer getHighligted() { return highlighted; }
   
   public boolean tryMap(JPanel parent) {
-	if (!mapMode) return false;
+   	if (!mapMode) return false;
     if (highlighted != null) return highlighted.tryMap(parent);
     return false;
   }

File: src/main/java/com/cburch/logisim/soc/data/SocBusTransaction.java
Patch:
@@ -55,7 +55,7 @@ public class SocBusTransaction {
   public static final int MultipleSlavesError = 3;
   public static final int NoneAtomicReadWriteError = 4;
   public static final int NoSocBusConnectedError = 5;
-  public static final int MisallignedAddressError = 6;
+  public static final int MisalignedAddressError = 6;
   public static final int AccessTypeNotSupportedError = 7;
   public static final int ReadOnlyAccessError = 8;
   public static final int WriteOnlyAccessError = 9;
@@ -108,7 +108,7 @@ public String getErrorMessage() {
       case MultipleSlavesError : return S.get("SocTransactionMultipleSlaveAnswers");
       case NoneAtomicReadWriteError : return S.get("SocTransactionNoneAtomicRW");
       case NoSocBusConnectedError : return S.get("SocTransactionNoBusConnected");
-      case MisallignedAddressError: return S.get("SocTransactionMisallignedAddress");
+      case MisalignedAddressError: return S.get("SocTransactionMisalignedAddress");
       case AccessTypeNotSupportedError : 
         switch (access) {
           case ByteAccess     : return S.get("SocTransactionByteAccesNoSupport");
@@ -130,7 +130,7 @@ public String getShortErrorMessage() {
       case MultipleSlavesError : return S.get("SocTransactionMultipleSlaveAnswersShort");
       case NoneAtomicReadWriteError : return S.get("SocTransactionNoneAtomicRWShort");
       case NoSocBusConnectedError : return S.get("SocTransactionNoBusConnectedShort");
-      case MisallignedAddressError: return S.get("SocTransactionMisallignedAddressShort");
+      case MisalignedAddressError: return S.get("SocTransactionMisalignedAddressShort");
       case AccessTypeNotSupportedError : 
         switch (access) {
           case ByteAccess     : return S.get("SocTransactionByteAccesNoSupportShort");

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartState.java
Patch:
@@ -327,7 +327,7 @@ public void handleTransaction(SocBusTransaction trans) {
       }
       return;
     }
-    trans.setError(SocBusTransaction.MisallignedAddressError);
+    trans.setError(SocBusTransaction.MisalignedAddressError);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2State.java
Patch:
@@ -197,7 +197,7 @@ public void setClock(Value clock, CircuitState cState) {
     public void SimButtonPressed() { simState.buttonPressed(); }
 
     public void setProgramCounter(int value) {
-      /* TODO: check for misalligned exception */
+      /* TODO: check for misaligned exception */
       pc = value;
     }
 

File: src/main/java/com/cburch/logisim/soc/pio/PioState.java
Patch:
@@ -395,7 +395,7 @@ public void handleTransaction(SocBusTransaction trans) {
                              break;
       case OUT_CLEAR_INDEX : handleOutputBitOperation(trans,true);
                              break;
-      default              : trans.setError(SocBusTransaction.MisallignedAddressError);
+      default              : trans.setError(SocBusTransaction.MisalignedAddressError);
                              break;
     }
   }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32im_state.java
Patch:
@@ -152,7 +152,7 @@ public void SimButtonPressed() {
     }
       
     public void setProgramCounter(int value) {
-      /* TODO: check for misalligned exception */
+      /* TODO: check for misaligned exception */
       pc = value;
     }
       

File: src/main/java/com/cburch/logisim/gui/generic/ComboBox.java
Patch:
@@ -32,6 +32,8 @@
 import javax.swing.JComboBox;
 
 public class ComboBox<T> extends JComboBox<T> {
+  private static final long serialVersionUID = 1L;
+
   public ComboBox(T[] choices) {
     super(choices);
     setMaximumRowCount(Math.min(choices.length, 33));

File: src/main/java/com/cburch/logisim/gui/generic/ComboBox.java
Patch:
@@ -42,14 +42,14 @@ public static class MultiCharSelectionManager implements JComboBox.KeySelectionM
     String prefix = "";
     long last;
 
-    static int currentIndex(ComboBoxModel model) {
+    static int currentIndex(ComboBoxModel<? extends Object> model) {
       Object item = model.getSelectedItem();
       for (int i = 0; item != null && i < model.getSize(); i++)
         if (item.equals(model.getElementAt(i))) return i;
       return -1;
     }
 
-    public int selectionForKey(char ch, ComboBoxModel model) {
+    public int selectionForKey(char ch, ComboBoxModel<? extends Object> model) {
       int idx = currentIndex(model);
       long now = System.currentTimeMillis();
       if (now > last + 500) {

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -521,7 +521,7 @@ static class BitWidthRenderer extends DefaultListCellRenderer {
     public BitWidthRenderer() {
     }
     @Override
-    public Component getListCellRendererComponent(JList<?> list,
+    public Component getListCellRendererComponent(JList<? extends Object> list,
         Object w, int index, boolean isSelected, boolean cellHasFocus) {
       String s = ((Integer)w) == 1 ? ("1 bit") : (w + " bits");
       return super.getListCellRendererComponent(list, s, index, isSelected, cellHasFocus);

File: src/main/java/com/cburch/logisim/data/Attributes.java
Patch:
@@ -435,10 +435,9 @@ private static class OptionComboRenderer<V> extends BasicComboBoxRenderer {
       this.attr = attr;
     }
 
-    @SuppressWarnings("rawtypes")
     @Override
     public Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
       Component ret =
           super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
       if (ret instanceof JLabel) {

File: src/main/java/com/cburch/logisim/fpga/gui/ListModelCellRenderer.java
Patch:
@@ -59,7 +59,7 @@ public ListModelCellRenderer(boolean countLines) {
 
   @Override
   public Component getListCellRendererComponent(
-      JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+      JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
     SimpleDRCContainer msg = null;
     setBackground(list.getBackground());
     setForeground(list.getForeground());

File: src/main/java/com/cburch/logisim/gui/log/SelectionList.java
Patch:
@@ -88,7 +88,7 @@ private static class MyCellRenderer extends DefaultListCellRenderer {
 
     @Override
     public java.awt.Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean hasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean hasFocus) {
       java.awt.Component ret =
           super.getListCellRendererComponent(list, value, index, isSelected, hasFocus);
       if (ret instanceof JLabel && value instanceof SelectionItem) {

File: src/main/java/com/cburch/logisim/gui/opts/ToolbarList.java
Patch:
@@ -72,7 +72,7 @@ public void localeChanged() {
   private static class ListRenderer extends DefaultListCellRenderer {
     @Override
     public Component getListCellRendererComponent(
-        JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
+        JList<? extends Object> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
       Component ret;
       Icon icon;
       if (value instanceof Tool) {

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -122,7 +122,7 @@ public void paintInstance(InstancePainter painter) {
           loc.getY(),
           g2,
           painter.getInstance(),
-          painter.getAttributeValue(SocBusAttributes.SOC_TRACE_VISABLE),
+          painter.getAttributeValue(SocBusAttributes.SOC_TRACE_VISIBLE),
           painter.getData());
   }
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusStateInfo.java
Patch:
@@ -295,7 +295,7 @@ else if (nrOfReponders != 1)
       SocBusState data = getRegPropagateState();
       if (data != null) {
         data.addTransaction(trans);
-        if (myComp.getAttributeSet().getValue(SocBusAttributes.SOC_TRACE_VISABLE))
+        if (myComp.getAttributeSet().getValue(SocBusAttributes.SOC_TRACE_VISIBLE))
           ((InstanceComponent) myComp).getInstance().fireInvalidated();
       }
     }

File: src/main/java/com/cburch/logisim/soc/rv32im/Rv32im_riscv.java
Patch:
@@ -145,7 +145,7 @@ public void paintInstance(InstancePainter painter) {
     		Bounds.create(loc.getX()+CpuDrawSupport.busConBounds.getX(), loc.getY()+CpuDrawSupport.busConBounds.getY(), 
     				CpuDrawSupport.busConBounds.getWidth(), CpuDrawSupport.busConBounds.getHeight()));
     RV32im_state state = painter.getAttributeValue(RV32imAttributes.RV32IM_STATE);
-    state.paint(loc.getX(), loc.getY(), g2,painter.getInstance(),painter.getAttributeValue(RV32imAttributes.RV32IM_STATE_VISABLE), painter.getData());
+    state.paint(loc.getX(), loc.getY(), g2,painter.getInstance(),painter.getAttributeValue(RV32imAttributes.RV32IM_STATE_VISIBLE), painter.getData());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/soc/bus/SocBus.java
Patch:
@@ -122,7 +122,7 @@ public void paintInstance(InstancePainter painter) {
           loc.getY(),
           g2,
           painter.getInstance(),
-          painter.getAttributeValue(SocBusAttributes.SOC_TRACE_VISABLE),
+          painter.getAttributeValue(SocBusAttributes.SOC_TRACE_VISIBLE),
           painter.getData());
   }
 

File: src/main/java/com/cburch/logisim/soc/data/SocBusStateInfo.java
Patch:
@@ -295,7 +295,7 @@ else if (nrOfReponders != 1)
       SocBusState data = getRegPropagateState();
       if (data != null) {
         data.addTransaction(trans);
-        if (myComp.getAttributeSet().getValue(SocBusAttributes.SOC_TRACE_VISABLE))
+        if (myComp.getAttributeSet().getValue(SocBusAttributes.SOC_TRACE_VISIBLE))
           ((InstanceComponent) myComp).getInstance().fireInvalidated();
       }
     }

File: src/main/java/com/cburch/logisim/soc/rv32im/Rv32im_riscv.java
Patch:
@@ -145,7 +145,7 @@ public void paintInstance(InstancePainter painter) {
     		Bounds.create(loc.getX()+CpuDrawSupport.busConBounds.getX(), loc.getY()+CpuDrawSupport.busConBounds.getY(), 
     				CpuDrawSupport.busConBounds.getWidth(), CpuDrawSupport.busConBounds.getHeight()));
     RV32im_state state = painter.getAttributeValue(RV32imAttributes.RV32IM_STATE);
-    state.paint(loc.getX(), loc.getY(), g2,painter.getInstance(),painter.getAttributeValue(RV32imAttributes.RV32IM_STATE_VISABLE), painter.getData());
+    state.paint(loc.getX(), loc.getY(), g2,painter.getInstance(),painter.getAttributeValue(RV32imAttributes.RV32IM_STATE_VISIBLE), painter.getData());
   }
 
   @Override

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -167,7 +167,7 @@ public void mousePressed(Canvas canvas, MouseEvent e) {
     double zoom = canvas.getZoomFactor();
     fieldLoc.x = (int) Math.round(mx * zoom - fieldLoc.x);
     fieldLoc.y = (int) Math.round(my * zoom - fieldLoc.y);
-    int caret = field.viewToModel(fieldLoc);
+    int caret = field.viewToModel2D(fieldLoc);
     if (caret >= 0) {
       field.setCaretPosition(caret);
     }

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -247,7 +247,7 @@ Library loadJarFile(File request, String className) throws LoadFailedException {
     // instantiate library
     Library ret;
     try {
-      ret = (Library) retClass.newInstance();
+      ret = (Library) retClass.getDeclaredConstructor().newInstance();
     } catch (Exception e) {
       throw new LoadFailedException(
           StringUtil.format(S.get("jarLibraryNotCreatedError"), className));

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/RightPanel.java
Patch:
@@ -125,9 +125,9 @@ private void createPanel() {
 
     defineSizes();
 
-    layeredPane.add(mCursor, new Integer(1));
-    layeredPane.add(mTimeLine, new Integer(0));
-    layeredPane.add(rightBox, new Integer(0));
+    layeredPane.add(mCursor, Integer.valueOf(1));
+    layeredPane.add(mTimeLine, Integer.valueOf(0));
+    layeredPane.add(rightBox, Integer.valueOf(0));
 
     this.add(layeredPane, BorderLayout.WEST);
   }

File: src/main/java/com/cburch/logisim/gui/main/KeyboardToolSelection.java
Patch:
@@ -51,7 +51,7 @@ public KeyboardToolSelection(Toolbar toolbar, int index) {
   public static void register(Toolbar toolbar) {
     ActionMap amap = toolbar.getActionMap();
     InputMap imap = toolbar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
-    int mask = toolbar.getToolkit().getMenuShortcutKeyMask();
+    int mask = toolbar.getToolkit().getMenuShortcutKeyMaskEx();
     for (int i = 0; i < 10; i++) {
       KeyStroke keyStroke = KeyStroke.getKeyStroke((char) ('0' + i), mask);
       int j = (i == 0 ? 10 : i - 1);

File: src/main/java/com/cburch/logisim/gui/main/LayoutToolbarModel.java
Patch:
@@ -215,7 +215,7 @@ public String getToolTip() {
       }
       if (index <= 10) {
         if (index == 10) index = 0;
-        int mask = frame.getToolkit().getMenuShortcutKeyMask();
+        int mask = frame.getToolkit().getMenuShortcutKeyMaskEx();
         ret += " (" + InputEventUtil.toKeyDisplayString(mask) + "-" + index + ")";
       }
       return ret;

File: src/main/java/com/cburch/logisim/gui/menu/MenuEdit.java
Patch:
@@ -63,7 +63,7 @@ class MenuEdit extends Menu {
   public MenuEdit(LogisimMenuBar menubar) {
     this.menubar = menubar;
 
-    int menuMask = getToolkit().getMenuShortcutKeyMask();
+    int menuMask = getToolkit().getMenuShortcutKeyMaskEx();
     undo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask));
     redo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask | KeyEvent.SHIFT_DOWN_MASK));
     cut.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, menuMask));

File: src/main/java/com/cburch/logisim/gui/menu/MenuFile.java
Patch:
@@ -65,14 +65,14 @@ public MenuFile(LogisimMenuBar menubar) {
     this.menubar = menubar;
     openRecent = new OpenRecent(menubar);
 
-    int menuMask = getToolkit().getMenuShortcutKeyMask();
+    int menuMask = getToolkit().getMenuShortcutKeyMaskEx();
 
     newi.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, menuMask));
     merge.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_M, menuMask));
     open.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, menuMask));
-    close.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W, menuMask | InputEvent.SHIFT_MASK));
+    close.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W, menuMask | InputEvent.SHIFT_DOWN_MASK));
     save.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, menuMask));
-    saveAs.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, menuMask | InputEvent.SHIFT_MASK));
+    saveAs.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, menuMask | InputEvent.SHIFT_DOWN_MASK));
     print.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, menuMask));
     quit.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Q, menuMask));
 

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -105,7 +105,7 @@ public MenuSimulate(LogisimMenuBar menubar) {
     menubar.registerItem(LogisimMenuBar.TICK_HALF, tickHalf);
     menubar.registerItem(LogisimMenuBar.TICK_FULL, tickFull);
 
-    int menuMask = getToolkit().getMenuShortcutKeyMask();
+    int menuMask = getToolkit().getMenuShortcutKeyMaskEx();
     runToggle.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_E, menuMask));
     reset.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, menuMask));
     step.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_I, menuMask));
@@ -250,7 +250,7 @@ private void recreateStateMenu(JMenu menu, ArrayList<CircuitStateMenuItem> items
     menu.removeAll();
     menu.setEnabled(items.size() > 0);
     boolean first = true;
-    int mask = getToolkit().getMenuShortcutKeyMask();
+    int mask = getToolkit().getMenuShortcutKeyMaskEx();
     for (int i = items.size() - 1; i >= 0; i--) {
       JMenuItem item = items.get(i);
       menu.add(item);

File: src/main/java/com/cburch/logisim/instance/InstanceLoggerAdapter.java
Patch:
@@ -46,7 +46,7 @@ public InstanceLoggerAdapter(
       InstanceComponent comp, Class<? extends InstanceLogger> loggerClass) {
     try {
       this.comp = comp;
-      this.logger = loggerClass.newInstance();
+      this.logger = loggerClass.getDeclaredConstructor().newInstance();
       this.state = new InstanceStateImpl(null, comp);
     } catch (Exception t) {
       handleError(t, loggerClass);

File: src/main/java/com/cburch/logisim/instance/InstancePokerAdapter.java
Patch:
@@ -55,7 +55,7 @@ class InstancePokerAdapter extends AbstractCaret implements Pokable {
   public InstancePokerAdapter(InstanceComponent comp, Class<? extends InstancePoker> pokerClass) {
     try {
       this.comp = comp;
-      poker = pokerClass.newInstance();
+      poker = pokerClass.getDeclaredConstructor().newInstance();
     } catch (Exception t) {
       handleError(t, pokerClass);
       poker = null;

File: src/main/java/com/cburch/logisim/tools/FactoryDescription.java
Patch:
@@ -119,7 +119,7 @@ public ComponentFactory getFactory(Class<? extends Library> libraryClass) {
         msg = "loading class";
         Class<?> factoryClass = loader.loadClass(name);
         msg = "creating instance";
-        Object factoryValue = factoryClass.newInstance();
+        Object factoryValue = factoryClass.getDeclaredConstructor().newInstance();
         msg = "converting to factory";
         if (factoryValue instanceof ComponentFactory) {
           ret = (ComponentFactory) factoryValue;

File: src/main/java/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -444,7 +444,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // selection is being modified
     Collection<Component> in_sel = sel.getComponentsContaining(start, g);
     if (!in_sel.isEmpty()) {
-      if ((e.getModifiers() & InputEvent.SHIFT_MASK) == 0) {
+      if ((e.getModifiersEx() & InputEvent.SHIFT_DOWN_MASK) == 0) {
         setState(proj, MOVING);
         proj.repaintCanvas();
         return;
@@ -460,7 +460,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
     // wants to add/reset selection
     Collection<Component> clicked = circuit.getAllContaining(start, g);
     if (!clicked.isEmpty()) {
-      if ((e.getModifiers() & InputEvent.SHIFT_MASK) == 0) {
+      if ((e.getModifiersEx() & InputEvent.SHIFT_DOWN_MASK) == 0) {
         if (sel.getComponentsContaining(start).isEmpty()) {
           Action act = SelectionActions.dropAll(sel);
           if (act != null) {
@@ -480,7 +480,7 @@ public void mousePressed(Canvas canvas, Graphics g, MouseEvent e) {
 
     // The user clicked on the background. This is a rectangular
     // selection (maybe with the shift key down).
-    if ((e.getModifiers() & InputEvent.SHIFT_MASK) == 0) {
+    if ((e.getModifiersEx() & InputEvent.SHIFT_DOWN_MASK) == 0) {
       Action act = SelectionActions.dropAll(sel);
       if (act != null) {
         proj.doAction(act);

File: src/main/java/com/cburch/logisim/util/WindowMenu.java
Patch:
@@ -102,7 +102,7 @@ public WindowMenu(JFrame owner) {
     this.owner = owner;
     WindowMenuManager.addMenu(this);
 
-    int menuMask = getToolkit().getMenuShortcutKeyMask();
+    int menuMask = getToolkit().getMenuShortcutKeyMaskEx();
     minimize.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_M, menuMask));
     close.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W, menuMask));
 

File: src/main/java/com/cburch/logisim/std/io/extra/Slider.java
Patch:
@@ -214,7 +214,7 @@ public Slider() {
           StdAttr.DEFAULT_LABEL_FONT,
           true,
           LEFT_TO_RIGHT,
-          0
+          Long.valueOf(0)
         });
     setFacingAttribute(StdAttr.FACING);
     setIconName("slider.gif");

File: src/main/java/com/cburch/draw/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/actions/ModelAddAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -47,13 +47,13 @@ public ModelAddAction(CanvasModel model, CanvasObject added) {
 
   public ModelAddAction(CanvasModel model, Collection<CanvasObject> added) {
     super(model);
-    this.added = new ArrayList<CanvasObject>(added);
+    this.added = new ArrayList<>(added);
     this.addIndex = model.getObjectsFromBottom().size();
   }
 
   public ModelAddAction(CanvasModel model, Collection<CanvasObject> added, int index) {
     super(model);
-    this.added = new ArrayList<CanvasObject>(added);
+    this.added = new ArrayList<>(added);
     this.addIndex = index;
   }
 

File: src/main/java/com/cburch/draw/actions/ModelChangeAttributeAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -86,7 +86,7 @@ public String getName() {
 
   @Override
   public Collection<CanvasObject> getObjects() {
-    Set<CanvasObject> ret = new HashSet<CanvasObject>();
+    Set<CanvasObject> ret = new HashSet<>();
     for (AttributeMapKey key : newValues.keySet()) {
       ret.add(key.getObject());
     }

File: src/main/java/com/cburch/draw/actions/ModelDeleteHandleAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/actions/ModelEditTextAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -60,7 +60,7 @@ public String getName() {
 
   @Override
   public Collection<CanvasObject> getObjects() {
-    return Collections.singleton((CanvasObject) text);
+    return Collections.singleton(text);
   }
 
   @Override

File: src/main/java/com/cburch/draw/actions/ModelInsertHandleAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/actions/ModelMoveHandleAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/actions/ModelRemoveAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/actions/ModelTranslateAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -44,7 +44,7 @@ public class ModelTranslateAction extends ModelAction {
 
   public ModelTranslateAction(CanvasModel model, Collection<CanvasObject> moved, int dx, int dy) {
     super(model);
-    this.moved = new HashSet<CanvasObject>(moved);
+    this.moved = new HashSet<>(moved);
     this.dx = dx;
     this.dy = dy;
   }

File: src/main/java/com/cburch/draw/canvas/ActionDispatcher.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,5 +31,5 @@
 import com.cburch.draw.undo.Action;
 
 public interface ActionDispatcher {
-  public void doAction(Action action);
+  void doAction(Action action);
 }

File: src/main/java/com/cburch/draw/canvas/CanvasTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/canvas/SelectionEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -33,11 +33,10 @@
 import java.util.EventObject;
 
 public class SelectionEvent extends EventObject {
-  private static final long serialVersionUID = 1L;
   public static final int ACTION_ADDED = 0;
   public static final int ACTION_REMOVED = 1;
   public static final int ACTION_HANDLE = 2;
-
+  private static final long serialVersionUID = 1L;
   private final int action;
   private final Collection<CanvasObject> affected;
 

File: src/main/java/com/cburch/draw/canvas/SelectionListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,5 +31,5 @@
 import java.util.EventListener;
 
 public interface SelectionListener extends EventListener {
-  public void selectionChanged(SelectionEvent e);
+  void selectionChanged(SelectionEvent e);
 }

File: src/main/java/com/cburch/draw/gui/AttrTableDrawManager.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -96,9 +96,9 @@ public void selectionChanged(SelectionEvent e) {
   public void setValueRequested(Attribute<Object> attr, Object value) throws AttrTableSetException {
     SelectionAttributes attrs = (SelectionAttributes) getAttributeSet();
     Map<AttributeMapKey, Object> oldVals;
-    oldVals = new HashMap<AttributeMapKey, Object>();
+    oldVals = new HashMap<>();
     Map<AttributeMapKey, Object> newVals;
-    newVals = new HashMap<AttributeMapKey, Object>();
+    newVals = new HashMap<>();
     for (Map.Entry<AttributeSet, CanvasObject> ent : attrs.entries()) {
       AttributeMapKey key = new AttributeMapKey(attr, ent.getValue());
       oldVals.put(key, ent.getKey().getValue(attr));

File: src/main/java/com/cburch/draw/gui/AttrTableToolModel.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -51,7 +51,7 @@ public abstract class AbstractCanvasObject implements AttributeSet, CanvasObject
   private EventSourceWeakSupport<AttributeListener> listeners;
 
   public AbstractCanvasObject() {
-    listeners = new EventSourceWeakSupport<AttributeListener>();
+    listeners = new EventSourceWeakSupport<>();
   }
 
   public void addAttributeListener(AttributeListener l) {
@@ -78,7 +78,7 @@ public boolean canRemove() {
   public CanvasObject clone() {
     try {
       AbstractCanvasObject ret = (AbstractCanvasObject) super.clone();
-      ret.listeners = new EventSourceWeakSupport<AttributeListener>();
+      ret.listeners = new EventSourceWeakSupport<>();
       return ret;
     } catch (CloneNotSupportedException e) {
       return null;

File: src/main/java/com/cburch/draw/model/AttributeMapKey.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/model/CanvasModelListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,5 +31,5 @@
 import java.util.EventListener;
 
 public interface CanvasModelListener extends EventListener {
-  public void modelChanged(CanvasModelEvent event);
+  void modelChanged(CanvasModelEvent event);
 }

File: src/main/java/com/cburch/draw/model/Handle.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/FillableCanvasObject.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/Line.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/Oval.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/Poly.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/Rectangle.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/shapes/Rectangular.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -160,7 +160,8 @@ private Handle[] getHandleArray(HandleGesture gesture) {
           if (x1 == hx) newX0 -= dx;
           if (y0 == hy) newY1 -= dy;
           if (y1 == hy) newY0 -= dy;
-        } else {; // already handled
+        } else {
+          // already handled
         }
       }
       return new Handle[] {

File: src/main/java/com/cburch/draw/toolbar/AbstractToolbarModel.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -35,7 +35,7 @@ public abstract class AbstractToolbarModel implements ToolbarModel {
   private final List<ToolbarModelListener> listeners;
 
   public AbstractToolbarModel() {
-    listeners = new ArrayList<ToolbarModelListener>();
+    listeners = new ArrayList<>();
   }
 
   public void addToolbarModelListener(ToolbarModelListener listener) {

File: src/main/java/com/cburch/draw/toolbar/ToolbarButton.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/toolbar/ToolbarClickableItem.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -33,7 +33,7 @@
 
 public interface ToolbarClickableItem extends ToolbarItem {
 
-  public void clicked();
+  void clicked();
 
-  public void paintPressedIcon(Component destination, Graphics g);
+  void paintPressedIcon(Component destination, Graphics g);
 }

File: src/main/java/com/cburch/draw/toolbar/ToolbarModelEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/toolbar/ToolbarModelListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,7 +29,7 @@
 package com.cburch.draw.toolbar;
 
 public interface ToolbarModelListener {
-  public void toolbarAppearanceChanged(ToolbarModelEvent event);
+  void toolbarAppearanceChanged(ToolbarModelEvent event);
 
-  public void toolbarContentsChanged(ToolbarModelEvent event);
+  void toolbarContentsChanged(ToolbarModelEvent event);
 }

File: src/main/java/com/cburch/draw/toolbar/ToolbarSeparator.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -28,13 +28,12 @@
 
 package com.cburch.draw.toolbar;
 
+import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.Color;
 import java.awt.Component;
 import java.awt.Dimension;
 import java.awt.Graphics;
 
-import com.cburch.logisim.prefs.AppPreferences;
-
 public class ToolbarSeparator implements ToolbarItem {
   private final int size;
 

File: src/main/java/com/cburch/draw/tools/AbstractTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/CurveTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/OvalTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/RectangleTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/RectangularTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/RoundRectangleTool.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/tools/ToolbarToolItem.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/undo/Action.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/draw/util/EditableLabelField.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -37,8 +37,8 @@
 import javax.swing.JTextField;
 
 public class EditableLabelField extends JTextField {
-  private static final long serialVersionUID = 1L;
   static final int FIELD_BORDER = 2;
+  private static final long serialVersionUID = 1L;
 
   public EditableLabelField() {
     super(10);

File: src/main/java/com/cburch/draw/util/TextMetrics.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -39,6 +39,7 @@
 
 public class TextMetrics {
 
+  private static final Canvas canvas = new Canvas();
   public int ascent;
   public int descent;
   public int leading;
@@ -78,8 +79,6 @@ public TextMetrics(Graphics g, Font font, String text) {
     height = ascent + descent + leading;
   }
 
-  private static final Canvas canvas = new Canvas();
-
   public TextMetrics(Component c, Font font, String text) {
     if (c == null) c = canvas;
     if (font == null) font = c.getFont();

File: src/main/java/com/cburch/gray/CounterPoker.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/hdl/HdlFile.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/hdl/HdlModelListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,5 +31,5 @@
 public interface HdlModelListener {
 
   /** Called when the content of the given model has been set. */
-  public void contentSet(HdlModel source);
+  void contentSet(HdlModel source);
 }

File: src/main/java/com/cburch/hdl/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/hex/HexModelListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,7 +29,7 @@
 package com.cburch.hex;
 
 public interface HexModelListener {
-  public void bytesChanged(HexModel source, long start, long numBytes, long[] oldValues);
+  void bytesChanged(HexModel source, long start, long numBytes, long[] oldValues);
 
-  public void metainfoChanged(HexModel source);
+  void metainfoChanged(HexModel source);
 }

File: src/main/java/com/cburch/hex/Measures.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/LogisimVersion.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/data/CsvParameter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/data/Range.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableCsvFile.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableFileFilter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/file/TruthtableTextFile.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -37,7 +37,6 @@
 import com.cburch.logisim.analyze.model.VariableList;
 import com.cburch.logisim.circuit.Circuit;
 import com.cburch.logisim.gui.generic.OptionPane;
-
 import java.io.File;
 import java.io.IOException;
 import java.io.PrintStream;

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/AnalyzerManager.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/AnalyzerTab.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -28,9 +28,9 @@
 
 package com.cburch.logisim.analyze.gui;
 
-import javax.swing.JPanel;
 import com.cburch.logisim.gui.menu.EditHandler;
 import com.cburch.logisim.gui.menu.PrintHandler;
+import javax.swing.JPanel;
 
 abstract class AnalyzerTab extends JPanel {
   private static final long serialVersionUID = 1L;

File: src/main/java/com/cburch/logisim/analyze/gui/BuildCircuitButton.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -184,7 +184,7 @@ public void actionPerformed(ActionEvent event) {
         if (!SyntaxChecker.isVariableNameAcceptable(name, true)) continue;
         
         /* Check for name collisions with input and output names */
-        HashSet<String> labels = new HashSet<String>();
+        HashSet<String> labels = new HashSet<>();
         for (String label : model.getInputs().getNames()) labels.add(label.toUpperCase());
         for (String label : model.getOutputs().getNames()) labels.add(label.toUpperCase());
         if (labels.contains(name.toUpperCase())) {
@@ -199,7 +199,7 @@ public void actionPerformed(ActionEvent event) {
         if (dest != null) {
           /* prevent upper-case lower-case mismatch */
           for (Circuit circ : dest.getLogisimFile().getCircuits()) {
-            if (circ.getName().toLowerCase().equals(name.toLowerCase())) name = circ.getName();
+            if (circ.getName().equalsIgnoreCase(name)) name = circ.getName();
           }
         }
 

File: src/main/java/com/cburch/logisim/analyze/gui/CsvReadParameterDialog.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -76,9 +76,9 @@ public CsvReadParameterDialog(CsvParameter sel, File file, JFrame parrentFrame)
     String[] PossibleQuotes = {"\"", "'"};
     OkBut = new JButton(S.get("ConfirmCsvParameters"));
     OkBut.addActionListener(this);
-    quotes = new JComboBox<String>(PossibleQuotes);
+    quotes = new JComboBox<>(PossibleQuotes);
     quotes.addActionListener(this);
-    seperators = new JComboBox<String>(PossibleSeperators);
+    seperators = new JComboBox<>(PossibleSeperators);
     seperators.addActionListener(this);
     setLocationRelativeTo(parrentFrame);
     this.param = sel;

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/ExportTableButton.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionView.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -37,10 +37,10 @@
 import java.awt.Graphics;
 import java.awt.Graphics2D;
 import java.awt.RenderingHints;
+import java.awt.event.ComponentAdapter;
 import java.awt.event.ComponentEvent;
 import java.awt.event.FocusEvent;
 import java.awt.event.FocusListener;
-import java.awt.event.ComponentAdapter;
 import javax.swing.JPanel;
 
 class ExpressionView extends JPanel {

File: src/main/java/com/cburch/logisim/analyze/gui/ImportTableButton.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/OutputSelector.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -98,7 +98,7 @@ public void paint(Graphics g) {
         AttributedString as;
         if (txt.contains(":")) {
           int idx = txt.indexOf(':');
-          as = new AttributedString(txt.substring(0, idx) + txt.substring(idx + 1, txt.length()));
+          as = new AttributedString(txt.substring(0, idx) + txt.substring(idx + 1));
           as.addAttribute(TextAttribute.SUPERSCRIPT, TextAttribute.SUPERSCRIPT_SUB, idx, txt.length() - 1);
         } else if (txt.contains("[")) {
           int start = txt.indexOf('[');
@@ -155,7 +155,7 @@ public void setSelectedItem(Object value) {
 
   private final VariableList source;
   private final JLabel label = new JLabel();
-  private final JComboBox<String> select = new JComboBox<String>();
+  private final JComboBox<String> select = new JComboBox<>();
 
   public OutputSelector(AnalyzerModel model) {
     this.source = model.getOutputs();

File: src/main/java/com/cburch/logisim/analyze/gui/TableTabCaret.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/gui/TableTabClip.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -33,7 +33,6 @@
 import com.cburch.logisim.analyze.model.Entry;
 import com.cburch.logisim.analyze.model.TruthTable;
 import com.cburch.logisim.gui.generic.OptionPane;
-
 import java.awt.Rectangle;
 import java.awt.datatransfer.Clipboard;
 import java.awt.datatransfer.ClipboardOwner;

File: src/main/java/com/cburch/logisim/analyze/model/AnalyzerModel.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/Assignments.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -32,7 +32,7 @@
 import java.util.Map;
 
 class Assignments {
-  private final Map<String, Boolean> map = new HashMap<String, Boolean>();
+  private final Map<String, Boolean> map = new HashMap<>();
 
   public Assignments() {}
 

File: src/main/java/com/cburch/logisim/analyze/model/Expressions.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -328,10 +328,10 @@ private static boolean isAllUndefined(Entry[] a) {
 
   private final AnalyzerModel model;
 
-  private final HashMap<String, OutputData> outputData = new HashMap<String, OutputData>();
+  private final HashMap<String, OutputData> outputData = new HashMap<>();
 
   private final ArrayList<OutputExpressionsListener> listeners =
-      new ArrayList<OutputExpressionsListener>();
+      new ArrayList<>();
 
   private boolean updatingTable = false;
 

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressionsEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressionsListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.analyze.model;
 
 public interface OutputExpressionsListener {
-  public void expressionChanged(OutputExpressionsEvent event);
+  void expressionChanged(OutputExpressionsEvent event);
 }

File: src/main/java/com/cburch/logisim/analyze/model/Parser.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -84,7 +84,7 @@ private static boolean okCharacter(char c) {
   }
 
   private static Expression parse(ArrayList<Token> tokens) throws ParserException {
-    ArrayList<Context> stack = new ArrayList<Context>();
+    ArrayList<Context> stack = new ArrayList<>();
     Expression current = null;
     for (int i = 0; i < tokens.size(); i++) {
       Token t = tokens.get(i);
@@ -272,7 +272,7 @@ static String replaceVariable(String in, String oldName, String newName) {
   }
 
   private static ArrayList<Token> toTokens(String in, boolean includeWhite) {
-    ArrayList<Token> tokens = new ArrayList<Token>();
+    ArrayList<Token> tokens = new ArrayList<>();
 
     // Guarantee that we will stop just after reading whitespace,
     // not in the middle of a token.

File: src/main/java/com/cburch/logisim/analyze/model/ParserException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/TruthTable.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -42,14 +42,14 @@ public class TruthTable {
   private static final Entry DEFAULT_ENTRY = Entry.DONT_CARE;
 
   private final MyListener myListener = new MyListener();
-  private final List<TruthTableListener> listeners = new ArrayList<TruthTableListener>();
+  private final List<TruthTableListener> listeners = new ArrayList<>();
 
   private final AnalyzerModel model;
   private ArrayList<Row> rows = new ArrayList<>(); // visible input rows
   private final ArrayList<Entry[]> columns = new ArrayList<>(); // output columns
   private static final CompareInputs sortByInputs = new CompareInputs();
 
-  private class Row implements Iterable<Integer> {
+  private static class Row implements Iterable<Integer> {
     // todo: probably more efficient to store this in baseIdx/dcMask format.
     Entry[] inputs;
 

File: src/main/java/com/cburch/logisim/analyze/model/TruthTableEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/Var.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -30,7 +30,6 @@
 
 import static com.cburch.logisim.analyze.Strings.S;
 
-import java.text.ParseException;
 import java.util.Iterator;
 
 public class Var implements Iterable<String> {

File: src/main/java/com/cburch/logisim/analyze/model/VariableListEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/analyze/model/VariableListListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.analyze.model;
 
 public interface VariableListListener {
-  public void listChanged(VariableListEvent event);
+  void listChanged(VariableListEvent event);
 }

File: src/main/java/com/cburch/logisim/circuit/AnalyzeException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitAction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit;
 
 public interface CircuitListener {
-  public void circuitChanged(CircuitEvent event);
+  void circuitChanged(CircuitEvent event);
 }

File: src/main/java/com/cburch/logisim/circuit/CircuitLocker.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -48,7 +48,7 @@ public int compare(Circuit a, Circuit b) {
 
   static Map<Circuit, Lock> acquireLocks(CircuitTransaction xn, CircuitMutatorImpl mutator) {
     Map<Circuit, Integer> requests = xn.getAccessedCircuits();
-    Map<Circuit, Lock> circuitLocks = new HashMap<Circuit, Lock>();
+    Map<Circuit, Lock> circuitLocks = new HashMap<>();
     // Acquire locks in serial-number order to avoid deadlock
     Circuit[] lockOrder = requests.keySet().toArray(new Circuit[0]);
     Arrays.sort(lockOrder, new CircuitComparator());
@@ -62,7 +62,7 @@ static Map<Circuit, Lock> acquireLocks(CircuitTransaction xn, CircuitMutatorImpl
           circuitLocks.put(circ, lock);
         } else if (access == CircuitTransaction.READ_WRITE) {
           Thread curThread = Thread.currentThread();
-          if (locker.mutatingThread == curThread) {; // nothing to do - thread already has lock
+          if (locker.mutatingThread == curThread) {// nothing to do - thread already has lock
           } else {
             Lock lock = locker.circuitLock.writeLock();
             lock.lock();

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -53,7 +53,7 @@ public final class CircuitMutation extends CircuitTransaction {
 
   public CircuitMutation(Circuit circuit) {
     this.primary = circuit;
-    this.changes = new ArrayList<CircuitChange>();
+    this.changes = new ArrayList<>();
   }
 
   public void add(Component comp) {
@@ -75,7 +75,7 @@ public void clear() {
   @Override
   protected Map<Circuit, Integer> getAccessedCircuits() {
     HashMap<Circuit, Integer> accessMap = new HashMap<>();
-    HashSet<Circuit> supercircsDone = new HashSet<Circuit>();
+    HashSet<Circuit> supercircsDone = new HashSet<>();
     HashSet<VhdlEntity> vhdlDone = new HashSet<>();
     HashSet<ComponentFactory> siblingsDone = new HashSet<>();
     for (CircuitChange change : changes) {

File: src/main/java/com/cburch/logisim/circuit/CircuitTransaction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/CircuitTransactionResult.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/ComponentDataGuiProvider.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit;
 
 public interface ComponentDataGuiProvider {
-   public void destroy();
+   void destroy();
 }

File: src/main/java/com/cburch/logisim/circuit/PropagationPoints.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -63,7 +63,7 @@ public int hashCode() {
   private final HashSet<Entry> data;
 
   PropagationPoints() {
-    this.data = new HashSet<Entry>();
+    this.data = new HashSet<>();
   }
 
   void add(CircuitState state, Location loc) {
@@ -86,7 +86,7 @@ void draw(ComponentDrawContext context) {
     if (data.isEmpty()) return;
 
     CircuitState state = context.getCircuitState();
-    HashMap<CircuitState, CircuitState> stateMap = new HashMap<CircuitState, CircuitState>();
+    HashMap<CircuitState, CircuitState> stateMap = new HashMap<>();
     for (CircuitState s : state.getSubstates()) {
       addSubstates(stateMap, s, s);
     }

File: src/main/java/com/cburch/logisim/circuit/RadixOption.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SimulatorEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SimulatorTicker.java
Patch:
@@ -9,7 +9,7 @@
  * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  * GNU General Public License for more details.
  *
- * <p>You should have received a copy of the GNU General Public License along with
+ * <p>You should have received a copy of the GNU General Public License alongwith
  * logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * <p>Original code by Carl Burch (http://www.cburch.com), 2011. Subsequent modifications by: +

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -196,7 +196,7 @@ public ComponentFactory getFactory() {
     return SplitterFactory.instance;
   }
   
-  public void setFactory(ComponentFactory fact) {}; 
+  public void setFactory(ComponentFactory fact) {}
 
   @Override
   public Object getFeature(Object key) {
@@ -259,7 +259,7 @@ public String getToolTip(ComponentUserEvent e) {
 
   @Override
   public void propagate(CircuitState state) {
-    ; // handled by CircuitWires, nothing to do
+    // handled by CircuitWires, nothing to do
   }
 
   public boolean shouldRepairWire(WireRepairData data) {

File: src/main/java/com/cburch/logisim/circuit/SplitterDistributeItem.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SplitterParameters.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -364,7 +364,7 @@ private class ChangeAppearanceTransaction extends CircuitTransaction {
 
     @Override
     protected Map<Circuit, Integer> getAccessedCircuits() {
-      Map<Circuit, Integer> accessMap = new HashMap<Circuit, Integer>();
+      Map<Circuit, Integer> accessMap = new HashMap<>();
       for (Circuit supercirc : source.getCircuitsUsingThis()) {
         accessMap.put(supercirc, READ_WRITE);
       }

File: src/main/java/com/cburch/logisim/circuit/SubcircuitPoker.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -35,7 +35,6 @@
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstancePoker;
 import com.cburch.logisim.instance.InstanceState;
-
 import java.awt.Color;
 import java.awt.Graphics;
 import java.awt.event.MouseEvent;

File: src/main/java/com/cburch/logisim/circuit/WidthIncompatibilityData.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -37,8 +37,8 @@ public class WidthIncompatibilityData {
   private final ArrayList<BitWidth> widths;
 
   public WidthIncompatibilityData() {
-    points = new ArrayList<Location>();
-    widths = new ArrayList<BitWidth>();
+    points = new ArrayList<>();
+    widths = new ArrayList<>();
   }
 
   public void add(Location p, BitWidth w) {

File: src/main/java/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -97,7 +97,7 @@ public static Wire create(Location e0, Location e1) {
       Attributes.forInteger("length", S.getter("wireLengthAttr"));
 
   private static final List<Attribute<?>> ATTRIBUTES =
-      Arrays.asList(new Attribute<?>[] {dir_attr, len_attr});
+      Arrays.asList(dir_attr, len_attr);
 
   private static final Cache cache = new Cache();
 

File: src/main/java/com/cburch/logisim/circuit/WireBundle.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -40,7 +40,7 @@ class WireBundle {
   private Location widthDeterminant = null;
   private boolean isBuss = false;
   WireThread[] threads = null;
-  CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<Location>(); // points
+  CopyOnWriteArraySet<Location> points = new CopyOnWriteArraySet<>(); // points
   // bundle
   // hits
   private WidthIncompatibilityData incompatibilityData = null;

File: src/main/java/com/cburch/logisim/circuit/WireFactory.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/WireIterator.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/WireSet.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -46,7 +46,7 @@ public class WireSet {
       points = Collections.emptySet();
     } else {
       this.wires = wires;
-      points = new HashSet<Location>();
+      points = new HashSet<>();
       for (Wire w : wires) {
         points.add(w.e0);
         points.add(w.e1);

File: src/main/java/com/cburch/logisim/circuit/WireThread.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -33,7 +33,7 @@
 class WireThread {
   private WireThread parent;
   private final CopyOnWriteArraySet<CircuitWires.ThreadBundle> bundles =
-      new CopyOnWriteArraySet<CircuitWires.ThreadBundle>();
+      new CopyOnWriteArraySet<>();
 
   WireThread() {
     parent = this;

File: src/main/java/com/cburch/logisim/circuit/WireUtil.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceAnchor.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceElement.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/AppearancePort.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/AppearanceSvgReader.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearanceEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/circuit/appear/CircuitAppearanceListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit.appear;
 
 public interface CircuitAppearanceListener {
-  public void circuitAppearanceChanged(CircuitAppearanceEvent event);
+  void circuitAppearanceChanged(CircuitAppearanceEvent event);
 }

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -35,7 +35,6 @@
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.instance.Instance;
 import java.util.Collection;
-import java.util.Collections;
 import java.util.Comparator;
 import java.util.List;
 

File: src/main/java/com/cburch/logisim/circuit/appear/DynamicElement.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/AbstractComponent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/AbstractComponentFactory.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/ComponentDrawContext.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/ComponentEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/ComponentState.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.comp;
 
 public interface ComponentState {
-  public Object clone();
+  Object clone();
 }

File: src/main/java/com/cburch/logisim/comp/ComponentUserEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/EndData.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/TextField.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -52,7 +52,7 @@ public class TextField {
   private int valign;
   private Font font;
   private String text = "";
-  private final LinkedList<TextFieldListener> listeners = new LinkedList<TextFieldListener>();
+  private final LinkedList<TextFieldListener> listeners = new LinkedList<>();
 
   public TextField(int x, int y, int halign, int valign) {
     this(x, y, halign, valign, null);
@@ -114,7 +114,7 @@ public void draw(Graphics g) {
   }
 
   public void fireTextChanged(TextFieldEvent e) {
-    for (TextFieldListener l : new ArrayList<TextFieldListener>(listeners)) {
+    for (TextFieldListener l : new ArrayList<>(listeners)) {
       l.textChanged(e);
     }
   }

File: src/main/java/com/cburch/logisim/comp/TextFieldEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/comp/TextFieldListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.comp;
 
 public interface TextFieldListener {
-  public void textChanged(TextFieldEvent e);
+  void textChanged(TextFieldEvent e);
 }

File: src/main/java/com/cburch/logisim/data/Attribute.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/AttributeDefaultProvider.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,7 +31,7 @@
 import com.cburch.logisim.LogisimVersion;
 
 public interface AttributeDefaultProvider {
-  public Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver);
+  Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver);
 
-  public boolean isAllDefaultValues(AttributeSet attrs, LogisimVersion ver);
+  boolean isAllDefaultValues(AttributeSet attrs, LogisimVersion ver);
 }

File: src/main/java/com/cburch/logisim/data/AttributeEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/AttributeListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,7 +29,7 @@
 package com.cburch.logisim.data;
 
 public interface AttributeListener {
-  public void attributeListChanged(AttributeEvent e);
+  void attributeListChanged(AttributeEvent e);
 
-  public void attributeValueChanged(AttributeEvent e);
+  void attributeValueChanged(AttributeEvent e);
 }

File: src/main/java/com/cburch/logisim/data/AttributeOption.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -113,7 +113,7 @@ private static class SingletonSet extends AbstractAttributeSet {
     private boolean readOnly = false;
 
     SingletonSet(Attribute<?> attr, Object initValue) {
-      this.attrs = new ArrayList<Attribute<?>>(1);
+      this.attrs = new ArrayList<>(1);
       this.attrs.add(attr);
       this.value = initValue;
     }

File: src/main/java/com/cburch/logisim/data/BitWidth.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/Bounds.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/Direction.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/FailException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -39,7 +39,7 @@ public class FailException extends TestException {
   private final int column;
   private final Value expected;
   private final Value computed;
-  private final ArrayList<FailException> more = new ArrayList<FailException>();
+  private final ArrayList<FailException> more = new ArrayList<>();
 
   public FailException(int column, String columnName, Value expected, Value computed) {
     super(
@@ -81,7 +81,7 @@ public void clearMore() {
   }
 
   public ArrayList<FailException> getAll() {
-    ArrayList<FailException> ret = new ArrayList<FailException>();
+    ArrayList<FailException> ret = new ArrayList<>();
     ret.add(this);
     ret.addAll(more);
     return ret;

File: src/main/java/com/cburch/logisim/data/Location.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/TestException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/data/TestVector.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -48,7 +48,7 @@ public boolean accept(File f) {
 
       String name = f.getName();
       int i = name.lastIndexOf('.');
-      return (i > 0 && name.substring(i).toLowerCase().equals(".txt"));
+      return (i > 0 && name.substring(i).equalsIgnoreCase(".txt"));
     }
 
     public String getDescription() {
@@ -84,7 +84,7 @@ public void parse() throws IOException {
       if (curLine == null) throw new IOException("TestVector format error: empty file");
 
       parseHeader();
-      data = new ArrayList<Value[]>();
+      data = new ArrayList<>();
       curLine = findNonemptyLine();
 
       while (curLine != null) {

File: src/main/java/com/cburch/logisim/data/Value.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -135,11 +135,11 @@ public static Value fromLogString(BitWidth width, String t) throws Exception {
       else if ('A' <= c && c <= 'F') d = 0xA + (c - 'A');
       else
         throw new Exception(
-            "unexpected character '" + t.substring(i, i + 1) + "' in \"" + t + "\"");
+            "unexpected character '" + t.charAt(i) + "' in \"" + t + "\"");
 
       if (d >= radix)
         throw new Exception(
-            "unexpected character '" + t.substring(i, i + 1) + "' in \"" + t + "\"");
+            "unexpected character '" + t.charAt(i) + "' in \"" + t + "\"");
 
       value *= radix;
       unknown *= radix;

File: src/main/java/com/cburch/logisim/file/LibraryEvent.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/LibraryEventSource.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,7 +29,7 @@
 package com.cburch.logisim.file;
 
 public interface LibraryEventSource {
-  public void addLibraryListener(LibraryListener listener);
+  void addLibraryListener(LibraryListener listener);
 
-  public void removeLibraryListener(LibraryListener listener);
+  void removeLibraryListener(LibraryListener listener);
 }

File: src/main/java/com/cburch/logisim/file/LibraryListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -29,5 +29,5 @@
 package com.cburch.logisim.file;
 
 public interface LibraryListener {
-  public void libraryChanged(LibraryEvent event);
+  void libraryChanged(LibraryEvent event);
 }

File: src/main/java/com/cburch/logisim/file/LoadFailedException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/Loader.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -149,9 +149,9 @@ private static void recoverBackup(File backup, File dest) {
   // to be cleared with each new file
   private File mainFile = null;
 
-  private final Stack<File> filesOpening = new Stack<File>();
+  private final Stack<File> filesOpening = new Stack<>();
 
-  private Map<File, File> substitutions = new HashMap<File, File>();
+  private Map<File, File> substitutions = new HashMap<>();
 
   public Loader(Component parent) {
     this.parent = parent;

File: src/main/java/com/cburch/logisim/file/LoaderException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/Options.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/ProjectsDirty.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -74,7 +74,7 @@ public static void initialize() {
   }
 
   private static final ProjectListListener projectListListener = new ProjectListListener();
-  private static final ArrayList<DirtyListener> listeners = new ArrayList<DirtyListener>();
+  private static final ArrayList<DirtyListener> listeners = new ArrayList<>();
 
   private ProjectsDirty() {}
 }

File: src/main/java/com/cburch/logisim/file/ReaderInputStream.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/file/XmlCircuitReader.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -269,7 +269,7 @@ private void buildCircuit(XmlReader.CircuitData circData, CircuitMutator mutator
 
   private void buildDynamicAppearance(XmlReader.CircuitData circData, CircuitMutator mutator) {
     Circuit dest = circData.circuit;
-    List<AbstractCanvasObject> shapes = new ArrayList<AbstractCanvasObject>();
+    List<AbstractCanvasObject> shapes = new ArrayList<>();
     for (Element appearElt : XmlIterator.forChildElements(circData.circuitElement, "appear")) {
       for (Element sub : XmlIterator.forChildElements(appearElt)) {
         // Dynamic shapes are handled here. Static shapes are already done.
@@ -305,7 +305,7 @@ private void buildDynamicAppearance(XmlReader.CircuitData circData, CircuitMutat
 
   @Override
   protected Map<Circuit, Integer> getAccessedCircuits() {
-    HashMap<Circuit, Integer> access = new HashMap<Circuit, Integer>();
+    HashMap<Circuit, Integer> access = new HashMap<>();
     for (XmlReader.CircuitData data : circuitsData) {
       access.put(data.circuit, READ_WRITE);
     }

File: src/main/java/com/cburch/logisim/file/XmlReaderException.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/Strings.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/data/BoardInformation.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -52,7 +52,7 @@ public void AddComponent(FPGAIOInformationContainer comp) {
 
   public void clear() {
 	if (MyComponents == null)
-	  MyComponents = new LinkedList<FPGAIOInformationContainer>();
+	  MyComponents = new LinkedList<>();
 	else
       MyComponents.clear();
     boardname = null;
@@ -129,7 +129,7 @@ public BufferedImage GetImage() {
 
   public ArrayList<BoardRectangle> GetIoComponentsOfType(
       IOComponentTypes type, int nrOfPins) {
-    ArrayList<BoardRectangle> result = new ArrayList<BoardRectangle>();
+    ArrayList<BoardRectangle> result = new ArrayList<>();
     for (FPGAIOInformationContainer comp : MyComponents) {
       if (comp.GetType().equals(type)) {
         if ((!type.equals(IOComponentTypes.DIPSwitch))

File: src/main/java/com/cburch/logisim/fpga/data/BoardManipulatorListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -30,6 +30,6 @@
 
 public interface BoardManipulatorListener {
 
-   public void boardNameChanged(String newBoardName);
-   public void componentsChanged(IOComponentsInformation IOcomps);
+   void boardNameChanged(String newBoardName);
+   void componentsChanged(IOComponentsInformation IOcomps);
 }

File: src/main/java/com/cburch/logisim/fpga/data/BoardRectangle.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/data/ComponentMapInformationContainer.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/data/ComponentMapParser.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/data/DriveStrength.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -52,7 +52,7 @@ public static char getId(String identifier) {
   }
 
   public static LinkedList<String> getStrings() {
-    LinkedList<String> result = new LinkedList<String>();
+    LinkedList<String> result = new LinkedList<>();
 
     result.add(Behavior_strings[0]);
     result.add(Behavior_strings[1]);

File: src/main/java/com/cburch/logisim/fpga/data/FPGAClass.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -39,7 +39,7 @@ public static char getId(String identifier) {
     Iterator<String> iter = thelist.iterator();
     result = 0;
     while (iter.hasNext()) {
-      if (iter.next().toUpperCase().equals(identifier.toUpperCase())) return result;
+      if (iter.next().equalsIgnoreCase(identifier)) return result;
       result++;
     }
     return VendorSoftware.VendorUnknown;

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentTypes.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -30,11 +30,10 @@
 
 import static com.cburch.logisim.fpga.Strings.S;
 
-import java.util.EnumSet;
-
 import com.cburch.logisim.std.io.DipSwitch;
 import com.cburch.logisim.std.io.RGBLed;
 import com.cburch.logisim.std.io.ReptarLocalBus;
+import java.util.EnumSet;
 
 public enum IOComponentTypes {
   LED,

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsListener.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -31,5 +31,5 @@
 import java.awt.Rectangle;
 
 public interface IOComponentsListener {
-   public void repaintRequest(Rectangle rect);
+   void repaintRequest(Rectangle rect);
 }

File: src/main/java/com/cburch/logisim/fpga/data/IoStandards.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -52,7 +52,7 @@ public static char getId(String identifier) {
   }
 
   public static LinkedList<String> getStrings() {
-    LinkedList<String> result = new LinkedList<String>();
+    LinkedList<String> result = new LinkedList<>();
 
     result.add(Behavior_strings[0]);
     result.add(Behavior_strings[1]);

File: src/main/java/com/cburch/logisim/fpga/data/PinActivity.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -45,7 +45,7 @@ public static char getId(String identifier) {
   }
 
   public static LinkedList<String> getStrings() {
-    LinkedList<String> result = new LinkedList<String>();
+    LinkedList<String> result = new LinkedList<>();
 
     result.add(Behavior_strings[0]);
     result.add(Behavior_strings[1]);

File: src/main/java/com/cburch/logisim/fpga/data/PullBehaviors.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -56,7 +56,7 @@ public static char getId(String identifier) {
   }
 
   public static LinkedList<String> getStrings() {
-    LinkedList<String> result = new LinkedList<String>();
+    LinkedList<String> result = new LinkedList<>();
 
     result.add(Behavior_strings[0]);
     result.add(Behavior_strings[1]);

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/BubbleInformationContainer.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ClockTreeFactory.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -37,7 +37,7 @@ public class ClockTreeFactory {
   private final ArrayList<ClockTreeContainer> sourcetrees;
 
   public ClockTreeFactory() {
-    sourcetrees = new ArrayList<ClockTreeContainer>();
+    sourcetrees = new ArrayList<>();
   }
 
   public void AddClockNet( ArrayList<String> HierarchyNames, int clocksourceid, 

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionEnd.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -40,7 +40,7 @@ public class ConnectionEnd {
   public ConnectionEnd(boolean OutputEnd, Byte nr_of_bits, Component comp) {
     IsOutput = OutputEnd;
     this.nr_of_bits = nr_of_bits;
-    MyConnections = new ArrayList<ConnectionPoint>();
+    MyConnections = new ArrayList<>();
     for (byte i = 0; i < nr_of_bits; i++) MyConnections.add(new ConnectionPoint(comp));
   }
 

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPointArray.java
Patch:
@@ -11,7 +11,7 @@
  * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * for more details.
  *
- * You should have received a copy of the GNU General Public License along 
+ * You should have received a copy of the GNU General Public License along
  * with logisim-evolution. If not, see <http://www.gnu.org/licenses/>.
  *
  * Original code by Carl Burch (http://www.cburch.com), 2011.
@@ -35,7 +35,7 @@ class ConnectionPointArray {
   private final ArrayList<ConnectionPoint> MyConnections;
 
   public ConnectionPointArray() {
-    MyConnections = new ArrayList<ConnectionPoint>();
+    MyConnections = new ArrayList<>();
   }
 
   public void AddConnection(ConnectionPoint Connection) {

File: src/main/java/com/cburch/draw/shapes/Curve.java
Patch:
@@ -223,15 +223,15 @@ public int matchesHashCode() {
   public Handle moveHandle(HandleGesture gesture) {
     Handle[] hs = getHandleArray(gesture);
     Handle ret = null;
-    if (!hs[0].equals(p0)) {
+    if (!hs[0].getLocation().equals(p0)) {
       p0 = hs[0].getLocation();
       ret = hs[0];
     }
-    if (!hs[1].equals(p1)) {
+    if (!hs[1].getLocation().equals(p1)) {
       p1 = hs[1].getLocation();
       ret = hs[1];
     }
-    if (!hs[2].equals(p2)) {
+    if (!hs[2].getLocation().equals(p2)) {
       p2 = hs[2].getLocation();
       ret = hs[2];
     }

File: src/main/java/com/cburch/logisim/circuit/Analyze.java
Patch:
@@ -400,7 +400,7 @@ private static void propagateWires(
         WireThread t = bundle.threads[p.bit];
         for (CircuitWires.ThreadBundle tb : t.getBundles()) {
           for (Location p2 : tb.b.points) {
-            if (p2.equals(p)) continue;
+            if (p2.equals(p.loc)) continue;
             LocationBit p2b = new LocationBit(p2, tb.loc);
             Expression old = expressionMap.get(p2b);
             if (old != null) {

File: src/main/java/com/cburch/logisim/circuit/WireRepair.java
Patch:
@@ -127,7 +127,7 @@ private void doMerges(CircuitMutator mutator) {
         Collection<Wire> wset = Collections.singleton(wnew);
 
         for (Wire w : mergeSet) {
-          if (!w.equals(wset)) {
+          if (!w.equals(wnew)) {
             repl.put(w, wset);
           }
         }

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -155,8 +155,8 @@ public void keyTyped(KeyEvent e) {
             if (model != null
                 && cursor >= model.getFirstOffset()
                 && cursor <= model.getLastOffset()) {
-              int curValue = (int) model.get(cursor);
-              int newValue = 16 * curValue + digit;
+              long curValue = (long) model.get(cursor);
+              long newValue = 16 * curValue + digit;
               model.set(cursor, newValue);
             }
           }

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -155,8 +155,8 @@ public void keyTyped(KeyEvent e) {
             if (model != null
                 && cursor >= model.getFirstOffset()
                 && cursor <= model.getLastOffset()) {
-              int curValue = (int) model.get(cursor);
-              int newValue = 16 * curValue + digit;
+              long curValue = (long) model.get(cursor);
+              long newValue = 16 * curValue + digit;
               model.set(cursor, newValue);
             }
           }

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -236,7 +236,7 @@ public static void main(String[] args) throws Exception {
 
   private void addTab(int index, final JComponent comp) {
     if (comp instanceof TableTab || comp instanceof VariableTab || comp instanceof ExpressionTab) {
-        tabbedPane.insertTab("Untitled", null, comp, null, index);
+        tabbedPane.insertTab(S.get("untitled"), null, comp, null, index);
         return;
     }
     final JScrollPane pane = new JScrollPane(comp,
@@ -248,7 +248,7 @@ public void componentResized(ComponentEvent event) {
         comp.setSize(new Dimension(width, comp.getHeight()));
       }
     });
-    tabbedPane.insertTab("Untitled", null, pane, null, index);
+    tabbedPane.insertTab(S.get("untitled"), null, pane, null, index);
   }
 
   public AnalyzerModel getModel() {

File: src/main/java/com/cburch/logisim/std/io/extra/ITA_IO.java
Patch:
@@ -58,7 +58,7 @@ public class ITA_IO extends Library {
 
   @Override
   public String getName() {
-    return "Input/Output-Extra";
+    return S.get("input.output.extra");
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -84,7 +84,7 @@ public ArrayList<String> GetModuleFunctionality(
     String AssignmentOperator = (HDLType.equals(VHDL)) ? " <= " : " = ";
     String NotOperator = (HDLType.equals(VHDL)) ? "NOT" : "~";
     String SelectOperator = (HDLType.equals(VHDL)) ? "" : "[" + ActivityLevelStr + "]";
-    Contents.addAll(MakeRemarkBlock("Here the ouput signals are defined", 3, HDLType));
+    Contents.addAll(MakeRemarkBlock("Here the output signals are defined", 3, HDLType));
     Contents.add(
         "   "
             + Preamble

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -236,7 +236,7 @@ public static void main(String[] args) throws Exception {
 
   private void addTab(int index, final JComponent comp) {
     if (comp instanceof TableTab || comp instanceof VariableTab || comp instanceof ExpressionTab) {
-        tabbedPane.insertTab("Untitled", null, comp, null, index);
+        tabbedPane.insertTab(S.get("untitled"), null, comp, null, index);
         return;
     }
     final JScrollPane pane = new JScrollPane(comp,
@@ -248,7 +248,7 @@ public void componentResized(ComponentEvent event) {
         comp.setSize(new Dimension(width, comp.getHeight()));
       }
     });
-    tabbedPane.insertTab("Untitled", null, pane, null, index);
+    tabbedPane.insertTab(S.get("untitled"), null, pane, null, index);
   }
 
   public AnalyzerModel getModel() {

File: src/main/java/com/cburch/logisim/std/io/extra/ITA_IO.java
Patch:
@@ -58,7 +58,7 @@ public class ITA_IO extends Library {
 
   @Override
   public String getName() {
-    return "Input/Output-Extra";
+    return S.get("input.output.extra");
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -84,7 +84,7 @@ public ArrayList<String> GetModuleFunctionality(
     String AssignmentOperator = (HDLType.equals(VHDL)) ? " <= " : " = ";
     String NotOperator = (HDLType.equals(VHDL)) ? "NOT" : "~";
     String SelectOperator = (HDLType.equals(VHDL)) ? "" : "[" + ActivityLevelStr + "]";
-    Contents.addAll(MakeRemarkBlock("Here the ouput signals are defined", 3, HDLType));
+    Contents.addAll(MakeRemarkBlock("Here the output signals are defined", 3, HDLType));
     Contents.add(
         "   "
             + Preamble

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
       LogisimVersion.get(3, 4, 1, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
-  public static final int COPYRIGHT_YEAR = 2020;
+  public static final int COPYRIGHT_YEAR = 2021;
 
   public static boolean ANALYZE = true;
   public static boolean headless = false;

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
       LogisimVersion.get(3, 4, 1, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
-  public static final int COPYRIGHT_YEAR = 2020;
+  public static final int COPYRIGHT_YEAR = 2021;
 
   public static boolean ANALYZE = true;
   public static boolean headless = false;

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -40,6 +40,7 @@
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.proj.Project;
+import com.cburch.logisim.std.io.extra.Buzzer;
 import com.cburch.logisim.std.memory.Ram;
 import com.cburch.logisim.std.memory.RamState;
 import com.cburch.logisim.std.wiring.Clock;
@@ -432,6 +433,8 @@ void reset() {
         Ram ram = (Ram) comp.getFactory();
         boolean remove = ram.reset(this, Instance.getInstanceFor(comp));
         if (remove) componentData.put(comp, null);
+      } else if (comp.getFactory() instanceof Buzzer) {
+        Buzzer.StopBuzzerSound(comp, this);
       } else if (!(comp.getFactory() instanceof SubcircuitFactory)) {
         if (componentData.get(comp) instanceof ComponentDataGuiProvider)
           ((ComponentDataGuiProvider)componentData.get(comp)).destroy();

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -40,6 +40,7 @@
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.proj.Project;
+import com.cburch.logisim.std.io.extra.Buzzer;
 import com.cburch.logisim.std.memory.Ram;
 import com.cburch.logisim.std.memory.RamState;
 import com.cburch.logisim.std.wiring.Clock;
@@ -432,6 +433,8 @@ void reset() {
         Ram ram = (Ram) comp.getFactory();
         boolean remove = ram.reset(this, Instance.getInstanceFor(comp));
         if (remove) componentData.put(comp, null);
+      } else if (comp.getFactory() instanceof Buzzer) {
+        Buzzer.StopBuzzerSound(comp, this);
       } else if (!(comp.getFactory() instanceof SubcircuitFactory)) {
         if (componentData.get(comp) instanceof ComponentDataGuiProvider)
           ((ComponentDataGuiProvider)componentData.get(comp)).destroy();

File: src/main/java/com/cburch/logisim/fpga/library/BFHPraktika.java
Patch:
@@ -48,7 +48,7 @@ public BFHPraktika() {}
 
   @Override
   public String getDisplayName() {
-    return S.get("BFH mega functions");
+    return S.get("BFHMegaFunctions");
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -76,7 +76,7 @@ public bcd2sevenseg() {
     ps[Segment_E].setToolTip(S.getter("Segment_E"));
     ps[Segment_F].setToolTip(S.getter("Segment_F"));
     ps[Segment_G].setToolTip(S.getter("Segment_G"));
-    ps[BCDin].setToolTip(S.getter("BCD Value"));
+    ps[BCDin].setToolTip(S.getter("BCDValue"));
     setPorts(ps);
   }
 

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -54,7 +54,7 @@ public class bin2bcd extends InstanceFactory {
   private static final int InnerDistance = 60;
 
   public static final Attribute<BitWidth> ATTR_BinBits =
-      Attributes.forBitWidth("binvalue", S.getter("Binary data bits"), 4, 13);
+      Attributes.forBitWidth("binvalue", S.getter("BinaryDataBits"), 4, 13);
 
   public bin2bcd() {
     super("Binary_to_BCD_converter", S.getter("Bin2BCD"));

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/ChronoFrame.java
Patch:
@@ -278,7 +278,7 @@ private void createMainStructure() {
     exportDataInFile.setPreferredSize(buttonSize);
     exportDataInFile.setFocusable(false);
 
-    exportDataToImage = new JButton(S.get("Export as image"));
+    exportDataToImage = new JButton(S.get("ButtonExportAsImage"));
     exportDataToImage.setActionCommand("exportImg");
     exportDataToImage.addActionListener(myListener);
     exportDataToImage.setPreferredSize(buttonSize);

File: src/main/java/com/cburch/logisim/std/gates/PLA.java
Patch:
@@ -73,9 +73,9 @@ class PLA extends InstanceFactory {
   static final int OUT_PORT = 1;
 
   static final Attribute<BitWidth> ATTR_IN_WIDTH =
-      Attributes.forBitWidth("in_width", S.getter("Bit Width In"));
+      Attributes.forBitWidth("in_width", S.getter("plaBitWidthIn"));
   static final Attribute<BitWidth> ATTR_OUT_WIDTH =
-      Attributes.forBitWidth("out_width", S.getter("Bit Width Out"));
+      Attributes.forBitWidth("out_width", S.getter("plaBitWidthOut"));
   static Attribute<PLATable> ATTR_TABLE = new TruthTableAttribute();
 
   public static InstanceFactory FACTORY = new PLA();

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -119,7 +119,7 @@ public void run() {
       Attributes.forBitWidth("vol_width", S.getter("buzzerVolumeBitWidth"));
 
   private static final AttributeOption Hz = new AttributeOption("Hz", S.getter("Hz"));
-  private static final AttributeOption dHz = new AttributeOption("dHz", S.getter("dHz (0.1Hz)"));
+  private static final AttributeOption dHz = new AttributeOption("dHz", S.getter("buzzerUnitDhz"));
   private static final Attribute<AttributeOption> FREQUENCY_MEASURE =
       Attributes.forOption(
           "freq_measure", S.getter("buzzerFrequecy"), new AttributeOption[] {Hz, dHz});

File: src/main/java/com/cburch/logisim/fpga/library/BFHPraktika.java
Patch:
@@ -48,7 +48,7 @@ public BFHPraktika() {}
 
   @Override
   public String getDisplayName() {
-    return S.get("BFH mega functions");
+    return S.get("BFHMegaFunctions");
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -76,7 +76,7 @@ public bcd2sevenseg() {
     ps[Segment_E].setToolTip(S.getter("Segment_E"));
     ps[Segment_F].setToolTip(S.getter("Segment_F"));
     ps[Segment_G].setToolTip(S.getter("Segment_G"));
-    ps[BCDin].setToolTip(S.getter("BCD Value"));
+    ps[BCDin].setToolTip(S.getter("BCDValue"));
     setPorts(ps);
   }
 

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -54,7 +54,7 @@ public class bin2bcd extends InstanceFactory {
   private static final int InnerDistance = 60;
 
   public static final Attribute<BitWidth> ATTR_BinBits =
-      Attributes.forBitWidth("binvalue", S.getter("Binary data bits"), 4, 13);
+      Attributes.forBitWidth("binvalue", S.getter("BinaryDataBits"), 4, 13);
 
   public bin2bcd() {
     super("Binary_to_BCD_converter", S.getter("Bin2BCD"));

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/ChronoFrame.java
Patch:
@@ -278,7 +278,7 @@ private void createMainStructure() {
     exportDataInFile.setPreferredSize(buttonSize);
     exportDataInFile.setFocusable(false);
 
-    exportDataToImage = new JButton(S.get("Export as image"));
+    exportDataToImage = new JButton(S.get("ButtonExportAsImage"));
     exportDataToImage.setActionCommand("exportImg");
     exportDataToImage.addActionListener(myListener);
     exportDataToImage.setPreferredSize(buttonSize);

File: src/main/java/com/cburch/logisim/std/gates/PLA.java
Patch:
@@ -73,9 +73,9 @@ class PLA extends InstanceFactory {
   static final int OUT_PORT = 1;
 
   static final Attribute<BitWidth> ATTR_IN_WIDTH =
-      Attributes.forBitWidth("in_width", S.getter("Bit Width In"));
+      Attributes.forBitWidth("in_width", S.getter("plaBitWidthIn"));
   static final Attribute<BitWidth> ATTR_OUT_WIDTH =
-      Attributes.forBitWidth("out_width", S.getter("Bit Width Out"));
+      Attributes.forBitWidth("out_width", S.getter("plaBitWidthOut"));
   static Attribute<PLATable> ATTR_TABLE = new TruthTableAttribute();
 
   public static InstanceFactory FACTORY = new PLA();

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -119,7 +119,7 @@ public void run() {
       Attributes.forBitWidth("vol_width", S.getter("buzzerVolumeBitWidth"));
 
   private static final AttributeOption Hz = new AttributeOption("Hz", S.getter("Hz"));
-  private static final AttributeOption dHz = new AttributeOption("dHz", S.getter("dHz (0.1Hz)"));
+  private static final AttributeOption dHz = new AttributeOption("dHz", S.getter("buzzerUnitDhz"));
   private static final Attribute<AttributeOption> FREQUENCY_MEASURE =
       Attributes.forOption(
           "freq_measure", S.getter("buzzerFrequecy"), new AttributeOption[] {Hz, dHz});

File: src/main/java/com/cburch/logisim/fpga/library/BFHPraktika.java
Patch:
@@ -37,7 +37,7 @@
 
 public class BFHPraktika extends Library {
   private static FactoryDescription[] DESCRIPTIONS = {
-    new FactoryDescription("Binairy_to_BCD_converter", S.getter("Bin2BCD"), "", "bin2bcd"),
+    new FactoryDescription("Binary_to_BCD_converter", S.getter("Bin2BCD"), "", "bin2bcd"),
     new FactoryDescription(
         "BCD_to_7_Segment_decoder", S.getter("BCD2SevenSegment"), "", "bcd2sevenseg"),
   };

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -54,10 +54,10 @@ public class bin2bcd extends InstanceFactory {
   private static final int InnerDistance = 60;
 
   public static final Attribute<BitWidth> ATTR_BinBits =
-      Attributes.forBitWidth("binvalue", S.getter("Binairy data bits"), 4, 13);
+      Attributes.forBitWidth("binvalue", S.getter("Binary data bits"), 4, 13);
 
   public bin2bcd() {
-    super("Binairy_to_BCD_converter", S.getter("Bin2BCD"));
+    super("Binary_to_BCD_converter", S.getter("Bin2BCD"));
     setAttributes(new Attribute[] {bin2bcd.ATTR_BinBits}, new Object[] {BitWidth.create(9)});
     setKeyConfigurator(new BitWidthConfigurator(bin2bcd.ATTR_BinBits, 4, 13, 0));
   }
@@ -121,7 +121,7 @@ private void updatePorts(Instance instance) {
     int NrOfPorts = (int) (Math.log10(1 << nrofbits.getWidth()) + 1.0);
     Port[] ps = new Port[NrOfPorts + 1];
     ps[BINin] = new Port((int) (-0.5 * InnerDistance), 0, Port.INPUT, bin2bcd.ATTR_BinBits);
-    ps[BINin].setToolTip(S.getter("BinairyInputTip"));
+    ps[BINin].setToolTip(S.getter("BinaryInputTip"));
     for (int i = NrOfPorts; i > 0; i--) {
       ps[i] = new Port((NrOfPorts - i) * InnerDistance, -20, Port.OUTPUT, 4);
       int value = (int) Math.pow(10.0, i - 1);

File: src/main/java/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -202,7 +202,7 @@ private ArrayList<String> GetStageFunctionalityVerilog(int StageNumber, int NrOf
     Contents.add(
         "    ** Here stage "
             + StageNumber
-            + " of the binairy shift tree is defined                     **");
+            + " of the binary shift tree is defined                     **");
     Contents.add(
         "    ***************************************************************************/");
     Contents.add("");
@@ -306,7 +306,7 @@ private ArrayList<String> GetStageFunctionalityVHDL(int StageNumber, int NrOfBit
     Contents.add(
         "   --- Here stage "
             + StageNumber
-            + " of the binairy shift tree is defined                     ---");
+            + " of the binary shift tree is defined                     ---");
     Contents.add(
         "   -----------------------------------------------------------------------------");
     Contents.add("");

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -85,7 +85,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 4, 0, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 4, 1, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2020;

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -85,7 +85,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 4, 0, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 4, 1, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2020;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -550,7 +550,6 @@ public static String GetBusNameContinues(
 
   public static String GetBusName(
       NetlistComponent comp, int EndIndex, String HDLType, Netlist TheNets) {
-    String Result;
     if ((EndIndex < 0) || (EndIndex >= comp.NrOfEnds())) {
       return "";
     }
@@ -563,8 +562,9 @@ public static String GetBusName(
       return "";
     }
     Net ConnectedNet = ConnectionInformation.GetConnection((byte) 0).GetParrentNet();
-    Result = BusName + Integer.toString(TheNets.GetNetId(ConnectedNet));
-    return Result;
+    if (ConnectedNet.BitWidth() != NrOfBits)
+      return GetBusNameContinues(comp,EndIndex,HDLType,TheNets);
+    return BusName + Integer.toString(TheNets.GetNetId(ConnectedNet));
   }
 
   public static String GetClockNetName(NetlistComponent comp, int EndIndex, Netlist TheNets) {

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -563,8 +563,9 @@ public static String GetBusName(
       return "";
     }
     Net ConnectedNet = ConnectionInformation.GetConnection((byte) 0).GetParrentNet();
-    Result = BusName + Integer.toString(TheNets.GetNetId(ConnectedNet));
-    return Result;
+    if (ConnectedNet.BitWidth() != NrOfBits)
+      return GetBusNameContinues(comp,EndIndex,HDLType,TheNets);
+    return BusName + Integer.toString(TheNets.GetNetId(ConnectedNet));
   }
 
   public static String GetClockNetName(NetlistComponent comp, int EndIndex, Netlist TheNets) {

File: src/main/java/com/cburch/logisim/fpga/gui/PartialMapDialog.java
Patch:
@@ -77,6 +77,7 @@ public PartialMapDialog(MapListModel.MapInfo map, FPGAIOInformationContainer io,
     setModal(true);
     setResizable(false);
     setLocationRelativeTo(parent);
+    setAlwaysOnTop(true);
     MapTo = new ArrayList<JLabel>();
     GridBagConstraints cs = new GridBagConstraints();
     cs.gridx = 0;

File: src/main/java/com/cburch/logisim/fpga/gui/PartialMapDialog.java
Patch:
@@ -77,6 +77,7 @@ public PartialMapDialog(MapListModel.MapInfo map, FPGAIOInformationContainer io,
     setModal(true);
     setResizable(false);
     setLocationRelativeTo(parent);
+    setAlwaysOnTop(true);
     MapTo = new ArrayList<JLabel>();
     GridBagConstraints cs = new GridBagConstraints();
     cs.gridx = 0;

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -245,7 +245,7 @@ else if (dir == Direction.WEST) {
   public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getOffsetBounds();
     BitWidth width = painter.getAttributeValue(StdAttr.WIDTH);
-    long longValue = painter.getAttributeValue(ATTR_VALUE).intValue();
+    long longValue = painter.getAttributeValue(ATTR_VALUE).longValue();
     Value v = Value.createKnown(width, longValue);
     Location loc = painter.getLocation();
     int x = loc.getX();

File: src/main/java/com/cburch/logisim/std/wiring/ConstantConfigurator.java
Patch:
@@ -45,7 +45,7 @@ public long getMaximumValue(AttributeSet attrs) {
     if (ret >= 0) {
       return ret;
     } else {
-      return Integer.MAX_VALUE;
+      return Long.MAX_VALUE;
     }
   }
 

File: src/main/java/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -245,7 +245,7 @@ else if (dir == Direction.WEST) {
   public void paintInstance(InstancePainter painter) {
     Bounds bds = painter.getOffsetBounds();
     BitWidth width = painter.getAttributeValue(StdAttr.WIDTH);
-    long longValue = painter.getAttributeValue(ATTR_VALUE).intValue();
+    long longValue = painter.getAttributeValue(ATTR_VALUE).longValue();
     Value v = Value.createKnown(width, longValue);
     Location loc = painter.getLocation();
     int x = loc.getX();

File: src/main/java/com/cburch/logisim/std/wiring/ConstantConfigurator.java
Patch:
@@ -45,7 +45,7 @@ public long getMaximumValue(AttributeSet attrs) {
     if (ret >= 0) {
       return ret;
     } else {
-      return Integer.MAX_VALUE;
+      return Long.MAX_VALUE;
     }
   }
 

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -230,6 +230,7 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     super.instanceAttributeChanged(instance, attr);
     if ((attr == Mem.DATA_ATTR)
+    	|| (attr == Mem.ADDR_ATTR)
         || (attr == RamAttributes.ATTR_DBUS)
         || (attr == StdAttr.TRIGGER)
         || (attr == RamAttributes.ATTR_ByteEnables)

File: src/main/java/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -246,7 +246,7 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
 
   @Override
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
-    if (attr == Mem.DATA_ATTR || attr == StdAttr.APPEARANCE || attr == Mem.LINE_ATTR) {
+    if (attr == Mem.DATA_ATTR || attr == Mem.ADDR_ATTR || attr == StdAttr.APPEARANCE || attr == Mem.LINE_ATTR) {
       instance.recomputeBounds();
       configurePorts(instance);
     }

File: src/main/java/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -230,6 +230,7 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     super.instanceAttributeChanged(instance, attr);
     if ((attr == Mem.DATA_ATTR)
+    	|| (attr == Mem.ADDR_ATTR)
         || (attr == RamAttributes.ATTR_DBUS)
         || (attr == StdAttr.TRIGGER)
         || (attr == RamAttributes.ATTR_ByteEnables)

File: src/main/java/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -246,7 +246,7 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
 
   @Override
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
-    if (attr == Mem.DATA_ATTR || attr == StdAttr.APPEARANCE || attr == Mem.LINE_ATTR) {
+    if (attr == Mem.DATA_ATTR || attr == Mem.ADDR_ATTR || attr == StdAttr.APPEARANCE || attr == Mem.LINE_ATTR) {
       instance.recomputeBounds();
       configurePorts(instance);
     }

File: src/main/java/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.vhdl.base.VhdlEntity;
 import java.util.Collection;
 
-class CircuitChange {
+public class CircuitChange {
   public static CircuitChange add(Circuit circuit, Component comp) {
     return new CircuitChange(circuit, ADD, comp);
   }

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -64,7 +64,7 @@ public void addAll(Collection<? extends Component> comps) {
     changes.add(CircuitChange.addAll(primary, new ArrayList<Component>(comps)));
   }
 
-  void change(CircuitChange change) {
+  public void change(CircuitChange change) {
     changes.add(change);
   }
 

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -195,6 +195,8 @@ public byte[] GetEndpoints() {
   public ComponentFactory getFactory() {
     return SplitterFactory.instance;
   }
+  
+  public void setFactory(ComponentFactory fact) {}; 
 
   @Override
   public Object getFeature(Object key) {

File: src/main/java/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -253,6 +253,8 @@ public List<EndData> getEnds() {
   public ComponentFactory getFactory() {
     return WireFactory.instance;
   }
+  
+  public void setFactory(ComponentFactory fact) {}
 
   public Object getFeature(Object key) {
     if (key == CustomHandles.class) return this;

File: src/main/java/com/cburch/logisim/comp/Component.java
Patch:
@@ -63,6 +63,8 @@ public interface Component {
   // basic information methods
 
   public ComponentFactory getFactory();
+  
+  public void setFactory(ComponentFactory fact);
 
   /**
    * Retrieves information about a special-purpose feature for this component. This technique allows

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -178,6 +178,8 @@ private Video(Location loc, AttributeSet attrs) {
   public ComponentFactory getFactory() {
     return factory;
   }
+  
+  public void setFactory(ComponentFactory fact) {}
 
   Location loc(int pin) {
     return getEndLocation(pin);

File: src/main/java/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -35,7 +35,7 @@
 import com.cburch.logisim.vhdl.base.VhdlEntity;
 import java.util.Collection;
 
-class CircuitChange {
+public class CircuitChange {
   public static CircuitChange add(Circuit circuit, Component comp) {
     return new CircuitChange(circuit, ADD, comp);
   }

File: src/main/java/com/cburch/logisim/circuit/CircuitMutation.java
Patch:
@@ -64,7 +64,7 @@ public void addAll(Collection<? extends Component> comps) {
     changes.add(CircuitChange.addAll(primary, new ArrayList<Component>(comps)));
   }
 
-  void change(CircuitChange change) {
+  public void change(CircuitChange change) {
     changes.add(change);
   }
 

File: src/main/java/com/cburch/logisim/circuit/Splitter.java
Patch:
@@ -195,6 +195,8 @@ public byte[] GetEndpoints() {
   public ComponentFactory getFactory() {
     return SplitterFactory.instance;
   }
+  
+  public void setFactory(ComponentFactory fact) {}; 
 
   @Override
   public Object getFeature(Object key) {

File: src/main/java/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -253,6 +253,8 @@ public List<EndData> getEnds() {
   public ComponentFactory getFactory() {
     return WireFactory.instance;
   }
+  
+  public void setFactory(ComponentFactory fact) {}
 
   public Object getFeature(Object key) {
     if (key == CustomHandles.class) return this;

File: src/main/java/com/cburch/logisim/comp/Component.java
Patch:
@@ -63,6 +63,8 @@ public interface Component {
   // basic information methods
 
   public ComponentFactory getFactory();
+  
+  public void setFactory(ComponentFactory fact);
 
   /**
    * Retrieves information about a special-purpose feature for this component. This technique allows

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -178,6 +178,8 @@ private Video(Location loc, AttributeSet attrs) {
   public ComponentFactory getFactory() {
     return factory;
   }
+  
+  public void setFactory(ComponentFactory fact) {}
 
   Location loc(int pin) {
     return getEndLocation(pin);

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -416,7 +416,7 @@ public boolean tryMap(FPGAIOInformationContainer comp) {
         success &= res.mapResult;
         newMap.setIOPin(res.pinId);
       } else {
-        success = false;
+    	success = false;
         break;
       }
       if (success) {
@@ -427,8 +427,8 @@ public boolean tryMap(FPGAIOInformationContainer comp) {
     }
     if (!success) {
       /* restore the old situation */
-      for (int i = 0 ; i < NrOfPins; i++) {
-    	maps.get(i).unmap();
+      for (int i = 0 ; i < NrOfPins && maps != null; i++) {
+    	if (maps != null && maps.get(i) != null) maps.get(i).unmap();
         MapClass map = oldmaps.get(i);
         if (map != null) {
           if (tryMap(i,map.getIOComp(),map.getIOPin()))

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -134,7 +134,7 @@ public static void DrawRegisterEvolution(
       GraphicsUtil.switchToWidth(g, 1);
     }
     if (!isLatch) {
-    	painter.drawClockSymbol(x + 10, y + 70);
+      painter.drawClockSymbol(x + 10, y + 70);
     } else {
       GraphicsUtil.drawCenteredText(g, "E", x + 18, y + 68);
     }

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -416,7 +416,7 @@ public boolean tryMap(FPGAIOInformationContainer comp) {
         success &= res.mapResult;
         newMap.setIOPin(res.pinId);
       } else {
-        success = false;
+    	success = false;
         break;
       }
       if (success) {
@@ -427,8 +427,8 @@ public boolean tryMap(FPGAIOInformationContainer comp) {
     }
     if (!success) {
       /* restore the old situation */
-      for (int i = 0 ; i < NrOfPins; i++) {
-    	maps.get(i).unmap();
+      for (int i = 0 ; i < NrOfPins && maps != null; i++) {
+    	if (maps != null && maps.get(i) != null) maps.get(i).unmap();
         MapClass map = oldmaps.get(i);
         if (map != null) {
           if (tryMap(i,map.getIOComp(),map.getIOPin()))

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -59,6 +59,7 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.soc.data.SocSimulationManager;
+import com.cburch.logisim.std.io.extra.Buzzer;
 import com.cburch.logisim.std.memory.Ram;
 import com.cburch.logisim.std.memory.RamState;
 import com.cburch.logisim.std.memory.Rom;
@@ -932,6 +933,8 @@ void mutatorRemove(Component c) {
       ComponentFactory factory = c.getFactory();
       if (factory instanceof Clock) {
         clocks.remove(c);
+      } else if (factory instanceof Buzzer) {
+        Buzzer.StopBuzzerSound(c, proj.getCircuitState(this));
       } else if (factory instanceof SubcircuitFactory) {
         SubcircuitFactory subcirc = (SubcircuitFactory) factory;
         subcirc.getSubcircuit().circuitsUsingThis.remove(c);

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.fpga.data.ComponentMapInformationContainer;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.util.StringGetter;

File: src/main/java/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -50,7 +50,6 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.tools.key.BitWidthConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.Icons;
 import java.awt.Color;
 import java.awt.Graphics;
 import java.awt.Graphics2D;

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -59,6 +59,7 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.soc.data.SocSimulationManager;
+import com.cburch.logisim.std.io.extra.Buzzer;
 import com.cburch.logisim.std.memory.Ram;
 import com.cburch.logisim.std.memory.RamState;
 import com.cburch.logisim.std.memory.Rom;
@@ -932,6 +933,8 @@ void mutatorRemove(Component c) {
       ComponentFactory factory = c.getFactory();
       if (factory instanceof Clock) {
         clocks.remove(c);
+      } else if (factory instanceof Buzzer) {
+        Buzzer.StopBuzzerSound(c, proj.getCircuitState(this));
       } else if (factory instanceof SubcircuitFactory) {
         SubcircuitFactory subcirc = (SubcircuitFactory) factory;
         subcirc.getSubcircuit().circuitsUsingThis.remove(c);

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -34,7 +34,6 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.fpga.data.ComponentMapInformationContainer;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.util.StringGetter;

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -134,7 +134,7 @@ public static void GetSimpleInformationDialog(Boolean deleteButton,
     BoardRectangle MyRectangle = info.GetRectangle();
     if (info.getNrOfPins() == 0) {
       NrOfPins.put(INPUT_ID, IOComponentTypes.GetFPGAInputRequirement(MyType));
-      NrOfPins.put(OUTPUT_ID, IOComponentTypes.GetFPGAInOutRequirement(MyType));
+      NrOfPins.put(OUTPUT_ID, IOComponentTypes.GetFPGAOutputRequirement(MyType));
       NrOfPins.put(IO_ID, IOComponentTypes.GetFPGAInOutRequirement(MyType));
     } else {
       NrOfPins.put(INPUT_ID, info.getNrOfInputPins());

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAIOInformationSettingsDialog.java
Patch:
@@ -134,7 +134,7 @@ public static void GetSimpleInformationDialog(Boolean deleteButton,
     BoardRectangle MyRectangle = info.GetRectangle();
     if (info.getNrOfPins() == 0) {
       NrOfPins.put(INPUT_ID, IOComponentTypes.GetFPGAInputRequirement(MyType));
-      NrOfPins.put(OUTPUT_ID, IOComponentTypes.GetFPGAInOutRequirement(MyType));
+      NrOfPins.put(OUTPUT_ID, IOComponentTypes.GetFPGAOutputRequirement(MyType));
       NrOfPins.put(IO_ID, IOComponentTypes.GetFPGAInOutRequirement(MyType));
     } else {
       NrOfPins.put(INPUT_ID, info.getNrOfInputPins());

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -498,7 +498,7 @@ public String getHdlString(int pin) {
 	if (pin < 0 || pin >= NrOfPins) return null;
     StringBuffer s = new StringBuffer();
     /* The first element is the BoardName, so we skip */
-    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i).toLowerCase());
+    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i));
     s.append((s.length()==0 ? "" : "_")+pinLabels.get(pin));
     return s.toString();
   }
@@ -516,7 +516,7 @@ public String getHdlSignalName(int pin, String HDLType) {
     StringBuffer s = new StringBuffer();
     s.append("s_");
     /* The first element is the BoardName, so we skip */
-    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i).toLowerCase());
+    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i));
     if (NrOfPins > 1)
       s.append(BracketOpen+Integer.toString(pin)+BracketClose);
     return s.toString();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -971,7 +971,7 @@ public String GetNetName(
     String OneValue = (HDLType.equals(VHDL)) ? "'1'" : "1'b1";
     String BracketOpen = (HDLType.equals(VHDL)) ? "(" : "[";
     String BracketClose = (HDLType.equals(VHDL)) ? ")" : "]";
-    String Unconnected = (HDLType.equals(VHDL)) ? "OPEN" : "";
+    String Unconnected = (HDLType.equals(VHDL)) ? "OPEN" : "open";
     String FloatingValue = (FloatingNetTiedToGround) ? ZeroValue : OneValue;
     if ((EndIndex >= 0) && (EndIndex < comp.NrOfEnds())) {
       ConnectionEnd ThisEnd = comp.getEnd(EndIndex);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -84,15 +84,15 @@ public ArrayList<String> GetComponentDeclarationSection(Netlist TheNetlist, Attr
                   .get(0)
                   .getFactory()
                   .getHDLName(TheNetlist.GetAllClockSources().get(0).getAttributeSet()),
-              VHDL /* , false */));
+              VHDL ));
     }
     CircuitHDLGeneratorFactory Worker = new CircuitHDLGeneratorFactory(MyCircuit);
     Components.addAll(
         Worker.GetComponentInstantiation(
             TheNetlist,
             null,
             CorrectLabel.getCorrectLabel(MyCircuit.getName()),
-            VHDL /* , hasLB */));
+            VHDL ));
     return Components;
   }
 

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -163,10 +163,10 @@ public ArrayList<String> GetModuleFunctionality(
       Contents.add("   assign s_InitSeed = (" + SeedStr + ") ? " + SeedStr + " : 48'h5DEECE66D;");
       Contents.add("   assign s_reset = (s_reset_reg==3'b010) ? 1'b1 : 1'b0;");
       Contents.add("   assign s_reset_next = (((s_reset_reg == 3'b101)|");
-      Contents.add("                           (s_reset_reg == 3'b010))&~clear) ? 3'b010 :");
+      Contents.add("                           (s_reset_reg == 3'b010))&clear) ? 3'b010 :");
       Contents.add("                         (s_reset_reg==3'b001) ? 3'b101 : 3'b001;");
       Contents.add(
-          "   assign s_start = ((ClockEnable&enable)|((s_reset_reg == 3'b101)&~clear)) ? 1'b1 : 1'b0;");
+          "   assign s_start = ((ClockEnable&enable)|((s_reset_reg == 3'b101)&clear)) ? 1'b1 : 1'b0;");
       Contents.add("   assign s_mult_shift_next = (s_reset) ? 36'd0 :");
       Contents.add(
           "                              (s_start_reg) ? 36'h5DEECE66D : {1'b0,s_mult_shift_reg[35:1]};");

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -263,7 +263,6 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
   protected void configureNewInstance(Instance instance) {
     instance.addAttributeListener();
     updatePorts(instance);
-    Bounds bds = instance.getBounds();
     instance.computeLabelTextField(Instance.AVOID_SIDES);
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7400.java
Patch:
@@ -90,7 +90,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410.java
Patch:
@@ -67,9 +67,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
       Drawgates.paintAnd(g, x + 125, y + 20, 10, 10, inverted);
       Drawgates.paintAnd(g, x + 105, y + 40, 10, 10, inverted);
     } else {
-      Drawgates.paintOr(g, x + 45, y + 20, 10, 10, inverted);
-      Drawgates.paintOr(g, x + 125, y + 20, 10, 10, inverted);
-      Drawgates.paintOr(g, x + 105, y + 40, 10, 10, inverted);
+      Drawgates.paintOr(g, x + 45, y + 20, 10, 10, inverted, false);
+      Drawgates.paintOr(g, x + 125, y + 20, 10, 10, inverted, false);
+      Drawgates.paintOr(g, x + 105, y + 40, 10, 10, inverted, false);
     }
     int offset = inverted ? 0 : -4;
     int[] xpos = new int[] {x + 49 + offset, x + 50, x + 50};

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -81,12 +81,12 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Graphics g = painter.getGraphics();
     int portwidth = 14, portheight = 15;
     int youtput = y + (up ? 20 : 40);
-    Drawgates.paintOr(g, x + 40, youtput, portwidth, portheight, false);
+    Drawgates.paintOr(g, x + 40, youtput, portwidth, portheight, false, false);
     // output line
     Drawgates.paintOutputgate(g, x + 50, y, x + 40, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 40 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 40 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7451.java
Patch:
@@ -53,11 +53,11 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Graphics g = painter.getGraphics();
     Drawgates.paintAnd(g, x + 50, y + 24, 10, 10, false);
     Drawgates.paintAnd(g, x + 50, y + 36, 10, 10, false);
-    Drawgates.paintOr(g, x + 70, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 70, y + 30, 10, 10, true, false);
 
     Drawgates.paintAnd(g, x + 100, y + 24, 10, 10, false);
     Drawgates.paintAnd(g, x + 100, y + 36, 10, 10, false);
-    Drawgates.paintOr(g, x + 120, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 120, y + 30, 10, 10, true, false);
 
     int offset = (AppPreferences.GATE_SHAPE.get().equals(AppPreferences.SHAPE_RECTANGULAR)) ? 4 : 0;
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454.java
Patch:
@@ -51,7 +51,7 @@ public Ttl7454() {
   public void paintInternal(InstancePainter painter, int x, int y, int height, boolean up) {
     super.paintBase(painter, false, false);
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 125, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 125, y + 30, 10, 10, true, false);
     Drawgates.paintAnd(g, x + 105, y + 20, 10, 10, false);
     Drawgates.paintAnd(g, x + 105, y + 40, 10, 10, false);
     Drawgates.paintAnd(g, x + 65, y + 20, 10, 10, false);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7458.java
Patch:
@@ -50,7 +50,7 @@ public Ttl7458() {
   public void paintInternal(InstancePainter painter, int x, int y, int height, boolean up) {
     super.paintBase(painter, false, false);
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 107, y + 39, 10, 10, false);
+    Drawgates.paintOr(g, x + 107, y + 39, 10, 10, false, false);
     Drawgates.paintAnd(g, x + 86, y + 34, 10, 10, false);
     Drawgates.paintAnd(g, x + 86, y + 44, 10, 10, false);
     int OrOffset =
@@ -72,7 +72,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     ypos = new int[] {y + 47, y + 47, y + 51, y + 51, y + height - AbstractTtlGate.pinheight};
     g.drawPolyline(xpos, ypos, 5);
 
-    Drawgates.paintOr(g, x + 127, y + 21, 10, 10, false);
+    Drawgates.paintOr(g, x + 127, y + 21, 10, 10, false, false);
     Drawgates.paintAnd(g, x + 106, y + 16, 10, 10, false);
     Drawgates.paintAnd(g, x + 106, y + 26, 10, 10, false);
     xpos = new int[] {x + 106, x + 110, x + 110, x + 113 + OrOffset};

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464.java
Patch:
@@ -53,7 +53,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     boolean isIEC = AppPreferences.GATE_SHAPE.get().equals(AppPreferences.SHAPE_RECTANGULAR);
     int AndOffset = isIEC ? 10 : 0;
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 125, y + 35, 10, isIEC ? 40 : 10, true);
+    Drawgates.paintOr(g, x + 125, y + 35, 10, isIEC ? 40 : 10, true, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 20, 10, 10, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 30, 10, 10, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 40, 10, 10, false);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/data/MapComponent.java
Patch:
@@ -498,7 +498,7 @@ public String getHdlString(int pin) {
 	if (pin < 0 || pin >= NrOfPins) return null;
     StringBuffer s = new StringBuffer();
     /* The first element is the BoardName, so we skip */
-    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i).toLowerCase());
+    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i));
     s.append((s.length()==0 ? "" : "_")+pinLabels.get(pin));
     return s.toString();
   }
@@ -516,7 +516,7 @@ public String getHdlSignalName(int pin, String HDLType) {
     StringBuffer s = new StringBuffer();
     s.append("s_");
     /* The first element is the BoardName, so we skip */
-    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i).toLowerCase());
+    for (int i = 1 ; i < myName.size() ; i++) s.append((i==1?"":"_")+myName.get(i));
     if (NrOfPins > 1)
       s.append(BracketOpen+Integer.toString(pin)+BracketClose);
     return s.toString();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -971,7 +971,7 @@ public String GetNetName(
     String OneValue = (HDLType.equals(VHDL)) ? "'1'" : "1'b1";
     String BracketOpen = (HDLType.equals(VHDL)) ? "(" : "[";
     String BracketClose = (HDLType.equals(VHDL)) ? ")" : "]";
-    String Unconnected = (HDLType.equals(VHDL)) ? "OPEN" : "";
+    String Unconnected = (HDLType.equals(VHDL)) ? "OPEN" : "open";
     String FloatingValue = (FloatingNetTiedToGround) ? ZeroValue : OneValue;
     if ((EndIndex >= 0) && (EndIndex < comp.NrOfEnds())) {
       ConnectionEnd ThisEnd = comp.getEnd(EndIndex);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -84,15 +84,15 @@ public ArrayList<String> GetComponentDeclarationSection(Netlist TheNetlist, Attr
                   .get(0)
                   .getFactory()
                   .getHDLName(TheNetlist.GetAllClockSources().get(0).getAttributeSet()),
-              VHDL /* , false */));
+              VHDL ));
     }
     CircuitHDLGeneratorFactory Worker = new CircuitHDLGeneratorFactory(MyCircuit);
     Components.addAll(
         Worker.GetComponentInstantiation(
             TheNetlist,
             null,
             CorrectLabel.getCorrectLabel(MyCircuit.getName()),
-            VHDL /* , hasLB */));
+            VHDL ));
     return Components;
   }
 

File: src/main/java/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -163,10 +163,10 @@ public ArrayList<String> GetModuleFunctionality(
       Contents.add("   assign s_InitSeed = (" + SeedStr + ") ? " + SeedStr + " : 48'h5DEECE66D;");
       Contents.add("   assign s_reset = (s_reset_reg==3'b010) ? 1'b1 : 1'b0;");
       Contents.add("   assign s_reset_next = (((s_reset_reg == 3'b101)|");
-      Contents.add("                           (s_reset_reg == 3'b010))&~clear) ? 3'b010 :");
+      Contents.add("                           (s_reset_reg == 3'b010))&clear) ? 3'b010 :");
       Contents.add("                         (s_reset_reg==3'b001) ? 3'b101 : 3'b001;");
       Contents.add(
-          "   assign s_start = ((ClockEnable&enable)|((s_reset_reg == 3'b101)&~clear)) ? 1'b1 : 1'b0;");
+          "   assign s_start = ((ClockEnable&enable)|((s_reset_reg == 3'b101)&clear)) ? 1'b1 : 1'b0;");
       Contents.add("   assign s_mult_shift_next = (s_reset) ? 36'd0 :");
       Contents.add(
           "                              (s_start_reg) ? 36'h5DEECE66D : {1'b0,s_mult_shift_reg[35:1]};");

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -263,7 +263,6 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
   protected void configureNewInstance(Instance instance) {
     instance.addAttributeListener();
     updatePorts(instance);
-    Bounds bds = instance.getBounds();
     instance.computeLabelTextField(Instance.AVOID_SIDES);
   }
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7400.java
Patch:
@@ -90,7 +90,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7408.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7410.java
Patch:
@@ -67,9 +67,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
       Drawgates.paintAnd(g, x + 125, y + 20, 10, 10, inverted);
       Drawgates.paintAnd(g, x + 105, y + 40, 10, 10, inverted);
     } else {
-      Drawgates.paintOr(g, x + 45, y + 20, 10, 10, inverted);
-      Drawgates.paintOr(g, x + 125, y + 20, 10, 10, inverted);
-      Drawgates.paintOr(g, x + 105, y + 40, 10, 10, inverted);
+      Drawgates.paintOr(g, x + 45, y + 20, 10, 10, inverted, false);
+      Drawgates.paintOr(g, x + 125, y + 20, 10, 10, inverted, false);
+      Drawgates.paintOr(g, x + 105, y + 40, 10, 10, inverted, false);
     }
     int offset = inverted ? 0 : -4;
     int[] xpos = new int[] {x + 49 + offset, x + 50, x + 50};

File: src/main/java/com/cburch/logisim/std/ttl/Ttl74266.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7432.java
Patch:
@@ -81,12 +81,12 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Graphics g = painter.getGraphics();
     int portwidth = 14, portheight = 15;
     int youtput = y + (up ? 20 : 40);
-    Drawgates.paintOr(g, x + 40, youtput, portwidth, portheight, false);
+    Drawgates.paintOr(g, x + 40, youtput, portwidth, portheight, false, false);
     // output line
     Drawgates.paintOutputgate(g, x + 50, y, x + 40, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 40 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 40 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7451.java
Patch:
@@ -53,11 +53,11 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Graphics g = painter.getGraphics();
     Drawgates.paintAnd(g, x + 50, y + 24, 10, 10, false);
     Drawgates.paintAnd(g, x + 50, y + 36, 10, 10, false);
-    Drawgates.paintOr(g, x + 70, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 70, y + 30, 10, 10, true, false);
 
     Drawgates.paintAnd(g, x + 100, y + 24, 10, 10, false);
     Drawgates.paintAnd(g, x + 100, y + 36, 10, 10, false);
-    Drawgates.paintOr(g, x + 120, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 120, y + 30, 10, 10, true, false);
 
     int offset = (AppPreferences.GATE_SHAPE.get().equals(AppPreferences.SHAPE_RECTANGULAR)) ? 4 : 0;
 

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7454.java
Patch:
@@ -51,7 +51,7 @@ public Ttl7454() {
   public void paintInternal(InstancePainter painter, int x, int y, int height, boolean up) {
     super.paintBase(painter, false, false);
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 125, y + 30, 10, 10, true);
+    Drawgates.paintOr(g, x + 125, y + 30, 10, 10, true, false);
     Drawgates.paintAnd(g, x + 105, y + 20, 10, 10, false);
     Drawgates.paintAnd(g, x + 105, y + 40, 10, 10, false);
     Drawgates.paintAnd(g, x + 65, y + 20, 10, 10, false);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7458.java
Patch:
@@ -50,7 +50,7 @@ public Ttl7458() {
   public void paintInternal(InstancePainter painter, int x, int y, int height, boolean up) {
     super.paintBase(painter, false, false);
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 107, y + 39, 10, 10, false);
+    Drawgates.paintOr(g, x + 107, y + 39, 10, 10, false, false);
     Drawgates.paintAnd(g, x + 86, y + 34, 10, 10, false);
     Drawgates.paintAnd(g, x + 86, y + 44, 10, 10, false);
     int OrOffset =
@@ -72,7 +72,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     ypos = new int[] {y + 47, y + 47, y + 51, y + 51, y + height - AbstractTtlGate.pinheight};
     g.drawPolyline(xpos, ypos, 5);
 
-    Drawgates.paintOr(g, x + 127, y + 21, 10, 10, false);
+    Drawgates.paintOr(g, x + 127, y + 21, 10, 10, false, false);
     Drawgates.paintAnd(g, x + 106, y + 16, 10, 10, false);
     Drawgates.paintAnd(g, x + 106, y + 26, 10, 10, false);
     xpos = new int[] {x + 106, x + 110, x + 110, x + 113 + OrOffset};

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7464.java
Patch:
@@ -53,7 +53,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     boolean isIEC = AppPreferences.GATE_SHAPE.get().equals(AppPreferences.SHAPE_RECTANGULAR);
     int AndOffset = isIEC ? 10 : 0;
     Graphics g = painter.getGraphics();
-    Drawgates.paintOr(g, x + 125, y + 35, 10, isIEC ? 40 : 10, true);
+    Drawgates.paintOr(g, x + 125, y + 35, 10, isIEC ? 40 : 10, true, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 20, 10, 10, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 30, 10, 10, false);
     Drawgates.paintAnd(g, x + 105 + AndOffset, y + 40, 10, 10, false);

File: src/main/java/com/cburch/logisim/std/ttl/Ttl7486.java
Patch:
@@ -86,7 +86,7 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
     Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up, height);
     // input lines
     Drawgates.paintDoubleInputgate(
-        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, height);
+        g, x + 30, y, x + 44 - portwidth, youtput, portheight, up, false, height);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/analyze/gui/CsvReadParameterDialog.java
Patch:
@@ -32,6 +32,7 @@
 
 import com.cburch.logisim.analyze.data.CsvInterpretor;
 import com.cburch.logisim.analyze.data.CsvParameter;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.Color;
 import java.awt.Dimension;
@@ -49,7 +50,6 @@
 import javax.swing.JDialog;
 import javax.swing.JFrame;
 import javax.swing.JLabel;
-import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.border.Border;
 
@@ -148,11 +148,11 @@ private void updateLabels() {
       }
       scan.close();
     } catch (FileNotFoundException e) {
-      JOptionPane.showMessageDialog(
+      OptionPane.showMessageDialog(
           this,
           S.fmt("cantReadMessage", file.getName()),
           S.get("openButton"),
-          JOptionPane.ERROR_MESSAGE);
+          OptionPane.ERROR_MESSAGE);
       setVisable = false;
       if (this.isVisible()) {
         setVisible(false);

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -29,6 +29,7 @@
 package com.cburch.logisim.circuit;
 
 import com.cburch.logisim.comp.ComponentDrawContext;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.util.UniquelyNamedThread;
 import java.util.ArrayList;
@@ -172,7 +173,7 @@ public void run() {
           javax.swing.SwingUtilities.invokeLater(
               new Runnable() {
                 public void run() {
-                  javax.swing.JOptionPane.showMessageDialog(
+                  OptionPane.showMessageDialog(
                       null, "The simulator has crashed. Save your work and restart Logisim.");
                 }
               });

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -34,9 +34,9 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
+import com.cburch.logisim.fpga.data.ComponentMapInformationContainer;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
-import com.cburch.logisim.fpga.hdlgenerator.IOComponentInformationContainer;
 import com.cburch.logisim.util.StringGetter;
 import java.awt.Color;
 
@@ -89,8 +89,6 @@ public void drawGhost(
 
   public String getHDLTopName(AttributeSet attrs);
 
-  public IOComponentInformationContainer getIOInformation();
-
   public String getName();
 
   public Bounds getOffsetBounds(AttributeSet attrs);

File: src/main/java/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -39,6 +39,7 @@
 import com.cburch.logisim.comp.ComponentFactory;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeSet;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.Projects;
 import com.cburch.logisim.tools.AddTool;
@@ -62,7 +63,6 @@
 import java.util.HashSet;
 import java.util.LinkedList;
 import java.util.List;
-import javax.swing.JOptionPane;
 import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.transform.TransformerConfigurationException;
 import javax.xml.transform.TransformerException;
@@ -77,11 +77,11 @@ public void circuitChanged(CircuitEvent event) {
       String oldname = (String) event.getData();
       String newname = event.getCircuit().getName();
       if (NameIsInUse(newname, event.getCircuit())) {
-        JOptionPane.showMessageDialog(
+        OptionPane.showMessageDialog(
             null,
             "\"" + newname + "\": " + S.get("circuitNameExists"),
             "",
-            JOptionPane.ERROR_MESSAGE);
+            OptionPane.ERROR_MESSAGE);
         event.getCircuit().getStaticAttributes().setValue(CircuitAttributes.NAME_ATTR, oldname);
       }
     }

File: src/main/java/com/cburch/logisim/fpga/data/DriveStrength.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.data;
 
 import java.util.Iterator;
 import java.util.LinkedList;

File: src/main/java/com/cburch/logisim/fpga/data/FPGAClass.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.data;
 
 import com.cburch.logisim.fpga.settings.VendorSoftware;
 import java.util.Iterator;

File: src/main/java/com/cburch/logisim/fpga/data/FPGACommanderListModel.java
Patch:
@@ -26,11 +26,10 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.data;
 
 import com.cburch.logisim.fpga.designrulecheck.SimpleDRCContainer;
 import com.cburch.logisim.fpga.gui.ListModelCellRenderer;
-import com.cburch.logisim.gui.main.Frame;
 
 import java.util.ArrayList;
 import java.util.HashSet;

File: src/main/java/com/cburch/logisim/fpga/data/IoStandards.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.data;
 
 import java.util.Iterator;
 import java.util.LinkedList;

File: src/main/java/com/cburch/logisim/fpga/data/PinActivity.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.data;
 
 import java.util.Iterator;
 import java.util.LinkedList;

File: src/main/java/com/cburch/logisim/fpga/data/PullBehaviors.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.data;
 
 import java.util.Iterator;
 import java.util.LinkedList;

File: src/main/java/com/cburch/logisim/fpga/download/VendorDownload.java
Patch:
@@ -28,7 +28,7 @@
 
 package com.cburch.logisim.fpga.download;
 
-import com.cburch.logisim.fpga.fpgagui.MappableResourcesContainer;
+import com.cburch.logisim.fpga.data.MappableResourcesContainer;
 
 public interface VendorDownload {
 

File: src/main/java/com/cburch/logisim/fpga/file/ImageXmlFactory.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgaboardeditor;
+package com.cburch.logisim.fpga.file;
 
 import java.awt.Color;
 import java.awt.Graphics2D;

File: src/main/java/com/cburch/logisim/fpga/gui/BoardIcon.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.gui;
 
 import com.cburch.logisim.prefs.AppPreferences;
 import java.awt.Color;

File: src/main/java/com/cburch/logisim/fpga/gui/FPGACommanderListWindow.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.gui;
 
 import java.awt.Color;
 import java.awt.Font;
@@ -39,6 +39,8 @@
 import javax.swing.event.ListDataEvent;
 import javax.swing.event.ListDataListener;
 
+import com.cburch.logisim.fpga.data.FPGACommanderListModel;
+
 @SuppressWarnings("serial")
 public class FPGACommanderListWindow extends JFrame implements WindowListener, ListDataListener {
 

File: src/main/java/com/cburch/logisim/fpga/gui/FPGACommanderTextWindow.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.gui;
 
 import java.awt.Color;
 import java.awt.EventQueue;

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAReport.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.gui;
 
 import javax.swing.JProgressBar;
 
@@ -52,7 +52,7 @@ public FPGAReport() {
     }
   }
   
-  public FPGAReport(FPGACommanderGui parent, JProgressBar prog) {
+  public FPGAReport(FPGACommander parent, JProgressBar prog) {
     myCommander = parent.getReporterGui();
     progress = prog;
   }

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAReportTabbedPane.java
Patch:
@@ -26,8 +26,9 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.fpgagui;
+package com.cburch.logisim.fpga.gui;
 
+import com.cburch.logisim.fpga.data.FPGACommanderListModel;
 import com.cburch.logisim.fpga.designrulecheck.SimpleDRCContainer;
 import com.cburch.logisim.gui.main.Frame;
 import com.cburch.logisim.proj.Project;

File: src/main/java/com/cburch/logisim/fpga/gui/HDLColorRenderer.java
Patch:
@@ -26,7 +26,7 @@
  *     http://www.heig-vd.ch/
  */
 
-package com.cburch.logisim.fpga.hdlgenerator;
+package com.cburch.logisim.fpga.gui;
 
 import java.awt.Color;
 import java.awt.Component;
@@ -37,6 +37,8 @@
 import javax.swing.border.Border;
 import javax.swing.table.TableCellRenderer;
 
+import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+
 @SuppressWarnings("serial")
 public class HDLColorRenderer extends JLabel implements TableCellRenderer {
   public static final String VHDLSupportString = "VHDL_SUPPORTED";

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/FileWriter.java
Patch:
@@ -28,14 +28,15 @@
 
 package com.cburch.logisim.fpga.hdlgenerator;
 
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
 import java.io.File;
 import java.io.FileInputStream;
 import java.io.FileOutputStream;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.util.ArrayList;
 
+import com.cburch.logisim.fpga.gui.FPGAReport;
+
 public class FileWriter {
 
   public static boolean CopyArchitecture(

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/TickComponentHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,8 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
+
 import java.util.ArrayList;
 import java.util.SortedMap;
 import java.util.TreeMap;
@@ -168,7 +169,7 @@ public SortedMap<String, Integer> GetParameterMap(
 
   @Override
   public SortedMap<String, String> GetPortMap(
-      Netlist Nets, NetlistComponent ComponentInfo, FPGAReport Reporter, String HDLType) {
+      Netlist Nets, Object MapInfo, FPGAReport Reporter, String HDLType) {
     SortedMap<String, String> PortMap = new TreeMap<String, String>();
     PortMap.put("FPGAClock", TickComponentHDLGeneratorFactory.FPGAClock);
     PortMap.put("FPGATick", TickComponentHDLGeneratorFactory.FPGATick);

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -145,4 +145,5 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
     if (MyHDLGenerator == null) MyHDLGenerator = new bin2bcdHDLGeneratorFactory();
     return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
   }
+
 }

File: src/main/java/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -36,7 +36,7 @@
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeListener;
 import com.cburch.logisim.data.AttributeSet;
-import com.cburch.logisim.fpga.hdlgenerator.HDLColorRenderer;
+import com.cburch.logisim.fpga.gui.HDLColorRenderer;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import java.awt.Component;
 import java.awt.Window;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -43,6 +43,7 @@
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.gui.generic.AttrTableSetException;
 import com.cburch.logisim.gui.generic.AttributeSetTableModel;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.main.Selection.Event;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.proj.Action;
@@ -53,7 +54,6 @@
 import java.util.Comparator;
 import java.util.SortedSet;
 import java.util.TreeSet;
-import javax.swing.JOptionPane;
 
 class AttrTableSelectionModel extends AttributeSetTableModel implements Selection.Listener {
   private Project project;
@@ -182,7 +182,7 @@ public void setValueRequested(Attribute<Object> attr, Object value) throws AttrT
                 Action action = mutation.toAction(null);
                 project.doAction(action);
               } catch (CircuitException ex) {
-                JOptionPane.showMessageDialog(project.getFrame(), ex.getMessage());
+                OptionPane.showMessageDialog(project.getFrame(), ex.getMessage());
               }
               return;
             }

File: src/main/java/com/cburch/logisim/gui/main/AttrTableToolModel.java
Patch:
@@ -36,11 +36,11 @@
 import com.cburch.logisim.circuit.SubcircuitFactory;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.gui.generic.AttributeSetTableModel;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.tools.AddTool;
 import com.cburch.logisim.tools.Tool;
-import javax.swing.JOptionPane;
 
 public class AttrTableToolModel extends AttributeSetTableModel {
   Project proj;
@@ -80,7 +80,7 @@ public void setValueRequested(Attribute<Object> attr, Object value) {
             Action action = mutation.toAction(null);
             proj.doAction(action);
           } catch (CircuitException ex) {
-            JOptionPane.showMessageDialog(proj.getFrame(), ex.getMessage());
+            OptionPane.showMessageDialog(proj.getFrame(), ex.getMessage());
           }
           return;
         }

File: src/main/java/com/cburch/logisim/gui/main/Frame.java
Patch:
@@ -49,6 +49,7 @@
 import com.cburch.logisim.gui.generic.CanvasPane;
 import com.cburch.logisim.gui.generic.CardPanel;
 import com.cburch.logisim.gui.generic.LFrame;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.generic.RegTabContent;
 import com.cburch.logisim.gui.generic.ZoomControl;
 import com.cburch.logisim.gui.generic.ZoomModel;
@@ -88,7 +89,6 @@
 import java.util.Timer;
 
 import javax.swing.JFrame;
-import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.JTabbedPane;
 import javax.swing.WindowConstants;
@@ -464,8 +464,8 @@ public boolean confirmClose(String title) {
     toFront();
     String[] options = {S.get("saveOption"), S.get("discardOption"), S.get("cancelOption")};
     int result =
-        JOptionPane.showOptionDialog(
-            this, message, title, 0, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
+        OptionPane.showOptionDialog(
+            this, message, title, 0, OptionPane.QUESTION_MESSAGE, null, options, options[0]);
     boolean ret;
     if (result == 0) {
       ret = ProjectActions.doSave(proj);

File: src/main/java/com/cburch/logisim/gui/menu/LogisimMenuBar.java
Patch:
@@ -30,7 +30,7 @@
 
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.circuit.Simulator;
-import com.cburch.logisim.fpga.fpgamenu.MenuFPGA;
+import com.cburch.logisim.fpga.menu.MenuFPGA;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.util.LocaleListener;
 import com.cburch.logisim.util.LocaleManager;

File: src/main/java/com/cburch/logisim/gui/prefs/OptionsPanel.java
Patch:
@@ -31,7 +31,7 @@
 import java.awt.LayoutManager;
 import javax.swing.JPanel;
 
-abstract class OptionsPanel extends JPanel {
+public abstract class OptionsPanel extends JPanel {
   private static final long serialVersionUID = 1L;
   private PreferencesFrame optionsFrame;
 
@@ -47,7 +47,7 @@ public OptionsPanel(PreferencesFrame frame, LayoutManager manager) {
 
   public abstract String getHelpText();
 
-  PreferencesFrame getPreferencesFrame() {
+  public PreferencesFrame getPreferencesFrame() {
     return optionsFrame;
   }
 

File: src/main/java/com/cburch/logisim/gui/prefs/PrefOption.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.util.StringGetter;
 import javax.swing.JComboBox;
 
-class PrefOption {
+public class PrefOption {
   static void setSelected(JComboBox<PrefOption> combo, Object value) {
     for (int i = combo.getItemCount() - 1; i >= 0; i--) {
       PrefOption opt = (PrefOption) combo.getItemAt(i);
@@ -47,7 +47,7 @@ static void setSelected(JComboBox<PrefOption> combo, Object value) {
 
   private StringGetter getter;
 
-  PrefOption(String value, StringGetter getter) {
+  public PrefOption(String value, StringGetter getter) {
     this.value = value;
     this.getter = getter;
   }

File: src/main/java/com/cburch/logisim/gui/prefs/PrefOptionList.java
Patch:
@@ -38,7 +38,7 @@
 import javax.swing.JLabel;
 import javax.swing.JPanel;
 
-class PrefOptionList implements ActionListener, PropertyChangeListener {
+public class PrefOptionList implements ActionListener, PropertyChangeListener {
   private PrefMonitor<String> pref;
   private StringGetter labelStr;
 
@@ -72,11 +72,11 @@ JPanel createJPanel() {
     return ret;
   }
 
-  JComboBox<PrefOption> getJComboBox() {
+  public JComboBox<PrefOption> getJComboBox() {
     return combo;
   }
 
-  JLabel getJLabel() {
+  public JLabel getJLabel() {
     return label;
   }
 

File: src/main/java/com/cburch/logisim/gui/prefs/TemplateOptions.java
Patch:
@@ -33,6 +33,7 @@
 import com.cburch.logisim.file.Loader;
 import com.cburch.logisim.file.LoaderException;
 import com.cburch.logisim.file.LogisimFile;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.prefs.Template;
 import com.cburch.logisim.util.JFileChoosers;
@@ -51,7 +52,6 @@
 import javax.swing.ButtonGroup;
 import javax.swing.JButton;
 import javax.swing.JFileChooser;
-import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.JRadioButton;
 import javax.swing.JTextField;
@@ -79,11 +79,11 @@ public void actionPerformed(ActionEvent event) {
             AppPreferences.setTemplateType(AppPreferences.TEMPLATE_CUSTOM);
           } catch (LoaderException ex) {
           } catch (IOException ex) {
-            JOptionPane.showMessageDialog(
+            OptionPane.showMessageDialog(
                 getPreferencesFrame(),
                 StringUtil.format(S.get("templateErrorMessage"), ex.toString()),
                 S.get("templateErrorTitle"),
-                JOptionPane.ERROR_MESSAGE);
+                OptionPane.ERROR_MESSAGE);
           } finally {
             try {
               if (reader != null) reader.close();

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -31,6 +31,7 @@
 import static com.cburch.logisim.gui.Strings.S;
 
 import com.cburch.logisim.data.Direction;
+import com.cburch.logisim.fpga.gui.ZoomSlider;
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.proj.Projects;

File: src/main/java/com/cburch/logisim/gui/start/About.java
Patch:
@@ -30,6 +30,7 @@
 
 import com.cburch.logisim.Main;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.UniquelyNamedThread;
 import java.awt.BasicStroke;
@@ -42,7 +43,6 @@
 import java.awt.Graphics2D;
 import javax.swing.BorderFactory;
 import javax.swing.JFrame;
-import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.event.AncestorEvent;
 import javax.swing.event.AncestorListener;
@@ -292,8 +292,8 @@ public static void showAboutDialog(JFrame owner) {
     panel.add(imgPanel);
     panel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2));
 
-    JOptionPane.showMessageDialog(
-        owner, panel, "Logisim-evolution " + Main.VERSION_NAME, JOptionPane.PLAIN_MESSAGE);
+    OptionPane.showMessageDialog(
+        owner, panel, "Logisim-evolution " + Main.VERSION_NAME, OptionPane.PLAIN_MESSAGE);
   }
 
   static final int IMAGE_BORDER = 30;

File: src/main/java/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -47,6 +47,7 @@
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.tools.TextEditable;
 import com.cburch.logisim.tools.ToolTipMaker;
 import com.cburch.logisim.util.EventSourceWeakSupport;
@@ -61,7 +62,6 @@
 import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
-import javax.swing.JOptionPane;
 
 public class InstanceComponent implements Component, AttributeListener, ToolTipMaker {
   private EventSourceWeakSupport<ComponentListener> listeners;
@@ -156,10 +156,10 @@ public void attributeValueChanged(AttributeEvent e) {
         if (!SyntaxChecker.isVariableNameAcceptable(value, true)) {
           e.getSource().setValue(lattr, Oldvalue);
         } else if (getFactory().getName().toUpperCase().equals(value.toUpperCase())) {
-          JOptionPane.showMessageDialog(null, S.get("MatchedLabelNameError"));
+          OptionPane.showMessageDialog(null, S.get("MatchedLabelNameError"));
           e.getSource().setValue(lattr, Oldvalue);
         } else if (CorrectLabel.IsKeyword(value, false)) {
-          JOptionPane.showMessageDialog(null, "\"" + value + "\": " + S.get("KeywordNameError"));
+          OptionPane.showMessageDialog(null, "\"" + value + "\": " + S.get("KeywordNameError"));
           e.getSource().setValue(lattr, Oldvalue);
         } else {
           fireLabelChanged(e);

File: src/main/java/com/cburch/logisim/soc/data/SocUpMenuProvider.java
Patch:
@@ -37,12 +37,12 @@
 import javax.swing.JFileChooser;
 import javax.swing.JFrame;
 import javax.swing.JMenuItem;
-import javax.swing.JOptionPane;
 import javax.swing.JPanel;
 import javax.swing.JPopupMenu;
 
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.data.Location;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.main.Frame;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.StdAttr;
@@ -203,10 +203,10 @@ public void readElf(Instance instance, CircuitState circuitState) {
       SocUpStateInterface data = (SocUpStateInterface) circuitState.getData(instance.getComponent());
       ProcessorReadElf reader = new ProcessorReadElf(fc.getSelectedFile(),instance,data.getElfType(),true);
       if (!reader.canExecute()||!reader.execute(circuitState)) {
-        JOptionPane.showMessageDialog(parrentFrame, reader.getErrorMessage(), S.get("SocUpMenuErrorReadingElfTitle"), JOptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(parrentFrame, reader.getErrorMessage(), S.get("SocUpMenuErrorReadingElfTitle"), OptionPane.ERROR_MESSAGE);
         return;
       }
-      JOptionPane.showMessageDialog(parrentFrame, S.get("ProcReadElfLoadedAndEntrySet"));
+      OptionPane.showMessageDialog(parrentFrame, S.get("ProcReadElfLoadedAndEntrySet"));
     }
     
     public void registerCpuState(SocUpStateInterface data) {

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2CustomInstructions.java
Patch:
@@ -32,10 +32,9 @@
 
 import java.util.ArrayList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
@@ -83,7 +82,7 @@ public boolean waitingOnReady(Object processorState, CircuitState circuitState)
     istate.setPort(Nios2.START, Value.createKnown(1, 0), 0);
     if (!done.equals(Value.TRUE) && !done.equals(Value.FALSE)) {
       custActive = false;
-      JOptionPane.showMessageDialog(null, S.get("Nios2DonePinError"), "Nios2s", JOptionPane.ERROR_MESSAGE);
+      OptionPane.showMessageDialog(null, S.get("Nios2DonePinError"), "Nios2s", OptionPane.ERROR_MESSAGE);
       state.getSimState().errorInExecution();
       return true;
     }

File: src/main/java/com/cburch/logisim/soc/pio/PioMenu.java
Patch:
@@ -40,9 +40,9 @@
 
 import javax.swing.JFileChooser;
 import javax.swing.JMenuItem;
-import javax.swing.JOptionPane;
 import javax.swing.JPopupMenu;
 
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.soc.data.SocSupport;
@@ -97,7 +97,7 @@ private void exportC() {
         cFile = null;
       }
       if (headerFile == null || cFile == null) {
-        JOptionPane.showMessageDialog(frame, S.get("ErrorCreatingHeaderAndOrCFile"), S.get("ExportC"), JOptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(frame, S.get("ErrorCreatingHeaderAndOrCFile"), S.get("ExportC"), OptionPane.ERROR_MESSAGE);
         return;
       }
       PrintWriter headerWriter = new PrintWriter(headerFile);
@@ -161,7 +161,7 @@ private void exportC() {
       headerWriter.println("#endif");
       headerWriter.close();
       cWriter.close();
-      JOptionPane.showMessageDialog(frame, S.fmt("SuccesCreatingHeaderAndCFile", headerFileName, cFileName));
+      OptionPane.showMessageDialog(frame, S.fmt("SuccesCreatingHeaderAndCFile", headerFileName, cFileName));
     }
   }
   

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imControlTransferInstructions.java
Patch:
@@ -32,9 +32,8 @@
 
 import java.util.ArrayList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.soc.file.ElfHeader;
 import com.cburch.logisim.soc.util.AbstractExecutionUnitWithLabelSupport;
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
@@ -414,7 +413,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
                           instruction = RV32imSupport.getBTypeInstruction(BRANCH, operation, source1, source2, immediate);
                           break;
          default        : errors = true;
-                          JOptionPane.showMessageDialog(null, "Severe bug in RV32imControlTransferInstructions.java");
+                          OptionPane.showMessageDialog(null, "Severe bug in RV32imControlTransferInstructions.java");
                           break;
       }
     }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imEnvironmentCallAndBreakpoints.java
Patch:
@@ -32,9 +32,8 @@
 
 import java.util.ArrayList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
 import com.cburch.logisim.soc.util.AssemblerExecutionInterface;
 
@@ -61,7 +60,7 @@ public ArrayList<String> getInstructions() {
   public boolean execute(Object state, CircuitState cState) {
     if (!valid)
       return false;
-    JOptionPane.showMessageDialog(null, S.get("Rv32imECABNotImplmented"));
+    OptionPane.showMessageDialog(null, S.get("Rv32imECABNotImplmented"));
     return true;
   }
 

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imLoadAndStoreInstructions.java
Patch:
@@ -32,9 +32,8 @@
 
 import java.util.ArrayList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.soc.data.SocBusTransaction;
 import com.cburch.logisim.soc.file.ElfHeader;
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
@@ -267,7 +266,7 @@ public boolean setAsmInstruction(AssemblerAsmInstruction instr) {
     	              instruction = RV32imSupport.getITypeInstruction(LOAD, destination, funct3, base, immediate);
     	              break;
       default       : valid = false;
-                      JOptionPane.showMessageDialog(null, "Severe Bug in RV32imLoadAndStoreInstructions.java");
+                      OptionPane.showMessageDialog(null, "Severe Bug in RV32imLoadAndStoreInstructions.java");
                       break;
     }
     if (valid) {

File: src/main/java/com/cburch/logisim/soc/rv32im/Rv32imMemoryOrderingInstructions.java
Patch:
@@ -32,9 +32,8 @@
 
 import java.util.ArrayList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.soc.util.AssemblerAsmInstruction;
 import com.cburch.logisim.soc.util.AssemblerExecutionInterface;
 
@@ -69,7 +68,7 @@ public ArrayList<String> getInstructions() {
   public boolean execute(Object state, CircuitState cState) {
     if (!valid)
       return false;
-    JOptionPane.showMessageDialog(null, S.get("Rv32imMOINotImplmented"));
+    OptionPane.showMessageDialog(null, S.get("Rv32imMOINotImplmented"));
     return true;
   }
 

File: src/main/java/com/cburch/logisim/soc/util/Assembler.java
Patch:
@@ -37,7 +37,6 @@
 import java.util.LinkedList;
 import java.util.Set;
 
-import javax.swing.JOptionPane;
 import javax.swing.text.BadLocationException;
 
 import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;
@@ -52,6 +51,7 @@
 import org.fife.ui.rtextarea.RTextScrollPane;
 
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.gui.icons.ErrorIcon;
 import com.cburch.logisim.soc.data.SocProcessorInterface;
 import com.cburch.logisim.soc.file.ElfSectionHeader;
@@ -467,9 +467,9 @@ public long getEntryPoint() {
     if (EntryPoint >= 0) return EntryPoint;
     result = assemblerInfo.getEntryPoint();
     if (result < 0) 
-      JOptionPane.showMessageDialog(pane, S.get("AssemblerNoExecutableSection"), S.get("AsmPanRun"), JOptionPane.ERROR_MESSAGE);
+      OptionPane.showMessageDialog(pane, S.get("AssemblerNoExecutableSection"), S.get("AsmPanRun"), OptionPane.ERROR_MESSAGE);
     else
-      JOptionPane.showMessageDialog(pane, S.get("AssemblerAssumingEntryPoint"), S.get("AsmPanRun"), JOptionPane.WARNING_MESSAGE);
+      OptionPane.showMessageDialog(pane, S.get("AssemblerAssumingEntryPoint"), S.get("AsmPanRun"), OptionPane.WARNING_MESSAGE);
     return result;
   }
   

File: src/main/java/com/cburch/logisim/soc/util/AssemblerInfo.java
Patch:
@@ -35,9 +35,8 @@
 import java.util.HashSet;
 import java.util.LinkedList;
 
-import javax.swing.JOptionPane;
-
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.soc.data.AssemblerHighlighter;
 import com.cburch.logisim.soc.data.SocBusTransaction;
 import com.cburch.logisim.soc.data.SocProcessorInterface;
@@ -260,7 +259,7 @@ public void assemble(LinkedList<AssemblerToken> tokens, HashMap<String,Long> lab
     for (String label : labels.keySet()) {
       if (labels.get(label) < 0) {
         /* this should never happen */
-    	JOptionPane.showMessageDialog(null, "Severe bug in AssemblerInfo.java");
+    	OptionPane.showMessageDialog(null, "Severe bug in AssemblerInfo.java");
     	return;
       }
     }

File: src/main/java/com/cburch/logisim/soc/vga/VgaMenu.java
Patch:
@@ -40,9 +40,9 @@
 
 import javax.swing.JFileChooser;
 import javax.swing.JMenuItem;
-import javax.swing.JOptionPane;
 import javax.swing.JPopupMenu;
 
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.soc.data.SocSupport;
@@ -97,7 +97,7 @@ public void exportC() {
         cFile = null;
       }
       if (headerFile == null || cFile == null) {
-        JOptionPane.showMessageDialog(frame, S.get("ErrorCreatingHeaderAndOrCFile"), S.get("ExportC"), JOptionPane.ERROR_MESSAGE);
+        OptionPane.showMessageDialog(frame, S.get("ErrorCreatingHeaderAndOrCFile"), S.get("ExportC"), OptionPane.ERROR_MESSAGE);
         return;
       }
       PrintWriter headerWriter = new PrintWriter(headerFile);
@@ -119,7 +119,7 @@ public void exportC() {
       headerWriter.println("#endif");
       headerWriter.close();
       cWriter.close();
-      JOptionPane.showMessageDialog(frame, S.fmt("SuccesCreatingHeaderAndCFile", headerFileName, cFileName));
+      OptionPane.showMessageDialog(frame, S.fmt("SuccesCreatingHeaderAndCFile", headerFileName, cFileName));
     }
   }
 }

File: src/main/java/com/cburch/logisim/std/io/AbstractLedHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/io/ButtonHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.instance.StdAttr;

File: src/main/java/com/cburch/logisim/std/memory/DFlipFlop.java
Patch:
@@ -34,7 +34,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/memory/JKFlipFlop.java
Patch:
@@ -34,7 +34,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 
 import java.util.ArrayList;

File: src/main/java/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -34,7 +34,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 

File: src/main/java/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -34,7 +34,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.gui.icons.FlipFlopIcon;
 

File: src/main/java/com/cburch/logisim/std/tcl/TclWrapper.java
Patch:
@@ -28,6 +28,7 @@
 
 package com.cburch.logisim.std.tcl;
 
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.tools.MessageBox;
 import java.io.BufferedReader;
 import java.io.File;
@@ -39,7 +40,6 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Scanner;
-import javax.swing.JOptionPane;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -195,7 +195,7 @@ public void run() {
 
                   MessageBox userInfoBox =
                       new MessageBox(
-                          "Error starting TCL wrapper", errorMessage, JOptionPane.ERROR_MESSAGE);
+                          "Error starting TCL wrapper", errorMessage, OptionPane.ERROR_MESSAGE);
                   userInfoBox.show();
 
                 } catch (IOException e) {

File: src/main/java/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import java.util.ArrayList;
 

File: src/main/java/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -31,7 +31,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.fpga.designrulecheck.Netlist;
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
-import com.cburch.logisim.fpga.fpgagui.FPGAReport;
+import com.cburch.logisim.fpga.gui.FPGAReport;
 import com.cburch.logisim.fpga.hdlgenerator.AbstractHDLGeneratorFactory;
 import java.util.ArrayList;
 

File: src/main/java/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -36,6 +36,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
+import com.cburch.logisim.gui.generic.OptionPane;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.tools.SetAttributeAction;
 import java.awt.event.KeyEvent;
@@ -46,7 +47,6 @@
 import java.util.Set;
 import java.util.SortedSet;
 import java.util.TreeSet;
-import javax.swing.JOptionPane;
 
 public class AutoLabel {
 
@@ -230,11 +230,11 @@ public String AskAndSetLabel(
     while (!correct) {
       NewLabel =
           (String)
-              JOptionPane.showInputDialog(
+              OptionPane.showInputDialog(
                   null,
                   S.get("editLabelQuestion") + " " + ComponentName,
                   S.get("editLabelDialog"),
-                  JOptionPane.QUESTION_MESSAGE,
+                  OptionPane.QUESTION_MESSAGE,
                   null,
                   null,
                   OldLabel);

File: src/main/java/com/cburch/logisim/util/SyntaxChecker.java
Patch:
@@ -32,9 +32,10 @@
 
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
+import com.cburch.logisim.gui.generic.OptionPane;
+
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import javax.swing.JOptionPane;
 
 public class SyntaxChecker {
 	
@@ -77,7 +78,7 @@ public static String getErrorMessage(String val) {
   public static boolean isVariableNameAcceptable(String val, Boolean ShowDialog) {
     String Message = getErrorMessage(val);
     if (Message != null && ShowDialog) {
-        JOptionPane.showMessageDialog(
+        OptionPane.showMessageDialog(
                 null, Message.concat("\n" + S.get("variableNameNotAcceptable")));
     }
     return Message == null;

File: src/main/java/com/cburch/logisim/fpga/data/IOComponentsInformation.java
Patch:
@@ -90,6 +90,7 @@ public boolean hasOverlap(BoardRectangle orig , BoardRectangle update) {
   public void addComponent(FPGAIOInformationContainer comp, float scale) {
     if (!IOcomps.contains(comp)) {
       IOcomps.add(comp);
+      comp.SetId(IOcomps.indexOf(comp));
       BoardRectangle rect = comp.GetRectangle();
       for (int x = rect.getXpos() ; x < rect.getXpos()+rect.getWidth() ; x++)
         for (int y = rect.getYpos() ; y < rect.getYpos()+rect.getHeight() ; y++)
@@ -103,6 +104,7 @@ public void removeComponent(FPGAIOInformationContainer comp, float scale) {
     if (IOcomps.contains(comp)) {
       if (highlighted == comp) highlighted = null;
       IOcomps.remove(comp);
+      for (int i = 0 ; i < IOcomps.size() ; i++) IOcomps.get(i).SetId(i);
       BoardRectangle rect = comp.GetRectangle();
       for (int x = rect.getXpos() ; x < rect.getXpos()+rect.getWidth() ; x++)
         for (int y = rect.getYpos() ; y < rect.getYpos()+rect.getHeight() ; y++)

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -95,8 +95,8 @@ public void preferenceChange(PreferenceChangeEvent pce) {
       boardPic.setIcon(boardIcon);
       boardPic.repaint();
       FrequencyPanel.setFpgaClockFrequency(MyBoardInformation.fpga.getClockFrequency());;
+      HandleHDLOnly();
     }
-    HandleHDLOnly();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/fpgagui/ComponentMapDialog.java
Patch:
@@ -763,6 +763,8 @@ private void Save() {
 
   public void SetBoardInformation(BoardInformation Board) {
     BoardInfo = Board;
+    panel.pack();
+    panel.repaint();
   }
 
   public void SetMappebleComponents(MappableResourcesContainer mappable) {

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -85,7 +85,6 @@ public class FPGACommanderGui extends FPGACommanderBase
   @Override
   public void preferenceChange(PreferenceChangeEvent pce) {
     String property = pce.getKey();
-    HandleHDLOnly();
     if (property.equals(AppPreferences.SelectedBoard.getIdentifier())) {
       MyBoardInformation =
           new BoardReaderClass(AppPreferences.Boards.GetSelectedBoardFileName())
@@ -95,8 +94,8 @@ public void preferenceChange(PreferenceChangeEvent pce) {
       boardPic.setIcon(boardIcon);
       boardPic.repaint();
       FrequencyPanel.setFpgaClockFrequency(MyBoardInformation.fpga.getClockFrequency());;
-      HandleHDLOnly();
     }
+    HandleHDLOnly();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/prefs/FPGABoards.java
Patch:
@@ -162,6 +162,9 @@ public void actionPerformed(ActionEvent e) {
     } else if (e.getSource().equals(RemoveButton)) {
       String Board = BoardNamesList.getSelectedValue();
       if (RemoveBoard(Board)) {
+      	if (AppPreferences.SelectedBoard.get().equals(Board)) {
+            AppPreferences.SelectedBoard.set(BoardSelector.getItemAt(1));
+        }
         if ((BoardNamesList.getSelectedIndex() >= BoardNamesList.getModel().getSize())
             && (BoardNamesList.getModel().getSize() > 0)) {
           BoardNamesList.setSelectedIndex(BoardNamesList.getModel().getSize() - 1);

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -85,7 +85,6 @@ public class FPGACommanderGui extends FPGACommanderBase
   @Override
   public void preferenceChange(PreferenceChangeEvent pce) {
     String property = pce.getKey();
-    HandleHDLOnly();
     if (property.equals(AppPreferences.SelectedBoard.getIdentifier())) {
       MyBoardInformation =
           new BoardReaderClass(AppPreferences.Boards.GetSelectedBoardFileName())
@@ -95,8 +94,8 @@ public void preferenceChange(PreferenceChangeEvent pce) {
       boardPic.setIcon(boardIcon);
       boardPic.repaint();
       FrequencyPanel.setFpgaClockFrequency(MyBoardInformation.fpga.getClockFrequency());;
-      HandleHDLOnly();
     }
+    HandleHDLOnly();
   }
 
   @Override

File: src/main/java/com/cburch/logisim/prefs/FPGABoards.java
Patch:
@@ -162,6 +162,9 @@ public void actionPerformed(ActionEvent e) {
     } else if (e.getSource().equals(RemoveButton)) {
       String Board = BoardNamesList.getSelectedValue();
       if (RemoveBoard(Board)) {
+      	if (AppPreferences.SelectedBoard.get().equals(Board)) {
+            AppPreferences.SelectedBoard.set(BoardSelector.getItemAt(1));
+        }
         if ((BoardNamesList.getSelectedIndex() >= BoardNamesList.getModel().getSize())
             && (BoardNamesList.getModel().getSize() > 0)) {
           BoardNamesList.setSelectedIndex(BoardNamesList.getModel().getSize() - 1);

File: src/main/java/com/cburch/logisim/fpga/fpgaboardeditor/FPGAIOInformationContainer.java
Patch:
@@ -66,6 +66,7 @@ public static enum IOComponentTypes {
     LocalBus,
     Bus,
     Open,
+    Constant,
     Unknown;
 
     public static IOComponentTypes getEnumFromString(String str) {
@@ -213,8 +214,7 @@ public FPGAIOInformationContainer() {
     MyLabel = null;
   }
 
-  public FPGAIOInformationContainer(
-      IOComponentTypes Type, BoardRectangle rect, BoardDialog parent) {
+  public FPGAIOInformationContainer(IOComponentTypes Type, BoardRectangle rect, BoardDialog parent) {
     MyType = Type;
     MyIdentifier = -1;
     MyRectangle = rect;
@@ -230,7 +230,6 @@ public FPGAIOInformationContainer(
     	FPGAIOInformationSettingsDialog.GetSimpleInformationDialog(false,parent,this);
       return;
     }
-
     MyType = IOComponentTypes.Unknown;
   }
 

File: src/main/java/com/cburch/logisim/std/io/ButtonHDLGeneratorFactory.java
Patch:
@@ -53,16 +53,16 @@ public ArrayList<String> GetInlinedCode(
     String CloseBracket = (HDLType.equals(VHDL)) ? ")" : "]";
     for (int i = 0; i < ComponentInfo.NrOfEnds(); i++) {
       if (ComponentInfo.EndIsConnected(i)) {
-        Contents.add(
-            "   "
+        String map = "   "
                 + Preamble
                 + GetNetName(ComponentInfo, i, true, HDLType, Nets)
                 + AssignOperator
                 + HDLGeneratorFactory.LocalInputBubbleBusname
                 + OpenBracket
                 + Integer.toString(ComponentInfo.GetLocalBubbleInputStartId() + i)
                 + CloseBracket
-                + ";");
+                + ";";
+        Contents.add(map);
       }
     }
     return Contents;

File: src/main/java/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -468,7 +468,7 @@ void draw(ComponentDrawContext context, Collection<Component> hidden) {
 
           Stroke oldStroke = g.getStroke();
           g.setStroke(Wire.HIGHLIGHTED_STROKE);
-          g.setColor(Color.MAGENTA);
+          g.setColor(Value.STROKE_COLOR);
           g.drawLine(s.getX(), s.getY(), t.getX(), t.getY());
           g.setStroke(oldStroke);
         } else {

File: src/main/java/com/cburch/logisim/data/Value.java
Patch:
@@ -208,6 +208,7 @@ public static Value repeat(Value base, int bits) {
   public static Color UNKNOWN_COLOR = new Color(AppPreferences.UNKNOWN_COLOR.get());
   public static Color ERROR_COLOR = new Color(AppPreferences.ERROR_COLOR.get());
   public static Color NIL_COLOR = new Color(AppPreferences.NIL_COLOR.get());
+  public static Color STROKE_COLOR = new Color(AppPreferences.STROKE_COLOR.get());
   public static Color MULTI_COLOR = new Color(AppPreferences.BUS_COLOR.get());
   public static Color WIDTH_ERROR_COLOR = new Color(AppPreferences.WIDTH_ERROR_COLOR.get());
   public static Color WIDTH_ERROR_CAPTION_COLOR = new Color(AppPreferences.WIDTH_ERROR_CAPTION_COLOR.get());

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -647,6 +647,8 @@ else if (DefaultAppearance.get().equals(StdAttr.APPEAR_FPGA.toString()))
 		  create(new PrefMonitorString("SimDontCareChar","- "));
   public static final PrefMonitor<Integer> BUS_COLOR =
 	      create(new PrefMonitorInt("SimBusColor",0));
+  public static final PrefMonitor<Integer> STROKE_COLOR =
+	      create(new PrefMonitorInt("SimStrokeColor",0xff00ff));
   public static final PrefMonitor<Integer> WIDTH_ERROR_COLOR =
 	      create(new PrefMonitorInt("SimWidthErrorColor",0xFF7B00));
   public static final PrefMonitor<Integer> WIDTH_ERROR_CAPTION_COLOR =

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionRenderData.java
Patch:
@@ -111,6 +111,8 @@ public ExpressionRenderData(Expression expr, int width, Notation notation) {
   }
   
   public void setSubExpression(Expression subExpr) {
+	if (expr == null) return;
+	if (subExpr == null) return;
     expr.toString(notation, true, subExpr);
     lineMarks = computeLineAttribs(expr.marks);
     lineStyled = null;

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -141,7 +141,6 @@ public void circuitChanged(CircuitEvent event) {
   public static final int FONT_SIZE = 12;
   private JFrame panel;
   private JLabel textMainCircuit = new JLabel();
-  private JLabel textTargetBoard = new JLabel();
   private JLabel boardPic = new JLabel();
   private BoardIcon boardIcon = null;
   private JButton annotateButton = new JButton();
@@ -518,7 +517,6 @@ public void windowDeactivated(WindowEvent e) {}
   @Override
   public void localeChanged() {
     textMainCircuit.setText(S.get("FpgaGuiMainCircuit"));
-    textTargetBoard.setText(S.get("FpgaGuiTargetBoard"));
     panel.setTitle(S.get("FpgaGuiTitle")+" " + MyProject.getLogisimFile().getName());
     annotationList.repaint();
     validateButton.setText(S.get("FpgaGuiExecute"));

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -51,7 +51,6 @@ public LayoutOptions(PreferencesFrame window) {
         new PrefBoolean[] {
           new PrefBoolean(AppPreferences.AntiAliassing, S.getter("layoutAntiAliasing")),
           new PrefBoolean(AppPreferences.PRINTER_VIEW, S.getter("layoutPrinterView")),
-          new PrefBoolean(AppPreferences.COLORBLIND_MODE, S.getter("layoutColorblindMode")),
           new PrefBoolean(AppPreferences.ATTRIBUTE_HALO, S.getter("layoutAttributeHalo")),
           new PrefBoolean(AppPreferences.ANIMATED_ICONS, S.getter("layoutAnimatedIcons")),
           new PrefBoolean(AppPreferences.COMPONENT_TIPS, S.getter("layoutShowTips")),

File: src/main/java/com/cburch/logisim/gui/prefs/PreferencesFrame.java
Patch:
@@ -110,6 +110,7 @@ private PreferencesFrame() {
           new IntlOptions(this),
           new WindowOptions(this),
           new LayoutOptions(this),
+          new SimOptions(this),
           new ExperimentalOptions(this),
           new SoftwaresOptions(this),
           new FPGAOptions(this), // Should be last as setFpgaTab depends on it

File: src/main/java/com/cburch/logisim/tools/WiringTool.java
Patch:
@@ -40,7 +40,6 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.Icons;
 import com.cburch.logisim.util.StringGetter;
 
 import java.awt.BasicStroke;
@@ -54,7 +53,6 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Set;
-import javax.swing.Icon;
 
 public class WiringTool extends Tool {
   private static Cursor cursor = Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR);

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionRenderData.java
Patch:
@@ -111,6 +111,8 @@ public ExpressionRenderData(Expression expr, int width, Notation notation) {
   }
   
   public void setSubExpression(Expression subExpr) {
+	if (expr == null) return;
+	if (subExpr == null) return;
     expr.toString(notation, true, subExpr);
     lineMarks = computeLineAttribs(expr.marks);
     lineStyled = null;

File: src/main/java/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -51,7 +51,6 @@ public LayoutOptions(PreferencesFrame window) {
         new PrefBoolean[] {
           new PrefBoolean(AppPreferences.AntiAliassing, S.getter("layoutAntiAliasing")),
           new PrefBoolean(AppPreferences.PRINTER_VIEW, S.getter("layoutPrinterView")),
-          new PrefBoolean(AppPreferences.COLORBLIND_MODE, S.getter("layoutColorblindMode")),
           new PrefBoolean(AppPreferences.ATTRIBUTE_HALO, S.getter("layoutAttributeHalo")),
           new PrefBoolean(AppPreferences.ANIMATED_ICONS, S.getter("layoutAnimatedIcons")),
           new PrefBoolean(AppPreferences.COMPONENT_TIPS, S.getter("layoutShowTips")),

File: src/main/java/com/cburch/logisim/gui/prefs/PreferencesFrame.java
Patch:
@@ -110,6 +110,7 @@ private PreferencesFrame() {
           new IntlOptions(this),
           new WindowOptions(this),
           new LayoutOptions(this),
+          new SimOptions(this),
           new ExperimentalOptions(this),
           new SoftwaresOptions(this),
           new FPGAOptions(this), // Should be last as setFpgaTab depends on it

File: src/main/java/com/cburch/logisim/tools/WiringTool.java
Patch:
@@ -40,7 +40,6 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.proj.Action;
 import com.cburch.logisim.util.GraphicsUtil;
-import com.cburch.logisim.util.Icons;
 import com.cburch.logisim.util.StringGetter;
 
 import java.awt.BasicStroke;
@@ -54,7 +53,6 @@
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Set;
-import javax.swing.Icon;
 
 public class WiringTool extends Tool {
   private static Cursor cursor = Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR);

File: src/main/java/com/cburch/logisim/gui/menu/MenuEdit.java
Patch:
@@ -104,7 +104,7 @@ public MenuEdit(LogisimMenuBar menubar) {
 
     int menuMask = getToolkit().getMenuShortcutKeyMask();
     undo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask));
-    redo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, menuMask));
+    redo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask | KeyEvent.SHIFT_DOWN_MASK));
     cut.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, menuMask));
     copy.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, menuMask));
     paste.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, menuMask));

File: src/main/java/com/cburch/logisim/gui/menu/MenuEdit.java
Patch:
@@ -104,7 +104,7 @@ public MenuEdit(LogisimMenuBar menubar) {
 
     int menuMask = getToolkit().getMenuShortcutKeyMask();
     undo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask));
-    redo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, menuMask));
+    redo.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Z, menuMask | KeyEvent.SHIFT_DOWN_MASK));
     cut.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, menuMask));
     copy.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, menuMask));
     paste.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, menuMask));

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/ImageExporter.java
Patch:
@@ -336,7 +336,7 @@ private BufferedImage CreateSignalImage(
       /*ChronoData chrdata, String name, SignalData sigData,*/ ArrayList<String> valList,
       String name) {
     String prec, suiv;
-    int busCrossingPosition = tickWidth - 5 < 1 ? 0 : 5;
+    int busCrossingPosition = (tickWidth - 5) < 1 ? 0 : 5;
     JPanel mRightPanel = new JPanel();
 
     int posX = 0;

File: src/main/java/com/cburch/logisim/fpga/fpgagui/ComponentMapDialog.java
Patch:
@@ -699,12 +699,14 @@ private void MapOne() {
       String key = UnmappedList.getSelectedValue().toString();
       if (HighlightItem != null) {
         MappableComponents.Map(key, HighlightItem, BoardInfo.GetComponentType(HighlightItem));
+        MappableComponents.markChanged();
         RebuildSelectionLists();
       }
     } else if (MappedList.getSelectedIndex() >= 0) {
       String key = MappedList.getSelectedValue().toString();
       if (HighlightItem != null) {
         MappableComponents.Map(key, HighlightItem, BoardInfo.GetComponentType(HighlightItem));
+        MappableComponents.markChanged();
       }
     }
     ClearSelections();

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGAReportTabbedPane.java
Patch:
@@ -301,7 +301,7 @@ public void clearDRCTrace() {
     if (DRCTraceActive) {
       ActiveDRCContainer.ClearMarks();
       DRCTraceActive = false;
-      MyProject.repaintCanvas();
+      if (MyProject!=null) MyProject.repaintCanvas();
     }
   }
 
@@ -362,10 +362,10 @@ private void GenerateDRCTrace(SimpleDRCContainer dc) {
     DRCTraceActive = true;
     ActiveDRCContainer = dc;
     if (dc.HasCircuit())
-      if (!MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
+      if (MyProject!= null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
         MyProject.setCurrentCircuit(dc.GetCircuit());
     dc.MarkComponents();
-    MyProject.repaintCanvas();
+    if (MyProject != null) MyProject.repaintCanvas();
   }
 
   /* Here the mouse events are handled */

File: src/main/java/com/cburch/logisim/fpga/fpgagui/MappableResourcesContainer.java
Patch:
@@ -486,7 +486,6 @@ public void Map(String comp, BoardRectangle item, String Maptype) {
       return;
     }
     MapComp.addMap(DisplayNametoMapName(comp), item, Maptype);
-    markChanged();
     rebuildMappedLists();
   }
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -496,8 +496,6 @@ public static int getIconBorder() {
               "afterAdd",
               new String[] {HDLGeneratorFactory.VHDL, HDLGeneratorFactory.VERILOG},
               HDLGeneratorFactory.VHDL));
-  public static final PrefMonitor<Boolean> DownloadToBoard =
-      create(new PrefMonitorBoolean("DownloadToBoard", true));
   public static final PrefMonitor<String> SelectedBoard =
       create(new PrefMonitorString("SelectedBoard", null));
 

File: src/main/java/com/cburch/logisim/fpga/gui/FPGAClockPanel.java
Patch:
@@ -178,8 +178,9 @@ private void recalculateFrequency() {
     double divider = FPGAClockFrequency/freq;
     long longDivider = (long) divider;
     if (longDivider <= 1) longDivider = 2;
+    if ((longDivider&1) != 0) longDivider++;
     double corfreq = FPGAClockFrequency/longDivider;
-    this.divider.setText(Long.toString((longDivider+1)>>1));
+    this.divider.setText(Long.toString((longDivider)>>1));
     setSelectedFrequency(corfreq);
   }
   

File: src/main/java/com/cburch/logisim/fpga/fpgagui/ComponentMapDialog.java
Patch:
@@ -699,12 +699,14 @@ private void MapOne() {
       String key = UnmappedList.getSelectedValue().toString();
       if (HighlightItem != null) {
         MappableComponents.Map(key, HighlightItem, BoardInfo.GetComponentType(HighlightItem));
+        MappableComponents.markChanged();
         RebuildSelectionLists();
       }
     } else if (MappedList.getSelectedIndex() >= 0) {
       String key = MappedList.getSelectedValue().toString();
       if (HighlightItem != null) {
         MappableComponents.Map(key, HighlightItem, BoardInfo.GetComponentType(HighlightItem));
+        MappableComponents.markChanged();
       }
     }
     ClearSelections();

File: src/main/java/com/cburch/logisim/fpga/fpgagui/MappableResourcesContainer.java
Patch:
@@ -96,8 +96,7 @@ public void save() {
   }
   
   public void markChanged() {
-	if (myCircuit != null && myCircuit.getProject() != null)
-      myCircuit.getProject().setForcedDirty();
+    myCircuit.getProject().setForcedDirty();
   }
 
   public void BuildIOMappingInformation() {
@@ -487,7 +486,6 @@ public void Map(String comp, BoardRectangle item, String Maptype) {
       return;
     }
     MapComp.addMap(DisplayNametoMapName(comp), item, Maptype);
-    markChanged();
     rebuildMappedLists();
   }
 

File: src/main/java/com/cburch/logisim/fpga/download/Download.java
Patch:
@@ -374,7 +374,7 @@ private boolean PrepareDownLoad() {
         ComponentMapParser cmp =
             new ComponentMapParser(MapFile, MyMappableResources, MyBoardInformation);
         cmp.parseFile();
-      } else return false;
+      }
     }
     if (!MapDesignCheckIOs()) {
       MyReporter.AddError(S.fmt("FPGAMapNotComplete", MyBoardInformation.getBoardName()));

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -351,7 +351,7 @@ public FPGACommanderGui(Project Main) {
     CustFreqPannel =
         new CustomFrequencySelDialog(panel, MyBoardInformation.fpga.getClockFrequency());
     AppPreferences.getPrefs().addPreferenceChangeListener(this);
-    MyReporter = new FPGAReport(this);
+    MyReporter = new FPGAReport(this,Progress);
     localeChanged();
   }
 

File: src/main/java/com/cburch/logisim/fpga/fpgagui/MappableResourcesContainer.java
Patch:
@@ -96,7 +96,8 @@ public void save() {
   }
   
   public void markChanged() {
-    myCircuit.getProject().setForcedDirty();
+	if (myCircuit != null && myCircuit.getProject() != null)
+      myCircuit.getProject().setForcedDirty();
   }
 
   public void BuildIOMappingInformation() {

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -351,7 +351,7 @@ public FPGACommanderGui(Project Main) {
     CustFreqPannel =
         new CustomFrequencySelDialog(panel, MyBoardInformation.fpga.getClockFrequency());
     AppPreferences.getPrefs().addPreferenceChangeListener(this);
-    MyReporter = new FPGAReportGui(this);
+    MyReporter = new FPGAReport(this);
     localeChanged();
   }
 
@@ -398,6 +398,7 @@ public void actionPerformed(ActionEvent e) {
               "",
               writeToFlash.isSelected(),
               skipHDL.isSelected(),
+              false, //TODO HDL-only
               Progress);
       Downloader.AddListener(this);
       Downloader.DoDownload();

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGAReportTabbedPane.java
Patch:
@@ -301,7 +301,7 @@ public void clearDRCTrace() {
     if (DRCTraceActive) {
       ActiveDRCContainer.ClearMarks();
       DRCTraceActive = false;
-      MyProject.repaintCanvas();
+      if (MyProject!=null) MyProject.repaintCanvas();
     }
   }
 
@@ -362,10 +362,10 @@ private void GenerateDRCTrace(SimpleDRCContainer dc) {
     DRCTraceActive = true;
     ActiveDRCContainer = dc;
     if (dc.HasCircuit())
-      if (!MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
+      if (MyProject!= null && !MyProject.getCurrentCircuit().equals(dc.GetCircuit()))
         MyProject.setCurrentCircuit(dc.GetCircuit());
     dc.MarkComponents();
-    MyProject.repaintCanvas();
+    if (MyProject != null) MyProject.repaintCanvas();
   }
 
   /* Here the mouse events are handled */

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -89,7 +89,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 3, 2, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 3, 3, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2020;

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -68,4 +68,5 @@ public void SetParrentNet(Net ConnectedNet, Byte BitIndex) {
     MyOwnNet = ConnectedNet;
     MyOwnNetBitIndex = BitIndex;
   }
+  
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDLGeneratorFactory.java
Patch:
@@ -83,7 +83,7 @@ public ArrayList<String> GetComponentMap(
       Long ComponentId,
       NetlistComponent ComponentInfo,
       FPGAReport Reporter,
-      String CircuitName,
+      String Name,
       String HDLType);
 
   public String getComponentStringIdentifier();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -245,7 +245,7 @@ public ArrayList<String> GetModuleFunctionality(
         Contents.addAll(
             Clockgen.getFactory()
                 .getHDLGenerator(HDLType, ThisClock.GetComponent().getAttributeSet())
-                .GetComponentMap(TheNetlist, index++, ThisClock, Reporter, "Bla", HDLType));
+                .GetComponentMap(TheNetlist, index++, ThisClock, Reporter, "", HDLType));
       }
     }
     Contents.add("");

File: src/main/java/com/cburch/logisim/fpga/designrulecheck/ConnectionPoint.java
Patch:
@@ -68,4 +68,5 @@ public void SetParrentNet(Net ConnectedNet, Byte BitIndex) {
     MyOwnNet = ConnectedNet;
     MyOwnNetBitIndex = BitIndex;
   }
+  
 }

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/HDLGeneratorFactory.java
Patch:
@@ -83,7 +83,7 @@ public ArrayList<String> GetComponentMap(
       Long ComponentId,
       NetlistComponent ComponentInfo,
       FPGAReport Reporter,
-      String CircuitName,
+      String Name,
       String HDLType);
 
   public String getComponentStringIdentifier();

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/ToplevelHDLGeneratorFactory.java
Patch:
@@ -245,7 +245,7 @@ public ArrayList<String> GetModuleFunctionality(
         Contents.addAll(
             Clockgen.getFactory()
                 .getHDLGenerator(HDLType, ThisClock.GetComponent().getAttributeSet())
-                .GetComponentMap(TheNetlist, index++, ThisClock, Reporter, "Bla", HDLType));
+                .GetComponentMap(TheNetlist, index++, ThisClock, Reporter, "", HDLType));
       }
     }
     Contents.add("");

File: src/main/java/com/cburch/logisim/std/memory/MemContents.java
Patch:
@@ -363,7 +363,7 @@ public void copyFrom(long start, MemContents src, long offs, int count) {
     count = (int)Math.min(count, getLastOffset() - start + 1);
     if (count <= 0)
       return;
-    if (src.addrBits != width)
+    if (src.addrBits != addrBits)
       throw new IllegalArgumentException(String.format(
               "memory width mismatch: src is %d bits wide, dest is %d bits wide",
               src.addrBits, addrBits));

File: src/main/java/com/cburch/logisim/std/memory/MemContents.java
Patch:
@@ -363,7 +363,7 @@ public void copyFrom(long start, MemContents src, long offs, int count) {
     count = (int)Math.min(count, getLastOffset() - start + 1);
     if (count <= 0)
       return;
-    if (src.addrBits != width)
+    if (src.addrBits != addrBits)
       throw new IllegalArgumentException(String.format(
               "memory width mismatch: src is %d bits wide, dest is %d bits wide",
               src.addrBits, addrBits));

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -89,7 +89,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 3, 1, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 3, 2, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2020;

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -104,6 +104,8 @@ public void metainfoChanged(HexModel source) {}
   public static final AttributeOption OCTO = new AttributeOption("octo",S.getter("memOcto"));
   public static final Attribute<AttributeOption> LINE_ATTR = Attributes.forOption("line", S.getter("memLineSize"),
                new AttributeOption[] {SINGLE,DUAL,QUAD,OCTO});
+  public static final Attribute<Boolean> ALLOW_MISALIGNED =
+          Attributes.forBoolean("misaligned", S.getter("memMisaligned"));
   static final AttributeOption WRITEAFTERREAD = new AttributeOption("war",S.getter("memWar"));
   static final AttributeOption READAFTERWRITE = new AttributeOption("raw",S.getter("memRaw"));
   static final Attribute<AttributeOption> READ_ATTR = Attributes.forOption("readbehav", S.getter("memReadBehav"), 

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -101,8 +101,9 @@ public void metainfoChanged(HexModel source) {}
   public static final AttributeOption SINGLE = new AttributeOption("single",S.getter("memSingle"));
   public static final AttributeOption DUAL = new AttributeOption("dual",S.getter("memDual"));
   public static final AttributeOption QUAD = new AttributeOption("quad",S.getter("memQuad"));
+  public static final AttributeOption OCTO = new AttributeOption("octo",S.getter("memOcto"));
   public static final Attribute<AttributeOption> LINE_ATTR = Attributes.forOption("line", S.getter("memLineSize"),
-               new AttributeOption[] {SINGLE,DUAL,QUAD});
+               new AttributeOption[] {SINGLE,DUAL,QUAD,OCTO});
   public static final Attribute<Boolean> ALLOW_MISALIGNED =
           Attributes.forBoolean("misaligned", S.getter("memMisaligned"));
   static final AttributeOption WRITEAFTERREAD = new AttributeOption("war",S.getter("memWar"));

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -101,8 +101,9 @@ public void metainfoChanged(HexModel source) {}
   public static final AttributeOption SINGLE = new AttributeOption("single",S.getter("memSingle"));
   public static final AttributeOption DUAL = new AttributeOption("dual",S.getter("memDual"));
   public static final AttributeOption QUAD = new AttributeOption("quad",S.getter("memQuad"));
+  public static final AttributeOption OCTO = new AttributeOption("octo",S.getter("memOcto"));
   public static final Attribute<AttributeOption> LINE_ATTR = Attributes.forOption("line", S.getter("memLineSize"),
-               new AttributeOption[] {SINGLE,DUAL,QUAD});
+               new AttributeOption[] {SINGLE,DUAL,QUAD,OCTO});
   static final AttributeOption WRITEAFTERREAD = new AttributeOption("war",S.getter("memWar"));
   static final AttributeOption READAFTERWRITE = new AttributeOption("raw",S.getter("memRaw"));
   static final Attribute<AttributeOption> READ_ATTR = Attributes.forOption("readbehav", S.getter("memReadBehav"), 

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -811,7 +811,7 @@ void mutatorAdd(Component c) {
       if (c.getAttributeSet().containsAttribute(StdAttr.LABEL) && !(c.getFactory() instanceof Tunnel)) {
         HashSet<String> labels = new HashSet<String>();
         for (Component comp : comps) {
-          if (comp.equals(c))
+          if (comp.equals(c) || comp.getFactory() instanceof Tunnel)
             continue;
           if (comp.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
             String label = comp.getAttributeSet().getValue(StdAttr.LABEL);

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -811,7 +811,7 @@ void mutatorAdd(Component c) {
       if (c.getAttributeSet().containsAttribute(StdAttr.LABEL) && !(c.getFactory() instanceof Tunnel)) {
         HashSet<String> labels = new HashSet<String>();
         for (Component comp : comps) {
-          if (comp.equals(c))
+          if (comp.equals(c) || comp.getFactory() instanceof Tunnel)
             continue;
           if (comp.getAttributeSet().containsAttribute(StdAttr.LABEL)) {
             String label = comp.getAttributeSet().getValue(StdAttr.LABEL);

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -861,11 +861,10 @@ public void run() {
     if (isTty) {
       try {
         TtyInterface.run(this);
-        return;
+        System.exit(0);
       } catch (Exception t) {
         t.printStackTrace();
         System.exit(-1);
-        return;
       }
     }
 

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -861,11 +861,10 @@ public void run() {
     if (isTty) {
       try {
         TtyInterface.run(this);
-        return;
+        System.exit(0);
       } catch (Exception t) {
         t.printStackTrace();
         System.exit(-1);
-        return;
       }
     }
 

File: src/main/java/com/cburch/logisim/data/Value.java
Patch:
@@ -209,7 +209,7 @@ public static Value repeat(Value base, int bits) {
 
   public static final Color ERROR_COLOR = new Color(192, 0, 0);
 
-  public static Color WIDTH_ERROR_COLOR;
+  public static Color WIDTH_ERROR_COLOR = new Color(255, 123, 0);
   public static final Color WIDTH_ERROR_CAPTION_COLOR = new Color(85, 0, 0);
   public static final Color WIDTH_ERROR_HIGHLIGHT_COLOR = new Color(255, 255, 0);
   public static final Color WIDTH_ERROR_CAPTION_BGCOLOR = new Color(255, 230, 210);

File: src/main/java/com/cburch/logisim/data/Value.java
Patch:
@@ -209,7 +209,7 @@ public static Value repeat(Value base, int bits) {
 
   public static final Color ERROR_COLOR = new Color(192, 0, 0);
 
-  public static Color WIDTH_ERROR_COLOR;
+  public static Color WIDTH_ERROR_COLOR = new Color(255, 123, 0);
   public static final Color WIDTH_ERROR_CAPTION_COLOR = new Color(85, 0, 0);
   public static final Color WIDTH_ERROR_HIGHLIGHT_COLOR = new Color(255, 255, 0);
   public static final Color WIDTH_ERROR_CAPTION_BGCOLOR = new Color(255, 230, 210);

File: src/main/java/com/cburch/logisim/circuit/RadixOption.java
Patch:
@@ -126,6 +126,7 @@ public int getMaxLength(BitWidth width) {
         case 61:
         case 62:
         case 63:
+        case 64:
           return 20; // 1E..4E
         default:
           return 1;

File: src/main/java/com/cburch/logisim/std/memory/CounterAttributes.java
Patch:
@@ -57,7 +57,7 @@ public CounterAttributes() {
             },
             new Object[] {
               BitWidth.create(8),
-              Integer.valueOf(0xFF),
+              Long.valueOf(0xFF),
               Counter.ON_GOAL_WRAP,
               StdAttr.TRIG_RISING,
               "",

File: src/main/java/com/cburch/logisim/util/StringUtil.java
Patch:
@@ -133,4 +133,5 @@ public static Bounds estimateBounds(String text, Font font, int hAlign, int vAli
     }
     return Bounds.create(x, y, w, h);
   }
+
 }

File: src/main/java/com/cburch/logisim/circuit/RadixOption.java
Patch:
@@ -126,6 +126,7 @@ public int getMaxLength(BitWidth width) {
         case 61:
         case 62:
         case 63:
+        case 64:
           return 20; // 1E..4E
         default:
           return 1;

File: src/main/java/com/cburch/logisim/std/memory/CounterAttributes.java
Patch:
@@ -57,7 +57,7 @@ public CounterAttributes() {
             },
             new Object[] {
               BitWidth.create(8),
-              Integer.valueOf(0xFF),
+              Long.valueOf(0xFF),
               Counter.ON_GOAL_WRAP,
               StdAttr.TRIG_RISING,
               "",

File: src/main/java/com/cburch/logisim/util/StringUtil.java
Patch:
@@ -133,4 +133,5 @@ public static Bounds estimateBounds(String text, Font font, int hAlign, int vAli
     }
     return Bounds.create(x, y, w, h);
   }
+
 }

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -82,7 +82,7 @@ public static void DrawRegisterEvolution(
       Value value) {
     int dq_width = (nr_of_bits == 1) ? 3 : 5;
     int len = (nr_of_bits + 3) / 4;
-    int wid = 7 * len + 2;
+    int wid = 8 * len + 2;
     int xoff = (60 - wid) / 2;
     Graphics g = painter.getGraphics();
     if (painter.getShowState() && (value != null)) {

File: src/main/java/com/cburch/logisim/std/memory/RegisterPoker.java
Patch:
@@ -100,7 +100,7 @@ public void paint(InstancePainter painter) {
 
     Graphics g = painter.getGraphics();
     g.setColor(Color.RED);
-    int wid = 7 * len + 2;
+    int wid = 8 * len + 2;
     g.drawRect(bds.getX() + (bds.getWidth() - wid) / 2, bds.getY(), wid, 16);
     g.setColor(Color.BLACK);
   }

File: src/main/java/com/cburch/gray/CounterPoker.java
Patch:
@@ -66,7 +66,7 @@ public void keyTyped(InstanceState state, KeyEvent e) {
 
     // compute the next value
     CounterData cur = CounterData.get(state, width);
-    int newVal = (cur.getValue().toIntValue() * 16 + val) & width.getMask();
+    long newVal = (cur.getValue().toLongValue() * 16 + val) & width.getMask();
     Value newValue = Value.createKnown(width, newVal);
     cur.setValue(newValue);
     state.fireInvalidated();

File: src/main/java/com/cburch/gray/GrayCounter.java
Patch:
@@ -109,7 +109,7 @@ public void paintInstance(InstancePainter painter) {
       Bounds bds = painter.getBounds();
       GraphicsUtil.drawCenteredText(
           painter.getGraphics(),
-          StringUtil.toHexString(width.getWidth(), state.getValue().toIntValue()),
+          StringUtil.toHexString(width.getWidth(), state.getValue().toLongValue()),
           bds.getX() + bds.getWidth() / 2,
           bds.getY() + bds.getHeight() / 2);
     }

File: src/main/java/com/cburch/gray/SimpleGrayCounter.java
Patch:
@@ -74,7 +74,7 @@ public void paintInstance(InstancePainter painter) {
       Bounds bds = painter.getBounds();
       GraphicsUtil.drawCenteredText(
           painter.getGraphics(),
-          StringUtil.toHexString(BIT_WIDTH.getWidth(), state.getValue().toIntValue()),
+          StringUtil.toHexString(BIT_WIDTH.getWidth(), state.getValue().toLongValue()),
           bds.getX() + bds.getWidth() / 2,
           bds.getY() + bds.getHeight() / 2);
     }

File: src/main/java/com/cburch/hex/Caret.java
Patch:
@@ -155,7 +155,7 @@ public void keyTyped(KeyEvent e) {
             if (model != null
                 && cursor >= model.getFirstOffset()
                 && cursor <= model.getLastOffset()) {
-              int curValue = model.get(cursor);
+              int curValue = (int) model.get(cursor);
               int newValue = 16 * curValue + digit;
               model.set(cursor, newValue);
             }

File: src/main/java/com/cburch/hex/HexEditor.java
Patch:
@@ -43,7 +43,7 @@
 
 public class HexEditor extends JComponent implements Scrollable {
   private class Listener implements HexModelListener {
-    public void bytesChanged(HexModel source, long start, long numBytes, int[] oldValues) {
+    public void bytesChanged(HexModel source, long start, long numBytes, long[] oldValues) {
       repaint(
           0,
           measures.toY(start),

File: src/main/java/com/cburch/hex/HexModelListener.java
Patch:
@@ -29,7 +29,7 @@
 package com.cburch.hex;
 
 public interface HexModelListener {
-  public void bytesChanged(HexModel source, long start, long numBytes, int[] oldValues);
+  public void bytesChanged(HexModel source, long start, long numBytes, long[] oldValues);
 
   public void metainfoChanged(HexModel source);
 }

File: src/main/java/com/cburch/logisim/circuit/SplitterAttributes.java
Patch:
@@ -217,7 +217,7 @@ static byte[] computeDistribution(int fanout, int bits, int order) {
       Attributes.forBitWidth("incoming", S.getter("splitterBitWidthAttr"));
 
   public static final Attribute<Integer> ATTR_FANOUT =
-      Attributes.forIntegerRange("fanout", S.getter("splitterFanOutAttr"), 1, 32);
+      Attributes.forIntegerRange("fanout", S.getter("splitterFanOutAttr"), 1, 64);
 
   private static final List<Attribute<?>> INIT_ATTRIBUTES =
       Arrays.asList(

File: src/main/java/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -115,9 +115,9 @@ public Object getFeature(Object key, AttributeSet attrs) {
           ParallelConfigurator.create(
               new BitWidthConfigurator(SplitterAttributes.ATTR_WIDTH),
               new IntegerConfigurator(
-                  SplitterAttributes.ATTR_FANOUT, 1, 32, InputEvent.ALT_DOWN_MASK));
+                  SplitterAttributes.ATTR_FANOUT, 1, 64, InputEvent.ALT_DOWN_MASK));
       return JoinedConfigurator.create(
-          new IntegerConfigurator(SplitterAttributes.ATTR_FANOUT, 1, 32, 0), altConfig);
+          new IntegerConfigurator(SplitterAttributes.ATTR_FANOUT, 1, 64, 0), altConfig);
     }
     return super.getFeature(key, attrs);
   }

File: src/main/java/com/cburch/logisim/circuit/WidthIncompatibilityData.java
Patch:
@@ -82,7 +82,7 @@ public Location getPoint(int i) {
   }
 
   public BitWidth getCommonBitWidth() {
-    int hist[] = new int[33];
+    int hist[] = new int[65];
     BitWidth maxwidth = null;
     int maxcount = 0;
     for (BitWidth bw : widths) {

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -103,7 +103,7 @@ public void propagate(InstanceState state) {
     if (state.getPortValue(BCDin).isFullyDefined()
         & !state.getPortValue(BCDin).isErrorValue()
         & !state.getPortValue(BCDin).isUnknown()) {
-      int value = state.getPortValue(BCDin).toIntValue();
+      int value = (int)state.getPortValue(BCDin).toLongValue();
       switch (value) {
         case 0:
           state.setPort(Segment_A, Value.createKnown(BitWidth.create(1), 1), PER_DELAY);

File: src/main/java/com/cburch/logisim/fpga/library/bin2bcd.java
Patch:
@@ -104,7 +104,7 @@ public void propagate(InstanceState state) {
         (state.getPortValue(BINin).isFullyDefined()
                 & !state.getPortValue(BINin).isUnknown()
                 & !state.getPortValue(BINin).isErrorValue()
-            ? state.getPortValue(BINin).toIntValue()
+            ? (int)state.getPortValue(BINin).toLongValue()
             : -1);
     BitWidth NrOfBits = state.getAttributeValue(bin2bcd.ATTR_BinBits);
     int NrOfPorts = (int) (Math.log10(Math.pow(2.0, NrOfBits.getWidth())) + 1.0);

File: src/main/java/com/cburch/logisim/soc/jtaguart/JtagUartState.java
Patch:
@@ -282,7 +282,7 @@ public void handleOperations(InstanceState state) {
       }
       if (state.getPortValue(JtagUart.AvailablePin) == Value.TRUE && state.getPortValue(JtagUart.ReadEnablePin) == Value.FALSE) {
         instState.setAcBit();
-        instState.pushReadFifo(state.getPortValue(JtagUart.DataInPin).toIntValue());
+        instState.pushReadFifo((int) state.getPortValue(JtagUart.DataInPin).toLongValue());
         state.setPort(JtagUart.ReadEnablePin, Value.TRUE, 5);
       } else {
         state.setPort(JtagUart.ReadEnablePin, Value.FALSE, 5);

File: src/main/java/com/cburch/logisim/std/arith/BitAdder.java
Patch:
@@ -52,7 +52,7 @@
 
 public class BitAdder extends InstanceFactory {
   static final Attribute<Integer> NUM_INPUTS =
-      Attributes.forIntegerRange("inputs", S.getter("gateInputsAttr"), 1, 32);
+      Attributes.forIntegerRange("inputs", S.getter("gateInputsAttr"), 1, 64);
 
   public BitAdder() {
     super("BitAdder", S.getter("bitAdderComponent"));
@@ -61,7 +61,7 @@ public BitAdder() {
         new Object[] {BitWidth.create(8), Integer.valueOf(1)});
     setKeyConfigurator(
         JoinedConfigurator.create(
-            new IntegerConfigurator(NUM_INPUTS, 1, 32, 0),
+            new IntegerConfigurator(NUM_INPUTS, 1, 64, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
     setIcon(new ArithmeticIcon("#"));
   }

File: src/main/java/com/cburch/logisim/std/arith/Negator.java
Patch:
@@ -94,7 +94,7 @@ public void propagate(InstanceState state) {
     Value in = state.getPortValue(IN);
     Value out;
     if (in.isFullyDefined()) {
-      out = Value.createKnown(in.getBitWidth(), -in.toIntValue());
+      out = Value.createKnown(in.getBitWidth(), -in.toLongValue());
     } else {
       Value[] bits = in.getAll();
       Value fill = Value.FALSE;

File: src/main/java/com/cburch/logisim/std/gates/PLA.java
Patch:
@@ -248,7 +248,7 @@ public void propagate(InstanceState state) {
     BitWidth outWidth = state.getAttributeValue(ATTR_OUT_WIDTH);
     PLATable tt = state.getAttributeValue(ATTR_TABLE);
     Value input = state.getPortValue(IN_PORT);
-    int val = tt.valueFor(input.toIntValue());
+    long val = tt.valueFor(input.toLongValue());
     state.setPort(1, Value.createKnown(outWidth, val), 1);
   }
 
@@ -292,7 +292,7 @@ void paintInstance(InstancePainter painter, boolean ghost) {
       if (painter.getShowState()) {
         PLATable tt = painter.getAttributeValue(ATTR_TABLE);
         Value input = painter.getPortValue(IN_PORT);
-        String comment = tt.commentFor(input.toIntValue());
+        String comment = tt.commentFor(input.toLongValue());
         int jj = comment.indexOf("#"); // don't display secondary comment
         if (jj >= 0) comment = comment.substring(0, jj).trim();
         GraphicsUtil.drawCenteredText(g, comment, x + w / 2, y + 2 * h / 3);

File: src/main/java/com/cburch/logisim/std/gates/PainterShaped.java
Patch:
@@ -123,7 +123,7 @@ static void paintInputLines(InstancePainter painter, AbstractGate factory) {
     GateAttributes attrs = (GateAttributes) painter.getAttributeSet();
     Direction facing = attrs.facing;
     int inputs = attrs.inputs;
-    int negated = attrs.negated;
+    long negated = attrs.negated;
 
     int[] lengths = getInputLineLengths(attrs, factory);
     if (painter.getInstance() == null) { // drawing ghost - negation bubbles

File: src/main/java/com/cburch/logisim/std/io/HexDigit.java
Patch:
@@ -180,15 +180,15 @@ public void propagate(InstanceState state) {
     Value baseVal = state.getPortValue(HEX);
     if (baseVal == null) baseVal = Value.createUnknown(BitWidth.create(4));
     Value dpVal = state.getPortValue(DP);
-    int segs = getSegs(baseVal.toIntValue());
+    int segs = getSegs((int)baseVal.toLongValue());
     if ((segs & SEG_C_MASK) != 0) summary |= 4; // vertical seg in bottom right
     if ((segs & SEG_B_MASK) != 0) summary |= 2; // vertical seg in top right
     if ((segs & SEG_D_MASK) != 0) summary |= 8; // horizontal seg at bottom
     if ((segs & SEG_G_MASK) != 0) summary |= 64; // horizontal seg at middle
     if ((segs & SEG_A_MASK) != 0) summary |= 1; // horizontal seg at top
     if ((segs & SEG_E_MASK) != 0) summary |= 16; // vertical seg at bottom left
     if ((segs & SEG_F_MASK) != 0) summary |= 32; // vertical seg at top left
-    if (dpVal != null && dpVal.toIntValue() == 1) summary |= 128; // decimal point
+    if (dpVal != null && (int)dpVal.toLongValue() == 1) summary |= 128; // decimal point
 
     Object value = Integer.valueOf(summary);
     InstanceDataSingleton data = (InstanceDataSingleton) state.getData();

File: src/main/java/com/cburch/logisim/std/io/Tty.java
Patch:
@@ -235,7 +235,7 @@ public void propagate(InstanceState circState) {
         } else {
           go = lastClock == Value.FALSE && clock == Value.TRUE;
         }
-        if (go) state.add(in.isFullyDefined() ? (char) in.toIntValue() : '?');
+        if (go) state.add(in.isFullyDefined() ? (char) in.toLongValue() : '?');
       }
     }
   }

File: src/main/java/com/cburch/logisim/std/io/Video.java
Patch:
@@ -188,7 +188,7 @@ Value val(CircuitState s, int pin) {
   }
 
   int addr(CircuitState s, int pin) {
-    return val(s, pin).toIntValue();
+    return (int)val(s, pin).toLongValue();
   }
 
   public void propagate(CircuitState circuitState) {

File: src/main/java/com/cburch/logisim/std/io/extra/Buzzer.java
Patch:
@@ -230,13 +230,13 @@ public void propagate(InstanceState state) {
     }
     d.is_on.set(active);
 
-    int freq = state.getPortValue(FREQ).toIntValue();
+    int freq = (int)state.getPortValue(FREQ).toLongValue();
     if (freq >= 0) {
       if (state.getAttributeValue(FREQUENCY_MEASURE) == dHz) freq /= 10;
       d.hz = freq;
     }
     if (state.getPortValue(VOL).isFullyDefined()) {
-      int vol = state.getPortValue(VOL).toIntValue();
+      int vol = (int)state.getPortValue(VOL).toLongValue();
       byte VolumeWidth = (byte) state.getAttributeValue(VOLUME_WIDTH).getWidth();
       d.vol = ((vol & 0xffffffffL) * 127) / (Math.pow(2, VolumeWidth) - 1);
     }

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -75,7 +75,7 @@ static class MemListener implements HexModelListener {
       this.instance = instance;
     }
 
-    public void bytesChanged(HexModel source, long start, long numBytes, int[] values) {
+    public void bytesChanged(HexModel source, long start, long numBytes, long[] values) {
       instance.fireInvalidated();
     }
 
@@ -160,7 +160,7 @@ protected Object getInstanceFeature(Instance instance, Object key) {
   }
 
   protected static String GetSizeLabel(int NrAddressBits) {
-    String[] Labels = {"", "k", "M", "G"};
+    String[] Labels = {"", "K", "M", "G", "T", "P", "E"};
     int pass = 0;
     int AddrBits = NrAddressBits;
     while (AddrBits > 9) {

File: src/main/java/com/cburch/logisim/std/memory/MemPoker.java
Patch:
@@ -94,8 +94,8 @@ public void paint(InstancePainter painter) {
   }
 
   private static class DataPoker extends MemPoker {
-    int initValue;
-    int curValue;
+    long initValue;
+    long curValue;
 
     private DataPoker(InstanceState state, MemState data, long addr) {
       data.setCursor(addr);

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -63,7 +63,7 @@ class MemState implements InstanceData, Cloneable, HexModelListener {
     contents.addHexModelListener(this);
   }
 
-  public void bytesChanged(HexModel source, long start, long numBytes, int[] oldValues) {}
+  public void bytesChanged(HexModel source, long start, long numBytes, long[] oldValues) {}
 
   private void CalculateDisplayParameters(
       Graphics g, int offsetX, int offsetY, int DisplayWidth, int DisplayHeight) {
@@ -77,6 +77,7 @@ private void CalculateDisplayParameters(
     DataSize = fm.stringWidth(StringUtil.toHexString(dataBits, 0) + " ");
     SpaceSize = fm.stringWidth(" ");
     NrDataSymbolsEachLine = (DisplayWidth - AddrBlockSize) / DataSize;
+    if (NrDataSymbolsEachLine == 0) NrDataSymbolsEachLine++;
     if (NrDataSymbolsEachLine > 3 && NrDataSymbolsEachLine % 2 != 0) NrDataSymbolsEachLine--;
     NrOfLines =
         DisplayHeight
@@ -258,7 +259,7 @@ public void paint(
           GraphicsUtil.V_CENTER);
       /* Draw data */
       for (int j = 0; j < NrDataSymbolsEachLine; j++) {
-        int value = contents.get(addr + j);
+        long value = contents.get(addr + j);
         if (isValidAddr(addr + j)) {
           
           if (highLight((addr + j), nrItemsToHighlight)) {

File: src/main/java/com/cburch/logisim/std/memory/RamAppearance.java
Patch:
@@ -885,7 +885,7 @@ private static void DrawAddress(Graphics2D g, int xpos, int ypos, int NrAddressB
     g.drawLine(xpos + 48, ypos + 20, xpos + 45, ypos + 23);
     g.drawLine(xpos + 45, ypos + 23, xpos + 45, ypos + 30);
     g.drawLine(xpos + 40, ypos + 35, xpos + 45, ypos + 30);
-    String size = Integer.toString((1 << NrAddressBits) - 1);
+    String size = Long.toString((1 << NrAddressBits) - 1);
     Font font = g.getFont();
     FontMetrics fm = g.getFontMetrics(font);
     int StrSize = fm.stringWidth(size);

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -93,7 +93,7 @@ public static void DrawRegisterEvolution(
       if (value.isFullyDefined()) g.setColor(Color.DARK_GRAY);
       else g.setColor(Color.YELLOW);
       String str = "";
-      if (value.isFullyDefined()) str = StringUtil.toHexString(nr_of_bits, value.toIntValue());
+      if (value.isFullyDefined()) str = StringUtil.toHexString(nr_of_bits, value.toLongValue());
       else {
         for (int i = 0; i < len; i++) str = str.concat("?");
       }
@@ -163,7 +163,7 @@ public void DrawRegisterClassic(InstancePainter painter) {
     String a;
     String b = null;
     if (painter.getShowState()) {
-      int val = state == null ? 0 : state.value.toIntValue();
+      long val = state == null ? 0 : state.value.toLongValue();
       String str = StringUtil.toHexString(width, val);
       if (str.length() <= 4) {
         a = str;

File: src/main/java/com/cburch/logisim/std/memory/RegisterShape.java
Patch:
@@ -122,7 +122,7 @@ public void paintDynamic(Graphics g, CircuitState state) {
       BitWidth widthVal = path.leaf().getAttributeSet().getValue(StdAttr.WIDTH);
       int width = (widthVal == null ? 8 : widthVal.getWidth());
       RegisterData data = (RegisterData) getData(state);
-      int val = data == null ? 0 : data.value.toIntValue();
+      long val = data == null ? 0 : data.value.toLongValue();
       label.setText(StringUtil.toHexString(width, val));
     }
     label.paint(g);

File: src/main/java/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -269,7 +269,7 @@ public void propagate(InstanceState state) {
     Value addrValue = state.getPortValue(RamAppearance.getAddrIndex(0, attrs));
     int nrDataLines = RamAppearance.getNrDataOutPorts(attrs);
 
-    int addr = addrValue.toIntValue();
+    long addr = addrValue.toLongValue();
     if (addrValue.isErrorValue() || (addrValue.isFullyDefined() && addr < 0)) {
       for (int i = 0 ; i < nrDataLines ; i++)
         state.setPort(RamAppearance.getDataOutIndex(i, attrs), Value.createError(dataBits), DELAY);
@@ -288,7 +288,7 @@ public void propagate(InstanceState state) {
     boolean misaligned = addr%nrDataLines != 0; 
     
     for (int i = 0 ; i < nrDataLines ; i++) {
-      int val = myState.getContents().get(addr+i);
+      long val = myState.getContents().get(addr+i);
       state.setPort(RamAppearance.getDataOutIndex(i, attrs), 
                     misaligned ? Value.createError(dataBits) : Value.createKnown(dataBits, val), DELAY);
     }

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegister.java
Patch:
@@ -57,7 +57,7 @@
 
 public class ShiftRegister extends InstanceFactory {
   static final Attribute<Integer> ATTR_LENGTH =
-      Attributes.forIntegerRange("length", S.getter("shiftRegLengthAttr"), 1, 32);
+      Attributes.forIntegerRange("length", S.getter("shiftRegLengthAttr"), 1, 64);
   static final Attribute<Boolean> ATTR_LOAD =
       Attributes.forBoolean("parallel", S.getter("shiftRegParallelAttr"));
 
@@ -92,7 +92,7 @@ public ShiftRegister() {
         });
     setKeyConfigurator(
         JoinedConfigurator.create(
-            new IntegerConfigurator(ATTR_LENGTH, 1, 32, 0),
+            new IntegerConfigurator(ATTR_LENGTH, 1, 64, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
 
     setIcon(new ShifterIcon());
@@ -341,7 +341,7 @@ private void DrawDataBlock(
       String Value;
       if (data_value.isFullyDefined()) {
         g.setColor(Color.DARK_GRAY);
-        Value = StringUtil.toHexString(nr_of_bits, data_value.toIntValue());
+        Value = StringUtil.toHexString(nr_of_bits, data_value.toLongValue());
       } else {
         g.setColor(Color.YELLOW);
         Value = (data_value.isUnknown()) ? "?" : "!";

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegisterPoker.java
Patch:
@@ -100,7 +100,7 @@ public void keyTyped(InstanceState state, KeyEvent e) {
         BitWidth widObj = state.getAttributeValue(StdAttr.WIDTH);
         ShiftRegisterData data = (ShiftRegisterData) state.getData();
         int i = data.getLength() - 1 - loc;
-        int value = data.get(i).toIntValue();
+        long value = data.get(i).toLongValue();
         value = ((value * 16) + val) & widObj.getMask();
         Value valObj = Value.createKnown(widObj, value);
         data.set(i, valObj);
@@ -119,9 +119,9 @@ public void keyPressed(InstanceState state, KeyEvent e) {
     if (dataWidth == null) dataWidth = BitWidth.create(8);
     ShiftRegisterData data = (ShiftRegisterData) state.getData();
     int i = data.getLength() - 1 - loc;
-    int curValue = data.get(i).toIntValue();
+    long curValue = data.get(i).toLongValue();
     if (e.getKeyCode() == KeyEvent.VK_UP) {
-      int maxVal = dataWidth.getMask();
+      long maxVal = dataWidth.getMask();
       if (curValue != maxVal) {
         curValue = curValue + 1;
         data.set(i, Value.createKnown(dataWidth, curValue));

File: src/main/java/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -135,7 +135,7 @@ public void propagate(InstanceState state) {
     if (!select.isFullyDefined()) {
       group = Value.createUnknown(groupBits);
     } else {
-      int shift = select.toIntValue() * groupBits.getWidth();
+      int shift = (int)select.toLongValue() * groupBits.getWidth();
       if (shift >= data.getWidth()) {
         group = Value.createKnown(groupBits, 0);
       } else if (groupBits.getWidth() == 1) {

File: src/main/java/com/cburch/logisim/std/plexers/Decoder.java
Patch:
@@ -291,7 +291,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = sel.toIntValue();
+        outIndex = (int)sel.toLongValue();
         out = Value.TRUE;
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Demultiplexer.java
Patch:
@@ -290,7 +290,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(outputs);
       if (sel.isFullyDefined()) {
-        outIndex = sel.toIntValue();
+        outIndex = (int)sel.toLongValue();
         out = state.getPortValue(outputs + (enable ? 2 : 1));
       } else if (sel.isErrorValue()) {
         others = Value.createError(data);

File: src/main/java/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -297,7 +297,7 @@ public void propagate(InstanceState state) {
     } else {
       Value sel = state.getPortValue(inputs);
       if (sel.isFullyDefined()) {
-        out = state.getPortValue(sel.toIntValue());
+        out = state.getPortValue((int)sel.toLongValue());
       } else if (sel.isErrorValue()) {
         out = Value.createError(data);
       } else {

File: src/main/java/com/cburch/logisim/std/ttl/DisplayDecoder.java
Patch:
@@ -255,7 +255,7 @@ public static byte getdecval(
           powval |= 1 << i;
       decval += (byte) (powval + 1);
     } else if (multibit && state.getPortValue(MultibitInputIndex) != Value.UNKNOWN)
-      decval = (byte) state.getPortValue(MultibitInputIndex).toIntValue();
+      decval = (byte) state.getPortValue(MultibitInputIndex).toLongValue();
     return decval;
   }
 

File: src/main/java/com/cburch/logisim/std/wiring/Power.java
Patch:
@@ -51,8 +51,8 @@
 public class Power extends InstanceFactory {
   private class PowerHDLGeneratorFactory extends AbstractConstantHDLGeneratorFactory {
     @Override
-    public int GetConstant(AttributeSet attrs) {
-      int ConstantValue = 0;
+    public long GetConstant(AttributeSet attrs) {
+      long ConstantValue = 0;
       for (int bit = 0; bit < attrs.getValue(StdAttr.WIDTH).getWidth(); bit++) {
         ConstantValue <<= 1;
         ConstantValue |= 1;

File: src/main/java/com/cburch/logisim/tools/key/BitWidthConfigurator.java
Patch:
@@ -47,7 +47,7 @@ public BitWidthConfigurator(Attribute<BitWidth> attr, int min, int max, int modi
   }
 
   @Override
-  protected BitWidth createValue(int val) {
-    return BitWidth.create(val);
+  protected BitWidth createValue(long val) {
+    return BitWidth.create((int) val);
   }
 }

File: src/main/java/com/cburch/logisim/tools/key/IntegerConfigurator.java
Patch:
@@ -41,7 +41,7 @@ public IntegerConfigurator(
   }
 
   @Override
-  protected Integer createValue(int val) {
-    return Integer.valueOf(val);
+  protected Integer createValue(long val) {
+    return Integer.valueOf((int) val);
   }
 }

File: src/main/java/com/cburch/logisim/util/StringUtil.java
Patch:
@@ -78,9 +78,9 @@ private static String resizeString(StringBuilder value, FontMetrics metrics, int
     return resizeString(value.delete(value.length() - 3, value.length() - 2), metrics, maxWidth);
   }
 
-  public static String toHexString(int bits, int value) {
-    if (bits < 32) value &= (1 << bits) - 1;
-    String ret = Integer.toHexString(value);
+  public static String toHexString(int bits, long value) {
+    if (bits < 64) value &= (1L << bits) - 1;
+    String ret = Long.toHexString(value);
     int len = (bits + 3) / 4;
     while (ret.length() < len) ret = "0" + ret;
     if (ret.length() > len) ret = ret.substring(ret.length() - len);

File: src/main/java/com/cburch/logisim/gui/hex/HexFile.java
Patch:
@@ -487,13 +487,13 @@ private void configure(String msg, HexReader reader) {
       warnings = new JTextArea();
       warnings.setEditable(false);
       p.add(new JScrollPane(warnings) {
-    public Dimension getMinimumSize() {
+      public Dimension getMinimumSize() {
       Dimension d = super.getMaximumSize();
       d.height = scaled(60);
       return d;
     }
-private static final long serialVersionUID = 1L;
-public Dimension getPreferredSize() {
+    private static final long serialVersionUID = 1L;
+    public Dimension getPreferredSize() {
           Dimension d = super.getPreferredSize();
           d.height = scaled(80);
           return d;        

File: src/main/java/com/cburch/logisim/std/memory/MemContents.java
Patch:
@@ -402,6 +402,7 @@ public void copyFrom(long start, MemContents src, long offs, int count) {
         sp++;
       }
     } while (count > 0); // (dp <= dstPageEnd || di <= dstEndOffs)
+    fireBytesChanged(0,1<<addrBits,null); /* update my listeners */
   }
 
   public void setDimensions(int addrBits, int width) {

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -95,6 +95,8 @@ public static void main(String[] args) throws Exception {
   public static final int COPYRIGHT_YEAR = 2019;
 
   public static boolean ANALYZE = true;
+  /* TODO ktt1 : for the moment dummy for the hex-reader, have to look into details */
+  public static boolean headless = false;
 
   /** URL for the automatic updater */
   public static final String UPDATE_URL =

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -179,7 +179,7 @@ protected static String GetSizeLabel(int NrAddressBits) {
 
   public void loadImage(InstanceState instanceState, File imageFile) throws IOException {
     MemState s = this.getState(instanceState);
-    HexFile.open(s.getContents(), imageFile);
+    HexFile.open((MemContents)s.getContents(), imageFile);
     this.setCurrentImage(instanceState.getInstance(), imageFile);
   }
 

File: src/main/java/com/cburch/logisim/std/memory/MemPoker.java
Patch:
@@ -168,7 +168,7 @@ private void moveTo(MemState data, long addr) {
     @Override
     public void paint(InstancePainter painter) {
       Bounds bds = getBounds(painter);
-      if (bds == null) return;
+      if (bds == null || bds == Bounds.EMPTY_BOUNDS) return;
       Graphics g = painter.getGraphics();
       g.setColor(Color.RED);
       g.drawRect(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight());

File: src/main/java/com/cburch/logisim/std/memory/MemState.java
Patch:
@@ -162,7 +162,7 @@ public Bounds getDataBounds(long addr, Bounds bds) {
       }
       curAddr += NrDataSymbolsEachLine;
     }
-    return getDataBound(bds.getX(),bds.getY(),0,0);
+    return Bounds.EMPTY_BOUNDS;
   }
 
   public MemContents getContents() {
@@ -337,9 +337,9 @@ void scrollToShow(long addr) {
   private void setBits(int addrBits, int dataBits) {
     RecalculateParameters = true;
     if (contents == null) {
-      contents = MemContents.create(addrBits, dataBits, false);
+      contents = MemContents.create(addrBits, dataBits);
     } else {
-      contents.setDimensions(addrBits, dataBits, false);
+      contents.setDimensions(addrBits, dataBits);
     }
     cursorLoc = -1;
     curAddr = -1;

File: src/main/java/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -458,7 +458,7 @@ public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
     Object busVal = attrs.getValue(RamAttributes.ATTR_DBUS);
     boolean separate = busVal == null ? false : busVal.equals(RamAttributes.BUS_SEP);
     Object trigger = attrs.getValue(StdAttr.TRIGGER);
-    boolean asynch = trigger.equals(StdAttr.TRIG_HIGH) || trigger.equals(StdAttr.TRIG_LOW);
+    boolean asynch = trigger == null || trigger.equals(StdAttr.TRIG_HIGH) || trigger.equals(StdAttr.TRIG_LOW);
     boolean byteEnabled = RamAppearance.getNrLEPorts(attrs)==0;
     boolean syncRead = !attrs.containsAttribute(Mem.ASYNC_READ) || !attrs.getValue(Mem.ASYNC_READ);
     boolean clearPin = attrs.getValue(RamAttributes.CLEAR_PIN);

File: src/main/java/com/cburch/logisim/std/memory/RamState.java
Patch:
@@ -62,7 +62,7 @@ public void attributeValueChanged(AttributeEvent e) {
     AttributeSet attrs = e.getSource();
     BitWidth addrBits = attrs.getValue(Mem.ADDR_ATTR);
     BitWidth dataBits = attrs.getValue(Mem.DATA_ATTR);
-    getContents().setDimensions(addrBits.getWidth(), dataBits.getWidth(), false);
+    getContents().setDimensions(addrBits.getWidth(), dataBits.getWidth());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/util/JFileChoosers.java
Patch:
@@ -114,6 +114,8 @@ public static JFileChooser createAt(File openDirectory) {
   public static JFileChooser createSelected(File selected) {
     if (selected == null) {
       return create();
+    } else if (selected.isDirectory()) {
+      return createAt(selected);
     } else {
       JFileChooser ret = createAt(selected.getParentFile());
       ret.setSelectedFile(selected);

File: src/main/java/com/cburch/logisim/std/memory/RamAppearance.java
Patch:
@@ -806,6 +806,7 @@ private static void DrawDataBlocks(Instance inst, AttributeSet attrs, InstancePa
       cidx++;
     }
     boolean appendBE = getNrBEPorts(attrs) > 0;
+    String DLabel = seperate ? "" : "D";
     for (int i = 0 ; i < nrOfBits ; i++) {
       g.setStroke(new BasicStroke(2));
       g.drawRect(x, y, width, height);
@@ -835,7 +836,7 @@ private static void DrawDataBlocks(Instance inst, AttributeSet attrs, InstancePa
       if (drawDin)
         GraphicsUtil.drawText(
               g,
-              dinLabel.toString()+BEIndex,
+              dinLabel.toString()+BEIndex+DLabel,
               x + (seperate ? 3 :  Mem.SymbolWidth-3),
               y + (seperate ? 10 : 13),
               seperate ? GraphicsUtil.H_LEFT : GraphicsUtil.H_RIGHT,

File: src/main/java/com/cburch/logisim/file/XmlWriter.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeDefaultProvider;
 import com.cburch.logisim.data.AttributeSet;
+import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.Tool;
 import com.cburch.logisim.util.InputEventUtil;
@@ -232,7 +233,7 @@ void addAttributeSetContent(Element elt, AttributeSet attrs, AttributeDefaultPro
       Object val = attrs.getValue(attr);
       if (attrs.isToSave(attr) && val != null) {
         Object dflt = source == null ? null : source.getDefaultAttributeValue(attr, ver);
-        if (dflt == null || !dflt.equals(val)) {
+        if (dflt == null || !dflt.equals(val) || attr.equals(StdAttr.APPEARANCE)) {
           Element a = doc.createElement("a");
           a.setAttribute("name", attr.getName());
           String value = attr.toStandardString(val);

File: src/main/java/com/cburch/logisim/std/wiring/Pin.java
Patch:
@@ -61,6 +61,7 @@
 import com.cburch.logisim.tools.key.JoinedConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.LocaleListener;
+
 import java.awt.Color;
 import java.awt.Font;
 import java.awt.Graphics;
@@ -556,7 +557,7 @@ private static Value pull2(Value mod, BitWidth expectedWidth, Value pullTo) {
       return Value.createKnown(expectedWidth, 0);
     }
   }
-
+  
   public static final Attribute<Boolean> ATTR_TRISTATE =
       Attributes.forBoolean("tristate", S.getter("pinThreeStateAttr"));
   public static final Attribute<Boolean> ATTR_TYPE =

File: src/main/java/com/cburch/logisim/std/memory/Mem.java
Patch:
@@ -232,8 +232,7 @@ public void DrawMemClassic(InstancePainter painter) {
           15,
           15,
           bds.getWidth() - 30,
-          bds.getHeight() - 20,
-          true);
+          bds.getHeight() - 20);
     } else {
       BitWidth addr = painter.getAttributeValue(ADDR_ATTR);
       int addrBits = addr.getWidth();

File: src/main/java/com/cburch/logisim/std/memory/MemPoker.java
Patch:
@@ -115,7 +115,7 @@ private DataPoker(InstanceState state, MemState data, long addr) {
     public Bounds getBounds(InstancePainter painter) {
       MemState data = (MemState) painter.getData();
       Bounds inBounds = painter.getInstance().getBounds();
-      return data.getBounds(data.getCursor(), inBounds);
+      return data.getDataBounds(data.getCursor(), inBounds);
     }
 
     @Override

File: src/main/java/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -390,8 +390,7 @@ public void paintInstance(InstancePainter painter) {
             25,
             getControlHeight(painter.getAttributeSet()) + 5,
             Mem.SymbolWidth - 20,
-            20 * NrOfBits - 10,
-            false);
+            20 * NrOfBits - 10);
       }
     }
   }

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -55,6 +55,8 @@ public void addCompanion(VariableList var) {
 	  others.add(var);
   }
   
+  public ArrayList<String> getNames() { return names; }
+  
   public boolean containsDuplicate(VariableList data, Var oldVar, String name) {
 	  boolean found = false;
       for (int i = 0, n = vars.size(); i < n && !found; i++) {

File: src/main/java/com/cburch/logisim/analyze/model/VariableList.java
Patch:
@@ -55,6 +55,8 @@ public void addCompanion(VariableList var) {
 	  others.add(var);
   }
   
+  public ArrayList<String> getNames() { return names; }
+  
   public boolean containsDuplicate(VariableList data, Var oldVar, String name) {
 	  boolean found = false;
       for (int i = 0, n = vars.size(); i < n && !found; i++) {

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -164,7 +164,7 @@ public void mouseClicked(MouseEvent e) {}
     @Override
     public void mouseDragged(MouseEvent e) {
       if (drag_tool != null) {
-       drag_tool.mouseDragged(Canvas.this, getGraphics(), e);
+        drag_tool.mouseDragged(Canvas.this, getGraphics(), e);
         ZoomModel zoomModel = proj.getFrame().getZoomModel();
         double ZoomFactor = zoomModel.getZoomFactor();
         Rectangle r = new Rectangle((int) (e.getX()*ZoomFactor), (int) (e.getY()*ZoomFactor), 1, 1);
@@ -205,7 +205,6 @@ public void mouseMoved(MouseEvent e) {
         // but it exists there in the 1.4 and 5.0 versions.
         mouseDragged(e);
         return;
-
       }
 
       Tool tool = getToolFor(e);

File: src/main/java/com/cburch/logisim/soc/util/AbstractAssembler.java
Patch:
@@ -335,7 +335,7 @@ public String getProgram(CircuitState circuitState, SocProcessorInterface proces
               int index = 0;
               try { index = Integer.parseUnsignedInt(label.substring(14)); }
               catch (NumberFormatException e) {};
-              if (index > offset) offset = index+1;
+              if (index >= offset) offset = index+1;
             }
           }
 

File: src/main/java/com/cburch/logisim/gui/main/Canvas.java
Patch:
@@ -164,7 +164,7 @@ public void mouseClicked(MouseEvent e) {}
     @Override
     public void mouseDragged(MouseEvent e) {
       if (drag_tool != null) {
-       drag_tool.mouseDragged(Canvas.this, getGraphics(), e);
+        drag_tool.mouseDragged(Canvas.this, getGraphics(), e);
         ZoomModel zoomModel = proj.getFrame().getZoomModel();
         double ZoomFactor = zoomModel.getZoomFactor();
         Rectangle r = new Rectangle((int) (e.getX()*ZoomFactor), (int) (e.getY()*ZoomFactor), 1, 1);
@@ -205,7 +205,6 @@ public void mouseMoved(MouseEvent e) {
         // but it exists there in the 1.4 and 5.0 versions.
         mouseDragged(e);
         return;
-
       }
 
       Tool tool = getToolFor(e);

File: src/main/java/com/cburch/logisim/soc/util/AbstractAssembler.java
Patch:
@@ -335,7 +335,7 @@ public String getProgram(CircuitState circuitState, SocProcessorInterface proces
               int index = 0;
               try { index = Integer.parseUnsignedInt(label.substring(14)); }
               catch (NumberFormatException e) {};
-              if (index > offset) offset = index+1;
+              if (index >= offset) offset = index+1;
             }
           }
 

File: src/main/java/com/cburch/logisim/gui/icons/InfoIcon.java
Patch:
@@ -28,7 +28,6 @@
 
 package com.cburch.logisim.gui.icons;
 
-import java.awt.BasicStroke;
 import java.awt.Color;
 import java.awt.Component;
 import java.awt.Font;

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2.java
Patch:
@@ -153,9 +153,9 @@ protected void configureNewInstance(Instance instance) {
             StdAttr.LABEL,
             StdAttr.LABEL_FONT,
             bds.getX() + bds.getWidth() / 2,
-            bds.getY() - 3,
+            bds.getY() + bds.getHeight() + 3,
             GraphicsUtil.H_CENTER,
-            GraphicsUtil.V_BASELINE);
+            GraphicsUtil.V_TOP);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -266,8 +266,8 @@ public static ArrayList<String> getTickFrequencyStrings() {
   }
 
   public static final Double[] SupportedTickFrequencies = {
-    1024000.0, 512000.0, 256000.0, 128000.0, 64000.0,
-    32000.0, 1600.0, 8000.0, 4000.0, 2000.0, 1000.0,
+    2048000.0 ,1024000.0, 512000.0, 256000.0, 128000.0, 64000.0,
+    32000.0, 16000.0, 8000.0, 4000.0, 2000.0, 1000.0,
     512.0, 256.0, 128.0, 64.0, 32.0, 16.0, 8.0, 4.0, 2.0, 1.0, 0.5, 0.25
   };
   private LogisimMenuBar menubar;

File: src/main/java/com/cburch/logisim/gui/menu/MenuSimulate.java
Patch:
@@ -266,8 +266,8 @@ public static ArrayList<String> getTickFrequencyStrings() {
   }
 
   public static final Double[] SupportedTickFrequencies = {
-    1024000.0, 512000.0, 256000.0, 128000.0, 64000.0,
-    32000.0, 1600.0, 8000.0, 4000.0, 2000.0, 1000.0,
+    2048000.0 ,1024000.0, 512000.0, 256000.0, 128000.0, 64000.0,
+    32000.0, 16000.0, 8000.0, 4000.0, 2000.0, 1000.0,
     512.0, 256.0, 128.0, 64.0, 32.0, 16.0, 8.0, 4.0, 2.0, 1.0, 0.5, 0.25
   };
   private LogisimMenuBar menubar;

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2OtherControlInstructions.java
Patch:
@@ -131,7 +131,8 @@ public String getAsmInstruction() {
       case INSTR_INITD   :
       case INSTR_INITDA  :
       case INSTR_FLUSHDA :
-      case INSTR_FLUSHD  : s.append(immediate+"("+Nios2State.registerABINames[sourceA]+")");
+      case INSTR_FLUSHD  : int imm = ((immediate<<16)>>16);
+    	                   s.append(imm+"("+Nios2State.registerABINames[sourceA]+")");
                            break;
       case INSTR_INITI   :
       case INSTR_FLUSHI  : s.append(Nios2State.registerABINames[sourceA]);

File: src/main/java/com/cburch/logisim/soc/nios2/Nios2OtherControlInstructions.java
Patch:
@@ -131,7 +131,8 @@ public String getAsmInstruction() {
       case INSTR_INITD   :
       case INSTR_INITDA  :
       case INSTR_FLUSHDA :
-      case INSTR_FLUSHD  : s.append(immediate+"("+Nios2State.registerABINames[sourceA]+")");
+      case INSTR_FLUSHD  : int imm = ((immediate<<16)>>16);
+    	                   s.append(imm+"("+Nios2State.registerABINames[sourceA]+")");
                            break;
       case INSTR_INITI   :
       case INSTR_FLUSHI  : s.append(Nios2State.registerABINames[sourceA]);

File: src/main/java/com/cburch/logisim/soc/util/AssemblerExecutionInterface.java
Patch:
@@ -36,10 +36,11 @@ public interface AssemblerExecutionInterface {
   public boolean execute(Object processorState, CircuitState circuitState);
   public String getAsmInstruction();
   public int getBinInstruction();
-  public boolean setAsmInstruction(String instr);
+  public boolean setAsmInstruction(AssemblerAsmInstruction instruction);
   public boolean setBinInstruction(int instr);
   public boolean performedJump();
   public boolean isValid();
   public String getErrorMessage();
   public ArrayList<String> getInstructions();
+  public int getInstructionSizeInBytes(String instruction);
 }

File: src/main/java/com/cburch/logisim/soc/util/AssemblerInterface.java
Patch:
@@ -32,6 +32,9 @@
 
 public interface AssemblerInterface {
   public void decode(int instruction);
+  public boolean assemble(AssemblerAsmInstruction instruction);
   public AssemblerExecutionInterface getExeUnit();
   public ArrayList<String> getOpcodes();
+  public int getInstructionSize(String opcode);
+  public boolean usesRoundedBrackets();
 }

File: src/main/java/com/cburch/logisim/std/gates/AbstractGate.java
Patch:
@@ -273,6 +273,7 @@ Location getInputOffset(GateAttributes attrs, int index) {
     } else {
       dy = skipStart * inputs + skipDist * index;
       if (index >= inputs / 2) dy += skipLowerEven;
+      if (inputs == 4 && size >= 60) dy -= 10;
     }
 
     int dx = axisLength;

File: src/main/java/com/cburch/logisim/gui/icons/WarningIcon.java
Patch:
@@ -44,11 +44,11 @@ public class WarningIcon implements Icon {
   private int wh;
   
   public WarningIcon() {
-  wh = AppPreferences.getIconSize();
+    wh = AppPreferences.getIconSize();
   }
 
   public WarningIcon(double scale) {
-  wh = (int)AppPreferences.getScaled(scale*AppPreferences.getIconSize());
+    wh = (int)AppPreferences.getScaled(scale*AppPreferences.getIconSize());
   }
 
   @Override

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -93,6 +93,7 @@
 import javax.swing.JTabbedPane;
 import javax.swing.JTextArea;
 import javax.swing.JTextField;
+import javax.swing.JToolTip;
 import javax.swing.ProgressMonitor;
 import javax.swing.UIDefaults;
 import javax.swing.UIManager;
@@ -1026,6 +1027,7 @@ public void eventDispatched(AWTEvent event) {
         if ((container instanceof JButton)
             || (container instanceof JCheckBox)
             || (container instanceof JComboBox)
+            || (container instanceof JToolTip)
             || (container instanceof JLabel)
             || (container instanceof JMenu)
             || (container instanceof JMenuItem)

File: src/main/java/com/cburch/logisim/soc/memory/SocMemoryState.java
Patch:
@@ -281,7 +281,7 @@ public void handleTransaction(SocBusTransaction trans) {
 	if (trans.isWriteTransaction()) {
 	  performWriteAction(trans.getAddress(),trans.getWriteData(),trans.getAccessType());
 	}
-	trans.setTransactionResponder(getName());
+	trans.setTransactionResponder(attachedBus.getComponent());
   }
   
   private SocMemoryInfo getRegPropagateState() {

File: src/main/java/com/cburch/logisim/soc/pio/PioState.java
Patch:
@@ -372,7 +372,7 @@ public boolean canHandleTransaction(SocBusTransaction trans) {
   public void handleTransaction(SocBusTransaction trans) {
     if (!canHandleTransaction(trans))
       return;
-    trans.setTransactionResponder(getName());
+    trans.setTransactionResponder(attachedBus.getComponent());
     long addr = SocSupport.convUnsignedInt(trans.getAddress());
     long start = SocSupport.convUnsignedInt(startAddress);
     int index = (int)(addr-start);

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imExecutionUnitInterface.java
Patch:
@@ -28,6 +28,8 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import java.util.ArrayList;
+
 import com.cburch.logisim.circuit.CircuitState;
 
 public interface RV32imExecutionUnitInterface {
@@ -39,4 +41,5 @@ public interface RV32imExecutionUnitInterface {
   public boolean performedJump();
   public boolean isValid();
   public String getErrorMessage();
+  public ArrayList<String> getInstructions();
 }

File: src/main/java/com/cburch/logisim/soc/vga/VgaState.java
Patch:
@@ -132,7 +132,7 @@ private void loadImage(CircuitState cState) {
           for (int pixel = 0 ; pixel < lineSize ; pixel++) {
             int index = line*lineSize+pixel;
           SocBusTransaction trans = new SocBusTransaction(SocBusTransaction.READTransaction,
-        vgaBufferAddress+index*4,0,SocBusTransaction.WordAccess,getName());
+        vgaBufferAddress+index*4,0,SocBusTransaction.WordAccess,"vgadma");
         trans.setAsHiddenTransaction();
         initializeTransaction(trans,attachedBus.getBusId(),cState);
         int data = trans.hasError() ? 0 : trans.getReadData();
@@ -341,7 +341,7 @@ public boolean canHandleTransaction(SocBusTransaction trans) {
   public void handleTransaction(SocBusTransaction trans) {
     if (!canHandleTransaction(trans))
       return;
-    trans.setTransactionResponder(getName());
+    trans.setTransactionResponder(attachedBus.getComponent());
     if (trans.getAccessType() != SocBusTransaction.WordAccess) {
       trans.setError(SocBusTransaction.AccessTypeNotSupportedError);
       return;

File: src/main/java/com/cburch/logisim/circuit/CircuitState.java
Patch:
@@ -430,7 +430,9 @@ void reset() {
       if (!(comp.getFactory() instanceof SubcircuitFactory)) {
         if (componentData.get(comp) instanceof ComponentDataGuiProvider)
           ((ComponentDataGuiProvider)componentData.get(comp)).destroy();
-        it.remove();
+    /*  it.remove(); ktt1: clear out the state instead of removing the key to prevent concurrent
+        modification error */
+        componentData.put(comp, null); 
       }
     }
     values.clear();

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imExecutionUnitInterface.java
Patch:
@@ -28,6 +28,8 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import java.util.ArrayList;
+
 import com.cburch.logisim.circuit.CircuitState;
 
 public interface RV32imExecutionUnitInterface {
@@ -39,4 +41,5 @@ public interface RV32imExecutionUnitInterface {
   public boolean performedJump();
   public boolean isValid();
   public String getErrorMessage();
+  public ArrayList<String> getInstructions();
 }

File: src/main/java/com/cburch/logisim/circuit/ComponentDataGuiProvider.java
Patch:
@@ -29,5 +29,5 @@
 package com.cburch.logisim.circuit;
 
 public interface ComponentDataGuiProvider {
-   public void dispose();
+   public void destroy();
 }

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -93,6 +93,7 @@
 import javax.swing.JTabbedPane;
 import javax.swing.JTextArea;
 import javax.swing.JTextField;
+import javax.swing.JToolTip;
 import javax.swing.ProgressMonitor;
 import javax.swing.UIDefaults;
 import javax.swing.UIManager;
@@ -1026,6 +1027,7 @@ public void eventDispatched(AWTEvent event) {
         if ((container instanceof JButton)
             || (container instanceof JCheckBox)
             || (container instanceof JComboBox)
+            || (container instanceof JToolTip)
             || (container instanceof JLabel)
             || (container instanceof JMenu)
             || (container instanceof JMenuItem)

File: src/main/java/com/cburch/logisim/soc/memory/SocMemoryState.java
Patch:
@@ -281,7 +281,7 @@ public void handleTransaction(SocBusTransaction trans) {
 	if (trans.isWriteTransaction()) {
 	  performWriteAction(trans.getAddress(),trans.getWriteData(),trans.getAccessType());
 	}
-	trans.setTransactionResponder(getName());
+	trans.setTransactionResponder(attachedBus.getComponent());
   }
   
   private SocMemoryInfo getRegPropagateState() {

File: src/main/java/com/cburch/logisim/soc/pio/PioState.java
Patch:
@@ -372,7 +372,7 @@ public boolean canHandleTransaction(SocBusTransaction trans) {
   public void handleTransaction(SocBusTransaction trans) {
     if (!canHandleTransaction(trans))
       return;
-    trans.setTransactionResponder(getName());
+    trans.setTransactionResponder(attachedBus.getComponent());
     long addr = SocSupport.convUnsignedInt(trans.getAddress());
     long start = SocSupport.convUnsignedInt(startAddress);
     int index = (int)(addr-start);

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imLoadAndStoreInstructions.java
Patch:
@@ -84,7 +84,7 @@ public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
       case INSTR_SW : if (transType < 0) transType = SocBusTransaction.WordAccess;
                       SocBusTransaction trans = new SocBusTransaction(SocBusTransaction.WRITETransaction,
                           ElfHeader.getIntValue((Long)address),toBeStored,transType,
-                          state.getMasterName());
+                          state.getMasterComponent());
                       state.insertTransaction(trans, false, cState);
                       return !transactionHasError(trans);
       case INSTR_LB :
@@ -93,7 +93,7 @@ public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
       case INSTR_LHU: if (transType < 0 ) transType = SocBusTransaction.HalfWordAccess;
       case INSTR_LW : if (transType < 0) transType = SocBusTransaction.WordAccess;
                       trans = new SocBusTransaction(SocBusTransaction.READTransaction,
-                          ElfHeader.getIntValue((Long)address),0,transType,state.getMasterName());
+                          ElfHeader.getIntValue((Long)address),0,transType,state.getMasterComponent());
                       state.insertTransaction(trans, false, cState);
                       if (transactionHasError(trans)) return false;
                       int toBeLoaded = trans.getReadData();

File: src/main/java/com/cburch/logisim/soc/vga/VgaState.java
Patch:
@@ -132,7 +132,7 @@ private void loadImage(CircuitState cState) {
           for (int pixel = 0 ; pixel < lineSize ; pixel++) {
             int index = line*lineSize+pixel;
           SocBusTransaction trans = new SocBusTransaction(SocBusTransaction.READTransaction,
-        vgaBufferAddress+index*4,0,SocBusTransaction.WordAccess,getName());
+        vgaBufferAddress+index*4,0,SocBusTransaction.WordAccess,"vgadma");
         trans.setAsHiddenTransaction();
         initializeTransaction(trans,attachedBus.getBusId(),cState);
         int data = trans.hasError() ? 0 : trans.getReadData();
@@ -341,7 +341,7 @@ public boolean canHandleTransaction(SocBusTransaction trans) {
   public void handleTransaction(SocBusTransaction trans) {
     if (!canHandleTransaction(trans))
       return;
-    trans.setTransactionResponder(getName());
+    trans.setTransactionResponder(attachedBus.getComponent());
     if (trans.getAccessType() != SocBusTransaction.WordAccess) {
       trans.setError(SocBusTransaction.AccessTypeNotSupportedError);
       return;

File: src/main/java/com/cburch/logisim/soc/data/SocBusMasterInterface.java
Patch:
@@ -28,6 +28,8 @@
 
 package com.cburch.logisim.soc.data;
 
+import com.cburch.logisim.circuit.CircuitState;
+
 public interface SocBusMasterInterface {
-   public SocBusTransaction initializeTransaction(SocBusTransaction trans, String busId);
+   public void initializeTransaction(SocBusTransaction trans, String busId, CircuitState cstate);
 }

File: src/main/java/com/cburch/logisim/soc/data/SocBusSlaveInterface.java
Patch:
@@ -34,7 +34,7 @@ public interface SocBusSlaveInterface {
 
   public boolean canHandleTransaction(SocBusTransaction trans);
   
-  public SocBusTransaction handleTransaction(SocBusTransaction trans);
+  public void handleTransaction(SocBusTransaction trans);
   
   public Integer getStartAddress();
   public Integer getMemorySize();

File: src/main/java/com/cburch/logisim/soc/data/SocProcessorInterface.java
Patch:
@@ -28,8 +28,10 @@
 
 package com.cburch.logisim.soc.data;
 
+import com.cburch.logisim.circuit.CircuitState;
+
 public interface SocProcessorInterface {
 
   public void setEntryPointandReset(long entryPoint);
-  public SocBusTransaction insertTransaction(SocBusTransaction trans, boolean hidden);
+  public void insertTransaction(SocBusTransaction trans, boolean hidden, CircuitState cState);
 }

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imControlTransferInstructions.java
Patch:
@@ -28,6 +28,7 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.soc.file.ElfHeader;
 
 public class RV32imControlTransferInstructions implements RV32imExecutionUnitInterface {
@@ -71,7 +72,7 @@ public class RV32imControlTransferInstructions implements RV32imExecutionUnitInt
   private int source1;
   private int source2;
 
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid)
       return false;
     jumped = false;

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imEnvironmentCallAndBreakpoints.java
Patch:
@@ -32,6 +32,8 @@
 
 import javax.swing.JOptionPane;
 
+import com.cburch.logisim.circuit.CircuitState;
+
 public class RV32imEnvironmentCallAndBreakpoints implements RV32imExecutionUnitInterface {
 
   private final static int SYSTEM = 0x73;
@@ -45,7 +47,7 @@ public class RV32imEnvironmentCallAndBreakpoints implements RV32imExecutionUnitI
   private int operation;
   private boolean valid;
   
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid)
       return false;
     JOptionPane.showMessageDialog(null, S.get("Rv32imECABNotImplmented"));

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imExecutionUnitInterface.java
Patch:
@@ -28,8 +28,10 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import com.cburch.logisim.circuit.CircuitState;
+
 public interface RV32imExecutionUnitInterface {
-  public boolean execute(RV32im_state state);
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cstate);
   public String getAsmInstruction();
   public int getBinInstruction();
   public boolean setAsmInstruction(String instr);

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imIntegerRegisterImmediateInstructions.java
Patch:
@@ -28,6 +28,7 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.soc.file.ElfHeader;
 
 public class RV32imIntegerRegisterImmediateInstructions implements RV32imExecutionUnitInterface {
@@ -74,7 +75,7 @@ public class RV32imIntegerRegisterImmediateInstructions implements RV32imExecuti
   private int operation;
   private boolean valid = false;
   
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid)
       return false;
     int result = 0;

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32imIntegerRegisterRegisterOperations.java
Patch:
@@ -28,6 +28,7 @@
 
 package com.cburch.logisim.soc.rv32im;
 
+import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.soc.file.ElfHeader;
 
 public class RV32imIntegerRegisterRegisterOperations implements RV32imExecutionUnitInterface {
@@ -60,7 +61,7 @@ public class RV32imIntegerRegisterRegisterOperations implements RV32imExecutionU
   private int operation;
   private boolean valid = false;
 	  
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid)
       return false;
     int opp1 = state.getRegisterValue(source1);

File: src/main/java/com/cburch/logisim/soc/rv32im/RV32im_M_ExtensionInstructions.java
Patch:
@@ -30,6 +30,7 @@
 
 import java.math.BigInteger;
 
+import com.cburch.logisim.circuit.CircuitState;
 import com.cburch.logisim.soc.file.ElfHeader;
 
 public class RV32im_M_ExtensionInstructions implements RV32imExecutionUnitInterface {
@@ -54,7 +55,7 @@ public class RV32im_M_ExtensionInstructions implements RV32imExecutionUnitInterf
   private int source1;
   private int source2;
   
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid) return false;
     int val1 = state.getRegisterValue(source1);
     int val2 = state.getRegisterValue(source2);

File: src/main/java/com/cburch/logisim/soc/rv32im/Rv32imMemoryOrderingInstructions.java
Patch:
@@ -32,6 +32,8 @@
 
 import javax.swing.JOptionPane;
 
+import com.cburch.logisim.circuit.CircuitState;
+
 public class Rv32imMemoryOrderingInstructions implements RV32imExecutionUnitInterface {
   
   private static final int FENCE = 0xF;
@@ -53,7 +55,7 @@ public class Rv32imMemoryOrderingInstructions implements RV32imExecutionUnitInte
   private int fm;
   private int operation;
   
-  public boolean execute(RV32im_state state) {
+  public boolean execute(RV32im_state.ProcessorState state, CircuitState cState) {
     if (!valid)
       return false;
     JOptionPane.showMessageDialog(null, S.get("Rv32imMOINotImplmented"));

File: src/main/java/com/cburch/logisim/circuit/Simulator.java
Patch:
@@ -32,8 +32,6 @@
 import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.util.UniquelyNamedThread;
 import java.util.ArrayList;
-import java.util.logging.Level;
-import java.util.logging.Logger;
 
 public class Simulator {
 

File: src/main/java/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -111,4 +111,7 @@ public void drawGhost(
 
   /* Added for HDL generation */
   public boolean RequiresNonZeroLabel();
+  
+  /* Added for Soc simulation core */
+  public boolean isSocComponent();
 }

File: src/main/java/com/cburch/logisim/gui/generic/AttrTable.java
Patch:
@@ -40,10 +40,8 @@
 import java.awt.BorderLayout;
 import java.awt.Color;
 import java.awt.Component;
-import java.awt.Dialog;
 import java.awt.Dimension;
 import java.awt.Font;
-import java.awt.Frame;
 import java.awt.Window;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -41,7 +41,6 @@
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.gui.generic.AttrTableModelRow;
 import com.cburch.logisim.gui.generic.AttrTableSetException;
 import com.cburch.logisim.gui.generic.AttributeSetTableModel;
 import com.cburch.logisim.gui.main.Selection.Event;

File: src/main/java/com/cburch/logisim/gui/main/SelectionActions.java
Patch:
@@ -123,7 +123,7 @@ private static class Copy extends Action {
     @Override
     public void doIt(Project proj) {
       oldClip = Clipboard.get();
-      Clipboard.set(sel, sel.getAttributeSet(), true);
+      Clipboard.set(sel, sel.getAttributeSet());
     }
 
     @Override
@@ -155,7 +155,7 @@ private static class Cut extends Action {
     @Override
     public void doIt(Project proj) {
       oldClip = Clipboard.get();
-      Clipboard.set(sel, sel.getAttributeSet(), false);
+      Clipboard.set(sel, sel.getAttributeSet());
       second.doIt(proj);
     }
 
@@ -350,7 +350,6 @@ public void doIt(Project proj) {
       } else {
         xnReverse = null;
       }
-      clip.ClearLabels();
     }
 
     @Override

File: src/main/java/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -91,6 +91,7 @@
 import javax.swing.JScrollPane;
 import javax.swing.JSpinner;
 import javax.swing.JTabbedPane;
+import javax.swing.JTextArea;
 import javax.swing.JTextField;
 import javax.swing.ProgressMonitor;
 import javax.swing.UIDefaults;
@@ -1033,6 +1034,7 @@ public void eventDispatched(AWTEvent event) {
             || (container instanceof JSpinner)
             || (container instanceof JTabbedPane)
             || (container instanceof JTextField)
+            || (container instanceof JTextArea)
             || (container instanceof JHelp)
             || (container instanceof JFileChooser)
             || ((container instanceof JScrollPane) && (!(container instanceof CanvasPane)))

File: src/main/java/com/cburch/logisim/proj/Project.java
Patch:
@@ -145,7 +145,7 @@ public void addLibraryListener(LibraryListener value) {
     fileListeners.add(value);
     if (file != null) file.addLibraryListener(value);
   }
-
+  
   //
   // Listener methods
   //

File: src/main/java/com/cburch/logisim/std/Builtin.java
Patch:
@@ -31,6 +31,7 @@
 import static com.cburch.logisim.std.Strings.S;
 
 import com.cburch.logisim.fpga.library.BFHPraktika;
+import com.cburch.logisim.soc.Soc;
 import com.cburch.logisim.std.arith.Arithmetic;
 import com.cburch.logisim.std.base.Base;
 import com.cburch.logisim.std.gates.Gates;
@@ -67,6 +68,7 @@ public Builtin() {
               new Tcl(),
               new BFHPraktika(),
               new ITA_IO(),
+              new Soc(),
             });
   }
 

File: src/main/java/com/cburch/logisim/fpga/fpgagui/CustomFrequencySelDialog.java
Patch:
@@ -51,7 +51,6 @@ public class CustomFrequencySelDialog implements ActionListener {
 
   @Override
   public void actionPerformed(ActionEvent e) {
-    // TODO Auto-generated method stub
     if (e.getActionCommand().equals("Done")) {
       TickFrequency = ClockFreq / GetDivider();
       panel.setVisible(false);

File: src/main/java/com/cburch/logisim/gui/chronogram/chronodata/TimelineParam.java
Patch:
@@ -30,7 +30,7 @@
 
 public class TimelineParam {
 
-  public static String[] units = {"Hz", "KHz", "MHz", "GHz"};
+  public static String[] units = {"Hz", "kHz", "MHz", "GHz"};
 
   private String selectedUnit;
   private String signalClkName;

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/TimelineDraw.java
Patch:
@@ -97,7 +97,7 @@ private String getTimeString(int i) {
       out += "ns";
     } else if (timelineParam.getSelectedUnit().equals("MHz")) {
       out += "us";
-    } else if (timelineParam.getSelectedUnit().equals("KHz")) {
+    } else if (timelineParam.getSelectedUnit().equals("kHz")) {
       out += "ms";
     } else {
       out += "s";

File: src/main/java/com/cburch/logisim/fpga/fpgagui/CustomFrequencySelDialog.java
Patch:
@@ -51,7 +51,6 @@ public class CustomFrequencySelDialog implements ActionListener {
 
   @Override
   public void actionPerformed(ActionEvent e) {
-    // TODO Auto-generated method stub
     if (e.getActionCommand().equals("Done")) {
       TickFrequency = ClockFreq / GetDivider();
       panel.setVisible(false);

File: src/main/java/com/cburch/logisim/gui/chronogram/chronodata/TimelineParam.java
Patch:
@@ -30,7 +30,7 @@
 
 public class TimelineParam {
 
-  public static String[] units = {"Hz", "KHz", "MHz", "GHz"};
+  public static String[] units = {"Hz", "kHz", "MHz", "GHz"};
 
   private String selectedUnit;
   private String signalClkName;

File: src/main/java/com/cburch/logisim/gui/chronogram/chronogui/TimelineDraw.java
Patch:
@@ -97,7 +97,7 @@ private String getTimeString(int i) {
       out += "ns";
     } else if (timelineParam.getSelectedUnit().equals("MHz")) {
       out += "us";
-    } else if (timelineParam.getSelectedUnit().equals("KHz")) {
+    } else if (timelineParam.getSelectedUnit().equals("kHz")) {
       out += "ms";
     } else {
       out += "s";

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -89,7 +89,7 @@ public static void main(String[] args) throws Exception {
   static final Logger logger = LoggerFactory.getLogger(Main.class);
 
   public static final LogisimVersion VERSION =
-      LogisimVersion.get(3, 0, 0, LogisimVersion.FINAL_REVISION);
+      LogisimVersion.get(3, 1, 0, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
   public static final int COPYRIGHT_YEAR = 2019;

File: src/main/java/com/cburch/logisim/gui/icons/ArithmeticIcon.java
Patch:
@@ -52,7 +52,7 @@ protected void paintIcon(Graphics2D g2) {
     g2.setColor(Color.BLACK);
     float scale = Opp.length() >= 2 ? 2 : 1;
     int yoff = Opp.length() > 2 ? getIconHeight()>>2 : getIconHeight()>>1; 
-    Font f = g2.getFont().deriveFont(scale((float)getIconWidth()/(float)(1.4*scale))).deriveFont(Font.BOLD);
+    Font f = g2.getFont().deriveFont((float)getIconWidth()/scale).deriveFont(Font.BOLD);
     g2.drawRect(scale(1), scale(1), getIconWidth()-scale(2), getIconHeight()-scale(2));
     TextLayout t = new TextLayout(Opp.length() > 2 ? Opp.substring(0, 2) : Opp,f,g2.getFontRenderContext());
     t.draw(g2, (float)(getIconWidth()/2-t.getBounds().getCenterX()),(float)(yoff-t.getBounds().getCenterY()));

File: src/main/java/com/cburch/logisim/gui/icons/HdlIcon.java
Patch:
@@ -54,10 +54,10 @@ protected void paintIcon(Graphics2D g2) {
     TextLayout t = new TextLayout("LIBRARY",f,g2.getFontRenderContext());
     t.draw(g2, (float)(getIconWidth()/2-t.getBounds().getCenterX()), 
     		(float)((3*getIconHeight())/8-t.getBounds().getCenterY()));
-    t = new TextLayout("USE ieee",f,g2.getFontRenderContext());
+    t = new TextLayout("USE iee",f,g2.getFontRenderContext());
     t.draw(g2, (float)(getIconWidth()/2-t.getBounds().getCenterX()), 
     		(float)((5*getIconHeight())/8-t.getBounds().getCenterY()));
-    t = new TextLayout("ENTITY b",f,g2.getFontRenderContext());
+    t = new TextLayout("ENTITY ",f,g2.getFontRenderContext());
     t.draw(g2, (float)(getIconWidth()/2-t.getBounds().getCenterX()), 
     		(float)((7*getIconHeight())/8-t.getBounds().getCenterY()));
     if (type.equals(HdlToolbarModel.HDL_VALIDATE)) {

File: src/main/java/com/cburch/logisim/std/io/Button.java
Patch:
@@ -39,6 +39,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.fpgaboardeditor.FPGAIOInformationContainer;
 import com.cburch.logisim.fpga.hdlgenerator.IOComponentInformationContainer;
+import com.cburch.logisim.gui.icons.ButtonIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceDataSingleton;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -115,7 +116,7 @@ public Button() {
           true
         });
     setFacingAttribute(StdAttr.FACING);
-    setIconName("button.gif");
+    setIcon(new ButtonIcon());
     setKeyConfigurator(new DirectionConfigurator(StdAttr.LABEL_LOC, KeyEvent.ALT_DOWN_MASK));
     setPorts(new Port[] {new Port(0, 0, Port.OUTPUT, 1)});
     setInstancePoker(Poker.class);

File: src/main/java/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -41,6 +41,7 @@
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.fpgaboardeditor.FPGAIOInformationContainer;
 import com.cburch.logisim.fpga.hdlgenerator.IOComponentInformationContainer;
+import com.cburch.logisim.gui.icons.DipswitchIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceData;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -159,7 +160,7 @@ public DipSwitch() {
           BitWidth.create(dipSize)
         });
     setFacingAttribute(StdAttr.FACING);
-    setIconName("dipswitch.gif");
+    setIcon(new DipswitchIcon());
     setKeyConfigurator(
         JoinedConfigurator.create(
             new BitWidthConfigurator(ATTR_SIZE),

File: src/main/java/com/cburch/logisim/std/arith/Adder.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -112,7 +113,7 @@ public Adder() {
     setAttributes(new Attribute[] {StdAttr.WIDTH}, new Object[] {BitWidth.create(8)});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("adder.gif");
+    setIcon(new ArithmeticIcon("+"));
 
     Port[] ps = new Port[5];
     ps[IN0] = new Port(-40, -10, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/arith/BitAdder.java
Patch:
@@ -37,6 +37,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -62,7 +63,7 @@ public BitAdder() {
         JoinedConfigurator.create(
             new IntegerConfigurator(NUM_INPUTS, 1, 32, 0),
             new BitWidthConfigurator(StdAttr.WIDTH)));
-    setIconName("bitadder.gif");
+    setIcon(new ArithmeticIcon("#"));
   }
 
   private int computeOutputBits(int width, int inputs) {

File: src/main/java/com/cburch/logisim/std/arith/BitFinder.java
Patch:
@@ -37,6 +37,7 @@
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -67,7 +68,7 @@ public BitFinder() {
     setAttributes(
         new Attribute[] {StdAttr.WIDTH, TYPE}, new Object[] {BitWidth.create(8), LOW_ONE});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
-    setIconName("bitfindr.gif");
+    setIcon(new ArithmeticIcon("?"));
   }
 
   private int computeOutputBits(int maxBits) {

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -39,6 +39,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -71,7 +72,7 @@ public Comparator() {
         new Object[] {BitWidth.create(8), SIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("comparator.gif");
+    setIcon(new ArithmeticIcon("\u2276"));
 
     Port[] ps = new Port[5];
     ps[IN0] = new Port(-40, -10, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/arith/Divider.java
Patch:
@@ -37,6 +37,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -91,7 +92,7 @@ public Divider() {
         new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("divider.gif");
+    setIcon(new ArithmeticIcon("\u00f7"));
 
     Port[] ps = new Port[5];
     ps[IN0] = new Port(-40, -10, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/arith/Multiplier.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -156,7 +157,7 @@ public Multiplier() {
         new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("multiplier.gif");
+    setIcon(new ArithmeticIcon("\u00d7"));
 
     Port[] ps = new Port[5];
     ps[IN0] = new Port(-40, -10, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/arith/Negator.java
Patch:
@@ -37,6 +37,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -53,7 +54,7 @@ public Negator() {
     setAttributes(new Attribute[] {StdAttr.WIDTH}, new Object[] {BitWidth.create(8)});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("negator.gif");
+    setIcon(new ArithmeticIcon("-x"));
 
     Port[] ps = new Port[2];
     ps[IN] = new Port(-40, 0, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
@@ -83,7 +84,7 @@ public Shifter() {
         new Object[] {BitWidth.create(8), SHIFT_LOGICAL_LEFT});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("shifter.gif");
+    setIcon(new ArithmeticIcon("\u2b05"));
   }
 
   @Override

File: src/main/java/com/cburch/logisim/std/arith/Subtractor.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.Location;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.instance.InstanceFactory;
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
@@ -60,7 +61,7 @@ public Subtractor() {
     setAttributes(new Attribute[] {StdAttr.WIDTH}, new Object[] {BitWidth.create(8)});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
-    setIconName("subtractor.gif");
+    setIcon(new ArithmeticIcon("-"));
 
     Port[] ps = new Port[5];
     ps[IN0] = new Port(-40, -10, Port.INPUT, StdAttr.WIDTH);

File: src/main/java/com/cburch/logisim/std/hdl/Hdl.java
Patch:
@@ -30,6 +30,7 @@
 
 import static com.cburch.logisim.vhdl.Strings.S;
 
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.tools.FactoryDescription;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.tools.Tool;
@@ -38,8 +39,8 @@
 public class Hdl extends Library {
 
   private static FactoryDescription[] DESCRIPTIONS = {
-    new FactoryDescription(
-        "VHDL Entity", S.getter("vhdlComponent"), "vhdl.gif", "VhdlEntityComponent"),
+    new FactoryDescription("VHDL Entity", S.getter("vhdlComponent"), new ArithmeticIcon("VHDL"), 
+    		"VhdlEntityComponent"),
   };
 
   private List<Tool> tools = null;

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -36,6 +36,7 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Value;
+import com.cburch.logisim.gui.icons.ArithmeticIcon;
 import com.cburch.logisim.gui.main.Frame;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.InstanceFactory;
@@ -124,7 +125,7 @@ public VhdlEntityComponent() {
     super("VHDL Entity", S.getter("vhdlComponent"));
 
     this.contentListeners = new WeakHashMap<Instance, VhdlEntityListener>();
-    this.setIconName("vhdl.gif");
+    this.setIcon(new ArithmeticIcon("VHDL"));
   }
 
   public void SetSimName(AttributeSet attrs, String SName) {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlContent.java
Patch:
@@ -28,7 +28,7 @@
 
 package com.cburch.logisim.vhdl.base;
 
-import static com.cburch.logisim.std.Strings.S;
+import static com.cburch.logisim.vhdl.Strings.S;
 
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeOption;

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderListModel.java
Patch:
@@ -30,6 +30,8 @@
 
 import com.cburch.logisim.fpga.designrulecheck.SimpleDRCContainer;
 import com.cburch.logisim.fpga.gui.ListModelCellRenderer;
+import com.cburch.logisim.gui.main.Frame;
+
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.Set;

File: src/main/java/com/cburch/draw/tools/CurveTool.java
Patch:
@@ -30,6 +30,7 @@
 
 import com.cburch.draw.actions.ModelAddAction;
 import com.cburch.draw.canvas.Canvas;
+import com.cburch.draw.icons.DrawCurveIcon;
 import com.cburch.draw.model.CanvasModel;
 import com.cburch.draw.shapes.Curve;
 import com.cburch.draw.shapes.CurveUtil;
@@ -95,7 +96,7 @@ public Cursor getCursor(Canvas canvas) {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("drawcurv.gif");
+    return new DrawCurveIcon();
   }
 
   @Override

File: src/main/java/com/cburch/draw/tools/LineTool.java
Patch:
@@ -30,6 +30,7 @@
 
 import com.cburch.draw.actions.ModelAddAction;
 import com.cburch.draw.canvas.Canvas;
+import com.cburch.draw.icons.DrawLineIcon;
 import com.cburch.draw.model.CanvasModel;
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.draw.shapes.DrawAttr;
@@ -97,7 +98,7 @@ public Cursor getCursor(Canvas canvas) {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("drawline.gif");
+    return new DrawLineIcon();
   }
 
   @Override

File: src/main/java/com/cburch/draw/tools/OvalTool.java
Patch:
@@ -28,11 +28,11 @@
 
 package com.cburch.draw.tools;
 
+import com.cburch.draw.icons.DrawShapeIcon;
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.draw.shapes.DrawAttr;
 import com.cburch.draw.shapes.Oval;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.util.Icons;
 import java.awt.Graphics;
 import java.util.List;
 import javax.swing.Icon;
@@ -66,6 +66,6 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("drawoval.gif");
+    return new DrawShapeIcon(DrawShapeIcon.ELIPSE);
   }
 }

File: src/main/java/com/cburch/draw/tools/RectangleTool.java
Patch:
@@ -28,11 +28,11 @@
 
 package com.cburch.draw.tools;
 
+import com.cburch.draw.icons.DrawShapeIcon;
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.draw.shapes.DrawAttr;
 import com.cburch.draw.shapes.Rectangle;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.util.Icons;
 import java.awt.Graphics;
 import java.util.List;
 import javax.swing.Icon;
@@ -66,6 +66,6 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("drawrect.gif");
+    return new DrawShapeIcon(DrawShapeIcon.RECTANGLE);
   }
 }

File: src/main/java/com/cburch/draw/tools/RoundRectangleTool.java
Patch:
@@ -28,11 +28,11 @@
 
 package com.cburch.draw.tools;
 
+import com.cburch.draw.icons.DrawShapeIcon;
 import com.cburch.draw.model.CanvasObject;
 import com.cburch.draw.shapes.DrawAttr;
 import com.cburch.draw.shapes.RoundRectangle;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.util.Icons;
 import java.awt.Graphics;
 import java.util.List;
 import javax.swing.Icon;
@@ -68,6 +68,6 @@ public List<Attribute<?>> getAttributes() {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("drawrrct.gif");
+    return new DrawShapeIcon(DrawShapeIcon.ROUNDEDRECTANGLE);
   }
 }

File: src/main/java/com/cburch/draw/tools/SelectTool.java
Patch:
@@ -40,6 +40,7 @@
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Location;
+import com.cburch.logisim.gui.icons.SelectIcon;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.Icons;
 import java.awt.Color;
@@ -75,6 +76,7 @@ private static CanvasObject getObjectAt(CanvasModel model, int x, int y, boolean
   private static final int HANDLE_SIZE = 8;
 
   private static final Color RECT_SELECT_BACKGROUND = new Color(0, 0, 0, 32);
+  private static SelectIcon icon = new SelectIcon();
   private int curAction;
   private List<CanvasObject> beforePressSelection;
   private Handle beforePressHandle;
@@ -246,7 +248,7 @@ private int getHandleSize(Canvas canvas) {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("select.gif");
+    return icon;
   }
 
   @Override

File: src/main/java/com/cburch/draw/tools/TextTool.java
Patch:
@@ -40,7 +40,7 @@
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeListener;
 import com.cburch.logisim.data.Location;
-import com.cburch.logisim.util.Icons;
+import com.cburch.logisim.gui.icons.TextIcon;
 import java.awt.Cursor;
 import java.awt.Graphics;
 import java.awt.Point;
@@ -92,6 +92,7 @@ public void attributeValueChanged(AttributeEvent e) {
   private Text curText;
   private Canvas curCanvas;
   private boolean isTextNew;
+  private static TextIcon icon = new TextIcon();
 
   public TextTool(DrawingAttributeSet attrs) {
     this.attrs = attrs;
@@ -160,7 +161,7 @@ public Cursor getCursor(Canvas canvas) {
 
   @Override
   public Icon getIcon() {
-    return Icons.getIcon("text.gif");
+    return icon;
   }
 
   @Override

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -84,10 +84,10 @@ public bcd2sevenseg() {
   public void paintInstance(InstancePainter painter) {
     Graphics g = painter.getGraphics();
     Bounds MyBounds = painter.getBounds();
-    g.setColor(Color.BLUE);
+    if (!painter.isPrintView())
+      g.setColor(Color.BLUE);
     painter.drawRectangle(MyBounds, "");
     painter.drawPort(BCDin, "BCD", Direction.SOUTH);
-    //		painter.drawBounds();
     for (int i = 0; i < 7; i++) painter.drawPort(i);
     g.setColor(Color.BLACK);
     painter.drawRectangle(

File: src/main/java/com/cburch/logisim/gui/appear/ShowStateTool.java
Patch:
@@ -30,7 +30,7 @@
 
 import com.cburch.draw.toolbar.ToolbarClickableItem;
 import com.cburch.draw.tools.DrawingAttributeSet;
-import com.cburch.logisim.util.Icons;
+import com.cburch.logisim.gui.icons.ShowStateIcon;
 import java.awt.Dimension;
 import java.awt.Graphics;
 import java.awt.Point;
@@ -47,8 +47,8 @@ public ShowStateTool(AppearanceView view, AppearanceCanvas canvas, DrawingAttrib
     this.view = view;
     this.canvas = canvas;
     this.attrs = attrs;
-    icon = Icons.getIcon("showstate.gif");
-    pressed = Icons.getIcon("showstate_pressed.gif");
+    icon = new ShowStateIcon(false);
+    pressed = new ShowStateIcon(true);
   }
 
   public Dimension getDimension(Object orientation) {

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerLibraryNode.java
Patch:
@@ -58,7 +58,7 @@ public class ProjectExplorerLibraryNode extends ProjectExplorerModel.Node<Librar
 
   private void buildChildren() {
     Library lib = getValue();
-    if (lib != null) {
+    if (lib != null && !(lib.isHidden())) {
       buildChildren(new ProjectExplorerToolNode(getModel(), null), lib.getTools(), 0);
       buildChildren(
           new ProjectExplorerLibraryNode(getModel(), null),
@@ -95,6 +95,8 @@ private <T> void buildChildren(
     oldPos = startIndex;
 
     for (T tool : items) {
+      if (tool instanceof Library && ((Library)tool).isHidden())
+        continue;
       ProjectExplorerModel.Node<T> node = nodeMap.get(tool);
 
       if (node == null) {

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -99,7 +99,8 @@ void draw(Component comp, ComponentDrawContext context) {
     if (field != null && LabelIsVisable) {
       Graphics g = context.getGraphics().create();
       Color currentColor = g.getColor();
-      g.setColor(fontColor);
+      if (!context.isPrintView())
+        g.setColor(fontColor);
       field.draw(g);
       g.setColor(currentColor);
       g.dispose();

File: src/main/java/com/cburch/logisim/std/base/Base.java
Patch:
@@ -45,6 +45,7 @@ public class Base extends Library {
   private List<Tool> tools = null;
 
   public Base() {
+    setHidden();
     SelectTool select = new SelectTool();
     WiringTool wiring = new WiringTool();
 
@@ -57,7 +58,7 @@ public Base() {
               wiring,
               new TextTool(),
               new MenuTool(),
-              new AddTool(Text.FACTORY),
+              new AddTool(new Text(true)),
             });
   }
 

File: src/main/java/com/cburch/logisim/fpga/library/bcd2sevenseg.java
Patch:
@@ -84,10 +84,10 @@ public bcd2sevenseg() {
   public void paintInstance(InstancePainter painter) {
     Graphics g = painter.getGraphics();
     Bounds MyBounds = painter.getBounds();
-    g.setColor(Color.BLUE);
+    if (!painter.isPrintView())
+      g.setColor(Color.BLUE);
     painter.drawRectangle(MyBounds, "");
     painter.drawPort(BCDin, "BCD", Direction.SOUTH);
-    //		painter.drawBounds();
     for (int i = 0; i < 7; i++) painter.drawPort(i);
     g.setColor(Color.BLACK);
     painter.drawRectangle(

File: src/main/java/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -99,7 +99,8 @@ void draw(Component comp, ComponentDrawContext context) {
     if (field != null && LabelIsVisable) {
       Graphics g = context.getGraphics().create();
       Color currentColor = g.getColor();
-      g.setColor(fontColor);
+      if (!context.isPrintView())
+        g.setColor(fontColor);
       field.draw(g);
       g.setColor(currentColor);
       g.dispose();

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -508,7 +508,7 @@ public Component getTableCellRendererComponent(JTable table,
         Object value, boolean isSelected, boolean hasFocus, int row, int column) {
       boolean empty = value.toString().equals("");
       if (empty)
-        value = "Click to add a new variable";
+        value = S.get("variableClickToAdd");
       JComponent c = (JComponent)super.getTableCellRendererComponent(table,
           value, isSelected, hasFocus, row, column);
       c.setFont(empty ? italic : plain);

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -508,7 +508,7 @@ public Component getTableCellRendererComponent(JTable table,
         Object value, boolean isSelected, boolean hasFocus, int row, int column) {
       boolean empty = value.toString().equals("");
       if (empty)
-        value = "Click to add a new variable";
+        value = S.get("variableClickToAdd");
       JComponent c = (JComponent)super.getTableCellRendererComponent(table,
           value, isSelected, hasFocus, row, column);
       c.setFont(empty ? italic : plain);

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
       LogisimVersion.get(3, 0, 0, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
-  public static final int COPYRIGHT_YEAR = 2018;
+  public static final int COPYRIGHT_YEAR = 2019;
 
   public static boolean ANALYZE = true;
 

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -96,8 +96,6 @@ public WindowOptions(PreferencesFrame window) {
               new PrefOption(Direction.SOUTH.toString(), Direction.SOUTH.getDisplayGetter()),
               new PrefOption(Direction.EAST.toString(), Direction.EAST.getDisplayGetter()),
               new PrefOption(Direction.WEST.toString(), Direction.WEST.getDisplayGetter()),
-              new PrefOption(
-                  AppPreferences.TOOLBAR_DOWN_MIDDLE, S.getter("windowToolbarDownMiddle")),
               new PrefOption(AppPreferences.TOOLBAR_HIDDEN, S.getter("windowToolbarHidden"))
             });
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -501,7 +501,6 @@ public static int getIconBorder() {
 
   // Window preferences
   public static final String TOOLBAR_HIDDEN = "hidden";
-  public static final String TOOLBAR_DOWN_MIDDLE = "downMiddle";
   public static final PrefMonitor<Boolean> SHOW_TICK_RATE =
       create(new PrefMonitorBoolean("showTickRate", false));
   public static final PrefMonitor<String> TOOLBAR_PLACEMENT =
@@ -513,7 +512,6 @@ public static int getIconBorder() {
                 Direction.SOUTH.toString(),
                 Direction.EAST.toString(),
                 Direction.WEST.toString(),
-                TOOLBAR_DOWN_MIDDLE,
                 TOOLBAR_HIDDEN
               },
               Direction.NORTH.toString()));

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -131,6 +131,8 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.WIDTH) {
       configurePorts(instance);
+    } else if (attr == ATTR_SHIFT) {
+      instance.fireInvalidated();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -155,7 +155,7 @@ public DipSwitch() {
           Direction.EAST,
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
-          false,
+          true,
           BitWidth.create(dipSize)
         });
     setFacingAttribute(StdAttr.FACING);

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -88,7 +88,7 @@ public static void main(String[] args) throws Exception {
       LogisimVersion.get(3, 0, 0, LogisimVersion.FINAL_REVISION);
 
   public static final String VERSION_NAME = VERSION.toString();
-  public static final int COPYRIGHT_YEAR = 2018;
+  public static final int COPYRIGHT_YEAR = 2019;
 
   public static boolean ANALYZE = true;
 

File: src/main/java/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -96,8 +96,6 @@ public WindowOptions(PreferencesFrame window) {
               new PrefOption(Direction.SOUTH.toString(), Direction.SOUTH.getDisplayGetter()),
               new PrefOption(Direction.EAST.toString(), Direction.EAST.getDisplayGetter()),
               new PrefOption(Direction.WEST.toString(), Direction.WEST.getDisplayGetter()),
-              new PrefOption(
-                  AppPreferences.TOOLBAR_DOWN_MIDDLE, S.getter("windowToolbarDownMiddle")),
               new PrefOption(AppPreferences.TOOLBAR_HIDDEN, S.getter("windowToolbarHidden"))
             });
 

File: src/main/java/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -501,7 +501,6 @@ public static int getIconBorder() {
 
   // Window preferences
   public static final String TOOLBAR_HIDDEN = "hidden";
-  public static final String TOOLBAR_DOWN_MIDDLE = "downMiddle";
   public static final PrefMonitor<Boolean> SHOW_TICK_RATE =
       create(new PrefMonitorBoolean("showTickRate", false));
   public static final PrefMonitor<String> TOOLBAR_PLACEMENT =
@@ -513,7 +512,6 @@ public static int getIconBorder() {
                 Direction.SOUTH.toString(),
                 Direction.EAST.toString(),
                 Direction.WEST.toString(),
-                TOOLBAR_DOWN_MIDDLE,
                 TOOLBAR_HIDDEN
               },
               Direction.NORTH.toString()));

File: src/main/java/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -131,6 +131,8 @@ public boolean HDLSupportedComponent(String HDLIdentifier, AttributeSet attrs) {
   protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
     if (attr == StdAttr.WIDTH) {
       configurePorts(instance);
+    } else if (attr == ATTR_SHIFT) {
+      instance.fireInvalidated();
     }
   }
 

File: src/main/java/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -155,7 +155,7 @@ public DipSwitch() {
           Direction.EAST,
           StdAttr.DEFAULT_LABEL_FONT,
           StdAttr.DEFAULT_LABEL_COLOR,
-          false,
+          true,
           BitWidth.create(dipSize)
         });
     setFacingAttribute(StdAttr.FACING);

File: src/main/java/com/cburch/logisim/util/Icons.java
Patch:
@@ -51,8 +51,7 @@ public static ImageIcon getIcon(String name) {
     return icon;
   }
 
-  public static void paintRotated(
-      Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
+  public static void paintRotated(Graphics g, int x, int y, Direction dir, Icon icon, Component dest) {
     if (!(g instanceof Graphics2D) || dir == Direction.EAST) {
       icon.paintIcon(dest, g, x, y);
       return;

File: src/main/java/com/cburch/logisim/std/arith/Divider.java
Patch:
@@ -88,7 +88,7 @@ public Divider() {
     super("Divider", S.getter("dividerComponent"));
     setAttributes(
         new Attribute[] {StdAttr.WIDTH, MODE_ATTR},
-        new Object[] {BitWidth.create(8), SIGNED_OPTION});
+        new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
     setIconName("divider.gif");

File: src/main/java/com/cburch/logisim/std/arith/Divider.java
Patch:
@@ -88,7 +88,7 @@ public Divider() {
     super("Divider", S.getter("dividerComponent"));
     setAttributes(
         new Attribute[] {StdAttr.WIDTH, MODE_ATTR},
-        new Object[] {BitWidth.create(8), SIGNED_OPTION});
+        new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
     setIconName("divider.gif");

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -35,6 +35,7 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.io.Writer;
+
 import javax.swing.JOptionPane;
 import javax.swing.UIManager;
 import javax.swing.UnsupportedLookAndFeelException;

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionRenderData.java
Patch:
@@ -47,6 +47,7 @@
 import com.cburch.logisim.analyze.model.Expression;
 import com.cburch.logisim.analyze.model.Expression.Notation;
 import com.cburch.logisim.prefs.AppPreferences;
+import com.cburch.logisim.util.GraphicsUtil;
 
 public class ExpressionRenderData {
 
@@ -368,8 +369,9 @@ public void paint(Graphics g, int x, int y) {
         int stopX = x + notStops[i][j];
         if (nd.startIndex >= md.startIndex && nd.stopIndex <= md.stopIndex)
         	g.setColor(MARKCOLOR);
+        GraphicsUtil.switchToWidth(g, 2);
         g.drawLine(startX, notY, stopX, notY);
-        g.drawLine(startX, notY - 1, stopX, notY - 1);
+        GraphicsUtil.switchToWidth(g, 1);
         if (nd.startIndex >= md.startIndex && nd.stopIndex <= md.stopIndex)
         	g.setColor(curCol);
       }

File: src/main/java/com/cburch/logisim/analyze/file/AnalyzerTexWriter.java
Patch:
@@ -412,7 +412,7 @@ public static void doSave(File file, AnalyzerModel model) throws IOException {
           "\\usepackage["
               + S.get("latexBabelLanguage")
               + ",shorthands=off]{babel}        % shorhands=off is required for babel french in combination with tikz karnaugh....");
-      out.println("\\usepackage[utf8]{inputenc}");
+      out.println("\\usepackage[utf8x]{inputenc}");
       out.println("\\usepackage[T1]{fontenc}");
       out.println("\\usepackage{amsmath}");
       out.println("\\usepackage{geometry}");

File: src/main/java/com/cburch/logisim/std/arith/Multiplier.java
Patch:
@@ -153,7 +153,7 @@ public Multiplier() {
     super("Multiplier", S.getter("multiplierComponent"));
     setAttributes(
         new Attribute[] {StdAttr.WIDTH, MODE_ATTR},
-        new Object[] {BitWidth.create(8), SIGNED_OPTION});
+        new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
     setIconName("multiplier.gif");

File: src/main/java/com/cburch/logisim/gui/menu/PrintHandler.java
Patch:
@@ -123,7 +123,8 @@ public void exportImage() {
       if (ff == filters[0]) dest = new File(dest + ".png");
       else if (ff == filters[1]) dest = new File(dest + ".gif");
       else if (ff == filters[2]) dest = new File(dest + ".jpg");
-      else dest = new File(dest+".tex");
+      else if (ff == filters[3]) dest = new File(dest+".tex");
+      else dest = new File(dest+".svg");
     }
     setLastExported(dest);
     if (dest.exists()) {

File: src/main/java/com/cburch/logisim/analyze/file/AnalyzerTexWriter.java
Patch:
@@ -412,7 +412,7 @@ public static void doSave(File file, AnalyzerModel model) throws IOException {
           "\\usepackage["
               + S.get("latexBabelLanguage")
               + ",shorthands=off]{babel}        % shorhands=off is required for babel french in combination with tikz karnaugh....");
-      out.println("\\usepackage[utf8]{inputenc}");
+      out.println("\\usepackage[utf8x]{inputenc}");
       out.println("\\usepackage[T1]{fontenc}");
       out.println("\\usepackage{amsmath}");
       out.println("\\usepackage{geometry}");

File: src/main/java/com/cburch/logisim/std/arith/Multiplier.java
Patch:
@@ -153,7 +153,7 @@ public Multiplier() {
     super("Multiplier", S.getter("multiplierComponent"));
     setAttributes(
         new Attribute[] {StdAttr.WIDTH, MODE_ATTR},
-        new Object[] {BitWidth.create(8), SIGNED_OPTION});
+        new Object[] {BitWidth.create(8), UNSIGNED_OPTION});
     setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
     setOffsetBounds(Bounds.create(-40, -20, 40, 40));
     setIconName("multiplier.gif");

File: src/main/java/com/cburch/logisim/gui/generic/TikZInfo.java
Patch:
@@ -77,6 +77,7 @@ public class TikZInfo implements Cloneable {
   
   public interface DrawObject {
     public String getTikZCommand();
+    public void addSVGElement(Document doc);
     public boolean insideArea(int x, int y, int width, int height);
     public DrawObject clone();
     public void move(int dx , int dy);

File: src/main/java/com/cburch/logisim/gui/generic/TikZWriter.java
Patch:
@@ -345,7 +345,7 @@ public void copyArea(int x, int y, int width, int height, int dx, int dy) {
 
   @Override
   public void drawLine(int x1, int y1, int x2, int y2) {
-    MyInfo.addMergeLine(x1,y1,x2,y2);
+    MyInfo.addLine(x1,y1,x2,y2);
   }
 
   @Override

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -129,6 +129,7 @@ private void update() {
           tt.getInputColumnCount() > 0
               && tt.getOutputColumnCount() > 0
               && tt.getRowCount() <= AnalyzerTexWriter.MAX_TRUTH_TABLE_ROWS);
+      ioPanel.updateTab();
     }
   }
 

File: src/main/java/com/cburch/logisim/circuit/SubcircuitPoker.java
Patch:
@@ -105,7 +105,7 @@ public void paint(InstancePainter painter) {
 				g.setColor(MAGNIFYING_INTERIOR);
 			}
 			g.fillOval(cx - 9, cy - 9, 18, 18);
-			g.setColor(Color.BLACK);
+			g.setColor(Color.GRAY);
 			g.drawOval(cx - 9, cy - 9, 18, 18);
 			g.fillPolygon(xp, yp, xp.length);
 		}

File: src/main/java/com/cburch/logisim/fpga/fpgagui/ComponentMapDialog.java
Patch:
@@ -898,6 +898,8 @@ private void Save() {
                  + "-" + BoardInfo.getBoardName() + "-MAP.xml";
 		String SaveFileName = getFileName("Select filename to save the current map", suggestedName);
 		if (!SaveFileName.isEmpty()) {
+			if (!SaveFileName.endsWith(".xml"))
+				SaveFileName = SaveFileName.concat(".xml");
 			try {
 				// Create instance of DocumentBuilderFactory
 				DocumentBuilderFactory factory = DocumentBuilderFactory

File: src/main/java/com/cburch/logisim/gui/start/SplashScreen.java
Patch:
@@ -95,6 +95,7 @@ private static class Marker {
 	long startTime = System.currentTimeMillis();
 
 	public SplashScreen() {
+		setName("Welcome to Logisim Evolution");
 		JPanel imagePanel = About.getImagePanel();
 		imagePanel.setBorder(null);
 

File: src/main/java/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -51,7 +51,7 @@ public class Comparator extends InstanceFactory {
 	public static final AttributeOption SIGNED_OPTION = new AttributeOption(
 			"twosComplement", "twosComplement",
 			S.getter("twosComplementOption"));
-	private static final AttributeOption UNSIGNED_OPTION = new AttributeOption(
+	public static final AttributeOption UNSIGNED_OPTION = new AttributeOption(
 			"unsigned", "unsigned", S.getter("unsignedOption"));
 	public static final Attribute<AttributeOption> MODE_ATTRIBUTE = Attributes
 			.forOption("mode", S.getter("comparatorType"),

File: src/main/java/com/cburch/logisim/std/gates/Gates.java
Patch:
@@ -49,7 +49,8 @@ public Gates() {
 				new AddTool(OddParityGate.FACTORY),
 				new AddTool(EvenParityGate.FACTORY),
 				new AddTool(ControlledBuffer.FACTORY_BUFFER),
-				new AddTool(ControlledBuffer.FACTORY_INVERTER), });
+				new AddTool(ControlledBuffer.FACTORY_INVERTER), 
+				new AddTool(PLA.FACTORY)});
 	}
 
 	@Override

File: src/main/java/com/cburch/logisim/std/wiring/Pin.java
Patch:
@@ -603,7 +603,7 @@ public Pin() {
 		setInstancePoker(PinPoker.class);
 	}
 	
-	private Direction PinLabelLoc(Direction PinDir) {
+	private static Direction PinLabelLoc(Direction PinDir) {
 		if (PinDir == Direction.EAST)
 			return Direction.WEST;
 		else if (PinDir == Direction.WEST)

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -85,7 +85,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 15, 0,
+	public static final LogisimVersion VERSION = LogisimVersion.get(3, 0, 0,
 			LogisimVersion.FINAL_REVISION);
 
 	public static final String VERSION_NAME = VERSION.toString();

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -164,18 +164,18 @@ static AttributeSet createBaseAttrs(Circuit source, String name) {
 	private static final Attribute<?>[] STATIC_ATTRS = { NAME_ATTR,
 			CIRCUIT_LABEL_ATTR, CIRCUIT_LABEL_FACING_ATTR,
 			CIRCUIT_LABEL_FONT_ATTR,APPEARANCE_ATTR,NAMED_CIRCUIT_BOX_FIXED_SIZE, 
-			CIRCUIT_VHDL_PATH,ShowStateOption.ATTR };
+			CIRCUIT_VHDL_PATH };
 
 	private static final Object[] STATIC_DEFAULTS = { "", "", Direction.EAST,
 			StdAttr.DEFAULT_LABEL_FONT, APPEAR_CLASSIC, 
-			false, "",ShowStateOption.NONE };
+			false, "" };
 
 	private static final List<Attribute<?>> INSTANCE_ATTRS = Arrays
 			.asList(new Attribute<?>[] { StdAttr.FACING, StdAttr.LABEL,
 					LABEL_LOCATION_ATTR, StdAttr.LABEL_FONT,StdAttr.LABEL_VISIBILITY,
 					NAME_ATTR, CIRCUIT_LABEL_ATTR,
 					CIRCUIT_LABEL_FACING_ATTR, CIRCUIT_LABEL_FONT_ATTR,APPEARANCE_ATTR,
-					CIRCUIT_VHDL_PATH,ShowStateOption.ATTR });
+					CIRCUIT_VHDL_PATH });
 
 	private Circuit source;
 	private Instance subcircInstance;

File: src/main/java/com/cburch/logisim/std/io/HexDigitHDLGeneratorFactory.java
Patch:
@@ -26,6 +26,8 @@
  *     http://www.heig-vd.ch/
  *******************************************************************************/
 
+package com.cburch.logisim.std.io;
+
 import java.util.ArrayList;
 
 import com.cburch.logisim.data.AttributeSet;

File: src/main/java/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -83,7 +83,7 @@ public String getTitle() {
 		} else if (commonClass == null) {
 			return S.fmt("selectionVarious", "" + totalCount);
 		} else if (commonCount == 1) {
-			return S.fmt("selectionOne", firstObject.getDisplayName());
+			return S.fmt("selectionOne", firstObject.getDisplayNameAndLabel());
 		} else {
 			return S.fmt("selectionMultiple",
 					firstObject.getDisplayName(), "" + commonCount);

File: src/main/java/com/cburch/draw/model/CanvasObject.java
Patch:
@@ -58,6 +58,8 @@ public interface CanvasObject {
 	public abstract Bounds getBounds();
 
 	public abstract String getDisplayName();
+	
+	public abstract String getDisplayNameAndLabel();
 
 	public abstract List<Handle> getHandles(HandleGesture gesture);
 

File: src/main/java/com/cburch/draw/tools/DrawingAttributeSet.java
Patch:
@@ -115,13 +115,13 @@ private void updateAttributes() {
 	}
 
 	static final List<Attribute<?>> ATTRS_ALL = UnmodifiableList
-			.create(new Attribute<?>[] { DrawAttr.FONT, DrawAttr.ALIGNMENT,
+			.create(new Attribute<?>[] { DrawAttr.FONT, DrawAttr.HALIGNMENT, DrawAttr.VALIGNMENT,
 					DrawAttr.PAINT_TYPE, DrawAttr.STROKE_WIDTH,
 					DrawAttr.STROKE_COLOR, DrawAttr.FILL_COLOR,
 					DrawAttr.TEXT_DEFAULT_FILL, DrawAttr.CORNER_RADIUS });
 
 	static final List<Object> DEFAULTS_ALL = Arrays.asList(new Object[] {
-			DrawAttr.DEFAULT_FONT, DrawAttr.ALIGN_CENTER,
+			DrawAttr.DEFAULT_FONT, DrawAttr.HALIGN_CENTER, DrawAttr.VALIGN_MIDDLE,
 			DrawAttr.PAINT_STROKE, Integer.valueOf(1), Color.BLACK,
 			Color.WHITE, Color.BLACK, Integer.valueOf(10) });
 

File: src/main/java/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -375,7 +375,7 @@ private void paintBase(InstancePainter painter, Graphics g) {
 		Direction defaultFacing = source.getAppearance().getFacing();
 		Location loc = painter.getLocation();
 		g.translate(loc.getX(), loc.getY());
-		source.getAppearance().paintSubcircuit(g, facing);
+		source.getAppearance().paintSubcircuit(painter, g, facing);
 		drawCircuitLabel(painter, getOffsetBounds(attrs), facing, defaultFacing);
 		g.translate(-loc.getX(), -loc.getY());
 		painter.drawLabel();

File: src/main/java/com/cburch/logisim/data/AttributeSets.java
Patch:
@@ -36,7 +36,7 @@
 import java.util.List;
 
 public class AttributeSets {
-	private static class FixedSet extends AbstractAttributeSet {
+	static class FixedSet extends AbstractAttributeSet {
 		private List<Attribute<?>> attrs;
 		private Object[] values;
 		private int readOnly = 0;

File: src/main/java/com/cburch/logisim/gui/appear/AppearanceToolbarModel.java
Patch:
@@ -55,7 +55,7 @@ class AppearanceToolbarModel extends AbstractToolbarModel implements
 	private Canvas canvas;
 	private List<ToolbarItem> items;
 
-	public AppearanceToolbarModel(AbstractTool selectTool, Canvas canvas,
+	public AppearanceToolbarModel(AbstractTool selectTool, ShowStateTool ssTool, Canvas canvas,
 			DrawingAttributeSet attrs) {
 		this.canvas = canvas;
 
@@ -69,6 +69,7 @@ public AppearanceToolbarModel(AbstractTool selectTool, Canvas canvas,
 		for (AbstractTool tool : tools) {
 			rawItems.add(new ToolbarToolItem(tool));
 		}
+		rawItems.add(ssTool);
 		items = Collections.unmodifiableList(rawItems);
 		canvas.addPropertyChangeListener(Canvas.TOOL_PROPERTY, this);
 	}

File: src/main/java/com/cburch/logisim/instance/InstancePainter.java
Patch:
@@ -146,8 +146,7 @@ public Circuit getCircuit() {
 	public InstanceData getData() {
 		CircuitState circState = context.getCircuitState();
 		if (circState == null || comp == null) {
-			throw new UnsupportedOperationException(
-					"setData on InstancePainter");
+			throw new UnsupportedOperationException("setData on InstancePainter");
 		} else {
 			
 			return (InstanceData) circState.getData(comp);

File: src/main/java/com/cburch/logisim/analyze/gui/CsvReadParameterDialog.java
Patch:
@@ -111,7 +111,7 @@ public CsvReadParameterDialog(CsvParameter sel, File file, JFrame parrentFrame)
 		add(new JLabel(S.get("cvsFilePreview")),c);
 		pack();
 		int celwidth = AppPreferences.getScaled(200);
-		int celHeight = AppPreferences.getDownScaled(50);
+		int celHeight = AppPreferences.getScaled(25);
 		c.gridwidth = 1;
 		JLabels = new JLabel[16];
 		Border border = BorderFactory.createLineBorder(Color.BLACK, AppPreferences.getScaled(1));

File: src/main/java/com/cburch/logisim/analyze/gui/VariableTab.java
Patch:
@@ -390,13 +390,14 @@ private int checkindex(String index) {
     	int MSBIndex = Integer.parseInt(index.substring(1, pos));
     	if (pos >= length)
     		return 0;
-    	if (index.charAt(pos++) == ']') {
+    	if (index.charAt(pos) == ']') {
+    		pos++;
     		if (pos != length)
     			return INVALID_CHARS;
     		else
     			return MSBIndex;
     	}
-    	if (pos >= length-3)
+    	if (pos >= length-2)
     		return 0;
     	if (!index.substring(pos, pos+2).equals(".."))
     		return NO_VALID_INDEX_SEP;

File: src/main/java/com/cburch/logisim/analyze/data/ExpressionLatex.java
Patch:
@@ -50,7 +50,7 @@ public ExpressionLatex(Expression expr, Var Function , int bitindex) {
 		if (expr == null)
 			return;
 		String FName;
-		if (Function.width == 0) {
+		if (Function.width == 1) {
 			FName = "\\textbf{"+Function.name+"}";
 		} else {
 			if (bitindex <0 || bitindex >= Function.width)

File: src/main/java/com/cburch/logisim/analyze/gui/ExportLatexButton.java
Patch:
@@ -349,7 +349,7 @@ private void doSave(File file) throws IOException {
 				if (tt.getRowCount() > MAX_TRUTH_TABLE_ROWS) {
 					out.println(S.fmt("latexKarnaughToBig",(int)Math.ceil(Math.log(MAX_TRUTH_TABLE_ROWS)/Math.log(2))));
 				} else {
-					out.print(S.get("latexKarnaughText"));
+					out.println(S.get("latexKarnaughText"));
 					out.println(SUB_SECTION_SEP);
 					out.println("\\subsection{"+S.get("latexKarnaughEmptyIndexed")+"}");
 					for (int i = 0 ; i < model.getOutputs().vars.size() ; i++) {
@@ -405,7 +405,7 @@ private void doSave(File file) throws IOException {
 						Var outp = model.getTruthTable().getOutputVariable(o);
 						if (outp.width == 1) {
 							Expression exp = model.getOutputExpressions().getMinimalExpression(outp.name);
-							out.println(new ExpressionLatex(exp,outp,1).get()+"\\\\");
+							out.println(new ExpressionLatex(exp,outp,0).get()+"\\\\");
 						} else {
 							for (int idx = outp.width-1 ; idx >= 0 ; idx--) {
 								Expression exp = model.getOutputExpressions().getMinimalExpression(outp.name+":"+idx);

File: src/main/java/com/cburch/draw/util/EditableLabelField.java
Patch:
@@ -47,7 +47,7 @@ public class EditableLabelField extends JTextField {
 
 	public EditableLabelField() {
 		super(10);
-		setBackground(new Color(255, 255, 255, 128));
+		setBackground(new Color(255, 0, 255, 128));
 		setOpaque(false);
 		setBorder(BorderFactory.createCompoundBorder(
 				BorderFactory.createLineBorder(Color.BLACK),

File: src/main/java/com/cburch/logisim/analyze/gui/Analyzer.java
Patch:
@@ -178,8 +178,8 @@ public static void main(String[] args) {
 	private BuildCircuitButton buildCircuit;
 
 	Analyzer() {
-		inputsPanel = new VariableTab(model.getInputs());
-		outputsPanel = new VariableTab(model.getOutputs());
+		inputsPanel = new VariableTab(model.getInputs(), AnalyzerModel.MAX_INPUTS);
+		outputsPanel = new VariableTab(model.getOutputs(), AnalyzerModel.MAX_OUTPUTS);
 		inputsPanel.SetCompanion(outputsPanel, S.get("outputsTab"));
 		outputsPanel.SetCompanion(inputsPanel, S.get("inputsTab"));
 		truthTablePanel = new TableTab(model.getTruthTable());

File: src/main/java/com/cburch/logisim/analyze/gui/ExpressionTab.java
Patch:
@@ -58,6 +58,7 @@
 import com.cburch.logisim.analyze.model.OutputExpressionsListener;
 import com.cburch.logisim.analyze.model.Parser;
 import com.cburch.logisim.analyze.model.ParserException;
+import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.util.StringGetter;
 
 class ExpressionTab extends AnalyzerTab implements TabInterface {
@@ -176,7 +177,7 @@ public ExpressionTab(AnalyzerModel model) {
 		field.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),
 				myListener);
 		field.getDocument().addDocumentListener(myListener);
-		field.setFont(new Font("Monospaced", Font.PLAIN, 14));
+		field.setFont(AppPreferences.getScaledFont(new Font("Monospaced", Font.PLAIN, 14)));
 
 		JPanel buttons = new JPanel();
 		buttons.add(clear);
@@ -190,7 +191,6 @@ public ExpressionTab(AnalyzerModel model) {
 		gc.gridx = 0;
 		gc.gridy = GridBagConstraints.RELATIVE;
 		gc.fill = GridBagConstraints.BOTH;
-
 		JPanel selectorPanel = selector.createPanel();
 		gb.setConstraints(selectorPanel, gc);
 		add(selectorPanel);

File: src/main/java/com/cburch/logisim/analyze/model/AnalyzerModel.java
Patch:
@@ -37,7 +37,7 @@
 
 public class AnalyzerModel {
 	public static final int MAX_INPUTS = 12;
-	public static final int MAX_OUTPUTS = 12;
+	public static final int MAX_OUTPUTS = 64;
 
 	public static final int FORMAT_SUM_OF_PRODUCTS = 0;
 	public static final int FORMAT_PRODUCT_OF_SUMS = 1;

File: src/main/java/com/cburch/logisim/analyze/model/OutputExpressions.java
Patch:
@@ -108,7 +108,7 @@ private void outputsChanged(VariableListEvent event) {
                     outputData.remove(bit);
 			} else if (type == VariableListEvent.REPLACE) {
 				Var oldVar = event.getVariable();
-                Var newVar = model.getInputs().vars.get(event.getIndex());
+                Var newVar = model.getOutputs().vars.get(event.getIndex());
                 for (int b = 0; b < oldVar.width && b < newVar.width; b++) {
                         String oldName = oldVar.bitName(b);
                         String newName = newVar.bitName(b);
@@ -191,7 +191,6 @@ private void invalidate(boolean initializing, boolean formatChanged) {
 					Entry[] outputColumn = computeColumn(model.getTruthTable(),
 							expr);
 					int outputIndex = model.getOutputs().bits.indexOf(output);
-
 					Entry[] currentColumn = table.getOutputColumn(outputIndex);
 					if (!columnsMatch(currentColumn, outputColumn)
 							|| isAllUndefined(outputColumn) || formatChanged) {

File: src/main/java/com/cburch/logisim/gui/generic/CanvasPaneContents.java
Patch:
@@ -32,11 +32,11 @@
 
 import java.awt.Dimension;
 import java.awt.Rectangle;
+import java.awt.event.MouseWheelListener;
 
 import javax.swing.Scrollable;
 
 public interface CanvasPaneContents extends Scrollable {
-	// from Scrollable
 	public Dimension getPreferredScrollableViewportSize();
 
 	public int getScrollableBlockIncrement(Rectangle visibleRect,
@@ -52,4 +52,6 @@ public int getScrollableUnitIncrement(Rectangle visibleRect,
 	public void recomputeSize();
 
 	public void setCanvasPane(CanvasPane pane);
+	
+	public void addMouseWheelListener(MouseWheelListener listener);
 }

File: src/main/java/com/cburch/logisim/gui/menu/MenuFile.java
Patch:
@@ -133,7 +133,7 @@ public void actionPerformed(ActionEvent e) {
 		}else if (src == open) {
 			ProjectActions.doOpen(proj == null ? null : proj.getFrame()
 					.getCanvas(), proj);
-		} else if (src == close) {
+		} else if (src == close && proj != null) {
 			int result = 0;
 			Frame frame = proj.getFrame();
 			if (proj.isFileDirty()) {

File: src/main/java/com/cburch/logisim/std/memory/MemContents.java
Patch:
@@ -278,6 +278,8 @@ public void removeHexModelListener(HexModelListener l) {
 	public void set(long addr, int value) {
 		int page = (int) (addr >>> PAGE_SIZE_BITS);
 		int offs = (int) (addr & PAGE_MASK);
+		if (page < 0 || page >= pages.length)
+			return;
 		int old = pages[page] == null ? 0 : pages[page].get(offs) & mask;
 		int val = value & mask;
 		if (old != val) {

File: src/main/java/com/cburch/logisim/std/hdl/VhdlEntityComponent.java
Patch:
@@ -107,8 +107,9 @@ public void SetSimName(AttributeSet attrs , String SName) {
 		if (attrs == null)
 			return;
 		VhdlEntityAttributes atrs = (VhdlEntityAttributes) attrs;
+		String Label = (attrs.getValue(StdAttr.LABEL) != "") ? getHDLTopName(attrs) : SName;
 		if (atrs.containsAttribute(VhdlSimConstants.SIM_NAME_ATTR))
-			atrs.setValue(VhdlSimConstants.SIM_NAME_ATTR, SName);
+			atrs.setValue(VhdlSimConstants.SIM_NAME_ATTR, Label);
 	}
 	
 	public String GetSimName(AttributeSet attrs) {

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntity.java
Patch:
@@ -68,8 +68,9 @@ public void SetSimName(AttributeSet attrs , String SName) {
 		if (attrs == null)
 			return;
 		VhdlEntityAttributes atrs = (VhdlEntityAttributes) attrs;
+		String Label = (attrs.getValue(StdAttr.LABEL) != "") ? getHDLTopName(attrs) : SName;
 		if (atrs.containsAttribute(VhdlSimConstants.SIM_NAME_ATTR))
-			atrs.setValue(VhdlSimConstants.SIM_NAME_ATTR, SName);
+			atrs.setValue(VhdlSimConstants.SIM_NAME_ATTR, Label);
 	}
 	
 	public String GetSimName(AttributeSet attrs) {

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -40,8 +40,6 @@
 import java.beans.PropertyChangeEvent;
 import java.beans.PropertyChangeListener;
 import java.util.ArrayList;
-import java.util.prefs.PreferenceChangeEvent;
-import java.util.prefs.PreferenceChangeListener;
 
 import javax.swing.Icon;
 import javax.swing.JOptionPane;
@@ -57,7 +55,6 @@
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeEvent;
 import com.cburch.logisim.data.AttributeListener;
-import com.cburch.logisim.data.AttributeOption;
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.Bounds;
 import com.cburch.logisim.data.Direction;

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlContent.java
Patch:
@@ -22,7 +22,6 @@
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.file.LogisimFile;
 import com.cburch.logisim.fpga.designrulecheck.CorrectLabel;
-import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.util.Softwares;
 

File: src/main/java/com/cburch/logisim/vhdl/base/VhdlEntityAttributes.java
Patch:
@@ -8,8 +8,6 @@
 
 import com.cburch.logisim.data.AbstractAttributeSet;
 import com.cburch.logisim.data.Attribute;
-import com.cburch.logisim.data.AttributeEvent;
-import com.cburch.logisim.data.AttributeListener;
 import com.cburch.logisim.data.AttributeOption;
 import com.cburch.logisim.data.AttributeSet;
 import com.cburch.logisim.data.AttributeSets;
@@ -112,7 +110,7 @@ static AttributeSet createBaseAttrs(VhdlContent content) {
     private List<Attribute<?>> instanceAttrs;
     private VhdlEntityListener listener;
 
-	VhdlEntityAttributes(VhdlContent content) {
+	public VhdlEntityAttributes(VhdlContent content) {
 		this.content = content;
 		genericValues = null;
         vhdlInstance = null;

File: src/main/java/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -106,6 +106,7 @@ public String getTitle() {
 			SetInstance(factory);
 			return S.fmt("selectionVarious", "" + totalCount);
 		} else if (factoryCount == 0) {
+			/* TODO: fix null pointer exception on VHDL-circuit */
 			String circName = frame.getCanvas().getCircuit().getName();
 			SetInstance(frame.getCanvas().getCircuit().getSubcircuitFactory());
 			return S.fmt("circuitAttrTitle", circName);

File: src/main/java/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -172,6 +172,7 @@ public static void doAddVhdl(Project proj) {
                         VhdlContent content = VhdlContent.create(name, proj.getLogisimFile());
                         if (content == null)
                             return;
+System.out.println(content.getName()+" "+content.getStaticAttributes());
 			proj.doAction(LogisimFileActions.addVhdl(content));
                         proj.setCurrentHdlModel(content);
 		}

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -150,7 +150,7 @@ static AttributeSet createBaseAttrs(Circuit source, String name) {
 	      "custom", S.getter("circuitCustomAppearance"));
 	public static final Attribute<AttributeOption> APPEARANCE_ATTR = Attributes
 	      .forOption("appearance", S.getter("circuitAppearanceAttr"),
-	          new AttributeOption[] { APPEAR_CLASSIC, APPEAR_EVOLUTION , APPEAR_FPGA, APPEAR_CUSTOM });
+	          new AttributeOption[] { APPEAR_CLASSIC, APPEAR_FPGA, APPEAR_EVOLUTION , APPEAR_CUSTOM });
 
 
 	private static final Attribute<?>[] STATIC_ATTRS = { NAME_ATTR,

File: src/main/java/com/cburch/logisim/circuit/appear/DefaultClassicAppearance.java
Patch:
@@ -20,7 +20,7 @@ public class DefaultClassicAppearance {
 
 	private static final int OFFS = 50;
 	
-	private DefaultClassicAppearance() {}
+	public DefaultClassicAppearance() {}
 	
     public static List<CanvasObject> build(Collection<Instance> pins) {
         Map<Direction,List<Instance>> edge;

File: src/main/java/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -159,7 +159,7 @@ private void performUpdate(Set<Instance> adds, Set<Instance> removes,
 
 		// ensure we have the anchor in the circuit
 		if (anchor == null) {
-			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.getCircuitAppearance(),appearance.IsNamedBoxShapedFixedSize(),appearance.getName(),appearance.GetGraphics())) {
+			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.getCircuitAppearance(),appearance.IsNamedBoxShapedFixedSize(),appearance.getName())) {
 				if (o instanceof AppearanceAnchor) {
 					anchor = (AppearanceAnchor) o;
 				}

File: src/main/java/com/cburch/logisim/gui/generic/ProjectExplorerToolNode.java
Patch:
@@ -79,6 +79,9 @@ public void aboutToSave(HdlModel source) { }
     public void displayChanged(HdlModel source) {
         fireNodeChanged();
     }
+
+    @Override
+    public void appearanceChanged(HdlModel source) { }
     
     public void circuitChanged(CircuitEvent event) {
 		int act = event.getAction();

File: src/main/java/com/cburch/logisim/vhdl/gui/HdlContentEditor.java
Patch:
@@ -127,6 +127,8 @@ public void contentSet(HdlModel source) {
          public void aboutToSave(HdlModel source) { }
          @Override
          public void displayChanged(HdlModel source) { }
+         @Override
+         public void appearanceChanged(HdlModel source) { }
     }
 
 	public static boolean confirmImport(Component parent) {

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -403,7 +403,7 @@ private boolean FlashDevice() {
 	private boolean LoadProgrammerSof() {
 		String FpgaDevice = StripPackageSpeed();
 		String ProgrammerSofFile = new File(VendorSoftware.GetToolPath(VendorSoftware.VendorAltera)).getParent()+
-				                   "common"+File.separator+"devinfo"+File.pathSeparatorChar+"programmer"+
+				                   File.separator+"common"+File.separator+"devinfo"+File.separator+"programmer"+
 				                   File.separator+"sfl_"+FpgaDevice.toLowerCase()+".sof";
 		Reporter.print("==>");
 		Reporter.print("==> "+S.get("AlteraProgSof"));

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderGui.java
Patch:
@@ -661,6 +661,7 @@ public void actionPerformed(ActionEvent e) {
 					                           GetTickfrequency(),
 					                           MyReporter,
 					                           MyBoardInformation,
+					                           "",
 					                           writeToFlash.isSelected(),
 					                           skipHDL.isSelected(),
 					                           true);

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -1085,7 +1085,6 @@ public String GetNetName(NetlistComponent comp, int EndIndex,
 		String Unconnected = (HDLType.equals(VHDL)) ? "OPEN" : "";
 		String FloatingValue = (FloatingNetTiedToGround) ? ZeroValue : OneValue;
 		if ((EndIndex >= 0) && (EndIndex < comp.NrOfEnds())) {
-System.out.println("End correct");
 			ConnectionEnd ThisEnd = comp.getEnd(EndIndex);
 			boolean IsOutput = ThisEnd.IsOutputEnd();
 			if (ThisEnd.NrOfBits() == 1) {

File: src/main/java/com/cburch/logisim/comp/AbstractComponentFactory.java
Patch:
@@ -39,6 +39,8 @@
 import com.cburch.logisim.fpga.designrulecheck.NetlistComponent;
 import com.cburch.logisim.fpga.hdlgenerator.HDLGeneratorFactory;
 import com.cburch.logisim.fpga.hdlgenerator.IOComponentInformationContainer;
+import com.cburch.logisim.instance.StdAttr;
+import com.cburch.logisim.std.wiring.ProbeAttributes;
 import com.cburch.logisim.LogisimVersion;
 import com.cburch.logisim.data.Attribute;
 import com.cburch.logisim.data.AttributeSet;
@@ -95,7 +97,7 @@ public Object getDefaultAttributeValue(Attribute<?> attr, LogisimVersion ver) {
 		}
 		return dfltSet.getValue(attr);
 	}
-
+	
 	public StringGetter getDisplayGetter() {
 		return StringUtil.constantGetter(getName());
 	}

File: src/main/java/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -155,7 +155,6 @@ public AddTool(ComponentFactory source) {
 				ComponentFactory.SHOULD_SNAP, attrs);
 		this.shouldSnap = value == null ? true : value.booleanValue();
 		if (this.attrs.containsAttribute(StdAttr.APPEARANCE)) {
-			System.out.println("Has appearance");
 			AppPreferences.DefaultAppearance.addPropertyChangeListener(this);
 		}
 	}

File: src/main/java/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -51,6 +51,7 @@
 import com.cburch.logisim.data.Direction;
 import com.cburch.logisim.instance.Instance;
 import com.cburch.logisim.instance.StdAttr;
+import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.util.SyntaxChecker;
 
 public class CircuitAttributes extends AbstractAttributeSet {
@@ -116,6 +117,7 @@ public void attributeValueChanged(AttributeEvent e) {
 	static AttributeSet createBaseAttrs(Circuit source, String name) {
 		AttributeSet ret = AttributeSets
 				.fixedSet(STATIC_ATTRS, STATIC_DEFAULTS);
+		ret.setValue(APPEARANCE_ATTR, AppPreferences.getDefaultCircuitAppearance());
 		ret.setValue(CircuitAttributes.NAME_ATTR, name);
 		ret.addAttributeListener(new StaticListener(source));
 		return ret;
@@ -158,7 +160,7 @@ static AttributeSet createBaseAttrs(Circuit source, String name) {
 
 	private static final Object[] STATIC_DEFAULTS = { "", "", Direction.EAST,
 			StdAttr.DEFAULT_LABEL_FONT, 
-			false, "",APPEAR_EVOLUTION };
+			false, "", APPEAR_CLASSIC };
 
 	private static final List<Attribute<?>> INSTANCE_ATTRS = Arrays
 			.asList(new Attribute<?>[] { StdAttr.FACING, StdAttr.LABEL,

File: src/main/java/com/cburch/logisim/circuit/SplitterPainter.java
Patch:
@@ -65,7 +65,7 @@ static void drawLabels(ComponentDrawContext context,
 					if (old == null) {
 						ends[curEnd] = toAdd;
 					} else {
-						ends[curEnd] = old + "," + toAdd;
+						ends[curEnd] = toAdd + "," + old;
 					}
 				}
 				curEnd = bit;
@@ -142,7 +142,7 @@ static void drawLegacy(ComponentDrawContext context,
 			if (fanout > 3) {
 				GraphicsUtil.switchToWidth(g, SPINE_WIDTH);
 				g.setColor(Color.BLACK);
-				g.drawLine(x1 + dx, ySpine, x1 + (fanout - 2) * dx, ySpine);
+				g.drawLine(x1 + (dx>0?10:-10), ySpine, x1 + (fanout - 1) * dx + (dx>0?10:-10), ySpine);
 			} else {
 				g.setColor(Color.BLACK);
 				g.fillOval(x0 - SPINE_DOT / 2, ySpine - SPINE_DOT / 2,
@@ -167,7 +167,7 @@ static void drawLegacy(ComponentDrawContext context,
 			if (fanout >= 3) {
 				GraphicsUtil.switchToWidth(g, SPINE_WIDTH);
 				g.setColor(Color.BLACK);
-				g.drawLine(xSpine, y1 + dy, xSpine, y1 + (fanout - 2) * dy);
+				g.drawLine(xSpine, y1 + (dy>0?10:-10), xSpine, y1 + (fanout - 1) * dy + (dy>0?10:-10));
 			} else {
 				g.setColor(Color.BLACK);
 				g.fillOval(xSpine - SPINE_DOT / 2, y0 - SPINE_DOT / 2,

File: src/main/java/com/cburch/logisim/std/memory/AbstractFlipFlop.java
Patch:
@@ -121,7 +121,7 @@ protected AbstractFlipFlop(String name, String iconName, StringGetter desc,
 				: StdAttr.EDGE_TRIGGER;
 		setAttributes(new Attribute[] { triggerAttribute, StdAttr.LABEL,
 				StdAttr.LABEL_FONT , StdAttr.APPEARANCE }, new Object[] { StdAttr.TRIG_RISING, "",
-				StdAttr.DEFAULT_LABEL_FONT,StdAttr.APPEAR_EVOLUTION });
+				StdAttr.DEFAULT_LABEL_FONT,AppPreferences.getDefaultAppearance() });
 		setInstancePoker(Poker.class);
 		setInstanceLogger(Logger.class);
 

File: src/main/java/com/cburch/logisim/std/memory/CounterAttributes.java
Patch:
@@ -38,6 +38,7 @@
 import com.cburch.logisim.data.AttributeSets;
 import com.cburch.logisim.data.BitWidth;
 import com.cburch.logisim.instance.StdAttr;
+import com.cburch.logisim.prefs.AppPreferences;
 
 class CounterAttributes extends AbstractAttributeSet {
 
@@ -46,10 +47,10 @@ class CounterAttributes extends AbstractAttributeSet {
 	public CounterAttributes() {
 		base = AttributeSets.fixedSet(new Attribute<?>[] { StdAttr.WIDTH,
 				Counter.ATTR_MAX, Counter.ATTR_ON_GOAL, StdAttr.EDGE_TRIGGER,
-				StdAttr.LABEL, StdAttr.LABEL_FONT },
+				StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.APPEARANCE },
 				new Object[] { BitWidth.create(8), Integer.valueOf(0xFF),
 						Counter.ON_GOAL_WRAP, StdAttr.TRIG_RISING, "",
-						StdAttr.DEFAULT_LABEL_FONT });
+						StdAttr.DEFAULT_LABEL_FONT, AppPreferences.getDefaultAppearance() });
 	}
 
 	@Override

File: src/main/java/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -52,6 +52,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
+import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.tools.key.BitWidthConfigurator;
 import com.cburch.logisim.util.GraphicsUtil;
 import com.cburch.logisim.util.StringUtil;
@@ -218,7 +219,7 @@ public Register() {
 		setAttributes(new Attribute[] { StdAttr.WIDTH, StdAttr.TRIGGER,
 				StdAttr.LABEL, StdAttr.LABEL_FONT, ATTR_SHOW_IN_TAB, StdAttr.APPEARANCE},
 				new Object[] { BitWidth.create(8), StdAttr.TRIG_RISING, "",
-						StdAttr.DEFAULT_LABEL_FONT, false, StdAttr.APPEAR_EVOLUTION});
+						StdAttr.DEFAULT_LABEL_FONT, false, AppPreferences.getDefaultAppearance()});
 		setKeyConfigurator(new BitWidthConfigurator(StdAttr.WIDTH));
 		setIconName("register.gif");
 		setInstancePoker(RegisterPoker.class);

File: src/main/java/com/cburch/logisim/std/memory/ShiftRegister.java
Patch:
@@ -49,6 +49,7 @@
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
 import com.cburch.logisim.instance.StdAttr;
+import com.cburch.logisim.prefs.AppPreferences;
 import com.cburch.logisim.tools.key.BitWidthConfigurator;
 import com.cburch.logisim.tools.key.IntegerConfigurator;
 import com.cburch.logisim.tools.key.JoinedConfigurator;
@@ -74,7 +75,7 @@ public ShiftRegister() {
 		setAttributes(new Attribute[] { StdAttr.WIDTH, ATTR_LENGTH, ATTR_LOAD,
 				StdAttr.EDGE_TRIGGER, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.APPEARANCE },
 				new Object[] { BitWidth.ONE, Integer.valueOf(8), Boolean.TRUE,
-						StdAttr.TRIG_RISING, "", StdAttr.DEFAULT_LABEL_FONT, StdAttr.APPEAR_EVOLUTION });
+						StdAttr.TRIG_RISING, "", StdAttr.DEFAULT_LABEL_FONT, AppPreferences.getDefaultAppearance() });
 		setKeyConfigurator(JoinedConfigurator
 				.create(new IntegerConfigurator(ATTR_LENGTH, 1, 32, 0),
 						new BitWidthConfigurator(StdAttr.WIDTH)));

File: src/main/java/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -43,7 +43,7 @@ public class DecoderHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
 	@Override
 	public String getComponentStringIdentifier() {
-		return "DECODER";
+		return "BINDECODER";
 	}
 
 	@Override

File: src/main/java/com/cburch/logisim/fpga/download/Download.java
Patch:
@@ -282,8 +282,7 @@ private boolean PrepareDownLoad() {
 			MyGui.SetStatus(S.get("FPGAState3"));
 			MapPannel.SetBoardInformation(MyBoardInformation);
 			MapPannel.SetMappebleComponents(MyMappableResources);
-			MapPannel.run();
-			if (!MapPannel.isDoneAssignment()) {
+			if (!MapPannel.run()) {
 				MyReporter.AddError(S.get("FPGADownloadAborted"));
 				return false;
 			}

File: src/main/java/com/cburch/logisim/fpga/download/AlteraDownload.java
Patch:
@@ -402,8 +402,9 @@ private boolean FlashDevice() {
 	
 	private boolean LoadProgrammerSof() {
 		String FpgaDevice = StripPackageSpeed();
-		String ProgrammerSofFile = VendorSoftware.GetToolPath(VendorSoftware.VendorAltera)+"../"+
-				                   "common/devinfo/programmer/sfl_"+FpgaDevice.toLowerCase()+".sof";
+		String ProgrammerSofFile = new File(VendorSoftware.GetToolPath(VendorSoftware.VendorAltera)).getParent()+
+				                   "common"+File.separator+"devinfo"+File.pathSeparatorChar+"programmer"+
+				                   File.separator+"sfl_"+FpgaDevice.toLowerCase()+".sof";
 		Reporter.print("==>");
 		Reporter.print("==> "+S.get("AlteraProgSof"));
 		Reporter.print("==>");

File: src/main/java/com/cburch/logisim/fpga/fpgaboardeditor/BoardWriterClass.java
Patch:
@@ -75,6 +75,7 @@ class BoardWriterClass {
 	public static String ImageInformationString = "BoardPicture";
 	public static String MultiPinInformationString = "NrOfPins";
 	public static String MultiPinPrefixString = "FPGAPin_";
+	public static String LabelString = "Label";
 	private DocumentBuilderFactory factory;
 	private DocumentBuilder parser;
 	private Document boardInfo;

File: src/main/java/com/cburch/logisim/fpga/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -83,7 +83,7 @@ protected static String IntToBin(int value, int nr_of_bits, String HDLType) {
 	public static boolean WriteArchitecture(String TargetDirectory,
 			ArrayList<String> Contents, String ComponentName,
 			FPGAReport Reporter, String HDLType) {
-		if (Contents.isEmpty()) {
+		if (Contents == null || Contents.isEmpty()) {
 			Reporter.AddFatalError("INTERNAL ERROR: Empty behavior description for Component '"
 					+ ComponentName + "' received!");
 			return false;

File: src/main/java/com/cburch/logisim/Main.java
Patch:
@@ -47,6 +47,7 @@
 
 public class Main {
 	public static void main(String[] args) throws Exception {
+		System.setProperty("apple.awt.application.name", "Logisim-evolution");
 		try {
 			if (!GraphicsEnvironment.isHeadless())  {
 				UIManager.setLookAndFeel(AppPreferences.LookAndFeel.get());

File: src/main/java/com/cburch/logisim/fpga/fpgagui/FPGACommanderBase.java
Patch:
@@ -322,7 +322,7 @@ protected boolean DownLoadDesign(boolean generateOnly, boolean downloadOnly, Str
 					RootSheet.getNetList(), MyMappableResources,
 					MyBoardInformation, Entities, Behaviors,
 					AppPreferences.HDL_Type.get())
-					&!generateOnly) {
+					&& !generateOnly) {
 				return AlteraDownload.Download(ProjectDir
 						+ HDLPaths[ScriptPath] + File.separator, SourcePath,
 						ProjectDir + HDLPaths[SandboxPath] + File.separator,
@@ -336,7 +336,7 @@ protected boolean DownLoadDesign(boolean generateOnly, boolean downloadOnly, Str
 					MyBoardInformation, Entities, Behaviors,
 					AppPreferences.HDL_Type.get(),
 					writeToFlash)
-					& !generateOnly) {
+					&& !generateOnly) {
 				return XilinxDownload.Download(MyBoardInformation,
 						ProjectDir + HDLPaths[ScriptPath] + File.separator,
 						ProjectDir + HDLPaths[UCFPath] + File.separator,
@@ -352,7 +352,7 @@ protected boolean DownLoadDesign(boolean generateOnly, boolean downloadOnly, Str
 					MyBoardInformation, Entities, Behaviors,
 					AppPreferences.HDL_Type.get(),
 					writeToFlash)
-					& !generateOnly) {
+					&& !generateOnly) {
 				return VivadoDownload.Download(
 						ProjectDir + HDLPaths[ScriptPath] + File.separator,
 						ProjectDir + HDLPaths[SandboxPath] + File.separator,

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -507,13 +507,14 @@ public void doTestVector(Project project, Instance pin[], Value[] val)
 
 			Value v = Pin.FACTORY.getValue(pinState);
 			if (!val[i].compatible(v)) {
-				if (err == null)
+				if (err == null) {
 					err = new FailException(i,
 							pinState.getAttributeValue(StdAttr.LABEL), val[i],
 							v);
-				else
+				} else {
 					err.add(new FailException(i, pinState
 							.getAttributeValue(StdAttr.LABEL), val[i], v));
+				}
 			}
 		}
 

File: src/main/java/com/cburch/logisim/gui/test/Model.java
Patch:
@@ -40,6 +40,7 @@
 import javax.swing.SwingUtilities;
 
 import com.cburch.logisim.circuit.Circuit;
+import com.cburch.logisim.data.FailException;
 import com.cburch.logisim.data.TestException;
 import com.cburch.logisim.data.TestVector;
 import com.cburch.logisim.proj.Project;
@@ -241,9 +242,9 @@ private void updateResultSort() {
 			return;
 		for (int i = failed.size() + passed.size(); i < numPass + numFail; i++) {
 			if (results[i] == null)
-				passed.add(new Integer(i));
+				passed.add(i);
 			else
-				failed.add(new Integer(i));
+				failed.add(i);
 		}
 		fireTestResultsChanged();
 	}

File: src/main/java/com/cburch/logisim/gui/test/TestPanel.java
Patch:
@@ -152,8 +152,7 @@ public void getRowData(int firstRow, int numRows,
 				TestException err = results[row];
 				if (err != null && err instanceof FailException) {
 					failed = true;
-					for (FailException e = (FailException) err; e != null; e = e
-							.getMore()) {
+					for (FailException e : ((FailException) err).getAll()) {
 						int col = e.getColumn();
 						msg[col] = StringUtil.format(Strings
 								.get("expectedValueMessage"), e.getExpected()

File: src/main/java/com/cburch/logisim/gui/test/TestThread.java
Patch:
@@ -89,8 +89,8 @@ public static int doTestVector(Project proj, Circuit circuit,
 				System.out.println();
 				System.err.println(StringUtil.format(Strings.get("testFailed"),
 						Integer.toString(i + 1)));
-				for (; e != null; e = e.getMore())
-					System.out.println("  " + e.getMessage());
+				for (FailException e1 : e.getAll())
+					System.out.println("  " + e1.getMessage());
 				numFail++;
 				continue;
 			} catch (TestException e) {

File: src/main/java/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -507,13 +507,14 @@ public void doTestVector(Project project, Instance pin[], Value[] val)
 
 			Value v = Pin.FACTORY.getValue(pinState);
 			if (!val[i].compatible(v)) {
-				if (err == null)
+				if (err == null) {
 					err = new FailException(i,
 							pinState.getAttributeValue(StdAttr.LABEL), val[i],
 							v);
-				else
+				} else {
 					err.add(new FailException(i, pinState
 							.getAttributeValue(StdAttr.LABEL), val[i], v));
+				}
 			}
 		}
 

File: src/main/java/com/cburch/logisim/gui/test/Model.java
Patch:
@@ -40,6 +40,7 @@
 import javax.swing.SwingUtilities;
 
 import com.cburch.logisim.circuit.Circuit;
+import com.cburch.logisim.data.FailException;
 import com.cburch.logisim.data.TestException;
 import com.cburch.logisim.data.TestVector;
 import com.cburch.logisim.proj.Project;
@@ -241,9 +242,9 @@ private void updateResultSort() {
 			return;
 		for (int i = failed.size() + passed.size(); i < numPass + numFail; i++) {
 			if (results[i] == null)
-				passed.add(new Integer(i));
+				passed.add(i);
 			else
-				failed.add(new Integer(i));
+				failed.add(i);
 		}
 		fireTestResultsChanged();
 	}

File: src/main/java/com/cburch/logisim/gui/test/TestPanel.java
Patch:
@@ -152,8 +152,7 @@ public void getRowData(int firstRow, int numRows,
 				TestException err = results[row];
 				if (err != null && err instanceof FailException) {
 					failed = true;
-					for (FailException e = (FailException) err; e != null; e = e
-							.getMore()) {
+					for (FailException e : ((FailException) err).getAll()) {
 						int col = e.getColumn();
 						msg[col] = StringUtil.format(Strings
 								.get("expectedValueMessage"), e.getExpected()

File: src/main/java/com/cburch/logisim/gui/test/TestThread.java
Patch:
@@ -89,8 +89,8 @@ public static int doTestVector(Project proj, Circuit circuit,
 				System.out.println();
 				System.err.println(StringUtil.format(Strings.get("testFailed"),
 						Integer.toString(i + 1)));
-				for (; e != null; e = e.getMore())
-					System.out.println("  " + e.getMessage());
+				for (FailException e1 : e.getAll())
+					System.out.println("  " + e1.getMessage());
 				numFail++;
 				continue;
 			} catch (TestException e) {

File: src/com/cburch/logisim/std/wiring/PinAttributes.java
Patch:
@@ -45,7 +45,7 @@ class PinAttributes extends ProbeAttributes {
 	private static final List<Attribute<?>> ATTRIBUTES = Arrays
 			.asList(new Attribute<?>[] { StdAttr.FACING, Pin.ATTR_TYPE,
 					StdAttr.WIDTH, Pin.ATTR_TRISTATE, Pin.ATTR_PULL,
-					StdAttr.LABEL, Pin.ATTR_LABEL_LOC, StdAttr.LABEL_FONT,
+					StdAttr.LABEL, StdAttr.LABEL_FONT,
 					RadixOption.ATTRIBUTE });
 
 	BitWidth width = BitWidth.ONE;

File: src/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -114,10 +114,10 @@ public WindowOptions(PreferencesFrame window) {
 		
 		panel.add(new JLabel(" "));
 		panel.add(new JLabel(" "));
-		JLabel important = new JLabel(Strings.getter("windowToolbarPleaserestart"));
+		JLabel important = new JLabel(Strings.get("windowToolbarPleaserestart"));
 	    important.setFont(important.getFont().deriveFont(Font.ITALIC));
 	    panel.add(important);
-	    important = new JLabel(Strings.getter("windowToolbarImportant"));
+	    important = new JLabel(Strings.get("windowToolbarImportant"));
 	    important.setFont(important.getFont().deriveFont(Font.ITALIC));
 	    panel.add(important);
 		panel.add(ZoomLabel);
@@ -135,7 +135,7 @@ public WindowOptions(PreferencesFrame window) {
 			}
 			index++;
 		}
-		panel.add(new JLabel(Strings.getter("windowToolbarLookandfeel")));
+		panel.add(new JLabel(Strings.get("windowToolbarLookandfeel")));
 		panel.add(LookAndFeel);
 		LookAndFeel.addActionListener(Listener);
 

File: src/com/cburch/logisim/gui/prefs/WindowOptions.java
Patch:
@@ -114,10 +114,10 @@ public WindowOptions(PreferencesFrame window) {
 		
 		panel.add(new JLabel(" "));
 		panel.add(new JLabel(" "));
-		JLabel important = new JLabel("Please restart logisim.");
+		JLabel important = new JLabel(Strings.getter("windowToolbarPleaserestart"));
 	    important.setFont(important.getFont().deriveFont(Font.ITALIC));
 	    panel.add(important);
-	    important = new JLabel("Important: changing the below values may have unpridictable results!");
+	    important = new JLabel(Strings.getter("windowToolbarImportant"));
 	    important.setFont(important.getFont().deriveFont(Font.ITALIC));
 	    panel.add(important);
 		panel.add(ZoomLabel);
@@ -135,7 +135,7 @@ public WindowOptions(PreferencesFrame window) {
 			}
 			index++;
 		}
-		panel.add(new JLabel("Look and Feel:"));
+		panel.add(new JLabel(Strings.getter("windowToolbarLookandfeel")));
 		panel.add(LookAndFeel);
 		LookAndFeel.addActionListener(Listener);
 

File: src/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -63,6 +63,8 @@ public LayoutOptions(PreferencesFrame window) {
 						Strings.getter("layoutNamedCircuitBoxes")),
 				new PrefBoolean(AppPreferences.NAMED_CIRCUIT_BOXES_FIXED_SIZE,
 						Strings.getter("layoutNamedCircuitBoxesFixedSize")),
+				new PrefBoolean(AppPreferences.NEW_INPUT_OUTPUT_SHAPES,
+						Strings.getter("layoutUseNewInputOutputSymbols")),
 				};
 
 		for (int i = 0; i < 2; i++) {

File: src/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -528,7 +528,9 @@ public static void updateRecentFile(File file) {
 	public static final PrefMonitor<Boolean> NAMED_CIRCUIT_BOXES = create(new PrefMonitorBoolean(
 			"namedBoxes", true));
 	public static final PrefMonitor<Boolean> NAMED_CIRCUIT_BOXES_FIXED_SIZE = create(new PrefMonitorBoolean(
-			"namedBoxes", true));
+			"namedBoxesFixed", true));
+	public static final PrefMonitor<Boolean> NEW_INPUT_OUTPUT_SHAPES = create(new PrefMonitorBoolean(
+			"oldIO", true));
 	public static final PrefMonitor<Double> SCALE_FACTOR = create(new PrefMonitorDouble(
 			"Scale", (((!GraphicsEnvironment.isHeadless()) ? Toolkit.getDefaultToolkit().getScreenSize().getHeight() : 0)/1000) < 1.0 ? 1.0 :
 				((!GraphicsEnvironment.isHeadless()) ? Toolkit.getDefaultToolkit().getScreenSize().getHeight() : 0)/1000));

File: src/com/cburch/logisim/tools/AddTool.java
Patch:
@@ -504,7 +504,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {
 				AttributeSet base = getBaseAttributes();
 				Bounds bds = source.getOffsetBounds(base).expand(5);
 				matrix.SetBounds(bds);
-				MatrixPlacerDialog diag = new MatrixPlacerDialog(matrix,source.getName());
+				MatrixPlacerDialog diag = new MatrixPlacerDialog(matrix,source.getName(),AutoLabler.IsActive(canvas.getCircuit()));
 				boolean okay = false;
 				while (!okay) {
 					if (!diag.execute())

File: src/com/cburch/logisim/tools/MatrixPlacerDialog.java
Patch:
@@ -39,7 +39,7 @@ public void actionPerformed(ActionEvent e) {
 	private JTextField Label = new JTextField();
 	private String compName;
 	
-	public MatrixPlacerDialog(MatrixPlacerInfo value, String name) {
+	public MatrixPlacerDialog(MatrixPlacerInfo value, String name, boolean AutoLablerActive) {
 		super();
 		compName = name;
 		MatrixInfo = value;
@@ -52,7 +52,7 @@ public MatrixPlacerDialog(MatrixPlacerInfo value, String name) {
 		c.anchor = GridBagConstraints.CENTER;
 		c.weightx = 1;
 		c.weighty = 1;
-		if (MatrixInfo.GetLabel()!=null) {
+		if ((MatrixInfo.GetLabel()!=null)&AutoLablerActive) {
 			c.gridx = 0;
 			c.gridy = 0;
 			c.gridwidth = 4;

File: src/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -403,7 +403,7 @@ private void repair(Project proj, Library lib ) {
 				ArrayList<Circuit> added = new ArrayList<Circuit>();
 				while (iter.hasNext()) {
 					Circuit circ = iter.next();
-					Circuit NewCirc = new Circuit(circ.getName(),ThisLib,circ.GetProject());
+					Circuit NewCirc = new Circuit(circ.getName(),ThisLib,proj);
 					CircuitMutation result = new CircuitMutation(NewCirc);
 					for (Component tool : circ.getNonWires()) {
 						if (AvailableTools.keySet().contains(tool.getFactory().getName().toUpperCase())) {

File: src/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -265,6 +265,7 @@ public Circuit(String name, LogisimFile file, Project proj) {
 		Annotated = false;
 		logiFile = file;
 		staticAttrs.setValue(CircuitAttributes.NAMED_CIRCUIT_BOX, AppPreferences.NAMED_CIRCUIT_BOXES.getBoolean());
+		staticAttrs.setValue(CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE, AppPreferences.NAMED_CIRCUIT_BOXES_FIXED_SIZE.getBoolean());
 		this.proj = proj;
 	}
 

File: src/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -159,7 +159,7 @@ boolean concernsSupercircuit() {
 			return comp.getFactory() instanceof Pin
 					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE || attr == StdAttr.LABEL);
 		case SET_FOR_CIRCUIT :
-			return (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX);
+			return (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX||attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE);
 		default:
 			return false;
 		}

File: src/com/cburch/logisim/circuit/CircuitMutatorImpl.java
Patch:
@@ -163,7 +163,8 @@ public void setForCircuit(Circuit circuit, Attribute<?> attr,
 		log.add(CircuitChange.setForCircuit(circuit, attr, oldValue, newValue));
 		attrs.setValue(a, newValue);
 		if (attr == CircuitAttributes.NAME_ATTR ||
-			attr == CircuitAttributes.NAMED_CIRCUIT_BOX) {
+			attr == CircuitAttributes.NAMED_CIRCUIT_BOX ||
+			attr == CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE) {
 			circuit.getAppearance().recomputeDefaultAppearance();
 		}
 	}

File: src/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -159,7 +159,7 @@ private void performUpdate(Set<Instance> adds, Set<Instance> removes,
 
 		// ensure we have the anchor in the circuit
 		if (anchor == null) {
-			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped(),appearance.getName(),appearance.GetGraphics())) {
+			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped(),appearance.IsNamedBoxShapedFixedSize(),appearance.getName(),appearance.GetGraphics())) {
 				if (o instanceof AppearanceAnchor) {
 					anchor = (AppearanceAnchor) o;
 				}

File: src/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -293,7 +293,7 @@ public void addLibrary(Library lib) {
 				AddTool tool1 = (AddTool) tool;
 				AttributeSet atrs = tool1.getAttributeSet();
 				for (Attribute<?> attr : atrs.getAttributes()) {
-					if (attr.getName().equals("circuit"))
+					if (attr==CircuitAttributes.NAME_ATTR)
 						atrs.setReadOnly(attr, true);
 				}
 			}

File: src/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -404,7 +404,6 @@ private void repair(Project proj, Library lib ) {
 				while (iter.hasNext()) {
 					Circuit circ = iter.next();
 					Circuit NewCirc = new Circuit(circ.getName(),ThisLib,circ.GetProject());
-System.out.println(NewCirc.getStaticAttributes());
 					CircuitMutation result = new CircuitMutation(NewCirc);
 					for (Component tool : circ.getNonWires()) {
 						if (AvailableTools.keySet().contains(tool.getFactory().getName().toUpperCase())) {

File: src/com/cburch/logisim/gui/main/AttrTableSelectionModel.java
Patch:
@@ -167,6 +167,7 @@ public void setValueRequested(Attribute<Object> attr, Object value)
 					if (comp.getFactory() instanceof SubcircuitFactory) {
 						SubcircuitFactory fac = (SubcircuitFactory) comp.getFactory();
 						if (attr.equals(CircuitAttributes.NAMED_CIRCUIT_BOX)||
+							attr.equals(CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE)||
 							attr.equals(CircuitAttributes.NAME_ATTR)) {
 							try {
 								CircuitMutation mutation = new CircuitMutation(fac.getSubcircuit());

File: src/com/cburch/logisim/gui/main/AttrTableToolModel.java
Patch:
@@ -75,7 +75,8 @@ public void setValueRequested(Attribute<Object> attr, Object value) {
 			if (mytool.getFactory() instanceof SubcircuitFactory) {
 				SubcircuitFactory fac = (SubcircuitFactory) mytool.getFactory();
 				if (attr.equals(CircuitAttributes.NAMED_CIRCUIT_BOX)||
-					attr.equals(CircuitAttributes.NAME_ATTR)) {
+						attr.equals(CircuitAttributes.NAMED_CIRCUIT_BOX_FIXED_SIZE)||
+						attr.equals(CircuitAttributes.NAME_ATTR)) {
 					try {
 						CircuitMutation mutation = new CircuitMutation(fac.getSubcircuit());
 						mutation.setForCircuit(attr, value);

File: src/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -61,6 +61,8 @@ public LayoutOptions(PreferencesFrame window) {
 						Strings.getter("layoutAddShowGhosts")), 
 				new PrefBoolean(AppPreferences.NAMED_CIRCUIT_BOXES,
 						Strings.getter("layoutNamedCircuitBoxes")),
+				new PrefBoolean(AppPreferences.NAMED_CIRCUIT_BOXES_FIXED_SIZE,
+						Strings.getter("layoutNamedCircuitBoxesFixedSize")),
 				};
 
 		for (int i = 0; i < 2; i++) {

File: src/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -527,6 +527,8 @@ public static void updateRecentFile(File file) {
 			"showGhosts", true));
 	public static final PrefMonitor<Boolean> NAMED_CIRCUIT_BOXES = create(new PrefMonitorBoolean(
 			"namedBoxes", true));
+	public static final PrefMonitor<Boolean> NAMED_CIRCUIT_BOXES_FIXED_SIZE = create(new PrefMonitorBoolean(
+			"namedBoxes", true));
 	public static final PrefMonitor<Double> SCALE_FACTOR = create(new PrefMonitorDouble(
 			"Scale", (((!GraphicsEnvironment.isHeadless()) ? Toolkit.getDefaultToolkit().getScreenSize().getHeight() : 0)/1000) < 1.0 ? 1.0 :
 				((!GraphicsEnvironment.isHeadless()) ? Toolkit.getDefaultToolkit().getScreenSize().getHeight() : 0)/1000));

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -847,7 +847,7 @@ private void Annotate(boolean ClearExistingLabels) {
 			if (ClearExistingLabels) {
 				root.ClearAnnotationLevel();
 			}
-			root.Annotate(ClearExistingLabels, MyReporter);
+			root.Annotate(ClearExistingLabels, MyReporter,false);
 			MyReporter.AddInfo("Annotation done");
 			/* TODO: Dirty hack, see Circuit.java function Annotate for details */
 			MyProject.repaintCanvas();

File: src/com/cburch/logisim/instance/InstanceFactory.java
Patch:
@@ -42,6 +42,7 @@
 
 import com.cburch.logisim.LogisimVersion;
 import com.cburch.logisim.circuit.CircuitState;
+import com.cburch.logisim.circuit.SubcircuitFactory;
 import com.cburch.logisim.comp.AbstractComponentFactory;
 import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.comp.ComponentDrawContext;

File: src/com/cburch/logisim/proj/ProjectActions.java
Patch:
@@ -273,7 +273,6 @@ public static void doMerge(Component parent, Project baseProject) {
 			}
 			return;
 		}
-		updatecircs(mergelib,baseProject);
 		baseProject.doAction(LogisimFileActions.MergeFile(mergelib, baseProject.getLogisimFile()));
 	}
 

File: src/com/ita/logisim/ttl/TTL.java
Patch:
@@ -41,10 +41,10 @@ public class TTL extends Library {
 			new FactoryDescription("74125",Strings.getter("74125: quad bus buffer, three-state outputs, negative enable"), "ttl.gif", "Ttl74125"),
 			new FactoryDescription("74175",Strings.getter("74175: quad D-flipflop, asynchronous reset"), "ttl.gif", "Ttl74175"),
 			new FactoryDescription("74165", Strings.getter("74165: 8-bit parallel-to-serial shift register"), "ttl.gif", "Ttl74165"),
+			new FactoryDescription("74266", Strings.getter("74266: quad 2-input XNOR gate"), "ttl.gif", "Ttl74266"), 
 			new FactoryDescription("74273", Strings.getter("74273: octal D-Flipflop with clear"), "ttl.gif", "Ttl74273"),
 			new FactoryDescription("74283", Strings.getter("74283: 4-bit binary full adder"), "ttl.gif", "Ttl74283"),
 			new FactoryDescription("74377", Strings.getter("74377: octal D-Flipflop with enable"), "ttl.gif", "Ttl74377"),
-			new FactoryDescription("74266", Strings.getter("74266: quad 2-input XNOR gate"), "ttl.gif", "Ttl74266"), 
 			};
 
 	static final Attribute<Boolean> VCC_GND = Attributes.forBoolean("VccGndPorts", Strings.getter("VccGndPorts"));

File: src/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -613,6 +613,7 @@ public int getControlHeight(AttributeSet attrs) {
 	@Override
 	public String getHDLName(AttributeSet attrs) {
 		StringBuffer CompleteName = new StringBuffer();
+		CompleteName.append("RAM_");
 		CompleteName.append(CorrectLabel.getCorrectLabel(attrs
 				.getValue(StdAttr.LABEL)));
 		if (CompleteName.length() == 0) {

File: src/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -284,6 +284,7 @@ public int getControlHeight(AttributeSet attrs) {
 	@Override
 	public String getHDLName(AttributeSet attrs) {
 		StringBuffer CompleteName = new StringBuffer();
+		CompleteName.append("ROM_");
 		CompleteName.append(CorrectLabel.getCorrectLabel(attrs
 				.getValue(StdAttr.LABEL)));
 		if (CompleteName.length() == 0)

File: src/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -196,7 +196,7 @@ public String getHDLName(AttributeSet attrs) {
 	@Override
 	public Bounds getOffsetBounds(AttributeSet attrs) {
 		return Probe.getOffsetBounds(attrs.getValue(StdAttr.FACING),
-				BitWidth.ONE, RadixOption.RADIX_2);
+				BitWidth.ONE, RadixOption.RADIX_2,false,false);
 	}
 
 	@Override

File: src/com/ita/logisim/io/ProgrammableGenerator.java
Patch:
@@ -355,7 +355,7 @@ protected Object getInstanceFeature(Instance instance, Object key) {
 
 	@Override
 	public Bounds getOffsetBounds(AttributeSet attrs) {
-		return Probe.getOffsetBounds(attrs.getValue(StdAttr.FACING), BitWidth.ONE, RadixOption.RADIX_2);
+		return Probe.getOffsetBounds(attrs.getValue(StdAttr.FACING), BitWidth.ONE, RadixOption.RADIX_2,false,false);
 	}
 
 	@Override

File: src/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -909,8 +909,9 @@ public void run() {
 							System.exit(-1);
 						}
 					} else {
-						logger.error("FATAL ERROR - no simulator available");
-						System.exit(-1);
+						ProjectActions.doOpen(monitor, fileToOpen, substitutions);
+//						logger.error("FATAL ERROR - no simulator available");
+//						System.exit(-1);
 					}
 					numOpened++;
 				} catch (LoadFailedException ex) {

File: src/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -486,7 +486,7 @@ public static void updateRecentFile(File file) {
 	
 	// FPGA Commander Preferences
 	public static final PrefMonitor<String> FPGA_Workspace=create(new PrefMonitorString(
-			"FPGAWorkspace", System.getProperty("user.home")));
+			"FPGAWorkspace", System.getProperty("user.home")+"/logisim_evolution_workspace"));
 	public static final PrefMonitor<String> HDL_Type = create(new PrefMonitorStringOpts(
 			"afterAdd", new String[] { HDLGeneratorFactory.VHDL, HDLGeneratorFactory.VERILOG },
 			HDLGeneratorFactory.VHDL));

File: src/com/ita/logisim/ttl/AbstractGateHDLGenerator.java
Patch:
@@ -102,6 +102,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return !attrs.getValue(TTL.VCC_GND);
 	}
 

File: src/com/ita/logisim/ttl/AbstractTtlGate.java
Patch:
@@ -135,7 +135,7 @@ protected void instanceAttributeChanged(Instance instance, Attribute<?> attr) {
 		}
 	}
 	
-	static Point GetTranslatedXY(InstanceState state, MouseEvent e) {
+	static Point TTLGetTranslatedXY(InstanceState state, MouseEvent e) {
 		int x=0,y=0;
 		Location loc = state.getInstance().getLocation();
 		int height = state.getInstance().getBounds().getHeight();

File: src/com/ita/logisim/ttl/Ttl74165HDLGenerator.java
Patch:
@@ -143,6 +143,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 	

File: src/com/ita/logisim/ttl/Ttl74175HDLGenerator.java
Patch:
@@ -145,6 +145,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 	

File: src/com/ita/logisim/ttl/Ttl74283HDLGenerator.java
Patch:
@@ -106,6 +106,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 

File: src/com/ita/logisim/ttl/Ttl7447HDLGenerator.java
Patch:
@@ -130,6 +130,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 

File: src/com/ita/logisim/ttl/Ttl7474.java
Patch:
@@ -28,7 +28,7 @@ public static class Poker extends InstancePoker {
 		boolean isPressed = true;
 
 		private boolean isInside(InstanceState state, MouseEvent e) {
-			Point p = GetTranslatedXY(state, e);
+			Point p = TTLGetTranslatedXY(state, e);
 			int dx = p.x-37;
 			int dy = p.y-35;
 			int d2 = dx * dx + dy * dy;
@@ -39,7 +39,7 @@ private boolean isInside(InstanceState state, MouseEvent e) {
 		}
 		
 		private int getIndex(InstanceState state, MouseEvent e) {
-			Point p = GetTranslatedXY(state, e);
+			Point p = TTLGetTranslatedXY(state, e);
 			int dx = p.x-37;
 			int dy = p.y-35;
 			int d2 = dx * dx + dy * dy;

File: src/com/ita/logisim/ttl/Ttl7474HDLGenerator.java
Patch:
@@ -88,6 +88,7 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist,
 		return Contents;
 	}
 
+	@Override
 	public SortedMap<String, String> GetPortMap(Netlist Nets,
 			NetlistComponent ComponentInfo, FPGAReport Reporter, String HDLType) {
 		SortedMap<String, String> PortMap = new TreeMap<String, String>();
@@ -147,6 +148,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 }

File: src/com/ita/logisim/ttl/Ttl7485HDLGenerator.java
Patch:
@@ -116,6 +116,8 @@ public String GetSubDir() {
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		/* TODO: Add support for the ones with VCC and Ground Pin */
+		if (attrs==null)
+			return false;
 		return (!attrs.getValue(TTL.VCC_GND)&&(HDLType.equals(HDLGeneratorFactory.VHDL)));
 	}
 

File: src/com/ita/logisim/ttl/Ttl7400.java
Patch:
@@ -43,9 +43,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintAnd(g, x + 40, youtput, portwidth - 4, portheight, true);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up,height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up,height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl7402.java
Patch:
@@ -42,9 +42,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintOr(g, x + 40, youtput, true);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up,height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up,height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl7404.java
Patch:
@@ -45,8 +45,8 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int portwidth = 12, portheight = 6;
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintNot(g, x + 26, youtput, portwidth, portheight);
-		Drawgates.paintOutputgate(g, x + 30, y, x + 26, youtput, up);
-		Drawgates.paintSingleInputgate(g, x + 10, y, x + 26 - portwidth, youtput, up);
+		Drawgates.paintOutputgate(g, x + 30, y, x + 26, youtput, up,height);
+		Drawgates.paintSingleInputgate(g, x + 10, y, x + 26 - portwidth, youtput, up,height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl7408.java
Patch:
@@ -43,9 +43,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintAnd(g, x + 44, youtput, portwidth, portheight, false);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up,height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up,height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl7432.java
Patch:
@@ -43,9 +43,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintOr(g, x + 40, youtput, false);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 40, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 40, youtput, up, height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 40 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 40 - portwidth, youtput, portheight, up, height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl747266.java
Patch:
@@ -43,9 +43,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintXor(g, x + 44, youtput, true);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 48, youtput, up,height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up,height);
 	}
 
 	@Override

File: src/com/ita/logisim/ttl/Ttl7486.java
Patch:
@@ -43,9 +43,9 @@ public void paintInternal(InstancePainter painter, int x, int y, int height, boo
 		int youtput = y + (up ? 20 : 40);
 		Drawgates.paintXor(g, x + 44, youtput, false);
 		// output line
-		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up);
+		Drawgates.paintOutputgate(g, x + 50, y, x + 44, youtput, up,height);
 		// input lines
-		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up);
+		Drawgates.paintDoubleInputgate(g, x + 30, y, x + 44 - portwidth, youtput, portheight, up,height);
 	}
 
 	@Override

File: src/com/cburch/logisim/Main.java
Patch:
@@ -86,7 +86,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 14, 6,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 14, 7,
 			LogisimVersion.FINAL_REVISION);
 
 	public static final String VERSION_NAME = VERSION.toString();

File: src/com/cburch/logisim/gui/prefs/LayoutOptions.java
Patch:
@@ -47,6 +47,8 @@ public LayoutOptions(PreferencesFrame window) {
 		super(window);
 
 		checks = new PrefBoolean[] {
+				new PrefBoolean(AppPreferences.AntiAliassing,
+						Strings.getter("UseAntiAliassing")),
 				new PrefBoolean(AppPreferences.PRINTER_VIEW,
 						Strings.getter("layoutPrinterView")),
 				new PrefBoolean(AppPreferences.ATTRIBUTE_HALO,

File: src/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -566,6 +566,7 @@ public static void updateRecentFile(File file) {
 	public static final PrefMonitor<String> GRAPHICS_ACCELERATION = create(new PrefMonitorStringOpts(
 			"graphicsAcceleration", new String[] { ACCEL_DEFAULT, ACCEL_NONE,
 					ACCEL_OPENGL, ACCEL_D3D }, ACCEL_DEFAULT));
+	public static final PrefMonitor<Boolean> AntiAliassing = create(new PrefMonitorBoolean("AntiAliassing",true));
 
 	// Third party softwares preferences
 	public static final PrefMonitor<String> QUESTA_PATH = create(new PrefMonitorString(

File: src/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -422,7 +422,7 @@ public boolean contains(Component c) {
 	 * in the circuit, the output value are going to be checked.
 	 * The pin[0] is indicating when the simulation is done.
 	 * Once the Simulation is done (pin[0] to 1) the value of pin[1]
-	 * will be check and if the value of pin[1] is 1 the function return true.
+	 * will be checked and if the value of pin[1] is 1 the function return true.
 	 * It will return zero otherwise  */
 	public boolean doTestBench(Project project, Instance pin[], Value[] val) {
 		CircuitState state = project.getCircuitState();

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -693,7 +693,7 @@ protected boolean DownLoad(boolean skipVHDL, String CircuitName) {
 
 			if (canDownload() || skipHDL.isSelected()) {
 				return DownLoadDesign(!canDownload(), skipHDL.isSelected(),
-						circuitsList.getSelectedItem().toString(), writeToFlash.isSelected(), false);
+						circuitsList.getSelectedItem().toString(), writeToFlash.isSelected(), true);
 			}
 		}
 

File: src/com/bfh/logisim/fpgagui/FPGACommanderTests.java
Patch:
@@ -54,7 +54,7 @@ protected boolean DownLoad(boolean skipVHDL, String CircuitName) {
 
 			if (canDownload() || skipVHDL) {
 				return DownLoadDesign(!canDownload(),skipVHDL,
-						CircuitName, writeToFlash, true);
+						CircuitName, writeToFlash, false);
 			}
 		}
 

File: src/com/bfh/logisim/designrulecheck/SimpleDRCContainer.java
Patch:
@@ -161,7 +161,7 @@ public void MarkComponents() {
 			if (obj instanceof Wire) {
 				Wire wire = (Wire)obj;
 				if ((MarkType&MARK_WIRE)!=0) {
-					wire.SetMarked(true);
+					wire.SetDRCHighlight(true);
 				}
 			} else
 			if (obj instanceof Splitter) {
@@ -188,7 +188,7 @@ public void ClearMarks() {
 			if (obj instanceof Wire) {
 				Wire wire = (Wire)obj;
 				if ((MarkType&MARK_WIRE)!=0) {
-					wire.SetMarked(false);
+					wire.SetDRCHighlight(false);
 				}
 			} else
 			if (obj instanceof Splitter) {

File: src/com/bfh/logisim/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -459,7 +459,7 @@ public String GetBusEntryName(NetlistComponent comp, int EndIndex,
 							Contents.append("'bz");
 						}
 					} else {
-						Contents.append(GetZeroVector(ThisEnd.NrOfBits(),
+						Contents.append(GetZeroVector(1, // kwalsh: was ThisEnd.NrOfBits(),
 								FloatingNetTiedToGround, HDLType));
 					}
 				} else {

File: src/com/cburch/logisim/circuit/SimulatorTicker.java
Patch:
@@ -29,8 +29,9 @@
  *******************************************************************************/
 
 package com.cburch.logisim.circuit;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class SimulatorTicker extends Thread {
+class SimulatorTicker extends UniquelyNamedThread {
 	private Simulator.PropagationManager manager;
 	private int ticksPerTickPhase;
 	private int millisPerTickPhase;
@@ -40,6 +41,7 @@ class SimulatorTicker extends Thread {
 	private boolean complete;
 
 	public SimulatorTicker(Simulator.PropagationManager manager) {
+		super("SimulationTicker");
 		this.manager = manager;
 		ticksPerTickPhase = 1;
 		millisPerTickPhase = 1000;

File: src/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -65,6 +65,7 @@
 import com.cburch.logisim.tools.Tool;
 import com.cburch.logisim.util.EventSourceWeakSupport;
 import com.cburch.logisim.util.ListUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 import com.cburch.logisim.util.StringUtil;
 
 public class LogisimFile extends Library implements LibraryEventSource,CircuitListener {
@@ -116,11 +117,12 @@ private boolean NameIsInLibraries(Library lib, String Name) {
 
 	
 
-	private static class WritingThread extends Thread {
+	private static class WritingThread extends UniquelyNamedThread {
 		OutputStream out;
 		LogisimFile file;
 
 		WritingThread(OutputStream out, LogisimFile file) {
+			super("WritingThread");
 			this.out = out;
 			this.file = file;
 		}

File: src/com/cburch/logisim/gui/log/LogThread.java
Patch:
@@ -33,10 +33,11 @@
 import java.io.FileWriter;
 import java.io.IOException;
 import java.io.PrintWriter;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 import com.cburch.logisim.data.Value;
 
-class LogThread extends Thread implements ModelListener {
+class LogThread extends UniquelyNamedThread implements ModelListener {
 	// file will be flushed with at least this frequency
 	private static final int FLUSH_FREQUENCY = 500;
 
@@ -51,6 +52,7 @@ class LogThread extends Thread implements ModelListener {
 	private long lastWrite = 0;
 
 	public LogThread(Model model) {
+		super("LogThread");
 		this.model = model;
 		model.addModelListener(this);
 	}

File: src/com/cburch/logisim/gui/main/CanvasPaintThread.java
Patch:
@@ -31,8 +31,9 @@
 package com.cburch.logisim.gui.main;
 
 import java.awt.Rectangle;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class CanvasPaintThread extends Thread {
+class CanvasPaintThread extends UniquelyNamedThread {
 	private static final int REPAINT_TIMESPAN = 50; // 50 ms between repaints
 
 	private Canvas canvas;
@@ -43,6 +44,7 @@ class CanvasPaintThread extends Thread {
 	private Rectangle repaintRectangle;
 
 	public CanvasPaintThread(Canvas canvas) {
+		super("CanvasPaintThread");
 		this.canvas = canvas;
 		lock = new Object();
 		repaintRequested = false;

File: src/com/cburch/logisim/gui/main/ExportImage.java
Patch:
@@ -72,10 +72,11 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.util.GifEncoder;
 import com.cburch.logisim.util.StringGetter;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 class ExportImage {
 
-	private static class ExportThread extends Thread {
+	private static class ExportThread extends UniquelyNamedThread {
 		Frame frame;
 		Canvas canvas;
 		File dest;
@@ -88,6 +89,7 @@ private static class ExportThread extends Thread {
 		ExportThread(Frame frame, Canvas canvas, File dest, ImageFileFilter f,
 				List<Circuit> circuits, double scale, boolean printerView,
 				ProgressMonitor monitor) {
+			super("ExportThread");
 			this.frame = frame;
 			this.canvas = canvas;
 			this.dest = dest;

File: src/com/cburch/logisim/gui/start/About.java
Patch:
@@ -49,6 +49,7 @@
 import com.cburch.logisim.Main;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.util.GraphicsUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 public class About {
 	private static class MyPanel extends JPanel implements AncestorListener {
@@ -261,11 +262,12 @@ public void paintComponent(Graphics g) {
 		}
 	}
 
-	private static class PanelThread extends Thread {
+	private static class PanelThread extends UniquelyNamedThread {
 		private MyPanel panel;
 		private boolean running = true;
 
 		PanelThread(MyPanel panel) {
+			super("About-PanelThread");
 			this.panel = panel;
 		}
 

File: src/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -59,17 +59,19 @@
 import com.cburch.logisim.std.wiring.Pin;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.util.StringUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 public class TtyInterface {
 
 	// It's possible to avoid using the separate thread using
 	// System.in.available(),
 	// but this doesn't quite work because on some systems, the keyboard input
 	// is not interactively echoed until System.in.read() is invoked.
-	private static class StdinThread extends Thread {
+	private static class StdinThread extends UniquelyNamedThread {
 		private LinkedList<char[]> queue; // of char[]
 
 		public StdinThread() {
+			super("TtyInterface-StdInThread");
 			queue = new LinkedList<char[]>();
 		}
 

File: src/com/cburch/logisim/std/tcl/TclWrapperListenerThread.java
Patch:
@@ -33,8 +33,9 @@
 
 import com.cburch.logisim.circuit.Simulator;
 import com.cburch.logisim.util.SocketClient;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-public class TclWrapperListenerThread extends Thread {
+public class TclWrapperListenerThread extends UniquelyNamedThread {
 
 	SocketClient socket;
 	LinkedList<String> messages;
@@ -43,6 +44,7 @@ public class TclWrapperListenerThread extends Thread {
 	Boolean socket_open = true;
 
 	TclWrapperListenerThread(SocketClient socket, Simulator simulator) {
+		super("TclWrapperListenerThread");
 		this.socket = socket;
 		this.messages = new LinkedList<String>();
 		this.sim = simulator;

File: src/com/cburch/logisim/tools/move/ConnectorThread.java
Patch:
@@ -31,8 +31,9 @@
 package com.cburch.logisim.tools.move;
 
 import com.cburch.logisim.circuit.ReplacementMap;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class ConnectorThread extends Thread {
+class ConnectorThread extends UniquelyNamedThread {
 	public static void enqueueRequest(MoveRequest req, boolean priority) {
 		synchronized (INSTANCE.lock) {
 			if (!req.equals(INSTANCE.processingRequest)) {
@@ -59,6 +60,7 @@ public static boolean isOverrideRequested() {
 	private MoveRequest processingRequest;
 
 	private ConnectorThread() {
+		super("tools-move-ConnectorThread");
 		lock = new Object();
 		overrideRequest = false;
 		nextRequest = null;

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -85,7 +85,7 @@
 import com.cburch.logisim.proj.ProjectListener;
 
 public class FPGACommanderGui extends FPGACommanderBase implements ActionListener,LibraryListener,ProjectListener,SimulatorListener,CircuitListener,WindowListener,
-ouseListener,PreferenceChangeListener {
+MouseListener,PreferenceChangeListener {
 
 	@Override
 	public void preferenceChange(PreferenceChangeEvent pce) {

File: src/com/bfh/logisim/designrulecheck/SimpleDRCContainer.java
Patch:
@@ -161,7 +161,7 @@ public void MarkComponents() {
 			if (obj instanceof Wire) {
 				Wire wire = (Wire)obj;
 				if ((MarkType&MARK_WIRE)!=0) {
-					wire.SetMarked(true);
+					wire.SetDRCHighlight(true);
 				}
 			} else
 			if (obj instanceof Splitter) {
@@ -188,7 +188,7 @@ public void ClearMarks() {
 			if (obj instanceof Wire) {
 				Wire wire = (Wire)obj;
 				if ((MarkType&MARK_WIRE)!=0) {
-					wire.SetMarked(false);
+					wire.SetDRCHighlight(false);
 				}
 			} else
 			if (obj instanceof Splitter) {

File: src/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -100,8 +100,8 @@ public SortedMap<Integer, String> GetParameterList(AttributeSet attrs) {
 	public SortedMap<String, Integer> GetParameterMap(Netlist Nets,
 			NetlistComponent ComponentInfo, FPGAReport Reporter) {
 		SortedMap<String, Integer> ParameterMap = new TreeMap<String, Integer>();
-		int NrOfBits = ComponentInfo.GetComponent().getAttributeSet()
-				.getValue(Multiplier.WIDTH_ATTR).getWidth();
+		int NrOfBits = ComponentInfo.GetComponent().getEnd(0).getWidth()
+				.getWidth();
 		ParameterMap.put(NrOfBitsStr, NrOfBits);
 		ParameterMap.put(CalcBitsStr, 2 * NrOfBits);
 		return ParameterMap;

File: src/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -100,8 +100,8 @@ public SortedMap<Integer, String> GetParameterList(AttributeSet attrs) {
 	public SortedMap<String, Integer> GetParameterMap(Netlist Nets,
 			NetlistComponent ComponentInfo, FPGAReport Reporter) {
 		SortedMap<String, Integer> ParameterMap = new TreeMap<String, Integer>();
-		int NrOfBits = ComponentInfo.GetComponent().getAttributeSet()
-				.getValue(Multiplier.WIDTH_ATTR).getWidth();
+		int NrOfBits = ComponentInfo.GetComponent().getEnd(0).getWidth()
+				.getWidth();
 		ParameterMap.put(NrOfBitsStr, NrOfBits);
 		ParameterMap.put(CalcBitsStr, 2 * NrOfBits);
 		return ParameterMap;

File: src/com/bfh/logisim/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -459,7 +459,7 @@ public String GetBusEntryName(NetlistComponent comp, int EndIndex,
 							Contents.append("'bz");
 						}
 					} else {
-						Contents.append(GetZeroVector(ThisEnd.NrOfBits(),
+						Contents.append(GetZeroVector(1, // kwalsh: was ThisEnd.NrOfBits(),
 								FloatingNetTiedToGround, HDLType));
 					}
 				} else {

File: src/com/cburch/logisim/circuit/SimulatorTicker.java
Patch:
@@ -29,8 +29,9 @@
  *******************************************************************************/
 
 package com.cburch.logisim.circuit;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class SimulatorTicker extends Thread {
+class SimulatorTicker extends UniquelyNamedThread {
 	private Simulator.PropagationManager manager;
 	private int ticksPerTickPhase;
 	private int millisPerTickPhase;
@@ -40,6 +41,7 @@ class SimulatorTicker extends Thread {
 	private boolean complete;
 
 	public SimulatorTicker(Simulator.PropagationManager manager) {
+		super("SimulationTicker");
 		this.manager = manager;
 		ticksPerTickPhase = 1;
 		millisPerTickPhase = 1000;

File: src/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -65,6 +65,7 @@
 import com.cburch.logisim.tools.Tool;
 import com.cburch.logisim.util.EventSourceWeakSupport;
 import com.cburch.logisim.util.ListUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 import com.cburch.logisim.util.StringUtil;
 
 public class LogisimFile extends Library implements LibraryEventSource,CircuitListener {
@@ -116,11 +117,12 @@ private boolean NameIsInLibraries(Library lib, String Name) {
 
 	
 
-	private static class WritingThread extends Thread {
+	private static class WritingThread extends UniquelyNamedThread {
 		OutputStream out;
 		LogisimFile file;
 
 		WritingThread(OutputStream out, LogisimFile file) {
+			super("WritingThread");
 			this.out = out;
 			this.file = file;
 		}

File: src/com/cburch/logisim/gui/log/LogThread.java
Patch:
@@ -33,10 +33,11 @@
 import java.io.FileWriter;
 import java.io.IOException;
 import java.io.PrintWriter;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 import com.cburch.logisim.data.Value;
 
-class LogThread extends Thread implements ModelListener {
+class LogThread extends UniquelyNamedThread implements ModelListener {
 	// file will be flushed with at least this frequency
 	private static final int FLUSH_FREQUENCY = 500;
 
@@ -51,6 +52,7 @@ class LogThread extends Thread implements ModelListener {
 	private long lastWrite = 0;
 
 	public LogThread(Model model) {
+		super("LogThread");
 		this.model = model;
 		model.addModelListener(this);
 	}

File: src/com/cburch/logisim/gui/main/CanvasPaintThread.java
Patch:
@@ -31,8 +31,9 @@
 package com.cburch.logisim.gui.main;
 
 import java.awt.Rectangle;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class CanvasPaintThread extends Thread {
+class CanvasPaintThread extends UniquelyNamedThread {
 	private static final int REPAINT_TIMESPAN = 50; // 50 ms between repaints
 
 	private Canvas canvas;
@@ -43,6 +44,7 @@ class CanvasPaintThread extends Thread {
 	private Rectangle repaintRectangle;
 
 	public CanvasPaintThread(Canvas canvas) {
+		super("CanvasPaintThread");
 		this.canvas = canvas;
 		lock = new Object();
 		repaintRequested = false;

File: src/com/cburch/logisim/gui/main/ExportImage.java
Patch:
@@ -72,10 +72,11 @@
 import com.cburch.logisim.proj.Project;
 import com.cburch.logisim.util.GifEncoder;
 import com.cburch.logisim.util.StringGetter;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 class ExportImage {
 
-	private static class ExportThread extends Thread {
+	private static class ExportThread extends UniquelyNamedThread {
 		Frame frame;
 		Canvas canvas;
 		File dest;
@@ -88,6 +89,7 @@ private static class ExportThread extends Thread {
 		ExportThread(Frame frame, Canvas canvas, File dest, ImageFileFilter f,
 				List<Circuit> circuits, double scale, boolean printerView,
 				ProgressMonitor monitor) {
+			super("ExportThread");
 			this.frame = frame;
 			this.canvas = canvas;
 			this.dest = dest;

File: src/com/cburch/logisim/gui/start/About.java
Patch:
@@ -49,6 +49,7 @@
 import com.cburch.logisim.Main;
 import com.cburch.logisim.data.Value;
 import com.cburch.logisim.util.GraphicsUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 public class About {
 	private static class MyPanel extends JPanel implements AncestorListener {
@@ -261,11 +262,12 @@ public void paintComponent(Graphics g) {
 		}
 	}
 
-	private static class PanelThread extends Thread {
+	private static class PanelThread extends UniquelyNamedThread {
 		private MyPanel panel;
 		private boolean running = true;
 
 		PanelThread(MyPanel panel) {
+			super("About-PanelThread");
 			this.panel = panel;
 		}
 

File: src/com/cburch/logisim/gui/start/TtyInterface.java
Patch:
@@ -59,17 +59,19 @@
 import com.cburch.logisim.std.wiring.Pin;
 import com.cburch.logisim.tools.Library;
 import com.cburch.logisim.util.StringUtil;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
 public class TtyInterface {
 
 	// It's possible to avoid using the separate thread using
 	// System.in.available(),
 	// but this doesn't quite work because on some systems, the keyboard input
 	// is not interactively echoed until System.in.read() is invoked.
-	private static class StdinThread extends Thread {
+	private static class StdinThread extends UniquelyNamedThread {
 		private LinkedList<char[]> queue; // of char[]
 
 		public StdinThread() {
+			super("TtyInterface-StdInThread");
 			queue = new LinkedList<char[]>();
 		}
 

File: src/com/cburch/logisim/std/tcl/TclWrapperListenerThread.java
Patch:
@@ -33,8 +33,9 @@
 
 import com.cburch.logisim.circuit.Simulator;
 import com.cburch.logisim.util.SocketClient;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-public class TclWrapperListenerThread extends Thread {
+public class TclWrapperListenerThread extends UniquelyNamedThread {
 
 	SocketClient socket;
 	LinkedList<String> messages;
@@ -43,6 +44,7 @@ public class TclWrapperListenerThread extends Thread {
 	Boolean socket_open = true;
 
 	TclWrapperListenerThread(SocketClient socket, Simulator simulator) {
+		super("TclWrapperListenerThread");
 		this.socket = socket;
 		this.messages = new LinkedList<String>();
 		this.sim = simulator;

File: src/com/cburch/logisim/tools/move/ConnectorThread.java
Patch:
@@ -31,8 +31,9 @@
 package com.cburch.logisim.tools.move;
 
 import com.cburch.logisim.circuit.ReplacementMap;
+import com.cburch.logisim.util.UniquelyNamedThread;
 
-class ConnectorThread extends Thread {
+class ConnectorThread extends UniquelyNamedThread {
 	public static void enqueueRequest(MoveRequest req, boolean priority) {
 		synchronized (INSTANCE.lock) {
 			if (!req.equals(INSTANCE.processingRequest)) {
@@ -59,6 +60,7 @@ public static boolean isOverrideRequested() {
 	private MoveRequest processingRequest;
 
 	private ConnectorThread() {
+		super("tools-move-ConnectorThread");
 		lock = new Object();
 		overrideRequest = false;
 		nextRequest = null;

File: src/com/cburch/logisim/gui/log/ComponentSelector.java
Patch:
@@ -314,8 +314,8 @@ public OptionNode(ComponentNode parent, Object option) {
 			this.option = option;
 		}
 
-		public Enumeration<?> children() {
-			return Collections.enumeration(Collections.emptySet());
+		public Enumeration<? extends TreeNode> children() {
+			return Collections.enumeration(Collections.<TreeNode>emptySet());
 		}
 
 		public boolean getAllowsChildren() {

File: src/com/cburch/logisim/gui/main/SimulationTreeNode.java
Patch:
@@ -37,7 +37,7 @@
 import com.cburch.logisim.comp.ComponentFactory;
 
 public abstract class SimulationTreeNode implements TreeNode {
-	public abstract Enumeration<?> children();
+	public abstract Enumeration<? extends TreeNode> children();
 
 	public abstract boolean getAllowsChildren();
 

File: src/com/cburch/logisim/gui/log/ComponentSelector.java
Patch:
@@ -314,8 +314,8 @@ public OptionNode(ComponentNode parent, Object option) {
 			this.option = option;
 		}
 
-		public Enumeration<?> children() {
-			return Collections.enumeration(Collections.emptySet());
+		public Enumeration<? extends TreeNode> children() {
+			return Collections.enumeration(Collections.<TreeNode>emptySet());
 		}
 
 		public boolean getAllowsChildren() {

File: src/com/cburch/logisim/gui/main/SimulationTreeNode.java
Patch:
@@ -37,7 +37,7 @@
 import com.cburch.logisim.comp.ComponentFactory;
 
 public abstract class SimulationTreeNode implements TreeNode {
-	public abstract Enumeration<?> children();
+	public abstract Enumeration<? extends TreeNode> children();
 
 	public abstract boolean getAllowsChildren();
 

File: src/com/cburch/logisim/std/tcl/TclConsoleReds.java
Patch:
@@ -71,7 +71,7 @@ public TclConsoleReds() {
 		outputsDesc.add(new PortDescription("S15_sti", "output", 1));
 		outputsDesc.add(new PortDescription("Val_A_sti", "output", 16));
 		outputsDesc.add(new PortDescription("Val_B_sti", "output", 16));
-		outputsDesc.add(new PortDescription("rst", "output", 1));
+		outputsDesc.add(new PortDescription("rst_o", "output", 1));
 
 		inputsDesc.add(new PortDescription("Hex0_obs", "input", 4));
 		inputsDesc.add(new PortDescription("Hex1_obs", "input", 4));
@@ -94,7 +94,9 @@ public TclConsoleReds() {
 		inputsDesc.add(new PortDescription("Result_A_obs", "input", 16));
 		inputsDesc.add(new PortDescription("Result_B_obs", "input", 16));
 		inputsDesc.add(new PortDescription("seg7_obs", "input", 8));
+
 		inputsDesc.add(new PortDescription("sysclk_i", "input", 1));
+		inputsDesc.add(new PortDescription("rst_in", "input", 1));
 
 		Port[] inputs = new Port[inputsDesc.size()];
 		Port[] outputs = new Port[outputsDesc.size()];

File: src/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -44,7 +44,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.locks.Lock;
 
 import javax.swing.JMenuItem;
 import javax.swing.JPopupMenu;

File: src/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -43,7 +43,7 @@ public class RomHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
 	private String GetBin(int value, int nr_of_bits) {
 		StringBuffer Bits = new StringBuffer();
-		int mask = (1 << (nr_of_bits - 1));
+		long mask = (1L << (nr_of_bits - 1));
 		int count;
 		if (nr_of_bits == 1)
 			Bits.append("'");
@@ -65,7 +65,7 @@ private String GetBin(int value, int nr_of_bits) {
 
 	private String GetBin(long value, int nr_of_bits) {
 		StringBuffer Bits = new StringBuffer();
-		long mask = (1 << (nr_of_bits - 1));
+		long mask = (1L << (nr_of_bits - 1));
 		int count;
 		if (nr_of_bits == 1)
 			Bits.append("'");

File: src/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -157,7 +157,7 @@ boolean concernsSupercircuit() {
 			return false;
 		case SET:
 			return comp.getFactory() instanceof Pin
-					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE);
+					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE || attr == StdAttr.LABEL);
 		case SET_FOR_CIRCUIT :
 			return (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX);
 		default:

File: src/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -44,6 +44,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.locks.Lock;
 
 import javax.swing.JMenuItem;
 import javax.swing.JPopupMenu;
@@ -390,7 +391,6 @@ private static void placePins(InstancePainter painter, Map<Direction, List<Insta
 					else if (Direction.WEST == facing) {
 						ldx = width - m.stringWidth(pin_west.getAttributeValue(StdAttr.LABEL)) -20;
 						ldy = - (i* (m.getHeight() + 5) - 2);
-						System.out.println("Size string is : " + ldx  + " x " + ldy );
 					}
 					else if (Direction.EAST == facing) {
 						ldx = -width + 20;

File: src/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -188,7 +188,7 @@ private void updateSize(int rows, int cols, long curClock) {
 
 	static final Attribute<Integer> ATTR_PERSIST = new DurationAttribute(
 			"persist", Strings.getter("ioMatrixPersistenceAttr"), 0,
-			Integer.MAX_VALUE);
+			Integer.MAX_VALUE,true);
 
 	public DotMatrix() {
 		super("DotMatrix", Strings.getter("dotMatrixComponent"));

File: src/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -147,10 +147,10 @@ public static boolean tick(CircuitState circState, int ticks, Component comp) {
 
 	public static final Attribute<Integer> ATTR_HIGH = new DurationAttribute(
 			"highDuration", Strings.getter("clockHighAttr"), 1,
-			Integer.MAX_VALUE);
+			Integer.MAX_VALUE,true);
 
 	public static final Attribute<Integer> ATTR_LOW = new DurationAttribute(
-			"lowDuration", Strings.getter("clockLowAttr"), 1, Integer.MAX_VALUE);
+			"lowDuration", Strings.getter("clockLowAttr"), 1, Integer.MAX_VALUE,true);
 
 	public static final Clock FACTORY = new Clock();
 

File: src/com/cburch/logisim/std/wiring/Wiring.java
Patch:
@@ -55,7 +55,8 @@ public class Wiring extends Library {
 	private static Tool[] ADD_TOOLS = { new AddTool(SplitterFactory.instance),
 			new AddTool(Pin.FACTORY), new AddTool(Probe.FACTORY),
 			new AddTool(Tunnel.FACTORY), new AddTool(PullResistor.FACTORY),
-			new AddTool(Clock.FACTORY), new AddTool(Constant.FACTORY), };
+			new AddTool(Clock.FACTORY), new AddTool(PowerOnReset.FACTORY) , 
+			new AddTool(Constant.FACTORY), };
 
 	private static FactoryDescription[] DESCRIPTIONS = {
 			new FactoryDescription("Power", Strings.getter("powerComponent"),

File: src/com/cburch/logisim/Main.java
Patch:
@@ -33,11 +33,11 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.io.Writer;
+import javax.swing.JOptionPane;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.cburch.logisim.gui.scale.ScaledOptionPane;
 import com.cburch.logisim.gui.start.Startup;
 
 public class Main {
@@ -55,7 +55,7 @@ public static void main(String[] args) throws Exception {
 					Writer result = new StringWriter();
 					PrintWriter printWriter = new PrintWriter(result);
 					e.printStackTrace(printWriter);
-					ScaledOptionPane.showMessageDialog(null, result.toString());
+					JOptionPane.showMessageDialog(null, result.toString());
 					System.exit(-1);
 				}
 			}

File: src/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -44,7 +44,6 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
-import java.util.concurrent.locks.Lock;
 
 import javax.swing.JMenuItem;
 import javax.swing.JPopupMenu;

File: src/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -43,7 +43,7 @@ public class RomHDLGeneratorFactory extends AbstractHDLGeneratorFactory {
 
 	private String GetBin(int value, int nr_of_bits) {
 		StringBuffer Bits = new StringBuffer();
-		int mask = (1 << (nr_of_bits - 1));
+		long mask = (1L << (nr_of_bits - 1));
 		int count;
 		if (nr_of_bits == 1)
 			Bits.append("'");
@@ -65,7 +65,7 @@ private String GetBin(int value, int nr_of_bits) {
 
 	private String GetBin(long value, int nr_of_bits) {
 		StringBuffer Bits = new StringBuffer();
-		long mask = (1 << (nr_of_bits - 1));
+		long mask = (1L << (nr_of_bits - 1));
 		int count;
 		if (nr_of_bits == 1)
 			Bits.append("'");

File: src/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -157,7 +157,7 @@ boolean concernsSupercircuit() {
 			return false;
 		case SET:
 			return comp.getFactory() instanceof Pin
-					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE);
+					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE || attr == StdAttr.LABEL);
 		case SET_FOR_CIRCUIT :
 			return (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX);
 		default:

File: src/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -44,6 +44,7 @@
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.locks.Lock;
 
 import javax.swing.JMenuItem;
 import javax.swing.JPopupMenu;
@@ -390,7 +391,6 @@ private static void placePins(InstancePainter painter, Map<Direction, List<Insta
 					else if (Direction.WEST == facing) {
 						ldx = width - m.stringWidth(pin_west.getAttributeValue(StdAttr.LABEL)) -20;
 						ldy = - (i* (m.getHeight() + 5) - 2);
-						System.out.println("Size string is : " + ldx  + " x " + ldy );
 					}
 					else if (Direction.EAST == facing) {
 						ldx = -width + 20;

File: src/com/cburch/logisim/std/io/DotMatrix.java
Patch:
@@ -188,7 +188,7 @@ private void updateSize(int rows, int cols, long curClock) {
 
 	static final Attribute<Integer> ATTR_PERSIST = new DurationAttribute(
 			"persist", Strings.getter("ioMatrixPersistenceAttr"), 0,
-			Integer.MAX_VALUE);
+			Integer.MAX_VALUE,true);
 
 	public DotMatrix() {
 		super("DotMatrix", Strings.getter("dotMatrixComponent"));

File: src/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -147,10 +147,10 @@ public static boolean tick(CircuitState circState, int ticks, Component comp) {
 
 	public static final Attribute<Integer> ATTR_HIGH = new DurationAttribute(
 			"highDuration", Strings.getter("clockHighAttr"), 1,
-			Integer.MAX_VALUE);
+			Integer.MAX_VALUE,true);
 
 	public static final Attribute<Integer> ATTR_LOW = new DurationAttribute(
-			"lowDuration", Strings.getter("clockLowAttr"), 1, Integer.MAX_VALUE);
+			"lowDuration", Strings.getter("clockLowAttr"), 1, Integer.MAX_VALUE,true);
 
 	public static final Clock FACTORY = new Clock();
 

File: src/com/cburch/logisim/std/wiring/Wiring.java
Patch:
@@ -55,7 +55,8 @@ public class Wiring extends Library {
 	private static Tool[] ADD_TOOLS = { new AddTool(SplitterFactory.instance),
 			new AddTool(Pin.FACTORY), new AddTool(Probe.FACTORY),
 			new AddTool(Tunnel.FACTORY), new AddTool(PullResistor.FACTORY),
-			new AddTool(Clock.FACTORY), new AddTool(Constant.FACTORY), };
+			new AddTool(Clock.FACTORY), new AddTool(PowerOnReset.FACTORY) , 
+			new AddTool(Constant.FACTORY), };
 
 	private static FactoryDescription[] DESCRIPTIONS = {
 			new FactoryDescription("Power", Strings.getter("powerComponent"),

File: src/com/cburch/logisim/Main.java
Patch:
@@ -33,11 +33,11 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.io.Writer;
+import javax.swing.JOptionPane;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.cburch.logisim.gui.scale.ScaledOptionPane;
 import com.cburch.logisim.gui.start.Startup;
 
 public class Main {
@@ -55,7 +55,7 @@ public static void main(String[] args) throws Exception {
 					Writer result = new StringWriter();
 					PrintWriter printWriter = new PrintWriter(result);
 					e.printStackTrace(printWriter);
-					ScaledOptionPane.showMessageDialog(null, result.toString());
+					JOptionPane.showMessageDialog(null, result.toString());
 					System.exit(-1);
 				}
 			}

File: src/com/cburch/logisim/Main.java
Patch:
@@ -33,11 +33,11 @@
 import java.io.PrintWriter;
 import java.io.StringWriter;
 import java.io.Writer;
+import javax.swing.JOptionPane;
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
-import com.cburch.logisim.gui.scale.ScaledOptionPane;
 import com.cburch.logisim.gui.start.Startup;
 
 public class Main {
@@ -55,7 +55,7 @@ public static void main(String[] args) throws Exception {
 					Writer result = new StringWriter();
 					PrintWriter printWriter = new PrintWriter(result);
 					e.printStackTrace(printWriter);
-					ScaledOptionPane.showMessageDialog(null, result.toString());
+					JOptionPane.showMessageDialog(null, result.toString());
 					System.exit(-1);
 				}
 			}

File: src/com/cburch/draw/tools/ToolbarToolItem.java
Patch:
@@ -53,8 +53,8 @@ public Dimension getDimension(Object orientation) {
 		if (icon == null) {
 			return new Dimension(AppPreferences.getScaled(AppPreferences.IconSize), AppPreferences.getScaled(AppPreferences.IconSize));
 		} else {
-			return new Dimension(AppPreferences.getScaled(icon.getIconWidth() + 8),
-					AppPreferences.getScaled(icon.getIconHeight() + 8));
+			return new Dimension(icon.getIconWidth() + 4*AppPreferences.IconBorder,
+					             icon.getIconHeight() + 4*AppPreferences.IconBorder);
 		}
 	}
 

File: src/com/cburch/logisim/gui/generic/AttrTable.java
Patch:
@@ -220,7 +220,8 @@ public Component getTableCellEditorComponent(JTable table,
 
 				currentRow = row;
 				currentEditor = editor;
-				editor.setFont(AppPreferences.getScaledFont(editor.getFont()));
+				if (editor != null)
+					editor.setFont(AppPreferences.getScaledFont(editor.getFont()));
 				return editor;
 			}
 		}

File: src/com/cburch/logisim/gui/main/Clipboard.java
Patch:
@@ -105,7 +105,7 @@ private Clipboard(Selection sel, AttributeSet viewAttrs , boolean ClearLabels) {
 			AttributeSet copyAttrs = (AttributeSet) baseAttrs.clone();
 			/* We clear all labels on the Clipboard */
 			if (copyAttrs.containsAttribute(StdAttr.LABEL)&&ClearLabels) {
-				if (!(base.getFactory() instanceof Tunnel)) {
+				if ((base.getFactory() instanceof Tunnel)) {
 					continue;
 				}
 			}

File: src/com/cburch/logisim/Main.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 20,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 22,
 			LogisimVersion.FINAL_REVISION);
 
 	public static final String VERSION_NAME = VERSION.toString();

File: src/com/bfh/logisim/download/VivadoDownload.java
Patch:
@@ -136,7 +136,7 @@ private static boolean executeTclScript(String binary, String tclScript, String
             List<String> command = new ArrayList<String>();
             command.add(binary);
             command.add("-mode");
-            command.add("tcl");
+            command.add("batch");
             command.add("-source");
             command.add(tclScript);
             ProcessBuilder vivado1 = new ProcessBuilder(command);
@@ -152,7 +152,7 @@ private static boolean executeTclScript(String binary, String tclScript, String
             }
             createProject.waitFor();
             if (createProject.exitValue() != 0) {
-                myReporter.AddFatalError("Failed to Create a Vivado Project, cannot download");
+                myReporter.AddFatalError("Failed to run tcl script, see Console tab for more details");
                 return false;
             }
         } catch (IOException e) {

File: src/com/bfh/logisim/settings/Settings.java
Patch:
@@ -133,7 +133,7 @@ public Settings() {
 
 	private static String[] load(char vendor) {
 		ArrayList<String> progs = new ArrayList<>();
-		String windowsExtension = "exe";
+		String windowsExtension = ".exe";
 		if (vendor == FPGAClass.VendorAltera) {
 			progs.add("quartus_sh");
 			progs.add("quartus_pgm");

File: src/com/bfh/logisim/designrulecheck/Netlist.java
Patch:
@@ -2486,7 +2486,8 @@ public void GetGatedClockComponents(ArrayList<Netlist> HierarchyNetlists,
 						WarnedComponents,Reporter);
 			} else
 			if (fact instanceof Ram) {
-				GatedClock |= HasGatedClock(comp,Ram.CLK,
+				if (IsFlipFlop(comp.GetComponent().getAttributeSet()))
+					GatedClock |= HasGatedClock(comp,Ram.CLK,
 						PinSources,PinWires,PinGatedComponents,
 						NonPinSources,NonPinWires,NonPinGatedComponents,
 						WarnedComponents,Reporter);
@@ -2561,7 +2562,7 @@ public void GetGatedClockComponents(ArrayList<Netlist> HierarchyNetlists,
 				}
 			}
 		} else {
-			/* At toplevel we warn for all all possible gated clocks */
+			/* At toplevel we warn for all possible gated clocks */
 			WarningForGatedClock(NonPinSources,NonPinGatedComponents,NonPinWires,WarnedComponents,HierarchyNetlists,Reporter,Strings.get("NetList_GatedClock"));
 			WarningForGatedClock(PinSources,PinGatedComponents,PinWires,WarnedComponents,HierarchyNetlists,Reporter,Strings.get("NetList_PossibleGatedClock"));
 		}

File: src/com/bfh/logisim/fpgagui/FPGACommanderListWindow.java
Patch:
@@ -172,6 +172,6 @@ public void intervalRemoved(ListDataEvent e) {
 
 	@Override
 	public void contentsChanged(ListDataEvent e) {
-		setTitle((count)?Title+" ("+model.getSize()+")":Title);
+		setTitle((count)?Title+" ("+model.getCountNr()+")":Title);
 	}
 }
\ No newline at end of file

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -1121,6 +1121,7 @@ private boolean performDRC() {
 		if (root == null) {
 			DRCResult |= Netlist.DRC_ERROR;
 		} else {
+			root.getNetList().clear();
 			DRCResult = root.getNetList().DesignRuleCheckResult(MyReporter,
 					HDLType.getText(), true, SheetNames);
 		}

File: src/com/bfh/logisim/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -517,7 +517,7 @@ public String GetBusNameContinues(NetlistComponent comp, int EndIndex,
 		return Result;
 	}
 
-	public String GetClockNetName(NetlistComponent comp, int EndIndex,
+	static public String GetClockNetName(NetlistComponent comp, int EndIndex,
 			Netlist TheNets) {
 		StringBuffer Contents = new StringBuffer();
 		if ((TheNets.GetCurrentHierarchyLevel() != null) && (EndIndex >= 0)

File: src/com/bfh/logisim/download/AlteraDownload.java
Patch:
@@ -242,7 +242,7 @@ public static boolean Download(Settings MySettings, String scriptPath,
 						"Verify that your board is connected and you are ready to download.",
 						"Ready to download ?", JOptionPane.YES_NO_OPTION,
 						JOptionPane.WARNING_MESSAGE, null, options, options[0]) != JOptionPane.YES_OPTION) {
-			MyReporter.AddSevereWarning("Download aborted.");
+			MyReporter.AddWarning("Download aborted.");
 			panel.dispose();
 			return false;
 		}

File: src/com/bfh/logisim/download/XilinxDownload.java
Patch:
@@ -422,7 +422,7 @@ public static boolean Download(Settings MySettings,
 							"Verify that your board is connected and you are ready to download.",
 							"Ready to download ?", JOptionPane.YES_NO_OPTION,
 							JOptionPane.WARNING_MESSAGE, null, options, options[0]) != JOptionPane.YES_OPTION) {
-				MyReporter.AddSevereWarning("Download aborted.");
+				MyReporter.AddWarning("Download aborted.");
 				panel.dispose();
 				return false;
 			}

File: src/com/bfh/logisim/hdlgenerator/CircuitHDLGeneratorFactory.java
Patch:
@@ -1114,14 +1114,14 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 
 		/* First we define the nets */
 		for (Net ThisNet : Nets.GetAllNets()) {
-			if (!ThisNet.isBus()) {
+			if (!ThisNet.isBus()&&ThisNet.IsRootNet()) {
 				SignalMap.put(
 						NetName + Integer.toString(Nets.GetNetId(ThisNet)), 1);
 			}
 		}
 		/* now we define the busses */
 		for (Net ThisNet : Nets.GetAllNets()) {
-			if (ThisNet.isBus()) {
+			if (ThisNet.isBus()&&ThisNet.IsRootNet()) {
 				int NrOfBits = ThisNet.BitWidth();
 				SignalMap.put(
 						BusName + Integer.toString(Nets.GetNetId(ThisNet)),

File: src/com/bfh/logisim/fpgaboardeditor/FPGAIOInformationContainer.java
Patch:
@@ -317,6 +317,8 @@ public FPGAIOInformationContainer(Node DocumentInfo) {
 				|| MyType.equals(IOComponentTypes.PortIO)) {
 			MyType.setNbSwitch(NrOfPins);
 		}
+		if (MyType.equals(IOComponentTypes.Pin))
+			MyActivityLevel = PinActivity.ActiveHigh;
 		MyRectangle = new BoardRectangle(x, y, width, height);
 	}
 	

File: src/com/bfh/logisim/hdlgenerator/HDLColorRenderer.java
Patch:
@@ -54,13 +54,13 @@ public Component getTableCellRendererComponent (
 			setBorder(border);
 		} else {
 			String myInfo = (String) Info;
-			if (myInfo.equals(RequiredFieldString)) {
+			if (myInfo != null && myInfo.equals(RequiredFieldString)) {
 				setBackground(Color.YELLOW);
 				setForeground(Color.BLUE);
 				setText("HDL Required");
 				setHorizontalAlignment(JLabel.CENTER);
 				setBorder(null);
-			} else if (myInfo.contains("#")&& myInfo.indexOf('#')==0&&
+			} else if (myInfo != null && myInfo.contains("#")&& myInfo.indexOf('#')==0&&
 					   (myInfo.length() == 7 || myInfo.length() == 9)) {
 				int red,green,blue,alpha;				
 				red = Integer.valueOf(myInfo.substring(1, 3), 16);

File: src/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -78,7 +78,7 @@ public static Wire create(Location e0, Location e1) {
 	public static final int WIDTH_BUS = 4;
 	public static final int HIGHLIGHTED_WIDTH = 4;
 	public static final int HIGHLIGHTED_WIDTH_BUS = 5;
-	public static final double DOT_MULTIPLY_FACTOR = 1.5; /* multiply factor for the intersection points */
+	public static final double DOT_MULTIPLY_FACTOR = 1.35; /* multiply factor for the intersection points */
 	public static final AttributeOption VALUE_HORZ = new AttributeOption(
 			"horz", Strings.getter("wireDirectionHorzOption"));
 	public static final AttributeOption VALUE_VERT = new AttributeOption(

File: src/com/bfh/logisim/hdlgenerator/HDLColorRenderer.java
Patch:
@@ -54,13 +54,13 @@ public Component getTableCellRendererComponent (
 			setBorder(border);
 		} else {
 			String myInfo = (String) Info;
-			if (myInfo.equals(RequiredFieldString)) {
+			if (myInfo != null && myInfo.equals(RequiredFieldString)) {
 				setBackground(Color.YELLOW);
 				setForeground(Color.BLUE);
 				setText("HDL Required");
 				setHorizontalAlignment(JLabel.CENTER);
 				setBorder(null);
-			} else if (myInfo.contains("#")&& myInfo.indexOf('#')==0&&
+			} else if (myInfo != null && myInfo.contains("#")&& myInfo.indexOf('#')==0&&
 					   (myInfo.length() == 7 || myInfo.length() == 9)) {
 				int red,green,blue,alpha;				
 				red = Integer.valueOf(myInfo.substring(1, 3), 16);

File: src/com/cburch/logisim/std/io/PortHDLGeneratorFactory.java
Patch:
@@ -458,6 +458,6 @@ public String GetSubDir() {
 
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
-		return true;
+		return HDLType.equals(Settings.VHDL);
 	}
 }

File: src/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -333,6 +333,6 @@ public String GetSubDir() {
 
 	@Override
 	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
-		return true;
+		return HDLType.equals(Settings.VHDL);
 	}
 }

File: src/com/bfh/logisim/fpgagui/FPGACommanderTextWindow.java
Patch:
@@ -49,7 +49,7 @@ public class FPGACommanderTextWindow extends JFrame implements KeyListener,Windo
 	private int FontSize = 14;
 	private String Title;
 	private int LineCount;
-	private JTextArea textArea = new JTextArea(50, 80);
+	private JTextArea textArea = new JTextArea(25, 80);
 	private boolean IsActive = false;
 	private boolean count;
 	

File: src/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -37,6 +37,7 @@
 import java.util.Iterator;
 import java.util.List;
 
+import com.bfh.logisim.designrulecheck.CircuitNetlist;
 import com.cburch.logisim.comp.Component;
 import com.cburch.logisim.comp.ComponentDrawContext;
 import com.cburch.logisim.comp.ComponentFactory;
@@ -98,7 +99,7 @@ public static Wire create(Location e0, Location e1) {
 	final Location e1;
 	final boolean is_x_equal;
 	private boolean ShowAsMarked = false;
-	private Color MarkColor = Color.magenta;
+	private Color MarkColor = CircuitNetlist.DRC_WIRE_MARK_COLOR;
 
 	private Wire(Location e0, Location e1) {
 		this.is_x_equal = e0.getX() == e1.getX();

File: src/com/cburch/logisim/util/Icons.java
Patch:
@@ -40,7 +40,7 @@
 import com.cburch.logisim.data.Direction;
 
 public class Icons {
-	public static Icon getIcon(String name) {
+	public static ImageIcon getIcon(String name) {
 		java.net.URL url = Icons.class.getClassLoader().getResource(
 				path + "/" + name);
 		if (url == null)

File: src/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -80,7 +80,7 @@ public ArrayList<String> GetArchitecture(Netlist TheNetlist,
 			Contents.add("   make_state : PROCESS(Clock, ShiftEnable, Tick, Reset, s_state_next, ParLoad)");
 			Contents.add("      VARIABLE temp : std_logic_vector( 0 DOWNTO 0 );");
 			Contents.add("   BEGIN");
-			Contents.add("      temp := std_logic_vector(to_unsigned("+ActiveLevelStr+ ",1))");
+			Contents.add("      temp := std_logic_vector(to_unsigned("+ActiveLevelStr+ ",1));");
 			Contents.add("      IF (Reset = '1') THEN s_state_reg <= (OTHERS => '0');");
 			Contents.add("      ELSIF (Clock'event AND (Clock = temp(0) )) THEN");
 			Contents.add("         IF (((ShiftEnable = '1') OR (ParLoad = '1')) AND (Tick = '1')) THEN");

File: src/com/bfh/logisim/fpgagui/FPGAReport.java
Patch:
@@ -37,15 +37,15 @@ public FPGAReport(FPGACommanderGui parrent) {
 		myCommander = parrent;
 	}
 
-	public void AddError(String Message) {
+	public void AddError(Object Message) {
 		myCommander.AddErrors(Message);
 	}
 
 	public void AddFatalError(String Message) {
 		myCommander.AddErrors("***FATAL*** " + Message);
 	}
 
-	public void AddInfo(String Message) {
+	public void AddInfo(Object Message) {
 		myCommander.AddInfo(Message);
 	}
 
@@ -57,7 +57,7 @@ public void AddSevereWarning(String Message) {
 		myCommander.AddWarning("**SEVERE** " + Message);
 	}
 
-	public void AddWarning(String Message) {
+	public void AddWarning(Object Message) {
 		myCommander.AddWarning(Message);
 	}
 

File: src/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -87,7 +87,7 @@ public void attributeValueChanged(AttributeEvent e) {
 				field.setFont((Font) e.getValue());
 		} else if (attr == StdAttr.LABEL_COLOR) {
 			fontColor = (Color) e.getValue(); 
-		} else if (attr == StdAttr.LABEL_VISABILITY) {
+		} else if (attr == StdAttr.LABEL_VISIBILITY) {
 			LabelIsVisable = (Boolean) e.getValue();
 		}
 	}
@@ -171,8 +171,8 @@ void update(Attribute<String> labelAttr, Attribute<Font> fontAttr, int x,
 		this.valign = valign;
 		boolean shouldReg = shouldRegister();
 		AttributeSet attrs = comp.getAttributeSet();
-		if (attrs.containsAttribute(StdAttr.LABEL_VISABILITY))
-			LabelIsVisable = attrs.getValue(StdAttr.LABEL_VISABILITY);
+		if (attrs.containsAttribute(StdAttr.LABEL_VISIBILITY))
+			LabelIsVisable = attrs.getValue(StdAttr.LABEL_VISIBILITY);
 		if (!wasReg && shouldReg)
 			attrs.addAttributeListener(this);
 		if (wasReg && !shouldReg)

File: src/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -71,8 +71,8 @@ public interface StdAttr {
 	public static final Attribute<Color> LABEL_COLOR = Attributes.forColor(
 			"labelcolor", Strings.getter("ioLabelColorAttr"));
 	public static final Color DEFAULT_LABEL_COLOR = Color.BLUE;
-	public static final Attribute<Boolean> LABEL_VISABILITY = Attributes.forBoolean(
-			"labelvisable", Strings.getter("stdLabelVisability")); 
+	public static final Attribute<Boolean> LABEL_VISIBILITY = Attributes.forBoolean(
+			"labelvisible", Strings.getter("stdLabelVisibility")); 
 	
 	public static final Attribute<String> DUMMY = Attributes.forHidden();
 }

File: src/com/cburch/logisim/std/hdl/VhdlEntityAttributes.java
Patch:
@@ -61,7 +61,7 @@ public static HdlContentEditor getContentEditor(Window source,
 	}
 
 	private static List<Attribute<?>> attributes = Arrays.asList(
-			VhdlEntity.CONTENT_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISABILITY);
+			VhdlEntity.CONTENT_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISIBILITY);
 
 	private final static WeakHashMap<HdlContent, HdlContentEditor> windowRegistry = new WeakHashMap<HdlContent, HdlContentEditor>();
 
@@ -98,7 +98,7 @@ public <V> V getValue(Attribute<V> attr) {
 		if (attr == StdAttr.LABEL_FONT) {
 			return (V) labelFont;
 		}
-		if (attr == StdAttr.LABEL_VISABILITY) {
+		if (attr == StdAttr.LABEL_VISIBILITY) {
 			return (V) labelVisable;
 		}
 		return null;
@@ -128,7 +128,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			labelFont = newFont;
 			fireAttributeValueChanged(attr, value,null);
 		}
-		if (attr == StdAttr.LABEL_VISABILITY) {
+		if (attr == StdAttr.LABEL_VISIBILITY) {
 			Boolean newvis = (Boolean) value;
 			if (labelVisable.equals(newvis))
 				return;

File: src/com/cburch/logisim/std/io/Button.java
Patch:
@@ -98,7 +98,7 @@ public Button() {
 		super("Button", Strings.getter("buttonComponent"));
 		setAttributes(new Attribute[] { StdAttr.FACING, Io.ATTR_COLOR,
 				StdAttr.LABEL, Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT,
-				StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY }, new Object[] { Direction.EAST,
+				StdAttr.LABEL_COLOR, StdAttr.LABEL_VISIBILITY }, new Object[] { Direction.EAST,
 				Color.WHITE, "", Direction.WEST, StdAttr.DEFAULT_LABEL_FONT,
 				StdAttr.DEFAULT_LABEL_COLOR,true });
 		setFacingAttribute(StdAttr.FACING);

File: src/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -125,7 +125,7 @@ public DipSwitch() {
 		super("DipSwitch", Strings.getter("DipSwitchComponent"));
 		int dipSize = 8;
 		setAttributes(new Attribute[] { StdAttr.LABEL, Io.ATTR_LABEL_LOC,
-				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY, ATTR_SIZE },
+				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISIBILITY, ATTR_SIZE },
 				new Object[] { "", Direction.EAST, StdAttr.DEFAULT_LABEL_FONT,
 						StdAttr.DEFAULT_LABEL_COLOR, false, dipSize });
 		setFacingAttribute(StdAttr.FACING);

File: src/com/cburch/logisim/std/io/Led.java
Patch:
@@ -72,7 +72,7 @@ public Led() {
 		super("LED", Strings.getter("ledComponent"));
 		setAttributes(new Attribute[] { StdAttr.FACING, Io.ATTR_ON_COLOR,
 				Io.ATTR_OFF_COLOR, Io.ATTR_ACTIVE, StdAttr.LABEL,
-				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY },
+				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISIBILITY },
 				new Object[] { Direction.WEST, new Color(240, 0, 0),
 						Color.DARK_GRAY, Boolean.TRUE, "", Direction.EAST,
 						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, true });

File: src/com/cburch/logisim/std/io/PortIO.java
Patch:
@@ -82,7 +82,7 @@ public PortIO() {
 		super("PortIO", Strings.getter("pioComponent"));
 		int portSize = 8;
 		setAttributes(new Attribute[] { StdAttr.LABEL, Io.ATTR_LABEL_LOC,
-				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY, ATTR_SIZE, ATTR_BUS },
+				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISIBILITY, ATTR_SIZE, ATTR_BUS },
 				new Object[] { "", Direction.EAST, StdAttr.DEFAULT_LABEL_FONT,
 						StdAttr.DEFAULT_LABEL_COLOR, false, portSize, BUSES });
 		setFacingAttribute(StdAttr.FACING);

File: src/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -87,7 +87,7 @@ public static final ArrayList<String> GetLabels() {
 	public RGBLed() {
 		super("RGBLED", Strings.getter("RGBledComponent"));
 		setAttributes(new Attribute[] { Io.ATTR_ACTIVE, StdAttr.LABEL,
-				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY },
+				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISIBILITY },
 				new Object[] { Boolean.TRUE, "", Direction.EAST,
 						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, true });
 		setFacingAttribute(StdAttr.FACING);

File: src/com/cburch/logisim/std/io/SevenSegment.java
Patch:
@@ -133,7 +133,7 @@ public SevenSegment() {
 		super("7-Segment Display", Strings.getter("sevenSegmentComponent"));
 		setAttributes(new Attribute[] { Io.ATTR_ON_COLOR, Io.ATTR_OFF_COLOR,
 				Io.ATTR_BACKGROUND, Io.ATTR_ACTIVE, StdAttr.LABEL,
-				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_VISABILITY }, new Object[] {
+				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_VISIBILITY }, new Object[] {
 				new Color(240, 0, 0), DEFAULT_OFF, Io.DEFAULT_BACKGROUND,
 				Boolean.TRUE, "", Direction.EAST, StdAttr.DEFAULT_LABEL_FONT, false });
 		setOffsetBounds(Bounds.create(-5, 0, 40, 60));

File: src/com/cburch/logisim/std/memory/RamAttributes.java
Patch:
@@ -76,7 +76,7 @@ static HexFrame getHexFrame(MemContents value, Project proj) {
 	private static List<Attribute<?>> ATTRIBUTES = Arrays
 			.asList(new Attribute<?>[] { Mem.ADDR_ATTR, Mem.DATA_ATTR,
 					StdAttr.TRIGGER, ATTR_DBUS, ATTR_ByteEnables,
-					Ram.CONTENTS_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISABILITY });
+					Ram.CONTENTS_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISIBILITY });
 
 	private static WeakHashMap<MemContents, HexFrame> windowRegistry = new WeakHashMap<MemContents, HexFrame>();
 	private BitWidth addrBits = BitWidth.create(8);
@@ -136,7 +136,7 @@ public <V> V getValue(Attribute<V> attr) {
 		if (attr == StdAttr.LABEL_FONT) {
 			return (V) LabelFont;
 		}
-		if (attr == StdAttr.LABEL_VISABILITY) {
+		if (attr == StdAttr.LABEL_VISIBILITY) {
 			return (V) LabelVisable;
 		}
 		if (attr == ATTR_ByteEnables) {
@@ -227,7 +227,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			}
 			LabelFont = NewFont;
 			fireAttributeValueChanged(attr, value,null);
-		} else if (attr == StdAttr.LABEL_VISABILITY) {
+		} else if (attr == StdAttr.LABEL_VISIBILITY) {
 			Boolean newVis = (Boolean) value;
 			if (LabelVisable.equals(newVis))
 				return;

File: src/com/cburch/logisim/std/memory/RomAttributes.java
Patch:
@@ -65,7 +65,7 @@ static void register(MemContents value, Project proj) {
 
 	private static List<Attribute<?>> ATTRIBUTES = Arrays
 			.asList(new Attribute<?>[] { Mem.ADDR_ATTR, Mem.DATA_ATTR,
-					Rom.CONTENTS_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISABILITY });
+					Rom.CONTENTS_ATTR, StdAttr.LABEL, StdAttr.LABEL_FONT, StdAttr.LABEL_VISIBILITY });
 
 	private static WeakHashMap<MemContents, RomContentsListener> listenerRegistry = new WeakHashMap<MemContents, RomContentsListener>();
 
@@ -112,7 +112,7 @@ public <V> V getValue(Attribute<V> attr) {
 		if (attr == StdAttr.LABEL_FONT) {
 			return (V) LabelFont;
 		}
-		if (attr == StdAttr.LABEL_VISABILITY) {
+		if (attr == StdAttr.LABEL_VISIBILITY) {
 			return (V) LabelVisable;
 		}
 		return null;
@@ -158,7 +158,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 				return;
 			LabelFont = NewFont;
 			fireAttributeValueChanged(attr, value,null);
-		} else if (attr == StdAttr.LABEL_VISABILITY) {
+		} else if (attr == StdAttr.LABEL_VISIBILITY) {
 			Boolean newVis = (Boolean) value;
 			if (LabelVisable.equals(newVis))
 				return;

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -949,7 +949,6 @@ private boolean performDRC() {
 		if (root == null) {
 			DRCResult = Netlist.DRC_ERROR;
 		} else {
-			root.getNetList().ClearNetlist();
 			DRCResult = root.getNetList().DesignRuleCheckResult(MyReporter,
 					HDLType.getText(), true, SheetNames);
 		}

File: src/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -244,6 +244,7 @@ public Circuit(String name, LogisimFile file, Project proj) {
 		locker = new CircuitLocker();
 		circuitsUsingThis = new WeakHashMap<Component, Circuit>();
 		MyNetList = new Netlist(this);
+		addCircuitListener(MyNetList);
 		Annotated = false;
 		logiFile = file;
 		staticAttrs.setValue(CircuitAttributes.NAMED_CIRCUIT_BOX, AppPreferences.NAMED_CIRCUIT_BOXES.getBoolean());

File: src/com/cburch/logisim/circuit/CircuitWires.java
Patch:
@@ -491,6 +491,8 @@ void draw(ComponentDrawContext context, Collection<Component> hidden) {
 				} else {
 					g.setColor(Color.BLACK);
 				}
+				if (w.IsSetAsMarked())
+					g.setColor(w.GetMarkColor());
 				if (highlighted.containsWire(w)) {
 					int width;
 					if (wb.isBus())

File: src/com/bfh/logisim/fpgagui/MappableResourcesContainer.java
Patch:
@@ -577,15 +577,17 @@ public void rebuildMappedLists() {
 	 */
 	private ArrayList<BoardRectangle> RemoveUsedItems(
 			ArrayList<BoardRectangle> List, int pinNeeded) {
+		int used = pinNeeded;
 		Iterator<BoardRectangle> ListIterator = List.iterator();
 		while (ListIterator.hasNext()) {
 			BoardRectangle current = ListIterator.next();
 			if (mappedList.containsValue(current)) {
 				ListIterator.remove();
+				used--;
 			}
 		}
 		/* We dont want to list Pin if they are not enough */
-		if (List.size() < pinNeeded) {
+		if (List.size() < used) {
 			List.clear();
 		}
 		return List;

File: src/com/cburch/logisim/circuit/CircuitChange.java
Patch:
@@ -158,6 +158,8 @@ boolean concernsSupercircuit() {
 		case SET:
 			return comp.getFactory() instanceof Pin
 					&& (attr == StdAttr.WIDTH || attr == Pin.ATTR_TYPE);
+		case SET_FOR_CIRCUIT :
+			return (attr == CircuitAttributes.NAME_ATTR || attr == CircuitAttributes.NAMED_CIRCUIT_BOX);
 		default:
 			return false;
 		}

File: src/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -170,8 +170,8 @@ public AttributeSetTableModel(AttributeSet attrs) {
 		}
 	}
 	
-	public void SetInstance(ComponentFactory comp) {
-		CompInst = comp;
+	public void SetInstance(ComponentFactory fact) {
+		CompInst = fact;
 	}
 	
 	public void SetIsTool() {

File: src/com/cburch/logisim/circuit/CircuitAttributes.java
Patch:
@@ -113,6 +113,7 @@ public void attributeValueChanged(AttributeEvent e) {
 					} else {
 						source.fireEvent(CircuitEvent.ACTION_CHECK_NAME, OldName);
 						source.fireEvent(CircuitEvent.ACTION_SET_NAME, NewName);
+						source.RecalcDefaultShape();
 					}
 				}
 			}

File: src/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -159,7 +159,7 @@ private void performUpdate(Set<Instance> adds, Set<Instance> removes,
 
 		// ensure we have the anchor in the circuit
 		if (anchor == null) {
-			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped(),appearance.GetGraphics())) {
+			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped(),appearance.getName(),appearance.GetGraphics())) {
 				if (o instanceof AppearanceAnchor) {
 					anchor = (AppearanceAnchor) o;
 				}

File: src/com/cburch/logisim/std/io/Button.java
Patch:
@@ -99,7 +99,7 @@ public Button() {
 		setAttributes(new Attribute[] { StdAttr.FACING, Io.ATTR_COLOR,
 				StdAttr.LABEL, Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT,
 				StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY }, new Object[] { Direction.EAST,
-				Color.WHITE, "", Io.LABEL_CENTER, StdAttr.DEFAULT_LABEL_FONT,
+				Color.WHITE, "", Direction.WEST, StdAttr.DEFAULT_LABEL_FONT,
 				StdAttr.DEFAULT_LABEL_COLOR,true });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("button.gif");

File: src/com/cburch/logisim/std/io/Led.java
Patch:
@@ -74,8 +74,8 @@ public Led() {
 				Io.ATTR_OFF_COLOR, Io.ATTR_ACTIVE, StdAttr.LABEL,
 				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY },
 				new Object[] { Direction.WEST, new Color(240, 0, 0),
-						Color.DARK_GRAY, Boolean.TRUE, "", Io.LABEL_CENTER,
-						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, false });
+						Color.DARK_GRAY, Boolean.TRUE, "", Direction.EAST,
+						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, true });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("led.gif");
 		setPorts(new Port[] { new Port(0, 0, Port.INPUT, 1) });

File: src/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -88,8 +88,8 @@ public RGBLed() {
 		super("RGBLED", Strings.getter("RGBledComponent"));
 		setAttributes(new Attribute[] { Io.ATTR_ACTIVE, StdAttr.LABEL,
 				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, StdAttr.LABEL_VISABILITY },
-				new Object[] { Boolean.TRUE, "", Io.LABEL_CENTER,
-						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, false });
+				new Object[] { Boolean.TRUE, "", Direction.EAST,
+						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR, true });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("rgbled.gif");
 		Port[] ps = new Port[3];

File: src/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -379,7 +379,7 @@ public void keyPressed(Canvas canvas, KeyEvent e) {
 					SetAttributeAction act = new SetAttributeAction(
 							canvas.getCircuit(),
 							Strings.getter("changeComponentAttributesAction"));
-					KeyTaken |= AutoLabler.LabelKeyboardHandler(KeybEvent, comp.getAttributeSet(), comp.getFactory().getDisplayName(), comp,canvas.getCircuit(),act,true);
+					KeyTaken |= AutoLabler.LabelKeyboardHandler(KeybEvent, comp.getAttributeSet(), comp.getFactory().getDisplayName(), comp,comp.getFactory(),canvas.getCircuit(),act,true);
 					if (!act.isEmpty())
 						canvas.getProject().doAction(act);
 				}
@@ -556,7 +556,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {
     					SetAttributeAction act = new SetAttributeAction(
     							canvas.getCircuit(),
     							Strings.getter("changeComponentAttributesAction"));
-    					AutoLabler.AskAndSetLabel(comp.getFactory().getDisplayName(),OldLabel,canvas.getCircuit(),comp,comp.getAttributeSet(),act,true);
+    					AutoLabler.AskAndSetLabel(comp.getFactory().getDisplayName(),OldLabel,canvas.getCircuit(),comp,comp.getFactory(),comp.getAttributeSet(),act,true);
     					if (!act.isEmpty())
     						canvas.getProject().doAction(act);
 					}

File: src/com/cburch/logisim/util/AutoLabel.java
Patch:
@@ -235,7 +235,7 @@ public boolean LabelKeyboardHandler(int KeyCode,
 							LabelEndsWithNumber(NewLabel)) {
 							Activate(circ);
 						} else  {
-							Stop(circ);
+							active.put(circ, false);
 						}
 					}
 				}

File: src/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -76,6 +76,7 @@ public static Wire create(Location e0, Location e1) {
 	public static final int WIDTH_BUS = 4;
 	public static final int HIGHLIGHTED_WIDTH = 4;
 	public static final int HIGHLIGHTED_WIDTH_BUS = 5;
+	public static final double DOT_MULTIPLY_FACTOR = 1.5; /* multiply factor for the intersection points */
 	public static final AttributeOption VALUE_HORZ = new AttributeOption(
 			"horz", Strings.getter("wireDirectionHorzOption"));
 	public static final AttributeOption VALUE_VERT = new AttributeOption(

File: src/com/cburch/logisim/tools/SelectTool.java
Patch:
@@ -556,7 +556,7 @@ public void mouseReleased(Canvas canvas, Graphics g, MouseEvent e) {
     					SetAttributeAction act = new SetAttributeAction(
     							canvas.getCircuit(),
     							Strings.getter("changeComponentAttributesAction"));
-                        AutoLabel.AskAndSetLabel(comp.getFactory().getDisplayName(),OldLabel,canvas.getCircuit(),comp,comp.getAttributeSet(),act,true);
+    					AutoLabler.AskAndSetLabel(comp.getFactory().getDisplayName(),OldLabel,canvas.getCircuit(),comp,comp.getAttributeSet(),act,true);
     					if (!act.isEmpty())
     						canvas.getProject().doAction(act);
 					}

File: src/com/cburch/logisim/gui/main/AttrTableComponentModel.java
Patch:
@@ -48,6 +48,7 @@ class AttrTableComponentModel extends AttributeSetTableModel {
 		this.proj = proj;
 		this.circ = circ;
 		this.comp = comp;
+		SetInstance(comp.getFactory());
 	}
 
 	public Circuit getCircuit() {

File: src/com/cburch/draw/gui/AttrTableSelectionModel.java
Patch:
@@ -110,5 +110,6 @@ public void setValueRequested(Attribute<Object> attr, Object value)
 		}
 		CanvasModel model = canvas.getModel();
 		canvas.doAction(new ModelChangeAttributeAction(model, oldVals, newVals));
+		fireTitleChanged();
 	}
 }

File: src/com/cburch/logisim/data/Attributes.java
Patch:
@@ -75,7 +75,7 @@ public ColorAttribute(String name, StringGetter desc) {
 
 		@Override
 		public java.awt.Component getCellEditor(Color value) {
-			Color init = value == null ? Color.BLACK : value;
+			Color init = value == null ? Color.WHITE : value;
 			return new ColorChooser(init);
 		}
 

File: src/com/cburch/logisim/gui/main/Selection.java
Patch:
@@ -180,6 +180,7 @@ public boolean contains(Component comp) {
 	public void draw(ComponentDrawContext context, Set<Component> hidden) {
 		Graphics g = context.getGraphics();
 
+
 		for (Component c : lifted) {
 			if (!hidden.contains(c)) {
 				Location loc = c.getLocation();

File: src/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -89,7 +89,7 @@ public RGBLed() {
 		setAttributes(new Attribute[] { Io.ATTR_ACTIVE, StdAttr.LABEL,
 				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR },
 				new Object[] { Boolean.TRUE, "", Io.LABEL_CENTER,
-						StdAttr.DEFAULT_LABEL_FONT, Io.ATTR_COLOR });
+						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("rgbled.gif");
 		Port[] ps = new Port[3];

File: src/com/bfh/logisim/library/bcd2sevenseg.java
Patch:
@@ -42,7 +42,6 @@
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
-import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.std.arith.Strings;
 
 public class bcd2sevenseg extends InstanceFactory{
@@ -59,7 +58,7 @@ public class bcd2sevenseg extends InstanceFactory{
 
 	public bcd2sevenseg() {
 		super("BCD_to_7_Segment_decoder", Strings.getter("BCD2SevenSegment"));
-		setAttributes(new Attribute[] {StdAttr.LABEL},new Object[] { "" });
+		setAttributes(new Attribute[] {},new Object[] {});
 		setOffsetBounds(Bounds.create(-10, -20, 50, 100));
 		Port[] ps = new Port[8];
 		ps[Segment_A] = new Port(20, 0, Port.OUTPUT, 1);

File: src/com/bfh/logisim/library/bin2bcd.java
Patch:
@@ -45,7 +45,6 @@
 import com.cburch.logisim.instance.InstancePainter;
 import com.cburch.logisim.instance.InstanceState;
 import com.cburch.logisim.instance.Port;
-import com.cburch.logisim.instance.StdAttr;
 import com.cburch.logisim.std.arith.Strings;
 import com.cburch.logisim.tools.key.BitWidthConfigurator;
 
@@ -60,8 +59,8 @@ public class bin2bcd extends InstanceFactory{
 
 	public bin2bcd() {
 		super("Binairy_to_BCD_converter", Strings.getter("Bin2BCD"));
-		setAttributes(new Attribute[] { StdAttr.LABEL , bin2bcd.ATTR_BinBits },
-				new Object[] { "" , BitWidth.create(9) });
+		setAttributes(new Attribute[] { bin2bcd.ATTR_BinBits },
+				new Object[] { BitWidth.create(9) });
 		setKeyConfigurator(new BitWidthConfigurator(bin2bcd.ATTR_BinBits,4,13,0));
 	}
 	

File: src/com/cburch/logisim/std/io/Button.java
Patch:
@@ -98,9 +98,9 @@ public Button() {
 		super("Button", Strings.getter("buttonComponent"));
 		setAttributes(new Attribute[] { StdAttr.FACING, Io.ATTR_COLOR,
 				StdAttr.LABEL, Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT,
-				Io.ATTR_LABEL_COLOR }, new Object[] { Direction.EAST,
+				StdAttr.LABEL_COLOR }, new Object[] { Direction.EAST,
 				Color.WHITE, "", Io.LABEL_CENTER, StdAttr.DEFAULT_LABEL_FONT,
-				Color.BLACK });
+				StdAttr.DEFAULT_LABEL_COLOR });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("button.gif");
 		setPorts(new Port[] { new Port(0, 0, Port.OUTPUT, 1) });
@@ -251,7 +251,6 @@ public void paintInstance(InstancePainter painter) {
 		}
 
 		g.translate(depress, depress);
-		g.setColor(painter.getAttributeValue(Io.ATTR_LABEL_COLOR));
 		painter.drawLabel();
 		g.translate(-depress, -depress);
 		painter.drawPorts();

File: src/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -125,9 +125,9 @@ public DipSwitch() {
 		super("DipSwitch", Strings.getter("DipSwitchComponent"));
 		int dipSize = 8;
 		setAttributes(new Attribute[] { StdAttr.LABEL, Io.ATTR_LABEL_LOC,
-				StdAttr.LABEL_FONT, Io.ATTR_LABEL_COLOR, ATTR_SIZE },
+				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, ATTR_SIZE },
 				new Object[] { "", Direction.EAST, StdAttr.DEFAULT_LABEL_FONT,
-						Color.BLACK, dipSize });
+						StdAttr.DEFAULT_LABEL_COLOR, dipSize });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("dipswitch.gif");
 		setInstancePoker(Poker.class);
@@ -257,7 +257,6 @@ public void paintInstance(InstancePainter painter) {
 			int ypos = (state.BitSet(i)) ? bds.getY() + 16 : bds.getY() + 25;
 			g.fillRect(bds.getX() + 7 + (i * 10), ypos, 4, 9);
 		}
-		g.setColor(painter.getAttributeValue(Io.ATTR_LABEL_COLOR));
 		painter.drawLabel();
 		painter.drawPorts();
 

File: src/com/cburch/logisim/std/io/Io.java
Patch:
@@ -57,8 +57,6 @@ public class Io extends Library {
 			"labelloc", Strings.getter("ioLabelLocAttr"), new Object[] {
 					LABEL_CENTER, Direction.NORTH, Direction.SOUTH,
 					Direction.EAST, Direction.WEST });
-	static final Attribute<Color> ATTR_LABEL_COLOR = Attributes.forColor(
-			"labelcolor", Strings.getter("ioLabelColorAttr"));
 	static final Attribute<Boolean> ATTR_ACTIVE = Attributes.forBoolean(
 			"active", Strings.getter("ioActiveAttr"));
 

File: src/com/cburch/logisim/std/io/Led.java
Patch:
@@ -72,10 +72,10 @@ public Led() {
 		super("LED", Strings.getter("ledComponent"));
 		setAttributes(new Attribute[] { StdAttr.FACING, Io.ATTR_ON_COLOR,
 				Io.ATTR_OFF_COLOR, Io.ATTR_ACTIVE, StdAttr.LABEL,
-				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, Io.ATTR_LABEL_COLOR },
+				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR },
 				new Object[] { Direction.WEST, new Color(240, 0, 0),
 						Color.DARK_GRAY, Boolean.TRUE, "", Io.LABEL_CENTER,
-						StdAttr.DEFAULT_LABEL_FONT, Color.BLACK });
+						StdAttr.DEFAULT_LABEL_FONT, StdAttr.DEFAULT_LABEL_COLOR });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("led.gif");
 		setPorts(new Port[] { new Port(0, 0, Port.INPUT, 1) });
@@ -186,7 +186,6 @@ public void paintInstance(InstancePainter painter) {
 		GraphicsUtil.switchToWidth(g, 2);
 		g.drawOval(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight());
 		GraphicsUtil.switchToWidth(g, 1);
-		g.setColor(painter.getAttributeValue(Io.ATTR_LABEL_COLOR));
 		painter.drawLabel();
 		painter.drawPorts();
 	}

File: src/com/cburch/logisim/std/io/PortIO.java
Patch:
@@ -82,9 +82,9 @@ public PortIO() {
 		super("PortIO", Strings.getter("pioComponent"));
 		int portSize = 8;
 		setAttributes(new Attribute[] { StdAttr.LABEL, Io.ATTR_LABEL_LOC,
-				StdAttr.LABEL_FONT, Io.ATTR_LABEL_COLOR, ATTR_SIZE, ATTR_BUS },
+				StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR, ATTR_SIZE, ATTR_BUS },
 				new Object[] { "", Direction.EAST, StdAttr.DEFAULT_LABEL_FONT,
-						Color.BLACK, portSize, BUSES });
+						StdAttr.DEFAULT_LABEL_COLOR, portSize, BUSES });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("pio.gif");
 		// setInstancePoker(Poker.class);
@@ -279,7 +279,6 @@ public void paintInstance(InstancePainter painter) {
 			g.drawChars(text.toCharArray(), 0, text.toCharArray().length,
 					bds.getX() + 6, bds.getY() + 12);
 		}
-		g.setColor(painter.getAttributeValue(Io.ATTR_LABEL_COLOR));
 		painter.drawLabel();
 		painter.drawPorts();
 

File: src/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -87,9 +87,9 @@ public static final ArrayList<String> GetLabels() {
 	public RGBLed() {
 		super("RGBLED", Strings.getter("RGBledComponent"));
 		setAttributes(new Attribute[] { Io.ATTR_ACTIVE, StdAttr.LABEL,
-				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, Io.ATTR_LABEL_COLOR },
+				Io.ATTR_LABEL_LOC, StdAttr.LABEL_FONT, StdAttr.LABEL_COLOR },
 				new Object[] { Boolean.TRUE, "", Io.LABEL_CENTER,
-						StdAttr.DEFAULT_LABEL_FONT, Color.BLACK });
+						StdAttr.DEFAULT_LABEL_FONT, Io.ATTR_COLOR });
 		setFacingAttribute(StdAttr.FACING);
 		setIconName("rgbled.gif");
 		Port[] ps = new Port[3];
@@ -209,7 +209,6 @@ public void paintInstance(InstancePainter painter) {
 		GraphicsUtil.switchToWidth(g, 2);
 		g.drawOval(bds.getX(), bds.getY(), bds.getWidth(), bds.getHeight());
 		GraphicsUtil.switchToWidth(g, 1);
-		g.setColor(painter.getAttributeValue(Io.ATTR_LABEL_COLOR));
 		painter.drawLabel();
 		painter.drawPorts();
 	}

File: src/com/cburch/logisim/circuit/appear/DefaultAppearance.java
Patch:
@@ -191,7 +191,6 @@ private static List<CanvasObject> new_build(Collection<Instance> pins, Graphics
 			JPanel panel;
 			JFrame frame=null;
 			if (g==null) {
-System.out.print("DEBUG 55 :**** Circuit has no reference to the project!\n");
 			    /* Hack to be able to calculate label heights and widths */
 				hasgraph = false;
 				panel = new JPanel();

File: src/com/cburch/logisim/file/LogisimFile.java
Patch:
@@ -231,7 +231,7 @@ public static LogisimFile loadSub(InputStream in, Loader loader, File file)
 		}
 
 		XmlReader xmlReader = new XmlReader(loader, file);
-/*TODO: Maybe the null does not matter, maybe it does */
+		/* Can set the project pointer to zero as it is fixed later */
 		LogisimFile ret = xmlReader.readLibrary(inBuffered,null);
 		ret.loader = loader;
 		return ret;

File: src/com/cburch/logisim/file/LogisimFileActions.java
Patch:
@@ -84,7 +84,7 @@ private static class MergeFile extends Action {
 				LibraryTools.BuildLibraryList(lib,LibNames);
 			}
 			LibraryTools.BuildToolList(source,ToolList);
-			LibraryTools.RemovePresentLibraries(mergelib,LibNames);
+			LibraryTools.RemovePresentLibraries(mergelib,LibNames,false);
 			if (LibraryTools.LibraryIsConform(mergelib,new HashSet<String> (),new HashSet<String>(),Error)) {
 				/* Okay the library is now ready for merge */
 				for (Library lib : mergelib.getLibraries()) {
@@ -147,7 +147,7 @@ private static class LoadLibraries extends Action {
                 	JOptionPane.showMessageDialog(null, "\""+libs[i].getName()+"\": "+Strings.get("LibraryAlreadyLoaded"),
                 			Strings.get("LibLoadErrors")+" "+libs[i].getName()+" !", JOptionPane.WARNING_MESSAGE);
 				} else {
-					LibraryTools.RemovePresentLibraries(libs[i],LibNames);
+					LibraryTools.RemovePresentLibraries(libs[i],LibNames,false);
 					if (LibraryTools.LibraryIsConform(libs[i],new HashSet<String> (),new HashSet<String>(),Error)) {
 						HashSet<String> AddedToolList = new HashSet<String>();
 						LibraryTools.BuildToolList(libs[i],AddedToolList);

File: src/com/cburch/logisim/analyze/gui/BuildCircuitButton.java
Patch:
@@ -243,7 +243,7 @@ private void performAction(Project dest, String name, boolean replace,
 			dest.doAction(xn.toAction(Strings.getter("replaceCircuitAction")));
 		} else {
 			// add the circuit
-			Circuit circuit = new Circuit(name, dest.getLogisimFile());
+			Circuit circuit = new Circuit(name, dest.getLogisimFile(),dest);
 			CircuitMutation xn = CircuitBuilder.build(circuit, model,
 					twoInputs, useNands);
 			xn.execute();

File: src/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -159,7 +159,7 @@ private void performUpdate(Set<Instance> adds, Set<Instance> removes,
 
 		// ensure we have the anchor in the circuit
 		if (anchor == null) {
-			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped())) {
+			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped(),appearance.GetGraphics())) {
 				if (o instanceof AppearanceAnchor) {
 					anchor = (AppearanceAnchor) o;
 				}

File: src/com/cburch/logisim/gui/menu/ProjectCircuitActions.java
Patch:
@@ -125,7 +125,7 @@ public static void doAddCircuit(Project proj) {
 				JOptionPane.showMessageDialog(proj.getFrame(), error,
 				Strings.get("circuitCreateTitle"), JOptionPane.ERROR_MESSAGE);
 			} else {
-				Circuit circuit = new Circuit(name, proj.getLogisimFile());
+				Circuit circuit = new Circuit(name, proj.getLogisimFile(),proj);
 				proj.doAction(LogisimFileActions.addCircuit(circuit));
 				proj.setCurrentCircuit(circuit);
 			}

File: src/com/cburch/logisim/instance/InstanceComponent.java
Patch:
@@ -124,7 +124,7 @@ public void addComponentListener(ComponentListener l) {
 	//
 	public void attributeListChanged(AttributeEvent e) {
 	}
-
+	
 	public void attributeValueChanged(AttributeEvent e) {
 		Attribute<?> attr = e.getAttribute();
 		if (e.getAttribute().equals(StdAttr.LABEL)) {

File: src/com/cburch/logisim/instance/InstanceTextField.java
Patch:
@@ -30,6 +30,7 @@
 
 package com.cburch.logisim.instance;
 
+import java.awt.Color;
 import java.awt.Font;
 import java.awt.Graphics;
 
@@ -73,7 +74,7 @@ public class InstanceTextField implements AttributeListener, TextFieldListener,
 
 	public void attributeListChanged(AttributeEvent e) {
 	}
-
+	
 	public void attributeValueChanged(AttributeEvent e) {
 		Attribute<?> attr = e.getAttribute();
 		if (attr == labelAttr) {
@@ -94,6 +95,7 @@ private void createField(AttributeSet attrs, String text) {
 	void draw(Component comp, ComponentDrawContext context) {
 		if (field != null) {
 			Graphics g = context.getGraphics().create();
+			g.setColor(Color.BLUE);
 			field.draw(g);
 			g.dispose();
 		}

File: src/com/cburch/logisim/instance/StdAttr.java
Patch:
@@ -67,6 +67,6 @@ public interface StdAttr {
 	public static final Attribute<Font> LABEL_FONT = Attributes.forFont(
 			"labelfont", Strings.getter("stdLabelFontAttr"));
 	public static final Font DEFAULT_LABEL_FONT = new Font("SansSerif",
-			Font.PLAIN, 12);
+			Font.BOLD, 18);
 
 }

File: src/com/cburch/logisim/gui/menu/ProjectLibraryActions.java
Patch:
@@ -109,7 +109,7 @@ public static void doLoadBuiltinLibrary(Project proj) {
 		if (action == JOptionPane.OK_OPTION) {
 			Library[] libs = list.getSelectedLibraries();
 			if (libs != null)
-				proj.doAction(LogisimFileActions.loadLibraries(libs));
+				proj.doAction(LogisimFileActions.loadLibraries(libs,proj.getLogisimFile()));
 		}
 	}
 
@@ -156,7 +156,7 @@ public static void doLoadJarLibrary(Project proj) {
 
 			Library lib = loader.loadJarLibrary(f, className);
 			if (lib != null) {
-				proj.doAction(LogisimFileActions.loadLibrary(lib));
+				proj.doAction(LogisimFileActions.loadLibrary(lib,proj.getLogisimFile()));
 			}
 		}
 	}
@@ -171,7 +171,7 @@ public static void doLoadLogisimLibrary(Project proj) {
 			File f = chooser.getSelectedFile();
 			Library lib = loader.loadLogisimLibrary(f);
 			if (lib != null) {
-				proj.doAction(LogisimFileActions.loadLibrary(lib));
+				proj.doAction(LogisimFileActions.loadLibrary(lib,proj.getLogisimFile()));
 			}
 		}
 	}

File: src/com/cburch/draw/model/AbstractCanvasObject.java
Patch:
@@ -252,7 +252,7 @@ public final <V> void setValue(Attribute<V> attr, V value) {
 		boolean same = old == null ? value == null : old.equals(value);
 		if (!same) {
 			updateValue(attr, value);
-			AttributeEvent e = new AttributeEvent(this, attr, value);
+			AttributeEvent e = new AttributeEvent(this, attr, value,old);
 			for (AttributeListener listener : listeners) {
 				listener.attributeValueChanged(e);
 			}

File: src/com/cburch/draw/tools/DrawingAttributeSet.java
Patch:
@@ -72,7 +72,7 @@ public void attributeValueChanged(AttributeEvent e) {
 			if (selectedAttrs.contains(e.getAttribute())) {
 				@SuppressWarnings("unchecked")
 				Attribute<Object> attr = (Attribute<Object>) e.getAttribute();
-				fireAttributeValueChanged(attr, e.getValue());
+				fireAttributeValueChanged(attr, e.getValue(),e.getOldValue());
 			}
 			updateAttributes();
 		}
@@ -227,7 +227,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			vit.next();
 			if (a.equals(attr)) {
 				vit.set(value);
-				AttributeEvent e = new AttributeEvent(this, attr, value);
+				AttributeEvent e = new AttributeEvent(this, attr, value,null);
 				for (AttributeListener listener : listeners) {
 					listener.attributeValueChanged(e);
 				}

File: src/com/cburch/logisim/circuit/CircuitEvent.java
Patch:
@@ -40,6 +40,7 @@ public class CircuitEvent {
 	public final static int ACTION_CLEAR = 5; // entire circuit cleared
 	public final static int TRANSACTION_DONE = 6;
 	public final static int CHANGE_DEFAULT_BOX_APPEARANCE = 7;
+	public final static int ACTION_CHECK_NAME = 8;
 
 	private int action;
 	private Circuit circuit;

File: src/com/cburch/logisim/circuit/SplitterAttributes.java
Patch:
@@ -244,7 +244,7 @@ private void configureDefaults() {
 			if (bit_end[i] != dflt[i]) {
 				BitOutAttribute attr = (BitOutAttribute) attrs.get(offs + i);
 				bit_end[i] = dflt[i];
-				fireAttributeValueChanged(attr, Integer.valueOf(bit_end[i]));
+				fireAttributeValueChanged(attr, Integer.valueOf(bit_end[i]),null);
 			}
 		}
 
@@ -384,6 +384,6 @@ public <V> void setValue(Attribute<V> attr, V value) {
 		} else {
 			throw new IllegalArgumentException("unknown attribute " + attr);
 		}
-		fireAttributeValueChanged(attr, value);
+		fireAttributeValueChanged(attr, value,null);
 	}
 }

File: src/com/cburch/logisim/comp/ComponentListener.java
Patch:
@@ -34,4 +34,6 @@ public interface ComponentListener {
 	public void componentInvalidated(ComponentEvent e);
 
 	public void endChanged(ComponentEvent e);
+	
+	public void LabelChanged(ComponentEvent e);
 }

File: src/com/cburch/logisim/data/AbstractAttributeSet.java
Patch:
@@ -76,9 +76,9 @@ protected void fireAttributeListChanged() {
 	}
 
 	protected <V> void fireAttributeValueChanged(Attribute<? super V> attr,
-			V value) {
+			V value , V oldvalue) {
 		if (listeners != null) {
-			AttributeEvent event = new AttributeEvent(this, attr, value);
+			AttributeEvent event = new AttributeEvent(this, attr, value, oldvalue);
 			List<AttributeListener> ls = new ArrayList<AttributeListener>(
 					listeners);
 			for (AttributeListener l : ls) {

File: src/com/cburch/logisim/data/AttributeSetImpl.java
Patch:
@@ -270,8 +270,10 @@ public <V> void setValue(Attribute<V> attr, V value) {
 		if (value.equals(n.value)) {
 			; // do nothing - why change what's already there?
 		} else {
+			@SuppressWarnings("unchecked")
+			V oldvalue = (V) n.value;
 			n.value = value;
-			fireAttributeValueChanged(attr, value);
+			fireAttributeValueChanged(attr, value, oldvalue);
 		}
 	}
 }

File: src/com/cburch/logisim/gui/generic/AttributeSetTableModel.java
Patch:
@@ -259,7 +259,7 @@ protected void fireTitleChanged() {
 
 	protected void fireValueChanged(int index) {
 		AttrTableModelEvent event = new AttrTableModelEvent(this, index);
-		for (AttrTableModelListener l : listeners) {
+		for (AttrTableModelListener l : listeners) {			
 			l.attrValueChanged(event);
 		}
 	}

File: src/com/cburch/logisim/gui/main/SelectionAttributes.java
Patch:
@@ -379,7 +379,7 @@ private void updateList(boolean ignoreIfSelectionSame) {
 					if (!sameVals) {
 						@SuppressWarnings("unchecked")
 						Attribute<Object> attr = (Attribute<Object>) oldAttrs[i];
-						fireAttributeValueChanged(attr, newVal);
+						fireAttributeValueChanged(attr, newVal,oldVal);
 					}
 				}
 			} else {

File: src/com/cburch/logisim/std/base/TextAttributes.java
Patch:
@@ -126,7 +126,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			throw new IllegalArgumentException("unknown attribute");
 		}
 		offsetBounds = null;
-		fireAttributeValueChanged(attr, value);
+		fireAttributeValueChanged(attr, value,null);
 	}
 
 }

File: src/com/cburch/logisim/std/tcl/TclGenericAttributes.java
Patch:
@@ -116,7 +116,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			VhdlContent newContent = (VhdlContent) value;
 			if (!vhdlEntitiy.equals(newContent))
 				vhdlEntitiy = newContent;
-			fireAttributeValueChanged(attr, value);
+			fireAttributeValueChanged(attr, value,null);
 		} else {
 			super.setValue(attr, value);
 		}

File: src/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -103,7 +103,7 @@ public <V> void setValue(Attribute<V> attr, V value) {
 			} else {
 				throw new IllegalArgumentException("unknown attribute " + attr);
 			}
-			fireAttributeValueChanged(attr, value);
+			fireAttributeValueChanged(attr, value,null);
 		}
 	}
 

File: src/com/cburch/logisim/std/wiring/PinAttributes.java
Patch:
@@ -85,6 +85,7 @@ boolean isOutput() {
 
 	@Override
 	public <V> void setValue(Attribute<V> attr, V value) {
+		V oldvalue = null;
 		if (attr == StdAttr.WIDTH) {
 			BitWidth NewWidth = (BitWidth) value;
 			if (width == NewWidth)
@@ -107,9 +108,10 @@ public <V> void setValue(Attribute<V> attr, V value) {
 				return;
 			pull = newPull;
 		} else {
+			oldvalue = (V) super.getValue(attr);
 			super.setValue(attr, value);
 			return;
 		}
-		fireAttributeValueChanged(attr, value);
+		fireAttributeValueChanged(attr, value, oldvalue);
 	}
 }

File: src/com/cburch/logisim/tools/FactoryAttributes.java
Patch:
@@ -73,7 +73,7 @@ public void attributeListChanged(AttributeEvent baseEvent) {
 		for (AttributeListener l : listeners) {
 			if (e == null) {
 				e = new AttributeEvent(this, baseEvent.getAttribute(),
-						baseEvent.getValue());
+						baseEvent.getValue(),baseEvent.getOldValue());
 			}
 			l.attributeListChanged(e);
 		}
@@ -84,7 +84,7 @@ public void attributeValueChanged(AttributeEvent baseEvent) {
 		for (AttributeListener l : listeners) {
 			if (e == null) {
 				e = new AttributeEvent(this, baseEvent.getAttribute(),
-						baseEvent.getValue());
+						baseEvent.getValue(),baseEvent.getOldValue());
 			}
 			l.attributeValueChanged(e);
 		}

File: src/com/bfh/logisim/hdlgenerator/AbstractHDLGeneratorFactory.java
Patch:
@@ -1435,8 +1435,7 @@ public String GetZeroVector(int NrOfBits, boolean FloatingPinTiedToGround,
 		return Contents.toString();
 	}
 
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return false;
 	}
 

File: src/com/bfh/logisim/hdlgenerator/HDLGeneratorFactory.java
Patch:
@@ -92,8 +92,7 @@ public ArrayList<String> GetInlinedCode(String HDLType,
 
 	public String GetRelativeDirectory(String HDLType);
 
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor);
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs);
 
 	public boolean IsOnlyInlined(String HDLType);
 

File: src/com/bfh/logisim/hdlgenerator/TickComponentHDLGeneratorFactory.java
Patch:
@@ -209,8 +209,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/bfh/logisim/library/bcd2sevenseg.java
Patch:
@@ -196,10 +196,9 @@ public void propagate(InstanceState state) {
 	}	
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			                             AttributeSet attrs,
-			                             char Vendor) {
+			                             AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new bcd2sevensegHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 }

File: src/com/bfh/logisim/library/bcd2sevensegHDLGeneratorFactory.java
Patch:
@@ -133,8 +133,7 @@ public String GetSubDir() {
 	
 	@Override
 	public boolean HDLTargetSupported( String HDLType,
-			                           AttributeSet attrs,
-			                           char Vendor) {
+			                           AttributeSet attrs) {
 		return HDLType.equals(Settings.VHDL);
 	}
 	

File: src/com/bfh/logisim/library/bin2bcd.java
Patch:
@@ -139,10 +139,9 @@ public String getHDLName(AttributeSet attrs) {
 	
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			                             AttributeSet attrs,
-			                             char Vendor) {
+			                             AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new bin2bcdHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 }

File: src/com/bfh/logisim/library/bin2bcdHDLGeneratorFactory.java
Patch:
@@ -56,8 +56,7 @@ public String GetSubDir() {
 	
 	@Override
 	public boolean HDLTargetSupported( String HDLType,
-			                           AttributeSet attrs,
-			                           char Vendor) {
+			                           AttributeSet attrs) {
 		return HDLType.equals(Settings.VHDL);
 	}
 	

File: src/com/cburch/draw/gui/AttrTableToolModel.java
Patch:
@@ -44,6 +44,8 @@ public AttrTableToolModel(DrawingAttributeSet defaults, AbstractTool tool) {
 		super(defaults.createSubset(tool));
 		this.defaults = defaults;
 		this.currentTool = tool;
+		
+		
 	}
 
 	@Override

File: src/com/cburch/logisim/circuit/SplitterFactory.java
Patch:
@@ -145,7 +145,7 @@ public Bounds getOffsetBounds(AttributeSet attrsBase) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/circuit/SubcircuitFactory.java
Patch:
@@ -326,10 +326,10 @@ private CircuitState getSubstate(InstanceState instanceState) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new CircuitHDLGeneratorFactory(this.source);
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/comp/ComponentFactory.java
Patch:
@@ -56,7 +56,7 @@ public interface ComponentFactory extends AttributeDefaultProvider {
 	public boolean ActiveOnHigh(AttributeSet attrs);
 
 	public AttributeSet createAttributeSet();
-
+	
 	public Component createComponent(Location loc, AttributeSet attrs);
 
 	public void drawGhost(ComponentDrawContext context, Color color, int x,
@@ -91,7 +91,7 @@ public void drawGhost(ComponentDrawContext context, Color color, int x,
 	public Object getFeature(Object key, AttributeSet attrs);
 
 	public HDLGeneratorFactory getHDLGenerator(String HDLIdentifier,
-			AttributeSet attrs, char Vendor);
+			AttributeSet attrs);
 
 	public String getHDLName(AttributeSet attrs);
 
@@ -106,7 +106,7 @@ public HDLGeneratorFactory getHDLGenerator(String HDLIdentifier,
 	public boolean HasThreeStateDrivers(AttributeSet attrs);
 
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor);
+			AttributeSet attrs);
 
 	public boolean isAllDefaultValues(AttributeSet attrs, LogisimVersion ver);
 

File: src/com/cburch/logisim/std/arith/Adder.java
Patch:
@@ -140,10 +140,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AdderHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/AdderHDLGeneratorFactory.java
Patch:
@@ -157,8 +157,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/arith/Comparator.java
Patch:
@@ -105,10 +105,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new ComparatorHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/ComparatorHDLGeneratorFactory.java
Patch:
@@ -187,8 +187,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/arith/Multiplier.java
Patch:
@@ -158,10 +158,10 @@ public Multiplier() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new MultiplierHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/MultiplierHDLGeneratorFactory.java
Patch:
@@ -141,8 +141,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return HDLType.equals(Settings.VHDL);
 	}
 

File: src/com/cburch/logisim/std/arith/Negator.java
Patch:
@@ -76,10 +76,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new NegatorHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/NegatorHDLGeneratorFactory.java
Patch:
@@ -124,8 +124,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/arith/Shifter.java
Patch:
@@ -119,10 +119,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new ShifterHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/ShifterHDLGeneratorFactory.java
Patch:
@@ -341,8 +341,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/arith/Subtractor.java
Patch:
@@ -90,10 +90,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new SubtractorHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/arith/SubtractorHDLGeneratorFactory.java
Patch:
@@ -163,8 +163,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/base/Text.java
Patch:
@@ -161,7 +161,7 @@ public Bounds getOffsetBounds(AttributeSet attrsBase) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/gates/AbstractGateHDLGenerator.java
Patch:
@@ -388,8 +388,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/gates/AndGate.java
Patch:
@@ -113,10 +113,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AndGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/Buffer.java
Patch:
@@ -193,10 +193,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new BufferGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/EvenParityGate.java
Patch:
@@ -81,10 +81,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new XNorGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/NandGate.java
Patch:
@@ -117,10 +117,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new NandGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/NorGate.java
Patch:
@@ -112,10 +112,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new NorGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/NotGate.java
Patch:
@@ -221,10 +221,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new NotGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/OddParityGate.java
Patch:
@@ -86,10 +86,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new XorGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/OrGate.java
Patch:
@@ -109,10 +109,10 @@ protected Value getIdentity() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new OrGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/XnorGate.java
Patch:
@@ -99,10 +99,10 @@ protected String getRectangularLabel(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new XNorGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/gates/XorGate.java
Patch:
@@ -119,10 +119,10 @@ public String getRectangularLabel(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new XorGateHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/hdl/VhdlEntity.java
Patch:
@@ -174,10 +174,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new VhdlHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/hdl/VhdlHDLGeneratorFactory.java
Patch:
@@ -120,8 +120,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return HDLType.equals(Settings.VHDL);
 	}
 

File: src/com/cburch/logisim/std/io/AbstractLedHDLGeneratorFactory.java
Patch:
@@ -65,8 +65,7 @@ public ArrayList<String> GetInlinedCode(Netlist Nets, Long ComponentId,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/io/Button.java
Patch:
@@ -166,10 +166,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new ButtonHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/ButtonHDLGeneratorFactory.java
Patch:
@@ -68,8 +68,7 @@ public ArrayList<String> GetInlinedCode(Netlist Nets, Long ComponentId,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/io/DipSwitch.java
Patch:
@@ -201,11 +201,11 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new ButtonHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/Led.java
Patch:
@@ -142,10 +142,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AbstractLedHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/PortHDLGeneratorFactory.java
Patch:
@@ -457,8 +457,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/io/PortIO.java
Patch:
@@ -218,11 +218,11 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new PortHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/RGBLed.java
Patch:
@@ -165,10 +165,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AbstractLedHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/ReptarLocalBus.java
Patch:
@@ -142,12 +142,12 @@ public MappableResourcesContainer getMapInfo() {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		// return false;
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new ReptarLocalBusHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/io/ReptarLocalBusHDLGeneratorFactory.java
Patch:
@@ -332,8 +332,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/io/SevenSegment.java
Patch:
@@ -214,10 +214,10 @@ protected void configureNewInstance(Instance instance) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AbstractLedHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -347,8 +347,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/memory/Counter.java
Patch:
@@ -348,10 +348,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new CounterHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/CounterHDLGeneratorFactory.java
Patch:
@@ -372,8 +372,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/memory/DFlipFlop.java
Patch:
@@ -93,10 +93,10 @@ protected String getInputName(int index) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new DFFHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 }

File: src/com/cburch/logisim/std/memory/JKFlipFlop.java
Patch:
@@ -112,10 +112,10 @@ protected String getInputName(int index) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new JKFFHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 }

File: src/com/cburch/logisim/std/memory/Ram.java
Patch:
@@ -668,11 +668,11 @@ MemState getState(InstanceState state) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new RamHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/RamHDLGeneratorFactory.java
Patch:
@@ -458,8 +458,9 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
+		if (attrs == null)
+			return false;
 		Object busVal = attrs.getValue(RamAttributes.ATTR_DBUS);
 		boolean separate = busVal == null ? false : busVal
 				.equals(RamAttributes.BUS_SEP);

File: src/com/cburch/logisim/std/memory/Random.java
Patch:
@@ -203,10 +203,10 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new RandomHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/RandomHDLGeneratorFactory.java
Patch:
@@ -361,8 +361,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/memory/Register.java
Patch:
@@ -182,11 +182,11 @@ public String getHDLName(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new RegisterHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/RegisterHDLGeneratorFactory.java
Patch:
@@ -306,8 +306,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/memory/Rom.java
Patch:
@@ -332,10 +332,10 @@ MemState getState(InstanceState state) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new RomHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/RomHDLGeneratorFactory.java
Patch:
@@ -175,8 +175,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/memory/SRFlipFlop.java
Patch:
@@ -110,10 +110,10 @@ protected String getInputName(int index) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new SRFFHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 }

File: src/com/cburch/logisim/std/memory/ShiftRegister.java
Patch:
@@ -311,10 +311,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new ShiftRegisterHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -551,8 +551,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/memory/TFlipFlop.java
Patch:
@@ -100,10 +100,10 @@ protected String getInputName(int index) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new TFFHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 }

File: src/com/cburch/logisim/std/plexers/BitSelector.java
Patch:
@@ -93,10 +93,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new BitSelectorHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -187,8 +187,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/plexers/Decoder.java
Patch:
@@ -128,10 +128,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new DecoderHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/plexers/DecoderHDLGeneratorFactory.java
Patch:
@@ -125,8 +125,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/plexers/Demultiplexer.java
Patch:
@@ -126,10 +126,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new DemultiplexerHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/plexers/DemultiplexerHDLGeneratorFactory.java
Patch:
@@ -164,8 +164,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -145,10 +145,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new MultiplexerHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/plexers/MultiplexerHDLGeneratorFactory.java
Patch:
@@ -193,8 +193,7 @@ public String GetSubDir() {
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/plexers/PriorityEncoder.java
Patch:
@@ -96,10 +96,10 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new PriorityEncoderHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -208,8 +208,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/tcl/TclComponent.java
Patch:
@@ -146,7 +146,7 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 	 */
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return false;
 	}
 

File: src/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -115,8 +115,7 @@ public ArrayList<String> GetInlinedCode(Netlist Nets, Long ComponentId,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/wiring/BitExtender.java
Patch:
@@ -113,10 +113,10 @@ private String getType(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new BitExtenderHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/wiring/BitExtenderHDLGeneratorFactory.java
Patch:
@@ -126,8 +126,7 @@ public ArrayList<String> GetInlinedCode(Netlist Nets, Long ComponentId,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/wiring/Clock.java
Patch:
@@ -201,11 +201,11 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null) {
 			MyHDLGenerator = new ClockHDLGeneratorFactory();
 		}
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/wiring/ClockHDLGeneratorFactory.java
Patch:
@@ -268,8 +268,7 @@ public SortedMap<String, Integer> GetWireList(AttributeSet attrs,
 	}
 
 	@Override
-	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs,
-			char Vendor) {
+	public boolean HDLTargetSupported(String HDLType, AttributeSet attrs) {
 		return true;
 	}
 }

File: src/com/cburch/logisim/std/wiring/Constant.java
Patch:
@@ -293,10 +293,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new ConstantHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/wiring/Ground.java
Patch:
@@ -105,10 +105,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new AbstractConstantHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/wiring/Pin.java
Patch:
@@ -491,7 +491,7 @@ public boolean HasThreeStateDrivers(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/wiring/Power.java
Patch:
@@ -116,10 +116,10 @@ public Bounds getOffsetBounds(AttributeSet attrs) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		if (MyHDLGenerator == null)
 			MyHDLGenerator = new PowerHDLGeneratorFactory();
-		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs, Vendor);
+		return MyHDLGenerator.HDLTargetSupported(HDLIdentifier, attrs);
 	}
 
 	@Override

File: src/com/cburch/logisim/std/wiring/Probe.java
Patch:
@@ -465,7 +465,7 @@ public Bounds getOffsetBounds(AttributeSet attrsBase) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/cburch/logisim/std/wiring/Tunnel.java
Patch:
@@ -149,7 +149,7 @@ public Bounds getOffsetBounds(AttributeSet attrsBase) {
 
 	@Override
 	public boolean HDLSupportedComponent(String HDLIdentifier,
-			AttributeSet attrs, char Vendor) {
+			AttributeSet attrs) {
 		return true;
 	}
 

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -962,6 +962,7 @@ private boolean performDRC() {
 		if (root == null) {
 			DRCResult = Netlist.DRC_ERROR;
 		} else {
+			root.getNetList().ClearNetlist();
 			DRCResult = root.getNetList().DesignRuleCheckResult(MyReporter,
 					HDLType.getText(), true,
 					MyBoardInformation.fpga.getVendor(), SheetNames);

File: src/com/cburch/logisim/circuit/CircuitEvent.java
Patch:
@@ -39,6 +39,7 @@ public class CircuitEvent {
 													// types changed)
 	public final static int ACTION_CLEAR = 5; // entire circuit cleared
 	public final static int TRANSACTION_DONE = 6;
+	public final static int CHANGE_DEFAULT_BOX_APPEARANCE = 7;
 
 	private int action;
 	private Circuit circuit;

File: src/com/cburch/logisim/circuit/appear/PortManager.java
Patch:
@@ -159,7 +159,7 @@ private void performUpdate(Set<Instance> adds, Set<Instance> removes,
 
 		// ensure we have the anchor in the circuit
 		if (anchor == null) {
-			for (CanvasObject o : DefaultAppearance.build(allPins)) {
+			for (CanvasObject o : DefaultAppearance.build(allPins,appearance.IsNamedBoxShaped())) {
 				if (o instanceof AppearanceAnchor) {
 					anchor = (AppearanceAnchor) o;
 				}

File: src/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -732,7 +732,7 @@ public void run() {
 		if (showSplash) {
 			monitor.setProgress(SplashScreen.GUI_INIT);
 		}
-		WindowManagers.initialize();
+		WindowManagers.initialize();		
 		if (MacCompatibility.isSwingUsingScreenMenuBar()) {
 			MacCompatibility
 					.setFramelessJMenuBar(new LogisimMenuBar(null, null));

File: src/com/cburch/logisim/prefs/AppPreferences.java
Patch:
@@ -428,6 +428,8 @@ public static void updateRecentFile(File file) {
 			"keepConnected", true));
 	public static final PrefMonitor<Boolean> ADD_SHOW_GHOSTS = create(new PrefMonitorBoolean(
 			"showGhosts", true));
+	public static final PrefMonitor<Boolean> NAMED_CIRCUIT_BOXES = create(new PrefMonitorBoolean(
+			"namedBoxes", true));
 	public static final PrefMonitor<String> ADD_AFTER = create(new PrefMonitorStringOpts(
 			"afterAdd", new String[] { ADD_AFTER_EDIT, ADD_AFTER_UNCHANGED },
 			ADD_AFTER_EDIT));

File: src/com/cburch/draw/util/EditableLabel.java
Patch:
@@ -299,6 +299,7 @@ public int getWidth() {
 		FontMetrics fm = g.getFontMetrics(font);
 		int width = fm.stringWidth(text);
 		frame.setVisible(false);
+		frame.dispose();
 		return width;
 	}
 	
@@ -315,6 +316,7 @@ public int getHeight() {
 		FontMetrics fm = g.getFontMetrics(font);
 		int height = fm.getAscent()+fm.getDescent();
 		frame.setVisible(false);
+		frame.dispose();
 		return height;
 	}
 	
@@ -331,6 +333,7 @@ public int getAscent() {
 		FontMetrics fm = g.getFontMetrics(font);
 		int height = fm.getAscent();
 		frame.setVisible(false);
+		frame.dispose();
 		return height;
 	}
 	

File: src/com/cburch/logisim/circuit/Wire.java
Patch:
@@ -74,6 +74,8 @@ public static Wire create(Location e0, Location e1) {
 	/** Stroke width when drawing wires. */
 	public static final int WIDTH = 3;
 	public static final int WIDTH_BUS = 5;
+	public static final int HIGHLIGHTED_WIDTH = 5;
+	public static final int HIGHLIGHTED_WIDTH_BUS = 8;
 	public static final AttributeOption VALUE_HORZ = new AttributeOption(
 			"horz", Strings.getter("wireDirectionHorzOption"));
 	public static final AttributeOption VALUE_VERT = new AttributeOption(

File: src/com/bfh/logisim/download/AlteraDownload.java
Patch:
@@ -408,6 +408,8 @@ private static ArrayList<String> GetAlteraAssignments(
 		}
 		result.add(Assignment + "FMAX_REQUIREMENT \""
 				+ GetClockFrequencyString(CurrentBoard) + "\"");
+		result.add(Assignment + "RESERVE_NCEO_AFTER_CONFIGURATION \"USE AS REGULAR IO\"");
+		result.add(Assignment + "CYCLONEII_RESERVE_NCEO_AFTER_CONFIGURATION \"USE AS REGULAR IO\"");
 		return result;
 	}
 

File: src/com/bfh/logisim/fpgaboardeditor/FPGAIOInformationContainer.java
Patch:
@@ -353,6 +353,9 @@ private ArrayList<String> GetAlteraPinStrings(String direction, int StartId) {
 			// Integer.toString(StartId + i);
 			Contents.add("    set_location_assignment " + MyPinLocations.get(i)
 					+ " -to " + NetName);
+			if (MyPullBehavior == PullBehaviors.PullUp) {
+				Contents.add("    set_instance_assignment -name WEAK_PULL_UP_RESISTOR ON -to " + NetName);
+			}
 		}
 		return Contents;
 	}

File: src/com/cburch/logisim/Main.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 8,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 9,
 			LogisimVersion.FINAL_REVISION);
 	public static final String VERSION_NAME = VERSION.toString();
 	public static final int COPYRIGHT_YEAR = 2014;

File: src/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -121,10 +121,10 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist,
 			Contents.add("      ELSIF (Preset = '1') THEN s_current_state_reg <= '1';");
 			if (IsFlipFlop(attrs)) {
 				Contents.add("      ELSIF (Clock'event AND (Clock = std_logic_vector(to_unsigned("
-						+ ActivityLevelStr + ",1)))) THEN");
+						+ ActivityLevelStr + ",1))(0))) THEN");
 			} else {
 				Contents.add("      ELSIF (Clock = std_logic_vector(to_unsigned("
-						+ ActivityLevelStr + ",1))) THEN");
+						+ ActivityLevelStr + ",1))(0)) THEN");
 			}
 			Contents.add("         IF (Tick = '1') THEN");
 			Contents.add("            s_current_state_reg <= s_next_state;");

File: src/com/cburch/logisim/Main.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 7,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 8,
 			LogisimVersion.FINAL_REVISION);
 	public static final String VERSION_NAME = VERSION.toString();
 	public static final int COPYRIGHT_YEAR = 2014;

File: src/com/cburch/logisim/std/memory/AbstractFlipFlopHDLGeneratorFactory.java
Patch:
@@ -121,10 +121,10 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist,
 			Contents.add("      ELSIF (Preset = '1') THEN s_current_state_reg <= '1';");
 			if (IsFlipFlop(attrs)) {
 				Contents.add("      ELSIF (Clock'event AND (Clock = std_logic_vector(to_unsigned("
-						+ ActivityLevelStr + ",1))(0) )) THEN");
+						+ ActivityLevelStr + ",1)))) THEN");
 			} else {
 				Contents.add("      ELSIF (Clock = std_logic_vector(to_unsigned("
-						+ ActivityLevelStr + ",1))(0) ) THEN");
+						+ ActivityLevelStr + ",1))) THEN");
 			}
 			Contents.add("         IF (Tick = '1') THEN");
 			Contents.add("            s_current_state_reg <= s_next_state;");

File: src/com/cburch/logisim/std/wiring/AbstractConstantHDLGeneratorFactory.java
Patch:
@@ -48,8 +48,7 @@ public int GetConstant(AttributeSet attrs) {
 	private String GetConvertOperator(int value, int nr_of_bits, String HDLType) {
 		if (HDLType.equals(Settings.VHDL)) {
 			if (nr_of_bits == 1)
-				return "std_logic_vector(to_unsigned(" + Integer.toString(value) + ","
-						+ Integer.toString(nr_of_bits) + "))";
+				return "'"+Integer.toString(value)+"'";
 			return "std_logic_vector(to_unsigned(" + Integer.toString(value) + ","
 					+ Integer.toString(nr_of_bits) + "))";
 		} else {

File: src/com/cburch/logisim/Main.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 6,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 7,
 			LogisimVersion.FINAL_REVISION);
 	public static final String VERSION_NAME = VERSION.toString();
 	public static final int COPYRIGHT_YEAR = 2014;

File: src/com/cburch/logisim/std/memory/ShiftRegisterHDLGeneratorFactory.java
Patch:
@@ -80,8 +80,8 @@ public ArrayList<String> GetArchitecture(Netlist TheNetlist,
 			Contents.add("   make_state : PROCESS(Clock, ShiftEnable, Tick, Reset, s_state_next, ParLoad)");
 			Contents.add("   BEGIN");
 			Contents.add("      IF (Reset = '1') THEN s_state_reg <= (OTHERS => '0');");
-			Contents.add("      ELSIF (Clock'event AND (Clock = conv_std_logic_vector("
-					+ ActiveLevelStr + ",1)(0) )) THEN");
+			Contents.add("      ELSIF (Clock'event AND (Clock = std_logic_vector(to_unsigned("
+					+ ActiveLevelStr + ",1))(0) )) THEN");
 			Contents.add("         IF (((ShiftEnable = '1') OR (ParLoad = '1')) AND (Tick = '1')) THEN");
 			Contents.add("            s_state_reg <= s_state_next;");
 			Contents.add("         END IF;");

File: src/com/cburch/logisim/std/plexers/BitSelectorHDLGeneratorFactory.java
Patch:
@@ -76,12 +76,12 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist,
 			Contents.add("   s_extended_vector((" + InputBitsStr
 					+ "-1) DOWNTO 0) <= DataIn;");
 			if (output_bits > 1)
-				Contents.add("   DataOut <= s_extended_vector(((conv_integer(unsigned(Sel))+1)*"
+				Contents.add("   DataOut <= s_extended_vector(((to_integer(unsigned(Sel))+1)*"
 						+ OutputsBitsStr
-						+ ")-1 DOWNTO conv_integer(unsigned(Sel))*"
+						+ ")-1 DOWNTO to_integer(unsigned(Sel))*"
 						+ OutputsBitsStr + ");");
 			else
-				Contents.add("   DataOut <= s_extended_vector(conv_integer(unsigned(Sel)));");
+				Contents.add("   DataOut <= s_extended_vector(to_integer(unsigned(Sel)));");
 		} else {
 			Contents.add("   assign s_extended_vector[" + ExtendedBitsStr
 					+ "-1:" + InputBitsStr + "] = 0;");

File: src/com/cburch/logisim/std/plexers/PriorityEncoderHDLGeneratorFactory.java
Patch:
@@ -75,8 +75,8 @@ public ArrayList<String> GetModuleFunctionality(Netlist TheNetlist,
 					+ "-1 DOWNTO 0);");
 			Contents.add("");
 			Contents.add("   -- Control Signals ");
-			Contents.add("   s_in_is_zero  <= '1' WHEN input_vector = conv_std_logic_vector(0,"
-					+ NrOfInputBitsStr + ") ELSE '0';");
+			Contents.add("   s_in_is_zero  <= '1' WHEN input_vector = std_logic_vector(to_unsigned(0,"
+					+ NrOfInputBitsStr + ")) ELSE '0';");
 			Contents.add("");
 			Contents.add("   -- Processes");
 			Contents.add("   make_addr : PROCESS( input_vector , v_select_1_vector , v_select_2_vector , v_select_3_vector , v_select_4_vector )");

File: src/com/hepia/logisim/chronogui/ImageExporter.java
Patch:
@@ -41,7 +41,8 @@
  */
 public class ImageExporter extends javax.swing.JFrame implements ActionListener {
 
-    private File fileToSave;
+	private static final long serialVersionUID = 1L;
+	private File fileToSave;
     private ChronoData chronoData;
     private final int tickWidth = 20;
     //Dimensions

File: src/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -645,7 +645,7 @@ public boolean isConnected(Location loc, Component ignore) {
 	}
 
 	void mutatorAdd(Component c) {
-		logger.debug("mutatorAdd: {}", c);
+		// logger.debug("mutatorAdd: {}", c);
 
 		locker.checkForWritePermission("add");
 
@@ -697,7 +697,7 @@ public void mutatorClear() {
 	}
 
 	void mutatorRemove(Component c) {
-		logger.debug("mutatorRemove: {}", c);
+		//logger.debug("mutatorRemove: {}", c);
 
 		locker.checkForWritePermission("remove");
 

File: src/com/cburch/logisim/Main.java
Patch:
@@ -65,7 +65,7 @@ public static void main(String[] args) throws Exception {
 
 	final static Logger logger = LoggerFactory.getLogger(Main.class);
 
-	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 5,
+	public static final LogisimVersion VERSION = LogisimVersion.get(2, 13, 6,
 			LogisimVersion.FINAL_REVISION);
 	public static final String VERSION_NAME = VERSION.toString();
 	public static final int COPYRIGHT_YEAR = 2014;

File: src/com/cburch/logisim/circuit/Circuit.java
Patch:
@@ -645,7 +645,7 @@ public boolean isConnected(Location loc, Component ignore) {
 	}
 
 	void mutatorAdd(Component c) {
-		// logger.debug("mutatorAdd: {}", c);
+		logger.debug("mutatorAdd: {}", c);
 
 		locker.checkForWritePermission("add");
 
@@ -697,7 +697,7 @@ public void mutatorClear() {
 	}
 
 	void mutatorRemove(Component c) {
-		// logger.debug("mutatorRemove: {}", c);
+		logger.debug("mutatorRemove: {}", c);
 
 		locker.checkForWritePermission("remove");
 

File: src/com/cburch/logisim/file/XmlReaderTest.java
Patch:
@@ -106,7 +106,6 @@ public final void testLabelVHDLInvalid() {
 		assertTrue(XmlReader.labelVHDLInvalid("1A"));
 		assertTrue(XmlReader.labelVHDLInvalid("aaaèaa"));
 		assertTrue(XmlReader.labelVHDLInvalid("1 A"));
-		assertTrue(XmlReader.labelVHDLInvalid("Control Sequencer"));
 		assertTrue(XmlReader.labelVHDLInvalid("A 1"));
 		assertTrue(XmlReader.labelVHDLInvalid("AAA "));
 		assertTrue(XmlReader.labelVHDLInvalid("AA A"));

File: src/com/bfh/logisim/fpgagui/FPGACommanderGui.java
Patch:
@@ -890,13 +890,14 @@ private boolean performDRC() {
 		clearAllMessages();
 		String CircuitName = circuitsList.getSelectedItem().toString();
 		Circuit root = MyProject.getLogisimFile().getCircuit(CircuitName);
+		ArrayList<String> SheetNames = new ArrayList<String>();
 		int DRCResult;
 		if (root == null) {
 			DRCResult = Netlist.DRC_ERROR;
 		} else {
 			DRCResult = root.getNetList().DesignRuleCheckResult(MyReporter,
 					HDLType.getText(), true,
-					MyBoardInformation.fpga.getVendor());
+					MyBoardInformation.fpga.getVendor(),SheetNames);
 		}
 		return (DRCResult == Netlist.DRC_PASSED);
 	}

File: src/com/cburch/logisim/std/gates/AbstractGateHDLGenerator.java
Patch:
@@ -95,11 +95,11 @@ else if (NrOfInputs < 100)
 					AllignmentSpaces = "  ";
 				else
 					AllignmentSpaces = "   ";
-				Contents.add("   s_signal_invert_mask <= conv_std_logic_vector("
+				Contents.add("   s_signal_invert_mask <= std_logic_vector(to_unsigned("
 						+ BubblesString
 						+ ","
 						+ Integer.toString(NrOfInputs)
-						+ ");");
+						+ "));");
 				String WhenLineBegin = "";
 				for (int i = 0; i < 21 + AllignmentSpaces.length(); i++)
 					WhenLineBegin += " ";

File: src/com/cburch/logisim/Main.java
Patch:
@@ -78,6 +78,6 @@ public static void main(String[] args) throws Exception {
 	/**
 	 * URL for the automatic updater
 	 */
-	public static final String UPDATE_URL = "http://eigit.heig-vd.ch/public/logisim/logisim_version.xml";
+	public static final String UPDATE_URL = "https://reds.heig-vd.ch/share/logisim-evolution/logisim_evolution_version.xml";
 
 }

File: src/com/cburch/logisim/gui/start/Startup.java
Patch:
@@ -413,7 +413,7 @@ public boolean autoUpdate() {
 			System.err.println("-- AUTO-UPDATE ABORTED --");
 			return (false);
 		}
-		ArgonXML logisimData = new ArgonXML(in, "logisim");
+		ArgonXML logisimData = new ArgonXML(in, "logisim-evolution");
 
 		// Get the appropriate remote version number
 		LogisimVersion remoteVersion = LogisimVersion.parse(Main.VERSION

File: src/com/cburch/logisim/std/plexers/Demultiplexer.java
Patch:
@@ -61,7 +61,7 @@ public Demultiplexer() {
 				Plexers.ATTR_ENABLE }, new Object[] { Direction.EAST,
 				Plexers.SELECT_BOTTOM_LEFT, Plexers.DEFAULT_SELECT,
 				BitWidth.ONE, Plexers.DEFAULT_TRISTATE, Plexers.DISABLED_ZERO,
-				Boolean.TRUE });
+				Plexers.DEFAULT_ENABLE });
 		setKeyConfigurator(JoinedConfigurator.create(new BitWidthConfigurator(
 				Plexers.ATTR_SELECT, 1, 5, 0), new BitWidthConfigurator(
 				StdAttr.WIDTH)));

File: src/com/cburch/logisim/std/plexers/Multiplexer.java
Patch:
@@ -80,7 +80,7 @@ public Multiplexer() {
 				Plexers.ATTR_DISABLED, Plexers.ATTR_ENABLE }, new Object[] {
 				Direction.EAST, Plexers.SELECT_BOTTOM_LEFT,
 				Plexers.DEFAULT_SELECT, BitWidth.ONE, Plexers.DISABLED_ZERO,
-				Boolean.TRUE });
+				Plexers.DEFAULT_ENABLE });
 		setKeyConfigurator(JoinedConfigurator.create(new BitWidthConfigurator(
 				Plexers.ATTR_SELECT, 1, 5, 0), new BitWidthConfigurator(
 				StdAttr.WIDTH)));

File: src/com/cburch/logisim/std/plexers/Plexers.java
Patch:
@@ -125,6 +125,7 @@ static void drawTrapezoid(Graphics g, Bounds bds, Direction facing,
 					new AttributeOption[] { DISABLED_FLOATING, DISABLED_ZERO });
 	public static final Attribute<Boolean> ATTR_ENABLE = Attributes.forBoolean(
 			"enable", Strings.getter("plexerEnableAttr"));
+	public static final Object DEFAULT_ENABLE = Boolean.FALSE;
 	static final AttributeOption SELECT_BOTTOM_LEFT = new AttributeOption("bl",
 			Strings.getter("plexerSelectBottomLeftOption"));
 

